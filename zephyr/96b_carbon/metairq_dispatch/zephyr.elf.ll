; ModuleID = 'build/96b_carbon/metairq_dispatch/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.k_spinlock] }
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.k_sem = type { %union.anon, i32, i32 }
%struct.thread_rec = type { %struct.k_thread, %struct.k_msgq, [16 x %struct.msg] }
%struct.k_msgq = type { %union.anon, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct.msg = type { i32, i32, i32, i32, i32 }
%struct.anon.3 = type { i32, [40 x i32], [4 x %struct.anon.4] }
%struct.anon.4 = type { i32, [20 x i32] }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [85 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [85 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238368 to i8*), void (i8*)* inttoptr (i32 134236963 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238368 to i8*), void (i8*)* inttoptr (i32 134236943 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238368 to i8*), void (i8*)* inttoptr (i32 134236933 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238368 to i8*), void (i8*)* inttoptr (i32 134237033 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238368 to i8*), void (i8*)* inttoptr (i32 134237023 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238368 to i8*), void (i8*)* inttoptr (i32 134237013 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238368 to i8*), void (i8*)* inttoptr (i32 134237003 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238368 to i8*), void (i8*)* inttoptr (i32 134236993 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238368 to i8*), void (i8*)* inttoptr (i32 134236983 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238368 to i8*), void (i8*)* inttoptr (i32 134236973 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238368 to i8*), void (i8*)* inttoptr (i32 134236953 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [50 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_metairq_thread to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_main to i8*), i8* bitcast (%struct.k_sem* @report_cookie to i8*), i8* bitcast (%struct.k_msgq* @hw_msgs to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_20 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_23 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_20 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_23 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_47 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_50 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_47 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_50 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@log_const_main = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8 3 }, section ".log_const_main", align 4, !dbg !25
@_k_thread_obj_metairq_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !324
@_k_thread_stack_metairq_thread = dso_local global [2112 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.1", align 64, !dbg !320
@.str.1 = private unnamed_addr constant [15 x i8] c"metairq_thread\00", align 1
@_k_thread_data_metairq_thread = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_metairq_thread, %struct.z_thread_stack_element* getelementptr inbounds ([2112 x %struct.z_thread_stack_element], [2112 x %struct.z_thread_stack_element]* @_k_thread_stack_metairq_thread, i32 0, i32 0), i32 2048, void (i8*, i8*, i8*)* @metairq_fn, i8* null, i8* null, i8* null, i32 -16, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_metairq_thread", align 4, !dbg !118
@metairq_thread = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_metairq_thread, align 4, !dbg !271
@report_cookie = dso_local global %struct.k_sem { %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @report_cookie, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @report_cookie, i32 0, i32 0, i32 0) } } }, i32 1, i32 1 }, section "._k_sem.static.report_cookie", align 4, !dbg !275
@threads = internal global [4 x %struct.thread_rec] zeroinitializer, align 8, !dbg !282
@thread_stacks = dso_local global [4 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !315
@stats = dso_local global %struct.anon.3 zeroinitializer, align 4, !dbg !326
@.str.2 = private unnamed_addr constant [46 x i8] c"%c: Thread %d queue full, message %d dropped\0A\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"%c: Starting Thread%d at priority %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"ret == 0\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"CMAKE_SOURCE_DIR/src/main.c\00", align 1
@.str.7 = private unnamed_addr constant [45 x i8] c"%c: M%d T%d mirq %d disp %d proc %d real %d\0A\00", align 1
@.str.8 = private unnamed_addr constant [49 x i8] c"%c:         ---------- Latency (cyc) ----------\0A\00", align 1
@.str.9 = private unnamed_addr constant [49 x i8] c"%c:             Best    Worst     Mean    Stdev\0A\00", align 1
@.str.10 = private unnamed_addr constant [29 x i8] c"%c: MetaIRQ %8d %8d %8d %8d\0A\00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"%c: No events for thread %d\0A\00", align 1
@.str.12 = private unnamed_addr constant [30 x i8] c"%c: Thread%d %8d %8d %8d %8d\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: MetaIRQ Test Complete\0A\00", align 1
@hw_msgs = dso_local global %struct.k_msgq { %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @hw_msgs, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @hw_msgs, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 20, i32 2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i64 1, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static.hw_msgs", align 4, !dbg !352
@_k_fifo_buf_hw_msgs = internal global [40 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/msgdev.c\22.0", align 4, !dbg !389
@max_duty_cyc = dso_local local_unnamed_addr global i32 0, align 4, !dbg !385
@timeout = internal global %struct._timeout zeroinitializer, align 8, !dbg !358
@.str.14 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.24 = private unnamed_addr constant [9 x i8] c"ret == 0\00", align 1
@.str.2.16 = private unnamed_addr constant [30 x i8] c"CMAKE_SOURCE_DIR/src/msgdev.c\00", align 1
@msg_seq = dso_local local_unnamed_addr global i32 0, align 4, !dbg !387
@.str.3.15 = private unnamed_addr constant [14 x i8] c"t == &timeout\00", align 1
@.str.4.19 = private unnamed_addr constant [35 x i8] c"ERROR: Queue full, event dropped!\0A\00", align 1
@rand32.state = internal unnamed_addr global i64 0, align 8, !dbg !392
@.str.25 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !418
@.str.1.27 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.28 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.29 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.30 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.31 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6.32 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7.33 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8.34 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9.35 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10.36 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11.37 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12.38 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !440
@.str.43 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.44 = private unnamed_addr constant [17 x i8] c"chunk_used(h, c)\00", align 1
@.str.2.45 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/lib/os/heap.c\00", align 1
@.str.3.46 = private unnamed_addr constant [56 x i8] c"\09unexpected heap state (double-free?) for memory at %p\0A\00", align 1
@.str.4.47 = private unnamed_addr constant [38 x i8] c"left_chunk(h, right_chunk(h, c)) == c\00", align 1
@.str.5.48 = private unnamed_addr constant [60 x i8] c"\09corrupted heap bounds (buffer overflow?) for memory at %p\0A\00", align 1
@.str.6.49 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.7.50 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@.str.8.51 = private unnamed_addr constant [22 x i8] c"bytes / 8U <= 0x7fffU\00", align 1
@.str.9.52 = private unnamed_addr constant [23 x i8] c"\09heap size is too big\0A\00", align 1
@.str.10.53 = private unnamed_addr constant [33 x i8] c"bytes > heap_footer_bytes(bytes)\00", align 1
@.str.11.54 = private unnamed_addr constant [25 x i8] c"\09heap size is too small\0A\00", align 1
@.str.12.55 = private unnamed_addr constant [41 x i8] c"heap_sz > chunksz(sizeof(struct z_heap))\00", align 1
@.str.13.56 = private unnamed_addr constant [43 x i8] c"chunk0_size + min_chunk_size(h) <= heap_sz\00", align 1
@.str.59 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !450
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !501
@.str.69 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.71 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.72 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.70 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.74 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.75 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.73 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.76 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.77 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.78 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.79 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.80 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.81 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.82 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.83 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.86 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.87 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.88 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.89 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.101 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.93 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.94 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.95 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.96 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.97 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.98 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.99 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.100 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.91 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14.92 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25.90 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.107 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.107, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !530
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !663
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !536
@.str.113 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.114 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.115 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.116 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.121 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.122 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !672
@.str.6.123 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.124 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.117 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.118 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !708
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.133, i32 0, i32 0), %struct.k_spinlock { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.134, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !718
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !723
@.str.133 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.134 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.137 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.138 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.139 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !743
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !912
@.str.4.135 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !874
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !857
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.135, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !830
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !846
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !876
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !889
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !891
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !893
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !895
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !897
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !899
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !901
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !903
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !905
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !907
@__devicehdl_dts_ord_9 = dso_local constant [14 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 32767], section ".__device_handles_pass2", align 2, !dbg !917
@.str.140 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !948
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1043
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1032
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1084
@__devicehdl_dts_ord_25 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !937
@.str.149 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1150
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1429
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1399
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1385
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1327
@__devicehdl_dts_ord_20 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !935
@.str.1.157 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1431
@__devstate_dts_ord_20 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1403
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1401
@__init___device_dts_ord_20 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_20 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1341
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !933
@.str.2.158 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1444
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1407
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1405
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1350
@__devicehdl_dts_ord_23 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !931
@.str.3.159 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1446
@__devstate_dts_ord_23 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1411
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1409
@__init___device_dts_ord_23 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_23 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1359
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !929
@.str.4.160 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1448
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1415
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1413
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1365
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !927
@.str.5.161 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1450
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1419
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1417
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1371
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !925
@.str.6.162 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1452
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1423
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1421
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1377
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !923
@.str.7.163 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1454
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1427
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1425
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1383
@.str.8.150 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.156 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32.152 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33.155 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34.151 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35.153 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36.154 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.167 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.167, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1456
@__devicehdl_dts_ord_47 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !943
@.str.1.170 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_47 }, align 4, !dbg !1628
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1683
@__devstate_dts_ord_47 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1622
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1685
@__device_dts_ord_47 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.170, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_47, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_47, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1601
@__init___device_dts_ord_47 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_47 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1603
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !941
@.str.2.177 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44 }, align 4, !dbg !1691
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1624
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1701
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.177, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1612
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1614
@__devicehdl_dts_ord_50 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !939
@.str.3.178 = private unnamed_addr constant [16 x i8] c"serial@40011400\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073812480 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_50 }, align 4, !dbg !1703
@__devstate_dts_ord_50 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1626
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1713
@__device_dts_ord_50 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.178, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_50, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_50, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1618
@__init___device_dts_ord_50 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_50 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1620
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1672
@__pinctrl_dev_config__device_dts_ord_47 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_47, i32 0, i32 0), i8 1 }, align 4, !dbg !1675
@__pinctrl_states__device_dts_ord_47 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_47, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1677
@__pinctrl_state_pins_0__device_dts_ord_47 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1680
@.str.4.172 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.5.173 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.6.174 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.7.175 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.8.176 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.9.181 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.10.183 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.11.184 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.140, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([14 x i16], [14 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1016
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1693
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1695
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1697
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !1699
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 32 }], align 4, !dbg !1705
@__pinctrl_dev_config__device_dts_ord_50 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_50, i32 0, i32 0), i8 1 }, align 4, !dbg !1707
@__pinctrl_states__device_dts_ord_50 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_50, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1709
@__pinctrl_state_pins_0__device_dts_ord_50 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1224, i32 512 }, %struct._thread_arch { i32 1256, i32 0 }], align 4, !dbg !1711
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.12 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1720
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1831
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1833
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1829
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1824
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1798
@.str.188 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.189 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.190 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.191 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.192 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.193 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_25, %struct.device* @__device_dts_ord_20, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_23, %struct.device* @__device_dts_ord_73, %struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1835
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.149, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1325
@__device_dts_ord_20 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.157, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_20, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_20, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1339
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.158, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1348
@__device_dts_ord_23 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.159, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_23, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_23, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1357
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.160, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1363
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.161, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1369
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.162, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1375
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.163, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1381
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1925
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1967
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1970
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1975
@.str.227 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.231 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.232 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.233 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.234 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.235 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.6.236 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.7.237 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@.str.8.241 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.9.242 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.10.243 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.11.244 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.12.245 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.13.240 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.14.239 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.241, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.242, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10.243, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11.244, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.245, i32 0, i32 0)], align 4
@.str.247 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.247, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1982
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2207
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2194
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2202
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2213
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2218
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.5.256 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.261, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.262, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.263, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.264, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.265, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.266, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.260, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.267, i32 0, i32 0)], align 4, !dbg !2246
@.str.261 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.262 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.263 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.264 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.265 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.266 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.260 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.267 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2360
@.str.8.259 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.270 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.271 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.272 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.273 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.277 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.278 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.281 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.282 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.291 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.292 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.293 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.300 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.301 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.302 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/msg_q.c\00", align 1
@.str.3.303 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.4.304 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.305 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.306 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.307 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.308 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@lock.313 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2373
@.str.314 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.320 = private unnamed_addr constant [78 x i8] c"((arch_is_in_isr() == 0) || ((timeout).ticks == (((k_timeout_t) {0})).ticks))\00", align 1
@.str.2.321 = private unnamed_addr constant [25 x i8] c"ZEPHYR_BASE/kernel/sem.c\00", align 1
@.str.3.322 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.4.315 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.316 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.317 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.323 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.324 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2398
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2508
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2511
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2513
@.str.325 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.345 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.332 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.352 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.362 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.335 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.357 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.331 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.369 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.370 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.378 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.379 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.380 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.381 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.326 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.327 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.328 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.329 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.330 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.334 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.349 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.358 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.359 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2204
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2211
@.str.23.373 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.387 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.388 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.389 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.390 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2515
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2545
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2550
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2069
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2548
@.str.4.391 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.392 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.393 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.397 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.398 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.418 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2556
@.str.420 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.429 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.422 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/kheap.c\00", align 1
@.str.3.430 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4
@.str.4.421 = private unnamed_addr constant [22 x i8] c"h <= _k_heap_list_end\00", align 1
@.str.5.423 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.6.426 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.7.427 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.8.428 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.9.431 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.10.432 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3310 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #26, !dbg !3312, !srcloc !3313
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #26, !dbg !3314, !srcloc !3315
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #26, !dbg !3316, !srcloc !3317
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -26) #26, !dbg !3318, !srcloc !3319
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -29) #26, !dbg !3320, !srcloc !3321
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #26, !dbg !3322, !srcloc !3323
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -29) #26, !dbg !3324, !srcloc !3325
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #26, !dbg !3326, !srcloc !3327
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -41) #26, !dbg !3328, !srcloc !3329
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #26, !dbg !3330, !srcloc !3331
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #26, !dbg !3332, !srcloc !3333
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #26, !dbg !3334, !srcloc !3335
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #26, !dbg !3336, !srcloc !3337
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #26, !dbg !3338, !srcloc !3339
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #26, !dbg !3340, !srcloc !3341
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #26, !dbg !3342, !srcloc !3343
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #26, !dbg !3344, !srcloc !3345
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #26, !dbg !3346, !srcloc !3347
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #26, !dbg !3348, !srcloc !3349
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #26, !dbg !3350, !srcloc !3351
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #26, !dbg !3352, !srcloc !3353
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #26, !dbg !3354, !srcloc !3355
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #26, !dbg !3356, !srcloc !3357
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #26, !dbg !3358, !srcloc !3359
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #26, !dbg !3360, !srcloc !3361
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #26, !dbg !3362, !srcloc !3363
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #26, !dbg !3364, !srcloc !3365
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #26, !dbg !3366, !srcloc !3369
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #26, !dbg !3370, !srcloc !3371
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #26, !dbg !3372, !srcloc !3373
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #26, !dbg !3374, !srcloc !3375
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #26, !dbg !3376, !srcloc !3377
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #26, !dbg !3378, !srcloc !3379
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #26, !dbg !3380, !srcloc !3381
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #26, !dbg !3382, !srcloc !3383
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #26, !dbg !3384, !srcloc !3385
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #26, !dbg !3386, !srcloc !3387
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #26, !dbg !3388, !srcloc !3389
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #26, !dbg !3390, !srcloc !3391
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #26, !dbg !3392, !srcloc !3393
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #26, !dbg !3394, !srcloc !3395
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #26, !dbg !3396, !srcloc !3397
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #26, !dbg !3398, !srcloc !3399
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #26, !dbg !3400, !srcloc !3401
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #26, !dbg !3402, !srcloc !3403
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #26, !dbg !3404, !srcloc !3405
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #26, !dbg !3406, !srcloc !3407
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #26, !dbg !3408, !srcloc !3409
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #26, !dbg !3410, !srcloc !3411
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #26, !dbg !3412, !srcloc !3413
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #26, !dbg !3414, !srcloc !3415
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #26, !dbg !3416, !srcloc !3417
  ret void, !dbg !3418
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @metairq_fn(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !3421 {
  %4 = alloca %struct.msg, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3423, metadata !DIExpression()), !dbg !3429
  call void @llvm.dbg.value(metadata i8* %1, metadata !3424, metadata !DIExpression()), !dbg !3429
  call void @llvm.dbg.value(metadata i8* %2, metadata !3425, metadata !DIExpression()), !dbg !3429
  %5 = bitcast %struct.msg* %4 to i8*
  %6 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 1
  %7 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 4
  %8 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 2
  %9 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 0
  br label %10, !dbg !3430

10:                                               ; preds = %3, %23
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #26, !dbg !3431
  call void @llvm.dbg.declare(metadata %struct.msg* %4, metadata !3426, metadata !DIExpression()), !dbg !3432
  call void @message_dev_fetch(%struct.msg* noundef nonnull %4) #27, !dbg !3433
  %11 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3434
  %12 = load i32, i32* %6, align 4, !dbg !3435
  %13 = sub i32 %11, %12, !dbg !3436
  store i32 %13, i32* %7, align 4, !dbg !3437
  %14 = load i32, i32* %8, align 4, !dbg !3438
  %15 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %14, i32 1, !dbg !3439
  %16 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %15, i8* noundef nonnull %5) #28, !dbg !3440
  call void @llvm.dbg.value(metadata i32 %16, metadata !3428, metadata !DIExpression()), !dbg !3441
  %17 = icmp eq i32 %16, 0, !dbg !3442
  br i1 %17, label %23, label %18, !dbg !3444

18:                                               ; preds = %10
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #28, !dbg !3445
  %20 = zext i8 %19 to i32, !dbg !3445
  %21 = load i32, i32* %8, align 4, !dbg !3445
  %22 = load i32, i32* %9, align 4, !dbg !3445
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i32 0, i32 0), i32 noundef %20, i32 noundef %21, i32 noundef %22) #27, !dbg !3445
  br label %23, !dbg !3451

23:                                               ; preds = %18, %10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #26, !dbg !3452
  br label %10, !dbg !3430, !llvm.loop !3453
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !3454 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #28, !dbg !3455
  ret i32 %1, !dbg !3456
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !3457 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3469, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !3467, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i8* %1, metadata !3468, metadata !DIExpression()), !dbg !3470
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3471, !srcloc !3473
  %3 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] zeroinitializer) #27, !dbg !3474
  ret i32 %3, !dbg !3475
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #5 !dbg !3476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3481, metadata !DIExpression()), !dbg !3482
  %2 = icmp eq i32 %0, 2, !dbg !3483
  %3 = select i1 %2, i8 87, i8 63, !dbg !3483
  %4 = icmp eq i32 %0, 3, !dbg !3483
  %5 = select i1 %4, i8 73, i8 %3, !dbg !3483
  ret i8 %5, !dbg !3484
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !3485 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !3487
  ret i32 %1, !dbg !3488
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3489 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3491, metadata !DIExpression()), !dbg !3496
  br label %2, !dbg !3497

1:                                                ; preds = %2
  tail call void @message_dev_init() #27, !dbg !3498
  ret void, !dbg !3499

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %11, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !3491, metadata !DIExpression()), !dbg !3496
  %4 = add nsw i32 %3, -2, !dbg !3500
  call void @llvm.dbg.value(metadata i32 %4, metadata !3493, metadata !DIExpression()), !dbg !3501
  %5 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %3, i32 1, !dbg !3502
  %6 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %3, i32 2, i32 0, !dbg !3503
  %7 = bitcast %struct.msg* %6 to i8*, !dbg !3504
  tail call void @k_msgq_init(%struct.k_msgq* noundef nonnull %5, i8* noundef nonnull %7, i32 noundef 20, i32 noundef 16) #27, !dbg !3505
  %8 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %3, i32 0, !dbg !3506
  %9 = getelementptr inbounds [4 x [2112 x %struct.z_thread_stack_element]], [4 x [2112 x %struct.z_thread_stack_element]]* @thread_stacks, i32 0, i32 %3, i32 0, !dbg !3507
  %10 = inttoptr i32 %3 to i8*, !dbg !3508
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef nonnull %8, %struct.z_thread_stack_element* noundef nonnull %9, i8* noundef %10, i32 noundef %4) #28, !dbg !3509
  %11 = add nuw nsw i32 %3, 1, !dbg !3510
  call void @llvm.dbg.value(metadata i32 %11, metadata !3491, metadata !DIExpression()), !dbg !3496
  %12 = icmp eq i32 %11, 4, !dbg !3511
  br i1 %12, label %1, label %2, !dbg !3497, !llvm.loop !3512
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !3514 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3527, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3518, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3519, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata i32 2048, metadata !3520, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @thread_fn, metadata !3521, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata i8* %2, metadata !3522, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata i8* null, metadata !3523, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata i8* null, metadata !3524, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata i32 %3, metadata !3525, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata i32 0, metadata !3526, metadata !DIExpression()), !dbg !3528
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3529, !srcloc !3531
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 2048, void (i8*, i8*, i8*)* noundef nonnull @thread_fn, i8* noundef %2, i8* noundef null, i8* noundef null, i32 noundef %3, i32 noundef 0, [1 x i64] zeroinitializer) #27, !dbg !3532
  ret void, !dbg !3533
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @thread_fn(i8* noundef %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !3534 {
  %4 = alloca %struct.msg, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3536, metadata !DIExpression()), !dbg !3549
  call void @llvm.dbg.value(metadata i8* %1, metadata !3537, metadata !DIExpression()), !dbg !3549
  call void @llvm.dbg.value(metadata i8* %2, metadata !3538, metadata !DIExpression()), !dbg !3549
  %6 = ptrtoint i8* %0 to i32, !dbg !3550
  call void @llvm.dbg.value(metadata i32 %6, metadata !3539, metadata !DIExpression()), !dbg !3549
  %7 = bitcast %struct.msg* %4 to i8*, !dbg !3551
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #26, !dbg !3551
  call void @llvm.dbg.declare(metadata %struct.msg* %4, metadata !3540, metadata !DIExpression()), !dbg !3552
  %8 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #28, !dbg !3553
  %9 = zext i8 %8 to i32, !dbg !3553
  %10 = tail call fastcc %struct.k_thread* @k_current_get() #29, !dbg !3553
  %11 = tail call fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %10) #28, !dbg !3553
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i32 0, i32 0), i32 noundef %9, i32 noundef %6, i32 noundef %11) #27, !dbg !3553
  %12 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %6, i32 1
  %13 = call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %12, i8* noundef nonnull %7) #28, !dbg !3558
  call void @llvm.dbg.value(metadata i32 %13, metadata !3541, metadata !DIExpression()), !dbg !3559
  %14 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3560
  call void @llvm.dbg.value(metadata i32 %14, metadata !3543, metadata !DIExpression()), !dbg !3559
  %15 = icmp eq i32 %13, 0, !dbg !3561
  br i1 %15, label %16, label %28, !dbg !3564

16:                                               ; preds = %3
  %17 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 3
  %18 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 0
  %19 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 4
  %20 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 1
  %21 = bitcast i32* %5 to i8*
  br label %22, !dbg !3564

22:                                               ; preds = %16, %42
  %23 = phi i32 [ %14, %16 ], [ %53, %42 ]
  %24 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3565
  %25 = sub i32 %24, %23, !dbg !3566
  %26 = load i32, i32* %17, align 4, !dbg !3567
  %27 = icmp ult i32 %25, %26, !dbg !3568
  br i1 %27, label %29, label %42, !dbg !3569

28:                                               ; preds = %42, %3
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 191) #27, !dbg !3570
  call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 191) #27, !dbg !3570
  unreachable, !dbg !3570

29:                                               ; preds = %22, %32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21), !dbg !3572
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3544, metadata !DIExpression()), !dbg !3573
  store volatile i32 0, i32* %5, align 4, !dbg !3573
  %30 = load volatile i32, i32* %5, align 4, !dbg !3574
  %31 = icmp slt i32 %30, 100, !dbg !3576
  br i1 %31, label %37, label %32, !dbg !3577

32:                                               ; preds = %37, %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21), !dbg !3578
  %33 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3565
  %34 = sub i32 %33, %23, !dbg !3566
  %35 = load i32, i32* %17, align 4, !dbg !3567
  %36 = icmp ult i32 %34, %35, !dbg !3568
  br i1 %36, label %29, label %42, !dbg !3569, !llvm.loop !3579

37:                                               ; preds = %29, %37
  %38 = load volatile i32, i32* %5, align 4, !dbg !3581
  %39 = add nsw i32 %38, 1, !dbg !3581
  store volatile i32 %39, i32* %5, align 4, !dbg !3581
  %40 = load volatile i32, i32* %5, align 4, !dbg !3574
  %41 = icmp slt i32 %40, 100, !dbg !3576
  br i1 %41, label %37, label %32, !dbg !3577, !llvm.loop !3582

42:                                               ; preds = %32, %22
  %43 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3584
  %44 = sub i32 %43, %23, !dbg !3585
  call void @llvm.dbg.value(metadata i32 %44, metadata !3548, metadata !DIExpression()), !dbg !3559
  %45 = load i32, i32* %18, align 4, !dbg !3586
  %46 = load i32, i32* %19, align 4, !dbg !3586
  %47 = load i32, i32* %20, align 4, !dbg !3586
  %48 = sub i32 %23, %47, !dbg !3586
  %49 = load i32, i32* %17, align 4, !dbg !3586
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7, i32 0, i32 0), i32 noundef %9, i32 noundef %45, i32 noundef %6, i32 noundef %46, i32 noundef %48, i32 noundef %49, i32 noundef %44) #27, !dbg !3586
  %50 = load i32, i32* %20, align 4, !dbg !3591
  %51 = sub i32 %23, %50, !dbg !3592
  call fastcc void @record_latencies(%struct.msg* noundef nonnull %4, i32 noundef %51) #28, !dbg !3593
  %52 = call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %12, i8* noundef nonnull %7) #28, !dbg !3558
  call void @llvm.dbg.value(metadata i32 %52, metadata !3541, metadata !DIExpression()), !dbg !3559
  %53 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3560
  call void @llvm.dbg.value(metadata i32 %53, metadata !3543, metadata !DIExpression()), !dbg !3559
  %54 = icmp eq i32 %52, 0, !dbg !3561
  br i1 %54, label %22, label %28, !dbg !3564, !llvm.loop !3594
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #6 !dbg !3597 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #29, !dbg !3600
  ret %struct.k_thread* %1, !dbg !3601
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3602 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3606, metadata !DIExpression()), !dbg !3607
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3608, !srcloc !3610
  %2 = tail call i32 @z_impl_k_thread_priority_get(%struct.k_thread* noundef %0) #27, !dbg !3611
  ret i32 %2, !dbg !3612
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !3613 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3619, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !3617, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata i8* %1, metadata !3618, metadata !DIExpression()), !dbg !3620
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3621, !srcloc !3623
  %3 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] [i64 -1]) #27, !dbg !3624
  ret i32 %3, !dbg !3625
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @record_latencies(%struct.msg* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !3626 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !3631, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata i32 %1, metadata !3632, metadata !DIExpression()), !dbg !3644
  %7 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 0, !dbg !3645
  %8 = load i32, i32* %7, align 4, !dbg !3645
  %9 = icmp ugt i32 %8, 39, !dbg !3647
  br i1 %9, label %60, label %10, !dbg !3648

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 2, !dbg !3649
  %12 = load i32, i32* %11, align 4, !dbg !3649
  call void @llvm.dbg.value(metadata i32 %12, metadata !3633, metadata !DIExpression()), !dbg !3644
  %13 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %12, i32 0, !dbg !3650
  %14 = load i32, i32* %13, align 4, !dbg !3651
  %15 = add i32 %14, 1, !dbg !3651
  store i32 %15, i32* %13, align 4, !dbg !3651
  call void @llvm.dbg.value(metadata i32 %14, metadata !3634, metadata !DIExpression()), !dbg !3644
  %16 = icmp ult i32 %14, 20, !dbg !3652
  br i1 %16, label %17, label %19, !dbg !3654

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %12, i32 1, i32 %14, !dbg !3655
  store i32 %1, i32* %18, align 4, !dbg !3657
  br label %19, !dbg !3658

19:                                               ; preds = %17, %10
  %20 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 4, !dbg !3659
  %21 = load i32, i32* %20, align 4, !dbg !3659
  %22 = tail call fastcc i32 @atomic_inc() #28, !dbg !3660
  %23 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 1, i32 %22, !dbg !3661
  store i32 %21, i32* %23, align 4, !dbg !3662
  %24 = load i32, i32* %7, align 4, !dbg !3663
  %25 = icmp eq i32 %24, 39, !dbg !3664
  br i1 %25, label %26, label %60, !dbg !3665

26:                                               ; preds = %19
  %27 = bitcast i32* %3 to i8*, !dbg !3666
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #26, !dbg !3666
  %28 = bitcast i32* %4 to i8*, !dbg !3666
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #26, !dbg !3666
  %29 = bitcast i32* %5 to i8*, !dbg !3666
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #26, !dbg !3666
  %30 = bitcast i32* %6 to i8*, !dbg !3666
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #26, !dbg !3666
  %31 = tail call fastcc i32 @k_sem_take() #28, !dbg !3667
  call void @llvm.dbg.value(metadata i32 %31, metadata !3641, metadata !DIExpression()), !dbg !3668
  %32 = icmp eq i32 %31, 0, !dbg !3669
  br i1 %32, label %34, label %33, !dbg !3672

33:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 148) #27, !dbg !3673
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 148) #27, !dbg !3673
  unreachable, !dbg !3673

34:                                               ; preds = %26
  tail call fastcc void @k_msleep() #28, !dbg !3675
  %35 = load i32, i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), align 4, !dbg !3676
  call void @llvm.dbg.value(metadata i32* %3, metadata !3635, metadata !DIExpression(DW_OP_deref)), !dbg !3668
  call void @llvm.dbg.value(metadata i32* %4, metadata !3638, metadata !DIExpression(DW_OP_deref)), !dbg !3668
  call void @llvm.dbg.value(metadata i32* %5, metadata !3639, metadata !DIExpression(DW_OP_deref)), !dbg !3668
  call void @llvm.dbg.value(metadata i32* %6, metadata !3640, metadata !DIExpression(DW_OP_deref)), !dbg !3668
  call fastcc void @calc_stats(i32* noundef getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 1, i32 0), i32 noundef %35, i32* noundef nonnull %4, i32* noundef nonnull %3, i32* noundef nonnull %5, i32* noundef nonnull %6) #28, !dbg !3677
  %36 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #28, !dbg !3678
  %37 = zext i8 %36 to i32, !dbg !3678
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.8, i32 0, i32 0), i32 noundef %37) #27, !dbg !3678
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9, i32 0, i32 0), i32 noundef %37) #27, !dbg !3683
  %38 = load i32, i32* %4, align 4, !dbg !3688
  call void @llvm.dbg.value(metadata i32 %38, metadata !3638, metadata !DIExpression()), !dbg !3668
  %39 = load i32, i32* %3, align 4, !dbg !3688
  call void @llvm.dbg.value(metadata i32 %39, metadata !3635, metadata !DIExpression()), !dbg !3668
  %40 = load i32, i32* %5, align 4, !dbg !3688
  call void @llvm.dbg.value(metadata i32 %40, metadata !3639, metadata !DIExpression()), !dbg !3668
  %41 = load i32, i32* %6, align 4, !dbg !3688
  call void @llvm.dbg.value(metadata i32 %41, metadata !3640, metadata !DIExpression()), !dbg !3668
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i32 0, i32 0), i32 noundef %37, i32 noundef %38, i32 noundef %39, i32 noundef %40, i32 noundef %41) #27, !dbg !3688
  call void @llvm.dbg.value(metadata i32 0, metadata !3642, metadata !DIExpression()), !dbg !3693
  br label %43, !dbg !3694

42:                                               ; preds = %57
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef %37) #27, !dbg !3695
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #26, !dbg !3700
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #26, !dbg !3700
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #26, !dbg !3700
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #26, !dbg !3700
  br label %60, !dbg !3701

43:                                               ; preds = %34, %57
  %44 = phi i32 [ 0, %34 ], [ %58, %57 ]
  call void @llvm.dbg.value(metadata i32 %44, metadata !3642, metadata !DIExpression()), !dbg !3693
  %45 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %44, i32 0, !dbg !3702
  %46 = load i32, i32* %45, align 4, !dbg !3702
  %47 = icmp eq i32 %46, 0, !dbg !3706
  br i1 %47, label %48, label %51, !dbg !3707

48:                                               ; preds = %43
  %49 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 2) #28, !dbg !3708
  %50 = zext i8 %49 to i32, !dbg !3708
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i32 0, i32 0), i32 noundef %50, i32 noundef %44) #27, !dbg !3708
  br label %57, !dbg !3714

51:                                               ; preds = %43
  %52 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %44, i32 1, i32 0, !dbg !3715
  call void @llvm.dbg.value(metadata i32* %3, metadata !3635, metadata !DIExpression(DW_OP_deref)), !dbg !3668
  call void @llvm.dbg.value(metadata i32* %4, metadata !3638, metadata !DIExpression(DW_OP_deref)), !dbg !3668
  call void @llvm.dbg.value(metadata i32* %5, metadata !3639, metadata !DIExpression(DW_OP_deref)), !dbg !3668
  call void @llvm.dbg.value(metadata i32* %6, metadata !3640, metadata !DIExpression(DW_OP_deref)), !dbg !3668
  call fastcc void @calc_stats(i32* noundef nonnull %52, i32 noundef %46, i32* noundef nonnull %4, i32* noundef nonnull %3, i32* noundef nonnull %5, i32* noundef nonnull %6) #28, !dbg !3716
  %53 = load i32, i32* %4, align 4, !dbg !3717
  call void @llvm.dbg.value(metadata i32 %53, metadata !3638, metadata !DIExpression()), !dbg !3668
  %54 = load i32, i32* %3, align 4, !dbg !3717
  call void @llvm.dbg.value(metadata i32 %54, metadata !3635, metadata !DIExpression()), !dbg !3668
  %55 = load i32, i32* %5, align 4, !dbg !3717
  call void @llvm.dbg.value(metadata i32 %55, metadata !3639, metadata !DIExpression()), !dbg !3668
  %56 = load i32, i32* %6, align 4, !dbg !3717
  call void @llvm.dbg.value(metadata i32 %56, metadata !3640, metadata !DIExpression()), !dbg !3668
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i32 0, i32 0), i32 noundef %37, i32 noundef %44, i32 noundef %53, i32 noundef %54, i32 noundef %55, i32 noundef %56) #27, !dbg !3717
  br label %57, !dbg !3722

57:                                               ; preds = %51, %48
  %58 = add nuw nsw i32 %44, 1, !dbg !3723
  call void @llvm.dbg.value(metadata i32 %58, metadata !3642, metadata !DIExpression()), !dbg !3693
  %59 = icmp eq i32 %58, 4, !dbg !3724
  br i1 %59, label %42, label %43, !dbg !3694, !llvm.loop !3725

60:                                               ; preds = %19, %42, %2
  ret void, !dbg !3727
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_inc() unnamed_addr #7 !dbg !3728 {
  call void @llvm.dbg.value(metadata i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), metadata !3735, metadata !DIExpression()), !dbg !3736
  %1 = tail call fastcc i32 @atomic_add() #28, !dbg !3737
  ret i32 %1, !dbg !3738
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_sem_take() unnamed_addr #1 !dbg !3739 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3745, metadata !DIExpression()), !dbg !3746
  call void @llvm.dbg.value(metadata %struct.k_sem* @report_cookie, metadata !3744, metadata !DIExpression()), !dbg !3746
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3747, !srcloc !3749
  %1 = tail call i32 @z_impl_k_sem_take(%struct.k_sem* noundef nonnull @report_cookie, [1 x i64] [i64 -1]) #27, !dbg !3750
  ret i32 %1, !dbg !3751
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep() unnamed_addr #1 !dbg !3752 {
  call void @llvm.dbg.value(metadata i32 100, metadata !3756, metadata !DIExpression()), !dbg !3757
  tail call fastcc void @k_sleep([1 x i64] [i64 1000]) #28, !dbg !3758
  ret void, !dbg !3759
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc void @calc_stats(i32* nocapture noundef readonly %0, i32 noundef %1, i32* nocapture noundef %2, i32* nocapture noundef %3, i32* nocapture noundef %4, i32* nocapture noundef writeonly %5) unnamed_addr #8 !dbg !3760 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3766, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i32 %1, metadata !3767, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i32* %2, metadata !3768, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i32* %3, metadata !3769, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i32* %4, metadata !3770, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i32* %5, metadata !3771, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i64 0, metadata !3772, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i64 0, metadata !3773, metadata !DIExpression()), !dbg !3781
  store i32 2147483647, i32* %2, align 4, !dbg !3782
  store i32 0, i32* %3, align 4, !dbg !3783
  call void @llvm.dbg.value(metadata i32 0, metadata !3774, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata i64 0, metadata !3772, metadata !DIExpression()), !dbg !3781
  %7 = icmp eq i32 %1, 0, !dbg !3785
  br i1 %7, label %8, label %21, !dbg !3787

8:                                                ; preds = %6
  %9 = lshr i32 %1, 1, !dbg !3788
  %10 = trunc i32 %9 to i8, !dbg !3789
  %11 = trunc i32 %1 to i8, !dbg !3789
  %12 = udiv i8 %10, %11, !dbg !3789
  %13 = zext i8 %12 to i32, !dbg !3790
  store i32 %13, i32* %4, align 4, !dbg !3791
  call void @llvm.dbg.value(metadata i32 0, metadata !3776, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i64 0, metadata !3773, metadata !DIExpression()), !dbg !3781
  br label %38, !dbg !3793

14:                                               ; preds = %21
  %15 = lshr i32 %1, 1, !dbg !3788
  %16 = zext i32 %15 to i64, !dbg !3794
  %17 = add i64 %35, %16, !dbg !3795
  %18 = zext i32 %1 to i64, !dbg !3796
  %19 = udiv i64 %17, %18, !dbg !3789
  %20 = trunc i64 %19 to i32, !dbg !3790
  store i32 %20, i32* %4, align 4, !dbg !3791
  call void @llvm.dbg.value(metadata i32 0, metadata !3776, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i64 0, metadata !3773, metadata !DIExpression()), !dbg !3781
  br i1 %7, label %38, label %45, !dbg !3793

21:                                               ; preds = %6, %21
  %22 = phi i64 [ %35, %21 ], [ 0, %6 ]
  %23 = phi i32 [ %36, %21 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !3772, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i32 %23, metadata !3774, metadata !DIExpression()), !dbg !3784
  %24 = load i32, i32* %2, align 4, !dbg !3797
  %25 = getelementptr inbounds i32, i32* %0, i32 %23, !dbg !3797
  %26 = load i32, i32* %25, align 4, !dbg !3797
  %27 = icmp ult i32 %24, %26, !dbg !3797
  %28 = select i1 %27, i32 %24, i32 %26, !dbg !3797
  store i32 %28, i32* %2, align 4, !dbg !3799
  %29 = load i32, i32* %3, align 4, !dbg !3800
  %30 = load i32, i32* %25, align 4, !dbg !3800
  %31 = icmp ugt i32 %29, %30, !dbg !3800
  %32 = select i1 %31, i32 %29, i32 %30, !dbg !3800
  store i32 %32, i32* %3, align 4, !dbg !3801
  %33 = load i32, i32* %25, align 4, !dbg !3802
  %34 = zext i32 %33 to i64, !dbg !3802
  %35 = add i64 %22, %34, !dbg !3803
  call void @llvm.dbg.value(metadata i64 %35, metadata !3772, metadata !DIExpression()), !dbg !3781
  %36 = add nuw nsw i32 %23, 1, !dbg !3804
  call void @llvm.dbg.value(metadata i32 %36, metadata !3774, metadata !DIExpression()), !dbg !3784
  %37 = icmp eq i32 %36, %1, !dbg !3785
  br i1 %37, label %14, label %21, !dbg !3787, !llvm.loop !3805

38:                                               ; preds = %45, %8, %14
  %39 = phi i64 [ 0, %14 ], [ 0, %8 ], [ %18, %45 ]
  %40 = phi i64 [ %16, %14 ], [ 0, %8 ], [ %16, %45 ]
  %41 = phi i64 [ 0, %14 ], [ 0, %8 ], [ %53, %45 ], !dbg !3781
  %42 = add i64 %41, %40, !dbg !3807
  %43 = udiv i64 %42, %39, !dbg !3808
  %44 = tail call fastcc i32 @isqrt(i64 noundef %43) #28, !dbg !3809
  store i32 %44, i32* %5, align 4, !dbg !3810
  ret void, !dbg !3811

45:                                               ; preds = %14, %45
  %46 = phi i32 [ %54, %45 ], [ 0, %14 ]
  %47 = phi i64 [ %53, %45 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %46, metadata !3776, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i64 %47, metadata !3773, metadata !DIExpression()), !dbg !3781
  %48 = getelementptr inbounds i32, i32* %0, i32 %46, !dbg !3812
  %49 = load i32, i32* %48, align 4, !dbg !3812
  %50 = sub i32 %49, %20, !dbg !3813
  %51 = sext i32 %50 to i64, !dbg !3814
  call void @llvm.dbg.value(metadata i64 %51, metadata !3778, metadata !DIExpression()), !dbg !3815
  %52 = mul nsw i64 %51, %51, !dbg !3816
  %53 = add i64 %52, %47, !dbg !3817
  call void @llvm.dbg.value(metadata i64 %53, metadata !3773, metadata !DIExpression()), !dbg !3781
  %54 = add nuw nsw i32 %46, 1, !dbg !3818
  call void @llvm.dbg.value(metadata i32 %54, metadata !3776, metadata !DIExpression()), !dbg !3792
  %55 = icmp eq i32 %54, %1, !dbg !3819
  br i1 %55, label %38, label %45, !dbg !3793, !llvm.loop !3820
}

; Function Attrs: nofree noinline nosync nounwind optsize readnone
define internal fastcc i32 @isqrt(i64 noundef %0) unnamed_addr #9 !dbg !3822 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3826, metadata !DIExpression()), !dbg !3831
  %2 = icmp ugt i64 %0, 1, !dbg !3832
  %3 = trunc i64 %0 to i32, !dbg !3833
  br i1 %2, label %6, label %4, !dbg !3833

4:                                                ; preds = %1, %6
  %5 = phi i32 [ %15, %6 ], [ %3, %1 ]
  ret i32 %5, !dbg !3834

6:                                                ; preds = %1
  %7 = lshr i64 %0, 2, !dbg !3835
  %8 = tail call fastcc i32 @isqrt(i64 noundef %7) #28, !dbg !3836
  %9 = shl i32 %8, 1, !dbg !3837
  %10 = zext i32 %9 to i64, !dbg !3836
  call void @llvm.dbg.value(metadata i64 %10, metadata !3827, metadata !DIExpression()), !dbg !3838
  %11 = or i64 %10, 1, !dbg !3839
  call void @llvm.dbg.value(metadata i64 %11, metadata !3830, metadata !DIExpression()), !dbg !3838
  %12 = mul nuw i64 %11, %11, !dbg !3840
  %13 = icmp ugt i64 %12, %0, !dbg !3841
  %14 = select i1 %13, i64 %10, i64 %11, !dbg !3842
  %15 = trunc i64 %14 to i32
  br label %4
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3843 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3847, metadata !DIExpression()), !dbg !3848
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3849, !srcloc !3851
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #27, !dbg !3852
  ret void, !dbg !3853
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_add() unnamed_addr #7 !dbg !3854 {
  call void @llvm.dbg.value(metadata i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), metadata !3858, metadata !DIExpression()), !dbg !3860
  call void @llvm.dbg.value(metadata i32 1, metadata !3859, metadata !DIExpression()), !dbg !3860
  %1 = atomicrmw add i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), i32 1 seq_cst, align 4, !dbg !3861
  ret i32 %1, !dbg !3862
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #6 !dbg !3863 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3864, !srcloc !3866
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !3867
  ret %struct.k_thread* %1, !dbg !3868
}

; Function Attrs: noinline nounwind optsize
define dso_local void @message_dev_init() local_unnamed_addr #1 !dbg !3869 {
  call void @llvm.dbg.value(metadata i64 8400, metadata !3871, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i64 4, metadata !3872, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i64 33600, metadata !3873, metadata !DIExpression()), !dbg !3874
  store i32 40320, i32* @max_duty_cyc, align 4, !dbg !3875
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull @timeout, void (%struct._timeout*)* noundef nonnull @dev_timer_expired, [1 x i64] zeroinitializer) #27, !dbg !3876
  ret void, !dbg !3877
}

; Function Attrs: noinline nounwind optsize
define internal void @dev_timer_expired(%struct._timeout* noundef readnone %0) #1 !dbg !3878 {
  %2 = alloca %struct.msg, align 4
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !3880, metadata !DIExpression()), !dbg !3891
  %3 = icmp eq %struct._timeout* %0, @timeout, !dbg !3892
  br i1 %3, label %5, label %4, !dbg !3895

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 56) #27, !dbg !3896
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 56) #27, !dbg !3896
  unreachable, !dbg !3896

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @k_cycle_get_32.17() #28, !dbg !3898
  call void @llvm.dbg.value(metadata i32 %6, metadata !3881, metadata !DIExpression()), !dbg !3891
  %7 = bitcast %struct.msg* %2 to i8*, !dbg !3899
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #26, !dbg !3899
  call void @llvm.dbg.declare(metadata %struct.msg* %2, metadata !3882, metadata !DIExpression()), !dbg !3900
  %8 = load i32, i32* @msg_seq, align 4, !dbg !3901
  %9 = add i32 %8, 1, !dbg !3901
  store i32 %9, i32* @msg_seq, align 4, !dbg !3901
  %10 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 0, !dbg !3902
  store i32 %8, i32* %10, align 4, !dbg !3903
  %11 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 1, !dbg !3904
  store i32 %6, i32* %11, align 4, !dbg !3905
  %12 = tail call fastcc i32 @rand32() #28, !dbg !3906
  %13 = and i32 %12, 3, !dbg !3907
  %14 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 2, !dbg !3908
  store i32 %13, i32* %14, align 4, !dbg !3909
  %15 = tail call fastcc i32 @rand32() #28, !dbg !3910
  %16 = load i32, i32* @max_duty_cyc, align 4, !dbg !3911
  %17 = urem i32 %15, %16, !dbg !3912
  %18 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 3, !dbg !3913
  store i32 %17, i32* %18, align 4, !dbg !3914
  %19 = call fastcc i32 @k_msgq_put.18(i8* noundef nonnull %7) #28, !dbg !3915
  call void @llvm.dbg.value(metadata i32 %19, metadata !3890, metadata !DIExpression()), !dbg !3891
  %20 = icmp eq i32 %19, 0, !dbg !3916
  br i1 %20, label %22, label %21, !dbg !3918

21:                                               ; preds = %5
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4.19, i32 0, i32 0)) #27, !dbg !3919
  br label %22, !dbg !3921

22:                                               ; preds = %21, %5
  %23 = load i32, i32* %10, align 4, !dbg !3922
  %24 = icmp ult i32 %23, 40, !dbg !3924
  br i1 %24, label %25, label %26, !dbg !3925

25:                                               ; preds = %22
  call fastcc void @timeout_reset() #28, !dbg !3926
  br label %26, !dbg !3928

26:                                               ; preds = %25, %22
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #26, !dbg !3929
  ret void, !dbg !3929
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.17() unnamed_addr #1 !dbg !3930 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.20() #28, !dbg !3931
  ret i32 %1, !dbg !3932
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @rand32() unnamed_addr #1 !dbg !394 {
  %1 = load i64, i64* @rand32.state, align 8, !dbg !3933
  %2 = icmp eq i64 %1, 0, !dbg !3933
  br i1 %2, label %3, label %7, !dbg !3935

3:                                                ; preds = %0
  %4 = tail call fastcc i32 @k_cycle_get_32.17() #28, !dbg !3936
  %5 = zext i32 %4 to i64, !dbg !3938
  %6 = shl nuw nsw i64 %5, 16, !dbg !3939
  br label %7, !dbg !3940

7:                                                ; preds = %3, %0
  %8 = phi i64 [ %6, %3 ], [ %1, %0 ], !dbg !3941
  %9 = mul i64 %8, 6364136223846793005, !dbg !3942
  %10 = add i64 %9, 1442695040888963407, !dbg !3943
  store i64 %10, i64* @rand32.state, align 8, !dbg !3944
  %11 = lshr i64 %10, 32, !dbg !3945
  %12 = trunc i64 %11 to i32, !dbg !3946
  ret i32 %12, !dbg !3947
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put.18(i8* noundef %0) unnamed_addr #1 !dbg !3948 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3959, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata %struct.k_msgq* @hw_msgs, metadata !3957, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i8* %0, metadata !3958, metadata !DIExpression()), !dbg !3960
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3961, !srcloc !3963
  %2 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef nonnull @hw_msgs, i8* noundef %0, [1 x i64] zeroinitializer) #27, !dbg !3964
  ret i32 %2, !dbg !3965
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @timeout_reset() unnamed_addr #1 !dbg !3966 {
  %1 = tail call fastcc i32 @rand32() #28, !dbg !3969
  %2 = and i32 %1, 7, !dbg !3970
  call void @llvm.dbg.value(metadata i32 %2, metadata !3968, metadata !DIExpression()), !dbg !3971
  %3 = zext i32 %2 to i64, !dbg !3972
  %4 = insertvalue [1 x i64] poison, i64 %3, 0, !dbg !3973
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull @timeout, void (%struct._timeout*)* noundef nonnull @dev_timer_expired, [1 x i64] %4) #27, !dbg !3973
  ret void, !dbg !3974
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.20() unnamed_addr #1 !dbg !3975 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !3976
  ret i32 %1, !dbg !3977
}

; Function Attrs: noinline nounwind optsize
define dso_local void @message_dev_fetch(%struct.msg* noundef %0) local_unnamed_addr #1 !dbg !3978 {
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !3983, metadata !DIExpression()), !dbg !3985
  %2 = bitcast %struct.msg* %0 to i8*, !dbg !3986
  %3 = tail call fastcc i32 @k_msgq_get.23(i8* noundef %2) #28, !dbg !3987
  call void @llvm.dbg.value(metadata i32 %3, metadata !3984, metadata !DIExpression()), !dbg !3985
  %4 = icmp eq i32 %3, 0, !dbg !3988
  br i1 %4, label %6, label %5, !dbg !3991

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 103) #27, !dbg !3992
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 103) #27, !dbg !3992
  unreachable, !dbg !3992

6:                                                ; preds = %1
  ret void, !dbg !3994
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get.23(i8* noundef %0) unnamed_addr #1 !dbg !3995 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !4001, metadata !DIExpression()), !dbg !4002
  call void @llvm.dbg.value(metadata %struct.k_msgq* @hw_msgs, metadata !3999, metadata !DIExpression()), !dbg !4002
  call void @llvm.dbg.value(metadata i8* %0, metadata !4000, metadata !DIExpression()), !dbg !4002
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !4003, !srcloc !4005
  %2 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef nonnull @hw_msgs, i8* noundef %0, [1 x i64] [i64 -1]) #27, !dbg !4006
  ret i32 %2, !dbg !4007
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !4008 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4023, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %0, metadata !4019, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %1, metadata !4020, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %2, metadata !4021, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %3, metadata !4022, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %0, metadata !4024, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %0, metadata !4025, metadata !DIExpression()), !dbg !4086
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4087
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #26, !dbg !4087
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4028, metadata !DIExpression()), !dbg !4088
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4089
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #26, !dbg !4089
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4030, metadata !DIExpression()), !dbg !4090
  call void @llvm.dbg.value(metadata i32 0, metadata !4031, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 0, metadata !4032, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 0, metadata !4033, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 -1, metadata !4034, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8 0, metadata !4037, metadata !DIExpression()), !dbg !4086
  %12 = and i32 %2, 4, !dbg !4091
  %13 = icmp eq i32 %12, 0, !dbg !4092
  call void @llvm.dbg.value(metadata i1 %13, metadata !4038, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4086
  %14 = lshr i32 %2, 3, !dbg !4093
  %15 = and i32 %14, 7, !dbg !4093
  %16 = add nuw nsw i32 %15, 1, !dbg !4094
  call void @llvm.dbg.value(metadata i32 %16, metadata !4039, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8 0, metadata !4040, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %0, metadata !4041, metadata !DIExpression()), !dbg !4086
  %17 = ptrtoint i8* %0 to i32, !dbg !4095
  %18 = and i32 %17, 3, !dbg !4097
  %19 = icmp eq i32 %18, 0, !dbg !4097
  br i1 %19, label %20, label %320, !dbg !4098

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4099
  call void @llvm.dbg.value(metadata i8* %21, metadata !4025, metadata !DIExpression()), !dbg !4086
  %22 = icmp eq i8* %0, null, !dbg !4100
  %23 = and i32 %1, 7, !dbg !4102
  %24 = sub nuw nsw i32 8, %23, !dbg !4102
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4102
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4102
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4102
  call void @llvm.dbg.value(metadata i32 %27, metadata !4020, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %26, metadata !4025, metadata !DIExpression()), !dbg !4086
  br i1 %22, label %33, label %28, !dbg !4103

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4105
  %30 = sub i32 4, %17, !dbg !4105
  %31 = add i32 %30, %29, !dbg !4106
  %32 = icmp ugt i32 %31, %27, !dbg !4107
  br i1 %32, label %320, label %33, !dbg !4108

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4109
  call void @llvm.dbg.value(metadata i8* %34, metadata !4022, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %3, metadata !4036, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 4, metadata !4027, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 4, metadata !4026, metadata !DIExpression()), !dbg !4086
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4110

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !4023, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %42, metadata !4022, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %43, metadata !4025, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %44, metadata !4026, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %45, metadata !4027, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %72, metadata !4034, metadata !DIExpression()), !dbg !4086
  br i1 %46, label %73, label %47, !dbg !4111

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4112
  %49 = zext i1 %48 to i32, !dbg !4116
  %50 = add nsw i32 %72, %49, !dbg !4116
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4116
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4116
  call void @llvm.dbg.value(metadata i32 %52, metadata !4026, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %51, metadata !4027, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8 poison, metadata !4037, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %50, metadata !4034, metadata !DIExpression()), !dbg !4086
  br label %53, !dbg !4117

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4023, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %40, metadata !4022, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %58, metadata !4025, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %57, metadata !4026, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %56, metadata !4027, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8 poison, metadata !4037, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %54, metadata !4034, metadata !DIExpression()), !dbg !4086
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4118
  call void @llvm.dbg.value(metadata i8* %60, metadata !4022, metadata !DIExpression()), !dbg !4086
  %61 = load i8, i8* %60, align 1, !dbg !4120
  %62 = icmp eq i8 %61, 0, !dbg !4121
  br i1 %62, label %226, label %63, !dbg !4122, !llvm.loop !4123

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !4111

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4126

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4037, metadata !DIExpression()), !dbg !4086
  %75 = add nsw i32 %72, -1, !dbg !4127
  call void @llvm.dbg.value(metadata i32 %75, metadata !4034, metadata !DIExpression()), !dbg !4086
  br label %53, !dbg !4128

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4129

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4027, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 4, metadata !4026, metadata !DIExpression()), !dbg !4086
  br label %53, !dbg !4130

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4027, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 4, metadata !4026, metadata !DIExpression()), !dbg !4086
  br label %53, !dbg !4131

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4132
  %81 = icmp eq i8 %80, 108, !dbg !4134
  br i1 %81, label %82, label %109, !dbg !4135

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4136
  %84 = load i8, i8* %83, align 1, !dbg !4136
  %85 = icmp eq i8 %84, 108, !dbg !4139
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4140
  %89 = add i32 %88, 7, !dbg !4140
  %90 = and i32 %89, -8, !dbg !4140
  %91 = inttoptr i32 %90 to i8*, !dbg !4140
  %92 = inttoptr i32 %90 to double*, !dbg !4140
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4140
  %94 = load double, double* %92, align 8, !dbg !4140
  call void @llvm.dbg.value(metadata i8* %93, metadata !4023, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 8, metadata !4026, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 8, metadata !4027, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata double %94, metadata !4054, metadata !DIExpression()), !dbg !4142
  %95 = ptrtoint i8* %43 to i32, !dbg !4143
  %96 = add i32 %95, 7, !dbg !4143
  %97 = and i32 %96, -8, !dbg !4143
  %98 = inttoptr i32 %97 to i8*, !dbg !4144
  call void @llvm.dbg.value(metadata i8* %98, metadata !4025, metadata !DIExpression()), !dbg !4086
  br i1 %22, label %104, label %99, !dbg !4145

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4146
  %101 = icmp ugt i32 %100, %196, !dbg !4150
  br i1 %101, label %320, label %102, !dbg !4151

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4152
  store double %94, double* %103, align 8, !dbg !4152
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4155
  call void @llvm.dbg.value(metadata i8* %105, metadata !4025, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8 poison, metadata !4037, metadata !DIExpression()), !dbg !4086
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4037, metadata !DIExpression()), !dbg !4086
  br label %53, !dbg !4156

107:                                              ; preds = %73, %73
  br label %109, !dbg !4157

108:                                              ; preds = %73
  br label %109, !dbg !4157

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4086
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4086
  call void @llvm.dbg.value(metadata i32 %113, metadata !4026, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %112, metadata !4027, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8 poison, metadata !4040, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8 poison, metadata !4037, metadata !DIExpression()), !dbg !4086
  %114 = ptrtoint i8* %43 to i32, !dbg !4157
  %115 = add i32 %114, -1, !dbg !4157
  %116 = add i32 %115, %112, !dbg !4157
  %117 = sub i32 0, %112, !dbg !4157
  %118 = and i32 %116, %117, !dbg !4157
  %119 = inttoptr i32 %118 to i8*, !dbg !4158
  call void @llvm.dbg.value(metadata i8* %119, metadata !4025, metadata !DIExpression()), !dbg !4086
  br i1 %22, label %124, label %120, !dbg !4159

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4161
  %122 = add i32 %121, %118, !dbg !4162
  %123 = icmp ugt i32 %122, %196, !dbg !4163
  br i1 %123, label %320, label %124, !dbg !4164

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !4165

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4158
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4166
  call void @llvm.dbg.value(metadata i8* %127, metadata !4023, metadata !DIExpression()), !dbg !4086
  %128 = bitcast i8* %41 to i8**, !dbg !4166
  %129 = load i8*, i8** %128, align 4, !dbg !4166
  call void @llvm.dbg.value(metadata i8* %129, metadata !4036, metadata !DIExpression()), !dbg !4086
  br label %130, !dbg !4167

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4086
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4168
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4086
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !4169
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4086
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !4086
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4086
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4086
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4086
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4086
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !4170
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !4023, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %142, metadata !4020, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %141, metadata !4022, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %140, metadata !4025, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %139, metadata !4026, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %138, metadata !4027, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %137, metadata !4031, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %136, metadata !4039, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %135, metadata !4032, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8 poison, metadata !4037, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %133, metadata !4036, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %132, metadata !4034, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %131, metadata !4033, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.label(metadata !4085), !dbg !4172
  br i1 %22, label %146, label %144, !dbg !4173

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4174
  store i8* %133, i8** %145, align 4, !dbg !4177
  br label %146, !dbg !4178

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4179
  call void @llvm.dbg.value(metadata i32 %147, metadata !4039, metadata !DIExpression()), !dbg !4086
  %148 = icmp sgt i32 %136, 0, !dbg !4180
  br i1 %148, label %152, label %149, !dbg !4181

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #28, !dbg !4182
  %151 = zext i1 %150 to i32, !dbg !4182
  br label %152, !dbg !4181

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4181
  %154 = icmp eq i32 %153, 0, !dbg !4181
  call void @llvm.dbg.value(metadata i1 %154, metadata !4063, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4183
  call void @llvm.dbg.value(metadata i1 %36, metadata !4066, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4183
  %155 = or i1 %36, %154, !dbg !4184
  br i1 %155, label %156, label %192, !dbg !4184

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4185
  %158 = sub i32 %157, %17, !dbg !4185
  %159 = lshr i32 %158, 2, !dbg !4186
  call void @llvm.dbg.value(metadata i32 %159, metadata !4067, metadata !DIExpression()), !dbg !4187
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4188
  br i1 %161, label %162, label %163, !dbg !4188

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 635) #27, !dbg !4190
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.30, i32 0, i32 0)) #27, !dbg !4190
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 635) #27, !dbg !4190
  unreachable, !dbg !4190

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !4195
  br i1 %164, label %165, label %166, !dbg !4197

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 640) #27, !dbg !4198
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.31, i32 0, i32 0)) #27, !dbg !4198
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 640) #27, !dbg !4198
  unreachable, !dbg !4198

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !4203

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !4204
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4207
  store i8 %168, i8* %169, align 1, !dbg !4208
  %170 = trunc i32 %132 to i8, !dbg !4209
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4210
  store i8 %170, i8* %171, align 1, !dbg !4211
  br i1 %154, label %175, label %172, !dbg !4212

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !4213
  store i8 %173, i8* %169, align 1, !dbg !4213
  %174 = add i32 %131, 1, !dbg !4216
  call void @llvm.dbg.value(metadata i32 %174, metadata !4033, metadata !DIExpression()), !dbg !4086
  br label %187, !dbg !4217

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !4218
  call void @llvm.dbg.value(metadata i32 %176, metadata !4032, metadata !DIExpression()), !dbg !4086
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !4220

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !4221
  call void @llvm.dbg.value(metadata i32 %179, metadata !4020, metadata !DIExpression()), !dbg !4086
  br label %187, !dbg !4224

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !4225

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !4226
  call void @llvm.dbg.value(metadata i32 %182, metadata !4020, metadata !DIExpression()), !dbg !4086
  br label %187, !dbg !4229

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #27, !dbg !4230
  %185 = add i32 %142, 2, !dbg !4232
  %186 = add i32 %185, %184, !dbg !4233
  call void @llvm.dbg.value(metadata i32 %186, metadata !4020, metadata !DIExpression()), !dbg !4086
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !4086
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !4086
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !4086
  call void @llvm.dbg.value(metadata i32 %190, metadata !4020, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %189, metadata !4032, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %188, metadata !4033, metadata !DIExpression()), !dbg !4086
  %191 = add nuw nsw i32 %137, 1, !dbg !4234
  call void @llvm.dbg.value(metadata i32 %191, metadata !4031, metadata !DIExpression()), !dbg !4086
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !4086
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !4169
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !4086
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !4170
  call void @llvm.dbg.value(metadata i32 %196, metadata !4020, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %195, metadata !4031, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %194, metadata !4032, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %193, metadata !4033, metadata !DIExpression()), !dbg !4086
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4235
  call void @llvm.dbg.value(metadata i8* %197, metadata !4025, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %143, metadata !4023, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %141, metadata !4022, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %139, metadata !4026, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %138, metadata !4027, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8 poison, metadata !4040, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8 poison, metadata !4037, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %132, metadata !4034, metadata !DIExpression()), !dbg !4086
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4118
  call void @llvm.dbg.value(metadata i8* %198, metadata !4022, metadata !DIExpression()), !dbg !4086
  %199 = load i8, i8* %198, align 1, !dbg !4120
  %200 = icmp eq i8 %199, 0, !dbg !4121
  br i1 %200, label %226, label %63, !dbg !4122

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !4236

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4237
  call void @llvm.dbg.value(metadata i8* %203, metadata !4023, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 undef, metadata !4070, metadata !DIExpression()), !dbg !4238
  br i1 %22, label %219, label %204, !dbg !4239

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !4237
  %206 = load i32, i32* %205, align 4, !dbg !4237
  call void @llvm.dbg.value(metadata i32 %206, metadata !4070, metadata !DIExpression()), !dbg !4238
  %207 = inttoptr i32 %118 to i32*, !dbg !4240
  store i32 %206, i32* %207, align 4, !dbg !4243
  br label %219, !dbg !4244

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !4245
  %210 = add i32 %209, 7, !dbg !4245
  %211 = and i32 %210, -8, !dbg !4245
  %212 = inttoptr i32 %211 to i8*, !dbg !4245
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !4245
  call void @llvm.dbg.value(metadata i8* %213, metadata !4023, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i64 undef, metadata !4076, metadata !DIExpression()), !dbg !4246
  br i1 %22, label %219, label %214, !dbg !4247

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !4245
  %216 = load i64, i64* %215, align 8, !dbg !4245
  call void @llvm.dbg.value(metadata i64 %216, metadata !4076, metadata !DIExpression()), !dbg !4246
  %217 = inttoptr i32 %118 to i64*, !dbg !4248
  store i64 %216, i64* %217, align 8, !dbg !4253
  br label %219, !dbg !4254

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 709) #27, !dbg !4255
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.32, i32 0, i32 0), i32 noundef %113) #27, !dbg !4255
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 709) #27, !dbg !4255
  unreachable, !dbg !4255

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !4260
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !4260
  call void @llvm.dbg.value(metadata i8* %221, metadata !4023, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %40, metadata !4022, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %222, metadata !4025, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %113, metadata !4026, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %112, metadata !4027, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8 poison, metadata !4040, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8 poison, metadata !4037, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %72, metadata !4034, metadata !DIExpression()), !dbg !4086
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4118
  call void @llvm.dbg.value(metadata i8* %223, metadata !4022, metadata !DIExpression()), !dbg !4086
  %224 = load i8, i8* %223, align 1, !dbg !4120
  %225 = icmp eq i8 %224, 0, !dbg !4121
  br i1 %225, label %226, label %38, !dbg !4122

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !4261
  %228 = ptrtoint i8* %227 to i32, !dbg !4262
  %229 = sub i32 %228, %17, !dbg !4262
  %230 = lshr i32 %229, 2, !dbg !4264
  %231 = icmp ugt i32 %229, 1023, !dbg !4265
  br i1 %231, label %232, label %233, !dbg !4266

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 721) #27, !dbg !4267
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.33, i32 0, i32 0)) #27, !dbg !4267
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 721) #27, !dbg !4267
  unreachable, !dbg !4267

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !4272

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !4273
  %236 = add i32 %235, %229, !dbg !4276
  br label %320, !dbg !4277

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !4278
  store i8 %238, i8* %0, align 1, !dbg !4279
  %239 = trunc i32 %194 to i8, !dbg !4280
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4282
  store i8 %240, i8* %242, align 1, !dbg !4284
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4285
  store i8 %241, i8* %243, align 1, !dbg !4286
  %244 = trunc i32 %193 to i8, !dbg !4287
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4288
  store i8 %244, i8* %245, align 1, !dbg !4289
  %246 = icmp eq i32 %193, 0, !dbg !4290
  %247 = xor i1 %246, true, !dbg !4291
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !4291
  call void @llvm.dbg.value(metadata i8* %227, metadata !4025, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 0, metadata !4035, metadata !DIExpression()), !dbg !4086
  br i1 %249, label %250, label %269, !dbg !4291

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !4292

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !4025, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %254, metadata !4035, metadata !DIExpression()), !dbg !4086
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !4293
  %256 = load i8, i8* %255, align 1, !dbg !4293
  %257 = icmp sgt i8 %256, -1, !dbg !4295
  br i1 %257, label %265, label %258, !dbg !4296

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !4079, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4297
  %259 = ptrtoint i8* %253 to i32, !dbg !4298
  %260 = add i32 %251, %259, !dbg !4300
  %261 = icmp ugt i32 %260, %196, !dbg !4301
  br i1 %261, label %320, label %262, !dbg !4302

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !4303
  call void @llvm.dbg.value(metadata i8 %263, metadata !4079, metadata !DIExpression()), !dbg !4297
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !4304
  call void @llvm.dbg.value(metadata i8* %264, metadata !4025, metadata !DIExpression()), !dbg !4086
  store i8 %263, i8* %253, align 1, !dbg !4305
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !4235
  call void @llvm.dbg.value(metadata i8* %266, metadata !4025, metadata !DIExpression()), !dbg !4086
  %267 = add nuw i32 %254, 1, !dbg !4306
  call void @llvm.dbg.value(metadata i32 %267, metadata !4035, metadata !DIExpression()), !dbg !4086
  %268 = icmp eq i32 %267, %195, !dbg !4307
  br i1 %268, label %269, label %252, !dbg !4292, !llvm.loop !4308

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !4235
  call void @llvm.dbg.value(metadata i8* %270, metadata !4025, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 0, metadata !4035, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %133, metadata !4036, metadata !DIExpression()), !dbg !4086
  %271 = icmp eq i32 %195, 0, !dbg !4310
  br i1 %271, label %316, label %272, !dbg !4313

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !4313

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !4025, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %276, metadata !4036, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %277, metadata !4035, metadata !DIExpression()), !dbg !4086
  br i1 %246, label %282, label %278, !dbg !4314

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4317
  %280 = load i8, i8* %279, align 1, !dbg !4317
  %281 = icmp sgt i8 %280, -1, !dbg !4318
  br i1 %281, label %282, label %311, !dbg !4319

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !4320

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !4026, metadata !DIExpression()), !dbg !4086
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !4321
  %285 = load i8, i8* %284, align 1, !dbg !4321
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !4324
  call void @llvm.dbg.value(metadata i8* %286, metadata !4025, metadata !DIExpression()), !dbg !4086
  store i8 %285, i8* %275, align 1, !dbg !4325
  br label %297, !dbg !4326

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4327
  %289 = load i8, i8* %288, align 1, !dbg !4327
  %290 = zext i8 %289 to i32, !dbg !4327
  %291 = shl nuw nsw i32 %290, 2, !dbg !4329
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !4330
  %293 = bitcast i8* %292 to i8**, !dbg !4331
  %294 = load i8*, i8** %293, align 4, !dbg !4331
  call void @llvm.dbg.value(metadata i8* %294, metadata !4036, metadata !DIExpression()), !dbg !4086
  store i8* null, i8** %293, align 4, !dbg !4332
  %295 = tail call i32 @strlen(i8* noundef %294) #27, !dbg !4333
  %296 = add i32 %295, 1, !dbg !4334
  call void @llvm.dbg.value(metadata i32 %296, metadata !4026, metadata !DIExpression()), !dbg !4086
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !4086
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !4335
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !4086
  call void @llvm.dbg.value(metadata i8* %300, metadata !4025, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %299, metadata !4026, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %298, metadata !4036, metadata !DIExpression()), !dbg !4086
  %301 = ptrtoint i8* %300 to i32, !dbg !4336
  %302 = add i32 %273, %299, !dbg !4338
  %303 = add i32 %302, %301, !dbg !4339
  %304 = icmp ugt i32 %303, %196, !dbg !4340
  br i1 %304, label %320, label %305, !dbg !4341

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4342
  %307 = load i8, i8* %306, align 1, !dbg !4342
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !4343
  call void @llvm.dbg.value(metadata i8* %308, metadata !4025, metadata !DIExpression()), !dbg !4086
  store i8 %307, i8* %300, align 1, !dbg !4344
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #27, !dbg !4345
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !4346
  call void @llvm.dbg.value(metadata i8* %310, metadata !4025, metadata !DIExpression()), !dbg !4086
  br label %311, !dbg !4347

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !4348
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !4086
  call void @llvm.dbg.value(metadata i8* %313, metadata !4025, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %312, metadata !4036, metadata !DIExpression()), !dbg !4086
  %314 = add nuw i32 %277, 1, !dbg !4349
  call void @llvm.dbg.value(metadata i32 %314, metadata !4035, metadata !DIExpression()), !dbg !4086
  %315 = icmp eq i32 %314, %195, !dbg !4310
  br i1 %315, label %316, label %274, !dbg !4313, !llvm.loop !4350

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !4235
  %318 = ptrtoint i8* %317 to i32, !dbg !4352
  %319 = sub i32 %318, %17, !dbg !4352
  br label %320, !dbg !4353

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #26, !dbg !4354
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #26, !dbg !4354
  ret i32 %321, !dbg !4354
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4355 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4359, metadata !DIExpression()), !dbg !4360
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #28, !dbg !4361
  ret i1 %2, !dbg !4362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4363 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4368, metadata !DIExpression()), !dbg !4369
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4370
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4371
  %4 = and i1 %2, %3, !dbg !4371
  ret i1 %4, !dbg !4372
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4373 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4377, metadata !DIExpression()), !dbg !4383
  call void @llvm.dbg.value(metadata i32 %1, metadata !4378, metadata !DIExpression()), !dbg !4383
  call void @llvm.dbg.value(metadata i32 %2, metadata !4379, metadata !DIExpression()), !dbg !4383
  call void @llvm.dbg.value(metadata i8* %3, metadata !4380, metadata !DIExpression()), !dbg !4383
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4384
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #26, !dbg !4384
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4381, metadata !DIExpression()), !dbg !4385
  call void @llvm.va_start(i8* nonnull %6), !dbg !4386
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4387
  %8 = load i32, i32* %7, align 4, !dbg !4387
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4387
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #28, !dbg !4387
  call void @llvm.dbg.value(metadata i32 %10, metadata !4382, metadata !DIExpression()), !dbg !4383
  call void @llvm.va_end(i8* nonnull %6), !dbg !4388
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #26, !dbg !4389
  ret i32 %10, !dbg !4390
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #10

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #10

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4391 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4403, metadata !DIExpression()), !dbg !4422
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4404, metadata !DIExpression()), !dbg !4422
  call void @llvm.dbg.value(metadata i8* %2, metadata !4405, metadata !DIExpression()), !dbg !4422
  call void @llvm.dbg.value(metadata i8* %3, metadata !4406, metadata !DIExpression()), !dbg !4422
  call void @llvm.dbg.value(metadata i8* %3, metadata !4407, metadata !DIExpression()), !dbg !4422
  call void @llvm.dbg.value(metadata i8* %3, metadata !4408, metadata !DIExpression()), !dbg !4422
  %5 = icmp eq i8* %3, null, !dbg !4423
  br i1 %5, label %45, label %6, !dbg !4425

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4417, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4422
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4426
  %8 = load i8, i8* %7, align 1, !dbg !4426
  %9 = zext i8 %8 to i32, !dbg !4427
  call void @llvm.dbg.value(metadata i32 %9, metadata !4418, metadata !DIExpression()), !dbg !4422
  call void @llvm.dbg.value(metadata i8 undef, metadata !4419, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4422
  call void @llvm.dbg.value(metadata i8 undef, metadata !4420, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4422
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4414, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4422
  call void @llvm.dbg.value(metadata i32 0, metadata !4416, metadata !DIExpression()), !dbg !4422
  %10 = icmp eq i8 %8, 0, !dbg !4428
  br i1 %10, label %39, label %11, !dbg !4431

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4432
  call void @llvm.dbg.value(metadata i8 %12, metadata !4417, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4422
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4414, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4422
  %13 = zext i8 %12 to i32, !dbg !4433
  call void @llvm.dbg.value(metadata i32 %13, metadata !4417, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4422
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4414, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4422
  %14 = shl nuw nsw i32 %13, 2, !dbg !4434
  call void @llvm.dbg.value(metadata i32 %14, metadata !4417, metadata !DIExpression()), !dbg !4422
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4414, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4422
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4435
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4414, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4422
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4436
  %17 = load i8, i8* %16, align 1, !dbg !4436
  call void @llvm.dbg.value(metadata i8 %17, metadata !4419, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4422
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4414, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4422
  %18 = zext i8 %17 to i32, !dbg !4437
  call void @llvm.dbg.value(metadata i32 %18, metadata !4419, metadata !DIExpression()), !dbg !4422
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4414, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4422
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4438
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4414, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4422
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4439
  %21 = load i8, i8* %20, align 1, !dbg !4439
  call void @llvm.dbg.value(metadata i8 %21, metadata !4420, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4422
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4414, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4422
  %22 = zext i8 %21 to i32, !dbg !4440
  call void @llvm.dbg.value(metadata i32 %22, metadata !4420, metadata !DIExpression()), !dbg !4422
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4414, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4422
  %23 = shl nuw nsw i32 %22, 1, !dbg !4441
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4414, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4422
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4442
  call void @llvm.dbg.value(metadata i8* %24, metadata !4414, metadata !DIExpression()), !dbg !4422
  br label %25, !dbg !4431

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4414, metadata !DIExpression()), !dbg !4422
  call void @llvm.dbg.value(metadata i32 %27, metadata !4416, metadata !DIExpression()), !dbg !4422
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4443
  call void @llvm.dbg.value(metadata i8* %28, metadata !4414, metadata !DIExpression()), !dbg !4422
  %29 = load i8, i8* %26, align 1, !dbg !4445
  %30 = zext i8 %29 to i32, !dbg !4445
  call void @llvm.dbg.value(metadata i32 %30, metadata !4421, metadata !DIExpression()), !dbg !4422
  %31 = shl nuw nsw i32 %30, 2, !dbg !4446
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4447
  %33 = bitcast i8* %32 to i8**, !dbg !4448
  call void @llvm.dbg.value(metadata i8** %33, metadata !4415, metadata !DIExpression()), !dbg !4422
  store i8* %28, i8** %33, align 4, !dbg !4449
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #27, !dbg !4450
  %35 = add i32 %34, 1, !dbg !4451
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4452
  call void @llvm.dbg.value(metadata i8* %36, metadata !4414, metadata !DIExpression()), !dbg !4422
  %37 = add nuw nsw i32 %27, 1, !dbg !4453
  call void @llvm.dbg.value(metadata i32 %37, metadata !4416, metadata !DIExpression()), !dbg !4422
  %38 = icmp eq i32 %37, %9, !dbg !4428
  br i1 %38, label %39, label %25, !dbg !4431, !llvm.loop !4454

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4456
  call void @llvm.dbg.value(metadata i8* %40, metadata !4407, metadata !DIExpression()), !dbg !4422
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4457
  %42 = bitcast i8* %41 to i8**, !dbg !4457
  %43 = load i8*, i8** %42, align 1, !dbg !4457
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #28, !dbg !4458
  br label %45, !dbg !4459

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4422
  ret i32 %46, !dbg !4460
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4461 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4465, metadata !DIExpression()), !dbg !4475
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4466, metadata !DIExpression()), !dbg !4475
  call void @llvm.dbg.value(metadata i8* %2, metadata !4467, metadata !DIExpression()), !dbg !4475
  call void @llvm.dbg.value(metadata i8* %3, metadata !4468, metadata !DIExpression()), !dbg !4475
  call void @llvm.dbg.value(metadata i8* %4, metadata !4469, metadata !DIExpression()), !dbg !4475
  call void @llvm.dbg.value(metadata i8* %4, metadata !4470, metadata !DIExpression()), !dbg !4475
  %6 = ptrtoint i8* %4 to i32, !dbg !4476
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4476
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #27, !dbg !4476
  ret i32 %8, !dbg !4477
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !4478 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4482, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %1, metadata !4483, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8 0, metadata !4485, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 0, metadata !4486, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8 poison, metadata !4485, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %0, metadata !4482, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4487
  %3 = load i8, i8* %0, align 1, !dbg !4488
  call void @llvm.dbg.value(metadata i8 %3, metadata !4484, metadata !DIExpression()), !dbg !4487
  %4 = icmp eq i8 %3, 0, !dbg !4489
  br i1 %4, label %29, label %5, !dbg !4490

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4491
  call void @llvm.dbg.value(metadata i32 %8, metadata !4486, metadata !DIExpression()), !dbg !4487
  br i1 %9, label %11, label %22, !dbg !4492

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4494
  br i1 %12, label %13, label %17, !dbg !4498

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4499
  br i1 %14, label %29, label %15, !dbg !4502

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #28, !dbg !4503
  br i1 %16, label %29, label %22, !dbg !4505

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #28, !dbg !4506
  %19 = xor i1 %18, true, !dbg !4508
  %20 = zext i1 %18 to i32, !dbg !4508
  %21 = add nsw i32 %8, %20, !dbg !4508
  br label %22, !dbg !4508

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4487
  call void @llvm.dbg.value(metadata i32 %24, metadata !4486, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8 poison, metadata !4485, metadata !DIExpression()), !dbg !4487
  %25 = icmp eq i8 %6, 37, !dbg !4509
  %26 = xor i1 %25, %23, !dbg !4511
  call void @llvm.dbg.value(metadata i8* %10, metadata !4482, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %10, metadata !4482, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4487
  %27 = load i8, i8* %10, align 1, !dbg !4488
  call void @llvm.dbg.value(metadata i8 %27, metadata !4484, metadata !DIExpression()), !dbg !4487
  %28 = icmp eq i8 %27, 0, !dbg !4489
  br i1 %28, label %29, label %5, !dbg !4490, !llvm.loop !4512

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4487
  ret i1 %30, !dbg !4514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #5 !dbg !4515 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4519, metadata !DIExpression()), !dbg !4520
  %2 = add i8 %0, -64, !dbg !4521
  %3 = icmp ult i8 %2, 59, !dbg !4521
  ret i1 %3, !dbg !4522
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4523 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4531, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i32 %1, metadata !4532, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4533, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i8* %3, metadata !4534, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i32 %4, metadata !4535, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i16* %5, metadata !4536, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i32 %6, metadata !4537, metadata !DIExpression()), !dbg !4600
  %11 = icmp eq i8* %0, null, !dbg !4601
  br i1 %11, label %12, label %13, !dbg !4604

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 916) #27, !dbg !4605
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 916) #27, !dbg !4605
  unreachable, !dbg !4605

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !4538, metadata !DIExpression()), !dbg !4600
  %14 = bitcast i8* %0 to i32*, !dbg !4607
  call void @llvm.dbg.value(metadata i32* %14, metadata !4539, metadata !DIExpression()), !dbg !4600
  %15 = and i32 %4, 8, !dbg !4608
  %16 = icmp eq i32 %15, 0, !dbg !4609
  call void @llvm.dbg.value(metadata i1 %16, metadata !4543, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4600
  call void @llvm.dbg.value(metadata i8* %0, metadata !4546, metadata !DIExpression()), !dbg !4600
  %17 = icmp eq i32 %1, 0, !dbg !4610
  br i1 %17, label %18, label %20, !dbg !4611

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #28, !dbg !4612
  br label %20, !dbg !4611

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !4611
  call void @llvm.dbg.value(metadata i32 %21, metadata !4532, metadata !DIExpression()), !dbg !4600
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4613
  %23 = load i8, i8* %22, align 1, !dbg !4613
  %24 = zext i8 %23 to i32, !dbg !4614
  call void @llvm.dbg.value(metadata i32 %24, metadata !4541, metadata !DIExpression()), !dbg !4600
  %25 = icmp ne i8 %23, 0, !dbg !4615
  %26 = and i32 %4, 1, !dbg !4616
  %27 = icmp ne i32 %26, 0, !dbg !4616
  %28 = and i1 %27, %25, !dbg !4616
  call void @llvm.dbg.value(metadata i1 %28, metadata !4545, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4600
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4617
  %30 = load i8, i8* %29, align 1, !dbg !4617
  %31 = zext i8 %30 to i32, !dbg !4618
  call void @llvm.dbg.value(metadata i32 %31, metadata !4542, metadata !DIExpression()), !dbg !4600
  %32 = icmp ne i8 %30, 0, !dbg !4619
  %33 = and i32 %4, 2, !dbg !4620
  %34 = icmp ne i32 %33, 0, !dbg !4620
  %35 = and i1 %34, %32, !dbg !4620
  call void @llvm.dbg.value(metadata i1 %35, metadata !4544, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4600
  %36 = select i1 %35, i1 true, i1 %28, !dbg !4621
  br i1 %36, label %41, label %37, !dbg !4621

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4623
  br i1 %38, label %287, label %39, !dbg !4626

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #27, !dbg !4627
  br label %287, !dbg !4629

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !4630
  %43 = zext i8 %42 to i32, !dbg !4631
  %44 = shl nuw nsw i32 %43, 2, !dbg !4632
  call void @llvm.dbg.value(metadata i32 %44, metadata !4540, metadata !DIExpression()), !dbg !4600
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4633
  %46 = bitcast i8* %45 to i8**, !dbg !4634
  %47 = load i8*, i8** %46, align 4, !dbg !4634
  call void @llvm.dbg.value(metadata i8* %47, metadata !4549, metadata !DIExpression()), !dbg !4600
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !4635
  call void @llvm.dbg.value(metadata i8* %48, metadata !4550, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i32 0, metadata !4551, metadata !DIExpression()), !dbg !4600
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4636
  br i1 %49, label %50, label %135, !dbg !4637

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !4548, metadata !DIExpression()), !dbg !4600
  br i1 %28, label %51, label %76, !dbg !4638

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !4548, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i8* %48, metadata !4550, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i32 0, metadata !4551, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i32 0, metadata !4552, metadata !DIExpression()), !dbg !4639
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !4640

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !4548, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i8* %55, metadata !4550, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i32 %56, metadata !4551, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i32 %57, metadata !4552, metadata !DIExpression()), !dbg !4639
  %58 = load i8, i8* %55, align 1, !dbg !4641
  %59 = zext i8 %58 to i32, !dbg !4642
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !4642
  %61 = bitcast i32* %60 to i8**, !dbg !4643
  %62 = load i8*, i8** %61, align 4, !dbg !4643
  call void @llvm.dbg.value(metadata i8* %62, metadata !4558, metadata !DIExpression()), !dbg !4644
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #28, !dbg !4645
  call void @llvm.dbg.value(metadata i32 %63, metadata !4561, metadata !DIExpression()), !dbg !4644
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !4646
  br i1 %65, label %66, label %70, !dbg !4646

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !4648
  %68 = add nuw i32 %56, 1, !dbg !4650
  call void @llvm.dbg.value(metadata i32 %68, metadata !4551, metadata !DIExpression()), !dbg !4600
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !4651
  store i16 %67, i16* %69, align 2, !dbg !4652
  br label %70, !dbg !4653

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !4600
  call void @llvm.dbg.value(metadata i32 %71, metadata !4551, metadata !DIExpression()), !dbg !4600
  %72 = add nsw i32 %63, %54, !dbg !4654
  call void @llvm.dbg.value(metadata i32 %72, metadata !4548, metadata !DIExpression()), !dbg !4600
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4655
  call void @llvm.dbg.value(metadata i8* %73, metadata !4550, metadata !DIExpression()), !dbg !4600
  %74 = add nuw nsw i32 %57, 1, !dbg !4656
  call void @llvm.dbg.value(metadata i32 %74, metadata !4552, metadata !DIExpression()), !dbg !4639
  %75 = icmp eq i32 %74, %24, !dbg !4657
  br i1 %75, label %82, label %53, !dbg !4640, !llvm.loop !4658

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4660
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4660
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4660
  br label %82, !dbg !4660

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4663
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !4600
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4664
  call void @llvm.dbg.value(metadata i1 undef, metadata !4562, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4665
  call void @llvm.dbg.value(metadata i32 0, metadata !4563, metadata !DIExpression()), !dbg !4666
  call void @llvm.dbg.value(metadata i32 %85, metadata !4548, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i8* %84, metadata !4550, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i32 %83, metadata !4551, metadata !DIExpression()), !dbg !4600
  %86 = icmp eq i8 %30, 0, !dbg !4667
  br i1 %86, label %287, label %87, !dbg !4668

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4669
  %89 = icmp eq i32 %88, 0, !dbg !4670
  call void @llvm.dbg.value(metadata i1 %89, metadata !4562, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4665
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4668

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !4548, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i8* %96, metadata !4550, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i32 %97, metadata !4551, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i32 %98, metadata !4563, metadata !DIExpression()), !dbg !4666
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4671
  call void @llvm.dbg.value(metadata i8* %99, metadata !4550, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i8 undef, metadata !4565, metadata !DIExpression()), !dbg !4672
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4673
  call void @llvm.dbg.value(metadata i8* %100, metadata !4550, metadata !DIExpression()), !dbg !4600
  %101 = load i8, i8* %99, align 1, !dbg !4674
  call void @llvm.dbg.value(metadata i8 %101, metadata !4568, metadata !DIExpression()), !dbg !4672
  %102 = zext i8 %101 to i32, !dbg !4675
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4675
  %104 = bitcast i32* %103 to i8**, !dbg !4676
  %105 = load i8*, i8** %104, align 4, !dbg !4676
  call void @llvm.dbg.value(metadata i8* %105, metadata !4569, metadata !DIExpression()), !dbg !4672
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #28, !dbg !4677
  call void @llvm.dbg.value(metadata i1 %106, metadata !4570, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4672
  br i1 %16, label %113, label %107, !dbg !4678

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4680
  call void @llvm.dbg.value(metadata i8 %108, metadata !4565, metadata !DIExpression()), !dbg !4672
  %109 = zext i8 %108 to i32, !dbg !4681
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #28, !dbg !4682
  br i1 %110, label %111, label %113, !dbg !4683

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9.35, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #27, !dbg !4684
  %112 = add nsw i32 %95, -2, !dbg !4690
  call void @llvm.dbg.value(metadata i32 %112, metadata !4548, metadata !DIExpression()), !dbg !4600
  br label %130, !dbg !4691

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4692

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4693

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4695
  call void @llvm.dbg.value(metadata i32 %116, metadata !4548, metadata !DIExpression()), !dbg !4600
  br label %130, !dbg !4698

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4699

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !4596), !dbg !4700
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #28, !dbg !4701
  call void @llvm.dbg.value(metadata i32 %119, metadata !4571, metadata !DIExpression()), !dbg !4672
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4702
  br i1 %121, label %122, label %126, !dbg !4702

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4704
  %124 = add nuw i32 %97, 1, !dbg !4706
  call void @llvm.dbg.value(metadata i32 %124, metadata !4551, metadata !DIExpression()), !dbg !4600
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4707
  store i16 %123, i16* %125, align 2, !dbg !4708
  br label %126, !dbg !4709

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !4600
  call void @llvm.dbg.value(metadata i32 %127, metadata !4551, metadata !DIExpression()), !dbg !4600
  %128 = add i32 %95, -1, !dbg !4710
  %129 = add i32 %128, %119, !dbg !4711
  call void @llvm.dbg.value(metadata i32 %129, metadata !4548, metadata !DIExpression()), !dbg !4600
  br label %130, !dbg !4712

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !4600
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4672
  call void @llvm.dbg.value(metadata i32 %132, metadata !4548, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i32 %131, metadata !4551, metadata !DIExpression()), !dbg !4600
  %133 = add nuw nsw i32 %98, 1, !dbg !4713
  call void @llvm.dbg.value(metadata i8* %100, metadata !4550, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i32 %133, metadata !4563, metadata !DIExpression()), !dbg !4666
  %134 = icmp eq i32 %133, %31, !dbg !4667
  br i1 %134, label %287, label %94, !dbg !4668, !llvm.loop !4714

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4573, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4574, metadata !DIExpression()), !dbg !4717
  br i1 %28, label %136, label %138, !dbg !4718

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !4575, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i8 0, metadata !4576, metadata !DIExpression()), !dbg !4600
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4719
  call void @llvm.dbg.value(metadata i8* %137, metadata !4577, metadata !DIExpression()), !dbg !4600
  br label %143, !dbg !4722

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4723
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4723

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4577, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i8 undef, metadata !4576, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i8 0, metadata !4575, metadata !DIExpression()), !dbg !4600
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #27, !dbg !4725
  br label %148, !dbg !4728

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4729
  call void @llvm.dbg.value(metadata i8* %151, metadata !4550, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i32 0, metadata !4579, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i8 %149, metadata !4576, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i8 %150, metadata !4575, metadata !DIExpression()), !dbg !4600
  %152 = icmp eq i8 %30, 0, !dbg !4731
  br i1 %152, label %153, label %155, !dbg !4732

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4733
  br label %160, !dbg !4732

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4732

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4733
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4734
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4735
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !4600
  call void @llvm.dbg.value(metadata i8 undef, metadata !4572, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4600
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4736
  %166 = load i8, i8* %165, align 1, !dbg !4736
  %167 = zext i8 %162 to i32, !dbg !4737
  %168 = add i8 %166, %162, !dbg !4738
  call void @llvm.dbg.value(metadata i8 %168, metadata !4572, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4600
  %169 = icmp eq i32 %33, 0, !dbg !4739
  %170 = lshr i8 %163, 1, !dbg !4740
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4740
  call void @llvm.dbg.value(metadata i8 %171, metadata !4572, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4600
  %172 = icmp eq i32 %26, 0, !dbg !4741
  %173 = icmp eq i32 %161, 0, !dbg !4733
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4733
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4733
  call void @llvm.dbg.value(metadata i8 %175, metadata !4572, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4600
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4587, metadata !DIExpression()), !dbg !4742
  %176 = load i32, i32* %14, align 1, !dbg !4743
  store i8 %168, i8* %165, align 1, !dbg !4744
  store i8 %175, i8* %22, align 1, !dbg !4744
  store i8 %171, i8* %29, align 1, !dbg !4744
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #27, !dbg !4745
  call void @llvm.dbg.value(metadata i32 %177, metadata !4578, metadata !DIExpression()), !dbg !4600
  %178 = icmp slt i32 %177, 0, !dbg !4746
  br i1 %178, label %287, label %240, !dbg !4748

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !4550, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i32 %181, metadata !4579, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i8 %182, metadata !4576, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i8 %183, metadata !4575, metadata !DIExpression()), !dbg !4600
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4749
  call void @llvm.dbg.value(metadata i8* %184, metadata !4550, metadata !DIExpression()), !dbg !4600
  %185 = load i8, i8* %180, align 1, !dbg !4750
  call void @llvm.dbg.value(metadata i8 %185, metadata !4581, metadata !DIExpression()), !dbg !4751
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4752
  call void @llvm.dbg.value(metadata i8* %186, metadata !4550, metadata !DIExpression()), !dbg !4600
  %187 = load i8, i8* %184, align 1, !dbg !4753
  call void @llvm.dbg.value(metadata i8 %187, metadata !4584, metadata !DIExpression()), !dbg !4751
  %188 = zext i8 %187 to i32, !dbg !4754
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4754
  %190 = bitcast i32* %189 to i8**, !dbg !4755
  %191 = load i8*, i8** %190, align 4, !dbg !4755
  call void @llvm.dbg.value(metadata i8* %191, metadata !4585, metadata !DIExpression()), !dbg !4751
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #28, !dbg !4756
  call void @llvm.dbg.value(metadata i1 %192, metadata !4586, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4751
  br i1 %16, label %196, label %193, !dbg !4757

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4759
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #28, !dbg !4760
  br i1 %195, label %235, label %196, !dbg !4761

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4762

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4763

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4766
  br i1 %199, label %201, label %200, !dbg !4771

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1086) #27, !dbg !4772
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1086) #27, !dbg !4772
  unreachable, !dbg !4772

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4766
  %203 = add nuw nsw i8 %183, 1, !dbg !4774
  call void @llvm.dbg.value(metadata i8 %203, metadata !4575, metadata !DIExpression()), !dbg !4600
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4775
  br label %231, !dbg !4776

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4777

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4778
  br i1 %207, label %209, label %208, !dbg !4783

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1089) #27, !dbg !4784
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1089) #27, !dbg !4784
  unreachable, !dbg !4784

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4778
  %211 = add nuw nsw i8 %182, 1, !dbg !4786
  call void @llvm.dbg.value(metadata i8 %211, metadata !4576, metadata !DIExpression()), !dbg !4600
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4787
  br label %231, !dbg !4788

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4789

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4791
  br i1 %215, label %217, label %216, !dbg !4796

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1096) #27, !dbg !4797
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1096) #27, !dbg !4797
  unreachable, !dbg !4797

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4791
  %219 = add nuw nsw i8 %183, 1, !dbg !4799
  call void @llvm.dbg.value(metadata i8 %219, metadata !4575, metadata !DIExpression()), !dbg !4600
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4800
  br label %231, !dbg !4801

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4802
  br i1 %222, label %224, label %223, !dbg !4806

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1099) #27, !dbg !4807
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1099) #27, !dbg !4807
  unreachable, !dbg !4807

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4802
  %226 = add nuw nsw i8 %182, 1, !dbg !4809
  call void @llvm.dbg.value(metadata i8 %226, metadata !4576, metadata !DIExpression()), !dbg !4600
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4810
  store i8 %185, i8* %227, align 1, !dbg !4811
  %228 = add nuw nsw i8 %182, 2, !dbg !4812
  call void @llvm.dbg.value(metadata i8 %228, metadata !4576, metadata !DIExpression()), !dbg !4600
  %229 = zext i8 %226 to i32, !dbg !4813
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4813
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4814
  br label %235, !dbg !4815

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !4600
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4735
  call void @llvm.dbg.value(metadata i8 %237, metadata !4576, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i8 %236, metadata !4575, metadata !DIExpression()), !dbg !4600
  %238 = add nuw nsw i32 %181, 1, !dbg !4815
  call void @llvm.dbg.value(metadata i8* %186, metadata !4550, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i32 %238, metadata !4579, metadata !DIExpression()), !dbg !4730
  %239 = icmp eq i32 %238, %31, !dbg !4731
  br i1 %239, label %160, label %179, !dbg !4732, !llvm.loop !4816

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4740
  call void @llvm.dbg.value(metadata i32 %177, metadata !4548, metadata !DIExpression()), !dbg !4600
  store i32 %176, i32* %14, align 1, !dbg !4818
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4819
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #27, !dbg !4820
  call void @llvm.dbg.value(metadata i32 %243, metadata !4578, metadata !DIExpression()), !dbg !4600
  %244 = icmp slt i32 %243, 0, !dbg !4821
  br i1 %244, label %287, label %245, !dbg !4823

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !4548, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4600
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4824
  %248 = add nuw nsw i32 %44, %24, !dbg !4824
  %249 = sub i32 %247, %248, !dbg !4824
  call void @llvm.dbg.value(metadata i32 %249, metadata !4588, metadata !DIExpression()), !dbg !4600
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #27, !dbg !4825
  call void @llvm.dbg.value(metadata i32 %250, metadata !4578, metadata !DIExpression()), !dbg !4600
  %251 = icmp slt i32 %250, 0, !dbg !4826
  br i1 %251, label %287, label %252, !dbg !4828

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4829
  call void @llvm.dbg.value(metadata i32 %253, metadata !4548, metadata !DIExpression()), !dbg !4600
  %254 = add nuw nsw i32 %253, %250, !dbg !4830
  call void @llvm.dbg.value(metadata i32 %254, metadata !4548, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i32 0, metadata !4589, metadata !DIExpression()), !dbg !4831
  %255 = icmp eq i8 %162, 0, !dbg !4832
  br i1 %255, label %284, label %256, !dbg !4833

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4833

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !4589, metadata !DIExpression()), !dbg !4831
  call void @llvm.dbg.value(metadata i32 %260, metadata !4548, metadata !DIExpression()), !dbg !4600
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4834
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4835
  %262 = load i8, i8* %261, align 1, !dbg !4835
  call void @llvm.dbg.value(metadata i8 %262, metadata !4591, metadata !DIExpression()), !dbg !4836
  store i8 %262, i8* %10, align 1, !dbg !4837
  %263 = zext i8 %262 to i32, !dbg !4838
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4838
  %265 = bitcast i32* %264 to i8**, !dbg !4839
  %266 = load i8*, i8** %265, align 4, !dbg !4839
  call void @llvm.dbg.value(metadata i8* %266, metadata !4594, metadata !DIExpression()), !dbg !4836
  br i1 %257, label %270, label %267, !dbg !4840

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4841
  %269 = load i16, i16* %268, align 2, !dbg !4841
  br label %270, !dbg !4840

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4840
  call void @llvm.dbg.value(metadata i32 undef, metadata !4595, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4836
  call void @llvm.dbg.value(metadata i8* %10, metadata !4591, metadata !DIExpression(DW_OP_deref)), !dbg !4836
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #27, !dbg !4842
  call void @llvm.dbg.value(metadata i32 %272, metadata !4578, metadata !DIExpression()), !dbg !4600
  %273 = icmp slt i32 %272, 0, !dbg !4843
  br i1 %273, label %277, label %274, !dbg !4845

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !4595, metadata !DIExpression()), !dbg !4836
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !4548, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4600
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #28, !dbg !4846
  call void @llvm.dbg.value(metadata i32 %275, metadata !4578, metadata !DIExpression()), !dbg !4600
  %276 = icmp slt i32 %275, 0, !dbg !4847
  br i1 %276, label %277, label %279, !dbg !4849

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4548, metadata !DIExpression()), !dbg !4600
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4850
  call void @llvm.dbg.value(metadata i32 undef, metadata !4548, metadata !DIExpression()), !dbg !4600
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4851
  call void @llvm.dbg.value(metadata i32 %280, metadata !4548, metadata !DIExpression()), !dbg !4600
  %281 = add nsw i32 %280, %275, !dbg !4852
  call void @llvm.dbg.value(metadata i32 %281, metadata !4548, metadata !DIExpression()), !dbg !4600
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4850
  %282 = add nuw nsw i32 %259, 1, !dbg !4853
  call void @llvm.dbg.value(metadata i32 %282, metadata !4589, metadata !DIExpression()), !dbg !4831
  %283 = icmp eq i32 %282, %167, !dbg !4832
  br i1 %283, label %284, label %258, !dbg !4833, !llvm.loop !4854

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4830
  call void @llvm.dbg.value(metadata i32 %285, metadata !4548, metadata !DIExpression()), !dbg !4600
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #27, !dbg !4856
  br label %287, !dbg !4857

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !4600
  ret i32 %288, !dbg !4858
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4859 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4863, metadata !DIExpression()), !dbg !4871
  %2 = icmp eq i8* %0, null, !dbg !4872
  br i1 %2, label %3, label %4, !dbg !4875

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 198) #27, !dbg !4876
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 198) #27, !dbg !4876
  unreachable, !dbg !4876

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4864, metadata !DIExpression()), !dbg !4871
  call void @llvm.dbg.value(metadata i8* %0, metadata !4865, metadata !DIExpression()), !dbg !4871
  %5 = load i8, i8* %0, align 1, !dbg !4878
  %6 = zext i8 %5 to i32, !dbg !4878
  %7 = shl nuw nsw i32 %6, 2, !dbg !4879
  call void @llvm.dbg.value(metadata i32 %7, metadata !4866, metadata !DIExpression()), !dbg !4871
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4880
  %9 = load i8, i8* %8, align 1, !dbg !4880
  %10 = zext i8 %9 to i32, !dbg !4880
  call void @llvm.dbg.value(metadata i32 %10, metadata !4867, metadata !DIExpression()), !dbg !4871
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4881
  %12 = load i8, i8* %11, align 1, !dbg !4881
  %13 = zext i8 %12 to i32, !dbg !4881
  call void @llvm.dbg.value(metadata i32 %13, metadata !4868, metadata !DIExpression()), !dbg !4871
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4882
  call void @llvm.dbg.value(metadata i8* %14, metadata !4864, metadata !DIExpression()), !dbg !4871
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4883
  call void @llvm.dbg.value(metadata i8* %15, metadata !4864, metadata !DIExpression()), !dbg !4871
  call void @llvm.dbg.value(metadata i32 0, metadata !4869, metadata !DIExpression()), !dbg !4884
  %16 = icmp eq i8 %9, 0, !dbg !4885
  br i1 %16, label %17, label %22, !dbg !4887

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4871
  %19 = ptrtoint i8* %18 to i32, !dbg !4888
  %20 = ptrtoint i8* %0 to i32, !dbg !4888
  %21 = sub i32 %19, %20, !dbg !4888
  ret i32 %21, !dbg !4889

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4869, metadata !DIExpression()), !dbg !4884
  call void @llvm.dbg.value(metadata i8* %24, metadata !4864, metadata !DIExpression()), !dbg !4871
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4890
  call void @llvm.dbg.value(metadata i8* %25, metadata !4864, metadata !DIExpression()), !dbg !4871
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #27, !dbg !4892
  %27 = add i32 %26, 1, !dbg !4893
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4894
  call void @llvm.dbg.value(metadata i8* %28, metadata !4864, metadata !DIExpression()), !dbg !4871
  %29 = add nuw nsw i32 %23, 1, !dbg !4895
  call void @llvm.dbg.value(metadata i32 %29, metadata !4869, metadata !DIExpression()), !dbg !4884
  %30 = icmp eq i32 %29, %10, !dbg !4885
  br i1 %30, label %17, label %22, !dbg !4887, !llvm.loop !4896
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4898 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4902, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i8* %1, metadata !4903, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i8* %2, metadata !4904, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i16 %3, metadata !4905, metadata !DIExpression()), !dbg !4906
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4907
  br i1 %5, label %6, label %9, !dbg !4909

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !4910
  %8 = add i32 %7, 1, !dbg !4912
  br label %20, !dbg !4913

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4914
  br i1 %10, label %13, label %11, !dbg !4915

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4915
  br label %16, !dbg !4915

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !4916
  %15 = add i32 %14, 1, !dbg !4917
  br label %16, !dbg !4915

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4915
  %18 = and i32 %17, 65535, !dbg !4918
  call void @llvm.dbg.value(metadata i32 %17, metadata !4905, metadata !DIExpression()), !dbg !4906
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #27, !dbg !4919
  br label %20, !dbg !4920

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4906
  ret i32 %21, !dbg !4921
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4922 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4924, metadata !DIExpression()), !dbg !4925
  ret i32 0, !dbg !4926
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #12 !dbg !4927 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4931, metadata !DIExpression()), !dbg !4932
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4933
  ret void, !dbg !4934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #13 !dbg !4935 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4938
  ret i8* %1, !dbg !4939
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4940 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4951, metadata !DIExpression()), !dbg !4960
  call void @llvm.dbg.value(metadata i8* %0, metadata !4950, metadata !DIExpression()), !dbg !4960
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #28, !dbg !4961
  ret void, !dbg !4963
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4964 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4968, metadata !DIExpression()), !dbg !4970
  call void @llvm.dbg.value(metadata i8* %1, metadata !4969, metadata !DIExpression()), !dbg !4970
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4971
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !4971
  ret i32 %4, !dbg !4972
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4973 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4980, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4977, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata i8* %1, metadata !4978, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata i8* %2, metadata !4979, metadata !DIExpression()), !dbg !4981
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !4982
  ret void, !dbg !4983
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4984 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4988, metadata !DIExpression()), !dbg !4991
  call void @llvm.dbg.value(metadata i32 %1, metadata !4989, metadata !DIExpression()), !dbg !4991
  call void @llvm.dbg.value(metadata i32 0, metadata !4990, metadata !DIExpression()), !dbg !4991
  %3 = icmp eq i32 %1, 0, !dbg !4992
  br i1 %3, label %13, label %4, !dbg !4995

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4990, metadata !DIExpression()), !dbg !4991
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4996
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4998
  %8 = load i8, i8* %7, align 1, !dbg !4998
  %9 = zext i8 %8 to i32, !dbg !4998
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !4996
  %11 = add nuw i32 %5, 1, !dbg !4999
  call void @llvm.dbg.value(metadata i32 %11, metadata !4990, metadata !DIExpression()), !dbg !4991
  %12 = icmp eq i32 %11, %1, !dbg !4992
  br i1 %12, label %13, label %4, !dbg !4995, !llvm.loop !5000

13:                                               ; preds = %4, %2
  ret void, !dbg !5002
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5003 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5007, metadata !DIExpression()), !dbg !5009
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5010
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !5010
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5008, metadata !DIExpression()), !dbg !5011
  call void @llvm.va_start(i8* nonnull %3), !dbg !5012
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5013
  %5 = load i32, i32* %4, align 4, !dbg !5013
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5013
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #28, !dbg !5013
  call void @llvm.va_end(i8* nonnull %3), !dbg !5014
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !5015
  ret void, !dbg !5015
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !5016 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5020, metadata !DIExpression()), !dbg !5025
  call void @llvm.dbg.value(metadata i32 %1, metadata !5021, metadata !DIExpression()), !dbg !5025
  call void @llvm.dbg.value(metadata i8* %2, metadata !5022, metadata !DIExpression()), !dbg !5025
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5026
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !5026
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5023, metadata !DIExpression()), !dbg !5027
  call void @llvm.va_start(i8* nonnull %5), !dbg !5028
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5029
  %7 = load i32, i32* %6, align 4, !dbg !5029
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5029
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #28, !dbg !5029
  call void @llvm.dbg.value(metadata i32 %9, metadata !5024, metadata !DIExpression()), !dbg !5025
  call void @llvm.va_end(i8* nonnull %5), !dbg !5030
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !5031
  ret i32 %9, !dbg !5032
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5033 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5040, metadata !DIExpression()), !dbg !5047
  call void @llvm.dbg.value(metadata i8* %0, metadata !5037, metadata !DIExpression()), !dbg !5047
  call void @llvm.dbg.value(metadata i32 %1, metadata !5038, metadata !DIExpression()), !dbg !5047
  call void @llvm.dbg.value(metadata i8* %2, metadata !5039, metadata !DIExpression()), !dbg !5047
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5048
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #26, !dbg !5048
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5041, metadata !DIExpression()), !dbg !5049
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5050
  store i8* %0, i8** %7, align 4, !dbg !5050
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5050
  store i32 %1, i32* %8, align 4, !dbg !5050
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5050
  store i32 0, i32* %9, align 4, !dbg !5050
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #28, !dbg !5051
  %10 = load i32, i32* %9, align 4, !dbg !5052
  %11 = load i32, i32* %8, align 4, !dbg !5054
  %12 = icmp slt i32 %10, %11, !dbg !5055
  br i1 %12, label %13, label %15, !dbg !5056

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5057
  store i8 0, i8* %14, align 1, !dbg !5059
  br label %15, !dbg !5060

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #26, !dbg !5061
  ret i32 %10, !dbg !5062
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #14 !dbg !5063 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5068, metadata !DIExpression()), !dbg !5070
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5069, metadata !DIExpression()), !dbg !5070
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5071
  %4 = load i8*, i8** %3, align 4, !dbg !5071
  %5 = icmp eq i8* %4, null, !dbg !5073
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5074
  br i1 %5, label %12, label %8, !dbg !5075

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5076
  %10 = load i32, i32* %9, align 4, !dbg !5076
  %11 = icmp slt i32 %7, %10, !dbg !5077
  br i1 %11, label %15, label %12, !dbg !5078

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5079
  %14 = add nsw i32 %7, 1, !dbg !5081
  store i32 %14, i32* %13, align 4, !dbg !5081
  br label %25, !dbg !5082

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5083
  %17 = icmp eq i32 %7, %16, !dbg !5085
  br i1 %17, label %18, label %21, !dbg !5086

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5087
  store i32 %19, i32* %6, align 4, !dbg !5087
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5089
  store i8 0, i8* %20, align 1, !dbg !5090
  br label %25, !dbg !5091

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5092
  %23 = add nsw i32 %7, 1, !dbg !5094
  store i32 %23, i32* %6, align 4, !dbg !5094
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5095
  store i8 %22, i8* %24, align 1, !dbg !5096
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5097
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !5098 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5103, metadata !DIExpression()), !dbg !5107
  call void @llvm.dbg.value(metadata i8* %1, metadata !5104, metadata !DIExpression()), !dbg !5107
  call void @llvm.dbg.value(metadata i8* %2, metadata !5105, metadata !DIExpression()), !dbg !5107
  call void @llvm.dbg.value(metadata i8* %3, metadata !5106, metadata !DIExpression()), !dbg !5107
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !5108
  %5 = tail call fastcc %struct.k_thread* @k_current_get.41() #29, !dbg !5109
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #28, !dbg !5110
  unreachable, !dbg !5111
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.41() unnamed_addr #6 !dbg !5112 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.42() #29, !dbg !5218
  ret %struct.k_thread* %1, !dbg !5219
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5220 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5224, metadata !DIExpression()), !dbg !5225
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !5226, !srcloc !5228
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !5229
  ret void, !dbg !5230
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.42() unnamed_addr #6 !dbg !5231 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !5232, !srcloc !5234
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !5235
  ret %struct.k_thread* %1, !dbg !5236
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !5237 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5248, metadata !DIExpression()), !dbg !5252
  call void @llvm.dbg.value(metadata i8* %1, metadata !5249, metadata !DIExpression()), !dbg !5252
  %3 = icmp eq i8* %1, null, !dbg !5253
  br i1 %3, label %16, label %4, !dbg !5255

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5256
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5256
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5250, metadata !DIExpression()), !dbg !5252
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #28, !dbg !5257, !range !5258
  call void @llvm.dbg.value(metadata i32 %7, metadata !5251, metadata !DIExpression()), !dbg !5252
  %8 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %7) #28, !dbg !5259
  br i1 %8, label %10, label %9, !dbg !5262

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 176) #27, !dbg !5263
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3.46, i32 0, i32 0), i8* noundef nonnull %1) #27, !dbg !5263
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 176) #27, !dbg !5263
  unreachable, !dbg !5263

10:                                               ; preds = %4
  %11 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #28, !dbg !5265
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %6, i32 noundef %11) #28, !dbg !5265
  %13 = icmp eq i32 %12, %7, !dbg !5265
  br i1 %13, label %15, label %14, !dbg !5268

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.47, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 185) #27, !dbg !5269
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5.48, i32 0, i32 0), i8* noundef nonnull %1) #27, !dbg !5269
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 185) #27, !dbg !5269
  unreachable, !dbg !5269

15:                                               ; preds = %10
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #28, !dbg !5271
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #28, !dbg !5272
  br label %16

16:                                               ; preds = %2, %15
  ret void, !dbg !5273
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #5 !dbg !5274 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5278, metadata !DIExpression()), !dbg !5282
  call void @llvm.dbg.value(metadata i8* %1, metadata !5279, metadata !DIExpression()), !dbg !5282
  call void @llvm.dbg.value(metadata i8* %1, metadata !5280, metadata !DIExpression()), !dbg !5282
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5283
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5281, metadata !DIExpression()), !dbg !5282
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !5284
  %5 = ptrtoint i8* %4 to i32, !dbg !5285
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !5285
  %7 = sub i32 %5, %6, !dbg !5285
  %8 = lshr i32 %7, 3, !dbg !5286
  ret i32 %8, !dbg !5287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5288 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5292, metadata !DIExpression()), !dbg !5294
  call void @llvm.dbg.value(metadata i32 %1, metadata !5293, metadata !DIExpression()), !dbg !5294
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #28, !dbg !5295
  %4 = and i32 %3, 1, !dbg !5296
  %5 = icmp ne i32 %4, 0, !dbg !5295
  ret i1 %5, !dbg !5297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5298 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5302, metadata !DIExpression()), !dbg !5304
  call void @llvm.dbg.value(metadata i32 %1, metadata !5303, metadata !DIExpression()), !dbg !5304
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5305
  %4 = add i32 %3, %1, !dbg !5306
  ret i32 %4, !dbg !5307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5308 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5310, metadata !DIExpression()), !dbg !5312
  call void @llvm.dbg.value(metadata i32 %1, metadata !5311, metadata !DIExpression()), !dbg !5312
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #28, !dbg !5313
  %4 = sub i32 %1, %3, !dbg !5314
  ret i32 %4, !dbg !5315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !5316 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5320, metadata !DIExpression()), !dbg !5325
  call void @llvm.dbg.value(metadata i32 %1, metadata !5321, metadata !DIExpression()), !dbg !5325
  call void @llvm.dbg.value(metadata i1 %2, metadata !5322, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5325
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5326
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5323, metadata !DIExpression()), !dbg !5325
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5324, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5325
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !5327
  %6 = bitcast i8* %5 to i16*, !dbg !5327
  %7 = load i16, i16* %6, align 2, !dbg !5327
  %8 = and i16 %7, -2, !dbg !5331
  %9 = zext i1 %2 to i16, !dbg !5331
  %10 = or i16 %8, %9, !dbg !5331
  store i16 %10, i16* %6, align 2, !dbg !5327
  ret void, !dbg !5332
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5333 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5337, metadata !DIExpression()), !dbg !5339
  call void @llvm.dbg.value(metadata i32 %1, metadata !5338, metadata !DIExpression()), !dbg !5339
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5340
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #28, !dbg !5342
  br i1 %4, label %7, label %5, !dbg !5343

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #28, !dbg !5344
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5346
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #28, !dbg !5347
  br label %7, !dbg !5348

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5349
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #28, !dbg !5351
  br i1 %9, label %13, label %10, !dbg !5352

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #28, !dbg !5353
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5355
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #28, !dbg !5356
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5357
  call void @llvm.dbg.value(metadata i32 %12, metadata !5338, metadata !DIExpression()), !dbg !5339
  br label %13, !dbg !5358

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5338, metadata !DIExpression()), !dbg !5339
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #28, !dbg !5359
  ret void, !dbg !5360
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5361 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5363, metadata !DIExpression()), !dbg !5368
  call void @llvm.dbg.value(metadata i32 %1, metadata !5364, metadata !DIExpression()), !dbg !5368
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5369, !range !5370
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #28, !dbg !5371
  call void @llvm.dbg.value(metadata i32 %4, metadata !5365, metadata !DIExpression()), !dbg !5372
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #28, !dbg !5373
  ret void, !dbg !5374
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5375 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5379, metadata !DIExpression()), !dbg !5384
  call void @llvm.dbg.value(metadata i32 %1, metadata !5380, metadata !DIExpression()), !dbg !5384
  call void @llvm.dbg.value(metadata i32 %2, metadata !5381, metadata !DIExpression()), !dbg !5384
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5385
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #28, !dbg !5386
  %6 = add i32 %5, %4, !dbg !5387
  call void @llvm.dbg.value(metadata i32 %6, metadata !5382, metadata !DIExpression()), !dbg !5384
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #28, !dbg !5388
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #28, !dbg !5389
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #28, !dbg !5390
  ret void, !dbg !5391
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5392 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5394, metadata !DIExpression()), !dbg !5399
  call void @llvm.dbg.value(metadata i32 %1, metadata !5395, metadata !DIExpression()), !dbg !5399
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5400, !range !5370
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #28, !dbg !5401
  call void @llvm.dbg.value(metadata i32 %4, metadata !5396, metadata !DIExpression()), !dbg !5402
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #28, !dbg !5403
  ret void, !dbg !5404
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5405 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5409, metadata !DIExpression()), !dbg !5411
  call void @llvm.dbg.value(metadata i32 %1, metadata !5410, metadata !DIExpression()), !dbg !5411
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #28, !dbg !5412
  %4 = lshr i32 %3, 1, !dbg !5413
  ret i32 %4, !dbg !5414
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #6 !dbg !5415 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5419, metadata !DIExpression()), !dbg !5422
  call void @llvm.dbg.value(metadata i32 %1, metadata !5420, metadata !DIExpression()), !dbg !5422
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #28, !dbg !5423
  %4 = add i32 %1, 1, !dbg !5424
  %5 = sub i32 %4, %3, !dbg !5425
  call void @llvm.dbg.value(metadata i32 %5, metadata !5421, metadata !DIExpression()), !dbg !5422
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !5426, !range !5427
  %7 = sub nsw i32 31, %6, !dbg !5428
  ret i32 %7, !dbg !5429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5430 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5434, metadata !DIExpression()), !dbg !5443
  call void @llvm.dbg.value(metadata i32 %1, metadata !5435, metadata !DIExpression()), !dbg !5443
  call void @llvm.dbg.value(metadata i32 %2, metadata !5436, metadata !DIExpression()), !dbg !5443
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !5437, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5443
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !5444
  %5 = load i32, i32* %4, align 4, !dbg !5444
  %6 = icmp eq i32 %5, 0, !dbg !5445
  br i1 %6, label %7, label %12, !dbg !5446

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5447
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5449
  %10 = load i32, i32* %9, align 4, !dbg !5450
  %11 = or i32 %10, %8, !dbg !5450
  store i32 %11, i32* %9, align 4, !dbg !5450
  store i32 %1, i32* %4, align 4, !dbg !5451
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #28, !dbg !5452
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #28, !dbg !5453
  br label %14, !dbg !5454

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !5439, metadata !DIExpression()), !dbg !5455
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #28, !dbg !5456, !range !5457
  call void @llvm.dbg.value(metadata i32 %13, metadata !5442, metadata !DIExpression()), !dbg !5455
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #28, !dbg !5458
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #28, !dbg !5459
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #28, !dbg !5460
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #28, !dbg !5461
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !5462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5463 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5465, metadata !DIExpression()), !dbg !5468
  call void @llvm.dbg.value(metadata i32 %1, metadata !5466, metadata !DIExpression()), !dbg !5468
  call void @llvm.dbg.value(metadata i32 %2, metadata !5467, metadata !DIExpression()), !dbg !5468
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #28, !dbg !5469
  ret void, !dbg !5470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5471 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5473, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %1, metadata !5474, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %2, metadata !5475, metadata !DIExpression()), !dbg !5476
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #28, !dbg !5477
  ret void, !dbg !5478
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !5479 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5481, metadata !DIExpression()), !dbg !5483
  call void @llvm.dbg.value(metadata i32 %1, metadata !5482, metadata !DIExpression()), !dbg !5483
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #28, !dbg !5484
  ret i32 %3, !dbg !5485
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !5486 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5490, metadata !DIExpression()), !dbg !5495
  call void @llvm.dbg.value(metadata i32 %1, metadata !5491, metadata !DIExpression()), !dbg !5495
  call void @llvm.dbg.value(metadata i32 %2, metadata !5492, metadata !DIExpression()), !dbg !5495
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5496
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5493, metadata !DIExpression()), !dbg !5495
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5494, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5495
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5494, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5495
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5497
  call void @llvm.dbg.value(metadata i8* %5, metadata !5494, metadata !DIExpression()), !dbg !5495
  %6 = bitcast i8* %5 to i16*, !dbg !5498
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5501
  %8 = load i16, i16* %7, align 2, !dbg !5501
  %9 = zext i16 %8 to i32, !dbg !5501
  ret i32 %9, !dbg !5502
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #5 !dbg !5503 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5507, metadata !DIExpression()), !dbg !5508
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !5509
  ret %struct.chunk_unit_t* %2, !dbg !5510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #12 !dbg !5511 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5515, metadata !DIExpression()), !dbg !5521
  call void @llvm.dbg.value(metadata i32 %1, metadata !5516, metadata !DIExpression()), !dbg !5521
  call void @llvm.dbg.value(metadata i32 %2, metadata !5517, metadata !DIExpression()), !dbg !5521
  call void @llvm.dbg.value(metadata i32 %3, metadata !5518, metadata !DIExpression()), !dbg !5521
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5522
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !5519, metadata !DIExpression()), !dbg !5521
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !5520, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5521
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !5523
  call void @llvm.dbg.value(metadata i8* %6, metadata !5520, metadata !DIExpression()), !dbg !5521
  %7 = trunc i32 %3 to i16, !dbg !5524
  %8 = bitcast i8* %6 to i16*, !dbg !5527
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !5528
  store i16 %7, i16* %9, align 2, !dbg !5529
  ret void, !dbg !5530
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #5 !dbg !5531 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5535, metadata !DIExpression()), !dbg !5536
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #28, !dbg !5537
  ret i32 %2, !dbg !5538
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5539 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5543, metadata !DIExpression()), !dbg !5545
  call void @llvm.dbg.value(metadata i32 %1, metadata !5544, metadata !DIExpression()), !dbg !5545
  %3 = add i32 %1, 4, !dbg !5546
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #28, !dbg !5547
  ret i32 %4, !dbg !5548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #5 !dbg !5549 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5553, metadata !DIExpression()), !dbg !5554
  %2 = add i32 %0, 7, !dbg !5555
  %3 = lshr i32 %2, 3, !dbg !5556
  ret i32 %3, !dbg !5557
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5558 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5562, metadata !DIExpression()), !dbg !5565
  call void @llvm.dbg.value(metadata i32 %1, metadata !5563, metadata !DIExpression()), !dbg !5565
  call void @llvm.dbg.value(metadata i32 %2, metadata !5564, metadata !DIExpression()), !dbg !5565
  %4 = shl i32 %2, 1, !dbg !5566
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #28, !dbg !5567
  ret void, !dbg !5568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5569 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5571, metadata !DIExpression()), !dbg !5574
  call void @llvm.dbg.value(metadata i32 %1, metadata !5572, metadata !DIExpression()), !dbg !5574
  call void @llvm.dbg.value(metadata i32 %2, metadata !5573, metadata !DIExpression()), !dbg !5574
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #28, !dbg !5575
  ret void, !dbg !5576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5577 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5579, metadata !DIExpression()), !dbg !5587
  call void @llvm.dbg.value(metadata i32 %1, metadata !5580, metadata !DIExpression()), !dbg !5587
  call void @llvm.dbg.value(metadata i32 %2, metadata !5581, metadata !DIExpression()), !dbg !5587
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !5588
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %4, metadata !5582, metadata !DIExpression()), !dbg !5587
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5589
  %6 = icmp eq i32 %5, %1, !dbg !5590
  br i1 %6, label %7, label %14, !dbg !5591

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5592
  %9 = xor i32 %8, -1, !dbg !5594
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5595
  %11 = load i32, i32* %10, align 4, !dbg !5596
  %12 = and i32 %11, %9, !dbg !5596
  store i32 %12, i32* %10, align 4, !dbg !5596
  %13 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5597
  store i32 0, i32* %13, align 4, !dbg !5598
  br label %17, !dbg !5599

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5600
  call void @llvm.dbg.value(metadata i32 %15, metadata !5583, metadata !DIExpression()), !dbg !5601
  call void @llvm.dbg.value(metadata i32 %5, metadata !5586, metadata !DIExpression()), !dbg !5601
  %16 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5602
  store i32 %5, i32* %16, align 4, !dbg !5603
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #28, !dbg !5604
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #28, !dbg !5605
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !5606
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !5607 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5609, metadata !DIExpression()), !dbg !5611
  call void @llvm.dbg.value(metadata i32 %1, metadata !5610, metadata !DIExpression()), !dbg !5611
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #28, !dbg !5612
  ret i32 %3, !dbg !5613
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #13 !dbg !5614 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5618, metadata !DIExpression()), !dbg !5625
  call void @llvm.dbg.value(metadata i8* %1, metadata !5619, metadata !DIExpression()), !dbg !5625
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5626
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5626
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5620, metadata !DIExpression()), !dbg !5625
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #28, !dbg !5627
  call void @llvm.dbg.value(metadata i32 %5, metadata !5621, metadata !DIExpression()), !dbg !5625
  %6 = ptrtoint i8* %1 to i32, !dbg !5628
  call void @llvm.dbg.value(metadata i32 %6, metadata !5622, metadata !DIExpression()), !dbg !5625
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #28, !dbg !5629
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !5629
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !5630
  call void @llvm.dbg.value(metadata i32 %9, metadata !5623, metadata !DIExpression()), !dbg !5625
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #28, !dbg !5631
  %11 = shl i32 %10, 3, !dbg !5632
  call void @llvm.dbg.value(metadata i32 %11, metadata !5624, metadata !DIExpression()), !dbg !5625
  %12 = sub i32 %9, %6, !dbg !5633
  %13 = add i32 %12, %11, !dbg !5634
  ret i32 %13, !dbg !5635
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !5636 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5640, metadata !DIExpression()), !dbg !5646
  call void @llvm.dbg.value(metadata i32 %1, metadata !5641, metadata !DIExpression()), !dbg !5646
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5647
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5647
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5642, metadata !DIExpression()), !dbg !5646
  %5 = icmp eq i32 %1, 0, !dbg !5648
  br i1 %5, label %19, label %6, !dbg !5650

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #28, !dbg !5651
  br i1 %7, label %19, label %8, !dbg !5652

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #28, !dbg !5653, !range !5258
  call void @llvm.dbg.value(metadata i32 %9, metadata !5644, metadata !DIExpression()), !dbg !5646
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #28, !dbg !5654
  call void @llvm.dbg.value(metadata i32 %10, metadata !5645, metadata !DIExpression()), !dbg !5646
  %11 = icmp eq i32 %10, 0, !dbg !5655
  br i1 %11, label %19, label %12, !dbg !5657

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #28, !dbg !5658
  %14 = icmp ugt i32 %13, %9, !dbg !5660
  br i1 %14, label %15, label %17, !dbg !5661

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !5662
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #28, !dbg !5664
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #28, !dbg !5665
  br label %17, !dbg !5666

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #28, !dbg !5667
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #28, !dbg !5668
  call void @llvm.dbg.value(metadata i8* %18, metadata !5643, metadata !DIExpression()), !dbg !5646
  br label %19, !dbg !5669

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !5646
  ret i8* %20, !dbg !5670
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !5671 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5675, metadata !DIExpression()), !dbg !5677
  call void @llvm.dbg.value(metadata i32 %1, metadata !5676, metadata !DIExpression()), !dbg !5677
  %3 = lshr i32 %1, 3, !dbg !5678
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5679
  %5 = load i32, i32* %4, align 4, !dbg !5679
  %6 = icmp uge i32 %3, %5, !dbg !5680
  ret i1 %6, !dbg !5681
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #8 !dbg !5682 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5686, metadata !DIExpression()), !dbg !5701
  call void @llvm.dbg.value(metadata i32 %1, metadata !5687, metadata !DIExpression()), !dbg !5701
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5702
  call void @llvm.dbg.value(metadata i32 %3, metadata !5688, metadata !DIExpression()), !dbg !5701
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !5689, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5701
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !5703
  %5 = load i32, i32* %4, align 4, !dbg !5703
  %6 = icmp eq i32 %5, 0, !dbg !5704
  br i1 %6, label %19, label %7, !dbg !5705

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !5706
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !5707
  call void @llvm.dbg.value(metadata i32 %9, metadata !5693, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.value(metadata i32 %8, metadata !5694, metadata !DIExpression()), !dbg !5708
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #28, !dbg !5709
  %11 = icmp ult i32 %10, %1, !dbg !5711
  br i1 %11, label %13, label %12, !dbg !5712

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #28, !dbg !5713
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #28, !dbg !5715
  store i32 %14, i32* %4, align 4, !dbg !5716
  %15 = add nsw i32 %9, -1, !dbg !5717
  call void @llvm.dbg.value(metadata i32 %15, metadata !5693, metadata !DIExpression()), !dbg !5707
  %16 = icmp eq i32 %15, 0, !dbg !5717
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !5718
  br i1 %18, label %19, label %7, !dbg !5718, !llvm.loop !5719

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5722
  %21 = load i32, i32* %20, align 4, !dbg !5722
  %22 = add nsw i32 %3, 1, !dbg !5723
  %23 = shl nsw i32 -1, %22, !dbg !5723
  %24 = and i32 %21, %23, !dbg !5724
  call void @llvm.dbg.value(metadata i32 %24, metadata !5696, metadata !DIExpression()), !dbg !5701
  %25 = icmp eq i32 %24, 0, !dbg !5725
  br i1 %25, label %30, label %26, !dbg !5726

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !5727, !range !5427
  call void @llvm.dbg.value(metadata i32 %27, metadata !5697, metadata !DIExpression()), !dbg !5728
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !5729
  %29 = load i32, i32* %28, align 4, !dbg !5729
  call void @llvm.dbg.value(metadata i32 %29, metadata !5700, metadata !DIExpression()), !dbg !5728
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #28, !dbg !5730
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !5701
  ret i32 %31, !dbg !5731
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5732 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5734, metadata !DIExpression()), !dbg !5740
  call void @llvm.dbg.value(metadata i32 %1, metadata !5735, metadata !DIExpression()), !dbg !5740
  call void @llvm.dbg.value(metadata i32 %2, metadata !5736, metadata !DIExpression()), !dbg !5740
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5741
  call void @llvm.dbg.value(metadata i32 %4, metadata !5737, metadata !DIExpression()), !dbg !5740
  %5 = sub i32 %2, %1, !dbg !5742
  call void @llvm.dbg.value(metadata i32 %5, metadata !5738, metadata !DIExpression()), !dbg !5740
  %6 = sub i32 %4, %5, !dbg !5743
  call void @llvm.dbg.value(metadata i32 %6, metadata !5739, metadata !DIExpression()), !dbg !5740
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #28, !dbg !5744
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #28, !dbg !5745
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #28, !dbg !5746
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #28, !dbg !5747
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #28, !dbg !5748
  ret void, !dbg !5749
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5750 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5754, metadata !DIExpression()), !dbg !5758
  call void @llvm.dbg.value(metadata i32 %1, metadata !5755, metadata !DIExpression()), !dbg !5758
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5759
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5756, metadata !DIExpression()), !dbg !5758
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !5760
  call void @llvm.dbg.value(metadata i8* %4, metadata !5757, metadata !DIExpression()), !dbg !5758
  ret i8* %4, !dbg !5761
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5762 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5766, metadata !DIExpression()), !dbg !5778
  call void @llvm.dbg.value(metadata i32 %1, metadata !5767, metadata !DIExpression()), !dbg !5778
  call void @llvm.dbg.value(metadata i32 %2, metadata !5768, metadata !DIExpression()), !dbg !5778
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5779
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5779
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !5769, metadata !DIExpression()), !dbg !5778
  %6 = sub i32 0, %1, !dbg !5780
  %7 = and i32 %6, %1, !dbg !5781
  call void @llvm.dbg.value(metadata i32 %7, metadata !5771, metadata !DIExpression()), !dbg !5778
  %8 = icmp eq i32 %7, %1, !dbg !5782
  br i1 %8, label %13, label %9, !dbg !5784

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !5785
  call void @llvm.dbg.value(metadata i32 %10, metadata !5767, metadata !DIExpression()), !dbg !5778
  %11 = icmp ult i32 %7, 4, !dbg !5787
  %12 = select i1 %11, i32 %7, i32 4, !dbg !5787
  br label %17, !dbg !5787

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !5788
  br i1 %14, label %15, label %17, !dbg !5791

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #28, !dbg !5792
  br label %61, !dbg !5794

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !5778
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !5795
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5767, metadata !DIExpression()), !dbg !5778
  call void @llvm.dbg.value(metadata i32 %19, metadata !5770, metadata !DIExpression()), !dbg !5778
  call void @llvm.dbg.value(metadata i32 %18, metadata !5771, metadata !DIExpression()), !dbg !5778
  %21 = add i32 %20, -1, !dbg !5796
  %22 = tail call i32 @llvm.ctpop.i32(i32 %20), !dbg !5796, !range !5427
  %23 = icmp ult i32 %22, 2, !dbg !5796
  br i1 %23, label %25, label %24, !dbg !5799

24:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.49, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 324) #27, !dbg !5800
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.50, i32 0, i32 0)) #27, !dbg !5800
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 324) #27, !dbg !5800
  unreachable, !dbg !5800

25:                                               ; preds = %17
  %26 = icmp eq i32 %2, 0, !dbg !5802
  br i1 %26, label %61, label %27, !dbg !5804

27:                                               ; preds = %25
  %28 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #28, !dbg !5805
  br i1 %28, label %61, label %29, !dbg !5806

29:                                               ; preds = %27
  %30 = sub i32 %2, %19, !dbg !5807
  %31 = add i32 %30, %20, !dbg !5808
  %32 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %31) #28, !dbg !5809, !range !5258
  call void @llvm.dbg.value(metadata i32 %32, metadata !5772, metadata !DIExpression()), !dbg !5778
  %33 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %32) #28, !dbg !5810
  call void @llvm.dbg.value(metadata i32 %33, metadata !5773, metadata !DIExpression()), !dbg !5778
  %34 = icmp eq i32 %33, 0, !dbg !5811
  br i1 %34, label %61, label %35, !dbg !5813

35:                                               ; preds = %29
  %36 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %33) #28, !dbg !5814
  call void @llvm.dbg.value(metadata i8* %36, metadata !5774, metadata !DIExpression()), !dbg !5778
  %37 = getelementptr inbounds i8, i8* %36, i32 %18, !dbg !5815
  %38 = ptrtoint i8* %37 to i32, !dbg !5815
  %39 = add i32 %21, %38, !dbg !5815
  %40 = sub i32 0, %20, !dbg !5815
  %41 = and i32 %39, %40, !dbg !5815
  %42 = inttoptr i32 %41 to i8*, !dbg !5816
  %43 = sub i32 0, %18, !dbg !5817
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !5817
  call void @llvm.dbg.value(metadata i8* %44, metadata !5774, metadata !DIExpression()), !dbg !5778
  %45 = getelementptr inbounds i8, i8* %44, i32 %2, !dbg !5818
  %46 = ptrtoint i8* %45 to i32, !dbg !5818
  %47 = add i32 %46, 7, !dbg !5818
  %48 = and i32 %47, -8, !dbg !5818
  call void @llvm.dbg.value(metadata i32 %48, metadata !5775, metadata !DIExpression()), !dbg !5778
  %49 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %44) #28, !dbg !5819
  call void @llvm.dbg.value(metadata i32 %49, metadata !5776, metadata !DIExpression()), !dbg !5778
  %50 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #28, !dbg !5820
  %51 = ptrtoint %struct.chunk_unit_t* %50 to i32, !dbg !5821
  %52 = sub i32 %48, %51, !dbg !5821
  %53 = ashr exact i32 %52, 3, !dbg !5821
  call void @llvm.dbg.value(metadata i32 %53, metadata !5777, metadata !DIExpression()), !dbg !5778
  %54 = icmp ugt i32 %49, %33, !dbg !5822
  br i1 %54, label %55, label %56, !dbg !5824

55:                                               ; preds = %35
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %33, i32 noundef %49) #28, !dbg !5825
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %33) #28, !dbg !5827
  br label %56, !dbg !5828

56:                                               ; preds = %55, %35
  %57 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %49) #28, !dbg !5829
  %58 = icmp ugt i32 %57, %53, !dbg !5831
  br i1 %58, label %59, label %60, !dbg !5832

59:                                               ; preds = %56
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %49, i32 noundef %53) #28, !dbg !5833
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %53) #28, !dbg !5835
  br label %60, !dbg !5836

60:                                               ; preds = %59, %56
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %49, i1 noundef zeroext true) #28, !dbg !5837
  br label %61

61:                                               ; preds = %60, %29, %25, %27, %15
  %62 = phi i8* [ %16, %15 ], [ null, %27 ], [ null, %25 ], [ %44, %60 ], [ null, %29 ], !dbg !5778
  ret i8* %62, !dbg !5838
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !5839 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5843, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i8* %1, metadata !5844, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i32 %2, metadata !5845, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i32 %3, metadata !5846, metadata !DIExpression()), !dbg !5862
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5863
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5863
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5847, metadata !DIExpression()), !dbg !5862
  %7 = icmp eq i8* %1, null, !dbg !5864
  br i1 %7, label %8, label %10, !dbg !5866

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #28, !dbg !5867
  br label %63, !dbg !5869

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !5870
  br i1 %11, label %12, label %13, !dbg !5872

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #28, !dbg !5873
  br label %63, !dbg !5875

13:                                               ; preds = %10
  %14 = add i32 %2, -1, !dbg !5876
  %15 = tail call i32 @llvm.ctpop.i32(i32 %2), !dbg !5876, !range !5427
  %16 = icmp ult i32 %15, 2, !dbg !5876
  br i1 %16, label %18, label %17, !dbg !5879

17:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.49, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 393) #27, !dbg !5880
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.50, i32 0, i32 0)) #27, !dbg !5880
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 393) #27, !dbg !5880
  unreachable, !dbg !5880

18:                                               ; preds = %13
  %19 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #28, !dbg !5882
  br i1 %19, label %63, label %20, !dbg !5884

20:                                               ; preds = %18
  %21 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #28, !dbg !5885, !range !5258
  call void @llvm.dbg.value(metadata i32 %21, metadata !5848, metadata !DIExpression()), !dbg !5862
  %22 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %21) #28, !dbg !5886
  call void @llvm.dbg.value(metadata i32 %22, metadata !5849, metadata !DIExpression()), !dbg !5862
  %23 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %21) #28, !dbg !5887
  %24 = ptrtoint i8* %1 to i32, !dbg !5888
  %25 = ptrtoint i8* %23 to i32, !dbg !5888
  %26 = sub i32 %24, %25, !dbg !5888
  call void @llvm.dbg.value(metadata i32 %26, metadata !5850, metadata !DIExpression()), !dbg !5862
  %27 = add i32 %26, %3, !dbg !5889
  %28 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %27) #28, !dbg !5890
  call void @llvm.dbg.value(metadata i32 %28, metadata !5851, metadata !DIExpression()), !dbg !5862
  %29 = icmp eq i32 %2, 0, !dbg !5891
  %30 = and i32 %14, %24
  %31 = icmp eq i32 %30, 0
  %32 = or i1 %29, %31, !dbg !5892
  br i1 %32, label %33, label %53, !dbg !5892

33:                                               ; preds = %20
  %34 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #28, !dbg !5893
  %35 = icmp eq i32 %28, %34, !dbg !5894
  br i1 %35, label %63, label %36, !dbg !5895

36:                                               ; preds = %33
  %37 = icmp ult i32 %28, %34, !dbg !5896
  br i1 %37, label %38, label %40, !dbg !5897

38:                                               ; preds = %36
  %39 = add i32 %28, %21, !dbg !5898
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %39) #28, !dbg !5900
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #28, !dbg !5901
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %39) #28, !dbg !5902
  br label %63, !dbg !5903

40:                                               ; preds = %36
  %41 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %22) #28, !dbg !5904
  br i1 %41, label %53, label %42, !dbg !5905

42:                                               ; preds = %40
  %43 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #28, !dbg !5906
  %44 = add i32 %43, %34, !dbg !5907
  %45 = icmp ult i32 %44, %28, !dbg !5908
  br i1 %45, label %53, label %46, !dbg !5909

46:                                               ; preds = %42
  %47 = sub i32 %28, %34, !dbg !5910
  call void @llvm.dbg.value(metadata i32 %47, metadata !5852, metadata !DIExpression()), !dbg !5911
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %22) #28, !dbg !5912
  %48 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #28, !dbg !5913
  %49 = icmp ult i32 %47, %48, !dbg !5915
  br i1 %49, label %50, label %52, !dbg !5916

50:                                               ; preds = %46
  %51 = add i32 %47, %22, !dbg !5917
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %22, i32 noundef %51) #28, !dbg !5919
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %51) #28, !dbg !5920
  br label %52, !dbg !5921

52:                                               ; preds = %50, %46
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %22) #28, !dbg !5922
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #28, !dbg !5923
  br label %63

53:                                               ; preds = %20, %42, %40
  %54 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #28, !dbg !5924
  call void @llvm.dbg.value(metadata i8* %54, metadata !5858, metadata !DIExpression()), !dbg !5862
  %55 = icmp eq i8* %54, null, !dbg !5925
  br i1 %55, label %63, label %56, !dbg !5926

56:                                               ; preds = %53
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #28, !dbg !5927, !range !5370
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %57) #28, !dbg !5928
  %59 = sub i32 %58, %26, !dbg !5929
  call void @llvm.dbg.value(metadata i32 %59, metadata !5859, metadata !DIExpression()), !dbg !5930
  %60 = icmp ult i32 %59, %3, !dbg !5931
  %61 = select i1 %60, i32 %59, i32 %3, !dbg !5931
  %62 = tail call i8* @memcpy(i8* noundef nonnull %54, i8* noundef nonnull %1, i32 noundef %61) #27, !dbg !5932
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #28, !dbg !5933
  br label %63, !dbg !5934

63:                                               ; preds = %38, %52, %33, %56, %53, %18, %12, %8
  %64 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %18 ], [ %1, %38 ], [ %1, %52 ], [ %1, %33 ], [ %54, %56 ], [ null, %53 ], !dbg !5862
  ret i8* %64, !dbg !5935
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5936 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5940, metadata !DIExpression()), !dbg !5942
  call void @llvm.dbg.value(metadata i32 %1, metadata !5941, metadata !DIExpression()), !dbg !5942
  %3 = shl i32 %1, 3, !dbg !5943
  %4 = add i32 %3, -4, !dbg !5944
  ret i32 %4, !dbg !5945
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5946 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5950, metadata !DIExpression()), !dbg !5961
  call void @llvm.dbg.value(metadata i8* %1, metadata !5951, metadata !DIExpression()), !dbg !5961
  call void @llvm.dbg.value(metadata i32 %2, metadata !5952, metadata !DIExpression()), !dbg !5961
  %4 = icmp ult i32 %2, 262144, !dbg !5962
  br i1 %4, label %6, label %5, !dbg !5967

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.51, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 491) #27, !dbg !5968
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.52, i32 0, i32 0)) #27, !dbg !5968
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 491) #27, !dbg !5968
  unreachable, !dbg !5968

6:                                                ; preds = %3
  %7 = icmp ugt i32 %2, 4, !dbg !5970
  br i1 %7, label %9, label %8, !dbg !5973

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10.53, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 498) #27, !dbg !5974
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.54, i32 0, i32 0)) #27, !dbg !5974
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 498) #27, !dbg !5974
  unreachable, !dbg !5974

9:                                                ; preds = %6
  %10 = add nsw i32 %2, -4, !dbg !5976
  call void @llvm.dbg.value(metadata i32 %10, metadata !5952, metadata !DIExpression()), !dbg !5961
  %11 = ptrtoint i8* %1 to i32, !dbg !5977
  %12 = add i32 %11, 7, !dbg !5977
  %13 = and i32 %12, -8, !dbg !5977
  call void @llvm.dbg.value(metadata i32 %13, metadata !5953, metadata !DIExpression()), !dbg !5961
  %14 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !5978
  %15 = ptrtoint i8* %14 to i32, !dbg !5978
  %16 = and i32 %15, -8, !dbg !5978
  call void @llvm.dbg.value(metadata i32 %16, metadata !5954, metadata !DIExpression()), !dbg !5961
  %17 = sub i32 %16, %13, !dbg !5979
  %18 = lshr exact i32 %17, 3, !dbg !5980
  call void @llvm.dbg.value(metadata i32 %18, metadata !5955, metadata !DIExpression()), !dbg !5961
  %19 = tail call fastcc i32 @chunksz(i32 noundef 16) #28, !dbg !5981
  %20 = icmp ugt i32 %18, %19, !dbg !5981
  br i1 %20, label %22, label %21, !dbg !5984

21:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 507) #27, !dbg !5985
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.54, i32 0, i32 0)) #27, !dbg !5985
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 507) #27, !dbg !5985
  unreachable, !dbg !5985

22:                                               ; preds = %9
  %23 = inttoptr i32 %13 to %struct.z_heap*, !dbg !5987
  call void @llvm.dbg.value(metadata %struct.z_heap* %23, metadata !5956, metadata !DIExpression()), !dbg !5961
  %24 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5988
  store %struct.z_heap* %23, %struct.z_heap** %24, align 4, !dbg !5989
  %25 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 1, !dbg !5990
  store i32 %18, i32* %25, align 8, !dbg !5991
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 2, !dbg !5992
  store i32 0, i32* %26, align 4, !dbg !5993
  %27 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %23, i32 noundef %18) #28, !dbg !5994
  call void @llvm.dbg.value(metadata i32 %27, metadata !5957, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5961
  %28 = shl i32 %27, 2, !dbg !5995
  %29 = add i32 %28, 20, !dbg !5996
  %30 = tail call fastcc i32 @chunksz(i32 noundef %29) #28, !dbg !5997
  call void @llvm.dbg.value(metadata i32 %30, metadata !5958, metadata !DIExpression()), !dbg !5961
  %31 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %23) #28, !dbg !5998
  %32 = add i32 %31, %30, !dbg !5998
  %33 = icmp ugt i32 %32, %18, !dbg !5998
  br i1 %33, label %36, label %34, !dbg !6001

34:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 0, metadata !5959, metadata !DIExpression()), !dbg !6002
  %35 = icmp slt i32 %27, 0, !dbg !6003
  br i1 %35, label %37, label %39, !dbg !6005

36:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.56, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 524) #27, !dbg !6006
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.54, i32 0, i32 0)) #27, !dbg !6006
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 524) #27, !dbg !6006
  unreachable, !dbg !6006

37:                                               ; preds = %39, %34
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef %30) #28, !dbg !6008
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef 0) #28, !dbg !6009
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i1 noundef zeroext true) #28, !dbg !6010
  %38 = sub i32 %18, %30, !dbg !6011
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %38) #28, !dbg !6012
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %30) #28, !dbg !6013
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef 0) #28, !dbg !6014
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef %38) #28, !dbg !6015
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i1 noundef zeroext true) #28, !dbg !6016
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %23, i32 noundef %30) #28, !dbg !6017
  ret void, !dbg !6018

39:                                               ; preds = %34, %39
  %40 = phi i32 [ %42, %39 ], [ 0, %34 ]
  call void @llvm.dbg.value(metadata i32 %40, metadata !5959, metadata !DIExpression()), !dbg !6002
  %41 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 3, i32 %40, i32 0, !dbg !6019
  store i32 0, i32* %41, align 4, !dbg !6021
  %42 = add nuw i32 %40, 1, !dbg !6022
  call void @llvm.dbg.value(metadata i32 %42, metadata !5959, metadata !DIExpression()), !dbg !6002
  %43 = icmp eq i32 %40, %27, !dbg !6003
  br i1 %43, label %37, label %39, !dbg !6005, !llvm.loop !6023
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !6025 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !6038, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6035, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i8* %1, metadata !6036, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i8* %2, metadata !6037, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i32 %4, metadata !6039, metadata !DIExpression()), !dbg !6164
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !6165
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #26, !dbg !6165
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !6040, metadata !DIExpression()), !dbg !6166
  call void @llvm.dbg.value(metadata i32 0, metadata !6044, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i1 undef, metadata !6046, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6164
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !6167

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !6167

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !6168
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !6038, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i8* %30, metadata !6037, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i32 %29, metadata !6044, metadata !DIExpression()), !dbg !6164
  %31 = load i8, i8* %30, align 1, !dbg !6169
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !6167

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !6169
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !6170
  call void @llvm.dbg.value(metadata i8* %34, metadata !6037, metadata !DIExpression()), !dbg !6164
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !6170
  call void @llvm.dbg.value(metadata i32 %35, metadata !6048, metadata !DIExpression()), !dbg !6171
  %36 = icmp slt i32 %35, 0, !dbg !6172
  %37 = add i32 %29, 1, !dbg !6170
  call void @llvm.dbg.value(metadata i32 undef, metadata !6044, metadata !DIExpression()), !dbg !6164
  br i1 %36, label %365, label %28, !llvm.loop !6174

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #26, !dbg !6176
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !6053, metadata !DIExpression()), !dbg !6177
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !6177
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !6096, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !6099, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.value(metadata i8* %30, metadata !6102, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.value(metadata i32 -1, metadata !6103, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.value(metadata i32 -1, metadata !6104, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.value(metadata i8* null, metadata !6105, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.value(metadata i8* %14, metadata !6106, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.value(metadata i8 0, metadata !6107, metadata !DIExpression()), !dbg !6178
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #28, !dbg !6179
  call void @llvm.dbg.value(metadata i8* %39, metadata !6037, metadata !DIExpression()), !dbg !6164
  %40 = load i24, i24* %15, align 8, !dbg !6180
  %41 = and i24 %40, 256, !dbg !6180
  %42 = icmp eq i24 %41, 0, !dbg !6180
  br i1 %42, label %51, label %43, !dbg !6182

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !6183
  call void @llvm.dbg.value(metadata i8* %44, metadata !6038, metadata !DIExpression()), !dbg !6164
  %45 = bitcast i8* %27 to i32*, !dbg !6183
  %46 = load i32, i32* %45, align 4, !dbg !6183
  call void @llvm.dbg.value(metadata i32 %46, metadata !6103, metadata !DIExpression()), !dbg !6178
  %47 = icmp slt i32 %46, 0, !dbg !6185
  br i1 %47, label %48, label %56, !dbg !6187

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !6188
  store i24 %49, i24* %15, align 8, !dbg !6188
  %50 = sub nsw i32 0, %46, !dbg !6190
  call void @llvm.dbg.value(metadata i32 %50, metadata !6103, metadata !DIExpression()), !dbg !6178
  br label %56, !dbg !6191

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !6192
  %53 = icmp eq i24 %52, 0, !dbg !6192
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !6194
  br label %56, !dbg !6194

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !6195
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !6178
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !6038, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i32 %58, metadata !6103, metadata !DIExpression()), !dbg !6178
  %60 = and i24 %57, 1024, !dbg !6195
  %61 = icmp eq i24 %60, 0, !dbg !6195
  br i1 %61, label %69, label %62, !dbg !6196

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !6197
  call void @llvm.dbg.value(metadata i8* %63, metadata !6038, metadata !DIExpression()), !dbg !6164
  %64 = bitcast i8* %59 to i32*, !dbg !6197
  %65 = load i32, i32* %64, align 4, !dbg !6197
  call void @llvm.dbg.value(metadata i32 %65, metadata !6108, metadata !DIExpression()), !dbg !6198
  %66 = icmp slt i32 %65, 0, !dbg !6199
  br i1 %66, label %67, label %74, !dbg !6201

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !6202
  store i24 %68, i24* %15, align 8, !dbg !6202
  br label %74, !dbg !6204

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !6205
  %71 = icmp eq i24 %70, 0, !dbg !6205
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !6207
  br label %74, !dbg !6207

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !6208
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !6178
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !6178
  call void @llvm.dbg.value(metadata i8* %77, metadata !6038, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i32 %76, metadata !6104, metadata !DIExpression()), !dbg !6178
  store i32 0, i32* %16, align 4, !dbg !6209
  store i32 0, i32* %17, align 8, !dbg !6210
  %78 = lshr i24 %75, 16, !dbg !6208
  call void @llvm.dbg.value(metadata i24 %78, metadata !6111, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6178
  %79 = lshr i24 %75, 11, !dbg !6211
  %80 = and i24 %79, 15, !dbg !6211
  %81 = zext i24 %80 to i32, !dbg !6211
  call void @llvm.dbg.value(metadata i32 %81, metadata !6112, metadata !DIExpression()), !dbg !6178
  %82 = trunc i24 %78 to i3, !dbg !6212
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !6212

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !6213

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6216
  call void @llvm.dbg.value(metadata i8* %85, metadata !6038, metadata !DIExpression()), !dbg !6164
  %86 = bitcast i8* %77 to i32*, !dbg !6216
  %87 = load i32, i32* %86, align 4, !dbg !6216
  %88 = sext i32 %87 to i64, !dbg !6216
  store i64 %88, i64* %20, align 8, !dbg !6218
  br label %115, !dbg !6219

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6220
  call void @llvm.dbg.value(metadata i8* %90, metadata !6038, metadata !DIExpression()), !dbg !6164
  %91 = bitcast i8* %77 to i32*, !dbg !6220
  %92 = load i32, i32* %91, align 4, !dbg !6220
  %93 = sext i32 %92 to i64, !dbg !6220
  store i64 %93, i64* %20, align 8, !dbg !6223
  br label %115, !dbg !6224

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !6225
  %96 = add i32 %95, 7, !dbg !6225
  %97 = and i32 %96, -8, !dbg !6225
  %98 = inttoptr i32 %97 to i8*, !dbg !6225
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !6225
  call void @llvm.dbg.value(metadata i8* %99, metadata !6038, metadata !DIExpression()), !dbg !6164
  %100 = inttoptr i32 %97 to i64*, !dbg !6225
  %101 = load i64, i64* %100, align 8, !dbg !6225
  store i64 %101, i64* %20, align 8, !dbg !6226
  br label %115, !dbg !6227

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !6228
  %104 = add i32 %103, 7, !dbg !6228
  %105 = and i32 %104, -8, !dbg !6228
  %106 = inttoptr i32 %105 to i8*, !dbg !6228
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !6228
  call void @llvm.dbg.value(metadata i8* %107, metadata !6038, metadata !DIExpression()), !dbg !6164
  %108 = inttoptr i32 %105 to i64*, !dbg !6228
  %109 = load i64, i64* %108, align 8, !dbg !6228
  store i64 %109, i64* %20, align 8, !dbg !6229
  br label %115, !dbg !6230

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6231
  call void @llvm.dbg.value(metadata i8* %111, metadata !6038, metadata !DIExpression()), !dbg !6164
  %112 = bitcast i8* %77 to i32*, !dbg !6231
  %113 = load i32, i32* %112, align 4, !dbg !6231
  %114 = sext i32 %113 to i64, !dbg !6232
  store i64 %114, i64* %20, align 8, !dbg !6233
  br label %115, !dbg !6234

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !6235
  call void @llvm.dbg.value(metadata i8* %117, metadata !6038, metadata !DIExpression()), !dbg !6164
  %118 = trunc i24 %79 to i4, !dbg !6236
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !6236

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !6237
  %121 = ashr exact i64 %120, 56, !dbg !6237
  store i64 %121, i64* %20, align 8, !dbg !6240
  br label %177, !dbg !6241

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !6242
  %124 = ashr exact i64 %123, 48, !dbg !6242
  store i64 %124, i64* %20, align 8, !dbg !6245
  br label %177, !dbg !6246

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !6247

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6250
  call void @llvm.dbg.value(metadata i8* %127, metadata !6038, metadata !DIExpression()), !dbg !6164
  %128 = bitcast i8* %77 to i32*, !dbg !6250
  %129 = load i32, i32* %128, align 4, !dbg !6250
  %130 = zext i32 %129 to i64, !dbg !6250
  store i64 %130, i64* %20, align 8, !dbg !6252
  br label %157, !dbg !6253

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6254
  call void @llvm.dbg.value(metadata i8* %132, metadata !6038, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i8* %132, metadata !6038, metadata !DIExpression()), !dbg !6164
  %133 = bitcast i8* %77 to i32*, !dbg !6254
  %134 = load i32, i32* %133, align 4, !dbg !6254
  %135 = zext i32 %134 to i64, !dbg !6254
  store i64 %135, i64* %20, align 8, !dbg !6254
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !6256
  %138 = add i32 %137, 7, !dbg !6256
  %139 = and i32 %138, -8, !dbg !6256
  %140 = inttoptr i32 %139 to i8*, !dbg !6256
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !6256
  call void @llvm.dbg.value(metadata i8* %141, metadata !6038, metadata !DIExpression()), !dbg !6164
  %142 = inttoptr i32 %139 to i64*, !dbg !6256
  %143 = load i64, i64* %142, align 8, !dbg !6256
  store i64 %143, i64* %20, align 8, !dbg !6257
  br label %157, !dbg !6258

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !6259
  %146 = add i32 %145, 7, !dbg !6259
  %147 = and i32 %146, -8, !dbg !6259
  %148 = inttoptr i32 %147 to i8*, !dbg !6259
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !6259
  call void @llvm.dbg.value(metadata i8* %149, metadata !6038, metadata !DIExpression()), !dbg !6164
  %150 = inttoptr i32 %147 to i64*, !dbg !6259
  %151 = load i64, i64* %150, align 8, !dbg !6259
  store i64 %151, i64* %20, align 8, !dbg !6260
  br label %157, !dbg !6261

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6262
  call void @llvm.dbg.value(metadata i8* %153, metadata !6038, metadata !DIExpression()), !dbg !6164
  %154 = bitcast i8* %77 to i32*, !dbg !6262
  %155 = load i32, i32* %154, align 4, !dbg !6262
  %156 = zext i32 %155 to i64, !dbg !6263
  store i64 %156, i64* %20, align 8, !dbg !6264
  br label %157, !dbg !6265

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !6266
  call void @llvm.dbg.value(metadata i8* %159, metadata !6038, metadata !DIExpression()), !dbg !6164
  %160 = trunc i24 %79 to i4, !dbg !6267
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !6267

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !6268
  store i64 %162, i64* %20, align 8, !dbg !6271
  br label %177, !dbg !6272

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !6273
  store i64 %164, i64* %20, align 8, !dbg !6276
  br label %177, !dbg !6277

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !6278
  %167 = add i32 %166, 7, !dbg !6278
  %168 = and i32 %167, -8, !dbg !6278
  %169 = inttoptr i32 %168 to i8*, !dbg !6278
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !6278
  call void @llvm.dbg.value(metadata i8* %170, metadata !6038, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i8* %170, metadata !6038, metadata !DIExpression()), !dbg !6164
  %171 = inttoptr i32 %168 to double*, !dbg !6278
  %172 = load double, double* %171, align 8, !dbg !6278
  store double %172, double* %19, align 8, !dbg !6278
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6282
  call void @llvm.dbg.value(metadata i8* %174, metadata !6038, metadata !DIExpression()), !dbg !6164
  %175 = bitcast i8* %77 to i8**, !dbg !6282
  %176 = load i8*, i8** %175, align 4, !dbg !6282
  store i8* %176, i8** %18, align 8, !dbg !6285
  br label %177, !dbg !6286

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !6178
  call void @llvm.dbg.value(metadata i8* %178, metadata !6038, metadata !DIExpression()), !dbg !6164
  %179 = and i24 %75, 3, !dbg !6287
  %180 = icmp eq i24 %179, 0, !dbg !6287
  br i1 %180, label %185, label %181, !dbg !6287

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #28, !dbg !6288
  call void @llvm.dbg.value(metadata i32 %182, metadata !6113, metadata !DIExpression()), !dbg !6289
  %183 = icmp slt i32 %182, 0, !dbg !6290
  %184 = add i32 %182, %29, !dbg !6288
  call void @llvm.dbg.value(metadata i32 undef, metadata !6044, metadata !DIExpression()), !dbg !6164
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !6292
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !6293

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !6294
  call void @llvm.dbg.value(metadata i32 %188, metadata !6117, metadata !DIExpression()), !dbg !6295
  %189 = icmp slt i32 %188, 0, !dbg !6296
  %190 = add i32 %29, 1, !dbg !6294
  call void @llvm.dbg.value(metadata i32 undef, metadata !6044, metadata !DIExpression()), !dbg !6164
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !6298
  call void @llvm.dbg.value(metadata i8* %192, metadata !6105, metadata !DIExpression()), !dbg !6178
  %193 = icmp sgt i32 %76, -1, !dbg !6299
  br i1 %193, label %194, label %196, !dbg !6301

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !6302
  call void @llvm.dbg.value(metadata i32 %195, metadata !6120, metadata !DIExpression()), !dbg !6304
  br label %241, !dbg !6305

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !6306
  call void @llvm.dbg.value(metadata i32 %197, metadata !6120, metadata !DIExpression()), !dbg !6304
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !6105, metadata !DIExpression()), !dbg !6178
  %199 = load i64, i64* %20, align 8, !dbg !6308
  %200 = trunc i64 %199 to i8, !dbg !6309
  store i8 %200, i8* %10, align 1, !dbg !6310
  call void @llvm.dbg.value(metadata i8* %23, metadata !6106, metadata !DIExpression()), !dbg !6178
  br label %245, !dbg !6311

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !6312
  %203 = icmp eq i24 %202, 0, !dbg !6312
  %204 = trunc i24 %75 to i8, !dbg !6314
  %205 = shl i8 %204, 1, !dbg !6314
  %206 = and i8 %205, 32, !dbg !6314
  %207 = select i1 %203, i8 %206, i8 43, !dbg !6314
  call void @llvm.dbg.value(metadata i8 %207, metadata !6107, metadata !DIExpression()), !dbg !6178
  %208 = load i64, i64* %20, align 8, !dbg !6315
  call void @llvm.dbg.value(metadata i64 %208, metadata !6045, metadata !DIExpression()), !dbg !6164
  %209 = icmp slt i64 %208, 0, !dbg !6316
  br i1 %209, label %210, label %212, !dbg !6318

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !6107, metadata !DIExpression()), !dbg !6178
  %211 = sub nsw i64 0, %208, !dbg !6319
  store i64 %211, i64* %20, align 8, !dbg !6321
  br label %212, !dbg !6322

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !6178
  call void @llvm.dbg.value(metadata i8 %213, metadata !6107, metadata !DIExpression()), !dbg !6178
  %214 = load i64, i64* %20, align 8, !dbg !6323
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #28, !dbg !6324
  call void @llvm.dbg.value(metadata i8* %215, metadata !6105, metadata !DIExpression()), !dbg !6178
  br label %216, !dbg !6325

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !6326
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !6327
  call void @llvm.dbg.value(metadata i8* %218, metadata !6105, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.value(metadata i8 %217, metadata !6107, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.label(metadata !6163), !dbg !6328
  %219 = icmp sgt i32 %76, -1, !dbg !6329
  br i1 %219, label %222, label %220, !dbg !6330

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !6331
  br label %245, !dbg !6330

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !6333
  %224 = sub i32 %22, %223, !dbg !6333
  call void @llvm.dbg.value(metadata i32 %224, metadata !6122, metadata !DIExpression()), !dbg !6334
  %225 = load i24, i24* %15, align 8, !dbg !6335
  %226 = and i24 %225, -65, !dbg !6335
  store i24 %226, i24* %15, align 8, !dbg !6335
  %227 = icmp ugt i32 %76, %224, !dbg !6336
  br i1 %227, label %228, label %245, !dbg !6338

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !6339
  store i32 %229, i32* %16, align 4, !dbg !6341
  br label %245, !dbg !6342

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !6343
  %232 = icmp eq i8* %231, null, !dbg !6345
  br i1 %232, label %245, label %233, !dbg !6346

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !6347
  %235 = zext i32 %234 to i64, !dbg !6347
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #28, !dbg !6349
  call void @llvm.dbg.value(metadata i8* %236, metadata !6105, metadata !DIExpression()), !dbg !6178
  %237 = load i24, i24* %15, align 8, !dbg !6350
  %238 = or i24 %237, 1048576, !dbg !6350
  store i24 %238, i24* %15, align 8, !dbg !6350
  store i8 120, i8* %21, align 1, !dbg !6351
  br label %216, !dbg !6352

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !6353
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #28, !dbg !6356
  br label %363, !dbg !6357

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !6358
  call void @llvm.dbg.value(metadata i32 %242, metadata !6120, metadata !DIExpression()), !dbg !6304
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !6359
  call void @llvm.dbg.value(metadata i32 -1, metadata !6104, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.value(metadata i32 %29, metadata !6044, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i8* %192, metadata !6105, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.value(metadata i8* %243, metadata !6106, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.value(metadata i8 0, metadata !6107, metadata !DIExpression()), !dbg !6178
  %244 = icmp eq i8* %192, null, !dbg !6360
  br i1 %244, label %363, label %245, !dbg !6362, !llvm.loop !6174

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !6331
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !6125, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6178
  call void @llvm.dbg.value(metadata i32 0, metadata !6126, metadata !DIExpression()), !dbg !6178
  %250 = zext i8 %249 to i32, !dbg !6363
  %251 = icmp eq i8 %249, 0, !dbg !6365
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !6125, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6178
  call void @llvm.dbg.value(metadata i32 undef, metadata !6125, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !6125, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6178
  call void @llvm.dbg.value(metadata i32 undef, metadata !6125, metadata !DIExpression()), !dbg !6178
  %252 = icmp sgt i32 %58, 0, !dbg !6366
  br i1 %252, label %253, label %302, !dbg !6367

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !6331
  %255 = icmp eq i24 %254, 0, !dbg !6331
  %256 = ptrtoint i8* %248 to i32, !dbg !6368
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !6125, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6178
  %257 = ptrtoint i8* %247 to i32, !dbg !6368
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !6125, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6178
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !6125, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6178
  %258 = xor i1 %251, true, !dbg !6369
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6125, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6178
  %259 = sext i1 %258 to i32, !dbg !6369
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6125, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6178
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !6125, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6178
  %260 = lshr i24 %246, 19, !dbg !6370
  %261 = and i24 %260, 1, !dbg !6370
  %262 = select i1 %255, i24 %261, i24 2, !dbg !6370
  %263 = zext i24 %262 to i32, !dbg !6370
  %264 = add i32 %257, %259, !dbg !6370
  %265 = add i32 %256, %263, !dbg !6370
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !6125, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6178
  %266 = and i24 %246, 4194304, !dbg !6371
  %267 = icmp eq i24 %266, 0, !dbg !6371
  %268 = load i32, i32* %16, align 4, !dbg !6373
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !6125, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6178
  call void @llvm.dbg.value(metadata i32 undef, metadata !6125, metadata !DIExpression()), !dbg !6178
  %269 = load i32, i32* %17, align 8, !dbg !6374
  %270 = select i1 %267, i32 0, i32 %269, !dbg !6374
  call void @llvm.dbg.value(metadata i32 undef, metadata !6125, metadata !DIExpression()), !dbg !6178
  %271 = add i32 %264, %58, !dbg !6374
  %272 = add i32 %265, %268, !dbg !6374
  %273 = add i32 %272, %270, !dbg !6375
  %274 = sub i32 %271, %273, !dbg !6375
  call void @llvm.dbg.value(metadata i32 %274, metadata !6103, metadata !DIExpression()), !dbg !6178
  %275 = and i24 %246, 4, !dbg !6376
  %276 = icmp eq i24 %275, 0, !dbg !6376
  br i1 %276, label %277, label %302, !dbg !6377

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !6127, metadata !DIExpression()), !dbg !6378
  %278 = and i24 %246, 64, !dbg !6379
  %279 = icmp eq i24 %278, 0, !dbg !6379
  %280 = select i1 %279, i1 true, i1 %251, !dbg !6380
  %281 = select i1 %279, i8 %249, i8 0, !dbg !6380
  %282 = select i1 %279, i32 32, i32 48, !dbg !6380
  br i1 %280, label %287, label %283, !dbg !6380

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !6381
  call void @llvm.dbg.value(metadata i32 %284, metadata !6132, metadata !DIExpression()), !dbg !6382
  %285 = icmp slt i32 %284, 0, !dbg !6383
  %286 = add i32 %29, 1, !dbg !6381
  call void @llvm.dbg.value(metadata i32 undef, metadata !6044, metadata !DIExpression()), !dbg !6164
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !6178
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !6168
  call void @llvm.dbg.value(metadata i32 %290, metadata !6044, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i8 undef, metadata !6127, metadata !DIExpression()), !dbg !6378
  call void @llvm.dbg.value(metadata i8 %288, metadata !6107, metadata !DIExpression()), !dbg !6178
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !6385
  %292 = add i32 %291, -1, !dbg !6385
  br label %293, !dbg !6385

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !6386
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !6168
  call void @llvm.dbg.value(metadata i32 %295, metadata !6044, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i32 %294, metadata !6103, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.value(metadata i32 %294, metadata !6103, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6178
  %296 = icmp sgt i32 %294, 0, !dbg !6387
  br i1 %296, label %297, label %302, !dbg !6385

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !6388
  call void @llvm.dbg.value(metadata i32 %298, metadata !6103, metadata !DIExpression()), !dbg !6178
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !6389
  call void @llvm.dbg.value(metadata i32 %299, metadata !6138, metadata !DIExpression()), !dbg !6390
  %300 = icmp slt i32 %299, 0, !dbg !6391
  %301 = add i32 %295, 1, !dbg !6389
  call void @llvm.dbg.value(metadata i32 undef, metadata !6044, metadata !DIExpression()), !dbg !6164
  br i1 %300, label %361, label %293, !llvm.loop !6393

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !6178
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !6178
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !6168
  call void @llvm.dbg.value(metadata i32 %305, metadata !6044, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i32 %304, metadata !6103, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.value(metadata i8 %303, metadata !6107, metadata !DIExpression()), !dbg !6178
  %306 = icmp eq i8 %303, 0, !dbg !6395
  br i1 %306, label %312, label %307, !dbg !6396

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !6397
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !6398
  call void @llvm.dbg.value(metadata i32 %309, metadata !6141, metadata !DIExpression()), !dbg !6399
  %310 = icmp slt i32 %309, 0, !dbg !6400
  %311 = add i32 %305, 1, !dbg !6398
  call void @llvm.dbg.value(metadata i32 undef, metadata !6044, metadata !DIExpression()), !dbg !6164
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !6168
  call void @llvm.dbg.value(metadata i32 %313, metadata !6044, metadata !DIExpression()), !dbg !6164
  %314 = lshr i24 %246, 20, !dbg !6402
  %315 = lshr i24 %246, 19, !dbg !6403
  %316 = or i24 %314, %315, !dbg !6404
  %317 = and i24 %316, 1, !dbg !6404
  %318 = icmp eq i24 %317, 0, !dbg !6404
  br i1 %318, label %323, label %319, !dbg !6405

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !6406
  call void @llvm.dbg.value(metadata i32 %320, metadata !6145, metadata !DIExpression()), !dbg !6407
  %321 = icmp slt i32 %320, 0, !dbg !6408
  %322 = add i32 %313, 1, !dbg !6406
  call void @llvm.dbg.value(metadata i32 undef, metadata !6044, metadata !DIExpression()), !dbg !6164
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !6168
  call void @llvm.dbg.value(metadata i32 %324, metadata !6044, metadata !DIExpression()), !dbg !6164
  %325 = and i24 %246, 1048576, !dbg !6410
  %326 = icmp eq i24 %325, 0, !dbg !6410
  br i1 %326, label %333, label %327, !dbg !6411

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !6412
  %329 = zext i8 %328 to i32, !dbg !6412
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !6412
  call void @llvm.dbg.value(metadata i32 %330, metadata !6151, metadata !DIExpression()), !dbg !6413
  %331 = icmp slt i32 %330, 0, !dbg !6414
  %332 = add i32 %324, 1, !dbg !6412
  call void @llvm.dbg.value(metadata i32 undef, metadata !6044, metadata !DIExpression()), !dbg !6164
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !6168
  call void @llvm.dbg.value(metadata i32 %334, metadata !6044, metadata !DIExpression()), !dbg !6164
  %335 = load i32, i32* %16, align 4, !dbg !6416
  call void @llvm.dbg.value(metadata i32 %335, metadata !6126, metadata !DIExpression()), !dbg !6178
  br label %336, !dbg !6417

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !6418
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !6168
  call void @llvm.dbg.value(metadata i32 %338, metadata !6044, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i32 %337, metadata !6126, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6178
  %339 = icmp sgt i32 %337, 0, !dbg !6419
  br i1 %339, label %340, label %345, !dbg !6417

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !6420
  call void @llvm.dbg.value(metadata i32 %341, metadata !6126, metadata !DIExpression()), !dbg !6178
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !6421
  call void @llvm.dbg.value(metadata i32 %342, metadata !6155, metadata !DIExpression()), !dbg !6422
  %343 = icmp slt i32 %342, 0, !dbg !6423
  %344 = add i32 %338, 1, !dbg !6421
  call void @llvm.dbg.value(metadata i32 undef, metadata !6044, metadata !DIExpression()), !dbg !6164
  br i1 %343, label %361, label %336, !llvm.loop !6425

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #28, !dbg !6427
  call void @llvm.dbg.value(metadata i32 %346, metadata !6158, metadata !DIExpression()), !dbg !6428
  %347 = icmp slt i32 %346, 0, !dbg !6429
  call void @llvm.dbg.value(metadata i32 undef, metadata !6044, metadata !DIExpression()), !dbg !6164
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !6427
  call void @llvm.dbg.value(metadata i32 %349, metadata !6044, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i32 %304, metadata !6103, metadata !DIExpression()), !dbg !6178
  %350 = icmp sgt i32 %304, 0, !dbg !6431
  br i1 %350, label %351, label %363, !dbg !6432

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !6432
  %353 = add i32 %352, %338, !dbg !6432
  br label %354, !dbg !6432

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !6044, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i32 %355, metadata !6103, metadata !DIExpression()), !dbg !6178
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !6433
  call void @llvm.dbg.value(metadata i32 %356, metadata !6160, metadata !DIExpression()), !dbg !6434
  %357 = icmp slt i32 %356, 0, !dbg !6435
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !6437
  call void @llvm.dbg.value(metadata i32 undef, metadata !6044, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6164
  call void @llvm.dbg.value(metadata i32 %359, metadata !6103, metadata !DIExpression()), !dbg !6178
  %360 = icmp sgt i32 %355, 1, !dbg !6431
  br i1 %360, label %354, label %363, !dbg !6432, !llvm.loop !6438

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !6044, metadata !DIExpression()), !dbg !6164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #26, !dbg !6175
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !6168
  call void @llvm.dbg.value(metadata i32 %364, metadata !6044, metadata !DIExpression()), !dbg !6164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #26, !dbg !6175
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !6164
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #26, !dbg !6440
  ret i32 %366, !dbg !6440
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #16

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #17 !dbg !6441 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6445, metadata !DIExpression()), !dbg !6447
  call void @llvm.dbg.value(metadata i8* %1, metadata !6446, metadata !DIExpression()), !dbg !6447
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !6448
  store i24 0, i24* %3, align 4, !dbg !6448
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6448
  store i8 0, i8* %4, align 1, !dbg !6448
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6448
  store i32 0, i32* %5, align 4, !dbg !6448
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6448
  store i32 0, i32* %6, align 4, !dbg !6448
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6449
  call void @llvm.dbg.value(metadata i8* %7, metadata !6446, metadata !DIExpression()), !dbg !6447
  %8 = load i8, i8* %7, align 1, !dbg !6450
  %9 = icmp eq i8 %8, 37, !dbg !6452
  br i1 %9, label %10, label %12, !dbg !6453

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6454
  call void @llvm.dbg.value(metadata i8* %11, metadata !6446, metadata !DIExpression()), !dbg !6447
  store i8 37, i8* %4, align 1, !dbg !6456
  br label %18, !dbg !6457

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #28, !dbg !6458
  call void @llvm.dbg.value(metadata i8* %13, metadata !6446, metadata !DIExpression()), !dbg !6447
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #28, !dbg !6459
  call void @llvm.dbg.value(metadata i8* %14, metadata !6446, metadata !DIExpression()), !dbg !6447
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #28, !dbg !6460
  call void @llvm.dbg.value(metadata i8* %15, metadata !6446, metadata !DIExpression()), !dbg !6447
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #28, !dbg !6461
  call void @llvm.dbg.value(metadata i8* %16, metadata !6446, metadata !DIExpression()), !dbg !6447
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #28, !dbg !6462
  call void @llvm.dbg.value(metadata i8* %17, metadata !6446, metadata !DIExpression()), !dbg !6447
  br label %18, !dbg !6463

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !6447
  ret i8* %19, !dbg !6464
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !6465 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6469, metadata !DIExpression()), !dbg !6476
  call void @llvm.dbg.value(metadata i8* %1, metadata !6470, metadata !DIExpression()), !dbg !6476
  call void @llvm.dbg.value(metadata i8* %2, metadata !6471, metadata !DIExpression()), !dbg !6476
  call void @llvm.dbg.value(metadata i8* %3, metadata !6472, metadata !DIExpression()), !dbg !6476
  call void @llvm.dbg.value(metadata i32 0, metadata !6473, metadata !DIExpression()), !dbg !6476
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !6477

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !6478
  call void @llvm.dbg.value(metadata i32 %9, metadata !6473, metadata !DIExpression()), !dbg !6476
  call void @llvm.dbg.value(metadata i8* %8, metadata !6471, metadata !DIExpression()), !dbg !6476
  %10 = icmp ult i8* %8, %3, !dbg !6479
  br i1 %10, label %11, label %13, !dbg !6480

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !6481
  br label %17, !dbg !6480

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !6482

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !6483
  %16 = icmp eq i8 %15, 0, !dbg !6482
  br i1 %16, label %24, label %17, !dbg !6477

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !6481
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6484
  call void @llvm.dbg.value(metadata i8* %19, metadata !6471, metadata !DIExpression()), !dbg !6476
  %20 = zext i8 %18 to i32, !dbg !6485
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !6486
  call void @llvm.dbg.value(metadata i32 %21, metadata !6474, metadata !DIExpression()), !dbg !6487
  %22 = icmp slt i32 %21, 0, !dbg !6488
  %23 = add i32 %9, 1, !dbg !6490
  call void @llvm.dbg.value(metadata i32 undef, metadata !6473, metadata !DIExpression()), !dbg !6476
  br i1 %22, label %24, label %7, !llvm.loop !6491

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !6476
  ret i32 %25, !dbg !6493
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #17 !dbg !6494 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6498, metadata !DIExpression()), !dbg !6508
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6499, metadata !DIExpression()), !dbg !6508
  call void @llvm.dbg.value(metadata i8* %2, metadata !6500, metadata !DIExpression()), !dbg !6508
  call void @llvm.dbg.value(metadata i8* %3, metadata !6501, metadata !DIExpression()), !dbg !6508
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6509
  %6 = load i8, i8* %5, align 1, !dbg !6509
  %7 = zext i8 %6 to i32, !dbg !6510
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #28, !dbg !6511
  %9 = icmp eq i32 %8, 0, !dbg !6511
  call void @llvm.dbg.value(metadata i1 %9, metadata !6502, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6508
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #28, !dbg !6512
  call void @llvm.dbg.value(metadata i32 %10, metadata !6503, metadata !DIExpression()), !dbg !6508
  %11 = ptrtoint i8* %3 to i32, !dbg !6513
  %12 = ptrtoint i8* %2 to i32, !dbg !6513
  %13 = sub i32 %11, %12, !dbg !6513
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6514
  call void @llvm.dbg.value(metadata i8* %14, metadata !6505, metadata !DIExpression()), !dbg !6508
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6515

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6508
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6498, metadata !DIExpression()), !dbg !6508
  call void @llvm.dbg.value(metadata i8* %18, metadata !6505, metadata !DIExpression()), !dbg !6508
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6516
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6517
  call void @llvm.dbg.value(metadata i32 %25, metadata !6506, metadata !DIExpression()), !dbg !6518
  %26 = icmp ult i32 %25, 10, !dbg !6519
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6520
  %28 = add i32 %27, %25, !dbg !6518
  %29 = trunc i32 %28 to i8, !dbg !6520
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6521
  call void @llvm.dbg.value(metadata i8* %30, metadata !6505, metadata !DIExpression()), !dbg !6508
  store i8 %29, i8* %30, align 1, !dbg !6522
  call void @llvm.dbg.value(metadata i64 %22, metadata !6498, metadata !DIExpression()), !dbg !6508
  %31 = icmp uge i64 %19, %15, !dbg !6523
  %32 = icmp ugt i8* %30, %2, !dbg !6524
  %33 = and i1 %31, %32, !dbg !6524
  br i1 %33, label %17, label %34, !dbg !6525, !llvm.loop !6526

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6528
  %36 = load i24, i24* %35, align 4, !dbg !6528
  %37 = and i24 %36, 32, !dbg !6528
  %38 = icmp eq i24 %37, 0, !dbg !6528
  br i1 %38, label %44, label %39, !dbg !6530

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6531

40:                                               ; preds = %39
  br label %41, !dbg !6533

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6537
  store i24 %43, i24* %35, align 4, !dbg !6537
  br label %44, !dbg !6538

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #14 !dbg !6539 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6545, metadata !DIExpression()), !dbg !6548
  call void @llvm.dbg.value(metadata i8* %1, metadata !6546, metadata !DIExpression()), !dbg !6548
  call void @llvm.dbg.value(metadata i32 %2, metadata !6547, metadata !DIExpression()), !dbg !6548
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6549
  %5 = load i24, i24* %4, align 4, !dbg !6549
  %6 = lshr i24 %5, 11, !dbg !6549
  %7 = and i24 %6, 15, !dbg !6549
  %8 = zext i24 %7 to i32, !dbg !6549
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6550

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6551
  store i32 %2, i32* %10, align 4, !dbg !6553
  br label %28, !dbg !6554

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6555
  store i8 %12, i8* %1, align 1, !dbg !6556
  br label %28, !dbg !6557

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6558
  %15 = bitcast i8* %1 to i16*, !dbg !6559
  store i16 %14, i16* %15, align 2, !dbg !6560
  br label %28, !dbg !6561

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6562
  store i32 %2, i32* %17, align 4, !dbg !6563
  br label %28, !dbg !6564

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6565
  %20 = bitcast i8* %1 to i64*, !dbg !6566
  store i64 %19, i64* %20, align 8, !dbg !6567
  br label %28, !dbg !6568

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6569
  %23 = bitcast i8* %1 to i64*, !dbg !6570
  store i64 %22, i64* %23, align 8, !dbg !6571
  br label %28, !dbg !6572

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6573
  store i32 %2, i32* %25, align 4, !dbg !6574
  br label %28, !dbg !6575

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6576
  store i32 %2, i32* %27, align 4, !dbg !6577
  br label %28, !dbg !6578

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6579
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #5 !dbg !6580 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6583, metadata !DIExpression()), !dbg !6584
  %2 = add i32 %0, -65, !dbg !6585
  %3 = icmp ult i32 %2, 26, !dbg !6586
  %4 = zext i1 %3 to i32, !dbg !6586
  ret i32 %4, !dbg !6587
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #5 !dbg !6588 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6592, metadata !DIExpression()), !dbg !6593
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6594

2:                                                ; preds = %1
  br label %4, !dbg !6595

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6597

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6598
  ret i32 %5, !dbg !6599
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #17 !dbg !6600 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6602, metadata !DIExpression()), !dbg !6605
  call void @llvm.dbg.value(metadata i8* %1, metadata !6603, metadata !DIExpression()), !dbg !6605
  call void @llvm.dbg.value(metadata i8 1, metadata !6604, metadata !DIExpression()), !dbg !6605
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6606

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6604, metadata !DIExpression()), !dbg !6605
  call void @llvm.dbg.value(metadata i8* %5, metadata !6603, metadata !DIExpression()), !dbg !6605
  %6 = load i8, i8* %5, align 1, !dbg !6607
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6609

7:                                                ; preds = %4
  br label %11, !dbg !6610

8:                                                ; preds = %4
  br label %11, !dbg !6612

9:                                                ; preds = %4
  br label %11, !dbg !6613

10:                                               ; preds = %4
  br label %11, !dbg !6614

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6615
  %14 = or i24 %13, %12, !dbg !6615
  store i24 %14, i24* %3, align 4, !dbg !6615
  call void @llvm.dbg.value(metadata i8 poison, metadata !6604, metadata !DIExpression()), !dbg !6605
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6603, metadata !DIExpression()), !dbg !6605
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6604, metadata !DIExpression()), !dbg !6605
  call void @llvm.dbg.value(metadata i8* %15, metadata !6603, metadata !DIExpression()), !dbg !6605
  %17 = load i24, i24* %3, align 4, !dbg !6616
  %18 = and i24 %17, 68, !dbg !6618
  %19 = icmp eq i24 %18, 68, !dbg !6618
  br i1 %19, label %20, label %22, !dbg !6618

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6619
  store i24 %21, i24* %3, align 4, !dbg !6619
  br label %22, !dbg !6621

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6622
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #17 !dbg !6623 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6625, metadata !DIExpression()), !dbg !6629
  call void @llvm.dbg.value(metadata i8* %1, metadata !6626, metadata !DIExpression()), !dbg !6629
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6630
  %5 = load i24, i24* %4, align 4, !dbg !6631
  %6 = or i24 %5, 128, !dbg !6631
  store i24 %6, i24* %4, align 4, !dbg !6631
  call void @llvm.dbg.value(metadata i8* %1, metadata !6626, metadata !DIExpression()), !dbg !6629
  %7 = load i8, i8* %1, align 1, !dbg !6632
  %8 = icmp eq i8 %7, 42, !dbg !6634
  br i1 %8, label %9, label %12, !dbg !6635

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6636
  store i24 %10, i24* %4, align 4, !dbg !6636
  call void @llvm.dbg.value(metadata i8* %1, metadata !6626, metadata !DIExpression()), !dbg !6629
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6638
  call void @llvm.dbg.value(metadata i8* %11, metadata !6626, metadata !DIExpression()), !dbg !6629
  store i8* %11, i8** %3, align 4, !dbg !6638
  br label %29, !dbg !6639

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6627, metadata !DIExpression()), !dbg !6629
  call void @llvm.dbg.value(metadata i8** %3, metadata !6626, metadata !DIExpression(DW_OP_deref)), !dbg !6629
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #28, !dbg !6640
  call void @llvm.dbg.value(metadata i32 %13, metadata !6628, metadata !DIExpression()), !dbg !6629
  %14 = load i8*, i8** %3, align 4, !dbg !6641
  call void @llvm.dbg.value(metadata i8* %14, metadata !6626, metadata !DIExpression()), !dbg !6629
  %15 = icmp eq i8* %14, %1, !dbg !6643
  br i1 %15, label %29, label %16, !dbg !6644

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6645
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6647
  store i32 %13, i32* %18, align 4, !dbg !6648
  %19 = lshr i32 %13, 31, !dbg !6649
  %20 = lshr i24 %17, 1, !dbg !6650
  %21 = and i24 %20, 1, !dbg !6650
  %22 = zext i24 %21 to i32, !dbg !6650
  %23 = or i32 %19, %22, !dbg !6650
  %24 = trunc i32 %23 to i24, !dbg !6650
  %25 = shl nuw nsw i24 %24, 1, !dbg !6650
  %26 = and i24 %17, -131, !dbg !6650
  %27 = or i24 %26, 128, !dbg !6650
  %28 = or i24 %25, %27, !dbg !6650
  store i24 %28, i24* %4, align 4, !dbg !6650
  br label %29, !dbg !6651

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6629
  ret i8* %30, !dbg !6652
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #17 !dbg !6653 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6655, metadata !DIExpression()), !dbg !6658
  call void @llvm.dbg.value(metadata i8* %1, metadata !6656, metadata !DIExpression()), !dbg !6658
  %4 = load i8, i8* %1, align 1, !dbg !6659
  %5 = icmp eq i8 %4, 46, !dbg !6660
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6661
  %7 = load i24, i24* %6, align 4, !dbg !6662
  %8 = select i1 %5, i24 512, i24 0, !dbg !6662
  %9 = and i24 %7, -513, !dbg !6662
  %10 = or i24 %9, %8, !dbg !6662
  store i24 %10, i24* %6, align 4, !dbg !6662
  br i1 %5, label %11, label %32, !dbg !6663

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6656, metadata !DIExpression()), !dbg !6658
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6664
  call void @llvm.dbg.value(metadata i8* %12, metadata !6656, metadata !DIExpression()), !dbg !6658
  store i8* %12, i8** %3, align 4, !dbg !6664
  %13 = load i8, i8* %12, align 1, !dbg !6665
  %14 = icmp eq i8 %13, 42, !dbg !6667
  br i1 %14, label %15, label %18, !dbg !6668

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6669
  store i24 %16, i24* %6, align 4, !dbg !6669
  call void @llvm.dbg.value(metadata i8* %12, metadata !6656, metadata !DIExpression()), !dbg !6658
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6671
  call void @llvm.dbg.value(metadata i8* %17, metadata !6656, metadata !DIExpression()), !dbg !6658
  store i8* %17, i8** %3, align 4, !dbg !6671
  br label %32, !dbg !6672

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6656, metadata !DIExpression(DW_OP_deref)), !dbg !6658
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #28, !dbg !6673
  call void @llvm.dbg.value(metadata i32 %19, metadata !6657, metadata !DIExpression()), !dbg !6658
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6674
  store i32 %19, i32* %20, align 4, !dbg !6675
  %21 = lshr i32 %19, 31, !dbg !6676
  %22 = load i24, i24* %6, align 4, !dbg !6677
  %23 = lshr i24 %22, 1, !dbg !6677
  %24 = and i24 %23, 1, !dbg !6677
  %25 = zext i24 %24 to i32, !dbg !6677
  %26 = or i32 %21, %25, !dbg !6677
  %27 = trunc i32 %26 to i24, !dbg !6677
  %28 = shl nuw nsw i24 %27, 1, !dbg !6677
  %29 = and i24 %22, -3, !dbg !6677
  %30 = or i24 %28, %29, !dbg !6677
  store i24 %30, i24* %6, align 4, !dbg !6677
  %31 = load i8*, i8** %3, align 4, !dbg !6678
  call void @llvm.dbg.value(metadata i8* %31, metadata !6656, metadata !DIExpression()), !dbg !6658
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6658
  ret i8* %33, !dbg !6679
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !6680 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6682, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i8* %1, metadata !6683, metadata !DIExpression()), !dbg !6684
  %3 = load i8, i8* %1, align 1, !dbg !6685
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6686

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6687
  call void @llvm.dbg.value(metadata i8* %5, metadata !6683, metadata !DIExpression()), !dbg !6684
  %6 = load i8, i8* %5, align 1, !dbg !6690
  %7 = icmp eq i8 %6, 104, !dbg !6691
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6692
  %9 = load i24, i24* %8, align 4, !dbg !6692
  %10 = and i24 %9, -30721, !dbg !6692
  br i1 %7, label %11, label %14, !dbg !6693

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6694
  store i24 %12, i24* %8, align 4, !dbg !6694
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6696
  call void @llvm.dbg.value(metadata i8* %13, metadata !6683, metadata !DIExpression()), !dbg !6684
  br label %56, !dbg !6697

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6698
  store i24 %15, i24* %8, align 4, !dbg !6698
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6700
  call void @llvm.dbg.value(metadata i8* %17, metadata !6683, metadata !DIExpression()), !dbg !6684
  %18 = load i8, i8* %17, align 1, !dbg !6702
  %19 = icmp eq i8 %18, 108, !dbg !6703
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6704
  %21 = load i24, i24* %20, align 4, !dbg !6704
  %22 = and i24 %21, -30721, !dbg !6704
  br i1 %19, label %23, label %26, !dbg !6705

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6706
  store i24 %24, i24* %20, align 4, !dbg !6706
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6708
  call void @llvm.dbg.value(metadata i8* %25, metadata !6683, metadata !DIExpression()), !dbg !6684
  br label %56, !dbg !6709

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6710
  store i24 %27, i24* %20, align 4, !dbg !6710
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6712
  %30 = load i24, i24* %29, align 4, !dbg !6713
  %31 = and i24 %30, -30721, !dbg !6713
  %32 = or i24 %31, 10240, !dbg !6713
  store i24 %32, i24* %29, align 4, !dbg !6713
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6714
  call void @llvm.dbg.value(metadata i8* %33, metadata !6683, metadata !DIExpression()), !dbg !6684
  br label %56, !dbg !6715

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6716
  %36 = load i24, i24* %35, align 4, !dbg !6717
  %37 = and i24 %36, -30721, !dbg !6717
  %38 = or i24 %37, 12288, !dbg !6717
  store i24 %38, i24* %35, align 4, !dbg !6717
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6718
  call void @llvm.dbg.value(metadata i8* %39, metadata !6683, metadata !DIExpression()), !dbg !6684
  br label %56, !dbg !6719

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6720
  %42 = load i24, i24* %41, align 4, !dbg !6721
  %43 = and i24 %42, -30721, !dbg !6721
  %44 = or i24 %43, 14336, !dbg !6721
  store i24 %44, i24* %41, align 4, !dbg !6721
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6722
  call void @llvm.dbg.value(metadata i8* %45, metadata !6683, metadata !DIExpression()), !dbg !6684
  br label %56, !dbg !6723

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6724
  %48 = load i24, i24* %47, align 4, !dbg !6725
  %49 = and i24 %48, -30723, !dbg !6725
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6726
  call void @llvm.dbg.value(metadata i8* %50, metadata !6683, metadata !DIExpression()), !dbg !6684
  %51 = or i24 %49, 16386, !dbg !6727
  store i24 %51, i24* %47, align 4, !dbg !6727
  br label %56, !dbg !6728

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6729
  %54 = load i24, i24* %53, align 4, !dbg !6730
  %55 = and i24 %54, -30721, !dbg !6730
  store i24 %55, i24* %53, align 4, !dbg !6730
  br label %56, !dbg !6731

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6683, metadata !DIExpression()), !dbg !6684
  ret i8* %57, !dbg !6732
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !6733 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6735, metadata !DIExpression()), !dbg !6740
  call void @llvm.dbg.value(metadata i8* %1, metadata !6736, metadata !DIExpression()), !dbg !6740
  call void @llvm.dbg.value(metadata i8 0, metadata !6737, metadata !DIExpression()), !dbg !6740
  call void @llvm.dbg.value(metadata i8* %1, metadata !6736, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6740
  %3 = load i8, i8* %1, align 1, !dbg !6741
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6742
  store i8 %3, i8* %4, align 1, !dbg !6743
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6744

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6745

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6746
  %9 = load i24, i24* %8, align 4, !dbg !6746
  %10 = and i24 %9, -458753, !dbg !6746
  %11 = or i24 %10, %7, !dbg !6746
  call void @llvm.dbg.label(metadata !6738), !dbg !6747
  %12 = and i24 %9, 30720, !dbg !6748
  %13 = icmp eq i24 %12, 16384, !dbg !6748
  %14 = zext i1 %13 to i24, !dbg !6750
  %15 = or i24 %11, %14, !dbg !6750
  %16 = icmp eq i8 %3, 99, !dbg !6751
  br i1 %16, label %17, label %43, !dbg !6753

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6754
  %19 = icmp ne i24 %18, 0, !dbg !6754
  call void @llvm.dbg.value(metadata i1 %19, metadata !6737, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6740
  br label %43, !dbg !6756

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6757
  %22 = load i24, i24* %21, align 4, !dbg !6758
  %23 = and i24 %22, -458753, !dbg !6758
  %24 = or i24 %23, 262144, !dbg !6758
  call void @llvm.dbg.value(metadata i8 1, metadata !6737, metadata !DIExpression()), !dbg !6740
  br label %43, !dbg !6759

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6762
  %27 = load i24, i24* %26, align 4, !dbg !6763
  %28 = and i24 %27, -458753, !dbg !6763
  %29 = or i24 %28, 196608, !dbg !6763
  %30 = and i24 %27, 30720, !dbg !6764
  %31 = icmp eq i24 %30, 16384, !dbg !6764
  br label %43, !dbg !6766

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6767
  %34 = load i24, i24* %33, align 4, !dbg !6768
  %35 = and i24 %34, -458753, !dbg !6768
  %36 = or i24 %35, 196608, !dbg !6768
  %37 = and i24 %34, 30720, !dbg !6769
  %38 = icmp ne i24 %37, 0, !dbg !6769
  br label %43, !dbg !6771

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6772
  %41 = load i24, i24* %40, align 4, !dbg !6773
  %42 = or i24 %41, 1, !dbg !6773
  br label %43, !dbg !6774

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6775
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6776
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6777
  call void @llvm.dbg.value(metadata i8* %48, metadata !6736, metadata !DIExpression()), !dbg !6740
  call void @llvm.dbg.value(metadata i8 poison, metadata !6737, metadata !DIExpression()), !dbg !6740
  %49 = lshr i24 %44, 1, !dbg !6775
  %50 = and i24 %49, 1, !dbg !6775
  %51 = zext i24 %50 to i32, !dbg !6775
  %52 = or i32 %51, %47, !dbg !6775
  %53 = trunc i32 %52 to i24, !dbg !6775
  %54 = shl nuw nsw i24 %53, 1, !dbg !6775
  %55 = and i24 %44, -3, !dbg !6775
  %56 = or i24 %54, %55, !dbg !6775
  store i24 %56, i24* %46, align 4, !dbg !6775
  ret i8* %48, !dbg !6778
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #17 !dbg !6779 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6783, metadata !DIExpression()), !dbg !6786
  %2 = load i8*, i8** %0, align 4, !dbg !6787
  call void @llvm.dbg.value(metadata i8* %2, metadata !6784, metadata !DIExpression()), !dbg !6786
  call void @llvm.dbg.value(metadata i32 0, metadata !6785, metadata !DIExpression()), !dbg !6786
  %3 = load i8, i8* %2, align 1, !dbg !6788
  %4 = zext i8 %3 to i32, !dbg !6789
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #28, !dbg !6790
  %6 = icmp eq i32 %5, 0, !dbg !6791
  br i1 %6, label %19, label %7, !dbg !6791

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6785, metadata !DIExpression()), !dbg !6786
  call void @llvm.dbg.value(metadata i8* %10, metadata !6784, metadata !DIExpression()), !dbg !6786
  %11 = mul i32 %9, 10, !dbg !6792
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6794
  call void @llvm.dbg.value(metadata i8* %12, metadata !6784, metadata !DIExpression()), !dbg !6786
  %13 = add i32 %11, -48, !dbg !6795
  %14 = add i32 %13, %8, !dbg !6796
  call void @llvm.dbg.value(metadata i32 %14, metadata !6785, metadata !DIExpression()), !dbg !6786
  %15 = load i8, i8* %12, align 1, !dbg !6788
  %16 = zext i8 %15 to i32, !dbg !6789
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #28, !dbg !6790
  %18 = icmp eq i32 %17, 0, !dbg !6791
  br i1 %18, label %19, label %7, !dbg !6791, !llvm.loop !6797

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6786
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6786
  store i8* %20, i8** %0, align 4, !dbg !6799
  ret i32 %21, !dbg !6800
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #5 !dbg !6801 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6803, metadata !DIExpression()), !dbg !6804
  %2 = add i32 %0, -48, !dbg !6805
  %3 = icmp ult i32 %2, 10, !dbg !6806
  %4 = zext i1 %3 to i32, !dbg !6806
  ret i32 %4, !dbg !6807
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !6808 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6813, metadata !DIExpression()), !dbg !6815
  call void @llvm.dbg.value(metadata i32 %1, metadata !6814, metadata !DIExpression()), !dbg !6815
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #26, !dbg !6816, !srcloc !6818
  ret void, !dbg !6819
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6820 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6822, metadata !DIExpression()), !dbg !6830
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6831
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !6831
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6823, metadata !DIExpression()), !dbg !6832
  call void @llvm.va_start(i8* nonnull %3), !dbg !6833
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6834
  %5 = load i32, i32* %4, align 4, !dbg !6834
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6834
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !6834
  call void @llvm.va_end(i8* nonnull %3), !dbg !6835
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !6836
  ret void, !dbg !6836
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6837 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #26, !dbg !6839, !srcloc !6840
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #26, !dbg !6841, !srcloc !6842
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #26, !dbg !6843, !srcloc !6844
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #26, !dbg !6845, !srcloc !6846
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #26, !dbg !6847, !srcloc !6848
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,85\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #26, !dbg !6849, !srcloc !6850
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #26, !dbg !6851, !srcloc !6852
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #26, !dbg !6853, !srcloc !6854
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #26, !dbg !6855, !srcloc !6856
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #26, !dbg !6857, !srcloc !6858
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #26, !dbg !6859, !srcloc !6860
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #26, !dbg !6861, !srcloc !6862
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #26, !dbg !6863, !srcloc !6864
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #26, !dbg !6865, !srcloc !6866
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #26, !dbg !6867, !srcloc !6868
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #26, !dbg !6869, !srcloc !6870
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #26, !dbg !6871, !srcloc !6872
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #26, !dbg !6873, !srcloc !6874
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #26, !dbg !6875, !srcloc !6876
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #26, !dbg !6877, !srcloc !6878
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #26, !dbg !6879, !srcloc !6880
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #26, !dbg !6881, !srcloc !6882
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #26, !dbg !6883, !srcloc !6884
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #26, !dbg !6885, !srcloc !6886
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #26, !dbg !6887, !srcloc !6888
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #26, !dbg !6889, !srcloc !6890
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #26, !dbg !6891, !srcloc !6892
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #26, !dbg !6893, !srcloc !6894
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #26, !dbg !6895, !srcloc !6896
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #26, !dbg !6897, !srcloc !6898
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,%object", ""() #26, !dbg !6899, !srcloc !6900
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #26, !dbg !6901, !srcloc !6902
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #26, !dbg !6903, !srcloc !6904
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #26, !dbg !6905, !srcloc !6906
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #26, !dbg !6907, !srcloc !6908
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #26, !dbg !6909, !srcloc !6910
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #26, !dbg !6911, !srcloc !6912
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #26, !dbg !6913, !srcloc !6914
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #26, !dbg !6915, !srcloc !6916
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #26, !dbg !6917, !srcloc !6918
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #26, !dbg !6919, !srcloc !6920
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #26, !dbg !6921, !srcloc !6922
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #26, !dbg !6923, !srcloc !6924
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #26, !dbg !6925, !srcloc !6926
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #26, !dbg !6927, !srcloc !6928
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #26, !dbg !6929, !srcloc !6930
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #26, !dbg !6931, !srcloc !6932
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #26, !dbg !6933, !srcloc !6934
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #26, !dbg !6935, !srcloc !6936
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #26, !dbg !6937, !srcloc !6938
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #26, !dbg !6939, !srcloc !6940
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #26, !dbg !6941, !srcloc !6942
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED,%object", ""() #26, !dbg !6943, !srcloc !6944
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #26, !dbg !6945, !srcloc !6946
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #26, !dbg !6947, !srcloc !6948
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #26, !dbg !6949, !srcloc !6950
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #26, !dbg !6951, !srcloc !6952
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #26, !dbg !6953, !srcloc !6954
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #26, !dbg !6955, !srcloc !6956
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #26, !dbg !6957, !srcloc !6958
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #26, !dbg !6959, !srcloc !6960
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #26, !dbg !6961, !srcloc !6962
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #26, !dbg !6963, !srcloc !6964
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #26, !dbg !6965, !srcloc !6966
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #26, !dbg !6967, !srcloc !6968
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #26, !dbg !6969, !srcloc !6970
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #26, !dbg !6971, !srcloc !6972
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #26, !dbg !6973, !srcloc !6974
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #26, !dbg !6975, !srcloc !6976
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #26, !dbg !6977, !srcloc !6978
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #26, !dbg !6979, !srcloc !6980
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #26, !dbg !6981, !srcloc !6982
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #26, !dbg !6983, !srcloc !6984
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #26, !dbg !6985, !srcloc !6986
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #26, !dbg !6987, !srcloc !6988
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #26, !dbg !6989, !srcloc !6990
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #26, !dbg !6991, !srcloc !6992
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #26, !dbg !6993, !srcloc !6994
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #26, !dbg !6995, !srcloc !6996
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #26, !dbg !6997, !srcloc !6998
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #26, !dbg !6999, !srcloc !7000
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #26, !dbg !7001, !srcloc !7002
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #26, !dbg !7003, !srcloc !7004
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #26, !dbg !7005, !srcloc !7006
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #26, !dbg !7007, !srcloc !7008
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #26, !dbg !7009, !srcloc !7010
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #26, !dbg !7011, !srcloc !7012
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #26, !dbg !7013, !srcloc !7014
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_CARBON\0A\09.equ\09CONFIG_BOARD_96B_CARBON,1\0A\09.type\09CONFIG_BOARD_96B_CARBON,%object", ""() #26, !dbg !7015, !srcloc !7016
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #26, !dbg !7017, !srcloc !7018
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #26, !dbg !7019, !srcloc !7020
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #26, !dbg !7021, !srcloc !7022
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #26, !dbg !7023, !srcloc !7024
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #26, !dbg !7025, !srcloc !7026
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F401XE\0A\09.equ\09CONFIG_SOC_STM32F401XE,1\0A\09.type\09CONFIG_SOC_STM32F401XE,%object", ""() #26, !dbg !7027, !srcloc !7028
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #26, !dbg !7029, !srcloc !7030
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #26, !dbg !7031, !srcloc !7032
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #26, !dbg !7033, !srcloc !7034
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #26, !dbg !7035, !srcloc !7036
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #26, !dbg !7037, !srcloc !7038
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #26, !dbg !7039, !srcloc !7040
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #26, !dbg !7041, !srcloc !7042
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #26, !dbg !7043, !srcloc !7044
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #26, !dbg !7045, !srcloc !7046
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #26, !dbg !7047, !srcloc !7048
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #26, !dbg !7049, !srcloc !7050
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #26, !dbg !7051, !srcloc !7052
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #26, !dbg !7053, !srcloc !7054
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #26, !dbg !7055, !srcloc !7056
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #26, !dbg !7057, !srcloc !7058
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #26, !dbg !7059, !srcloc !7060
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #26, !dbg !7061, !srcloc !7062
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #26, !dbg !7063, !srcloc !7064
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #26, !dbg !7065, !srcloc !7066
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #26, !dbg !7067, !srcloc !7068
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #26, !dbg !7069, !srcloc !7070
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #26, !dbg !7071, !srcloc !7072
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #26, !dbg !7073, !srcloc !7074
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #26, !dbg !7075, !srcloc !7076
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #26, !dbg !7077, !srcloc !7078
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #26, !dbg !7079, !srcloc !7080
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #26, !dbg !7081, !srcloc !7082
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #26, !dbg !7083, !srcloc !7084
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #26, !dbg !7085, !srcloc !7086
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #26, !dbg !7087, !srcloc !7088
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #26, !dbg !7089, !srcloc !7090
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #26, !dbg !7091, !srcloc !7092
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #26, !dbg !7093, !srcloc !7094
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,96\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #26, !dbg !7095, !srcloc !7096
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #26, !dbg !7097, !srcloc !7098
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #26, !dbg !7099, !srcloc !7100
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #26, !dbg !7101, !srcloc !7102
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #26, !dbg !7103, !srcloc !7104
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #26, !dbg !7105, !srcloc !7106
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #26, !dbg !7107, !srcloc !7108
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #26, !dbg !7109, !srcloc !7110
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #26, !dbg !7111, !srcloc !7112
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #26, !dbg !7113, !srcloc !7114
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #26, !dbg !7115, !srcloc !7116
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #26, !dbg !7117, !srcloc !7118
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #26, !dbg !7119, !srcloc !7120
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #26, !dbg !7121, !srcloc !7122
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #26, !dbg !7123, !srcloc !7124
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #26, !dbg !7125, !srcloc !7126
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #26, !dbg !7127, !srcloc !7128
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #26, !dbg !7129, !srcloc !7130
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #26, !dbg !7131, !srcloc !7132
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #26, !dbg !7133, !srcloc !7134
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #26, !dbg !7135, !srcloc !7136
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #26, !dbg !7137, !srcloc !7138
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #26, !dbg !7139, !srcloc !7140
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !7141, !srcloc !7142
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #26, !dbg !7143, !srcloc !7144
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #26, !dbg !7145, !srcloc !7146
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #26, !dbg !7147, !srcloc !7148
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #26, !dbg !7149, !srcloc !7150
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #26, !dbg !7151, !srcloc !7152
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #26, !dbg !7153, !srcloc !7154
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #26, !dbg !7155, !srcloc !7156
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #26, !dbg !7157, !srcloc !7158
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #26, !dbg !7159, !srcloc !7160
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #26, !dbg !7161, !srcloc !7162
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #26, !dbg !7163, !srcloc !7164
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #26, !dbg !7165, !srcloc !7166
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #26, !dbg !7167, !srcloc !7168
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #26, !dbg !7169, !srcloc !7170
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #26, !dbg !7171, !srcloc !7172
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #26, !dbg !7173, !srcloc !7174
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #26, !dbg !7175, !srcloc !7176
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #26, !dbg !7177, !srcloc !7178
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #26, !dbg !7179, !srcloc !7180
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #26, !dbg !7181, !srcloc !7182
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,1\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #26, !dbg !7183, !srcloc !7184
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #26, !dbg !7185, !srcloc !7186
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #26, !dbg !7187, !srcloc !7188
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #26, !dbg !7189, !srcloc !7190
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #26, !dbg !7191, !srcloc !7192
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #26, !dbg !7193, !srcloc !7194
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #26, !dbg !7195, !srcloc !7196
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #26, !dbg !7197, !srcloc !7198
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #26, !dbg !7199, !srcloc !7200
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #26, !dbg !7201, !srcloc !7202
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #26, !dbg !7203, !srcloc !7204
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #26, !dbg !7205, !srcloc !7206
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #26, !dbg !7207, !srcloc !7208
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #26, !dbg !7209, !srcloc !7210
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #26, !dbg !7211, !srcloc !7212
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #26, !dbg !7213, !srcloc !7214
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #26, !dbg !7215, !srcloc !7216
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #26, !dbg !7217, !srcloc !7218
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #26, !dbg !7219, !srcloc !7220
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #26, !dbg !7221, !srcloc !7222
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #26, !dbg !7223, !srcloc !7224
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #26, !dbg !7225, !srcloc !7226
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #26, !dbg !7227, !srcloc !7228
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #26, !dbg !7229, !srcloc !7230
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #26, !dbg !7231, !srcloc !7232
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #26, !dbg !7233, !srcloc !7234
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #26, !dbg !7235, !srcloc !7236
  tail call void asm sideeffect ".globl\09CONFIG_STACK_POINTER_RANDOM\0A\09.equ\09CONFIG_STACK_POINTER_RANDOM,0\0A\09.type\09CONFIG_STACK_POINTER_RANDOM,%object", ""() #26, !dbg !7237, !srcloc !7238
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #26, !dbg !7239, !srcloc !7240
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #26, !dbg !7241, !srcloc !7242
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !7243, !srcloc !7244
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #26, !dbg !7245, !srcloc !7246
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #26, !dbg !7247, !srcloc !7248
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #26, !dbg !7249, !srcloc !7250
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #26, !dbg !7251, !srcloc !7252
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #26, !dbg !7253, !srcloc !7254
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #26, !dbg !7255, !srcloc !7256
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #26, !dbg !7257, !srcloc !7258
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #26, !dbg !7259, !srcloc !7260
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #26, !dbg !7261, !srcloc !7262
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #26, !dbg !7263, !srcloc !7264
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #26, !dbg !7265, !srcloc !7266
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #26, !dbg !7267, !srcloc !7268
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #26, !dbg !7269, !srcloc !7270
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #26, !dbg !7271, !srcloc !7272
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #26, !dbg !7273, !srcloc !7274
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #26, !dbg !7275, !srcloc !7276
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #26, !dbg !7277, !srcloc !7278
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #26, !dbg !7279, !srcloc !7280
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #26, !dbg !7281, !srcloc !7282
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #26, !dbg !7283, !srcloc !7284
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #26, !dbg !7285, !srcloc !7286
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #26, !dbg !7287, !srcloc !7288
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #26, !dbg !7289, !srcloc !7290
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #26, !dbg !7291, !srcloc !7292
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #26, !dbg !7293, !srcloc !7294
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #26, !dbg !7295, !srcloc !7296
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #26, !dbg !7297, !srcloc !7298
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #26, !dbg !7299, !srcloc !7300
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #26, !dbg !7301, !srcloc !7302
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #26, !dbg !7303, !srcloc !7304
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #26, !dbg !7305, !srcloc !7306
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #26, !dbg !7307, !srcloc !7308
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #26, !dbg !7309, !srcloc !7310
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #26, !dbg !7311, !srcloc !7312
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #26, !dbg !7313, !srcloc !7314
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #26, !dbg !7315, !srcloc !7316
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #26, !dbg !7317, !srcloc !7318
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #26, !dbg !7319, !srcloc !7320
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #26, !dbg !7321, !srcloc !7322
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #26, !dbg !7323, !srcloc !7324
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #26, !dbg !7325, !srcloc !7326
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #26, !dbg !7327, !srcloc !7328
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #26, !dbg !7329, !srcloc !7330
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #26, !dbg !7331, !srcloc !7332
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #26, !dbg !7333, !srcloc !7334
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #26, !dbg !7335, !srcloc !7336
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #26, !dbg !7337, !srcloc !7338
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #26, !dbg !7339, !srcloc !7340
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #26, !dbg !7341, !srcloc !7342
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #26, !dbg !7343, !srcloc !7344
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #26, !dbg !7345, !srcloc !7346
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #26, !dbg !7347, !srcloc !7348
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #26, !dbg !7349, !srcloc !7350
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #26, !dbg !7351, !srcloc !7352
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #26, !dbg !7353, !srcloc !7354
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #26, !dbg !7355, !srcloc !7356
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #26, !dbg !7357, !srcloc !7358
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #26, !dbg !7359, !srcloc !7360
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #26, !dbg !7361, !srcloc !7362
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #26, !dbg !7363, !srcloc !7364
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #26, !dbg !7365, !srcloc !7366
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #26, !dbg !7367, !srcloc !7368
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #26, !dbg !7369, !srcloc !7370
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #26, !dbg !7371, !srcloc !7372
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #26, !dbg !7373, !srcloc !7374
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #26, !dbg !7375, !srcloc !7376
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #26, !dbg !7377, !srcloc !7378
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #26, !dbg !7379, !srcloc !7380
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #26, !dbg !7381, !srcloc !7382
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #26, !dbg !7383, !srcloc !7384
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #26, !dbg !7385, !srcloc !7386
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #26, !dbg !7387, !srcloc !7388
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #26, !dbg !7389, !srcloc !7390
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #26, !dbg !7391, !srcloc !7392
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #26, !dbg !7393, !srcloc !7394
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #26, !dbg !7395, !srcloc !7396
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #26, !dbg !7397, !srcloc !7398
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #26, !dbg !7399, !srcloc !7400
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #26, !dbg !7401, !srcloc !7402
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #26, !dbg !7403, !srcloc !7404
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #26, !dbg !7405, !srcloc !7406
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #26, !dbg !7407, !srcloc !7408
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #26, !dbg !7409, !srcloc !7410
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #26, !dbg !7411, !srcloc !7412
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #26, !dbg !7413, !srcloc !7414
  tail call void asm sideeffect ".globl\09CONFIG_TEST_RANDOM_GENERATOR\0A\09.equ\09CONFIG_TEST_RANDOM_GENERATOR,1\0A\09.type\09CONFIG_TEST_RANDOM_GENERATOR,%object", ""() #26, !dbg !7415, !srcloc !7416
  tail call void asm sideeffect ".globl\09CONFIG_TIMER_RANDOM_GENERATOR\0A\09.equ\09CONFIG_TIMER_RANDOM_GENERATOR,1\0A\09.type\09CONFIG_TIMER_RANDOM_GENERATOR,%object", ""() #26, !dbg !7417, !srcloc !7418
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #26, !dbg !7419, !srcloc !7420
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #26, !dbg !7421, !srcloc !7422
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !7423, !srcloc !7424
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #26, !dbg !7425, !srcloc !7426
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #26, !dbg !7427, !srcloc !7428
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #26, !dbg !7429, !srcloc !7430
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #26, !dbg !7431, !srcloc !7432
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #26, !dbg !7433, !srcloc !7434
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #26, !dbg !7435, !srcloc !7436
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #26, !dbg !7437, !srcloc !7438
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #26, !dbg !7439, !srcloc !7440
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #26, !dbg !7441, !srcloc !7442
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #26, !dbg !7443, !srcloc !7444
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #26, !dbg !7445, !srcloc !7446
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #26, !dbg !7447, !srcloc !7448
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #26, !dbg !7449, !srcloc !7450
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #26, !dbg !7451, !srcloc !7452
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #26, !dbg !7453, !srcloc !7454
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #26, !dbg !7455, !srcloc !7456
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #26, !dbg !7457, !srcloc !7458
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #26, !dbg !7459, !srcloc !7460
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #26, !dbg !7461, !srcloc !7462
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #26, !dbg !7463, !srcloc !7464
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #26, !dbg !7465, !srcloc !7466
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #26, !dbg !7467, !srcloc !7468
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #26, !dbg !7469, !srcloc !7470
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #26, !dbg !7471, !srcloc !7472
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #26, !dbg !7473, !srcloc !7474
  ret void, !dbg !7475
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7476 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7478, metadata !DIExpression()), !dbg !7480
  tail call fastcc void @LL_FLASH_EnableInstCache() #28, !dbg !7481
  tail call fastcc void @LL_FLASH_EnableDataCache() #28, !dbg !7482
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !7483, !srcloc !7492
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !7483
  call void @llvm.dbg.value(metadata i32 %3, metadata !7489, metadata !DIExpression()) #26, !dbg !7493
  call void @llvm.dbg.value(metadata i32 undef, metadata !7490, metadata !DIExpression()) #26, !dbg !7493
  call void @llvm.dbg.value(metadata i32 %3, metadata !7479, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata i32 %3, metadata !7494, metadata !DIExpression()) #26, !dbg !7499
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !7501, !srcloc !7502
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !7503
  ret i32 0, !dbg !7504
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #18 !dbg !7505 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7507
  %2 = or i32 %1, 512, !dbg !7507
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7507
  ret void, !dbg !7508
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #18 !dbg !7509 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7510
  %2 = or i32 %1, 1024, !dbg !7510
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7510
  ret void, !dbg !7511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #5 !dbg !7512 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7514, metadata !DIExpression()), !dbg !7515
  ret i32 0, !dbg !7516
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7517 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7520, metadata !DIExpression()), !dbg !7528
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7529
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !7529
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7521, metadata !DIExpression()), !dbg !7530
  call void @llvm.va_start(i8* nonnull %3), !dbg !7531
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7532
  %5 = load i32, i32* %4, align 4, !dbg !7532
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7532
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !7532
  call void @llvm.va_end(i8* nonnull %3), !dbg !7533
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !7534
  ret void, !dbg !7534
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7535 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7540, metadata !DIExpression()), !dbg !7541
  call void @llvm.dbg.value(metadata i8* %0, metadata !7539, metadata !DIExpression()), !dbg !7541
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #27, !dbg !7542
  ret void, !dbg !7543
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7544 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7548, metadata !DIExpression()), !dbg !7552
  call void @llvm.dbg.value(metadata i8* %1, metadata !7549, metadata !DIExpression()), !dbg !7552
  call void @llvm.dbg.value(metadata i32 %2, metadata !7550, metadata !DIExpression()), !dbg !7552
  call void @llvm.dbg.value(metadata i8* %1, metadata !7551, metadata !DIExpression()), !dbg !7552
  %4 = icmp eq i32 %2, 0, !dbg !7553
  br i1 %4, label %14, label %5, !dbg !7554

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.68(i32 noundef %0) #28, !dbg !7552
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7554

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7551, metadata !DIExpression()), !dbg !7552
  call void @llvm.dbg.value(metadata i32 %10, metadata !7550, metadata !DIExpression()), !dbg !7552
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i32 0, i32 0), i32 noundef %7) #27, !dbg !7555
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #28, !dbg !7557
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7558
  call void @llvm.dbg.value(metadata i32 %11, metadata !7550, metadata !DIExpression()), !dbg !7552
  call void @llvm.dbg.value(metadata i8* %12, metadata !7551, metadata !DIExpression()), !dbg !7552
  br i1 %13, label %14, label %8, !dbg !7558, !llvm.loop !7559

14:                                               ; preds = %8, %3
  ret void, !dbg !7561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.68(i32 noundef %0) unnamed_addr #5 !dbg !7562 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7564, metadata !DIExpression()), !dbg !7565
  %2 = add i32 %0, -1, !dbg !7566
  %3 = icmp ult i32 %2, 4, !dbg !7566
  %4 = shl i32 %2, 3, !dbg !7566
  %5 = lshr i32 1145657157, %4, !dbg !7566
  %6 = trunc i32 %5 to i8, !dbg !7566
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7566
  ret i8 %7, !dbg !7567
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7568 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7572, metadata !DIExpression()), !dbg !7583
  call void @llvm.dbg.value(metadata i32 %1, metadata !7573, metadata !DIExpression()), !dbg !7583
  call void @llvm.dbg.value(metadata i32 0, metadata !7574, metadata !DIExpression()), !dbg !7584
  br label %4, !dbg !7585

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.70, i32 0, i32 0)) #27, !dbg !7586
  call void @llvm.dbg.value(metadata i32 0, metadata !7576, metadata !DIExpression()), !dbg !7587
  br label %16, !dbg !7588

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7574, metadata !DIExpression()), !dbg !7584
  %6 = icmp ult i32 %5, %1, !dbg !7589
  br i1 %6, label %7, label %11, !dbg !7593

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7594
  %9 = load i8, i8* %8, align 1, !dbg !7594
  %10 = zext i8 %9 to i32, !dbg !7596
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.71, i32 0, i32 0), i32 noundef %10) #27, !dbg !7597
  br label %12, !dbg !7598

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.72, i32 0, i32 0)) #27, !dbg !7599
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7601
  call void @llvm.dbg.value(metadata i32 %13, metadata !7574, metadata !DIExpression()), !dbg !7584
  %14 = icmp eq i32 %13, 8, !dbg !7602
  br i1 %14, label %3, label %4, !dbg !7585, !llvm.loop !7603

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.73, i32 0, i32 0)) #27, !dbg !7605
  ret void, !dbg !7606

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7576, metadata !DIExpression()), !dbg !7587
  %18 = icmp ult i32 %17, %1, !dbg !7607
  br i1 %18, label %19, label %26, !dbg !7608

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7609
  %21 = load i8, i8* %20, align 1, !dbg !7609
  call void @llvm.dbg.value(metadata i8 %21, metadata !7578, metadata !DIExpression()), !dbg !7610
  %22 = zext i8 %21 to i32, !dbg !7611
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #28, !dbg !7612
  %24 = icmp eq i32 %23, 0, !dbg !7613
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7612
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.74, i32 0, i32 0), i32 noundef %25) #27, !dbg !7614
  br label %27, !dbg !7615

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.75, i32 0, i32 0)) #27, !dbg !7616
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7618
  call void @llvm.dbg.value(metadata i32 %28, metadata !7576, metadata !DIExpression()), !dbg !7587
  %29 = icmp eq i32 %28, 8, !dbg !7619
  br i1 %29, label %15, label %16, !dbg !7588, !llvm.loop !7620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #5 !dbg !7622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7624, metadata !DIExpression()), !dbg !7625
  %2 = add i32 %0, -32, !dbg !7626
  %3 = icmp ult i32 %2, 95, !dbg !7626
  %4 = zext i1 %3 to i32, !dbg !7626
  ret i32 %4, !dbg !7627
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7628 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7677, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7678, metadata !DIExpression()), !dbg !7679
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7680
  br i1 %3, label %5, label %4, !dbg !7682

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #28, !dbg !7683
  br label %5, !dbg !7685

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !7686
  ret void, !dbg !7687
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7688 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7692, metadata !DIExpression()), !dbg !7693
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7694
  %3 = load i32, i32* %2, align 4, !dbg !7694
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7694
  %5 = load i32, i32* %4, align 4, !dbg !7694
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7694
  %7 = load i32, i32* %6, align 4, !dbg !7694
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.76, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #27, !dbg !7694
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7699
  %9 = load i32, i32* %8, align 4, !dbg !7699
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7699
  %11 = load i32, i32* %10, align 4, !dbg !7699
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7699
  %13 = load i32, i32* %12, align 4, !dbg !7699
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.77, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #27, !dbg !7699
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7704
  %15 = load i32, i32* %14, align 4, !dbg !7704
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #27, !dbg !7704
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7709
  %17 = load i32, i32* %16, align 4, !dbg !7709
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.79, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !7709
  ret void, !dbg !7714
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7715 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7732, metadata !DIExpression()), !dbg !7735
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7733, metadata !DIExpression()), !dbg !7735
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7736
  %4 = load i32, i32* %3, align 4, !dbg !7736
  call void @llvm.dbg.value(metadata i32 %4, metadata !7734, metadata !DIExpression()), !dbg !7735
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #28, !dbg !7737
  ret void, !dbg !7738
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !7739 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7743, metadata !DIExpression()), !dbg !7746
  call void @llvm.dbg.value(metadata i8* %0, metadata !7744, metadata !DIExpression()), !dbg !7746
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7747
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #26, !dbg !7747
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7745, metadata !DIExpression()), !dbg !7748
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7748
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7749
  %5 = bitcast i8* %4 to i32*, !dbg !7749
  %6 = load i32, i32* %5, align 4, !dbg !7749
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7750
  store i32 %6, i32* %7, align 4, !dbg !7751
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #28, !dbg !7752
  unreachable, !dbg !7753
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7754 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7757, metadata !DIExpression()), !dbg !7758
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #28, !dbg !7759
  ret void, !dbg !7760
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7761 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7765, metadata !DIExpression()), !dbg !7766
  %2 = icmp sgt i32 %0, -1, !dbg !7767
  br i1 %2, label %3, label %8, !dbg !7769

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !7770, !srcloc !7772
  %4 = and i32 %0, 31, !dbg !7773
  %5 = shl nuw i32 1, %4, !dbg !7774
  %6 = lshr i32 %0, 5, !dbg !7775
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7776
  store volatile i32 %5, i32* %7, align 4, !dbg !7777
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !7778, !srcloc !7779
  br label %8, !dbg !7780

8:                                                ; preds = %3, %1
  ret void, !dbg !7781
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7782 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7784, metadata !DIExpression()), !dbg !7785
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #28, !dbg !7786
  ret void, !dbg !7787
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7788 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7790, metadata !DIExpression()), !dbg !7791
  %2 = icmp sgt i32 %0, -1, !dbg !7792
  br i1 %2, label %3, label %8, !dbg !7794

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7795
  %5 = shl nuw i32 1, %4, !dbg !7797
  %6 = lshr i32 %0, 5, !dbg !7798
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7799
  store volatile i32 %5, i32* %7, align 4, !dbg !7800
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !7801, !srcloc !7805
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7806, !srcloc !7809
  br label %8, !dbg !7810

8:                                                ; preds = %3, %1
  ret void, !dbg !7811
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #7 !dbg !7812 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7816, metadata !DIExpression()), !dbg !7817
  %2 = lshr i32 %0, 5, !dbg !7818
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7819
  %4 = load volatile i32, i32* %3, align 4, !dbg !7819
  %5 = and i32 %0, 31, !dbg !7820
  %6 = shl nuw i32 1, %5, !dbg !7820
  %7 = and i32 %4, %6, !dbg !7821
  ret i32 %7, !dbg !7822
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7823 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7827, metadata !DIExpression()), !dbg !7830
  call void @llvm.dbg.value(metadata i32 %1, metadata !7828, metadata !DIExpression()), !dbg !7830
  call void @llvm.dbg.value(metadata i32 %2, metadata !7829, metadata !DIExpression()), !dbg !7830
  %4 = add i32 %1, 1, !dbg !7831
  call void @llvm.dbg.value(metadata i32 %4, metadata !7828, metadata !DIExpression()), !dbg !7830
  %5 = icmp ult i32 %4, 16, !dbg !7834
  br i1 %5, label %7, label %6, !dbg !7837

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.80, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.81, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.82, i32 0, i32 0), i32 noundef 94) #27, !dbg !7838
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.83, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #27, !dbg !7838
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.82, i32 0, i32 0), i32 noundef 94) #27, !dbg !7838
  unreachable, !dbg !7838

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #28, !dbg !7840
  ret void, !dbg !7841
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !7842 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7846, metadata !DIExpression()), !dbg !7848
  call void @llvm.dbg.value(metadata i32 %1, metadata !7847, metadata !DIExpression()), !dbg !7848
  %3 = trunc i32 %1 to i8, !dbg !7849
  %4 = shl i8 %3, 4, !dbg !7849
  %5 = and i32 %0, 15, !dbg !7851
  %6 = add nsw i32 %5, -4, !dbg !7851
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7851
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7851
  %9 = icmp slt i32 %0, 0, !dbg !7851
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7851
  store volatile i8 %4, i8* %10, align 1, !dbg !7849
  ret void, !dbg !7852
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7853 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7855, metadata !DIExpression()), !dbg !7856
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !7857
  ret void, !dbg !7858
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7859 {
  tail call void @z_SysNmiOnReset() #27, !dbg !7861
  tail call void @z_arm_int_exit() #27, !dbg !7862
  ret void, !dbg !7863
}

; Function Attrs: optsize
declare !dbg !7864 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7865 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !7867 {
  tail call fastcc void @relocate_vector_table() #28, !dbg !7869
  tail call fastcc void @z_arm_floating_point_init() #28, !dbg !7870
  tail call void @z_bss_zero() #27, !dbg !7871
  tail call void @z_data_copy() #27, !dbg !7872
  tail call void @z_arm_interrupt_init() #27, !dbg !7873
  tail call void @z_cstart() #30, !dbg !7874
  unreachable, !dbg !7874
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7875 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7876
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !7877, !srcloc !7880
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7881, !srcloc !7884
  ret void, !dbg !7885
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7886 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7887
  %2 = and i32 %1, -15728641, !dbg !7887
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7887
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #26, !dbg !7888, !srcloc !7893
  call void @llvm.dbg.value(metadata i32 %3, metadata !7891, metadata !DIExpression()) #26, !dbg !7894
  %4 = and i32 %3, -5, !dbg !7895
  call void @llvm.dbg.value(metadata i32 %4, metadata !7896, metadata !DIExpression()) #26, !dbg !7901
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #26, !dbg !7903, !srcloc !7904
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7905, !srcloc !7884
  ret void, !dbg !7907
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7908 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7911, metadata !DIExpression()), !dbg !7912
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7913
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7914
  store i32 %0, i32* %3, align 4, !dbg !7915
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7916
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7917
  store i32 %4, i32* %5, align 4, !dbg !7918
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7919
  %7 = or i32 %6, 268435456, !dbg !7919
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7919
  call void @llvm.dbg.value(metadata i32 0, metadata !7920, metadata !DIExpression()) #26, !dbg !7923
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #26, !dbg !7925, !srcloc !7926
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7927
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7928
  %10 = load i32, i32* %9, align 4, !dbg !7928
  ret i32 %10, !dbg !7929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #12 !dbg !7930 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8042, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !8043, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i8* %2, metadata !8044, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !8045, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i8* %4, metadata !8046, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i8* %5, metadata !8047, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i8* %6, metadata !8048, metadata !DIExpression()), !dbg !8050
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !8051
  call void @llvm.dbg.value(metadata i8* %8, metadata !8049, metadata !DIExpression()), !dbg !8050
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !8052
  %10 = bitcast i8* %9 to i32*, !dbg !8052
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !8053
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !8054
  %12 = bitcast i8* %8 to i32*, !dbg !8055
  store i32 %11, i32* %12, align 4, !dbg !8056
  %13 = ptrtoint i8* %4 to i32, !dbg !8057
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !8058
  %15 = bitcast i8* %14 to i32*, !dbg !8058
  store i32 %13, i32* %15, align 4, !dbg !8059
  %16 = ptrtoint i8* %5 to i32, !dbg !8060
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !8061
  %18 = bitcast i8* %17 to i32*, !dbg !8061
  store i32 %16, i32* %18, align 4, !dbg !8062
  %19 = ptrtoint i8* %6 to i32, !dbg !8063
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !8064
  %21 = bitcast i8* %20 to i32*, !dbg !8064
  store i32 %19, i32* %21, align 4, !dbg !8065
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !8066
  %23 = bitcast i8* %22 to i32*, !dbg !8066
  store i32 16777216, i32* %23, align 4, !dbg !8067
  %24 = ptrtoint i8* %8 to i32, !dbg !8068
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !8069
  store i32 %24, i32* %25, align 8, !dbg !8070
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !8071
  store i32 0, i32* %26, align 4, !dbg !8072
  ret void, !dbg !8073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #13 !dbg !8074 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8078, metadata !DIExpression()), !dbg !8084
  call void @llvm.dbg.value(metadata i32 %1, metadata !8079, metadata !DIExpression()), !dbg !8084
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8085
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !8080, metadata !DIExpression()), !dbg !8084
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !8086
  br i1 %4, label %19, label %5, !dbg !8088

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !8083, metadata !DIExpression()), !dbg !8084
  %6 = icmp eq i32 %0, -22, !dbg !8089
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !8089
  %8 = load i32, i32* %7, align 4, !dbg !8089
  br i1 %6, label %16, label %9, !dbg !8091

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !8089
  %11 = icmp ule i32 %10, %0, !dbg !8089
  %12 = icmp ugt i32 %8, %0, !dbg !8089
  %13 = and i1 %12, %11, !dbg !8089
  %14 = icmp ugt i32 %8, %1, !dbg !8089
  %15 = and i1 %14, %13, !dbg !8089
  br i1 %15, label %18, label %19, !dbg !8089

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !8089
  br i1 %17, label %18, label %19, !dbg !8091

18:                                               ; preds = %9, %16
  br label %19, !dbg !8092

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !8084
  ret i32 %20, !dbg !8094
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !8095 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8099, metadata !DIExpression()), !dbg !8102
  call void @llvm.dbg.value(metadata i8* %1, metadata !8100, metadata !DIExpression()), !dbg !8102
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !8101, metadata !DIExpression()), !dbg !8102
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8103
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !8104
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #26, !dbg !8105, !srcloc !8106
  unreachable, !dbg !8107
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !8108 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8126, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.value(metadata i32 %1, metadata !8127, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.value(metadata i32 %2, metadata !8128, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !8129, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.value(metadata i32 0, metadata !8130, metadata !DIExpression()), !dbg !8136
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8137
  call void @llvm.dbg.value(metadata i32 %8, metadata !8131, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !8136
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #26, !dbg !8138
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #26, !dbg !8138
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !8139
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #26, !dbg !8139
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !8135, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.value(metadata i32 0, metadata !8141, metadata !DIExpression()) #26, !dbg !8144
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #26, !dbg !8146, !srcloc !8147
  call void @llvm.dbg.value(metadata i8* %6, metadata !8133, metadata !DIExpression(DW_OP_deref)), !dbg !8136
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #28, !dbg !8148
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !8134, metadata !DIExpression()), !dbg !8136
  %11 = icmp eq %struct.__esf* %10, null, !dbg !8149
  br i1 %11, label %12, label %13, !dbg !8152

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.87, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 1057) #27, !dbg !8153
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.89, i32 0, i32 0)) #27, !dbg !8153
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 1057) #27, !dbg !8153
  unreachable, !dbg !8153

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !8155
  call void @llvm.dbg.value(metadata i32 %14, metadata !8131, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.value(metadata i8* %5, metadata !8132, metadata !DIExpression(DW_OP_deref)), !dbg !8136
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #28, !dbg !8156
  call void @llvm.dbg.value(metadata i32 %15, metadata !8130, metadata !DIExpression()), !dbg !8136
  %16 = load i8, i8* %5, align 1, !dbg !8157, !range !8159
  call void @llvm.dbg.value(metadata i8 %16, metadata !8132, metadata !DIExpression()), !dbg !8136
  %17 = icmp eq i8 %16, 0, !dbg !8157
  br i1 %17, label %18, label %35, !dbg !8160

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !8161
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #27, !dbg !8162
  %21 = load i8, i8* %6, align 1, !dbg !8163, !range !8159
  call void @llvm.dbg.value(metadata i8 %21, metadata !8133, metadata !DIExpression()), !dbg !8136
  %22 = icmp eq i8 %21, 0, !dbg !8163
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !8165
  %24 = load i32, i32* %23, align 4, !dbg !8165
  br i1 %22, label %30, label %25, !dbg !8166

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !8167
  %27 = icmp eq i32 %26, 0, !dbg !8170
  br i1 %27, label %28, label %34, !dbg !8171

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !8172
  br label %32, !dbg !8174

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !8175
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !8165
  br label %34, !dbg !8177

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #27, !dbg !8177
  br label %35, !dbg !8178

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #26, !dbg !8178
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #26, !dbg !8178
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #26, !dbg !8178
  ret void, !dbg !8178
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !8179 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8184, metadata !DIExpression()), !dbg !8190
  call void @llvm.dbg.value(metadata i32 %1, metadata !8185, metadata !DIExpression()), !dbg !8190
  call void @llvm.dbg.value(metadata i32 %2, metadata !8186, metadata !DIExpression()), !dbg !8190
  call void @llvm.dbg.value(metadata i8* %3, metadata !8187, metadata !DIExpression()), !dbg !8190
  call void @llvm.dbg.value(metadata i8 0, metadata !8188, metadata !DIExpression()), !dbg !8190
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !8189, metadata !DIExpression()), !dbg !8190
  store i8 0, i8* %3, align 1, !dbg !8191
  %5 = icmp ugt i32 %2, -16777217, !dbg !8192
  br i1 %5, label %6, label %17, !dbg !8194

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !8195
  %8 = icmp eq i32 %7, 8, !dbg !8195
  br i1 %8, label %9, label %10, !dbg !8195

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.101, i32 0, i32 0), i32 noundef 69) #27, !dbg !8197
  br label %17, !dbg !8203

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !8204
  %12 = icmp eq i32 %11, 0, !dbg !8204
  br i1 %12, label %13, label %14, !dbg !8205

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !8189, metadata !DIExpression()), !dbg !8190
  store i8 1, i8* %3, align 1, !dbg !8208
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !8190
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !8189, metadata !DIExpression()), !dbg !8190
  br label %17, !dbg !8211

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !8190
  ret %struct.__esf* %18, !dbg !8212
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !8213 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8217, metadata !DIExpression()), !dbg !8221
  call void @llvm.dbg.value(metadata i32 %1, metadata !8218, metadata !DIExpression()), !dbg !8221
  call void @llvm.dbg.value(metadata i8* %2, metadata !8219, metadata !DIExpression()), !dbg !8221
  call void @llvm.dbg.value(metadata i32 0, metadata !8220, metadata !DIExpression()), !dbg !8221
  store i8 0, i8* %2, align 1, !dbg !8222
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !8223

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #28, !dbg !8224
  call void @llvm.dbg.value(metadata i32 %5, metadata !8220, metadata !DIExpression()), !dbg !8221
  br label %12, !dbg !8226

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #28, !dbg !8227
  call void @llvm.dbg.value(metadata i32 %7, metadata !8220, metadata !DIExpression()), !dbg !8221
  br label %12, !dbg !8228

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #28, !dbg !8229
  call void @llvm.dbg.value(metadata i32 0, metadata !8220, metadata !DIExpression()), !dbg !8221
  br label %12, !dbg !8230

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #28, !dbg !8231
  call void @llvm.dbg.value(metadata i32 0, metadata !8220, metadata !DIExpression()), !dbg !8221
  br label %12, !dbg !8232

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #28, !dbg !8233
  br label %12, !dbg !8234

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #28, !dbg !8235
  br label %12, !dbg !8236

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !8221
  call void @llvm.dbg.value(metadata i32 %13, metadata !8220, metadata !DIExpression()), !dbg !8221
  ret i32 %13, !dbg !8237
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8238 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8242, metadata !DIExpression()), !dbg !8245
  call void @llvm.dbg.value(metadata i8* %1, metadata !8243, metadata !DIExpression()), !dbg !8245
  call void @llvm.dbg.value(metadata i32 0, metadata !8244, metadata !DIExpression()), !dbg !8245
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.93, i32 0, i32 0), i32 noundef 69) #27, !dbg !8246
  store i8 0, i8* %1, align 1, !dbg !8251
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8252
  %4 = and i32 %3, 2, !dbg !8254
  %5 = icmp eq i32 %4, 0, !dbg !8255
  br i1 %5, label %7, label %6, !dbg !8256

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.94, i32 0, i32 0), i32 noundef 69) #27, !dbg !8257
  br label %38, !dbg !8263

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8264
  %9 = icmp sgt i32 %8, -1, !dbg !8266
  br i1 %9, label %11, label %10, !dbg !8267

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.95, i32 0, i32 0), i32 noundef 69) #27, !dbg !8268
  br label %38, !dbg !8274

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8275
  %13 = and i32 %12, 1073741824, !dbg !8277
  %14 = icmp eq i32 %13, 0, !dbg !8278
  br i1 %14, label %37, label %15, !dbg !8279

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.96, i32 0, i32 0), i32 noundef 69) #27, !dbg !8280
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #28, !dbg !8286
  br i1 %16, label %17, label %21, !dbg !8288

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8289
  %19 = load i32, i32* %18, align 4, !dbg !8289
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.97, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #27, !dbg !8289
  %20 = load i32, i32* %18, align 4, !dbg !8295
  call void @llvm.dbg.value(metadata i32 %20, metadata !8244, metadata !DIExpression()), !dbg !8245
  br label %38, !dbg !8296

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8297
  %23 = and i32 %22, 255, !dbg !8299
  %24 = icmp eq i32 %23, 0, !dbg !8300
  br i1 %24, label %27, label %25, !dbg !8301

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #28, !dbg !8302
  call void @llvm.dbg.value(metadata i32 %26, metadata !8244, metadata !DIExpression()), !dbg !8245
  br label %38, !dbg !8304

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8305
  %29 = and i32 %28, 65280, !dbg !8307
  %30 = icmp eq i32 %29, 0, !dbg !8308
  br i1 %30, label %32, label %31, !dbg !8309

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #28, !dbg !8310
  call void @llvm.dbg.value(metadata i32 0, metadata !8244, metadata !DIExpression()), !dbg !8245
  br label %38, !dbg !8312

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8313
  %34 = icmp ult i32 %33, 65536, !dbg !8315
  br i1 %34, label %36, label %35, !dbg !8316

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #28, !dbg !8317
  call void @llvm.dbg.value(metadata i32 0, metadata !8244, metadata !DIExpression()), !dbg !8245
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.98, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 755) #27, !dbg !8319
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.99, i32 0, i32 0)) #27, !dbg !8319
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 755) #27, !dbg !8319
  unreachable, !dbg !8319

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.98, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 760) #27, !dbg !8324
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.100, i32 0, i32 0)) #27, !dbg !8324
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 760) #27, !dbg !8324
  unreachable, !dbg !8324

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !8245
  call void @llvm.dbg.value(metadata i32 %39, metadata !8244, metadata !DIExpression()), !dbg !8245
  ret i32 %39, !dbg !8329
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !8330 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8332, metadata !DIExpression()), !dbg !8345
  call void @llvm.dbg.value(metadata i32 %1, metadata !8333, metadata !DIExpression()), !dbg !8345
  call void @llvm.dbg.value(metadata i8* %2, metadata !8334, metadata !DIExpression()), !dbg !8345
  call void @llvm.dbg.value(metadata i32 0, metadata !8335, metadata !DIExpression()), !dbg !8345
  call void @llvm.dbg.value(metadata i32 -22, metadata !8336, metadata !DIExpression()), !dbg !8345
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.91, i32 0, i32 0), i32 noundef 69) #27, !dbg !8346
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8351
  %5 = and i32 %4, 16, !dbg !8353
  %6 = icmp eq i32 %5, 0, !dbg !8354
  br i1 %6, label %8, label %7, !dbg !8355

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14.92, i32 0, i32 0), i32 noundef 69) #27, !dbg !8356
  br label %8, !dbg !8362

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8363
  %10 = and i32 %9, 8, !dbg !8365
  %11 = icmp eq i32 %10, 0, !dbg !8366
  br i1 %11, label %13, label %12, !dbg !8367

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #27, !dbg !8368
  br label %13, !dbg !8374

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8375
  %15 = and i32 %14, 2, !dbg !8376
  %16 = icmp eq i32 %15, 0, !dbg !8377
  br i1 %16, label %27, label %17, !dbg !8378

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #27, !dbg !8379
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !8384
  call void @llvm.dbg.value(metadata i32 %18, metadata !8337, metadata !DIExpression()), !dbg !8385
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8386
  %20 = and i32 %19, 128, !dbg !8388
  %21 = icmp eq i32 %20, 0, !dbg !8389
  br i1 %21, label %27, label %22, !dbg !8390

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !8336, metadata !DIExpression()), !dbg !8345
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #27, !dbg !8391
  %23 = icmp eq i32 %1, 0, !dbg !8397
  br i1 %23, label %27, label %24, !dbg !8399

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8400
  %26 = and i32 %25, -129, !dbg !8400
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8400
  br label %27, !dbg !8402

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !8345
  call void @llvm.dbg.value(metadata i32 %28, metadata !8336, metadata !DIExpression()), !dbg !8345
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8403
  %30 = and i32 %29, 1, !dbg !8405
  %31 = icmp eq i32 %30, 0, !dbg !8406
  br i1 %31, label %33, label %32, !dbg !8407

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #27, !dbg !8408
  br label %33, !dbg !8414

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8415
  %35 = and i32 %34, 32, !dbg !8417
  %36 = icmp eq i32 %35, 0, !dbg !8418
  br i1 %36, label %38, label %37, !dbg !8419

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #27, !dbg !8420
  br label %38, !dbg !8426

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8427
  %40 = and i32 %39, 16, !dbg !8428
  %41 = icmp eq i32 %40, 0, !dbg !8428
  br i1 %41, label %42, label %46, !dbg !8429

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8430
  %44 = and i32 %43, 2, !dbg !8431
  %45 = icmp eq i32 %44, 0, !dbg !8431
  br i1 %45, label %60, label %46, !dbg !8432

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8433
  %48 = and i32 %47, 2048, !dbg !8434
  %49 = icmp eq i32 %48, 0, !dbg !8434
  br i1 %49, label %60, label %50, !dbg !8435

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !8436
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #27, !dbg !8437
  call void @llvm.dbg.value(metadata i32 %52, metadata !8340, metadata !DIExpression()), !dbg !8438
  %53 = icmp eq i32 %52, 0, !dbg !8439
  br i1 %53, label %55, label %54, !dbg !8441

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !8442, metadata !DIExpression()) #26, !dbg !8445
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #26, !dbg !8448, !srcloc !8449
  call void @llvm.dbg.value(metadata i32 2, metadata !8335, metadata !DIExpression()), !dbg !8345
  br label %60, !dbg !8450

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8451
  %57 = and i32 %56, 16, !dbg !8451
  %58 = icmp eq i32 %57, 0, !dbg !8451
  br i1 %58, label %60, label %59, !dbg !8455

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 343) #27, !dbg !8456
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #27, !dbg !8456
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 343) #27, !dbg !8456
  unreachable, !dbg !8456

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !8345
  call void @llvm.dbg.value(metadata i32 %61, metadata !8335, metadata !DIExpression()), !dbg !8345
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8458
  %63 = and i32 %62, 32, !dbg !8460
  %64 = icmp eq i32 %63, 0, !dbg !8461
  br i1 %64, label %68, label %65, !dbg !8462

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8463
  %67 = and i32 %66, -8193, !dbg !8463
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8463
  br label %68, !dbg !8465

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8466
  %70 = or i32 %69, 255, !dbg !8466
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8466
  store i8 0, i8* %2, align 1, !dbg !8467
  ret i32 %61, !dbg !8468
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8469 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8473, metadata !DIExpression()), !dbg !8480
  call void @llvm.dbg.value(metadata i32 %0, metadata !8474, metadata !DIExpression()), !dbg !8480
  call void @llvm.dbg.value(metadata i8* %1, metadata !8475, metadata !DIExpression()), !dbg !8480
  call void @llvm.dbg.value(metadata i32 0, metadata !8476, metadata !DIExpression()), !dbg !8480
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #27, !dbg !8481
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8486
  %4 = and i32 %3, 4096, !dbg !8488
  %5 = icmp eq i32 %4, 0, !dbg !8488
  br i1 %5, label %7, label %6, !dbg !8489

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #27, !dbg !8490
  br label %7, !dbg !8496

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8497
  %9 = and i32 %8, 2048, !dbg !8499
  %10 = icmp eq i32 %9, 0, !dbg !8499
  br i1 %10, label %12, label %11, !dbg !8500

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #27, !dbg !8501
  br label %12, !dbg !8507

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8508
  %14 = and i32 %13, 512, !dbg !8509
  %15 = icmp eq i32 %14, 0, !dbg !8509
  br i1 %15, label %26, label %16, !dbg !8510

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #27, !dbg !8511
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !8516
  call void @llvm.dbg.value(metadata i32 %17, metadata !8477, metadata !DIExpression()), !dbg !8517
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8518
  %19 = and i32 %18, 32768, !dbg !8520
  %20 = icmp eq i32 %19, 0, !dbg !8521
  br i1 %20, label %26, label %21, !dbg !8522

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25.90, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !8523
  %22 = icmp eq i32 %0, 0, !dbg !8529
  br i1 %22, label %26, label %23, !dbg !8531

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8532
  %25 = and i32 %24, -32769, !dbg !8532
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8532
  br label %26, !dbg !8534

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8535
  %28 = and i32 %27, 1024, !dbg !8537
  %29 = icmp eq i32 %28, 0, !dbg !8537
  br i1 %29, label %31, label %30, !dbg !8538

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #27, !dbg !8539
  br label %31, !dbg !8545

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8546
  %33 = and i32 %32, 256, !dbg !8548
  %34 = icmp eq i32 %33, 0, !dbg !8549
  br i1 %34, label %35, label %39, !dbg !8550

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8551
  %37 = and i32 %36, 8192, !dbg !8553
  %38 = icmp eq i32 %37, 0, !dbg !8553
  br i1 %38, label %41, label %39, !dbg !8554

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #27, !dbg !8555
  br label %41, !dbg !8556

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8556
  %43 = or i32 %42, 65280, !dbg !8556
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8556
  store i8 0, i8* %1, align 1, !dbg !8557
  ret void, !dbg !8558
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8559 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8565, metadata !DIExpression()), !dbg !8567
  call void @llvm.dbg.value(metadata i32 0, metadata !8566, metadata !DIExpression()), !dbg !8567
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #27, !dbg !8568
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8573
  %2 = and i32 %1, 33554432, !dbg !8575
  %3 = icmp eq i32 %2, 0, !dbg !8576
  br i1 %3, label %5, label %4, !dbg !8577

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #27, !dbg !8578
  br label %5, !dbg !8584

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8585
  %7 = and i32 %6, 16777216, !dbg !8587
  %8 = icmp eq i32 %7, 0, !dbg !8588
  br i1 %8, label %10, label %9, !dbg !8589

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #27, !dbg !8590
  br label %10, !dbg !8596

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8597
  %12 = and i32 %11, 524288, !dbg !8599
  %13 = icmp eq i32 %12, 0, !dbg !8600
  br i1 %13, label %15, label %14, !dbg !8601

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #27, !dbg !8602
  br label %15, !dbg !8608

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8609
  %17 = and i32 %16, 262144, !dbg !8611
  %18 = icmp eq i32 %17, 0, !dbg !8612
  br i1 %18, label %20, label %19, !dbg !8613

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #27, !dbg !8614
  br label %20, !dbg !8620

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8621
  %22 = and i32 %21, 131072, !dbg !8623
  %23 = icmp eq i32 %22, 0, !dbg !8624
  br i1 %23, label %25, label %24, !dbg !8625

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #27, !dbg !8626
  br label %25, !dbg !8632

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8633
  %27 = and i32 %26, 65536, !dbg !8635
  %28 = icmp eq i32 %27, 0, !dbg !8636
  br i1 %28, label %30, label %29, !dbg !8637

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #27, !dbg !8638
  br label %30, !dbg !8644

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8645
  %32 = or i32 %31, -65536, !dbg !8645
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8645
  ret void, !dbg !8646
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8647 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8651, metadata !DIExpression()), !dbg !8653
  call void @llvm.dbg.value(metadata i8* %0, metadata !8652, metadata !DIExpression()), !dbg !8653
  store i8 0, i8* %0, align 1, !dbg !8654
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #27, !dbg !8655
  ret void, !dbg !8660
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8661 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8665, metadata !DIExpression()), !dbg !8667
  call void @llvm.dbg.value(metadata i32 %0, metadata !8666, metadata !DIExpression()), !dbg !8667
  %2 = icmp slt i32 %0, 16, !dbg !8668
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !8668
  %4 = add nsw i32 %0, -16, !dbg !8668
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #27, !dbg !8668
  ret void, !dbg !8673
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8674 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8678, metadata !DIExpression()), !dbg !8681
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8682
  %3 = load i32, i32* %2, align 4, !dbg !8682
  %4 = inttoptr i32 %3 to i16*, !dbg !8683
  call void @llvm.dbg.value(metadata i16* %4, metadata !8679, metadata !DIExpression()), !dbg !8681
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8684
  %6 = or i32 %5, 256, !dbg !8684
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8684
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8685, !srcloc !8688
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8689, !srcloc !8692
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8693
  %8 = load i16, i16* %7, align 2, !dbg !8694
  call void @llvm.dbg.value(metadata i16 %8, metadata !8680, metadata !DIExpression()), !dbg !8681
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8695
  %10 = and i32 %9, -257, !dbg !8695
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8695
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8696, !srcloc !8688
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8698, !srcloc !8692
  %11 = icmp eq i16 %8, -8446, !dbg !8700
  ret i1 %11, !dbg !8702
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #18 !dbg !8703 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8704
  %2 = or i32 %1, 16, !dbg !8704
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8704
  ret void, !dbg !8705
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #18 !dbg !8706 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8709, metadata !DIExpression()), !dbg !8710
  br label %1, !dbg !8711

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8709, metadata !DIExpression()), !dbg !8710
  tail call fastcc void @__NVIC_SetPriority.104(i32 noundef %2) #28, !dbg !8713
  %3 = add nuw nsw i32 %2, 1, !dbg !8716
  call void @llvm.dbg.value(metadata i32 %3, metadata !8709, metadata !DIExpression()), !dbg !8710
  %4 = icmp eq i32 %3, 85, !dbg !8717
  br i1 %4, label %5, label %1, !dbg !8711, !llvm.loop !8718

5:                                                ; preds = %1
  ret void, !dbg !8720
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.104(i32 noundef %0) unnamed_addr #18 !dbg !8721 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8723, metadata !DIExpression()), !dbg !8725
  call void @llvm.dbg.value(metadata i32 1, metadata !8724, metadata !DIExpression()), !dbg !8725
  %2 = and i32 %0, 15, !dbg !8726
  %3 = add nsw i32 %2, -4, !dbg !8726
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8726
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8726
  %6 = icmp slt i32 %0, 0, !dbg !8726
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8726
  store volatile i8 16, i8* %7, align 1, !dbg !8727
  ret void, !dbg !8729
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8730 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8838, metadata !DIExpression()), !dbg !8839
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8840
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8842
  br i1 %3, label %4, label %12, !dbg !8843

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !8844, !srcloc !8856
  call void @llvm.dbg.value(metadata i32 %5, metadata !8847, metadata !DIExpression()) #26, !dbg !8857
  %6 = icmp eq i32 %5, 0, !dbg !8858
  br i1 %6, label %12, label %7, !dbg !8859

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8860
  %9 = or i32 %8, 268435456, !dbg !8860
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8860
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8862
  %11 = and i32 %10, -32769, !dbg !8862
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8862
  br label %12, !dbg !8863

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !8864
  ret void, !dbg !8865
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8866 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !8867
  ret void, !dbg !8868
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !538 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !645, metadata !DIExpression()), !dbg !8869
  call void @llvm.dbg.value(metadata i8 0, metadata !646, metadata !DIExpression()), !dbg !8869
  call void @llvm.dbg.value(metadata i32 64, metadata !648, metadata !DIExpression()), !dbg !8869
  call void @llvm.dbg.value(metadata i32 undef, metadata !647, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !8869
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8870
  %3 = load i32, i32* %2, align 4, !dbg !8870
  call void @llvm.dbg.value(metadata i32 %3, metadata !647, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !8869
  %4 = add i32 %3, -64, !dbg !8872
  call void @llvm.dbg.value(metadata i32 %4, metadata !647, metadata !DIExpression()), !dbg !8869
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !8873
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !8874
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !8875
  call void @llvm.dbg.value(metadata i8 1, metadata !646, metadata !DIExpression()), !dbg !8869
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !8876
  ret void, !dbg !8877
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8878 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8879
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8880, !srcloc !8883
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8884, !srcloc !8887
  ret void, !dbg !8888
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8889 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #26, !dbg !8890, !srcloc !8893
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8894
  ret void, !dbg !8895
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8896 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8911, metadata !DIExpression()), !dbg !8915
  call void @llvm.dbg.value(metadata i8 %1, metadata !8912, metadata !DIExpression()), !dbg !8915
  call void @llvm.dbg.value(metadata i32 %2, metadata !8913, metadata !DIExpression()), !dbg !8915
  call void @llvm.dbg.value(metadata i32 %3, metadata !8914, metadata !DIExpression()), !dbg !8915
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #28, !dbg !8916
  %6 = icmp eq i32 %5, -22, !dbg !8918
  br i1 %6, label %7, label %9, !dbg !8919

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 283) #27, !dbg !8920
  %8 = zext i8 %1 to i32, !dbg !8920
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef %8) #27, !dbg !8920
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 283) #27, !dbg !8920
  unreachable, !dbg !8920

9:                                                ; preds = %4
  ret void, !dbg !8925
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8926 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8931, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata i8 %1, metadata !8932, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata i32 undef, metadata !8933, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata i32 undef, metadata !8934, metadata !DIExpression()), !dbg !8936
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8937
  call void @llvm.dbg.value(metadata i8 %3, metadata !8935, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8936
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #28, !dbg !8938
  call void @llvm.dbg.value(metadata i32 %4, metadata !8935, metadata !DIExpression()), !dbg !8936
  %5 = trunc i32 %4 to i8, !dbg !8939
  store i8 %5, i8* @static_regions_num, align 1, !dbg !8940
  ret i32 %4, !dbg !8941
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !8942 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8946, metadata !DIExpression()), !dbg !8952
  call void @llvm.dbg.value(metadata i8 %1, metadata !8947, metadata !DIExpression()), !dbg !8952
  call void @llvm.dbg.value(metadata i8 %2, metadata !8948, metadata !DIExpression()), !dbg !8952
  call void @llvm.dbg.value(metadata i1 %3, metadata !8949, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8952
  %5 = zext i8 %2 to i32, !dbg !8953
  call void @llvm.dbg.value(metadata i32 %5, metadata !8951, metadata !DIExpression()), !dbg !8952
  call void @llvm.dbg.value(metadata i32 0, metadata !8950, metadata !DIExpression()), !dbg !8952
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !8951, metadata !DIExpression()), !dbg !8952
  call void @llvm.dbg.value(metadata i32 0, metadata !8950, metadata !DIExpression()), !dbg !8952
  %7 = icmp eq i8 %1, 0, !dbg !8954
  br i1 %7, label %30, label %8, !dbg !8957

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8951, metadata !DIExpression()), !dbg !8952
  call void @llvm.dbg.value(metadata i32 %10, metadata !8950, metadata !DIExpression()), !dbg !8952
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !8958
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !8961
  %13 = load i32, i32* %12, align 4, !dbg !8961
  %14 = icmp eq i32 %13, 0, !dbg !8962
  br i1 %14, label %26, label %15, !dbg !8963

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !8964

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #28, !dbg !8966
  %18 = icmp eq i32 %17, 0, !dbg !8966
  br i1 %18, label %19, label %20, !dbg !8967

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.117, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #27, !dbg !8968
  br label %30, !dbg !8974

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !8975
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #28, !dbg !8976
  call void @llvm.dbg.value(metadata i32 %22, metadata !8951, metadata !DIExpression()), !dbg !8952
  %23 = icmp eq i32 %22, -22, !dbg !8977
  br i1 %23, label %30, label %24, !dbg !8979

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !8980
  call void @llvm.dbg.value(metadata i32 %25, metadata !8951, metadata !DIExpression()), !dbg !8952
  br label %26, !dbg !8981

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !8952
  call void @llvm.dbg.value(metadata i32 %27, metadata !8951, metadata !DIExpression()), !dbg !8952
  %28 = add nuw nsw i32 %10, 1, !dbg !8982
  call void @llvm.dbg.value(metadata i32 %28, metadata !8950, metadata !DIExpression()), !dbg !8952
  %29 = icmp eq i32 %28, %6, !dbg !8954
  br i1 %29, label %30, label %8, !dbg !8957, !llvm.loop !8983

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !8952
  ret i32 %31, !dbg !8985
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #19 !dbg !8986 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8990, metadata !DIExpression()), !dbg !8992
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !8993
  %3 = load i32, i32* %2, align 4, !dbg !8993
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !8994, !range !5427
  %5 = icmp ult i32 %4, 2, !dbg !8994
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !8995
  br i1 %7, label %8, label %15, !dbg !8995

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !8996
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !8997
  %11 = load i32, i32* %10, align 4, !dbg !8997
  %12 = and i32 %11, %9, !dbg !8998
  %13 = icmp eq i32 %12, 0, !dbg !8999
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8991, metadata !DIExpression()), !dbg !8992
  ret i32 %16, !dbg !9000
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9001 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !9005, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !9006, metadata !DIExpression()), !dbg !9008
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !9009
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #26, !dbg !9009
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !9007, metadata !DIExpression()), !dbg !9010
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !9011
  %6 = load i32, i32* %5, align 4, !dbg !9011
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !9012
  store i32 %6, i32* %7, align 4, !dbg !9013
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !9014
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !9015
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !9016
  %11 = load i32, i32* %10, align 4, !dbg !9016
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #28, !dbg !9017
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #28, !dbg !9018
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #26, !dbg !9019
  ret i32 %12, !dbg !9020
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #15 !dbg !9021 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !9028, metadata !DIExpression()), !dbg !9032
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !9029, metadata !DIExpression()), !dbg !9032
  call void @llvm.dbg.value(metadata i32 undef, metadata !9030, metadata !DIExpression()), !dbg !9032
  call void @llvm.dbg.value(metadata i32 %2, metadata !9031, metadata !DIExpression()), !dbg !9032
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !9033
  %5 = load i32, i32* %4, align 4, !dbg !9033
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #28, !dbg !9034
  %7 = or i32 %6, %5, !dbg !9035
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !9036
  store i32 %7, i32* %8, align 4, !dbg !9037
  ret void, !dbg !9038
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9039 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9043, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9044, metadata !DIExpression()), !dbg !9045
  %3 = zext i8 %0 to i32, !dbg !9046
  %4 = icmp ugt i8 %0, 7, !dbg !9048
  br i1 %4, label %5, label %6, !dbg !9049

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.118, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #27, !dbg !9050
  br label %7, !dbg !9056

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #28, !dbg !9057
  br label %7, !dbg !9058

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !9045
  ret i32 %8, !dbg !9059
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #18 !dbg !9060 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9064, metadata !DIExpression()), !dbg !9066
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9065, metadata !DIExpression()), !dbg !9066
  tail call fastcc void @set_region_number(i32 noundef %0) #28, !dbg !9067
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !9068
  %4 = load i32, i32* %3, align 4, !dbg !9068
  %5 = and i32 %4, -32, !dbg !9069
  %6 = or i32 %5, %0, !dbg !9070
  %7 = or i32 %6, 16, !dbg !9070
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !9071
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !9072
  %9 = load i32, i32* %8, align 4, !dbg !9072
  %10 = or i32 %9, 1, !dbg !9073
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9074
  ret void, !dbg !9075
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #18 !dbg !9076 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9079, metadata !DIExpression()), !dbg !9080
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9081
  ret void, !dbg !9082
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #6 !dbg !9083 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9087, metadata !DIExpression()), !dbg !9088
  %2 = icmp ult i32 %0, 33, !dbg !9089
  br i1 %2, label %11, label %3, !dbg !9091

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !9092
  br i1 %4, label %11, label %5, !dbg !9094

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !9095
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !9096, !range !5427
  %8 = mul nsw i32 %7, -2, !dbg !9097
  %9 = add nsw i32 %8, 62, !dbg !9097
  %10 = and i32 %9, 62, !dbg !9098
  br label %11, !dbg !9099

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !9088
  ret i32 %12, !dbg !9100
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !9101 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9105, metadata !DIExpression()), !dbg !9107
  call void @llvm.dbg.value(metadata i8 %1, metadata !9106, metadata !DIExpression()), !dbg !9107
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #28, !dbg !9108
  %4 = icmp eq i32 %3, -22, !dbg !9110
  br i1 %4, label %5, label %7, !dbg !9111

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 314) #27, !dbg !9112
  %6 = zext i8 %1 to i32, !dbg !9112
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.121, i32 0, i32 0), i32 noundef %6) #27, !dbg !9112
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 314) #27, !dbg !9112
  unreachable, !dbg !9112

7:                                                ; preds = %2
  ret void, !dbg !9117
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9118 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9122, metadata !DIExpression()), !dbg !9129
  call void @llvm.dbg.value(metadata i8 %1, metadata !9123, metadata !DIExpression()), !dbg !9129
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9130
  call void @llvm.dbg.value(metadata i8 %3, metadata !9124, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9129
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #28, !dbg !9131
  call void @llvm.dbg.value(metadata i32 %4, metadata !9124, metadata !DIExpression()), !dbg !9129
  %5 = icmp ne i32 %4, -22, !dbg !9132
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !9133
  call void @llvm.dbg.value(metadata i32 %4, metadata !9125, metadata !DIExpression()), !dbg !9134
  br i1 %7, label %8, label %12, !dbg !9133

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9125, metadata !DIExpression()), !dbg !9134
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #28, !dbg !9135
  %10 = add i32 %9, 1, !dbg !9138
  call void @llvm.dbg.value(metadata i32 %10, metadata !9125, metadata !DIExpression()), !dbg !9134
  %11 = icmp eq i32 %10, 8, !dbg !9139
  br i1 %11, label %12, label %8, !dbg !9140, !llvm.loop !9141

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !9143
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #18 !dbg !9144 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9147, metadata !DIExpression()), !dbg !9148
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9149
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9150
  ret void, !dbg !9151
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !9152 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !9157
  %2 = icmp ugt i32 %1, 8, !dbg !9159
  br i1 %2, label %3, label %4, !dbg !9160

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 341) #27, !dbg !9161
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.122, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #27, !dbg !9161
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 341) #27, !dbg !9161
  unreachable, !dbg !9161

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #28, !dbg !9166
  call void @llvm.dbg.value(metadata i32 0, metadata !9156, metadata !DIExpression()), !dbg !9167
  %5 = icmp eq i32 %1, 0, !dbg !9168
  br i1 %5, label %13, label %6, !dbg !9171

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !9171

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9156, metadata !DIExpression()), !dbg !9167
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !9172
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #28, !dbg !9174
  %11 = add nuw i32 %9, 1, !dbg !9175
  call void @llvm.dbg.value(metadata i32 %11, metadata !9156, metadata !DIExpression()), !dbg !9167
  %12 = icmp eq i32 %11, %1, !dbg !9168
  br i1 %12, label %13, label %8, !dbg !9171, !llvm.loop !9176

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !9178
  store i8 %14, i8* @static_regions_num, align 1, !dbg !9179
  tail call void @arm_core_mpu_enable() #28, !dbg !9180
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !9181
  %16 = and i32 %15, 65280, !dbg !9181
  %17 = icmp eq i32 %16, 2048, !dbg !9181
  br i1 %17, label %19, label %18, !dbg !9184

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.123, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 435) #27, !dbg !9185
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.124, i32 0, i32 0)) #27, !dbg !9185
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 435) #27, !dbg !9185
  unreachable, !dbg !9185

19:                                               ; preds = %13
  ret i32 0, !dbg !9187
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !9188 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9195, metadata !DIExpression()), !dbg !9198
  call void @llvm.dbg.value(metadata i8* %1, metadata !9196, metadata !DIExpression()), !dbg !9198
  call void @llvm.dbg.value(metadata i8* %0, metadata !9197, metadata !DIExpression()), !dbg !9198
  %3 = load i8, i8* %1, align 1, !dbg !9199
  %4 = icmp eq i8 %3, 0, !dbg !9200
  br i1 %4, label %13, label %5, !dbg !9201

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !9195, metadata !DIExpression()), !dbg !9198
  call void @llvm.dbg.value(metadata i8* %8, metadata !9196, metadata !DIExpression()), !dbg !9198
  store i8 %6, i8* %7, align 1, !dbg !9202
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9204
  call void @llvm.dbg.value(metadata i8* %9, metadata !9195, metadata !DIExpression()), !dbg !9198
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9205
  call void @llvm.dbg.value(metadata i8* %10, metadata !9196, metadata !DIExpression()), !dbg !9198
  %11 = load i8, i8* %10, align 1, !dbg !9199
  %12 = icmp eq i8 %11, 0, !dbg !9200
  br i1 %12, label %13, label %5, !dbg !9201, !llvm.loop !9206

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !9208
  ret i8* %0, !dbg !9209
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !9210 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9214, metadata !DIExpression()), !dbg !9218
  call void @llvm.dbg.value(metadata i8* %1, metadata !9215, metadata !DIExpression()), !dbg !9218
  call void @llvm.dbg.value(metadata i32 %2, metadata !9216, metadata !DIExpression()), !dbg !9218
  call void @llvm.dbg.value(metadata i8* %0, metadata !9217, metadata !DIExpression()), !dbg !9218
  %4 = icmp eq i32 %2, 0, !dbg !9219
  br i1 %4, label %22, label %5, !dbg !9220

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9214, metadata !DIExpression()), !dbg !9218
  call void @llvm.dbg.value(metadata i32 %7, metadata !9216, metadata !DIExpression()), !dbg !9218
  call void @llvm.dbg.value(metadata i8* %8, metadata !9215, metadata !DIExpression()), !dbg !9218
  %9 = load i8, i8* %8, align 1, !dbg !9221
  %10 = icmp eq i8 %9, 0, !dbg !9222
  br i1 %10, label %16, label %11, !dbg !9223

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !9224
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9226
  call void @llvm.dbg.value(metadata i8* %12, metadata !9215, metadata !DIExpression()), !dbg !9218
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9227
  call void @llvm.dbg.value(metadata i8* %13, metadata !9214, metadata !DIExpression()), !dbg !9218
  %14 = add i32 %7, -1, !dbg !9228
  call void @llvm.dbg.value(metadata i32 %14, metadata !9216, metadata !DIExpression()), !dbg !9218
  %15 = icmp eq i32 %14, 0, !dbg !9219
  br i1 %15, label %22, label %5, !dbg !9220, !llvm.loop !9229

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !9214, metadata !DIExpression()), !dbg !9218
  call void @llvm.dbg.value(metadata i32 %18, metadata !9216, metadata !DIExpression()), !dbg !9218
  store i8 0, i8* %17, align 1, !dbg !9231
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9233
  call void @llvm.dbg.value(metadata i8* %19, metadata !9214, metadata !DIExpression()), !dbg !9218
  %20 = add i32 %18, -1, !dbg !9234
  call void @llvm.dbg.value(metadata i32 %20, metadata !9216, metadata !DIExpression()), !dbg !9218
  %21 = icmp eq i32 %20, 0, !dbg !9235
  br i1 %21, label %22, label %16, !dbg !9236, !llvm.loop !9237

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !9239
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !9240 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9244, metadata !DIExpression()), !dbg !9247
  call void @llvm.dbg.value(metadata i32 %1, metadata !9245, metadata !DIExpression()), !dbg !9247
  call void @llvm.dbg.value(metadata i32 %1, metadata !9246, metadata !DIExpression()), !dbg !9247
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9248

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !9244, metadata !DIExpression()), !dbg !9247
  %6 = load i8, i8* %5, align 1, !dbg !9249
  %7 = icmp eq i8 %6, %3, !dbg !9250
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !9251
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9252
  call void @llvm.dbg.value(metadata i8* %10, metadata !9244, metadata !DIExpression()), !dbg !9247
  br i1 %9, label %11, label %4, !dbg !9251, !llvm.loop !9254

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !9256
  ret i8* %12, !dbg !9257
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !9258 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9260, metadata !DIExpression()), !dbg !9263
  call void @llvm.dbg.value(metadata i32 %1, metadata !9261, metadata !DIExpression()), !dbg !9263
  call void @llvm.dbg.value(metadata i8* null, metadata !9262, metadata !DIExpression()), !dbg !9263
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9264

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !9263
  call void @llvm.dbg.value(metadata i8* %6, metadata !9262, metadata !DIExpression()), !dbg !9263
  call void @llvm.dbg.value(metadata i8* %5, metadata !9260, metadata !DIExpression()), !dbg !9263
  %7 = load i8, i8* %5, align 1, !dbg !9265
  %8 = icmp eq i8 %7, %3, !dbg !9268
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !9269
  call void @llvm.dbg.value(metadata i8* %9, metadata !9262, metadata !DIExpression()), !dbg !9263
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9270
  call void @llvm.dbg.value(metadata i8* %10, metadata !9260, metadata !DIExpression()), !dbg !9263
  %11 = icmp eq i8 %7, 0, !dbg !9271
  br i1 %11, label %12, label %4, !dbg !9271, !llvm.loop !9272

12:                                               ; preds = %4
  ret i8* %9, !dbg !9274
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !9275 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9279, metadata !DIExpression()), !dbg !9281
  call void @llvm.dbg.value(metadata i32 0, metadata !9280, metadata !DIExpression()), !dbg !9281
  %2 = load i8, i8* %0, align 1, !dbg !9282
  %3 = icmp eq i8 %2, 0, !dbg !9283
  br i1 %3, label %11, label %4, !dbg !9284

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !9280, metadata !DIExpression()), !dbg !9281
  call void @llvm.dbg.value(metadata i8* %6, metadata !9279, metadata !DIExpression()), !dbg !9281
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9285
  call void @llvm.dbg.value(metadata i8* %7, metadata !9279, metadata !DIExpression()), !dbg !9281
  %8 = add i32 %5, 1, !dbg !9287
  call void @llvm.dbg.value(metadata i32 %8, metadata !9280, metadata !DIExpression()), !dbg !9281
  %9 = load i8, i8* %7, align 1, !dbg !9282
  %10 = icmp eq i8 %9, 0, !dbg !9283
  br i1 %10, label %11, label %4, !dbg !9284, !llvm.loop !9288

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !9281
  ret i32 %12, !dbg !9290
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !9291 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9295, metadata !DIExpression()), !dbg !9298
  call void @llvm.dbg.value(metadata i32 %1, metadata !9296, metadata !DIExpression()), !dbg !9298
  call void @llvm.dbg.value(metadata i32 0, metadata !9297, metadata !DIExpression()), !dbg !9298
  %3 = load i8, i8* %0, align 1, !dbg !9299
  %4 = icmp ne i8 %3, 0, !dbg !9300
  %5 = icmp ne i32 %1, 0, !dbg !9301
  %6 = and i1 %4, %5, !dbg !9301
  br i1 %6, label %7, label %16, !dbg !9302

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9297, metadata !DIExpression()), !dbg !9298
  call void @llvm.dbg.value(metadata i8* %9, metadata !9295, metadata !DIExpression()), !dbg !9298
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9303
  call void @llvm.dbg.value(metadata i8* %10, metadata !9295, metadata !DIExpression()), !dbg !9298
  %11 = add nuw i32 %8, 1, !dbg !9305
  call void @llvm.dbg.value(metadata i32 %11, metadata !9297, metadata !DIExpression()), !dbg !9298
  %12 = load i8, i8* %10, align 1, !dbg !9299
  %13 = icmp ne i8 %12, 0, !dbg !9300
  %14 = icmp ult i32 %11, %1, !dbg !9301
  %15 = select i1 %13, i1 %14, i1 false, !dbg !9301
  br i1 %15, label %7, label %16, !dbg !9302, !llvm.loop !9306

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !9298
  ret i32 %17, !dbg !9308
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !9309 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9313, metadata !DIExpression()), !dbg !9315
  call void @llvm.dbg.value(metadata i8* %1, metadata !9314, metadata !DIExpression()), !dbg !9315
  %3 = load i8, i8* %0, align 1, !dbg !9316
  %4 = load i8, i8* %1, align 1, !dbg !9317
  %5 = icmp ne i8 %3, %4, !dbg !9318
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !9319
  br i1 %7, label %18, label %8, !dbg !9319

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !9314, metadata !DIExpression()), !dbg !9315
  call void @llvm.dbg.value(metadata i8* %10, metadata !9313, metadata !DIExpression()), !dbg !9315
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9320
  call void @llvm.dbg.value(metadata i8* %11, metadata !9313, metadata !DIExpression()), !dbg !9315
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9322
  call void @llvm.dbg.value(metadata i8* %12, metadata !9314, metadata !DIExpression()), !dbg !9315
  %13 = load i8, i8* %11, align 1, !dbg !9316
  %14 = load i8, i8* %12, align 1, !dbg !9317
  %15 = icmp ne i8 %13, %14, !dbg !9318
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !9319
  br i1 %17, label %18, label %8, !dbg !9319, !llvm.loop !9323

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !9316
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !9317
  %21 = zext i8 %19 to i32, !dbg !9326
  %22 = zext i8 %20 to i32, !dbg !9327
  %23 = sub nsw i32 %21, %22, !dbg !9328
  ret i32 %23, !dbg !9329
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !9330 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9334, metadata !DIExpression()), !dbg !9337
  call void @llvm.dbg.value(metadata i8* %1, metadata !9335, metadata !DIExpression()), !dbg !9337
  call void @llvm.dbg.value(metadata i32 %2, metadata !9336, metadata !DIExpression()), !dbg !9337
  %4 = icmp eq i32 %2, 0, !dbg !9338
  br i1 %4, label %23, label %5, !dbg !9338

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !9336, metadata !DIExpression()), !dbg !9337
  call void @llvm.dbg.value(metadata i8* %7, metadata !9335, metadata !DIExpression()), !dbg !9337
  call void @llvm.dbg.value(metadata i8* %8, metadata !9334, metadata !DIExpression()), !dbg !9337
  %9 = load i8, i8* %8, align 1, !dbg !9339
  %10 = load i8, i8* %7, align 1, !dbg !9340
  %11 = icmp ne i8 %9, %10, !dbg !9341
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !9342
  br i1 %13, label %19, label %14, !dbg !9342

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9343
  call void @llvm.dbg.value(metadata i8* %15, metadata !9334, metadata !DIExpression()), !dbg !9337
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9345
  call void @llvm.dbg.value(metadata i8* %16, metadata !9335, metadata !DIExpression()), !dbg !9337
  %17 = add i32 %6, -1, !dbg !9346
  call void @llvm.dbg.value(metadata i32 %17, metadata !9336, metadata !DIExpression()), !dbg !9337
  %18 = icmp eq i32 %17, 0, !dbg !9338
  br i1 %18, label %23, label %5, !dbg !9338, !llvm.loop !9347

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !9350
  %21 = zext i8 %10 to i32, !dbg !9351
  %22 = sub nsw i32 %20, %21, !dbg !9352
  br label %23, !dbg !9353

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !9353
  ret i32 %24, !dbg !9354
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #17 !dbg !9355 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9359, metadata !DIExpression()), !dbg !9364
  call void @llvm.dbg.value(metadata i8* %1, metadata !9360, metadata !DIExpression()), !dbg !9364
  call void @llvm.dbg.value(metadata i8** %2, metadata !9361, metadata !DIExpression()), !dbg !9364
  %4 = icmp eq i8* %0, null, !dbg !9365
  br i1 %4, label %5, label %7, !dbg !9365

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !9366
  br label %7, !dbg !9365

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !9365
  call void @llvm.dbg.value(metadata i8* %8, metadata !9362, metadata !DIExpression()), !dbg !9364
  %9 = load i8, i8* %8, align 1, !dbg !9367
  %10 = icmp eq i8 %9, 0, !dbg !9367
  br i1 %10, label %33, label %11, !dbg !9368

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9362, metadata !DIExpression()), !dbg !9364
  %14 = zext i8 %12 to i32, !dbg !9367
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #28, !dbg !9369
  %16 = icmp eq i8* %15, null, !dbg !9368
  br i1 %16, label %21, label %17, !dbg !9370

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9371
  call void @llvm.dbg.value(metadata i8* %18, metadata !9362, metadata !DIExpression()), !dbg !9364
  %19 = load i8, i8* %18, align 1, !dbg !9367
  %20 = icmp eq i8 %19, 0, !dbg !9367
  br i1 %20, label %33, label %11, !dbg !9368, !llvm.loop !9373

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !9363, metadata !DIExpression()), !dbg !9364
  %24 = zext i8 %22 to i32, !dbg !9375
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #28, !dbg !9376
  %26 = icmp eq i8* %25, null, !dbg !9377
  br i1 %26, label %27, label %31, !dbg !9378

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9379
  call void @llvm.dbg.value(metadata i8* %28, metadata !9363, metadata !DIExpression()), !dbg !9364
  %29 = load i8, i8* %28, align 1, !dbg !9375
  %30 = icmp eq i8 %29, 0, !dbg !9375
  br i1 %30, label %33, label %21, !dbg !9381, !llvm.loop !9382

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !9384
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9387
  br label %33, !dbg !9388

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !9364
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !9364
  store i8* %34, i8** %2, align 4, !dbg !9364
  ret i8* %35, !dbg !9389
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !9390 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9392, metadata !DIExpression()), !dbg !9394
  call void @llvm.dbg.value(metadata i8* %1, metadata !9393, metadata !DIExpression()), !dbg !9394
  %3 = tail call i32 @strlen(i8* noundef %0) #28, !dbg !9395
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !9396
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #28, !dbg !9397
  ret i8* %0, !dbg !9398
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !9399 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9401, metadata !DIExpression()), !dbg !9406
  call void @llvm.dbg.value(metadata i8* %1, metadata !9402, metadata !DIExpression()), !dbg !9406
  call void @llvm.dbg.value(metadata i32 %2, metadata !9403, metadata !DIExpression()), !dbg !9406
  call void @llvm.dbg.value(metadata i8* %0, metadata !9404, metadata !DIExpression()), !dbg !9406
  %4 = tail call i32 @strlen(i8* noundef %0) #28, !dbg !9407
  call void @llvm.dbg.value(metadata i32 %4, metadata !9405, metadata !DIExpression()), !dbg !9406
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !9408
  call void @llvm.dbg.value(metadata i8* %5, metadata !9401, metadata !DIExpression()), !dbg !9406
  call void @llvm.dbg.value(metadata i8* %1, metadata !9402, metadata !DIExpression()), !dbg !9406
  call void @llvm.dbg.value(metadata i32 %2, metadata !9403, metadata !DIExpression()), !dbg !9406
  call void @llvm.dbg.value(metadata i32 %2, metadata !9403, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9406
  %6 = icmp eq i32 %2, 0, !dbg !9409
  br i1 %6, label %18, label %7, !dbg !9410

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !9411
  call void @llvm.dbg.value(metadata i8* %9, metadata !9401, metadata !DIExpression()), !dbg !9406
  call void @llvm.dbg.value(metadata i8* %10, metadata !9402, metadata !DIExpression()), !dbg !9406
  %12 = load i8, i8* %10, align 1, !dbg !9412
  %13 = icmp eq i8 %12, 0, !dbg !9413
  br i1 %13, label %18, label %14, !dbg !9414

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9415
  call void @llvm.dbg.value(metadata i8* %15, metadata !9402, metadata !DIExpression()), !dbg !9406
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9417
  call void @llvm.dbg.value(metadata i8* %16, metadata !9401, metadata !DIExpression()), !dbg !9406
  store i8 %12, i8* %9, align 1, !dbg !9418
  call void @llvm.dbg.value(metadata i32 %11, metadata !9403, metadata !DIExpression()), !dbg !9406
  call void @llvm.dbg.value(metadata i32 %11, metadata !9403, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9406
  %17 = icmp eq i32 %11, 0, !dbg !9409
  br i1 %17, label %18, label %7, !dbg !9410, !llvm.loop !9419

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !9406
  store i8 0, i8* %19, align 1, !dbg !9421
  ret i8* %0, !dbg !9422
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !9423 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9427, metadata !DIExpression()), !dbg !9432
  call void @llvm.dbg.value(metadata i8* %1, metadata !9428, metadata !DIExpression()), !dbg !9432
  call void @llvm.dbg.value(metadata i32 %2, metadata !9429, metadata !DIExpression()), !dbg !9432
  call void @llvm.dbg.value(metadata i8* %0, metadata !9430, metadata !DIExpression()), !dbg !9432
  call void @llvm.dbg.value(metadata i8* %1, metadata !9431, metadata !DIExpression()), !dbg !9432
  %4 = icmp eq i32 %2, 0, !dbg !9433
  br i1 %4, label %31, label %5, !dbg !9435

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9431, metadata !DIExpression()), !dbg !9432
  call void @llvm.dbg.value(metadata i8* %0, metadata !9430, metadata !DIExpression()), !dbg !9432
  call void @llvm.dbg.value(metadata i32 %2, metadata !9429, metadata !DIExpression()), !dbg !9432
  %6 = add i32 %2, -1, !dbg !9436
  call void @llvm.dbg.value(metadata i32 %6, metadata !9429, metadata !DIExpression()), !dbg !9432
  %7 = icmp eq i32 %6, 0, !dbg !9437
  br i1 %7, label %23, label %8, !dbg !9438

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !9439
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !9439
  br label %11, !dbg !9439

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9431, metadata !DIExpression()), !dbg !9432
  call void @llvm.dbg.value(metadata i8* %14, metadata !9430, metadata !DIExpression()), !dbg !9432
  %15 = load i8, i8* %14, align 1, !dbg !9440
  %16 = load i8, i8* %13, align 1, !dbg !9441
  %17 = icmp eq i8 %15, %16, !dbg !9442
  br i1 %17, label %18, label %23, !dbg !9439

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !9443
  call void @llvm.dbg.value(metadata i8* %19, metadata !9430, metadata !DIExpression()), !dbg !9432
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9445
  call void @llvm.dbg.value(metadata i8* %20, metadata !9431, metadata !DIExpression()), !dbg !9432
  call void @llvm.dbg.value(metadata i32 %12, metadata !9429, metadata !DIExpression()), !dbg !9432
  %21 = add i32 %12, -1, !dbg !9436
  call void @llvm.dbg.value(metadata i32 %21, metadata !9429, metadata !DIExpression()), !dbg !9432
  %22 = icmp eq i32 %21, 0, !dbg !9437
  br i1 %22, label %23, label %11, !dbg !9438, !llvm.loop !9446

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !9432
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !9432
  %26 = load i8, i8* %24, align 1, !dbg !9448
  %27 = zext i8 %26 to i32, !dbg !9448
  %28 = load i8, i8* %25, align 1, !dbg !9449
  %29 = zext i8 %28 to i32, !dbg !9449
  %30 = sub nsw i32 %27, %29, !dbg !9450
  br label %31, !dbg !9451

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !9432
  ret i32 %32, !dbg !9452
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #17 !dbg !9453 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9457, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata i8* %1, metadata !9458, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata i32 %2, metadata !9459, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata i8* %0, metadata !9460, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata i8* %1, metadata !9461, metadata !DIExpression()), !dbg !9462
  %4 = ptrtoint i8* %0 to i32, !dbg !9463
  %5 = ptrtoint i8* %1 to i32, !dbg !9463
  %6 = sub i32 %4, %5, !dbg !9463
  %7 = icmp ult i32 %6, %2, !dbg !9465
  br i1 %7, label %10, label %8, !dbg !9466

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9461, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata i8* %0, metadata !9460, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata i32 %2, metadata !9459, metadata !DIExpression()), !dbg !9462
  %9 = icmp eq i32 %2, 0, !dbg !9467
  br i1 %9, label %26, label %17, !dbg !9469

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9459, metadata !DIExpression()), !dbg !9462
  %12 = add i32 %11, -1, !dbg !9470
  call void @llvm.dbg.value(metadata i32 %12, metadata !9459, metadata !DIExpression()), !dbg !9462
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !9473
  %14 = load i8, i8* %13, align 1, !dbg !9473
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !9474
  store i8 %14, i8* %15, align 1, !dbg !9475
  %16 = icmp eq i32 %12, 0, !dbg !9476
  br i1 %16, label %26, label %10, !dbg !9477, !llvm.loop !9478

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !9461, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata i8* %19, metadata !9460, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata i32 %20, metadata !9459, metadata !DIExpression()), !dbg !9462
  %21 = load i8, i8* %18, align 1, !dbg !9480
  store i8 %21, i8* %19, align 1, !dbg !9482
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !9483
  call void @llvm.dbg.value(metadata i8* %22, metadata !9460, metadata !DIExpression()), !dbg !9462
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9484
  call void @llvm.dbg.value(metadata i8* %23, metadata !9461, metadata !DIExpression()), !dbg !9462
  %24 = add i32 %20, -1, !dbg !9485
  call void @llvm.dbg.value(metadata i32 %24, metadata !9459, metadata !DIExpression()), !dbg !9462
  %25 = icmp eq i32 %24, 0, !dbg !9467
  br i1 %25, label %26, label %17, !dbg !9469, !llvm.loop !9486

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !9488
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !9489 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9495, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.value(metadata i8* %1, metadata !9496, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.value(metadata i32 %2, metadata !9497, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.value(metadata i8* %0, metadata !9498, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.value(metadata i8* %1, metadata !9499, metadata !DIExpression()), !dbg !9500
  %4 = icmp eq i32 %2, 0, !dbg !9501
  br i1 %4, label %14, label %5, !dbg !9502

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9499, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.value(metadata i8* %7, metadata !9498, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.value(metadata i32 %8, metadata !9497, metadata !DIExpression()), !dbg !9500
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9503
  call void @llvm.dbg.value(metadata i8* %9, metadata !9499, metadata !DIExpression()), !dbg !9500
  %10 = load i8, i8* %6, align 1, !dbg !9505
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9506
  call void @llvm.dbg.value(metadata i8* %11, metadata !9498, metadata !DIExpression()), !dbg !9500
  store i8 %10, i8* %7, align 1, !dbg !9507
  %12 = add i32 %8, -1, !dbg !9508
  call void @llvm.dbg.value(metadata i32 %12, metadata !9497, metadata !DIExpression()), !dbg !9500
  %13 = icmp eq i32 %12, 0, !dbg !9501
  br i1 %13, label %14, label %5, !dbg !9502, !llvm.loop !9509

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !9511
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !9512 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9516, metadata !DIExpression()), !dbg !9521
  call void @llvm.dbg.value(metadata i32 %1, metadata !9517, metadata !DIExpression()), !dbg !9521
  call void @llvm.dbg.value(metadata i32 %2, metadata !9518, metadata !DIExpression()), !dbg !9521
  call void @llvm.dbg.value(metadata i8* %0, metadata !9519, metadata !DIExpression()), !dbg !9521
  %4 = trunc i32 %1 to i8, !dbg !9522
  call void @llvm.dbg.value(metadata i8 %4, metadata !9520, metadata !DIExpression()), !dbg !9521
  call void @llvm.dbg.value(metadata i32 %2, metadata !9518, metadata !DIExpression()), !dbg !9521
  call void @llvm.dbg.value(metadata i8* %0, metadata !9519, metadata !DIExpression()), !dbg !9521
  %5 = icmp eq i32 %2, 0, !dbg !9523
  br i1 %5, label %12, label %6, !dbg !9524

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9518, metadata !DIExpression()), !dbg !9521
  call void @llvm.dbg.value(metadata i8* %8, metadata !9519, metadata !DIExpression()), !dbg !9521
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9525
  call void @llvm.dbg.value(metadata i8* %9, metadata !9519, metadata !DIExpression()), !dbg !9521
  store i8 %4, i8* %8, align 1, !dbg !9527
  %10 = add i32 %7, -1, !dbg !9528
  call void @llvm.dbg.value(metadata i32 %10, metadata !9518, metadata !DIExpression()), !dbg !9521
  %11 = icmp eq i32 %10, 0, !dbg !9523
  br i1 %11, label %12, label %6, !dbg !9524, !llvm.loop !9529

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !9531
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !9532 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9536, metadata !DIExpression()), !dbg !9542
  call void @llvm.dbg.value(metadata i32 %1, metadata !9537, metadata !DIExpression()), !dbg !9542
  call void @llvm.dbg.value(metadata i32 %2, metadata !9538, metadata !DIExpression()), !dbg !9542
  %4 = icmp eq i32 %2, 0, !dbg !9543
  br i1 %4, label %17, label %5, !dbg !9544

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !9545

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !9546
  call void @llvm.dbg.value(metadata i8* %9, metadata !9539, metadata !DIExpression()), !dbg !9546
  call void @llvm.dbg.value(metadata i32 %8, metadata !9538, metadata !DIExpression()), !dbg !9542
  call void @llvm.dbg.value(metadata i8* %9, metadata !9539, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9546
  %10 = load i8, i8* %9, align 1, !dbg !9547
  %11 = icmp eq i8 %10, %6, !dbg !9550
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !9551
  call void @llvm.dbg.value(metadata i8* %12, metadata !9539, metadata !DIExpression()), !dbg !9546
  call void @llvm.dbg.value(metadata i32 %13, metadata !9538, metadata !DIExpression()), !dbg !9542
  br i1 %15, label %16, label %7, !dbg !9551, !llvm.loop !9552

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !9554

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !9542
  ret i8* %19, !dbg !9555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #12 !dbg !9556 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !9558, metadata !DIExpression()), !dbg !9559
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !9560
  ret void, !dbg !9561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #5 !dbg !9562 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9564, metadata !DIExpression()), !dbg !9565
  ret i32 -1, !dbg !9566
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9567 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9571, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata i32* %1, metadata !9572, metadata !DIExpression()), !dbg !9573
  %3 = ptrtoint i32* %1 to i32, !dbg !9574
  %4 = and i32 %3, -2, !dbg !9574
  %5 = icmp eq i32 %4, 2, !dbg !9574
  br i1 %5, label %6, label %9, !dbg !9574

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9575
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !9575
  br label %9, !dbg !9576

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !9576
  ret i32 %10, !dbg !9577
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9578 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9580, metadata !DIExpression()), !dbg !9582
  call void @llvm.dbg.value(metadata i32* %1, metadata !9581, metadata !DIExpression()), !dbg !9582
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #28, !dbg !9583
  ret i32 %3, !dbg !9584
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !9585 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9588, metadata !DIExpression()), !dbg !9590
  call void @llvm.dbg.value(metadata i32* %1, metadata !9589, metadata !DIExpression()), !dbg !9590
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9591, !srcloc !9593
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #28, !dbg !9594
  ret i32 %3, !dbg !9595
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !9596 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9601, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i32* %1, metadata !9602, metadata !DIExpression()), !dbg !9605
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !9606
  call void @llvm.dbg.value(metadata i32 %3, metadata !9603, metadata !DIExpression()), !dbg !9605
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #28, !dbg !9607
  call void @llvm.dbg.value(metadata i32 %4, metadata !9604, metadata !DIExpression()), !dbg !9605
  %5 = icmp ne i32 %3, %4, !dbg !9608
  %6 = sext i1 %5 to i32, !dbg !9609
  ret i32 %6, !dbg !9610
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !9611 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9615, metadata !DIExpression()), !dbg !9619
  call void @llvm.dbg.value(metadata i32 %1, metadata !9616, metadata !DIExpression()), !dbg !9619
  call void @llvm.dbg.value(metadata i32 %2, metadata !9617, metadata !DIExpression()), !dbg !9619
  call void @llvm.dbg.value(metadata i32* %3, metadata !9618, metadata !DIExpression()), !dbg !9619
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #28, !dbg !9620
  ret i32 %5, !dbg !9621
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !9622 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9624, metadata !DIExpression()), !dbg !9628
  call void @llvm.dbg.value(metadata i32 %1, metadata !9625, metadata !DIExpression()), !dbg !9628
  call void @llvm.dbg.value(metadata i32 %2, metadata !9626, metadata !DIExpression()), !dbg !9628
  call void @llvm.dbg.value(metadata i32* %3, metadata !9627, metadata !DIExpression()), !dbg !9628
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9629, !srcloc !9631
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #28, !dbg !9632
  ret i32 %5, !dbg !9633
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !9634 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9636, metadata !DIExpression()), !dbg !9644
  call void @llvm.dbg.value(metadata i32 %1, metadata !9637, metadata !DIExpression()), !dbg !9644
  call void @llvm.dbg.value(metadata i32 %2, metadata !9638, metadata !DIExpression()), !dbg !9644
  call void @llvm.dbg.value(metadata i32* %3, metadata !9639, metadata !DIExpression()), !dbg !9644
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !9645
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !9647
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !9647
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !9647
  br i1 %11, label %33, label %12, !dbg !9647

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !9644
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !9644
  call void @llvm.dbg.value(metadata i8* %14, metadata !9642, metadata !DIExpression()), !dbg !9644
  call void @llvm.dbg.value(metadata i32 %13, metadata !9640, metadata !DIExpression()), !dbg !9644
  call void @llvm.dbg.value(metadata i32 %1, metadata !9641, metadata !DIExpression()), !dbg !9644
  br label %15, !dbg !9648

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !9650
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !9644
  call void @llvm.dbg.value(metadata i8* %17, metadata !9642, metadata !DIExpression()), !dbg !9644
  call void @llvm.dbg.value(metadata i32 %16, metadata !9641, metadata !DIExpression()), !dbg !9644
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9651
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9654
  call void @llvm.dbg.value(metadata i8* %19, metadata !9642, metadata !DIExpression()), !dbg !9644
  %20 = load i8, i8* %17, align 1, !dbg !9655
  %21 = zext i8 %20 to i32, !dbg !9656
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !9651
  %23 = icmp eq i32 %22, -1, !dbg !9657
  br i1 %23, label %30, label %24, !dbg !9658

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !9659
  call void @llvm.dbg.value(metadata i32 %25, metadata !9641, metadata !DIExpression()), !dbg !9644
  %26 = icmp eq i32 %25, 0, !dbg !9660
  br i1 %26, label %27, label %15, !dbg !9661, !llvm.loop !9662

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !9664
  call void @llvm.dbg.value(metadata i32 %28, metadata !9640, metadata !DIExpression()), !dbg !9644
  %29 = icmp eq i32 %28, 0, !dbg !9665
  br i1 %29, label %30, label %12, !dbg !9666, !llvm.loop !9667

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !9644
  call void @llvm.dbg.value(metadata i32 %31, metadata !9640, metadata !DIExpression()), !dbg !9644
  call void @llvm.dbg.label(metadata !9643), !dbg !9670
  %32 = sub i32 %2, %31, !dbg !9671
  br label %33, !dbg !9672

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !9644
  ret i32 %34, !dbg !9673
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9674 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9678, metadata !DIExpression()), !dbg !9679
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #28, !dbg !9680
  %3 = icmp eq i32 %2, -1, !dbg !9682
  br i1 %3, label %8, label %4, !dbg !9683

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #28, !dbg !9684
  %6 = icmp eq i32 %5, -1, !dbg !9685
  %7 = sext i1 %6 to i32, !dbg !9684
  br label %8, !dbg !9686

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9679
  ret i32 %9, !dbg !9687
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9688 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9690, metadata !DIExpression()), !dbg !9691
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #28, !dbg !9692
  ret void, !dbg !9693
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9694 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9698, metadata !DIExpression()), !dbg !9704
  call void @llvm.dbg.value(metadata i32 %1, metadata !9699, metadata !DIExpression()), !dbg !9704
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9700, metadata !DIExpression()), !dbg !9704
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9705
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9705
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9705
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9701, metadata !DIExpression()), !dbg !9704
  call void @llvm.dbg.value(metadata i32 %0, metadata !9703, metadata !DIExpression()), !dbg !9704
  %7 = icmp slt i32 %0, %1, !dbg !9706
  br i1 %7, label %8, label %22, !dbg !9709

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9703, metadata !DIExpression()), !dbg !9704
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #28, !dbg !9710
  %11 = icmp eq i32 %10, 0, !dbg !9710
  br i1 %11, label %19, label %12, !dbg !9713

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #28, !dbg !9714
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9716
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9716
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9718
  br i1 %15, label %19, label %16, !dbg !9719

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9720
  %18 = load i8*, i8** %17, align 4, !dbg !9720
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !9721
  br label %19, !dbg !9722

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9723
  call void @llvm.dbg.value(metadata i32 %20, metadata !9703, metadata !DIExpression()), !dbg !9704
  %21 = icmp eq i32 %20, %1, !dbg !9706
  br i1 %21, label %22, label %8, !dbg !9709, !llvm.loop !9724

22:                                               ; preds = %19, %3
  ret void, !dbg !9726
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #7 !dbg !9727 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9729, metadata !DIExpression()), !dbg !9730
  %2 = shl nuw i32 1, %0, !dbg !9731
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #28, !dbg !9734
  ret i32 %3, !dbg !9735
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #18 !dbg !9736 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9740, metadata !DIExpression()), !dbg !9741
  %2 = shl nuw i32 1, %0, !dbg !9742
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #28, !dbg !9745
  ret void, !dbg !9746
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9747 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9750, metadata !DIExpression()), !dbg !9751
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9752
  ret void, !dbg !9753
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #7 !dbg !9754 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9756, metadata !DIExpression()), !dbg !9757
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9758
  %3 = and i32 %2, %0, !dbg !9758
  %4 = icmp eq i32 %3, %0, !dbg !9759
  %5 = zext i1 %4 to i32, !dbg !9759
  ret i32 %5, !dbg !9760
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9761 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9763, metadata !DIExpression()), !dbg !9764
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #28, !dbg !9765
  ret void, !dbg !9766
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9767 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9769, metadata !DIExpression()), !dbg !9770
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #28, !dbg !9771
  ret void, !dbg !9772
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9773 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9775, metadata !DIExpression()), !dbg !9776
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #28, !dbg !9777
  ret void, !dbg !9778
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9779 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9781, metadata !DIExpression()), !dbg !9782
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #28, !dbg !9783
  ret void, !dbg !9784
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9785 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9787, metadata !DIExpression()), !dbg !9788
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #28, !dbg !9789
  ret void, !dbg !9790
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9791 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9793, metadata !DIExpression()), !dbg !9794
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #28, !dbg !9795
  ret void, !dbg !9796
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9797 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9799, metadata !DIExpression()), !dbg !9800
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #28, !dbg !9801
  ret void, !dbg !9802
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9803 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9805, metadata !DIExpression()), !dbg !9806
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #28, !dbg !9807
  ret void, !dbg !9808
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9809 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9811, metadata !DIExpression()), !dbg !9812
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #28, !dbg !9813
  ret void, !dbg !9814
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9815 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9817, metadata !DIExpression()), !dbg !9818
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #28, !dbg !9819
  ret void, !dbg !9820
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9821 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9823, metadata !DIExpression()), !dbg !9824
  tail call fastcc void @__stm32_exti_connect_irqs() #28, !dbg !9825
  ret i32 0, !dbg !9826
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !878 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !882, metadata !DIExpression()), !dbg !9827
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !9828
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !9830
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !9832
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !9834
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !9836
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !9838
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !9840
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #27, !dbg !9842
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #27, !dbg !9844
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #27, !dbg !9846
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #27, !dbg !9848
  ret void, !dbg !9850
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9851 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9853, metadata !DIExpression()), !dbg !9855
  call void @llvm.dbg.value(metadata i32 0, metadata !9854, metadata !DIExpression()), !dbg !9855
  call void @llvm.dbg.value(metadata i32 undef, metadata !9854, metadata !DIExpression()), !dbg !9855
  %2 = lshr i32 6684671, %0, !dbg !9856
  %3 = and i32 %2, 1, !dbg !9856
  %4 = or i32 %3, %0, !dbg !9858
  %5 = icmp eq i32 %4, 0, !dbg !9858
  br i1 %5, label %6, label %7, !dbg !9858

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.139, i32 0, i32 0), i32 noundef 123) #27, !dbg !9859
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.139, i32 0, i32 0), i32 noundef 123) #27, !dbg !9859
  unreachable, !dbg !9859

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9864
  %9 = load i32, i32* %8, align 4, !dbg !9864
  call void @llvm.dbg.value(metadata i32 %9, metadata !9854, metadata !DIExpression()), !dbg !9855
  %10 = shl nuw i32 1, %0, !dbg !9865
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #28, !dbg !9866
  tail call void @arch_irq_enable(i32 noundef %9) #27, !dbg !9867
  ret void, !dbg !9868
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9869 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9871, metadata !DIExpression()), !dbg !9872
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9873
  %3 = or i32 %2, %0, !dbg !9873
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9873
  ret void, !dbg !9874
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #18 !dbg !9875 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9877, metadata !DIExpression()), !dbg !9878
  %2 = icmp slt i32 %0, 32, !dbg !9879
  br i1 %2, label %3, label %5, !dbg !9881

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9882
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #28, !dbg !9884
  br label %5, !dbg !9885

5:                                                ; preds = %1, %3
  ret void, !dbg !9886
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9887 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9889, metadata !DIExpression()), !dbg !9890
  %2 = xor i32 %0, -1, !dbg !9891
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9891
  %4 = and i32 %3, %2, !dbg !9891
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9891
  ret void, !dbg !9892
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #18 !dbg !9893 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9897, metadata !DIExpression()), !dbg !9899
  call void @llvm.dbg.value(metadata i32 %1, metadata !9898, metadata !DIExpression()), !dbg !9899
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9900

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9901
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #28, !dbg !9903
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #28, !dbg !9904
  br label %11, !dbg !9905

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9906
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #28, !dbg !9907
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #28, !dbg !9908
  br label %11, !dbg !9909

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9910
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #28, !dbg !9911
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #28, !dbg !9912
  br label %11, !dbg !9913

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9914
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #28, !dbg !9915
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #28, !dbg !9916
  br label %11, !dbg !9917

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9918
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9919 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9921, metadata !DIExpression()), !dbg !9922
  %2 = xor i32 %0, -1, !dbg !9923
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9923
  %4 = and i32 %3, %2, !dbg !9923
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9923
  ret void, !dbg !9924
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9925 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9927, metadata !DIExpression()), !dbg !9928
  %2 = xor i32 %0, -1, !dbg !9929
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9929
  %4 = and i32 %3, %2, !dbg !9929
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9929
  ret void, !dbg !9930
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9931 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9933, metadata !DIExpression()), !dbg !9934
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9935
  %3 = or i32 %2, %0, !dbg !9935
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9935
  ret void, !dbg !9936
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9937 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9939, metadata !DIExpression()), !dbg !9940
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9941
  %3 = or i32 %2, %0, !dbg !9941
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9941
  ret void, !dbg !9942
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #14 !dbg !9943 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9947, metadata !DIExpression()), !dbg !9953
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9948, metadata !DIExpression()), !dbg !9953
  call void @llvm.dbg.value(metadata i8* %2, metadata !9949, metadata !DIExpression()), !dbg !9953
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !9950, metadata !DIExpression()), !dbg !9953
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9952, metadata !DIExpression()), !dbg !9953
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9954
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9954
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9956
  br i1 %6, label %7, label %9, !dbg !9957

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9958
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9959
  store i8* %2, i8** %8, align 4, !dbg !9960
  br label %9, !dbg !9961

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9953
  ret i32 %10, !dbg !9962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #12 !dbg !9963 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9965, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !9966, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9967, metadata !DIExpression()), !dbg !9968
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9969
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9970
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9971
  store i8* null, i8** %3, align 4, !dbg !9972
  ret void, !dbg !9973
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #18 !dbg !9974 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9976, metadata !DIExpression()), !dbg !9981
  call void @llvm.dbg.value(metadata i8* %1, metadata !9977, metadata !DIExpression()), !dbg !9981
  call void @llvm.dbg.value(metadata i8* %1, metadata !9978, metadata !DIExpression()), !dbg !9981
  %3 = bitcast i8* %1 to i32*, !dbg !9982
  %4 = load i32, i32* %3, align 4, !dbg !9982
  %5 = add i32 %4, -169, !dbg !9982
  %6 = icmp ult i32 %5, -121, !dbg !9982
  br i1 %6, label %15, label %7, !dbg !9984

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9985
  %9 = inttoptr i32 %8 to i32*, !dbg !9986
  call void @llvm.dbg.value(metadata i32* %9, metadata !9979, metadata !DIExpression()), !dbg !9981
  %10 = load volatile i32, i32* %9, align 4, !dbg !9987
  call void @llvm.dbg.value(metadata i32 %10, metadata !9980, metadata !DIExpression()), !dbg !9981
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9988
  %12 = bitcast i8* %11 to i32*, !dbg !9988
  %13 = load i32, i32* %12, align 4, !dbg !9988
  %14 = or i32 %13, %10, !dbg !9989
  call void @llvm.dbg.value(metadata i32 %14, metadata !9980, metadata !DIExpression()), !dbg !9981
  store volatile i32 %14, i32* %9, align 4, !dbg !9990
  br label %15, !dbg !9991

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9981
  ret i32 %16, !dbg !9992
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #18 !dbg !9993 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9995, metadata !DIExpression()), !dbg !10000
  call void @llvm.dbg.value(metadata i8* %1, metadata !9996, metadata !DIExpression()), !dbg !10000
  call void @llvm.dbg.value(metadata i8* %1, metadata !9997, metadata !DIExpression()), !dbg !10000
  %3 = bitcast i8* %1 to i32*, !dbg !10001
  %4 = load i32, i32* %3, align 4, !dbg !10001
  %5 = add i32 %4, -169, !dbg !10001
  %6 = icmp ult i32 %5, -121, !dbg !10001
  br i1 %6, label %16, label %7, !dbg !10003

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10004
  %9 = inttoptr i32 %8 to i32*, !dbg !10005
  call void @llvm.dbg.value(metadata i32* %9, metadata !9998, metadata !DIExpression()), !dbg !10000
  %10 = load volatile i32, i32* %9, align 4, !dbg !10006
  call void @llvm.dbg.value(metadata i32 %10, metadata !9999, metadata !DIExpression()), !dbg !10000
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10007
  %12 = bitcast i8* %11 to i32*, !dbg !10007
  %13 = load i32, i32* %12, align 4, !dbg !10007
  %14 = xor i32 %13, -1, !dbg !10008
  %15 = and i32 %10, %14, !dbg !10009
  call void @llvm.dbg.value(metadata i32 %15, metadata !9999, metadata !DIExpression()), !dbg !10000
  store volatile i32 %15, i32* %9, align 4, !dbg !10010
  br label %16, !dbg !10011

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10000
  ret i32 %17, !dbg !10012
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !10013 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10015, metadata !DIExpression()), !dbg !10023
  call void @llvm.dbg.value(metadata i8* %1, metadata !10016, metadata !DIExpression()), !dbg !10023
  call void @llvm.dbg.value(metadata i32* %2, metadata !10017, metadata !DIExpression()), !dbg !10023
  call void @llvm.dbg.value(metadata i8* %1, metadata !10018, metadata !DIExpression()), !dbg !10023
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !10024
  call void @llvm.dbg.value(metadata i32 %4, metadata !10019, metadata !DIExpression()), !dbg !10023
  call void @llvm.dbg.value(metadata i32 undef, metadata !10020, metadata !DIExpression()), !dbg !10023
  call void @llvm.dbg.value(metadata i32 undef, metadata !10021, metadata !DIExpression()), !dbg !10023
  call void @llvm.dbg.value(metadata i32 %4, metadata !10022, metadata !DIExpression()), !dbg !10023
  %5 = bitcast i8* %1 to i32*, !dbg !10025
  %6 = load i32, i32* %5, align 4, !dbg !10025
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !10026

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #28, !dbg !10027
  call void @llvm.dbg.value(metadata i32 %8, metadata !10020, metadata !DIExpression()), !dbg !10023
  br label %19, !dbg !10028

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #28, !dbg !10030
  call void @llvm.dbg.value(metadata i32 %10, metadata !10021, metadata !DIExpression()), !dbg !10023
  br label %19, !dbg !10031

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #27, !dbg !10032
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 4) #28, !dbg !10033
  br label %19, !dbg !10034

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #27, !dbg !10035
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #28, !dbg !10036
  br label %19, !dbg !10037

17:                                               ; preds = %3
  br label %19, !dbg !10038

18:                                               ; preds = %3
  br label %19, !dbg !10039

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !10040
  br label %21, !dbg !10041

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !10023
  ret i32 %22, !dbg !10041
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #18 !dbg !10042 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10044, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata i8* %1, metadata !10045, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata i8* %2, metadata !10046, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata i8* %1, metadata !10047, metadata !DIExpression()), !dbg !10052
  %4 = bitcast i8* %1 to i32*, !dbg !10053
  %5 = load i32, i32* %4, align 4, !dbg !10053
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #28, !dbg !10054
  call void @llvm.dbg.value(metadata i32 %6, metadata !10051, metadata !DIExpression()), !dbg !10052
  %7 = icmp slt i32 %6, 0, !dbg !10055
  br i1 %7, label %22, label %8, !dbg !10057

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !10047, metadata !DIExpression()), !dbg !10052
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10058
  %10 = bitcast i8* %9 to i32*, !dbg !10058
  %11 = load i32, i32* %10, align 4, !dbg !10058
  %12 = lshr i32 %11, 16, !dbg !10058
  %13 = and i32 %12, 7, !dbg !10058
  %14 = lshr i32 %11, 8, !dbg !10059
  %15 = and i32 %14, 31, !dbg !10059
  %16 = shl i32 %13, %15, !dbg !10060
  call void @llvm.dbg.value(metadata i32 %16, metadata !10050, metadata !DIExpression()), !dbg !10052
  %17 = and i32 %11, 255, !dbg !10061
  %18 = or i32 %17, 1073887232, !dbg !10062
  %19 = inttoptr i32 %18 to i32*, !dbg !10063
  call void @llvm.dbg.value(metadata i32* %19, metadata !10048, metadata !DIExpression()), !dbg !10052
  %20 = load volatile i32, i32* %19, align 4, !dbg !10064
  call void @llvm.dbg.value(metadata i32 %20, metadata !10049, metadata !DIExpression()), !dbg !10052
  %21 = or i32 %16, %20, !dbg !10065
  call void @llvm.dbg.value(metadata i32 %21, metadata !10049, metadata !DIExpression()), !dbg !10052
  store volatile i32 %21, i32* %19, align 4, !dbg !10066
  br label %22, !dbg !10067

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !10052
  ret i32 %23, !dbg !10068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #5 !dbg !10069 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10073, metadata !DIExpression()), !dbg !10075
  call void @llvm.dbg.value(metadata i32 0, metadata !10074, metadata !DIExpression()), !dbg !10075
  %2 = add i32 %0, -1, !dbg !10076
  %3 = icmp ult i32 %2, 6, !dbg !10076
  br i1 %3, label %4, label %7, !dbg !10076

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !10076
  %6 = load i32, i32* %5, align 4, !dbg !10076
  call void @llvm.dbg.value(metadata i32 %6, metadata !10074, metadata !DIExpression()), !dbg !10075
  br label %7, !dbg !10077

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !10075
  ret i32 %8, !dbg !10078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !10079 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10083, metadata !DIExpression()), !dbg !10085
  call void @llvm.dbg.value(metadata i32 %1, metadata !10084, metadata !DIExpression()), !dbg !10085
  %3 = udiv i32 %0, %1, !dbg !10086
  ret i32 %3, !dbg !10087
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !10088 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10092, metadata !DIExpression()), !dbg !10096
  call void @llvm.dbg.value(metadata i32 16, metadata !10093, metadata !DIExpression()), !dbg !10096
  call void @llvm.dbg.value(metadata i32 336, metadata !10094, metadata !DIExpression()), !dbg !10096
  call void @llvm.dbg.value(metadata i32 %1, metadata !10095, metadata !DIExpression()), !dbg !10096
  %3 = mul i32 %0, 336, !dbg !10097
  %4 = shl nsw i32 %1, 4, !dbg !10098
  %5 = udiv i32 %3, %4, !dbg !10099
  ret i32 %5, !dbg !10100
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !10101 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !10103, metadata !DIExpression()), !dbg !10106
  tail call void @config_enable_default_clocks() #27, !dbg !10107
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !10108
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #28, !dbg !10108
  %4 = lshr i32 %3, 4, !dbg !10108
  %5 = and i32 %4, 15, !dbg !10108
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !10108
  %7 = load i8, i8* %6, align 1, !dbg !10108
  %8 = zext i8 %7 to i32, !dbg !10108
  %9 = lshr i32 %2, %8, !dbg !10108
  call void @llvm.dbg.value(metadata i32 %9, metadata !10104, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !10105, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !10106
  %10 = icmp ult i32 %9, 84000000, !dbg !10109
  br i1 %10, label %11, label %13, !dbg !10111

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !10112
  br label %13, !dbg !10114

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #28, !dbg !10115
  tail call fastcc void @set_up_plls() #28, !dbg !10116
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #28, !dbg !10117
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #28, !dbg !10120
  br label %14, !dbg !10121

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #28, !dbg !10122
  %16 = icmp eq i32 %15, 8, !dbg !10123
  br i1 %16, label %17, label %14, !dbg !10121, !llvm.loop !10124

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !10126
  br i1 %18, label %19, label %21, !dbg !10128

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !10129
  br label %21, !dbg !10131

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !10132
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #28, !dbg !10133
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #28, !dbg !10134
  ret i32 0, !dbg !10135
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #7 !dbg !10136 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10138
  %2 = and i32 %1, 240, !dbg !10138
  ret i32 %2, !dbg !10139
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #18 !dbg !10140 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #28, !dbg !10141
  tail call fastcc void @LL_RCC_HSE_Enable() #28, !dbg !10146
  br label %1, !dbg !10147

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #28, !dbg !10148
  %3 = icmp eq i32 %2, 1, !dbg !10149
  br i1 %3, label %4, label %1, !dbg !10147, !llvm.loop !10150

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #28, !dbg !10152
  br label %5, !dbg !10155

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #28, !dbg !10156
  %7 = icmp eq i32 %6, 1, !dbg !10157
  br i1 %7, label %8, label %5, !dbg !10155, !llvm.loop !10158

8:                                                ; preds = %5
  ret void, !dbg !10160
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10161 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #28, !dbg !10162
  %2 = icmp eq i32 %1, 8, !dbg !10164
  br i1 %2, label %3, label %4, !dbg !10165

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #28, !dbg !10166
  tail call fastcc void @stm32_clock_switch_to_hsi() #28, !dbg !10168
  br label %4, !dbg !10169

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #28, !dbg !10170
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10171
  %6 = and i32 %5, -196609, !dbg !10171
  %7 = or i32 %6, 65536, !dbg !10171
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10171
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10172
  %9 = and i32 %8, -251658241, !dbg !10172
  %10 = or i32 %9, 117440512, !dbg !10172
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10172
  tail call void @config_pll_sysclock() #27, !dbg !10173
  tail call fastcc void @LL_RCC_PLL_Enable() #28, !dbg !10174
  br label %11, !dbg !10175

11:                                               ; preds = %11, %4
  %12 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #28, !dbg !10176
  %13 = icmp eq i32 %12, 1, !dbg !10177
  br i1 %13, label %14, label %11, !dbg !10175, !llvm.loop !10178

14:                                               ; preds = %11
  ret void, !dbg !10180
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #18 !dbg !10181 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10183, metadata !DIExpression()), !dbg !10184
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10185
  %2 = and i32 %1, -241, !dbg !10185
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10185
  ret void, !dbg !10186
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #18 !dbg !10187 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10189, metadata !DIExpression()), !dbg !10190
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10191
  %3 = and i32 %2, -4, !dbg !10191
  %4 = or i32 %3, %0, !dbg !10191
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10191
  ret void, !dbg !10192
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #7 !dbg !10193 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10194
  %2 = and i32 %1, 12, !dbg !10194
  ret i32 %2, !dbg !10195
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #18 !dbg !10196 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !10198, metadata !DIExpression()), !dbg !10199
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10200
  %2 = and i32 %1, -7169, !dbg !10200
  %3 = or i32 %2, 4096, !dbg !10200
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10200
  ret void, !dbg !10201
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #18 !dbg !10202 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10204, metadata !DIExpression()), !dbg !10205
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10206
  %2 = and i32 %1, -57345, !dbg !10206
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10206
  ret void, !dbg !10207
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #18 !dbg !10208 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #28, !dbg !10209
  %2 = icmp eq i32 %1, 1, !dbg !10211
  br i1 %2, label %7, label %3, !dbg !10212

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #28, !dbg !10213
  br label %4, !dbg !10215

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #28, !dbg !10216
  %6 = icmp eq i32 %5, 1, !dbg !10217
  br i1 %6, label %7, label %4, !dbg !10215, !llvm.loop !10218

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #28, !dbg !10220
  br label %8, !dbg !10221

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #28, !dbg !10222
  %10 = icmp eq i32 %9, 0, !dbg !10223
  br i1 %10, label %11, label %8, !dbg !10221, !llvm.loop !10224

11:                                               ; preds = %8
  ret void, !dbg !10226
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #18 !dbg !10227 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10228
  %2 = and i32 %1, -16777217, !dbg !10228
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10228
  ret void, !dbg !10229
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #18 !dbg !10230 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10231
  %2 = or i32 %1, 16777216, !dbg !10231
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10231
  ret void, !dbg !10232
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #7 !dbg !10233 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10234
  %2 = lshr i32 %1, 25, !dbg !10235
  %3 = and i32 %2, 1, !dbg !10235
  ret i32 %3, !dbg !10236
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #7 !dbg !10237 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10238
  %2 = lshr i32 %1, 1, !dbg !10239
  %3 = and i32 %2, 1, !dbg !10239
  ret i32 %3, !dbg !10240
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #18 !dbg !10241 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10242
  %2 = or i32 %1, 1, !dbg !10242
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10242
  ret void, !dbg !10243
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #18 !dbg !10244 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10245
  %2 = and i32 %1, -262145, !dbg !10245
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10245
  ret void, !dbg !10246
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #18 !dbg !10247 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10248
  %2 = or i32 %1, 65536, !dbg !10248
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10248
  ret void, !dbg !10249
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #7 !dbg !10250 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10251
  %2 = lshr i32 %1, 17, !dbg !10252
  %3 = and i32 %2, 1, !dbg !10252
  ret i32 %3, !dbg !10253
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #18 !dbg !10254 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10255
  %2 = or i32 %1, 1, !dbg !10255
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10255
  ret void, !dbg !10256
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #7 !dbg !10257 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10258
  %2 = lshr i32 %1, 1, !dbg !10259
  %3 = and i32 %2, 1, !dbg !10259
  ret i32 %3, !dbg !10260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #5 !dbg !10261 {
  ret i32 16000000, !dbg !10263
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #18 !dbg !10267 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #28, !dbg !10268
  ret void, !dbg !10269
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #18 !dbg !10270 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10274, metadata !DIExpression()), !dbg !10278
  call void @llvm.dbg.value(metadata i32 16, metadata !10275, metadata !DIExpression()), !dbg !10278
  call void @llvm.dbg.value(metadata i32 336, metadata !10276, metadata !DIExpression()), !dbg !10278
  call void @llvm.dbg.value(metadata i32 65536, metadata !10277, metadata !DIExpression()), !dbg !10278
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10279
  %2 = and i32 %1, -4227072, !dbg !10279
  %3 = or i32 %2, 4215824, !dbg !10279
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10279
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10280
  %5 = and i32 %4, -196609, !dbg !10280
  %6 = or i32 %5, 65536, !dbg !10280
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10280
  ret void, !dbg !10281
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #21 !dbg !10282 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #28, !dbg !10283
  ret void, !dbg !10284
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #21 !dbg !10285 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10288, metadata !DIExpression()), !dbg !10290
  %2 = bitcast i32* %1 to i8*, !dbg !10291
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10291
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10289, metadata !DIExpression()), !dbg !10292
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10293
  %4 = or i32 %3, 268435456, !dbg !10293
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10293
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10294
  %6 = and i32 %5, 268435456, !dbg !10294
  store volatile i32 %6, i32* %1, align 4, !dbg !10295
  %7 = load volatile i32, i32* %1, align 4, !dbg !10296
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10297
  ret void, !dbg !10297
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10298 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10300, metadata !DIExpression()), !dbg !10301
  %2 = tail call fastcc zeroext i1 @device_is_ready() #28, !dbg !10302
  br i1 %2, label %3, label %4, !dbg !10304

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #28, !dbg !10305
  br label %4, !dbg !10306

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10301
  ret i32 %5, !dbg !10307
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10308 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !10313, metadata !DIExpression()), !dbg !10314
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !10315, !srcloc !10317
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #28, !dbg !10318
  ret i1 %1, !dbg !10319
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10320 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10321
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10322
  ret void, !dbg !10323
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10324 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10326, metadata !DIExpression()), !dbg !10327
  %2 = icmp eq i32 %0, 10, !dbg !10328
  br i1 %2, label %3, label %4, !dbg !10330

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #28, !dbg !10331
  br label %4, !dbg !10333

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10334
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #28, !dbg !10335
  ret i32 %0, !dbg !10336
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10337 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !10340, metadata !DIExpression()), !dbg !10342
  call void @llvm.dbg.value(metadata i8 %0, metadata !10341, metadata !DIExpression()), !dbg !10342
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !10343, !srcloc !10345
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #28, !dbg !10346
  ret void, !dbg !10347
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10348 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !10350, metadata !DIExpression()), !dbg !10353
  call void @llvm.dbg.value(metadata i8 %0, metadata !10351, metadata !DIExpression()), !dbg !10353
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10354
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10352, metadata !DIExpression()), !dbg !10353
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10355
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10355
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_47, i8 noundef zeroext %0) #27, !dbg !10356
  ret void, !dbg !10357
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10358 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !10360, metadata !DIExpression()), !dbg !10361
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_47) #27, !dbg !10362
  ret i1 %1, !dbg !10363
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #5 !dbg !10364 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10413, metadata !DIExpression()), !dbg !10416
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10414, metadata !DIExpression()), !dbg !10416
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10415, metadata !DIExpression()), !dbg !10416
  ret void, !dbg !10417
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10418 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10420, metadata !DIExpression()), !dbg !10425
  call void @llvm.dbg.value(metadata i8 %1, metadata !10421, metadata !DIExpression()), !dbg !10425
  call void @llvm.dbg.value(metadata i32 %2, metadata !10422, metadata !DIExpression()), !dbg !10425
  %5 = bitcast i32* %4 to i8*, !dbg !10426
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !10426
  call void @llvm.dbg.value(metadata i32* %4, metadata !10424, metadata !DIExpression(DW_OP_deref)), !dbg !10425
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #28, !dbg !10427
  call void @llvm.dbg.value(metadata i32 %6, metadata !10423, metadata !DIExpression()), !dbg !10425
  %7 = icmp eq i32 %6, 0, !dbg !10428
  br i1 %7, label %8, label %31, !dbg !10430

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !10423, metadata !DIExpression()), !dbg !10425
  %9 = and i32 %2, 131072, !dbg !10431
  %10 = icmp eq i32 %9, 0, !dbg !10433
  br i1 %10, label %28, label %11, !dbg !10434

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !10435
  %13 = icmp eq i32 %12, 0, !dbg !10438
  br i1 %13, label %18, label %14, !dbg !10439

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !10440
  %16 = shl nuw i32 1, %15, !dbg !10440
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #28, !dbg !10442
  br label %25, !dbg !10443

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !10444
  %20 = icmp eq i32 %19, 0, !dbg !10446
  %21 = zext i8 %1 to i32, !dbg !10425
  br i1 %20, label %25, label %22, !dbg !10447

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !10448
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #28, !dbg !10450
  br label %25, !dbg !10451

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !10452
  %27 = load i32, i32* %4, align 4, !dbg !10453
  call void @llvm.dbg.value(metadata i32 %30, metadata !10424, metadata !DIExpression()), !dbg !10425
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #28, !dbg !10454
  br label %31, !dbg !10455

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !10452
  %30 = load i32, i32* %4, align 4, !dbg !10453
  call void @llvm.dbg.value(metadata i32 %30, metadata !10424, metadata !DIExpression()), !dbg !10425
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #28, !dbg !10454
  call void @llvm.dbg.value(metadata i32 0, metadata !10423, metadata !DIExpression()), !dbg !10425
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !10456
  ret i32 %6, !dbg !10456
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #7 !dbg !10457 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10461, metadata !DIExpression()), !dbg !10466
  call void @llvm.dbg.value(metadata i32* %1, metadata !10462, metadata !DIExpression()), !dbg !10466
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10467
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10467
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10467
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10463, metadata !DIExpression()), !dbg !10466
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10468
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10468
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10468
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10465, metadata !DIExpression()), !dbg !10466
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #28, !dbg !10469
  store i32 %9, i32* %1, align 4, !dbg !10470
  ret i32 0, !dbg !10471
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #18 !dbg !10472 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10474, metadata !DIExpression()), !dbg !10480
  call void @llvm.dbg.value(metadata i32 %1, metadata !10475, metadata !DIExpression()), !dbg !10480
  call void @llvm.dbg.value(metadata i32 %2, metadata !10476, metadata !DIExpression()), !dbg !10480
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10481
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !10481
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !10481
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !10477, metadata !DIExpression()), !dbg !10480
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !10482
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !10482
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !10482
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !10478, metadata !DIExpression()), !dbg !10480
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #28, !dbg !10483
  call void @llvm.dbg.value(metadata i32 %10, metadata !10479, metadata !DIExpression()), !dbg !10480
  %11 = xor i32 %1, -1, !dbg !10484
  %12 = and i32 %10, %11, !dbg !10485
  %13 = and i32 %2, %1, !dbg !10486
  %14 = or i32 %12, %13, !dbg !10487
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #28, !dbg !10488
  ret i32 0, !dbg !10489
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #18 !dbg !10490 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10492, metadata !DIExpression()), !dbg !10496
  call void @llvm.dbg.value(metadata i32 %1, metadata !10493, metadata !DIExpression()), !dbg !10496
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10497
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10497
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10497
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10494, metadata !DIExpression()), !dbg !10496
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10498
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10498
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10498
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10495, metadata !DIExpression()), !dbg !10496
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !10499
  store volatile i32 %1, i32* %9, align 4, !dbg !10499
  ret i32 0, !dbg !10500
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #18 !dbg !10501 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10503, metadata !DIExpression()), !dbg !10507
  call void @llvm.dbg.value(metadata i32 %1, metadata !10504, metadata !DIExpression()), !dbg !10507
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10508
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10508
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10508
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10505, metadata !DIExpression()), !dbg !10507
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10509
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10509
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10509
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10506, metadata !DIExpression()), !dbg !10507
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #28, !dbg !10510
  ret i32 0, !dbg !10511
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #18 !dbg !10512 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10514, metadata !DIExpression()), !dbg !10518
  call void @llvm.dbg.value(metadata i32 %1, metadata !10515, metadata !DIExpression()), !dbg !10518
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10519
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10519
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10519
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10516, metadata !DIExpression()), !dbg !10518
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10520
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10520
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10520
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10517, metadata !DIExpression()), !dbg !10518
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !10521
  %10 = load volatile i32, i32* %9, align 4, !dbg !10521
  %11 = xor i32 %10, %1, !dbg !10521
  store volatile i32 %11, i32* %9, align 4, !dbg !10521
  ret i32 0, !dbg !10522
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10523 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10525, metadata !DIExpression()), !dbg !10535
  call void @llvm.dbg.value(metadata i8 %1, metadata !10526, metadata !DIExpression()), !dbg !10535
  call void @llvm.dbg.value(metadata i32 %2, metadata !10527, metadata !DIExpression()), !dbg !10535
  call void @llvm.dbg.value(metadata i32 %3, metadata !10528, metadata !DIExpression()), !dbg !10535
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10536
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10536
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10536
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10529, metadata !DIExpression()), !dbg !10535
  call void @llvm.dbg.value(metadata i8* undef, metadata !10530, metadata !DIExpression()), !dbg !10535
  call void @llvm.dbg.value(metadata i32 0, metadata !10532, metadata !DIExpression()), !dbg !10535
  call void @llvm.dbg.value(metadata i32 0, metadata !10533, metadata !DIExpression()), !dbg !10535
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !10537

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !10538
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #28, !dbg !10542
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10543
  %12 = load i32, i32* %11, align 4, !dbg !10543
  %13 = icmp eq i32 %10, %12, !dbg !10544
  br i1 %13, label %14, label %29, !dbg !10545

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !10546
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !10548
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !10549
  br label %29, !dbg !10550

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10551
  %17 = load i8*, i8** %16, align 4, !dbg !10551
  call void @llvm.dbg.value(metadata i8* %17, metadata !10530, metadata !DIExpression()), !dbg !10535
  %18 = zext i8 %1 to i32, !dbg !10552
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !10554
  %20 = icmp eq i32 %19, 0, !dbg !10555
  br i1 %20, label %21, label %29, !dbg !10556

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10557
  %23 = load i32, i32* %22, align 4, !dbg !10557
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #28, !dbg !10558
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10559

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !10532, metadata !DIExpression()), !dbg !10535
  br label %27, !dbg !10560

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !10532, metadata !DIExpression()), !dbg !10535
  br label %27, !dbg !10562

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !10532, metadata !DIExpression()), !dbg !10535
  br label %27, !dbg !10563

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !10535
  call void @llvm.dbg.value(metadata i32 %28, metadata !10532, metadata !DIExpression()), !dbg !10535
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !10564
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !10565
  br label %29, !dbg !10565

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !10535
  call void @llvm.dbg.value(metadata i32 %30, metadata !10533, metadata !DIExpression()), !dbg !10535
  call void @llvm.dbg.label(metadata !10534), !dbg !10566
  ret i32 %30, !dbg !10567
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !10568 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10570, metadata !DIExpression()), !dbg !10574
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10571, metadata !DIExpression()), !dbg !10574
  call void @llvm.dbg.value(metadata i1 %2, metadata !10572, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10574
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10575
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10575
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10575
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10573, metadata !DIExpression()), !dbg !10574
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10576
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #28, !dbg !10577
  ret i32 %8, !dbg !10578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !10579 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10585, metadata !DIExpression()), !dbg !10588
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10586, metadata !DIExpression()), !dbg !10588
  call void @llvm.dbg.value(metadata i1 %2, metadata !10587, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10588
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !10589
  br i1 %4, label %5, label %6, !dbg !10592

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.152, i32 0, i32 0), i32 noundef 42) #27, !dbg !10593
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.153, i32 0, i32 0)) #27, !dbg !10593
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.152, i32 0, i32 0), i32 noundef 42) #27, !dbg !10593
  unreachable, !dbg !10593

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !10595
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !10595
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !10595
  br i1 %9, label %10, label %11, !dbg !10598

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.152, i32 0, i32 0), i32 noundef 43) #27, !dbg !10599
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.155, i32 0, i32 0)) #27, !dbg !10599
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.152, i32 0, i32 0), i32 noundef 43) #27, !dbg !10599
  unreachable, !dbg !10599

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #28, !dbg !10601
  br i1 %12, label %18, label %13, !dbg !10603

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10604
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #28, !dbg !10607
  %16 = or i1 %15, %2, !dbg !10608
  %17 = select i1 %16, i32 0, i32 -22, !dbg !10608
  br i1 %2, label %19, label %21, !dbg !10608

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !10609

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10610
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #28, !dbg !10613
  br label %21, !dbg !10614

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !10588
  ret i32 %22, !dbg !10615
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10616 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10620, metadata !DIExpression()), !dbg !10621
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10622
  %3 = icmp eq %struct._snode* %2, null, !dbg !10622
  ret i1 %3, !dbg !10622
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #17 !dbg !10623 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10627, metadata !DIExpression()), !dbg !10631
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10628, metadata !DIExpression()), !dbg !10631
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10629, metadata !DIExpression()), !dbg !10631
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10632
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10630, metadata !DIExpression()), !dbg !10631
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10629, metadata !DIExpression()), !dbg !10631
  %4 = icmp eq %struct._snode* %3, null, !dbg !10634
  br i1 %4, label %15, label %5, !dbg !10632

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10630, metadata !DIExpression()), !dbg !10631
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10629, metadata !DIExpression()), !dbg !10631
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10636
  br i1 %6, label %9, label %11, !dbg !10639

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10630, metadata !DIExpression()), !dbg !10631
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10629, metadata !DIExpression()), !dbg !10631
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10636
  br i1 %8, label %9, label %11, !dbg !10639, !llvm.loop !10640

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #28, !dbg !10641
  br label %15, !dbg !10641

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10630, metadata !DIExpression()), !dbg !10631
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10629, metadata !DIExpression()), !dbg !10631
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #28, !dbg !10634
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10630, metadata !DIExpression()), !dbg !10631
  %14 = icmp eq %struct._snode* %13, null, !dbg !10634
  br i1 %14, label %15, label %7, !dbg !10632, !llvm.loop !10640

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !10644 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10648, metadata !DIExpression()), !dbg !10650
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10649, metadata !DIExpression()), !dbg !10650
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10651
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #28, !dbg !10651
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #28, !dbg !10651
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #28, !dbg !10652
  %5 = icmp eq %struct._snode* %4, null, !dbg !10652
  br i1 %5, label %6, label %8, !dbg !10651

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10654
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #28, !dbg !10654
  br label %8, !dbg !10654

8:                                                ; preds = %6, %2
  ret void, !dbg !10651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10656 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10660, metadata !DIExpression()), !dbg !10661
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10662
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10662
  ret %struct._snode* %3, !dbg !10663
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !10664 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10668, metadata !DIExpression()), !dbg !10670
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10669, metadata !DIExpression()), !dbg !10670
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10671
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10672
  ret void, !dbg !10673
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !10674 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10676, metadata !DIExpression()), !dbg !10678
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10677, metadata !DIExpression()), !dbg !10678
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10679
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10680
  ret void, !dbg !10681
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10682 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10684, metadata !DIExpression()), !dbg !10685
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10686
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10686
  ret %struct._snode* %3, !dbg !10687
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !10688 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10690, metadata !DIExpression()), !dbg !10692
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10691, metadata !DIExpression()), !dbg !10692
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10693
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10694
  ret void, !dbg !10695
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #14 !dbg !10696 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10700, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10701, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10702, metadata !DIExpression()), !dbg !10703
  %4 = icmp eq %struct._snode* %1, null, !dbg !10704
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #28, !dbg !10706
  br i1 %4, label %6, label %11, !dbg !10707

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #28, !dbg !10708
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #28, !dbg !10710
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10710
  br i1 %8, label %9, label %15, !dbg !10708

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10712
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #28, !dbg !10712
  br label %15, !dbg !10712

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #28, !dbg !10714
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #28, !dbg !10716
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10716
  br i1 %13, label %14, label %15, !dbg !10714

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #28, !dbg !10718
  br label %15, !dbg !10718

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #28, !dbg !10707
  ret void, !dbg !10707
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #13 !dbg !10720 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10724, metadata !DIExpression()), !dbg !10725
  %2 = icmp eq %struct._snode* %0, null, !dbg !10726
  br i1 %2, label %5, label %3, !dbg !10726

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #28, !dbg !10726
  br label %5, !dbg !10726

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10726
  ret %struct._snode* %6, !dbg !10726
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10727 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10729, metadata !DIExpression()), !dbg !10730
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #28, !dbg !10731
  ret %struct._snode* %2, !dbg !10731
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10732 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10734, metadata !DIExpression()), !dbg !10735
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10736
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10736
  ret %struct._snode* %3, !dbg !10737
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10738 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10740, metadata !DIExpression()), !dbg !10743
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #28, !dbg !10744, !range !10745
  call void @llvm.dbg.value(metadata i32 %2, metadata !10741, metadata !DIExpression()), !dbg !10743
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #28, !dbg !10746
  call void @llvm.dbg.value(metadata i32 %3, metadata !10742, metadata !DIExpression()), !dbg !10743
  ret i32 %3, !dbg !10747
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10748 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10750, metadata !DIExpression()), !dbg !10753
  call void @llvm.dbg.value(metadata i8* %1, metadata !10751, metadata !DIExpression()), !dbg !10753
  call void @llvm.dbg.value(metadata i8* %1, metadata !10752, metadata !DIExpression()), !dbg !10753
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10754
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10754
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10755
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10755
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10755
  %8 = shl nuw i32 1, %0, !dbg !10756
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #28, !dbg !10757
  ret void, !dbg !10758
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10759 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10763, metadata !DIExpression()), !dbg !10769
  call void @llvm.dbg.value(metadata i32 %1, metadata !10764, metadata !DIExpression()), !dbg !10769
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10765, metadata !DIExpression()), !dbg !10769
  %4 = bitcast i64* %3 to i8*, !dbg !10770
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #26, !dbg !10770
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10767, metadata !DIExpression()), !dbg !10769
  store i64 70368744177732, i64* %3, align 8, !dbg !10771
  call void @llvm.dbg.value(metadata i64* %3, metadata !10767, metadata !DIExpression(DW_OP_deref)), !dbg !10769
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #28, !dbg !10772
  call void @llvm.dbg.value(metadata i32 %5, metadata !10768, metadata !DIExpression()), !dbg !10769
  %6 = icmp eq i32 %5, 0, !dbg !10773
  br i1 %6, label %7, label %8, !dbg !10775

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #28, !dbg !10776
  br label %8, !dbg !10777

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #26, !dbg !10778
  ret void, !dbg !10778
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10779 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10781, metadata !DIExpression()), !dbg !10784
  call void @llvm.dbg.value(metadata i8* %0, metadata !10782, metadata !DIExpression()), !dbg !10784
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10785
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10783, metadata !DIExpression()), !dbg !10784
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10786
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10786
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #27, !dbg !10787
  ret i32 %5, !dbg !10788
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10791, metadata !DIExpression()), !dbg !10794
  call void @llvm.dbg.value(metadata i32 %1, metadata !10792, metadata !DIExpression()), !dbg !10794
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #28, !dbg !10795
  call void @llvm.dbg.value(metadata i32 %3, metadata !10793, metadata !DIExpression()), !dbg !10794
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #28, !dbg !10796
  ret void, !dbg !10797
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #5 !dbg !10798 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10802, metadata !DIExpression()), !dbg !10803
  %2 = sdiv i32 %0, 4, !dbg !10804
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10805
  %6 = add nsw i32 %5, 16, !dbg !10806
  %7 = shl i32 15, %6, !dbg !10807
  %8 = or i32 %7, %2, !dbg !10808
  ret i32 %8, !dbg !10809
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10810 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10814, metadata !DIExpression()), !dbg !10816
  call void @llvm.dbg.value(metadata i32 %1, metadata !10815, metadata !DIExpression()), !dbg !10816
  %3 = and i32 %1, 255, !dbg !10817
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10817
  %5 = load volatile i32, i32* %4, align 4, !dbg !10817
  %6 = lshr i32 %1, 16, !dbg !10817
  %7 = xor i32 %6, -1, !dbg !10817
  %8 = and i32 %5, %7, !dbg !10817
  call void @llvm.dbg.value(metadata i32 %6, metadata !10818, metadata !DIExpression()) #26, !dbg !10822
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #31, !dbg !10824, !srcloc !10825
  call void @llvm.dbg.value(metadata i32 %9, metadata !10821, metadata !DIExpression()) #26, !dbg !10822
  call void @llvm.dbg.value(metadata i32 %9, metadata !10826, metadata !DIExpression()) #26, !dbg !10831
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #26, !dbg !10833, !range !5427
  %11 = shl i32 %0, %10, !dbg !10817
  %12 = or i32 %11, %8, !dbg !10817
  store volatile i32 %12, i32* %4, align 4, !dbg !10817
  ret void, !dbg !10834
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10835 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10839, metadata !DIExpression()), !dbg !10844
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10840, metadata !DIExpression()), !dbg !10844
  call void @llvm.dbg.value(metadata i32 %2, metadata !10841, metadata !DIExpression()), !dbg !10844
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10845
  %5 = icmp eq %struct._snode* %4, null, !dbg !10845
  br i1 %5, label %24, label %6, !dbg !10845

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #28, !dbg !10847
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10843, metadata !DIExpression()), !dbg !10844
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !10842, metadata !DIExpression()), !dbg !10844
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10848
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !10848
  %12 = load i32, i32* %11, align 4, !dbg !10848
  %13 = and i32 %12, %2, !dbg !10852
  %14 = icmp eq i32 %13, 0, !dbg !10852
  br i1 %14, label %22, label %15, !dbg !10853

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10854
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10854
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10854
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !10854
  br i1 %19, label %20, label %21, !dbg !10858

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.152, i32 0, i32 0), i32 noundef 77) #27, !dbg !10859
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.155, i32 0, i32 0)) #27, !dbg !10859
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.152, i32 0, i32 0), i32 noundef 77) #27, !dbg !10859
  unreachable, !dbg !10859

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #27, !dbg !10861
  br label %22, !dbg !10862

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10842, metadata !DIExpression()), !dbg !10844
  %23 = icmp eq %struct._snode* %8, null, !dbg !10863
  br i1 %23, label %24, label %6, !dbg !10863

24:                                               ; preds = %22, %3
  ret void, !dbg !10864
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10865 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10867, metadata !DIExpression()), !dbg !10868
  %2 = and i32 %0, 255, !dbg !10869
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10869
  %4 = load volatile i32, i32* %3, align 4, !dbg !10869
  %5 = lshr i32 %0, 16, !dbg !10869
  %6 = and i32 %4, %5, !dbg !10869
  call void @llvm.dbg.value(metadata i32 %5, metadata !10818, metadata !DIExpression()) #26, !dbg !10870
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #31, !dbg !10872, !srcloc !10825
  call void @llvm.dbg.value(metadata i32 %7, metadata !10821, metadata !DIExpression()) #26, !dbg !10870
  call void @llvm.dbg.value(metadata i32 %7, metadata !10826, metadata !DIExpression()) #26, !dbg !10873
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #26, !dbg !10875, !range !5427
  %9 = lshr i32 %6, %8, !dbg !10876
  ret i32 %9, !dbg !10877
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !10878 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10883, metadata !DIExpression()), !dbg !10885
  call void @llvm.dbg.value(metadata i32 %1, metadata !10884, metadata !DIExpression()), !dbg !10885
  %3 = shl i32 %1, 16, !dbg !10886
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10886
  store volatile i32 %3, i32* %4, align 4, !dbg !10886
  ret void, !dbg !10887
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #7 !dbg !10888 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10892, metadata !DIExpression()), !dbg !10893
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10894
  %3 = load volatile i32, i32* %2, align 4, !dbg !10894
  ret i32 %3, !dbg !10895
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !10896 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10898, metadata !DIExpression()), !dbg !10900
  call void @llvm.dbg.value(metadata i32 %1, metadata !10899, metadata !DIExpression()), !dbg !10900
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10901
  store volatile i32 %1, i32* %3, align 4, !dbg !10901
  ret void, !dbg !10902
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #7 !dbg !10903 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10905, metadata !DIExpression()), !dbg !10906
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10907
  %3 = load volatile i32, i32* %2, align 4, !dbg !10907
  ret i32 %3, !dbg !10908
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #14 !dbg !10909 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10913, metadata !DIExpression()), !dbg !10915
  call void @llvm.dbg.value(metadata i32* %1, metadata !10914, metadata !DIExpression()), !dbg !10915
  %3 = and i32 %0, 131072, !dbg !10916
  %4 = icmp eq i32 %3, 0, !dbg !10918
  br i1 %4, label %22, label %5, !dbg !10919

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10920
  %6 = and i32 %0, 2, !dbg !10922
  %7 = icmp eq i32 %6, 0, !dbg !10924
  br i1 %7, label %11, label %8, !dbg !10925

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10926
  %10 = icmp eq i32 %9, 0, !dbg !10926
  br i1 %10, label %33, label %11, !dbg !10929

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10930
  store i32 %12, i32* %1, align 4, !dbg !10930
  %13 = and i32 %0, 16, !dbg !10931
  %14 = icmp eq i32 %13, 0, !dbg !10933
  br i1 %14, label %17, label %15, !dbg !10934

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10935
  br label %31, !dbg !10937

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10938
  %19 = icmp eq i32 %18, 0, !dbg !10940
  br i1 %19, label %33, label %20, !dbg !10941

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10942
  br label %31, !dbg !10944

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10945
  %24 = icmp eq i32 %23, 0, !dbg !10947
  br i1 %24, label %31, label %25, !dbg !10948

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10949
  %27 = icmp eq i32 %26, 0, !dbg !10952
  br i1 %27, label %28, label %31, !dbg !10953

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10954
  br label %33, !dbg !10955

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10915
  ret i32 %34, !dbg !10955
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10956 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10960, metadata !DIExpression()), !dbg !10971
  call void @llvm.dbg.value(metadata i32 %1, metadata !10961, metadata !DIExpression()), !dbg !10971
  call void @llvm.dbg.value(metadata i32 %2, metadata !10962, metadata !DIExpression()), !dbg !10971
  call void @llvm.dbg.value(metadata i32 %3, metadata !10963, metadata !DIExpression()), !dbg !10971
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10972
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10972
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10972
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10964, metadata !DIExpression()), !dbg !10971
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10973
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10973
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10973
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10965, metadata !DIExpression()), !dbg !10971
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #28, !dbg !10974
  call void @llvm.dbg.value(metadata i32 %11, metadata !10966, metadata !DIExpression()), !dbg !10971
  %12 = and i32 %2, 48, !dbg !10975
  call void @llvm.dbg.value(metadata i32 %12, metadata !10967, metadata !DIExpression()), !dbg !10971
  call void @llvm.dbg.value(metadata i32 %2, metadata !10968, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10971
  call void @llvm.dbg.value(metadata i32 %2, metadata !10969, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10971
  call void @llvm.dbg.value(metadata i32 %2, metadata !10970, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10971
  %13 = lshr i32 %2, 6, !dbg !10976
  %14 = and i32 %13, 1, !dbg !10976
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #28, !dbg !10977
  %15 = lshr i32 %2, 7, !dbg !10978
  %16 = and i32 %15, 3, !dbg !10978
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #28, !dbg !10979
  %17 = lshr i32 %2, 9, !dbg !10980
  %18 = and i32 %17, 3, !dbg !10980
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #28, !dbg !10981
  %19 = icmp eq i32 %12, 32, !dbg !10982
  br i1 %19, label %20, label %24, !dbg !10984

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10985
  br i1 %21, label %22, label %23, !dbg !10988

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #28, !dbg !10989
  br label %24, !dbg !10991

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #28, !dbg !10992
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10994
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #28, !dbg !10995
  ret void, !dbg !10996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #5 !dbg !10997 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10999, metadata !DIExpression()), !dbg !11001
  %2 = shl nuw i32 1, %0, !dbg !11002
  call void @llvm.dbg.value(metadata i32 %2, metadata !11000, metadata !DIExpression()), !dbg !11001
  ret i32 %2, !dbg !11003
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #18 !dbg !11004 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11008, metadata !DIExpression()), !dbg !11011
  call void @llvm.dbg.value(metadata i32 %1, metadata !11009, metadata !DIExpression()), !dbg !11011
  call void @llvm.dbg.value(metadata i32 %2, metadata !11010, metadata !DIExpression()), !dbg !11011
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !11012
  %5 = load volatile i32, i32* %4, align 4, !dbg !11012
  %6 = xor i32 %1, -1, !dbg !11012
  %7 = and i32 %5, %6, !dbg !11012
  %8 = mul i32 %2, %1, !dbg !11012
  %9 = or i32 %7, %8, !dbg !11012
  store volatile i32 %9, i32* %4, align 4, !dbg !11012
  ret void, !dbg !11013
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11014 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11016, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.value(metadata i32 %1, metadata !11017, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.value(metadata i32 %2, metadata !11018, metadata !DIExpression()), !dbg !11019
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !11020
  %5 = load volatile i32, i32* %4, align 4, !dbg !11020
  call void @llvm.dbg.value(metadata i32 %1, metadata !10818, metadata !DIExpression()) #26, !dbg !11021
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11023, !srcloc !10825
  call void @llvm.dbg.value(metadata i32 %6, metadata !10821, metadata !DIExpression()) #26, !dbg !11021
  call void @llvm.dbg.value(metadata i32 %6, metadata !10826, metadata !DIExpression()) #26, !dbg !11024
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11026, !range !5427
  %8 = shl nuw nsw i32 %7, 1, !dbg !11020
  %9 = shl i32 3, %8, !dbg !11020
  %10 = xor i32 %9, -1, !dbg !11020
  %11 = and i32 %5, %10, !dbg !11020
  call void @llvm.dbg.value(metadata i32 %1, metadata !10818, metadata !DIExpression()) #26, !dbg !11027
  call void @llvm.dbg.value(metadata i32 %6, metadata !10821, metadata !DIExpression()) #26, !dbg !11027
  call void @llvm.dbg.value(metadata i32 %6, metadata !10826, metadata !DIExpression()) #26, !dbg !11029
  %12 = shl i32 %2, %8, !dbg !11020
  %13 = or i32 %11, %12, !dbg !11020
  store volatile i32 %13, i32* %4, align 4, !dbg !11020
  ret void, !dbg !11031
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11032 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11034, metadata !DIExpression()), !dbg !11037
  call void @llvm.dbg.value(metadata i32 %1, metadata !11035, metadata !DIExpression()), !dbg !11037
  call void @llvm.dbg.value(metadata i32 %2, metadata !11036, metadata !DIExpression()), !dbg !11037
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !11038
  %5 = load volatile i32, i32* %4, align 4, !dbg !11038
  call void @llvm.dbg.value(metadata i32 %1, metadata !10818, metadata !DIExpression()) #26, !dbg !11039
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11041, !srcloc !10825
  call void @llvm.dbg.value(metadata i32 %6, metadata !10821, metadata !DIExpression()) #26, !dbg !11039
  call void @llvm.dbg.value(metadata i32 %6, metadata !10826, metadata !DIExpression()) #26, !dbg !11042
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11044, !range !5427
  %8 = shl nuw nsw i32 %7, 1, !dbg !11038
  %9 = shl i32 3, %8, !dbg !11038
  %10 = xor i32 %9, -1, !dbg !11038
  %11 = and i32 %5, %10, !dbg !11038
  call void @llvm.dbg.value(metadata i32 %1, metadata !10818, metadata !DIExpression()) #26, !dbg !11045
  call void @llvm.dbg.value(metadata i32 %6, metadata !10821, metadata !DIExpression()) #26, !dbg !11045
  call void @llvm.dbg.value(metadata i32 %6, metadata !10826, metadata !DIExpression()) #26, !dbg !11047
  %12 = shl i32 %2, %8, !dbg !11038
  %13 = or i32 %11, %12, !dbg !11038
  store volatile i32 %13, i32* %4, align 4, !dbg !11038
  ret void, !dbg !11049
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11050 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11052, metadata !DIExpression()), !dbg !11055
  call void @llvm.dbg.value(metadata i32 %1, metadata !11053, metadata !DIExpression()), !dbg !11055
  call void @llvm.dbg.value(metadata i32 %2, metadata !11054, metadata !DIExpression()), !dbg !11055
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !11056
  %5 = load volatile i32, i32* %4, align 4, !dbg !11056
  call void @llvm.dbg.value(metadata i32 %1, metadata !10818, metadata !DIExpression()) #26, !dbg !11057
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11059, !srcloc !10825
  call void @llvm.dbg.value(metadata i32 %6, metadata !10821, metadata !DIExpression()) #26, !dbg !11057
  call void @llvm.dbg.value(metadata i32 %6, metadata !10826, metadata !DIExpression()) #26, !dbg !11060
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11062, !range !5427
  %8 = shl nuw nsw i32 %7, 2, !dbg !11056
  %9 = shl i32 15, %8, !dbg !11056
  %10 = xor i32 %9, -1, !dbg !11056
  %11 = and i32 %5, %10, !dbg !11056
  call void @llvm.dbg.value(metadata i32 %1, metadata !10818, metadata !DIExpression()) #26, !dbg !11063
  call void @llvm.dbg.value(metadata i32 %6, metadata !10821, metadata !DIExpression()) #26, !dbg !11063
  call void @llvm.dbg.value(metadata i32 %6, metadata !10826, metadata !DIExpression()) #26, !dbg !11065
  %12 = shl i32 %2, %8, !dbg !11056
  %13 = or i32 %11, %12, !dbg !11056
  store volatile i32 %13, i32* %4, align 4, !dbg !11056
  ret void, !dbg !11067
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11068 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11070, metadata !DIExpression()), !dbg !11073
  call void @llvm.dbg.value(metadata i32 %1, metadata !11071, metadata !DIExpression()), !dbg !11073
  call void @llvm.dbg.value(metadata i32 %2, metadata !11072, metadata !DIExpression()), !dbg !11073
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !11074
  %5 = load volatile i32, i32* %4, align 4, !dbg !11074
  %6 = lshr i32 %1, 8, !dbg !11074
  call void @llvm.dbg.value(metadata i32 %6, metadata !10818, metadata !DIExpression()) #26, !dbg !11075
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #31, !dbg !11077, !srcloc !10825
  call void @llvm.dbg.value(metadata i32 %7, metadata !10821, metadata !DIExpression()) #26, !dbg !11075
  call void @llvm.dbg.value(metadata i32 %7, metadata !10826, metadata !DIExpression()) #26, !dbg !11078
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #26, !dbg !11080, !range !5427
  %9 = shl nuw nsw i32 %8, 2, !dbg !11074
  %10 = shl i32 15, %9, !dbg !11074
  %11 = xor i32 %10, -1, !dbg !11074
  %12 = and i32 %5, %11, !dbg !11074
  call void @llvm.dbg.value(metadata i32 %6, metadata !10818, metadata !DIExpression()) #26, !dbg !11081
  call void @llvm.dbg.value(metadata i32 %7, metadata !10821, metadata !DIExpression()) #26, !dbg !11081
  call void @llvm.dbg.value(metadata i32 %7, metadata !10826, metadata !DIExpression()) #26, !dbg !11083
  %13 = shl i32 %2, %9, !dbg !11074
  %14 = or i32 %12, %13, !dbg !11074
  store volatile i32 %14, i32* %4, align 4, !dbg !11074
  ret void, !dbg !11085
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11086 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11088, metadata !DIExpression()), !dbg !11091
  call void @llvm.dbg.value(metadata i32 %1, metadata !11089, metadata !DIExpression()), !dbg !11091
  call void @llvm.dbg.value(metadata i32 %2, metadata !11090, metadata !DIExpression()), !dbg !11091
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !11092
  %5 = load volatile i32, i32* %4, align 4, !dbg !11092
  call void @llvm.dbg.value(metadata i32 %1, metadata !10818, metadata !DIExpression()) #26, !dbg !11093
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11095, !srcloc !10825
  call void @llvm.dbg.value(metadata i32 %6, metadata !10821, metadata !DIExpression()) #26, !dbg !11093
  call void @llvm.dbg.value(metadata i32 %6, metadata !10826, metadata !DIExpression()) #26, !dbg !11096
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11098, !range !5427
  %8 = shl nuw nsw i32 %7, 1, !dbg !11092
  %9 = shl i32 3, %8, !dbg !11092
  %10 = xor i32 %9, -1, !dbg !11092
  %11 = and i32 %5, %10, !dbg !11092
  call void @llvm.dbg.value(metadata i32 %1, metadata !10818, metadata !DIExpression()) #26, !dbg !11099
  call void @llvm.dbg.value(metadata i32 %6, metadata !10821, metadata !DIExpression()) #26, !dbg !11099
  call void @llvm.dbg.value(metadata i32 %6, metadata !10826, metadata !DIExpression()) #26, !dbg !11101
  %12 = shl i32 %2, %8, !dbg !11092
  %13 = or i32 %11, %12, !dbg !11092
  store volatile i32 %13, i32* %4, align 4, !dbg !11092
  ret void, !dbg !11103
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !11104 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11106, metadata !DIExpression()), !dbg !11109
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11110
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !11110
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !11110
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !11107, metadata !DIExpression()), !dbg !11109
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !11111
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !11112
  %6 = tail call fastcc zeroext i1 @device_is_ready.165() #28, !dbg !11113
  br i1 %6, label %7, label %11, !dbg !11115

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #28, !dbg !11116
  call void @llvm.dbg.value(metadata i32 %8, metadata !11108, metadata !DIExpression()), !dbg !11109
  %9 = icmp slt i32 %8, 0, !dbg !11117
  %10 = select i1 %9, i32 %8, i32 0, !dbg !11119
  br label %11, !dbg !11119

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !11109
  ret i32 %12, !dbg !11120
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.165() unnamed_addr #1 !dbg !11121 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11125, metadata !DIExpression()), !dbg !11126
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !11127, !srcloc !11129
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.166() #28, !dbg !11130
  ret i1 %1, !dbg !11131
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !11132 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11136, metadata !DIExpression()), !dbg !11141
  call void @llvm.dbg.value(metadata i8 1, metadata !11137, metadata !DIExpression()), !dbg !11141
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11142
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !11142
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !11142
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !11138, metadata !DIExpression()), !dbg !11141
  call void @llvm.dbg.value(metadata i32 0, metadata !11139, metadata !DIExpression()), !dbg !11141
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11140, metadata !DIExpression()), !dbg !11141
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !11143
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !11146
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #28, !dbg !11147
  call void @llvm.dbg.value(metadata i32 %7, metadata !11139, metadata !DIExpression()), !dbg !11141
  ret i32 %7, !dbg !11148
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.166() unnamed_addr #1 !dbg !11149 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11151, metadata !DIExpression()), !dbg !11152
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #27, !dbg !11153
  ret i1 %1, !dbg !11154
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !11155 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11159, metadata !DIExpression()), !dbg !11167
  call void @llvm.dbg.value(metadata i32 %1, metadata !11160, metadata !DIExpression()), !dbg !11167
  call void @llvm.dbg.value(metadata i32 %2, metadata !11161, metadata !DIExpression()), !dbg !11167
  call void @llvm.dbg.value(metadata i32 %3, metadata !11162, metadata !DIExpression()), !dbg !11167
  call void @llvm.dbg.value(metadata i32 0, metadata !11163, metadata !DIExpression()), !dbg !11167
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #28, !dbg !11168
  %5 = icmp eq i32 %3, 17, !dbg !11169
  br i1 %5, label %6, label %14, !dbg !11170

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !11171
  call void @llvm.dbg.value(metadata i32 %7, metadata !11164, metadata !DIExpression()), !dbg !11172
  %8 = icmp eq i32 %7, 0, !dbg !11173
  %9 = shl nuw i32 1, %1, !dbg !11175
  br i1 %8, label %12, label %10, !dbg !11176

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #28, !dbg !11177
  br label %14, !dbg !11179

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #28, !dbg !11180
  br label %14, !dbg !11183

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !11184
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #21 !dbg !11185 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11187, metadata !DIExpression()), !dbg !11191
  call void @llvm.dbg.value(metadata i8* %1, metadata !11188, metadata !DIExpression()), !dbg !11191
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11192
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11192
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11192
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11189, metadata !DIExpression()), !dbg !11191
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11193
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11193
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #28, !dbg !11195
  %9 = icmp eq i32 %8, 0, !dbg !11195
  br i1 %9, label %12, label %10, !dbg !11196

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11197
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #28, !dbg !11199
  br label %12, !dbg !11200

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11201
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #28, !dbg !11203
  %15 = icmp eq i32 %14, 0, !dbg !11203
  br i1 %15, label %19, label %16, !dbg !11204

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11205
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #28, !dbg !11206
  store i8 %18, i8* %1, align 1, !dbg !11207
  br label %19, !dbg !11208

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !11191
  ret i32 %20, !dbg !11209
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !11210 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11212, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.value(metadata i8 %1, metadata !11213, metadata !DIExpression()), !dbg !11216
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11217
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11217
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11217
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11214, metadata !DIExpression()), !dbg !11216
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !11218

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11219
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #28, !dbg !11222
  %10 = icmp eq i32 %9, 0, !dbg !11222
  br i1 %10, label %18, label %11, !dbg !11223

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !11224, !srcloc !11231
  call void @llvm.dbg.value(metadata i32 undef, metadata !11227, metadata !DIExpression()) #26, !dbg !11232
  call void @llvm.dbg.value(metadata i32 undef, metadata !11228, metadata !DIExpression()) #26, !dbg !11232
  call void @llvm.dbg.value(metadata i32 undef, metadata !11215, metadata !DIExpression()), !dbg !11216
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11233
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #28, !dbg !11235
  %15 = icmp eq i32 %14, 0, !dbg !11235
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !11224
  br i1 %15, label %17, label %19, !dbg !11236

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !11227, metadata !DIExpression()) #26, !dbg !11232
  call void @llvm.dbg.value(metadata i32 %16, metadata !11215, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.value(metadata i32 undef, metadata !11237, metadata !DIExpression()) #26, !dbg !11240
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !11242, !srcloc !11243
  br label %18, !dbg !11244

18:                                               ; preds = %17, %7
  br label %7, !dbg !11219, !llvm.loop !11245

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !11224
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11247
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #28, !dbg !11248
  call void @llvm.dbg.value(metadata i32 %20, metadata !11237, metadata !DIExpression()) #26, !dbg !11249
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #26, !dbg !11251, !srcloc !11243
  ret void, !dbg !11252
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #21 !dbg !11253 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11255, metadata !DIExpression()), !dbg !11258
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11259
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11259
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11259
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11256, metadata !DIExpression()), !dbg !11258
  call void @llvm.dbg.value(metadata i32 0, metadata !11257, metadata !DIExpression()), !dbg !11258
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11260
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11260
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #28, !dbg !11262
  %8 = icmp ne i32 %7, 0, !dbg !11262
  %9 = zext i1 %8 to i32, !dbg !11263
  call void @llvm.dbg.value(metadata i32 %9, metadata !11257, metadata !DIExpression()), !dbg !11258
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11264
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #28, !dbg !11266
  %12 = icmp eq i32 %11, 0, !dbg !11266
  %13 = or i32 %9, 2, !dbg !11267
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !11267
  call void @llvm.dbg.value(metadata i32 %14, metadata !11257, metadata !DIExpression()), !dbg !11258
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11268
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #28, !dbg !11270
  %17 = icmp eq i32 %16, 0, !dbg !11270
  %18 = or i32 %14, 4, !dbg !11271
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !11271
  call void @llvm.dbg.value(metadata i32 %19, metadata !11257, metadata !DIExpression()), !dbg !11258
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11272
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #28, !dbg !11274
  %22 = icmp eq i32 %21, 0, !dbg !11274
  %23 = or i32 %19, 8, !dbg !11275
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !11275
  call void @llvm.dbg.value(metadata i32 %24, metadata !11257, metadata !DIExpression()), !dbg !11258
  %25 = and i32 %24, 8, !dbg !11276
  %26 = icmp eq i32 %25, 0, !dbg !11276
  br i1 %26, label %29, label %27, !dbg !11278

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11279
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #28, !dbg !11281
  br label %29, !dbg !11282

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !11283
  %31 = icmp eq i32 %30, 0, !dbg !11283
  br i1 %31, label %34, label %32, !dbg !11285

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11286
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #28, !dbg !11288
  br label %34, !dbg !11289

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !11290
  %36 = icmp eq i32 %35, 0, !dbg !11290
  br i1 %36, label %39, label %37, !dbg !11292

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11293
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #28, !dbg !11295
  br label %39, !dbg !11296

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !11297
  %41 = icmp eq i32 %40, 0, !dbg !11297
  br i1 %41, label %44, label %42, !dbg !11299

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11300
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #28, !dbg !11302
  br label %44, !dbg !11303

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11304
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #28, !dbg !11305
  ret i32 %24, !dbg !11306
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !11307 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11309, metadata !DIExpression()), !dbg !11318
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11310, metadata !DIExpression()), !dbg !11318
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11319
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11319
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11319
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11311, metadata !DIExpression()), !dbg !11318
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11320
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !11320
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !11320
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !11312, metadata !DIExpression()), !dbg !11318
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11321
  %10 = load i8, i8* %9, align 4, !dbg !11321
  %11 = zext i8 %10 to i32, !dbg !11322
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #28, !dbg !11323
  call void @llvm.dbg.value(metadata i32 %12, metadata !11314, metadata !DIExpression()), !dbg !11318
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11324
  %14 = load i8, i8* %13, align 1, !dbg !11324
  %15 = zext i8 %14 to i32, !dbg !11325
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #28, !dbg !11326
  call void @llvm.dbg.value(metadata i32 %16, metadata !11315, metadata !DIExpression()), !dbg !11318
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11327
  %18 = load i8, i8* %17, align 2, !dbg !11327
  %19 = zext i8 %18 to i32, !dbg !11328
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #28, !dbg !11329
  call void @llvm.dbg.value(metadata i32 %20, metadata !11316, metadata !DIExpression()), !dbg !11318
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11330
  %22 = load i8, i8* %21, align 1, !dbg !11330
  %23 = zext i8 %22 to i32, !dbg !11331
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #28, !dbg !11332
  call void @llvm.dbg.value(metadata i32 %24, metadata !11317, metadata !DIExpression()), !dbg !11318
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !11333

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !11335
  br i1 %26, label %69, label %27, !dbg !11337

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !11338

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !11339
  br i1 %29, label %65, label %30, !dbg !11339

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !11341
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !11318
  br i1 %31, label %38, label %34, !dbg !11343

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !11344
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !11344

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !11347
  br i1 %37, label %38, label %69, !dbg !11348

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11349
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #28, !dbg !11350
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #28, !dbg !11351
  %41 = icmp eq i32 %12, %40, !dbg !11353
  br i1 %41, label %43, label %42, !dbg !11354

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #28, !dbg !11355
  br label %43, !dbg !11357

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #28, !dbg !11358
  %45 = icmp eq i32 %16, %44, !dbg !11360
  br i1 %45, label %47, label %46, !dbg !11361

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #28, !dbg !11362
  br label %47, !dbg !11364

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #28, !dbg !11365
  %49 = icmp eq i32 %20, %48, !dbg !11367
  br i1 %49, label %51, label %50, !dbg !11368

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #28, !dbg !11369
  br label %51, !dbg !11371

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #28, !dbg !11372
  %53 = icmp eq i32 %24, %52, !dbg !11374
  br i1 %53, label %55, label %54, !dbg !11375

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #28, !dbg !11376
  br label %55, !dbg !11378

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11379
  %57 = load i32, i32* %56, align 4, !dbg !11379
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !11381
  %59 = load i32, i32* %58, align 4, !dbg !11381
  %60 = icmp eq i32 %57, %59, !dbg !11382
  br i1 %60, label %63, label %61, !dbg !11383

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #28, !dbg !11384
  %62 = load i32, i32* %56, align 4, !dbg !11386
  store i32 %62, i32* %58, align 4, !dbg !11387
  br label %63, !dbg !11388

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !11389
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #28, !dbg !11390
  br label %69, !dbg !11391

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !11339
  %67 = and i8 %66, 1, !dbg !11339
  %68 = icmp eq i8 %67, 0, !dbg !11339
  br i1 %68, label %30, label %69, !dbg !11339

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !11318
  ret i32 %70, !dbg !11392
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #22 !dbg !11393 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11395, metadata !DIExpression()), !dbg !11398
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11396, metadata !DIExpression()), !dbg !11398
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11399
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !11399
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !11399
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !11397, metadata !DIExpression()), !dbg !11398
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !11400
  %7 = load i32, i32* %6, align 4, !dbg !11400
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11401
  store i32 %7, i32* %8, align 4, !dbg !11402
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #28, !dbg !11403, !range !11404
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #28, !dbg !11405
  %11 = trunc i32 %10 to i8, !dbg !11405
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11406
  store i8 %11, i8* %12, align 4, !dbg !11407
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #28, !dbg !11408, !range !11409
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #28, !dbg !11410
  %15 = trunc i32 %14 to i8, !dbg !11410
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11411
  store i8 %15, i8* %16, align 1, !dbg !11412
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #28, !dbg !11413
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #28, !dbg !11414, !range !11404
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #28, !dbg !11415
  %20 = trunc i32 %19 to i8, !dbg !11415
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11416
  store i8 %20, i8* %21, align 2, !dbg !11417
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #28, !dbg !11418, !range !11419
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #28, !dbg !11420
  %24 = trunc i32 %23 to i8, !dbg !11420
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11421
  store i8 %24, i8* %25, align 1, !dbg !11422
  ret i32 0, !dbg !11423
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11424 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11428, metadata !DIExpression()), !dbg !11430
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11431
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11431
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11431
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11429, metadata !DIExpression()), !dbg !11430
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11432
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11432
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #28, !dbg !11433
  ret i32 %7, !dbg !11434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #5 !dbg !11435 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11439, metadata !DIExpression()), !dbg !11440
  %2 = icmp eq i32 %0, 1024, !dbg !11441
  %3 = select i1 %2, i32 2, i32 0, !dbg !11441
  %4 = icmp eq i32 %0, 1536, !dbg !11441
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11441
  ret i32 %5, !dbg !11442
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11443 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11445, metadata !DIExpression()), !dbg !11447
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11448
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11448
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11448
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11446, metadata !DIExpression()), !dbg !11447
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11449
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11449
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #28, !dbg !11450
  ret i32 %7, !dbg !11451
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #6 !dbg !11452 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11456, metadata !DIExpression()), !dbg !11457
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11458
  %3 = icmp ult i32 %2, 4, !dbg !11458
  br i1 %3, label %4, label %7, !dbg !11458

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11458
  %6 = load i32, i32* %5, align 4, !dbg !11458
  br label %7, !dbg !11458

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11459
  ret i32 %8, !dbg !11461
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11462 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11464, metadata !DIExpression()), !dbg !11466
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11467
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11467
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11467
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11465, metadata !DIExpression()), !dbg !11466
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11468
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11468
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #28, !dbg !11469
  ret i32 %7, !dbg !11470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11471 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11475, metadata !DIExpression()), !dbg !11477
  call void @llvm.dbg.value(metadata i32 %1, metadata !11476, metadata !DIExpression()), !dbg !11477
  %3 = icmp eq i32 %0, 4096, !dbg !11478
  %4 = icmp eq i32 %1, 0, !dbg !11478
  %5 = select i1 %4, i32 4, i32 3, !dbg !11478
  %6 = select i1 %4, i32 3, i32 2, !dbg !11478
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11478
  ret i32 %7, !dbg !11479
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11480 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11482, metadata !DIExpression()), !dbg !11484
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11485
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11485
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11485
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11483, metadata !DIExpression()), !dbg !11484
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11486
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11486
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #28, !dbg !11487
  ret i32 %7, !dbg !11488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11489 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11493, metadata !DIExpression()), !dbg !11494
  %2 = icmp eq i32 %0, 768, !dbg !11495
  %3 = zext i1 %2 to i32, !dbg !11494
  ret i32 %3, !dbg !11497
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11498 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11503, metadata !DIExpression()), !dbg !11504
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11505
  %3 = load volatile i32, i32* %2, align 4, !dbg !11505
  %4 = and i32 %3, 768, !dbg !11505
  ret i32 %4, !dbg !11506
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11507 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11509, metadata !DIExpression()), !dbg !11510
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11511
  %3 = load volatile i32, i32* %2, align 4, !dbg !11511
  %4 = and i32 %3, 4096, !dbg !11511
  ret i32 %4, !dbg !11512
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11513 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11515, metadata !DIExpression()), !dbg !11516
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11517
  %3 = load volatile i32, i32* %2, align 4, !dbg !11517
  %4 = and i32 %3, 12288, !dbg !11517
  ret i32 %4, !dbg !11518
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11519 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11521, metadata !DIExpression()), !dbg !11522
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11523
  %3 = load volatile i32, i32* %2, align 4, !dbg !11523
  %4 = and i32 %3, 1536, !dbg !11523
  ret i32 %4, !dbg !11524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #5 !dbg !11525 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11529, metadata !DIExpression()), !dbg !11530
  %2 = icmp eq i32 %0, 2, !dbg !11531
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11531
  %4 = icmp eq i32 %0, 1, !dbg !11531
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11531
  ret i32 %5, !dbg !11532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #5 !dbg !11533 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11537, metadata !DIExpression()), !dbg !11538
  %2 = icmp ult i32 %0, 3, !dbg !11539
  br i1 %2, label %3, label %6, !dbg !11539

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11539
  %5 = load i32, i32* %4, align 4, !dbg !11539
  br label %6, !dbg !11539

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11540
  ret i32 %7, !dbg !11542
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11543 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11547, metadata !DIExpression()), !dbg !11549
  call void @llvm.dbg.value(metadata i32 %1, metadata !11548, metadata !DIExpression()), !dbg !11549
  %3 = icmp eq i32 %0, 4, !dbg !11550
  %4 = icmp eq i32 %1, 0, !dbg !11550
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11550
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11550
  ret i32 %6, !dbg !11551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11552 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11556, metadata !DIExpression()), !dbg !11557
  %2 = icmp eq i32 %0, 1, !dbg !11558
  %3 = select i1 %2, i32 768, i32 0, !dbg !11557
  ret i32 %3, !dbg !11560
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11561 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11565, metadata !DIExpression()), !dbg !11566
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11567
  %3 = load volatile i32, i32* %2, align 4, !dbg !11567
  %4 = and i32 %3, -8193, !dbg !11567
  store volatile i32 %4, i32* %2, align 4, !dbg !11567
  ret void, !dbg !11568
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #18 !dbg !11569 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11573, metadata !DIExpression()), !dbg !11576
  call void @llvm.dbg.value(metadata i32 %1, metadata !11574, metadata !DIExpression()), !dbg !11576
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11577
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11577
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11577
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11575, metadata !DIExpression()), !dbg !11576
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11578
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11578
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #28, !dbg !11579
  ret void, !dbg !11580
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #18 !dbg !11581 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11583, metadata !DIExpression()), !dbg !11586
  call void @llvm.dbg.value(metadata i32 %1, metadata !11584, metadata !DIExpression()), !dbg !11586
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11587
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11587
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11587
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11585, metadata !DIExpression()), !dbg !11586
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11588
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11588
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #28, !dbg !11589
  ret void, !dbg !11590
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #18 !dbg !11591 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11593, metadata !DIExpression()), !dbg !11596
  call void @llvm.dbg.value(metadata i32 %1, metadata !11594, metadata !DIExpression()), !dbg !11596
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11597
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11597
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11597
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11595, metadata !DIExpression()), !dbg !11596
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11598
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11598
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #28, !dbg !11599
  ret void, !dbg !11600
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #18 !dbg !11601 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11603, metadata !DIExpression()), !dbg !11606
  call void @llvm.dbg.value(metadata i32 %1, metadata !11604, metadata !DIExpression()), !dbg !11606
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11607
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11607
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11607
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11605, metadata !DIExpression()), !dbg !11606
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11608
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11608
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #28, !dbg !11609
  ret void, !dbg !11610
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11611 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11613, metadata !DIExpression()), !dbg !11618
  call void @llvm.dbg.value(metadata i32 %1, metadata !11614, metadata !DIExpression()), !dbg !11618
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11619
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11619
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11619
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11615, metadata !DIExpression()), !dbg !11618
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11620
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11620
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11620
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11616, metadata !DIExpression()), !dbg !11618
  %10 = bitcast i32* %3 to i8*, !dbg !11621
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #26, !dbg !11621
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11622
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11622
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11626
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11626
  %15 = load i8*, i8** %14, align 4, !dbg !11626
  call void @llvm.dbg.value(metadata i32* %3, metadata !11617, metadata !DIExpression(DW_OP_deref)), !dbg !11618
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #28, !dbg !11627
  %17 = icmp slt i32 %16, 0, !dbg !11628
  br i1 %17, label %18, label %21, !dbg !11629

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.171(i32 noundef 1) #28, !dbg !11630
  %20 = zext i8 %19 to i32, !dbg !11630
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.172, i32 0, i32 0), i32 noundef %20) #27, !dbg !11630
  br label %31, !dbg !11636

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11637
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11637
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #28, !dbg !11638
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11639
  %25 = load i32, i32* %3, align 4, !dbg !11640
  call void @llvm.dbg.value(metadata i32 %25, metadata !11617, metadata !DIExpression()), !dbg !11618
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #28, !dbg !11641
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11642
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !11642
  %28 = load volatile i32, i32* %27, align 4, !dbg !11642
  %29 = icmp ugt i32 %28, 16, !dbg !11642
  br i1 %29, label %31, label %30, !dbg !11645

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.173, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.174, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7.175, i32 0, i32 0), i32 noundef 190) #27, !dbg !11646
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8.176, i32 0, i32 0)) #27, !dbg !11646
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7.175, i32 0, i32 0), i32 noundef 190) #27, !dbg !11646
  unreachable, !dbg !11646

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #26, !dbg !11648
  ret void, !dbg !11648
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11649 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11651, metadata !DIExpression()), !dbg !11652
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11653
  %3 = load volatile i32, i32* %2, align 4, !dbg !11653
  %4 = or i32 %3, 8192, !dbg !11653
  store volatile i32 %4, i32* %2, align 4, !dbg !11653
  ret void, !dbg !11654
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11655 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11657, metadata !DIExpression()), !dbg !11661
  call void @llvm.dbg.value(metadata i8* %1, metadata !11658, metadata !DIExpression()), !dbg !11661
  call void @llvm.dbg.value(metadata i32* %2, metadata !11659, metadata !DIExpression()), !dbg !11661
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11662
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11662
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11662
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11660, metadata !DIExpression()), !dbg !11661
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11663
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11663
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11665
  br i1 %9, label %12, label %10, !dbg !11666

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !11667
  br label %12, !dbg !11668

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11661
  ret i32 %13, !dbg !11669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.171(i32 noundef %0) unnamed_addr #5 !dbg !11670 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11672, metadata !DIExpression()), !dbg !11673
  %2 = icmp eq i32 %0, 2, !dbg !11674
  %3 = select i1 %2, i8 87, i8 63, !dbg !11674
  %4 = icmp eq i32 %0, 1, !dbg !11674
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11674
  ret i8 %5, !dbg !11675
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11676 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11680, metadata !DIExpression()), !dbg !11682
  call void @llvm.dbg.value(metadata i32 0, metadata !11681, metadata !DIExpression()), !dbg !11682
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11683
  %3 = load volatile i32, i32* %2, align 4, !dbg !11683
  %4 = and i32 %3, -32769, !dbg !11683
  store volatile i32 %4, i32* %2, align 4, !dbg !11683
  ret void, !dbg !11684
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #18 !dbg !11685 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11689, metadata !DIExpression()), !dbg !11693
  call void @llvm.dbg.value(metadata i32 %1, metadata !11690, metadata !DIExpression()), !dbg !11693
  call void @llvm.dbg.value(metadata i32 0, metadata !11691, metadata !DIExpression()), !dbg !11693
  call void @llvm.dbg.value(metadata i32 %2, metadata !11692, metadata !DIExpression()), !dbg !11693
  %4 = zext i32 %1 to i64, !dbg !11694
  %5 = mul nuw nsw i64 %4, 25, !dbg !11694
  %6 = zext i32 %2 to i64, !dbg !11694
  %7 = shl nuw nsw i64 %6, 2, !dbg !11694
  %8 = udiv i64 %5, %7, !dbg !11694
  %9 = trunc i64 %8 to i32, !dbg !11694
  %10 = udiv i32 %9, 100, !dbg !11694
  %11 = shl nuw nsw i32 %10, 4, !dbg !11694
  %12 = mul i32 %10, -100, !dbg !11694
  %13 = add i32 %12, %9, !dbg !11694
  %14 = shl i32 %13, 4, !dbg !11694
  %15 = add i32 %14, 50, !dbg !11694
  %16 = udiv i32 %15, 100, !dbg !11694
  %17 = and i32 %16, 240, !dbg !11694
  %18 = add nuw nsw i32 %17, %11, !dbg !11694
  %19 = and i32 %16, 15, !dbg !11694
  %20 = and i32 %18, 65520, !dbg !11697
  %21 = or i32 %20, %19, !dbg !11697
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11698
  store volatile i32 %21, i32* %22, align 4, !dbg !11699
  ret void, !dbg !11700
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !11701 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11703, metadata !DIExpression()), !dbg !11705
  call void @llvm.dbg.value(metadata i32 %1, metadata !11704, metadata !DIExpression()), !dbg !11705
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11706
  %4 = load volatile i32, i32* %3, align 4, !dbg !11706
  %5 = and i32 %4, -769, !dbg !11706
  %6 = or i32 %5, %1, !dbg !11706
  store volatile i32 %6, i32* %3, align 4, !dbg !11706
  ret void, !dbg !11707
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !11708 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11710, metadata !DIExpression()), !dbg !11712
  call void @llvm.dbg.value(metadata i32 %1, metadata !11711, metadata !DIExpression()), !dbg !11712
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11713
  %4 = load volatile i32, i32* %3, align 4, !dbg !11713
  %5 = and i32 %4, -4097, !dbg !11713
  %6 = or i32 %5, %1, !dbg !11713
  store volatile i32 %6, i32* %3, align 4, !dbg !11713
  ret void, !dbg !11714
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !11715 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11717, metadata !DIExpression()), !dbg !11719
  call void @llvm.dbg.value(metadata i32 %1, metadata !11718, metadata !DIExpression()), !dbg !11719
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11720
  %4 = load volatile i32, i32* %3, align 4, !dbg !11720
  %5 = and i32 %4, -12289, !dbg !11720
  %6 = or i32 %5, %1, !dbg !11720
  store volatile i32 %6, i32* %3, align 4, !dbg !11720
  ret void, !dbg !11721
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !11722 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11724, metadata !DIExpression()), !dbg !11726
  call void @llvm.dbg.value(metadata i32 %1, metadata !11725, metadata !DIExpression()), !dbg !11726
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11727
  %4 = load volatile i32, i32* %3, align 4, !dbg !11727
  %5 = and i32 %4, -1537, !dbg !11727
  %6 = or i32 %5, %1, !dbg !11727
  store volatile i32 %6, i32* %3, align 4, !dbg !11727
  ret void, !dbg !11728
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11729 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11731, metadata !DIExpression()), !dbg !11732
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11733
  %3 = load volatile i32, i32* %2, align 4, !dbg !11733
  %4 = lshr i32 %3, 3, !dbg !11734
  %5 = and i32 %4, 1, !dbg !11734
  ret i32 %5, !dbg !11735
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11736 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11738, metadata !DIExpression()), !dbg !11739
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11740
  %3 = load volatile i32, i32* %2, align 4, !dbg !11740
  %4 = and i32 %3, 1, !dbg !11740
  ret i32 %4, !dbg !11741
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11742 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11744, metadata !DIExpression()), !dbg !11745
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11746
  %3 = load volatile i32, i32* %2, align 4, !dbg !11746
  %4 = lshr i32 %3, 1, !dbg !11747
  %5 = and i32 %4, 1, !dbg !11747
  ret i32 %5, !dbg !11748
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11749 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11751, metadata !DIExpression()), !dbg !11752
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11753
  %3 = load volatile i32, i32* %2, align 4, !dbg !11753
  %4 = lshr i32 %3, 8, !dbg !11754
  %5 = and i32 %4, 1, !dbg !11754
  ret i32 %5, !dbg !11755
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11756 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11758, metadata !DIExpression()), !dbg !11759
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11760
  store volatile i32 -257, i32* %2, align 4, !dbg !11760
  ret void, !dbg !11761
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11762 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11764, metadata !DIExpression()), !dbg !11766
  %3 = bitcast i32* %2 to i8*, !dbg !11767
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11767
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11765, metadata !DIExpression()), !dbg !11768
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11769
  %5 = load volatile i32, i32* %4, align 4, !dbg !11769
  store volatile i32 %5, i32* %2, align 4, !dbg !11770
  %6 = load volatile i32, i32* %2, align 4, !dbg !11771
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11772
  %8 = load volatile i32, i32* %7, align 4, !dbg !11772
  store volatile i32 %8, i32* %2, align 4, !dbg !11773
  %9 = load volatile i32, i32* %2, align 4, !dbg !11774
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11775
  ret void, !dbg !11775
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11776 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11778, metadata !DIExpression()), !dbg !11780
  %3 = bitcast i32* %2 to i8*, !dbg !11781
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11781
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11779, metadata !DIExpression()), !dbg !11782
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11783
  %5 = load volatile i32, i32* %4, align 4, !dbg !11783
  store volatile i32 %5, i32* %2, align 4, !dbg !11784
  %6 = load volatile i32, i32* %2, align 4, !dbg !11785
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11786
  %8 = load volatile i32, i32* %7, align 4, !dbg !11786
  store volatile i32 %8, i32* %2, align 4, !dbg !11787
  %9 = load volatile i32, i32* %2, align 4, !dbg !11788
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11789
  ret void, !dbg !11789
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11790 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11792, metadata !DIExpression()), !dbg !11794
  %3 = bitcast i32* %2 to i8*, !dbg !11795
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11795
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11793, metadata !DIExpression()), !dbg !11796
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11797
  %5 = load volatile i32, i32* %4, align 4, !dbg !11797
  store volatile i32 %5, i32* %2, align 4, !dbg !11798
  %6 = load volatile i32, i32* %2, align 4, !dbg !11799
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11800
  %8 = load volatile i32, i32* %7, align 4, !dbg !11800
  store volatile i32 %8, i32* %2, align 4, !dbg !11801
  %9 = load volatile i32, i32* %2, align 4, !dbg !11802
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11803
  ret void, !dbg !11803
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11804 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11806, metadata !DIExpression()), !dbg !11808
  %3 = bitcast i32* %2 to i8*, !dbg !11809
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11809
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11807, metadata !DIExpression()), !dbg !11810
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11811
  %5 = load volatile i32, i32* %4, align 4, !dbg !11811
  store volatile i32 %5, i32* %2, align 4, !dbg !11812
  %6 = load volatile i32, i32* %2, align 4, !dbg !11813
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11814
  %8 = load volatile i32, i32* %7, align 4, !dbg !11814
  store volatile i32 %8, i32* %2, align 4, !dbg !11815
  %9 = load volatile i32, i32* %2, align 4, !dbg !11816
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11817
  ret void, !dbg !11817
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11818 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11820, metadata !DIExpression()), !dbg !11821
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11822
  %3 = load volatile i32, i32* %2, align 4, !dbg !11822
  %4 = lshr i32 %3, 7, !dbg !11823
  %5 = and i32 %4, 1, !dbg !11823
  ret i32 %5, !dbg !11824
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #18 !dbg !11825 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11829, metadata !DIExpression()), !dbg !11831
  call void @llvm.dbg.value(metadata i8 %1, metadata !11830, metadata !DIExpression()), !dbg !11831
  %3 = zext i8 %1 to i32, !dbg !11832
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11833
  store volatile i32 %3, i32* %4, align 4, !dbg !11834
  ret void, !dbg !11835
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11836 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11838, metadata !DIExpression()), !dbg !11839
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11840
  %3 = load volatile i32, i32* %2, align 4, !dbg !11840
  %4 = lshr i32 %3, 5, !dbg !11841
  %5 = and i32 %4, 1, !dbg !11841
  ret i32 %5, !dbg !11842
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11843 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11847, metadata !DIExpression()), !dbg !11848
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11849
  %3 = load volatile i32, i32* %2, align 4, !dbg !11849
  %4 = trunc i32 %3 to i8, !dbg !11850
  ret i8 %4, !dbg !11851
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11852 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11854, metadata !DIExpression()), !dbg !11860
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11861
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11861
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11861
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11855, metadata !DIExpression()), !dbg !11860
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11862
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11862
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11862
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11856, metadata !DIExpression()), !dbg !11860
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #28, !dbg !11863
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11864
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11864
  %10 = tail call fastcc zeroext i1 @device_is_ready.180(%struct.device* noundef %9) #28, !dbg !11866
  br i1 %10, label %14, label %11, !dbg !11867

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.171(i32 noundef 1) #28, !dbg !11868
  %13 = zext i8 %12 to i32, !dbg !11868
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9.181, i32 0, i32 0), i32 noundef %13) #27, !dbg !11868
  br label %62, !dbg !11874

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11875
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11876
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11876
  %18 = load i8*, i8** %17, align 4, !dbg !11876
  %19 = tail call fastcc i32 @clock_control_on.182(%struct.device* noundef %15, i8* noundef %18) #28, !dbg !11877
  call void @llvm.dbg.value(metadata i32 %19, metadata !11859, metadata !DIExpression()), !dbg !11860
  %20 = icmp eq i32 %19, 0, !dbg !11878
  br i1 %20, label %24, label %21, !dbg !11880

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.171(i32 noundef 1) #28, !dbg !11881
  %23 = zext i8 %22 to i32, !dbg !11881
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10.183, i32 0, i32 0), i32 noundef %23) #27, !dbg !11881
  br label %62, !dbg !11887

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11888
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11888
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #28, !dbg !11889
  call void @llvm.dbg.value(metadata i32 %27, metadata !11859, metadata !DIExpression()), !dbg !11860
  %28 = icmp slt i32 %27, 0, !dbg !11890
  br i1 %28, label %62, label %29, !dbg !11892

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11893
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11893
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #28, !dbg !11894
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11895
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #28, !dbg !11896
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11897
  %34 = load i32, i32* %33, align 4, !dbg !11897
  %35 = icmp ult i32 %34, 3, !dbg !11899
  br i1 %35, label %39, label %36, !dbg !11899

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.171(i32 noundef 2) #28, !dbg !11900
  %38 = zext i8 %37 to i32, !dbg !11900
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.11.184, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #27, !dbg !11900
  call void @llvm.dbg.value(metadata i32 0, metadata !11857, metadata !DIExpression()), !dbg !11860
  call void @llvm.dbg.value(metadata i32 0, metadata !11858, metadata !DIExpression()), !dbg !11860
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11899
  %41 = load i32, i32* %40, align 4, !dbg !11899
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.12, i32 0, i32 %34, !dbg !11899
  %43 = load i32, i32* %42, align 4, !dbg !11899
  br label %44, !dbg !11899

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11909
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11909
  call void @llvm.dbg.value(metadata i32 %46, metadata !11858, metadata !DIExpression()), !dbg !11860
  call void @llvm.dbg.value(metadata i32 %45, metadata !11857, metadata !DIExpression()), !dbg !11860
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11910
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #28, !dbg !11911
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11912
  %49 = load i8, i8* %48, align 4, !dbg !11912, !range !8159
  %50 = icmp eq i8 %49, 0, !dbg !11912
  br i1 %50, label %52, label %51, !dbg !11914

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #28, !dbg !11915
  br label %52, !dbg !11917

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11918
  %54 = load i32, i32* %53, align 4, !dbg !11918
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #28, !dbg !11919
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11920
  %56 = load i8, i8* %55, align 4, !dbg !11920, !range !8159
  %57 = icmp eq i8 %56, 0, !dbg !11920
  br i1 %57, label %60, label %58, !dbg !11922

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11923
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #28, !dbg !11925
  br label %60, !dbg !11926

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11927
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #28, !dbg !11928
  br label %62, !dbg !11929

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11860
  ret i32 %63, !dbg !11930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !11931 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11935, metadata !DIExpression()), !dbg !11939
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11940
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11940
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11940
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11936, metadata !DIExpression()), !dbg !11939
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11937, metadata !DIExpression()), !dbg !11939
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11941
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !11942
  ret void, !dbg !11943
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.180(%struct.device* noundef %0) unnamed_addr #1 !dbg !11944 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11948, metadata !DIExpression()), !dbg !11949
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !11950, !srcloc !11952
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.185(%struct.device* noundef %0) #28, !dbg !11953
  ret i1 %2, !dbg !11954
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.182(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11955 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11957, metadata !DIExpression()), !dbg !11960
  call void @llvm.dbg.value(metadata i8* %1, metadata !11958, metadata !DIExpression()), !dbg !11960
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11961
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11961
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11961
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11959, metadata !DIExpression()), !dbg !11960
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11962
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11962
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !11963
  ret i32 %8, !dbg !11964
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11965 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11969, metadata !DIExpression()), !dbg !11973
  call void @llvm.dbg.value(metadata i8 0, metadata !11970, metadata !DIExpression()), !dbg !11973
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11974
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !11974
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11972, metadata !DIExpression(DW_OP_deref)), !dbg !11973
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !11975
  call void @llvm.dbg.value(metadata i32 %4, metadata !11971, metadata !DIExpression()), !dbg !11973
  %5 = icmp slt i32 %4, 0, !dbg !11976
  br i1 %5, label %9, label %6, !dbg !11978

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11979
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11972, metadata !DIExpression()), !dbg !11973
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #28, !dbg !11980
  br label %9, !dbg !11981

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11973
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !11982
  ret i32 %10, !dbg !11982
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11983 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11985, metadata !DIExpression()), !dbg !11989
  call void @llvm.dbg.value(metadata i32 12, metadata !11986, metadata !DIExpression()), !dbg !11989
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11990

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11991, metadata !DIExpression()) #26, !dbg !11997
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #26, !dbg !12000, !srcloc !12001
  call void @llvm.dbg.value(metadata i32 %4, metadata !11996, metadata !DIExpression()) #26, !dbg !11997
  %5 = or i32 %4, 12, !dbg !12002
  call void @llvm.dbg.value(metadata i32 %5, metadata !11987, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata i32 %5, metadata !12004, metadata !DIExpression()) #26, !dbg !12011
  call void @llvm.dbg.value(metadata i32* %2, metadata !12009, metadata !DIExpression()) #26, !dbg !12011
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #26, !dbg !12013, !srcloc !12014
  call void @llvm.dbg.value(metadata i32 %6, metadata !12010, metadata !DIExpression()) #26, !dbg !12011
  %7 = icmp eq i32 %6, 0, !dbg !11990
  br i1 %7, label %8, label %3, !dbg !12002, !llvm.loop !12015

8:                                                ; preds = %3
  ret void, !dbg !12016
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #18 !dbg !12017 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12019, metadata !DIExpression()), !dbg !12023
  call void @llvm.dbg.value(metadata i32 %1, metadata !12020, metadata !DIExpression()), !dbg !12023
  call void @llvm.dbg.value(metadata i32 %2, metadata !12021, metadata !DIExpression()), !dbg !12023
  call void @llvm.dbg.value(metadata i32 0, metadata !12022, metadata !DIExpression()), !dbg !12023
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12024
  %5 = load volatile i32, i32* %4, align 4, !dbg !12024
  %6 = and i32 %5, -5633, !dbg !12024
  %7 = or i32 %2, %1, !dbg !12024
  %8 = or i32 %7, %6, !dbg !12024
  store volatile i32 %8, i32* %4, align 4, !dbg !12024
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12025
  %10 = load volatile i32, i32* %9, align 4, !dbg !12025
  %11 = and i32 %10, -12289, !dbg !12025
  store volatile i32 %11, i32* %9, align 4, !dbg !12025
  ret void, !dbg !12026
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12027 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12029, metadata !DIExpression()), !dbg !12030
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12031
  %3 = load volatile i32, i32* %2, align 4, !dbg !12031
  %4 = or i32 %3, 8, !dbg !12031
  store volatile i32 %4, i32* %2, align 4, !dbg !12031
  ret void, !dbg !12032
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !12033 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !12037, metadata !DIExpression()), !dbg !12040
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !12038, metadata !DIExpression()), !dbg !12040
  call void @llvm.dbg.value(metadata i32 0, metadata !12039, metadata !DIExpression()), !dbg !12040
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !12041
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !12041
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !12042
  %5 = load i8, i8* %4, align 4, !dbg !12042
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !12043
  ret i32 %6, !dbg !12044
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.185(%struct.device* noundef %0) unnamed_addr #1 !dbg !12045 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12047, metadata !DIExpression()), !dbg !12048
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !12049
  ret i1 %2, !dbg !12050
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #18 !dbg !12051 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12053, metadata !DIExpression()), !dbg !12054
  tail call fastcc void @__NVIC_SetPriority.187() #28, !dbg !12055
  store i32 8399, i32* @last_load, align 4, !dbg !12056
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12057
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12058
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12059
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12060
  %3 = or i32 %2, 7, !dbg !12060
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12060
  ret i32 0, !dbg !12061
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.187() unnamed_addr #18 !dbg !12062 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !12064, metadata !DIExpression()), !dbg !12066
  call void @llvm.dbg.value(metadata i32 1, metadata !12065, metadata !DIExpression()), !dbg !12066
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !12067
  ret void, !dbg !12070
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !12071 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12073, metadata !DIExpression()), !dbg !12075
  %2 = tail call fastcc i32 @elapsed() #28, !dbg !12076
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12077
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12078
  %5 = add i32 %4, %3, !dbg !12078
  store i32 %5, i32* @cycle_count, align 4, !dbg !12078
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12079
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12080
  %7 = sub i32 %5, %6, !dbg !12083
  %8 = udiv i32 %7, 8400, !dbg !12084
  call void @llvm.dbg.value(metadata i32 %8, metadata !12074, metadata !DIExpression()), !dbg !12075
  %9 = mul nuw i32 %8, 8400, !dbg !12085
  %10 = add i32 %9, %6, !dbg !12086
  store i32 %10, i32* @announced_cycles, align 4, !dbg !12086
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !12087
  tail call void @z_arm_int_exit() #27, !dbg !12088
  ret void, !dbg !12089
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #18 !dbg !12090 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12095
  call void @llvm.dbg.value(metadata i32 %1, metadata !12092, metadata !DIExpression()), !dbg !12096
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12097
  call void @llvm.dbg.value(metadata i32 %2, metadata !12093, metadata !DIExpression()), !dbg !12096
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12098
  call void @llvm.dbg.value(metadata i32 %3, metadata !12094, metadata !DIExpression()), !dbg !12096
  %4 = and i32 %2, 65536, !dbg !12099
  %5 = icmp ne i32 %4, 0, !dbg !12099
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !12101
  %8 = load i32, i32* @last_load, align 4, !dbg !12096
  br i1 %7, label %9, label %13, !dbg !12101

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12102
  %11 = add i32 %10, %8, !dbg !12102
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !12102
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12104
  br label %13, !dbg !12105

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !12106
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12107
  %16 = add i32 %14, %15, !dbg !12108
  ret i32 %16, !dbg !12109
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !12110 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12114, metadata !DIExpression()), !dbg !12127
  call void @llvm.dbg.value(metadata i1 %1, metadata !12115, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12127
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !12128
  br i1 %4, label %5, label %8, !dbg !12128

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12130
  %7 = and i32 %6, -2, !dbg !12130
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12130
  store i32 -16777216, i32* @last_load, align 4, !dbg !12132
  br label %60, !dbg !12133

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !12134
  call void @llvm.dbg.value(metadata i32 %9, metadata !12119, metadata !DIExpression()), !dbg !12127
  br i1 %3, label %18, label %10, !dbg !12135

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !12135
  call void @llvm.dbg.value(metadata i32 undef, metadata !12114, metadata !DIExpression()), !dbg !12127
  %12 = icmp slt i32 %11, 1, !dbg !12136
  br i1 %12, label %18, label %13, !dbg !12136

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !12136
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !12136
  %16 = mul nuw nsw i32 %15, 8400, !dbg !12136
  %17 = add nuw nsw i32 %16, 8399, !dbg !12136
  br label %18, !dbg !12136

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12114, metadata !DIExpression()), !dbg !12127
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12137, metadata !DIExpression()) #26, !dbg !12144
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12146, !srcloc !12152
  call void @llvm.dbg.value(metadata i32 undef, metadata !12149, metadata !DIExpression()) #26, !dbg !12153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12150, metadata !DIExpression()) #26, !dbg !12153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12143, metadata !DIExpression()) #26, !dbg !12144
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12154
  br i1 %21, label %23, label %22, !dbg !12157

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.188, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.189, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.190, i32 0, i32 0), i32 noundef 148) #27, !dbg !12158
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.191, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12158
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.190, i32 0, i32 0), i32 noundef 148) #27, !dbg !12158
  unreachable, !dbg !12158

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !12146
  call void @llvm.dbg.value(metadata i32 %24, metadata !12149, metadata !DIExpression()) #26, !dbg !12153
  call void @llvm.dbg.value(metadata i32 %24, metadata !12143, metadata !DIExpression()) #26, !dbg !12144
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12160
  call void @llvm.dbg.value(metadata i32 %24, metadata !12120, metadata !DIExpression()), !dbg !12127
  %25 = tail call fastcc i32 @elapsed() #28, !dbg !12161
  call void @llvm.dbg.value(metadata i32 %25, metadata !12125, metadata !DIExpression()), !dbg !12127
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12162
  call void @llvm.dbg.value(metadata i32 %26, metadata !12117, metadata !DIExpression()), !dbg !12127
  %27 = load i32, i32* @cycle_count, align 4, !dbg !12163
  %28 = add i32 %27, %25, !dbg !12163
  store i32 %28, i32* @cycle_count, align 4, !dbg !12163
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12164
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !12165
  %30 = sub i32 %28, %29, !dbg !12166
  call void @llvm.dbg.value(metadata i32 %30, metadata !12126, metadata !DIExpression()), !dbg !12127
  %31 = icmp slt i32 %30, 0, !dbg !12167
  br i1 %31, label %41, label %32, !dbg !12169

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !12116, metadata !DIExpression()), !dbg !12127
  call void @llvm.dbg.value(metadata i32 undef, metadata !12116, metadata !DIExpression()), !dbg !12127
  %33 = add nuw i32 %19, %30, !dbg !12170
  %34 = urem i32 %33, 8400, !dbg !12172
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !12116, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12127
  %35 = sub nuw nsw i32 %19, %34, !dbg !12173
  call void @llvm.dbg.value(metadata i32 %35, metadata !12116, metadata !DIExpression()), !dbg !12127
  %36 = icmp ugt i32 %35, 1024, !dbg !12174
  br i1 %36, label %37, label %39, !dbg !12174

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !12116, metadata !DIExpression()), !dbg !12127
  %38 = icmp ugt i32 %35, 16766400, !dbg !12175
  br i1 %38, label %41, label %39, !dbg !12177

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !12178
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12179
  call void @llvm.dbg.value(metadata i32 %43, metadata !12118, metadata !DIExpression()), !dbg !12127
  %44 = add nsw i32 %42, -1, !dbg !12180
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12181
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12182
  %45 = icmp ult i32 %26, %43, !dbg !12183
  br i1 %45, label %46, label %51, !dbg !12185

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !12186
  %48 = add i32 %26, %9, !dbg !12188
  %49 = sub i32 %48, %43, !dbg !12189
  %50 = add i32 %49, %47, !dbg !12186
  br label %55, !dbg !12190

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !12191
  %53 = load i32, i32* @cycle_count, align 4, !dbg !12193
  %54 = add i32 %52, %53, !dbg !12193
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !12194
  store i32 %56, i32* @cycle_count, align 4, !dbg !12194
  call void @llvm.dbg.value(metadata i32 undef, metadata !12195, metadata !DIExpression()) #26, !dbg !12201
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12200, metadata !DIExpression()) #26, !dbg !12201
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12203
  br i1 %57, label %59, label %58, !dbg !12206

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.188, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.192, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.190, i32 0, i32 0), i32 noundef 194) #27, !dbg !12207
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.193, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12207
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.190, i32 0, i32 0), i32 noundef 194) #27, !dbg !12207
  unreachable, !dbg !12207

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !12195, metadata !DIExpression()) #26, !dbg !12201
  call void @llvm.dbg.value(metadata i32 %24, metadata !12209, metadata !DIExpression()) #26, !dbg !12212
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #26, !dbg !12214, !srcloc !12215
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !12216
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !12217 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12137, metadata !DIExpression()) #26, !dbg !12221
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12223, !srcloc !12152
  call void @llvm.dbg.value(metadata i32 undef, metadata !12149, metadata !DIExpression()) #26, !dbg !12225
  call void @llvm.dbg.value(metadata i32 undef, metadata !12150, metadata !DIExpression()) #26, !dbg !12225
  call void @llvm.dbg.value(metadata i32 undef, metadata !12143, metadata !DIExpression()) #26, !dbg !12221
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12226
  br i1 %2, label %4, label %3, !dbg !12227

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.188, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.189, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.190, i32 0, i32 0), i32 noundef 148) #27, !dbg !12228
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.191, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12228
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.190, i32 0, i32 0), i32 noundef 148) #27, !dbg !12228
  unreachable, !dbg !12228

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12149, metadata !DIExpression()) #26, !dbg !12225
  call void @llvm.dbg.value(metadata i32 undef, metadata !12143, metadata !DIExpression()) #26, !dbg !12221
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12229
  call void @llvm.dbg.value(metadata i32 undef, metadata !12219, metadata !DIExpression()), !dbg !12230
  %5 = tail call fastcc i32 @elapsed() #28, !dbg !12231
  %6 = load i32, i32* @cycle_count, align 4, !dbg !12232
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !12233
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !12220, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12230
  call void @llvm.dbg.value(metadata i32 undef, metadata !12195, metadata !DIExpression()) #26, !dbg !12234
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12200, metadata !DIExpression()) #26, !dbg !12234
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12236
  br i1 %8, label %10, label %9, !dbg !12237

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.188, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.192, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.190, i32 0, i32 0), i32 noundef 194) #27, !dbg !12238
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.193, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12238
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.190, i32 0, i32 0), i32 noundef 194) #27, !dbg !12238
  unreachable, !dbg !12238

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !12239
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !12220, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12230
  %12 = sub i32 %11, %7, !dbg !12240
  call void @llvm.dbg.value(metadata i32 %12, metadata !12220, metadata !DIExpression()), !dbg !12230
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !12223
  call void @llvm.dbg.value(metadata i32 %13, metadata !12149, metadata !DIExpression()) #26, !dbg !12225
  call void @llvm.dbg.value(metadata i32 %13, metadata !12143, metadata !DIExpression()) #26, !dbg !12221
  call void @llvm.dbg.value(metadata i32 %13, metadata !12219, metadata !DIExpression()), !dbg !12230
  call void @llvm.dbg.value(metadata i32 undef, metadata !12195, metadata !DIExpression()) #26, !dbg !12234
  call void @llvm.dbg.value(metadata i32 undef, metadata !12209, metadata !DIExpression()) #26, !dbg !12241
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #26, !dbg !12243, !srcloc !12215
  %14 = udiv i32 %12, 8400, !dbg !12244
  ret i32 %14, !dbg !12245
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !12246 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12137, metadata !DIExpression()) #26, !dbg !12250
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12252, !srcloc !12152
  call void @llvm.dbg.value(metadata i32 undef, metadata !12149, metadata !DIExpression()) #26, !dbg !12254
  call void @llvm.dbg.value(metadata i32 undef, metadata !12150, metadata !DIExpression()) #26, !dbg !12254
  call void @llvm.dbg.value(metadata i32 undef, metadata !12143, metadata !DIExpression()) #26, !dbg !12250
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12255
  br i1 %2, label %4, label %3, !dbg !12256

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.188, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.189, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.190, i32 0, i32 0), i32 noundef 148) #27, !dbg !12257
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.191, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12257
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.190, i32 0, i32 0), i32 noundef 148) #27, !dbg !12257
  unreachable, !dbg !12257

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12149, metadata !DIExpression()) #26, !dbg !12254
  call void @llvm.dbg.value(metadata i32 undef, metadata !12143, metadata !DIExpression()) #26, !dbg !12250
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12258
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()), !dbg !12259
  %5 = tail call fastcc i32 @elapsed() #28, !dbg !12260
  %6 = load i32, i32* @cycle_count, align 4, !dbg !12261
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !12249, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !12259
  call void @llvm.dbg.value(metadata i32 undef, metadata !12195, metadata !DIExpression()) #26, !dbg !12262
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12200, metadata !DIExpression()) #26, !dbg !12262
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12264
  br i1 %7, label %9, label %8, !dbg !12265

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.188, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.192, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.190, i32 0, i32 0), i32 noundef 194) #27, !dbg !12266
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.193, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12266
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.190, i32 0, i32 0), i32 noundef 194) #27, !dbg !12266
  unreachable, !dbg !12266

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !12267
  call void @llvm.dbg.value(metadata i32 %10, metadata !12249, metadata !DIExpression()), !dbg !12259
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !12252
  call void @llvm.dbg.value(metadata i32 %11, metadata !12149, metadata !DIExpression()) #26, !dbg !12254
  call void @llvm.dbg.value(metadata i32 %11, metadata !12143, metadata !DIExpression()) #26, !dbg !12250
  call void @llvm.dbg.value(metadata i32 %11, metadata !12248, metadata !DIExpression()), !dbg !12259
  call void @llvm.dbg.value(metadata i32 undef, metadata !12195, metadata !DIExpression()) #26, !dbg !12262
  call void @llvm.dbg.value(metadata i32 undef, metadata !12209, metadata !DIExpression()) #26, !dbg !12268
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #26, !dbg !12270, !srcloc !12215
  ret i32 %10, !dbg !12271
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #18 !dbg !12272 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12273
  %2 = icmp eq i32 %1, -16777216, !dbg !12275
  br i1 %2, label %3, label %6, !dbg !12276

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12277
  %5 = or i32 %4, 1, !dbg !12277
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12277
  br label %6, !dbg !12279

6:                                                ; preds = %3, %0
  ret void, !dbg !12280
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #18 !dbg !12281 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12282
  %2 = and i32 %1, -2, !dbg !12282
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12282
  ret void, !dbg !12283
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #17 !dbg !12284 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12310, metadata !DIExpression()), !dbg !12313
  call void @llvm.dbg.value(metadata i8 %1, metadata !12311, metadata !DIExpression()), !dbg !12313
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12312, metadata !DIExpression()), !dbg !12313
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12314
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12314
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12313
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12315
  %8 = load i8, i8* %6, align 4, !dbg !12316
  %9 = zext i8 %8 to i32, !dbg !12317
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12317
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12318
  br i1 %11, label %18, label %24, !dbg !12319

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12313
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12315
  %14 = load i8, i8* %6, align 4, !dbg !12316
  %15 = zext i8 %14 to i32, !dbg !12317
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12317
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12318
  br i1 %17, label %18, label %24, !dbg !12319, !llvm.loop !12320

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12322
  %21 = load i8, i8* %20, align 1, !dbg !12322
  %22 = icmp eq i8 %21, %1, !dbg !12325
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12326
  br i1 %22, label %24, label %12, !dbg !12327

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12313
  ret i32 %25, !dbg !12328
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12329 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12340, metadata !DIExpression()), !dbg !12356
  call void @llvm.dbg.value(metadata i8 %1, metadata !12341, metadata !DIExpression()), !dbg !12356
  call void @llvm.dbg.value(metadata i32 %2, metadata !12342, metadata !DIExpression()), !dbg !12356
  call void @llvm.dbg.value(metadata i32 0, metadata !12345, metadata !DIExpression()), !dbg !12356
  call void @llvm.dbg.value(metadata i32 0, metadata !12346, metadata !DIExpression()), !dbg !12356
  call void @llvm.dbg.value(metadata i8 0, metadata !12347, metadata !DIExpression()), !dbg !12357
  %4 = icmp eq i8 %1, 0, !dbg !12358
  br i1 %4, label %35, label %5, !dbg !12359

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12358
  br label %9, !dbg !12359

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12347, metadata !DIExpression()), !dbg !12357
  call void @llvm.dbg.value(metadata i32 %29, metadata !12345, metadata !DIExpression()), !dbg !12356
  %8 = icmp eq i32 %34, %6, !dbg !12358
  br i1 %8, label %35, label %9, !dbg !12359, !llvm.loop !12360

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12347, metadata !DIExpression()), !dbg !12357
  call void @llvm.dbg.value(metadata i32 %11, metadata !12345, metadata !DIExpression()), !dbg !12356
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !12362
  %13 = load i32, i32* %12, align 4, !dbg !12362
  call void @llvm.dbg.value(metadata i32 %13, metadata !12344, metadata !DIExpression()), !dbg !12356
  %14 = and i32 %13, 31, !dbg !12363
  %15 = icmp ult i32 %14, 16, !dbg !12364
  br i1 %15, label %16, label %20, !dbg !12365

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12366
  %18 = load i32, i32* %17, align 4, !dbg !12366
  %19 = or i32 %18, 32, !dbg !12368
  call void @llvm.dbg.value(metadata i32 %19, metadata !12345, metadata !DIExpression()), !dbg !12356
  br label %28, !dbg !12369

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12370

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12371
  %23 = load i32, i32* %22, align 4, !dbg !12371
  call void @llvm.dbg.value(metadata i32 %23, metadata !12349, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12372
  %24 = lshr i32 %23, 7, !dbg !12373
  %25 = and i32 %24, 16, !dbg !12373
  %26 = or i32 %25, %23, !dbg !12373
  call void @llvm.dbg.value(metadata i32 %26, metadata !12345, metadata !DIExpression()), !dbg !12356
  br label %28, !dbg !12374

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !12356
  call void @llvm.dbg.value(metadata i32 %29, metadata !12345, metadata !DIExpression()), !dbg !12356
  %30 = lshr i32 %13, 5, !dbg !12375
  %31 = and i32 %30, 255, !dbg !12375
  call void @llvm.dbg.value(metadata i32 %31, metadata !12343, metadata !DIExpression()), !dbg !12356
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #28, !dbg !12376
  call void @llvm.dbg.value(metadata i32 %32, metadata !12346, metadata !DIExpression()), !dbg !12356
  %33 = icmp slt i32 %32, 0, !dbg !12377
  %34 = add nuw nsw i32 %10, 1, !dbg !12379
  call void @llvm.dbg.value(metadata i32 %34, metadata !12347, metadata !DIExpression()), !dbg !12357
  br i1 %33, label %35, label %7, !dbg !12380

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12381
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12382 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12386, metadata !DIExpression()), !dbg !12390
  call void @llvm.dbg.value(metadata i32 %1, metadata !12387, metadata !DIExpression()), !dbg !12390
  call void @llvm.dbg.value(metadata i32 %2, metadata !12388, metadata !DIExpression()), !dbg !12390
  %4 = icmp ugt i32 %0, 175, !dbg !12391
  br i1 %4, label %16, label %5, !dbg !12393

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12394
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12395
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12395
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12389, metadata !DIExpression()), !dbg !12390
  %9 = add nsw i32 %6, -8, !dbg !12396
  %10 = icmp ult i32 %9, 3, !dbg !12396
  br i1 %10, label %16, label %11, !dbg !12398

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.200(%struct.device* noundef %8) #28, !dbg !12399
  br i1 %12, label %13, label %16, !dbg !12400

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !12401
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #27, !dbg !12402
  br label %16, !dbg !12403

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12390
  ret i32 %17, !dbg !12404
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.200(%struct.device* noundef %0) unnamed_addr #1 !dbg !12405 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12409, metadata !DIExpression()), !dbg !12410
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !12411, !srcloc !12413
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.201(%struct.device* noundef %0) #28, !dbg !12414
  ret i1 %2, !dbg !12415
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.201(%struct.device* noundef %0) unnamed_addr #1 !dbg !12416 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12418, metadata !DIExpression()), !dbg !12419
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !12420
  ret i1 %2, !dbg !12421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #5 !dbg !12422 {
  ret void, !dbg !12423
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #7 !dbg !12424 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12426, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata i32 0, metadata !12427, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata i32 2, metadata !12428, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata i32 0, metadata !12429, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata i32 2, metadata !12430, metadata !DIExpression()), !dbg !12431
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12432
  %2 = and i32 %1, 12, !dbg !12433
  call void @llvm.dbg.value(metadata i32 %2, metadata !12426, metadata !DIExpression()), !dbg !12431
  %3 = icmp eq i32 %2, 8, !dbg !12434
  br i1 %3, label %4, label %18, !dbg !12434

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12435
  call void @llvm.dbg.value(metadata i32 %5, metadata !12429, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12431
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12437
  %7 = and i32 %6, 63, !dbg !12438
  call void @llvm.dbg.value(metadata i32 %7, metadata !12430, metadata !DIExpression()), !dbg !12431
  %8 = udiv i32 16000000, %7, !dbg !12439
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12439
  %10 = lshr i32 %9, 6, !dbg !12439
  %11 = and i32 %10, 511, !dbg !12439
  %12 = mul i32 %11, %8, !dbg !12439
  call void @llvm.dbg.value(metadata i32 %12, metadata !12427, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata i32 %12, metadata !12427, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata i32 %12, metadata !12427, metadata !DIExpression()), !dbg !12431
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12441
  %14 = lshr i32 %13, 15, !dbg !12442
  %15 = and i32 %14, 6, !dbg !12442
  %16 = add nuw nsw i32 %15, 2, !dbg !12442
  call void @llvm.dbg.value(metadata i32 %16, metadata !12428, metadata !DIExpression()), !dbg !12431
  %17 = udiv i32 %12, %16, !dbg !12443
  br label %18, !dbg !12444

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !12445
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12446
  %21 = lshr i32 %20, 4, !dbg !12447
  %22 = and i32 %21, 15, !dbg !12447
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !12448
  %24 = load i8, i8* %23, align 1, !dbg !12448
  %25 = zext i8 %24 to i32, !dbg !12448
  call void @llvm.dbg.value(metadata i32 %25, metadata !12426, metadata !DIExpression()), !dbg !12431
  %26 = lshr i32 %19, %25, !dbg !12449
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !12449
  ret void, !dbg !12450
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12451 {
  ret i32 0, !dbg !12456
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12457 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12483, metadata !DIExpression()), !dbg !12494
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12495
  br i1 %3, label %311, label %4, !dbg !12497

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12498
  %6 = load i32, i32* %5, align 4, !dbg !12498
  %7 = and i32 %6, 1, !dbg !12500
  %8 = icmp eq i32 %7, 0, !dbg !12501
  br i1 %8, label %66, label %9, !dbg !12502

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12503
  %11 = and i32 %10, 12, !dbg !12503
  %12 = icmp eq i32 %11, 4, !dbg !12506
  br i1 %12, label %21, label %13, !dbg !12507

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12508
  %15 = and i32 %14, 12, !dbg !12508
  %16 = icmp eq i32 %15, 8, !dbg !12509
  br i1 %16, label %17, label %29, !dbg !12510

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12511
  %19 = and i32 %18, 4194304, !dbg !12512
  %20 = icmp eq i32 %19, 0, !dbg !12513
  br i1 %20, label %29, label %21, !dbg !12514

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12515
  %23 = and i32 %22, 131072, !dbg !12515
  %24 = icmp eq i32 %23, 0, !dbg !12515
  br i1 %24, label %66, label %25, !dbg !12518

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12519
  %27 = load i32, i32* %26, align 4, !dbg !12519
  %28 = icmp eq i32 %27, 0, !dbg !12520
  br i1 %28, label %311, label %66, !dbg !12521

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12522
  %31 = load i32, i32* %30, align 4, !dbg !12522
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !12526

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12527
  %34 = or i32 %33, 65536, !dbg !12527
  br label %45, !dbg !12527

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12529
  %37 = or i32 %36, 262144, !dbg !12529
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12529
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12529
  %39 = or i32 %38, 65536, !dbg !12529
  br label %45, !dbg !12529

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12532
  %42 = and i32 %41, -65537, !dbg !12532
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12532
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12532
  %44 = and i32 %43, -262145, !dbg !12532
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12534
  %47 = load i32, i32* %30, align 4, !dbg !12535
  %48 = icmp eq i32 %47, 0, !dbg !12537
  %49 = tail call i32 @HAL_GetTick() #27, !dbg !12538
  call void @llvm.dbg.value(metadata i32 %49, metadata !12484, metadata !DIExpression()), !dbg !12494
  call void @llvm.dbg.value(metadata i32 %49, metadata !12484, metadata !DIExpression()), !dbg !12494
  br i1 %48, label %58, label %50, !dbg !12539

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12540
  %52 = and i32 %51, 131072, !dbg !12542
  %53 = icmp eq i32 %52, 0, !dbg !12542
  br i1 %53, label %54, label %66, !dbg !12543

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #27, !dbg !12544
  %56 = sub i32 %55, %49, !dbg !12547
  %57 = icmp ugt i32 %56, 100, !dbg !12548
  br i1 %57, label %311, label %50, !dbg !12549, !llvm.loop !12550

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12552
  %60 = and i32 %59, 131072, !dbg !12552
  %61 = icmp eq i32 %60, 0, !dbg !12552
  br i1 %61, label %66, label %62, !dbg !12554

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #27, !dbg !12555
  %64 = sub i32 %63, %49, !dbg !12558
  %65 = icmp ugt i32 %64, 100, !dbg !12559
  br i1 %65, label %311, label %58, !dbg !12560, !llvm.loop !12561

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !12563
  %68 = and i32 %67, 2, !dbg !12565
  %69 = icmp eq i32 %68, 0, !dbg !12566
  br i1 %69, label %121, label %70, !dbg !12567

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12568
  %72 = and i32 %71, 12, !dbg !12568
  %73 = icmp eq i32 %72, 0, !dbg !12571
  br i1 %73, label %82, label %74, !dbg !12572

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12573
  %76 = and i32 %75, 12, !dbg !12573
  %77 = icmp eq i32 %76, 8, !dbg !12574
  br i1 %77, label %78, label %90, !dbg !12575

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12576
  %80 = and i32 %79, 4194304, !dbg !12577
  %81 = icmp eq i32 %80, 0, !dbg !12578
  br i1 %81, label %82, label %90, !dbg !12579

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12580
  %84 = and i32 %83, 2, !dbg !12580
  %85 = icmp eq i32 %84, 0, !dbg !12580
  br i1 %85, label %114, label %86, !dbg !12583

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12584
  %88 = load i32, i32* %87, align 4, !dbg !12584
  %89 = icmp eq i32 %88, 1, !dbg !12585
  br i1 %89, label %114, label %311, !dbg !12586

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12587
  %92 = load i32, i32* %91, align 4, !dbg !12587
  %93 = icmp eq i32 %92, 0, !dbg !12590
  br i1 %93, label %104, label %94, !dbg !12591

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12592
  %95 = tail call i32 @HAL_GetTick() #27, !dbg !12594
  call void @llvm.dbg.value(metadata i32 %95, metadata !12484, metadata !DIExpression()), !dbg !12494
  br label %96, !dbg !12595

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12596
  %98 = and i32 %97, 2, !dbg !12597
  %99 = icmp eq i32 %98, 0, !dbg !12597
  br i1 %99, label %100, label %114, !dbg !12595

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #27, !dbg !12598
  %102 = sub i32 %101, %95, !dbg !12601
  %103 = icmp ugt i32 %102, 2, !dbg !12602
  br i1 %103, label %311, label %96, !dbg !12603, !llvm.loop !12604

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12606
  %105 = tail call i32 @HAL_GetTick() #27, !dbg !12608
  call void @llvm.dbg.value(metadata i32 %105, metadata !12484, metadata !DIExpression()), !dbg !12494
  br label %106, !dbg !12609

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12610
  %108 = and i32 %107, 2, !dbg !12610
  %109 = icmp eq i32 %108, 0, !dbg !12610
  br i1 %109, label %121, label %110, !dbg !12609

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #27, !dbg !12611
  %112 = sub i32 %111, %105, !dbg !12614
  %113 = icmp ugt i32 %112, 2, !dbg !12615
  br i1 %113, label %311, label %106, !dbg !12616, !llvm.loop !12617

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12619
  %116 = and i32 %115, -249, !dbg !12619
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12619
  %118 = load i32, i32* %117, align 4, !dbg !12619
  %119 = shl i32 %118, 3, !dbg !12619
  %120 = or i32 %119, %116, !dbg !12619
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12619
  br label %121, !dbg !12620

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12620
  %123 = and i32 %122, 8, !dbg !12622
  %124 = icmp eq i32 %123, 0, !dbg !12623
  br i1 %124, label %149, label %125, !dbg !12624

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12625
  %127 = load i32, i32* %126, align 4, !dbg !12625
  %128 = icmp eq i32 %127, 0, !dbg !12628
  br i1 %128, label %139, label %129, !dbg !12629

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12630
  %130 = tail call i32 @HAL_GetTick() #27, !dbg !12632
  call void @llvm.dbg.value(metadata i32 %130, metadata !12484, metadata !DIExpression()), !dbg !12494
  br label %131, !dbg !12633

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12634
  %133 = and i32 %132, 2, !dbg !12635
  %134 = icmp eq i32 %133, 0, !dbg !12635
  br i1 %134, label %135, label %149, !dbg !12633

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #27, !dbg !12636
  %137 = sub i32 %136, %130, !dbg !12639
  %138 = icmp ugt i32 %137, 2, !dbg !12640
  br i1 %138, label %311, label %131, !dbg !12641, !llvm.loop !12642

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12644
  %140 = tail call i32 @HAL_GetTick() #27, !dbg !12646
  call void @llvm.dbg.value(metadata i32 %140, metadata !12484, metadata !DIExpression()), !dbg !12494
  br label %141, !dbg !12647

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12648
  %143 = and i32 %142, 2, !dbg !12648
  %144 = icmp eq i32 %143, 0, !dbg !12648
  br i1 %144, label %149, label %145, !dbg !12647

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #27, !dbg !12649
  %147 = sub i32 %146, %140, !dbg !12652
  %148 = icmp ugt i32 %147, 2, !dbg !12653
  br i1 %148, label %311, label %141, !dbg !12654, !llvm.loop !12655

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12657
  %151 = and i32 %150, 4, !dbg !12658
  %152 = icmp eq i32 %151, 0, !dbg !12659
  br i1 %152, label %221, label %153, !dbg !12660

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !12486, metadata !DIExpression()), !dbg !12661
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12662
  %155 = and i32 %154, 268435456, !dbg !12662
  %156 = icmp eq i32 %155, 0, !dbg !12662
  br i1 %156, label %157, label %164, !dbg !12663

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12664
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12664
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12490, metadata !DIExpression()), !dbg !12664
  store volatile i32 0, i32* %2, align 4, !dbg !12664
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12664
  %160 = or i32 %159, 268435456, !dbg !12664
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12664
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12664
  %162 = and i32 %161, 268435456, !dbg !12664
  store volatile i32 %162, i32* %2, align 4, !dbg !12664
  %163 = load volatile i32, i32* %2, align 4, !dbg !12664
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12665
  call void @llvm.dbg.value(metadata i32 1, metadata !12486, metadata !DIExpression()), !dbg !12661
  br label %164, !dbg !12666

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12486, metadata !DIExpression()), !dbg !12661
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12667
  %166 = and i32 %165, 256, !dbg !12667
  %167 = icmp eq i32 %166, 0, !dbg !12667
  br i1 %167, label %168, label %180, !dbg !12669

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12670
  %170 = or i32 %169, 256, !dbg !12670
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12670
  %171 = tail call i32 @HAL_GetTick() #27, !dbg !12672
  call void @llvm.dbg.value(metadata i32 %171, metadata !12484, metadata !DIExpression()), !dbg !12494
  br label %172, !dbg !12673

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12674
  %174 = and i32 %173, 256, !dbg !12674
  %175 = icmp eq i32 %174, 0, !dbg !12674
  br i1 %175, label %176, label %180, !dbg !12673

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #27, !dbg !12675
  %178 = sub i32 %177, %171, !dbg !12678
  %179 = icmp ugt i32 %178, 2, !dbg !12679
  br i1 %179, label %311, label %172, !dbg !12680, !llvm.loop !12681

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12683
  %182 = load i32, i32* %181, align 4, !dbg !12683
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12686

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12687
  %185 = or i32 %184, 1, !dbg !12687
  br label %196, !dbg !12687

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12689
  %188 = or i32 %187, 4, !dbg !12689
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12689
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12689
  %190 = or i32 %189, 1, !dbg !12689
  br label %196, !dbg !12689

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12692
  %193 = and i32 %192, -2, !dbg !12692
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12692
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12692
  %195 = and i32 %194, -5, !dbg !12692
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12694
  %198 = load i32, i32* %181, align 4, !dbg !12695
  %199 = icmp eq i32 %198, 0, !dbg !12697
  %200 = tail call i32 @HAL_GetTick() #27, !dbg !12698
  call void @llvm.dbg.value(metadata i32 %200, metadata !12484, metadata !DIExpression()), !dbg !12494
  call void @llvm.dbg.value(metadata i32 %200, metadata !12484, metadata !DIExpression()), !dbg !12494
  br i1 %199, label %209, label %201, !dbg !12699

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12700
  %203 = and i32 %202, 2, !dbg !12702
  %204 = icmp eq i32 %203, 0, !dbg !12702
  br i1 %204, label %205, label %217, !dbg !12703

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #27, !dbg !12704
  %207 = sub i32 %206, %200, !dbg !12707
  %208 = icmp ugt i32 %207, 5000, !dbg !12708
  br i1 %208, label %311, label %201, !dbg !12709, !llvm.loop !12710

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12712
  %211 = and i32 %210, 2, !dbg !12712
  %212 = icmp eq i32 %211, 0, !dbg !12712
  br i1 %212, label %217, label %213, !dbg !12714

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #27, !dbg !12715
  %215 = sub i32 %214, %200, !dbg !12718
  %216 = icmp ugt i32 %215, 5000, !dbg !12719
  br i1 %216, label %311, label %209, !dbg !12720, !llvm.loop !12721

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12723

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12724
  %220 = and i32 %219, -268435457, !dbg !12724
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12724
  br label %221, !dbg !12727

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12728
  %223 = load i32, i32* %222, align 4, !dbg !12728
  %224 = icmp eq i32 %223, 0, !dbg !12730
  br i1 %224, label %310, label %225, !dbg !12731

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12732
  %227 = and i32 %226, 12, !dbg !12732
  %228 = icmp eq i32 %227, 8, !dbg !12735
  br i1 %228, label %277, label %229, !dbg !12736

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12737
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12740
  %231 = tail call i32 @HAL_GetTick() #27, !dbg !12740
  call void @llvm.dbg.value(metadata i32 %231, metadata !12484, metadata !DIExpression()), !dbg !12494
  call void @llvm.dbg.value(metadata i32 %231, metadata !12484, metadata !DIExpression()), !dbg !12494
  br i1 %230, label %232, label %269, !dbg !12741

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12742
  %234 = and i32 %233, 33554432, !dbg !12742
  %235 = icmp eq i32 %234, 0, !dbg !12742
  br i1 %235, label %240, label %236, !dbg !12744

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #27, !dbg !12745
  %238 = sub i32 %237, %231, !dbg !12748
  %239 = icmp ugt i32 %238, 2, !dbg !12749
  br i1 %239, label %311, label %232, !dbg !12750, !llvm.loop !12751

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12753
  %242 = load i32, i32* %241, align 4, !dbg !12753
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12753
  %244 = load i32, i32* %243, align 4, !dbg !12753
  %245 = or i32 %244, %242, !dbg !12753
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12753
  %247 = load i32, i32* %246, align 4, !dbg !12753
  %248 = shl i32 %247, 6, !dbg !12753
  %249 = or i32 %245, %248, !dbg !12753
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12753
  %251 = load i32, i32* %250, align 4, !dbg !12753
  %252 = shl i32 %251, 15, !dbg !12753
  %253 = add i32 %252, -65536, !dbg !12753
  %254 = and i32 %253, -65536, !dbg !12753
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12753
  %256 = load i32, i32* %255, align 4, !dbg !12753
  %257 = shl i32 %256, 24, !dbg !12753
  %258 = or i32 %249, %257, !dbg !12753
  %259 = or i32 %258, %254, !dbg !12753
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12753
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12754
  %260 = tail call i32 @HAL_GetTick() #27, !dbg !12755
  call void @llvm.dbg.value(metadata i32 %260, metadata !12484, metadata !DIExpression()), !dbg !12494
  br label %261, !dbg !12756

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12757
  %263 = and i32 %262, 33554432, !dbg !12758
  %264 = icmp eq i32 %263, 0, !dbg !12758
  br i1 %264, label %265, label %310, !dbg !12756

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #27, !dbg !12759
  %267 = sub i32 %266, %260, !dbg !12762
  %268 = icmp ugt i32 %267, 2, !dbg !12763
  br i1 %268, label %311, label %261, !dbg !12764, !llvm.loop !12765

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12767
  %271 = and i32 %270, 33554432, !dbg !12767
  %272 = icmp eq i32 %271, 0, !dbg !12767
  br i1 %272, label %310, label %273, !dbg !12769

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #27, !dbg !12770
  %275 = sub i32 %274, %231, !dbg !12773
  %276 = icmp ugt i32 %275, 2, !dbg !12774
  br i1 %276, label %311, label %269, !dbg !12775, !llvm.loop !12776

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12778
  br i1 %278, label %311, label %279, !dbg !12781

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12782
  call void @llvm.dbg.value(metadata i32 %280, metadata !12485, metadata !DIExpression()), !dbg !12494
  %281 = and i32 %280, 4194304, !dbg !12784
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12786
  %283 = load i32, i32* %282, align 4, !dbg !12786
  %284 = icmp eq i32 %281, %283, !dbg !12787
  br i1 %284, label %285, label %311, !dbg !12788

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12789
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12790
  %288 = load i32, i32* %287, align 4, !dbg !12790
  %289 = icmp eq i32 %286, %288, !dbg !12791
  br i1 %289, label %290, label %311, !dbg !12792

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12793
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12794
  %293 = load i32, i32* %292, align 4, !dbg !12794
  %294 = shl i32 %293, 6, !dbg !12795
  %295 = icmp eq i32 %291, %294, !dbg !12796
  br i1 %295, label %296, label %311, !dbg !12797

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12798
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12799
  %299 = load i32, i32* %298, align 4, !dbg !12799
  %300 = shl i32 %299, 15, !dbg !12800
  %301 = add i32 %300, -65536, !dbg !12800
  %302 = and i32 %301, -65536, !dbg !12800
  %303 = icmp eq i32 %297, %302, !dbg !12801
  br i1 %303, label %304, label %311, !dbg !12802

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12803
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12804
  %307 = load i32, i32* %306, align 4, !dbg !12804
  %308 = shl i32 %307, 24, !dbg !12805
  %309 = icmp eq i32 %305, %308, !dbg !12806
  br i1 %309, label %310, label %311, !dbg !12807

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !12808

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !12494
  ret i32 %312, !dbg !12809
}

; Function Attrs: optsize
declare !dbg !12810 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.msg* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12812 {
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !12825, metadata !DIExpression()), !dbg !12828
  call void @llvm.dbg.value(metadata i32 %1, metadata !12826, metadata !DIExpression()), !dbg !12828
  %3 = icmp eq %struct.msg* %0, null, !dbg !12829
  br i1 %3, label %115, label %4, !dbg !12831

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12832
  %6 = and i32 %5, 7, !dbg !12832
  %7 = icmp ult i32 %6, %1, !dbg !12834
  br i1 %7, label %8, label %13, !dbg !12835

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12836
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12836
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12838
  %11 = and i32 %10, 7, !dbg !12838
  %12 = icmp eq i32 %11, %1, !dbg !12840
  br i1 %12, label %13, label %115, !dbg !12841

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 0, !dbg !12842
  %15 = load i32, i32* %14, align 4, !dbg !12842
  %16 = and i32 %15, 2, !dbg !12844
  %17 = icmp eq i32 %16, 0, !dbg !12845
  br i1 %17, label %39, label %18, !dbg !12846

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12847
  %20 = icmp eq i32 %19, 0, !dbg !12850
  br i1 %20, label %25, label %21, !dbg !12851

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12852
  %23 = or i32 %22, 7168, !dbg !12852
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12852
  %24 = load i32, i32* %14, align 4, !dbg !12854
  br label %25, !dbg !12856

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12854
  %27 = and i32 %26, 8, !dbg !12857
  %28 = icmp eq i32 %27, 0, !dbg !12858
  br i1 %28, label %32, label %29, !dbg !12859

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12860
  %31 = or i32 %30, 57344, !dbg !12860
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12860
  br label %32, !dbg !12862

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12863
  %34 = and i32 %33, -241, !dbg !12863
  %35 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 2, !dbg !12863
  %36 = load i32, i32* %35, align 4, !dbg !12863
  %37 = or i32 %34, %36, !dbg !12863
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12863
  %38 = load i32, i32* %14, align 4, !dbg !12864
  br label %39, !dbg !12866

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12864
  %41 = and i32 %40, 1, !dbg !12867
  %42 = icmp eq i32 %41, 0, !dbg !12868
  br i1 %42, label %73, label %43, !dbg !12869

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 1, !dbg !12870
  %45 = load i32, i32* %44, align 4, !dbg !12870
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12873

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12874
  %48 = and i32 %47, 131072, !dbg !12877
  %49 = icmp eq i32 %48, 0, !dbg !12877
  br i1 %49, label %115, label %58, !dbg !12878

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12879
  %52 = and i32 %51, 33554432, !dbg !12883
  %53 = icmp eq i32 %52, 0, !dbg !12883
  br i1 %53, label %115, label %58, !dbg !12884

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12885
  %56 = and i32 %55, 2, !dbg !12888
  %57 = icmp eq i32 %56, 0, !dbg !12888
  br i1 %57, label %115, label %58, !dbg !12889

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12890
  %60 = and i32 %59, -4, !dbg !12890
  %61 = or i32 %60, %45, !dbg !12890
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12890
  %62 = tail call i32 @HAL_GetTick() #27, !dbg !12891
  call void @llvm.dbg.value(metadata i32 %62, metadata !12827, metadata !DIExpression()), !dbg !12828
  br label %63, !dbg !12892

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12893
  %65 = and i32 %64, 12, !dbg !12893
  %66 = load i32, i32* %44, align 4, !dbg !12894
  %67 = shl i32 %66, 2, !dbg !12895
  %68 = icmp eq i32 %65, %67, !dbg !12896
  br i1 %68, label %73, label %69, !dbg !12892

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #27, !dbg !12897
  %71 = sub i32 %70, %62, !dbg !12900
  %72 = icmp ugt i32 %71, 5000, !dbg !12901
  br i1 %72, label %115, label %63, !dbg !12902, !llvm.loop !12903

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12905
  %75 = and i32 %74, 7, !dbg !12905
  %76 = icmp ugt i32 %75, %1, !dbg !12907
  br i1 %76, label %77, label %82, !dbg !12908

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12909
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12909
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12911
  %80 = and i32 %79, 7, !dbg !12911
  %81 = icmp eq i32 %80, %1, !dbg !12913
  br i1 %81, label %82, label %115, !dbg !12914

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12915
  %84 = and i32 %83, 4, !dbg !12917
  %85 = icmp eq i32 %84, 0, !dbg !12918
  br i1 %85, label %93, label %86, !dbg !12919

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12920
  %88 = and i32 %87, -7169, !dbg !12920
  %89 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 3, !dbg !12920
  %90 = load i32, i32* %89, align 4, !dbg !12920
  %91 = or i32 %88, %90, !dbg !12920
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12920
  %92 = load i32, i32* %14, align 4, !dbg !12922
  br label %93, !dbg !12924

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12922
  %95 = and i32 %94, 8, !dbg !12925
  %96 = icmp eq i32 %95, 0, !dbg !12926
  br i1 %96, label %104, label %97, !dbg !12927

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12928
  %99 = and i32 %98, -57345, !dbg !12928
  %100 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 4, !dbg !12928
  %101 = load i32, i32* %100, align 4, !dbg !12928
  %102 = shl i32 %101, 3, !dbg !12928
  %103 = or i32 %102, %99, !dbg !12928
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12928
  br label %104, !dbg !12930

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #28, !dbg !12931
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12932
  %107 = lshr i32 %106, 4, !dbg !12933
  %108 = and i32 %107, 15, !dbg !12933
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12934
  %110 = load i8, i8* %109, align 1, !dbg !12934
  %111 = zext i8 %110 to i32, !dbg !12934
  %112 = lshr i32 %105, %111, !dbg !12935
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12936
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12937
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #27, !dbg !12938
  br label %115, !dbg !12939

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12828
  ret i32 %116, !dbg !12940
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12941 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12943, metadata !DIExpression()), !dbg !12947
  call void @llvm.dbg.value(metadata i32 0, metadata !12944, metadata !DIExpression()), !dbg !12947
  call void @llvm.dbg.value(metadata i32 0, metadata !12945, metadata !DIExpression()), !dbg !12947
  call void @llvm.dbg.value(metadata i32 0, metadata !12946, metadata !DIExpression()), !dbg !12947
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12948
  %2 = and i32 %1, 12, !dbg !12949
  %3 = icmp eq i32 %2, 8, !dbg !12950
  br i1 %3, label %4, label %21, !dbg !12950

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12951
  %6 = and i32 %5, 63, !dbg !12954
  call void @llvm.dbg.value(metadata i32 %6, metadata !12943, metadata !DIExpression()), !dbg !12947
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12955
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12957
  %9 = lshr i32 %8, 6, !dbg !12957
  %10 = and i32 %9, 511, !dbg !12957
  %11 = zext i32 %10 to i64, !dbg !12957
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !12957
  %13 = zext i32 %6 to i64, !dbg !12957
  %14 = udiv i64 %12, %13, !dbg !12957
  %15 = trunc i64 %14 to i32, !dbg !12957
  call void @llvm.dbg.value(metadata i32 %15, metadata !12944, metadata !DIExpression()), !dbg !12947
  call void @llvm.dbg.value(metadata i32 %15, metadata !12944, metadata !DIExpression()), !dbg !12947
  call void @llvm.dbg.value(metadata i32 %15, metadata !12944, metadata !DIExpression()), !dbg !12947
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12958
  %17 = lshr i32 %16, 15, !dbg !12959
  %18 = and i32 %17, 6, !dbg !12959
  %19 = add nuw nsw i32 %18, 2, !dbg !12959
  call void @llvm.dbg.value(metadata i32 %19, metadata !12945, metadata !DIExpression()), !dbg !12947
  %20 = udiv i32 %15, %19, !dbg !12960
  call void @llvm.dbg.value(metadata i32 %20, metadata !12946, metadata !DIExpression()), !dbg !12947
  br label %21, !dbg !12961

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !12962
  call void @llvm.dbg.value(metadata i32 %22, metadata !12946, metadata !DIExpression()), !dbg !12947
  ret i32 %22, !dbg !12963
}

; Function Attrs: optsize
declare !dbg !12964 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12967 {
  %4 = alloca %struct.msg, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12971, metadata !DIExpression()), !dbg !12991
  call void @llvm.dbg.value(metadata i32 %1, metadata !12972, metadata !DIExpression()), !dbg !12991
  call void @llvm.dbg.value(metadata i32 %2, metadata !12973, metadata !DIExpression()), !dbg !12991
  %7 = bitcast %struct.msg* %4 to i8*, !dbg !12992
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #26, !dbg !12992
  call void @llvm.dbg.declare(metadata %struct.msg* %4, metadata !12974, metadata !DIExpression()), !dbg !12993
  %8 = icmp eq i32 %0, 0, !dbg !12994
  br i1 %8, label %9, label %23, !dbg !12995

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !12996
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !12996
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12984, metadata !DIExpression()), !dbg !12996
  store volatile i32 0, i32* %5, align 4, !dbg !12996
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12996
  %12 = or i32 %11, 1, !dbg !12996
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12996
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12996
  %14 = and i32 %13, 1, !dbg !12996
  store volatile i32 %14, i32* %5, align 4, !dbg !12996
  %15 = load volatile i32, i32* %5, align 4, !dbg !12996
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !12997
  %16 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 0, !dbg !12998
  store i32 256, i32* %16, align 4, !dbg !12999
  %17 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 1, !dbg !13000
  store i32 2, i32* %17, align 4, !dbg !13001
  %18 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 3, !dbg !13002
  store i32 3, i32* %18, align 4, !dbg !13003
  %19 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 2, !dbg !13004
  store i32 0, i32* %19, align 4, !dbg !13005
  %20 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 4, !dbg !13006
  store i32 0, i32* %20, align 4, !dbg !13007
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.msg* noundef nonnull %4) #27, !dbg !13008
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13009
  %22 = and i32 %21, -123731969, !dbg !13009
  br label %38, !dbg !13010

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !13011
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !13011
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12988, metadata !DIExpression()), !dbg !13011
  store volatile i32 0, i32* %6, align 4, !dbg !13011
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13011
  %26 = or i32 %25, 4, !dbg !13011
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13011
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13011
  %28 = and i32 %27, 4, !dbg !13011
  store volatile i32 %28, i32* %6, align 4, !dbg !13011
  %29 = load volatile i32, i32* %6, align 4, !dbg !13011
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !13012
  %30 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 0, !dbg !13013
  store i32 512, i32* %30, align 4, !dbg !13014
  %31 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 1, !dbg !13015
  store i32 2, i32* %31, align 4, !dbg !13016
  %32 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 3, !dbg !13017
  store i32 3, i32* %32, align 4, !dbg !13018
  %33 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 2, !dbg !13019
  store i32 0, i32* %33, align 4, !dbg !13020
  %34 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 4, !dbg !13021
  store i32 0, i32* %34, align 4, !dbg !13022
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.msg* noundef nonnull %4) #27, !dbg !13023
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13024
  %36 = and i32 %35, 134217727, !dbg !13024
  %37 = shl i32 %2, 3, !dbg !13024
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !13025
  %42 = or i32 %41, %40, !dbg !13025
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13025
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #26, !dbg !13026
  ret void, !dbg !13026
}

; Function Attrs: optsize
declare !dbg !13027 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.msg* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #18 !dbg !13031 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !13032
  ret void, !dbg !13033
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #18 !dbg !13034 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !13035
  ret void, !dbg !13036
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #13 !dbg !13037 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !13038
  ret i32 %1, !dbg !13039
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #7 !dbg !13040 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #28, !dbg !13041
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13042
  %3 = lshr i32 %2, 10, !dbg !13043
  %4 = and i32 %3, 7, !dbg !13043
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13044
  %6 = load i8, i8* %5, align 1, !dbg !13044
  %7 = zext i8 %6 to i32, !dbg !13044
  %8 = lshr i32 %1, %7, !dbg !13045
  ret i32 %8, !dbg !13046
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #7 !dbg !13047 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #28, !dbg !13048
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13049
  %3 = lshr i32 %2, 13, !dbg !13050
  %4 = and i32 %3, 7, !dbg !13050
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13051
  %6 = load i8, i8* %5, align 1, !dbg !13051
  %7 = zext i8 %6 to i32, !dbg !13051
  %8 = lshr i32 %1, %7, !dbg !13052
  ret i32 %8, !dbg !13053
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !13054 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13058, metadata !DIExpression()), !dbg !13059
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13060
  store i32 15, i32* %2, align 4, !dbg !13061
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13062
  %4 = and i32 %3, 262144, !dbg !13064
  %5 = icmp eq i32 %4, 0, !dbg !13065
  br i1 %5, label %8, label %6, !dbg !13066

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13067
  store i32 327680, i32* %7, align 4, !dbg !13069
  br label %15, !dbg !13070

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13071
  %10 = and i32 %9, 65536, !dbg !13073
  %11 = icmp eq i32 %10, 0, !dbg !13074
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13075
  br i1 %11, label %14, label %13, !dbg !13076

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !13077
  br label %15, !dbg !13079

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !13080
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13082
  %17 = and i32 %16, 1, !dbg !13084
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13085
  store i32 %17, i32* %18, align 4, !dbg !13087
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13088
  %20 = lshr i32 %19, 3, !dbg !13089
  %21 = and i32 %20, 31, !dbg !13089
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13090
  store i32 %21, i32* %22, align 4, !dbg !13091
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13092
  %24 = and i32 %23, 4, !dbg !13094
  %25 = icmp eq i32 %24, 0, !dbg !13095
  br i1 %25, label %28, label %26, !dbg !13096

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13097
  store i32 5, i32* %27, align 4, !dbg !13099
  br label %35, !dbg !13100

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13101
  %30 = and i32 %29, 1, !dbg !13103
  %31 = icmp eq i32 %30, 0, !dbg !13104
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13105
  br i1 %31, label %34, label %33, !dbg !13106

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !13107
  br label %35, !dbg !13109

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !13110
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13112
  %37 = and i32 %36, 1, !dbg !13114
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13115
  store i32 %37, i32* %38, align 4, !dbg !13117
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13118
  %40 = and i32 %39, 16777216, !dbg !13120
  %41 = icmp eq i32 %40, 0, !dbg !13121
  %42 = select i1 %41, i32 1, i32 2, !dbg !13122
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13123
  store i32 %42, i32* %43, align 4, !dbg !13125
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13126
  %45 = and i32 %44, 4194304, !dbg !13127
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13128
  store i32 %45, i32* %46, align 4, !dbg !13129
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13130
  %48 = and i32 %47, 63, !dbg !13131
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13132
  store i32 %48, i32* %49, align 4, !dbg !13133
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13134
  %51 = lshr i32 %50, 6, !dbg !13135
  %52 = and i32 %51, 511, !dbg !13135
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13136
  store i32 %52, i32* %53, align 4, !dbg !13137
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13138
  %55 = shl i32 %54, 1, !dbg !13139
  %56 = and i32 %55, 393216, !dbg !13139
  %57 = add nuw nsw i32 %56, 131072, !dbg !13139
  %58 = lshr exact i32 %57, 16, !dbg !13140
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13141
  store i32 %58, i32* %59, align 4, !dbg !13142
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13143
  %61 = lshr i32 %60, 24, !dbg !13144
  %62 = and i32 %61, 15, !dbg !13144
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13145
  store i32 %62, i32* %63, align 4, !dbg !13146
  ret void, !dbg !13147
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.msg* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !13148 {
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !13152, metadata !DIExpression()), !dbg !13154
  call void @llvm.dbg.value(metadata i32* %1, metadata !13153, metadata !DIExpression()), !dbg !13154
  %3 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 0, !dbg !13155
  store i32 15, i32* %3, align 4, !dbg !13156
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13157
  %5 = and i32 %4, 3, !dbg !13158
  %6 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 1, !dbg !13159
  store i32 %5, i32* %6, align 4, !dbg !13160
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13161
  %8 = and i32 %7, 240, !dbg !13162
  %9 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 2, !dbg !13163
  store i32 %8, i32* %9, align 4, !dbg !13164
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13165
  %11 = and i32 %10, 7168, !dbg !13166
  %12 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 3, !dbg !13167
  store i32 %11, i32* %12, align 4, !dbg !13168
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13169
  %14 = lshr i32 %13, 3, !dbg !13170
  %15 = and i32 %14, 7168, !dbg !13170
  %16 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 4, !dbg !13171
  store i32 %15, i32* %16, align 4, !dbg !13172
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13173
  %18 = and i32 %17, 7, !dbg !13174
  store i32 %18, i32* %1, align 4, !dbg !13175
  ret void, !dbg !13176
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !13177 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13178
  %2 = and i32 %1, 128, !dbg !13178
  %3 = icmp eq i32 %2, 0, !dbg !13178
  br i1 %3, label %5, label %4, !dbg !13180

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #28, !dbg !13181
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !13183
  br label %5, !dbg !13184

5:                                                ; preds = %4, %0
  ret void, !dbg !13185
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !13186 {
  ret void, !dbg !13187
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #18 !dbg !13188 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13191, metadata !DIExpression()), !dbg !13192
  tail call fastcc void @LL_InitTick(i32 noundef %0) #28, !dbg !13193
  ret void, !dbg !13194
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #18 !dbg !13195 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13198, metadata !DIExpression()), !dbg !13200
  call void @llvm.dbg.value(metadata i32 1000, metadata !13199, metadata !DIExpression()), !dbg !13200
  %2 = udiv i32 %0, 1000, !dbg !13201
  %3 = add nsw i32 %2, -1, !dbg !13202
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13203
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13204
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13205
  ret void, !dbg !13206
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #21 !dbg !13207 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13209, metadata !DIExpression()), !dbg !13211
  %3 = bitcast i32* %2 to i8*, !dbg !13212
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13212
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13210, metadata !DIExpression()), !dbg !13213
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13214
  store volatile i32 %4, i32* %2, align 4, !dbg !13213
  %5 = load volatile i32, i32* %2, align 4, !dbg !13215
  %6 = icmp eq i32 %0, -1, !dbg !13216
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13209, metadata !DIExpression()), !dbg !13211
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !13211
  call void @llvm.dbg.value(metadata i32 %8, metadata !13209, metadata !DIExpression()), !dbg !13211
  br label %9, !dbg !13218

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13209, metadata !DIExpression()), !dbg !13211
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13219
  call void @llvm.dbg.value(metadata i32 undef, metadata !13209, metadata !DIExpression()), !dbg !13211
  %12 = shl i32 %11, 15, !dbg !13211
  %13 = ashr i32 %12, 31, !dbg !13211
  %14 = add i32 %13, %10, !dbg !13211
  call void @llvm.dbg.value(metadata i32 %14, metadata !13209, metadata !DIExpression()), !dbg !13211
  %15 = icmp eq i32 %14, 0, !dbg !13218
  br i1 %15, label %16, label %9, !dbg !13218

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13222
  ret void, !dbg !13222
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #12 !dbg !13223 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13225, metadata !DIExpression()), !dbg !13226
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13227
  ret void, !dbg !13228
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #18 !dbg !13229 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13234, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata i32 0, metadata !13237, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata i32 0, metadata !13238, metadata !DIExpression()), !dbg !13239
  %2 = icmp eq i32 %0, 0, !dbg !13240
  br i1 %2, label %35, label %3, !dbg !13242

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #28, !dbg !13243
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #28, !dbg !13246
  %6 = icmp eq i32 %5, 32768, !dbg !13248
  br i1 %6, label %7, label %12, !dbg !13249

7:                                                ; preds = %3
  %8 = icmp ugt i32 %0, 60000000, !dbg !13250
  br i1 %8, label %12, label %9, !dbg !13253

9:                                                ; preds = %7
  %10 = icmp ugt i32 %0, 30000000, !dbg !13254
  %11 = zext i1 %10 to i32, !dbg !13257
  call void @llvm.dbg.value(metadata i32 %11, metadata !13237, metadata !DIExpression()), !dbg !13239
  br label %12, !dbg !13257

12:                                               ; preds = %7, %9, %3
  %13 = phi i32 [ %11, %9 ], [ 0, %3 ], [ 2, %7 ], !dbg !13239
  call void @llvm.dbg.value(metadata i32 %13, metadata !13237, metadata !DIExpression()), !dbg !13239
  %14 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #28, !dbg !13258
  %15 = icmp eq i32 %14, 16384, !dbg !13260
  br i1 %15, label %16, label %24, !dbg !13261

16:                                               ; preds = %12
  %17 = icmp ugt i32 %0, 60000000, !dbg !13262
  %18 = icmp eq i32 %13, 0
  %19 = and i1 %17, %18, !dbg !13265
  br i1 %19, label %24, label %20, !dbg !13265

20:                                               ; preds = %16
  %21 = icmp ugt i32 %0, 30000000, !dbg !13266
  %22 = and i1 %21, %18, !dbg !13269
  %23 = select i1 %22, i32 1, i32 %13, !dbg !13269
  call void @llvm.dbg.value(metadata i32 %23, metadata !13237, metadata !DIExpression()), !dbg !13239
  br label %24, !dbg !13269

24:                                               ; preds = %16, %20, %12
  %25 = phi i32 [ %23, %20 ], [ %13, %12 ], [ 2, %16 ], !dbg !13270
  call void @llvm.dbg.value(metadata i32 %25, metadata !13237, metadata !DIExpression()), !dbg !13239
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %25) #28, !dbg !13271
  call void @llvm.dbg.value(metadata i32 2, metadata !13235, metadata !DIExpression()), !dbg !13239
  br label %26, !dbg !13272

26:                                               ; preds = %26, %24
  %27 = phi i32 [ 2, %24 ], [ %29, %26 ], !dbg !13270
  call void @llvm.dbg.value(metadata i32 %27, metadata !13235, metadata !DIExpression()), !dbg !13239
  %28 = tail call fastcc i32 @LL_FLASH_GetLatency() #28, !dbg !13273
  call void @llvm.dbg.value(metadata i32 %28, metadata !13236, metadata !DIExpression()), !dbg !13239
  %29 = add nsw i32 %27, -1, !dbg !13275
  call void @llvm.dbg.value(metadata i32 %29, metadata !13235, metadata !DIExpression()), !dbg !13239
  %30 = icmp ne i32 %28, %25, !dbg !13276
  %31 = icmp ne i32 %29, 0, !dbg !13277
  %32 = select i1 %30, i1 %31, i1 false, !dbg !13277
  br i1 %32, label %26, label %33, !dbg !13278, !llvm.loop !13279

33:                                               ; preds = %26
  %34 = zext i1 %30 to i32
  br label %35

35:                                               ; preds = %33, %1
  %36 = phi i32 [ 1, %1 ], [ %34, %33 ], !dbg !13281
  call void @llvm.dbg.value(metadata i32 %36, metadata !13238, metadata !DIExpression()), !dbg !13239
  ret i32 %36, !dbg !13282
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #7 !dbg !13283 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13285
  %2 = and i32 %1, 49152, !dbg !13285
  ret i32 %2, !dbg !13286
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #18 !dbg !13287 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13289, metadata !DIExpression()), !dbg !13290
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13291
  %3 = and i32 %2, -8, !dbg !13291
  %4 = or i32 %3, %0, !dbg !13291
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13291
  ret void, !dbg !13292
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #7 !dbg !13293 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13294
  %2 = and i32 %1, 7, !dbg !13294
  ret i32 %2, !dbg !13295
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #18 !dbg !13296 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !13314, metadata !DIExpression()), !dbg !13318
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13315, metadata !DIExpression()), !dbg !13318
  call void @llvm.dbg.value(metadata i32 0, metadata !13316, metadata !DIExpression()), !dbg !13318
  call void @llvm.dbg.value(metadata i32 0, metadata !13317, metadata !DIExpression()), !dbg !13318
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #28, !dbg !13319
  %4 = icmp eq i32 %3, 0, !dbg !13321
  br i1 %4, label %5, label %21, !dbg !13322

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #28, !dbg !13323
  call void @llvm.dbg.value(metadata i32 %6, metadata !13317, metadata !DIExpression()), !dbg !13318
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.210() #28, !dbg !13325
  %8 = icmp eq i32 %7, 1, !dbg !13327
  br i1 %8, label %13, label %9, !dbg !13328

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.211() #28, !dbg !13329
  br label %10, !dbg !13331

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.210() #28, !dbg !13332
  %12 = icmp eq i32 %11, 1, !dbg !13333
  br i1 %12, label %13, label %10, !dbg !13331, !llvm.loop !13334

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !13336
  %15 = load i32, i32* %14, align 4, !dbg !13336
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !13337
  %17 = load i32, i32* %16, align 4, !dbg !13337
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !13338
  %19 = load i32, i32* %18, align 4, !dbg !13338
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.212(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #28, !dbg !13339
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #28, !dbg !13340
  call void @llvm.dbg.value(metadata i32 %20, metadata !13316, metadata !DIExpression()), !dbg !13318
  br label %21, !dbg !13341

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !13342
  call void @llvm.dbg.value(metadata i32 %22, metadata !13316, metadata !DIExpression()), !dbg !13318
  ret i32 %22, !dbg !13343
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #7 !dbg !13344 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13348, metadata !DIExpression()), !dbg !13349
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.214() #28, !dbg !13350
  %2 = icmp ne i32 %1, 0, !dbg !13352
  call void @llvm.dbg.value(metadata i1 %2, metadata !13348, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13349
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #28, !dbg !13353
  %4 = icmp ne i32 %3, 0, !dbg !13355
  %5 = select i1 %4, i1 true, i1 %2, !dbg !13356
  %6 = zext i1 %5 to i32, !dbg !13356
  call void @llvm.dbg.value(metadata i32 %6, metadata !13348, metadata !DIExpression()), !dbg !13349
  ret i32 %6, !dbg !13357
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #13 !dbg !13358 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13362, metadata !DIExpression()), !dbg !13365
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13363, metadata !DIExpression()), !dbg !13365
  call void @llvm.dbg.value(metadata i32 0, metadata !13364, metadata !DIExpression()), !dbg !13365
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13366
  %4 = load i32, i32* %3, align 4, !dbg !13366
  %5 = and i32 %4, 63, !dbg !13367
  %6 = udiv i32 %0, %5, !dbg !13368
  call void @llvm.dbg.value(metadata i32 %6, metadata !13364, metadata !DIExpression()), !dbg !13365
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13369
  %8 = load i32, i32* %7, align 4, !dbg !13369
  %9 = and i32 %8, 511, !dbg !13370
  %10 = mul i32 %9, %6, !dbg !13371
  call void @llvm.dbg.value(metadata i32 %10, metadata !13364, metadata !DIExpression()), !dbg !13365
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13372
  %12 = load i32, i32* %11, align 4, !dbg !13372
  %13 = lshr i32 %12, 15, !dbg !13373
  %14 = and i32 %13, 131070, !dbg !13373
  %15 = add nuw nsw i32 %14, 2, !dbg !13373
  %16 = udiv i32 %10, %15, !dbg !13374
  call void @llvm.dbg.value(metadata i32 %16, metadata !13364, metadata !DIExpression()), !dbg !13365
  ret i32 %16, !dbg !13375
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.210() unnamed_addr #7 !dbg !13376 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13377
  %2 = lshr i32 %1, 1, !dbg !13378
  %3 = and i32 %2, 1, !dbg !13378
  ret i32 %3, !dbg !13379
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.211() unnamed_addr #18 !dbg !13380 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13381
  %2 = or i32 %1, 1, !dbg !13381
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13381
  ret void, !dbg !13382
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.212(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #18 !dbg !13383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13385, metadata !DIExpression()), !dbg !13389
  call void @llvm.dbg.value(metadata i32 %1, metadata !13386, metadata !DIExpression()), !dbg !13389
  call void @llvm.dbg.value(metadata i32 %2, metadata !13387, metadata !DIExpression()), !dbg !13389
  call void @llvm.dbg.value(metadata i32 %3, metadata !13388, metadata !DIExpression()), !dbg !13389
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13390
  %6 = and i32 %5, -4227072, !dbg !13390
  %7 = or i32 %1, %0, !dbg !13390
  %8 = shl i32 %2, 6, !dbg !13390
  %9 = or i32 %7, %8, !dbg !13390
  %10 = or i32 %9, %6, !dbg !13390
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13390
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13391
  %12 = and i32 %11, -196609, !dbg !13391
  %13 = or i32 %12, %3, !dbg !13391
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13391
  ret void, !dbg !13392
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #18 !dbg !13393 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13397, metadata !DIExpression()), !dbg !13401
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13398, metadata !DIExpression()), !dbg !13401
  call void @llvm.dbg.value(metadata i32 0, metadata !13399, metadata !DIExpression()), !dbg !13401
  call void @llvm.dbg.value(metadata i32 0, metadata !13400, metadata !DIExpression()), !dbg !13401
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13402
  %4 = load i32, i32* %3, align 4, !dbg !13402
  %5 = lshr i32 %4, 4, !dbg !13402
  %6 = and i32 %5, 15, !dbg !13402
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13402
  %8 = load i8, i8* %7, align 1, !dbg !13402
  %9 = zext i8 %8 to i32, !dbg !13402
  %10 = lshr i32 %0, %9, !dbg !13402
  call void @llvm.dbg.value(metadata i32 %10, metadata !13400, metadata !DIExpression()), !dbg !13401
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13403
  %12 = icmp ult i32 %11, %10, !dbg !13405
  br i1 %12, label %13, label %16, !dbg !13406

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #28, !dbg !13407
  call void @llvm.dbg.value(metadata i32 %14, metadata !13399, metadata !DIExpression()), !dbg !13401
  %15 = icmp eq i32 %14, 0, !dbg !13409
  br i1 %15, label %16, label %30, !dbg !13411

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.213() #28, !dbg !13412
  br label %17, !dbg !13414

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.214() #28, !dbg !13415
  %19 = icmp eq i32 %18, 1, !dbg !13416
  br i1 %19, label %20, label %17, !dbg !13414, !llvm.loop !13417

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13419
  tail call fastcc void @LL_RCC_SetAHBPrescaler.215(i32 noundef %21) #28, !dbg !13420
  tail call fastcc void @LL_RCC_SetSysClkSource.216() #28, !dbg !13421
  br label %22, !dbg !13422

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.217() #28, !dbg !13423
  %24 = icmp eq i32 %23, 8, !dbg !13424
  br i1 %24, label %25, label %22, !dbg !13422, !llvm.loop !13425

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13427
  %27 = load i32, i32* %26, align 4, !dbg !13427
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.218(i32 noundef %27) #28, !dbg !13428
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13429
  %29 = load i32, i32* %28, align 4, !dbg !13429
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.219(i32 noundef %29) #28, !dbg !13430
  br label %30, !dbg !13431

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13432
  %33 = icmp ugt i32 %32, %10, !dbg !13434
  br i1 %33, label %34, label %36, !dbg !13435

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #28, !dbg !13436
  call void @llvm.dbg.value(metadata i32 %35, metadata !13399, metadata !DIExpression()), !dbg !13401
  br label %36, !dbg !13438

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13401
  call void @llvm.dbg.value(metadata i32 %37, metadata !13399, metadata !DIExpression()), !dbg !13401
  %38 = icmp eq i32 %37, 0, !dbg !13439
  br i1 %38, label %39, label %40, !dbg !13441

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #28, !dbg !13442
  br label %40, !dbg !13444

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13445
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.213() unnamed_addr #18 !dbg !13446 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13447
  %2 = or i32 %1, 16777216, !dbg !13447
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13447
  ret void, !dbg !13448
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.214() unnamed_addr #7 !dbg !13449 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13450
  %2 = lshr i32 %1, 25, !dbg !13451
  %3 = and i32 %2, 1, !dbg !13451
  ret i32 %3, !dbg !13452
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.215(i32 noundef %0) unnamed_addr #18 !dbg !13453 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13455, metadata !DIExpression()), !dbg !13456
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13457
  %3 = and i32 %2, -241, !dbg !13457
  %4 = or i32 %3, %0, !dbg !13457
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13457
  ret void, !dbg !13458
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.216() unnamed_addr #18 !dbg !13459 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13461, metadata !DIExpression()), !dbg !13462
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13463
  %2 = and i32 %1, -4, !dbg !13463
  %3 = or i32 %2, 2, !dbg !13463
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13463
  ret void, !dbg !13464
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.217() unnamed_addr #7 !dbg !13465 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13466
  %2 = and i32 %1, 12, !dbg !13466
  ret i32 %2, !dbg !13467
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.218(i32 noundef %0) unnamed_addr #18 !dbg !13468 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13470, metadata !DIExpression()), !dbg !13471
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13472
  %3 = and i32 %2, -7169, !dbg !13472
  %4 = or i32 %3, %0, !dbg !13472
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13472
  ret void, !dbg !13473
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.219(i32 noundef %0) unnamed_addr #18 !dbg !13474 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13476, metadata !DIExpression()), !dbg !13477
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13478
  %3 = and i32 %2, -57345, !dbg !13478
  %4 = or i32 %3, %0, !dbg !13478
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13478
  ret void, !dbg !13479
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #7 !dbg !13480 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13481
  %2 = lshr i32 %1, 27, !dbg !13482
  %3 = and i32 %2, 1, !dbg !13482
  ret i32 %3, !dbg !13483
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #18 !dbg !13484 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13488, metadata !DIExpression()), !dbg !13494
  call void @llvm.dbg.value(metadata i32 %1, metadata !13489, metadata !DIExpression()), !dbg !13494
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !13490, metadata !DIExpression()), !dbg !13494
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13491, metadata !DIExpression()), !dbg !13494
  call void @llvm.dbg.value(metadata i32 0, metadata !13492, metadata !DIExpression()), !dbg !13494
  call void @llvm.dbg.value(metadata i32 0, metadata !13493, metadata !DIExpression()), !dbg !13494
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #28, !dbg !13495
  %6 = icmp eq i32 %5, 0, !dbg !13497
  br i1 %6, label %7, label %27, !dbg !13498

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #28, !dbg !13499
  call void @llvm.dbg.value(metadata i32 %8, metadata !13493, metadata !DIExpression()), !dbg !13494
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.220() #28, !dbg !13501
  %10 = icmp eq i32 %9, 1, !dbg !13503
  br i1 %10, label %19, label %11, !dbg !13504

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13505
  br i1 %12, label %13, label %14, !dbg !13508

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #28, !dbg !13509
  br label %15, !dbg !13511

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.221() #28, !dbg !13512
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.222() #28, !dbg !13514
  br label %16, !dbg !13515

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.220() #28, !dbg !13516
  %18 = icmp eq i32 %17, 1, !dbg !13517
  br i1 %18, label %19, label %16, !dbg !13515, !llvm.loop !13518

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !13520
  %21 = load i32, i32* %20, align 4, !dbg !13520
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !13521
  %23 = load i32, i32* %22, align 4, !dbg !13521
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !13522
  %25 = load i32, i32* %24, align 4, !dbg !13522
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.212(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #28, !dbg !13523
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #28, !dbg !13524
  call void @llvm.dbg.value(metadata i32 %26, metadata !13492, metadata !DIExpression()), !dbg !13494
  br label %27, !dbg !13525

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13526
  call void @llvm.dbg.value(metadata i32 %28, metadata !13492, metadata !DIExpression()), !dbg !13494
  ret i32 %28, !dbg !13527
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.220() unnamed_addr #7 !dbg !13528 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13529
  %2 = lshr i32 %1, 17, !dbg !13530
  %3 = and i32 %2, 1, !dbg !13530
  ret i32 %3, !dbg !13531
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #18 !dbg !13532 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13533
  %2 = or i32 %1, 262144, !dbg !13533
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13533
  ret void, !dbg !13534
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.221() unnamed_addr #18 !dbg !13535 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13536
  %2 = and i32 %1, -262145, !dbg !13536
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13536
  ret void, !dbg !13537
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.222() unnamed_addr #18 !dbg !13538 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13539
  %2 = or i32 %1, 65536, !dbg !13539
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13539
  ret void, !dbg !13540
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #23 !dbg !13541 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13544, metadata !DIExpression()), !dbg !13560
  call void @llvm.dbg.value(metadata i32 undef, metadata !13544, metadata !DIExpression()), !dbg !13560
  call void @llvm.dbg.value(metadata i32 undef, metadata !13544, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13560
  ret void, !dbg !13561
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13562 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13566, metadata !DIExpression()), !dbg !13568
  %2 = icmp eq i8* %0, null, !dbg !13569
  br i1 %2, label %29, label %3, !dbg !13571

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13572
  %5 = icmp eq i8 %4, 0, !dbg !13573
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13574
  br i1 %6, label %29, label %8, !dbg !13574

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13567, metadata !DIExpression()), !dbg !13568
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13575

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13567, metadata !DIExpression()), !dbg !13568
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #28, !dbg !13577
  br i1 %10, label %11, label %15, !dbg !13582

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13583
  %13 = load i8*, i8** %12, align 4, !dbg !13583
  %14 = icmp eq i8* %13, %0, !dbg !13584
  br i1 %14, label %29, label %15, !dbg !13585

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13586
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13567, metadata !DIExpression()), !dbg !13568
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13587
  br i1 %17, label %7, label %8, !dbg !13588, !llvm.loop !13589

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13567, metadata !DIExpression()), !dbg !13568
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #28, !dbg !13591
  br i1 %20, label %21, label %26, !dbg !13595

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13596
  %23 = load i8*, i8** %22, align 4, !dbg !13596
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !13597
  %25 = icmp eq i32 %24, 0, !dbg !13598
  br i1 %25, label %29, label %26, !dbg !13599

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13600
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13567, metadata !DIExpression()), !dbg !13568
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13601
  br i1 %28, label %29, label %18, !dbg !13575, !llvm.loop !13602

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13568
  ret %struct.device* %30, !dbg !13604
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #13 !dbg !13605 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13609, metadata !DIExpression()), !dbg !13610
  %2 = icmp eq %struct.device* %0, null, !dbg !13611
  br i1 %2, label %14, label %3, !dbg !13613

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13614
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13614
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13615
  %7 = load i8, i8* %6, align 1, !dbg !13615
  %8 = and i8 %7, 1, !dbg !13615
  %9 = icmp eq i8 %8, 0, !dbg !13615
  br i1 %9, label %14, label %10, !dbg !13616

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13617
  %12 = load i8, i8* %11, align 1, !dbg !13617
  %13 = icmp eq i8 %12, 0, !dbg !13618
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13610
  ret i1 %15, !dbg !13619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #12 !dbg !13620 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13625, metadata !DIExpression()), !dbg !13626
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13627
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13628
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13629 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13637, metadata !DIExpression()), !dbg !13642
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13638, metadata !DIExpression()), !dbg !13642
  call void @llvm.dbg.value(metadata i8* %2, metadata !13639, metadata !DIExpression()), !dbg !13642
  %5 = bitcast i32* %4 to i8*, !dbg !13643
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13643
  call void @llvm.dbg.value(metadata i32 0, metadata !13640, metadata !DIExpression()), !dbg !13642
  store i32 0, i32* %4, align 4, !dbg !13644
  call void @llvm.dbg.value(metadata i32* %4, metadata !13640, metadata !DIExpression(DW_OP_deref)), !dbg !13642
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #28, !dbg !13645
  call void @llvm.dbg.value(metadata i16* %6, metadata !13641, metadata !DIExpression()), !dbg !13642
  %7 = load i32, i32* %4, align 4, !dbg !13646
  call void @llvm.dbg.value(metadata i32 %7, metadata !13640, metadata !DIExpression()), !dbg !13642
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #28, !dbg !13647
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13648
  ret i32 %8, !dbg !13649
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #17 !dbg !13650 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13654, metadata !DIExpression()), !dbg !13660
  call void @llvm.dbg.value(metadata i32* %1, metadata !13655, metadata !DIExpression()), !dbg !13660
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13661
  %4 = load i16*, i16** %3, align 4, !dbg !13661
  call void @llvm.dbg.value(metadata i16* %4, metadata !13656, metadata !DIExpression()), !dbg !13660
  %5 = icmp eq i16* %4, null, !dbg !13662
  br i1 %5, label %14, label %6, !dbg !13663

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13664
  call void @llvm.dbg.value(metadata i32 %7, metadata !13657, metadata !DIExpression()), !dbg !13664
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13665
  %9 = load i16, i16* %8, align 2, !dbg !13665
  %10 = add i16 %9, -32767, !dbg !13666
  %11 = icmp ult i16 %10, 2, !dbg !13666
  %12 = add i32 %7, 1, !dbg !13667
  call void @llvm.dbg.value(metadata i32 %12, metadata !13657, metadata !DIExpression()), !dbg !13664
  br i1 %11, label %13, label %6, !dbg !13666, !llvm.loop !13669

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13672
  br label %14, !dbg !13673

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13674
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13675 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13679, metadata !DIExpression()), !dbg !13690
  call void @llvm.dbg.value(metadata i32 %1, metadata !13680, metadata !DIExpression()), !dbg !13690
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13681, metadata !DIExpression()), !dbg !13690
  call void @llvm.dbg.value(metadata i8* %3, metadata !13682, metadata !DIExpression()), !dbg !13690
  call void @llvm.dbg.value(metadata i32 0, metadata !13683, metadata !DIExpression()), !dbg !13691
  %5 = icmp eq i32 %1, 0, !dbg !13692
  br i1 %5, label %16, label %8, !dbg !13693

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13683, metadata !DIExpression()), !dbg !13691
  %7 = icmp eq i32 %15, %1, !dbg !13692
  br i1 %7, label %16, label %8, !dbg !13693, !llvm.loop !13694

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13683, metadata !DIExpression()), !dbg !13691
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13696
  %11 = load i16, i16* %10, align 2, !dbg !13696
  call void @llvm.dbg.value(metadata i16 %11, metadata !13685, metadata !DIExpression()), !dbg !13697
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #28, !dbg !13698
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13688, metadata !DIExpression()), !dbg !13697
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !13699
  call void @llvm.dbg.value(metadata i32 %13, metadata !13689, metadata !DIExpression()), !dbg !13697
  %14 = icmp slt i32 %13, 0, !dbg !13700
  %15 = add nuw i32 %9, 1, !dbg !13702
  call void @llvm.dbg.value(metadata i32 %15, metadata !13683, metadata !DIExpression()), !dbg !13691
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13703
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #5 !dbg !13704 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13708, metadata !DIExpression()), !dbg !13711
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13709, metadata !DIExpression()), !dbg !13711
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13710, metadata !DIExpression()), !dbg !13711
  %2 = sext i16 %0 to i32, !dbg !13712
  %3 = icmp slt i16 %0, 1, !dbg !13714
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13715
  %6 = add nsw i32 %2, -1, !dbg !13715
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13715
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13715
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13709, metadata !DIExpression()), !dbg !13711
  ret %struct.device* %8, !dbg !13716
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13717 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13719, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13720, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.value(metadata i8* %2, metadata !13721, metadata !DIExpression()), !dbg !13724
  %5 = bitcast i32* %4 to i8*, !dbg !13725
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13725
  call void @llvm.dbg.value(metadata i32 0, metadata !13722, metadata !DIExpression()), !dbg !13724
  store i32 0, i32* %4, align 4, !dbg !13726
  call void @llvm.dbg.value(metadata i32* %4, metadata !13722, metadata !DIExpression(DW_OP_deref)), !dbg !13724
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #28, !dbg !13727
  call void @llvm.dbg.value(metadata i16* %6, metadata !13723, metadata !DIExpression()), !dbg !13724
  %7 = load i32, i32* %4, align 4, !dbg !13728
  call void @llvm.dbg.value(metadata i32 %7, metadata !13722, metadata !DIExpression()), !dbg !13724
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #28, !dbg !13729
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13730
  ret i32 %8, !dbg !13731
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #17 !dbg !13732 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13734, metadata !DIExpression()), !dbg !13739
  call void @llvm.dbg.value(metadata i32* %1, metadata !13735, metadata !DIExpression()), !dbg !13739
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13740
  %4 = load i16*, i16** %3, align 4, !dbg !13740
  call void @llvm.dbg.value(metadata i16* %4, metadata !13736, metadata !DIExpression()), !dbg !13739
  call void @llvm.dbg.value(metadata i32 0, metadata !13737, metadata !DIExpression()), !dbg !13739
  call void @llvm.dbg.value(metadata i32 0, metadata !13738, metadata !DIExpression()), !dbg !13739
  %5 = icmp eq i16* %4, null, !dbg !13741
  br i1 %5, label %22, label %6, !dbg !13743

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13737, metadata !DIExpression()), !dbg !13739
  call void @llvm.dbg.value(metadata i16* %8, metadata !13736, metadata !DIExpression()), !dbg !13739
  %9 = load i16, i16* %8, align 2, !dbg !13744
  %10 = icmp eq i16 %9, -32768, !dbg !13748
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()), !dbg !13739
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13749
  call void @llvm.dbg.value(metadata i16* %11, metadata !13736, metadata !DIExpression()), !dbg !13739
  %12 = zext i1 %10 to i32, !dbg !13750
  %13 = add i32 %7, %12, !dbg !13750
  call void @llvm.dbg.value(metadata i32 %13, metadata !13737, metadata !DIExpression()), !dbg !13739
  %14 = icmp eq i32 %13, 2, !dbg !13751
  br i1 %14, label %15, label %6, !dbg !13752

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13739
  call void @llvm.dbg.value(metadata i32 %16, metadata !13738, metadata !DIExpression()), !dbg !13739
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13753
  %18 = load i16, i16* %17, align 2, !dbg !13753
  %19 = icmp eq i16 %18, 32767, !dbg !13754
  %20 = add i32 %16, 1, !dbg !13755
  call void @llvm.dbg.value(metadata i32 %20, metadata !13738, metadata !DIExpression()), !dbg !13739
  br i1 %19, label %21, label %15, !dbg !13757, !llvm.loop !13758

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13760
  br label %22, !dbg !13761

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13762
  call void @llvm.dbg.value(metadata i16* %23, metadata !13736, metadata !DIExpression()), !dbg !13739
  ret i16* %23, !dbg !13763
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #13 !dbg !13764 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13767
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13768
  ret i32* %2, !dbg !13769
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #5 !dbg !13770 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13920, metadata !DIExpression()), !dbg !13923
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13921, metadata !DIExpression()), !dbg !13923
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13922, metadata !DIExpression()), !dbg !13923
  ret void, !dbg !13924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !13925 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13929, metadata !DIExpression()), !dbg !13931
  call void @llvm.dbg.value(metadata i32 %1, metadata !13930, metadata !DIExpression()), !dbg !13931
  ret void, !dbg !13932
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !13933 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13937, metadata !DIExpression()), !dbg !13939
  call void @llvm.dbg.value(metadata i32 %1, metadata !13938, metadata !DIExpression()), !dbg !13939
  ret void, !dbg !13940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !13941 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13945, metadata !DIExpression()), !dbg !13947
  call void @llvm.dbg.value(metadata i8* %1, metadata !13946, metadata !DIExpression()), !dbg !13947
  ret i32 -134, !dbg !13948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !13949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13953, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.value(metadata i8* %1, metadata !13954, metadata !DIExpression()), !dbg !13955
  ret i32 -134, !dbg !13956
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13957 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13960, metadata !DIExpression()), !dbg !13961
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !13962, !srcloc !13968
  call void @llvm.dbg.value(metadata i32 undef, metadata !13965, metadata !DIExpression()) #26, !dbg !13969
  call void @llvm.dbg.value(metadata i32 undef, metadata !13966, metadata !DIExpression()) #26, !dbg !13969
  br label %3, !dbg !13970

3:                                                ; preds = %3, %1
  br label %3, !dbg !13971, !llvm.loop !13974
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13977 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13981, metadata !DIExpression()), !dbg !13983
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13982, metadata !DIExpression()), !dbg !13983
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.227, i32 0, i32 0), i32 noundef 69) #27, !dbg !13984
  tail call void @arch_system_halt(i32 noundef %0) #32, !dbg !13989
  unreachable, !dbg !13989
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13990 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13992, metadata !DIExpression()), !dbg !13993
  tail call void @arch_system_halt(i32 noundef %0) #32, !dbg !13994
  unreachable, !dbg !13994
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13995 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13997, metadata !DIExpression()), !dbg !14001
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13998, metadata !DIExpression()), !dbg !14001
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !14002, !srcloc !13968
  call void @llvm.dbg.value(metadata i32 undef, metadata !13965, metadata !DIExpression()) #26, !dbg !14004
  call void @llvm.dbg.value(metadata i32 undef, metadata !13966, metadata !DIExpression()) #26, !dbg !14004
  call void @llvm.dbg.value(metadata i32 undef, metadata !13999, metadata !DIExpression()), !dbg !14001
  %4 = tail call fastcc %struct.k_thread* @k_current_get.230() #29, !dbg !14005
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14000, metadata !DIExpression()), !dbg !14001
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #28, !dbg !14006
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.231, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #27, !dbg !14006
  %6 = icmp eq %struct.__esf* %1, null, !dbg !14011
  br i1 %6, label %13, label %7, !dbg !14013

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14014, metadata !DIExpression()), !dbg !14019
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !14021
  %9 = load i32, i32* %8, align 4, !dbg !14021
  %10 = and i32 %9, 511, !dbg !14022
  %11 = icmp eq i32 %10, 0, !dbg !14023
  br i1 %11, label %13, label %12, !dbg !14024

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.232, i32 0, i32 0), i32 noundef 69) #27, !dbg !14025
  br label %13, !dbg !14031

13:                                               ; preds = %12, %7, %2
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #28, !dbg !14032
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.233, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #27, !dbg !14032
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #28, !dbg !14037
  %15 = icmp eq i32 %0, 4, !dbg !14038
  br i1 %15, label %16, label %17, !dbg !14043

16:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.234, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.236, i32 0, i32 0), i32 noundef 148) #27, !dbg !14044
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7.237, i32 0, i32 0)) #27, !dbg !14044
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.236, i32 0, i32 0), i32 noundef 148) #27, !dbg !14044
  unreachable, !dbg !14044

17:                                               ; preds = %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !14002
  call void @llvm.dbg.value(metadata i32 %18, metadata !13965, metadata !DIExpression()) #26, !dbg !14004
  call void @llvm.dbg.value(metadata i32 %18, metadata !13999, metadata !DIExpression()), !dbg !14001
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #26, !dbg !14049
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #26, !dbg !14051, !srcloc !14052
  tail call fastcc void @k_thread_abort.238(%struct.k_thread* noundef %4) #28, !dbg !14053
  ret void, !dbg !14056
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.230() unnamed_addr #6 !dbg !14057 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.246() #29, !dbg !14061
  ret %struct.k_thread* %1, !dbg !14062
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #5 !dbg !14063 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14067, metadata !DIExpression()), !dbg !14068
  %2 = icmp ult i32 %0, 5, !dbg !14069
  br i1 %2, label %3, label %6, !dbg !14069

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !14069
  %5 = load i8*, i8** %4, align 4, !dbg !14069
  br label %6, !dbg !14069

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13.240, i32 0, i32 0), %1 ], !dbg !14070
  ret i8* %7, !dbg !14072
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14073 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14077, metadata !DIExpression()), !dbg !14079
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !14080
  br i1 %2, label %9, label %3, !dbg !14081

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #27, !dbg !14082
  call void @llvm.dbg.value(metadata i8* %4, metadata !14078, metadata !DIExpression()), !dbg !14079
  %5 = icmp eq i8* %4, null, !dbg !14083
  br i1 %5, label %9, label %6, !dbg !14085

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !14086
  %8 = icmp eq i8 %7, 0, !dbg !14087
  br i1 %8, label %9, label %10, !dbg !14088

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.239, i32 0, i32 0), metadata !14078, metadata !DIExpression()), !dbg !14079
  br label %10, !dbg !14089

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.239, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !14079
  call void @llvm.dbg.value(metadata i8* %11, metadata !14078, metadata !DIExpression()), !dbg !14079
  ret i8* %11, !dbg !14091
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.238(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14092 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14096, metadata !DIExpression()), !dbg !14097
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14098, !srcloc !14100
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !14101
  ret void, !dbg !14102
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.246() unnamed_addr #6 !dbg !14103 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14104, !srcloc !14106
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !14107
  ret %struct.k_thread* %1, !dbg !14108
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14109 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14113, metadata !DIExpression()), !dbg !14116
  call void @llvm.dbg.value(metadata i32 %1, metadata !14114, metadata !DIExpression()), !dbg !14116
  call void @llvm.dbg.value(metadata i32 %2, metadata !14115, metadata !DIExpression()), !dbg !14116
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !14117
  ret void, !dbg !14118
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14119 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14123, metadata !DIExpression()), !dbg !14126
  call void @llvm.dbg.value(metadata i8* %1, metadata !14124, metadata !DIExpression()), !dbg !14126
  call void @llvm.dbg.value(metadata i32 %2, metadata !14125, metadata !DIExpression()), !dbg !14126
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !14127
  ret void, !dbg !14128
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !14129 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #28, !dbg !14130
  ret void, !dbg !14131
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !14132 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14134, metadata !DIExpression()), !dbg !14135
  tail call fastcc void @init_idle_thread(i32 noundef %0) #28, !dbg !14136
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14137
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !14138
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !14139
  %4 = trunc i32 %0 to i8, !dbg !14140
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 6, !dbg !14141
  store i8 %4, i8* %5, align 4, !dbg !14142
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14143
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #28, !dbg !14144
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14145
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14146
  store i8* %8, i8** %9, align 4, !dbg !14147
  ret void, !dbg !14148
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14151, metadata !DIExpression()), !dbg !14157
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14158
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14152, metadata !DIExpression()), !dbg !14157
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14159
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !14153, metadata !DIExpression()), !dbg !14157
  call void @llvm.dbg.value(metadata i8* null, metadata !14156, metadata !DIExpression()), !dbg !14157
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !14160
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !14161
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !14162
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #28, !dbg !14163
  ret void, !dbg !14164
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !14165 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14169, metadata !DIExpression()), !dbg !14170
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14171
  ret i8* %2, !dbg !14172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !14173 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14178, metadata !DIExpression()), !dbg !14179
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14180
  %3 = load i8, i8* %2, align 1, !dbg !14181
  %4 = and i8 %3, -5, !dbg !14181
  store i8 %4, i8* %2, align 1, !dbg !14181
  ret void, !dbg !14182
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_early_boot_rand_get(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14183 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14185, metadata !DIExpression()), !dbg !14187
  call void @llvm.dbg.value(metadata i32 %1, metadata !14186, metadata !DIExpression()), !dbg !14187
  tail call fastcc void @sys_rand_get(i8* noundef %0, i32 noundef %1) #28, !dbg !14188
  ret void, !dbg !14189
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @sys_rand_get(i8* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !14190 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14195, metadata !DIExpression()), !dbg !14197
  call void @llvm.dbg.value(metadata i32 %1, metadata !14196, metadata !DIExpression()), !dbg !14197
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14198, !srcloc !14200
  tail call void @z_impl_sys_rand_get(i8* noundef %0, i32 noundef %1) #27, !dbg !14201
  ret void, !dbg !14202
}

; Function Attrs: optsize
declare !dbg !14203 dso_local void @z_impl_sys_rand_get(i8* noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !14204 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #28, !dbg !14207
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !14208
  %3 = ptrtoint i8* %2 to i32, !dbg !14217
  %4 = add i32 %3, 2048, !dbg !14218
  call void @llvm.dbg.value(metadata i32 %4, metadata !14212, metadata !DIExpression()) #26, !dbg !14219
  call void @llvm.dbg.value(metadata i32 %4, metadata !14220, metadata !DIExpression()) #26, !dbg !14223
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #26, !dbg !14225, !srcloc !14226
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14227
  %6 = or i32 %5, 512, !dbg !14227
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14227
  tail call fastcc void @__NVIC_SetPriority.255(i32 noundef -2, i32 noundef 255) #27, !dbg !14228
  tail call fastcc void @__NVIC_SetPriority.255(i32 noundef -5, i32 noundef 0) #27, !dbg !14231
  tail call fastcc void @__NVIC_SetPriority.255(i32 noundef -12, i32 noundef 0) #27, !dbg !14232
  tail call fastcc void @__NVIC_SetPriority.255(i32 noundef -11, i32 noundef 0) #27, !dbg !14233
  tail call fastcc void @__NVIC_SetPriority.255(i32 noundef -10, i32 noundef 0) #27, !dbg !14234
  tail call fastcc void @__NVIC_SetPriority.255(i32 noundef -4, i32 noundef 0) #27, !dbg !14235
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14236
  %8 = or i32 %7, 458752, !dbg !14236
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14236
  tail call void @z_arm_fault_init() #27, !dbg !14237
  tail call void @z_arm_cpu_idle_init() #27, !dbg !14238
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14239
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14242
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !14243
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !14244
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14245
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #26, !dbg !14245
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !14206, metadata !DIExpression()), !dbg !14246
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #28, !dbg !14247
  call void @z_device_state_init() #27, !dbg !14248
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #28, !dbg !14249
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #28, !dbg !14250
  %11 = call fastcc i8* @prepare_multithreading() #28, !dbg !14251
  call fastcc void @switch_to_main_thread(i8* noundef %11) #32, !dbg !14252
  unreachable, !dbg !14252
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2220 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2224, metadata !DIExpression()), !dbg !14253
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14254
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14254
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2225, metadata !DIExpression()), !dbg !14253
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2225, metadata !DIExpression()), !dbg !14253
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14255
  br i1 %7, label %8, label %35, !dbg !14256

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2225, metadata !DIExpression()), !dbg !14253
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14257
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14257
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2235, metadata !DIExpression()), !dbg !14258
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14259
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14259
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !14260
  call void @llvm.dbg.value(metadata i32 %14, metadata !2239, metadata !DIExpression()), !dbg !14258
  %15 = icmp eq %struct.device* %11, null, !dbg !14261
  br i1 %15, label %32, label %16, !dbg !14263

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14264
  br i1 %17, label %26, label %18, !dbg !14267

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14268
  call void @llvm.dbg.value(metadata i32 %19, metadata !2239, metadata !DIExpression()), !dbg !14258
  %20 = icmp ult i32 %19, 255, !dbg !14270
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14270
  call void @llvm.dbg.value(metadata i32 %21, metadata !2239, metadata !DIExpression()), !dbg !14258
  %22 = trunc i32 %21 to i8, !dbg !14271
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14272
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14272
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14273
  store i8 %22, i8* %25, align 1, !dbg !14274
  br label %26, !dbg !14275

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14276
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14276
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14277
  %30 = load i8, i8* %29, align 1, !dbg !14278
  %31 = or i8 %30, 1, !dbg !14278
  store i8 %31, i8* %29, align 1, !dbg !14278
  br label %32, !dbg !14279

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14280
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2225, metadata !DIExpression()), !dbg !14253
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14255
  br i1 %34, label %8, label %35, !dbg !14256, !llvm.loop !14281

35:                                               ; preds = %32, %1
  ret void, !dbg !14283
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.255(i32 noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !14284 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14286, metadata !DIExpression()), !dbg !14288
  call void @llvm.dbg.value(metadata i32 %1, metadata !14287, metadata !DIExpression()), !dbg !14288
  %3 = trunc i32 %1 to i8, !dbg !14289
  %4 = shl i8 %3, 4, !dbg !14289
  %5 = and i32 %0, 15, !dbg !14292
  %6 = add nsw i32 %5, -4, !dbg !14293
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14294
  store volatile i8 %4, i8* %7, align 1, !dbg !14295
  ret void, !dbg !14296
}

; Function Attrs: optsize
declare !dbg !14297 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #12 !dbg !14298 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14301, metadata !DIExpression()), !dbg !14302
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14303
  store i8 1, i8* %2, align 1, !dbg !14304
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14305
  store i8 1, i8* %3, align 4, !dbg !14306
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14307
  store i32 0, i32* %4, align 4, !dbg !14308
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14309
  store i32 0, i32* %5, align 4, !dbg !14310
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14311
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !14312
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14313
  ret void, !dbg !14314
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14315 {
  tail call void @z_sched_init() #27, !dbg !14320
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14321
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.256, i32 0, i32 0)) #27, !dbg !14322
  call void @llvm.dbg.value(metadata i8* %1, metadata !14319, metadata !DIExpression()), !dbg !14323
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #28, !dbg !14324
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !14325
  tail call void @z_init_cpu(i32 noundef 0) #28, !dbg !14326
  ret i8* %1, !dbg !14327
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !14328 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14332, metadata !DIExpression()), !dbg !14333
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !14334
  unreachable, !dbg !14335
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14336 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14338, metadata !DIExpression()), !dbg !14341
  call void @llvm.dbg.value(metadata i8* %1, metadata !14339, metadata !DIExpression()), !dbg !14341
  call void @llvm.dbg.value(metadata i8* %2, metadata !14340, metadata !DIExpression()), !dbg !14341
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14342
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #28, !dbg !14343
  tail call void @boot_banner() #27, !dbg !14344
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #28, !dbg !14345
  tail call void @z_init_static_threads() #27, !dbg !14346
  tail call void @main() #27, !dbg !14347
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14348
  %5 = and i8 %4, -2, !dbg !14348
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14348
  ret void, !dbg !14349
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14350 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14360, metadata !DIExpression()), !dbg !14362
  call void @llvm.dbg.value(metadata i8* %1, metadata !14361, metadata !DIExpression()), !dbg !14362
  ret void, !dbg !14363
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14364 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14366, metadata !DIExpression()), !dbg !14368
  call void @llvm.dbg.value(metadata i8* %1, metadata !14367, metadata !DIExpression()), !dbg !14368
  ret void, !dbg !14369
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !14370 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !14371, !srcloc !14378
  call void @llvm.dbg.value(metadata i32 %1, metadata !14374, metadata !DIExpression()) #26, !dbg !14379
  %2 = icmp ne i32 %1, 0, !dbg !14380
  ret i1 %2, !dbg !14381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #14 !dbg !14382 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14383
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14384
  %3 = load i8, i8* %2, align 4, !dbg !14385
  %4 = or i8 %3, 1, !dbg !14385
  store i8 %4, i8* %2, align 4, !dbg !14385
  ret void, !dbg !14386
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #14 !dbg !14387 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14388
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14389
  %3 = load i8, i8* %2, align 4, !dbg !14390
  %4 = and i8 %3, -2, !dbg !14390
  store i8 %4, i8* %2, align 4, !dbg !14390
  ret void, !dbg !14391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #13 !dbg !14392 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14393
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14394
  %3 = load i8, i8* %2, align 4, !dbg !14394
  %4 = and i8 %3, 1, !dbg !14395
  %5 = icmp ne i8 %4, 0, !dbg !14396
  ret i1 %5, !dbg !14397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !14398 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14402, metadata !DIExpression()), !dbg !14404
  call void @llvm.dbg.value(metadata i8* %1, metadata !14403, metadata !DIExpression()), !dbg !14404
  ret i32 -88, !dbg !14405
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !14406 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14410, metadata !DIExpression()), !dbg !14411
  ret i8* null, !dbg !14412
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #5 !dbg !14413 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14417, metadata !DIExpression()), !dbg !14420
  call void @llvm.dbg.value(metadata i8* %1, metadata !14418, metadata !DIExpression()), !dbg !14420
  call void @llvm.dbg.value(metadata i32 %2, metadata !14419, metadata !DIExpression()), !dbg !14420
  ret i32 -88, !dbg !14421
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2248 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2364, metadata !DIExpression()), !dbg !14422
  call void @llvm.dbg.value(metadata i8* %1, metadata !2365, metadata !DIExpression()), !dbg !14422
  call void @llvm.dbg.value(metadata i32 %2, metadata !2366, metadata !DIExpression()), !dbg !14422
  call void @llvm.dbg.value(metadata i32 0, metadata !2367, metadata !DIExpression()), !dbg !14422
  call void @llvm.dbg.value(metadata i8 undef, metadata !2369, metadata !DIExpression()), !dbg !14422
  %4 = icmp eq i8* %1, null, !dbg !14423
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14425
  br i1 %6, label %46, label %7, !dbg !14425

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14426
  %9 = load i8, i8* %8, align 1, !dbg !14426
  call void @llvm.dbg.value(metadata i8 %9, metadata !2369, metadata !DIExpression()), !dbg !14422
  %10 = add i32 %2, -1, !dbg !14427
  call void @llvm.dbg.value(metadata i32 %10, metadata !2366, metadata !DIExpression()), !dbg !14422
  call void @llvm.dbg.value(metadata i8 0, metadata !2370, metadata !DIExpression()), !dbg !14428
  call void @llvm.dbg.value(metadata i8 %9, metadata !2369, metadata !DIExpression()), !dbg !14422
  call void @llvm.dbg.value(metadata i32 0, metadata !2367, metadata !DIExpression()), !dbg !14422
  %11 = icmp eq i8 %9, 0, !dbg !14429
  br i1 %11, label %12, label %15, !dbg !14431

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14432
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14433
  store i8 0, i8* %14, align 1, !dbg !14434
  br label %46, !dbg !14435

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2370, metadata !DIExpression()), !dbg !14428
  call void @llvm.dbg.value(metadata i8 %17, metadata !2369, metadata !DIExpression()), !dbg !14422
  call void @llvm.dbg.value(metadata i32 %18, metadata !2367, metadata !DIExpression()), !dbg !14422
  %19 = zext i8 %17 to i32, !dbg !14436
  %20 = zext i8 %16 to i32, !dbg !14437
  %21 = shl nuw i32 1, %20, !dbg !14437
  call void @llvm.dbg.value(metadata i32 %21, metadata !2368, metadata !DIExpression()), !dbg !14422
  %22 = and i32 %21, %19, !dbg !14439
  %23 = icmp eq i32 %22, 0, !dbg !14441
  br i1 %23, label %42, label %24, !dbg !14442

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14443
  %26 = sub i32 %10, %18, !dbg !14444
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14445
  %28 = load i8*, i8** %27, align 4, !dbg !14445
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14446
  %30 = load i32, i32* %29, align 4, !dbg !14446
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #28, !dbg !14447
  %32 = add i32 %31, %18, !dbg !14448
  call void @llvm.dbg.value(metadata i32 %32, metadata !2367, metadata !DIExpression()), !dbg !14422
  %33 = trunc i32 %21 to i8, !dbg !14449
  %34 = xor i8 %33, -1, !dbg !14449
  %35 = and i8 %17, %34, !dbg !14449
  call void @llvm.dbg.value(metadata i8 %35, metadata !2369, metadata !DIExpression()), !dbg !14422
  %36 = icmp eq i8 %35, 0, !dbg !14450
  br i1 %36, label %12, label %37, !dbg !14452

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14453
  %39 = sub i32 %10, %32, !dbg !14455
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.259, i32 0, i32 0), i32 noundef 1) #28, !dbg !14456
  %41 = add i32 %40, %32, !dbg !14457
  call void @llvm.dbg.value(metadata i32 %41, metadata !2367, metadata !DIExpression()), !dbg !14422
  br label %42, !dbg !14458

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14422
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14422
  call void @llvm.dbg.value(metadata i8 %44, metadata !2369, metadata !DIExpression()), !dbg !14422
  call void @llvm.dbg.value(metadata i32 %43, metadata !2367, metadata !DIExpression()), !dbg !14422
  %45 = add i8 %16, 1, !dbg !14459
  call void @llvm.dbg.value(metadata i8 %45, metadata !2370, metadata !DIExpression()), !dbg !14428
  br label %15, !dbg !14431

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.260, i32 0, i32 0), %3 ], !dbg !14422
  ret i8* %47, !dbg !14460
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14461 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14465, metadata !DIExpression()), !dbg !14470
  call void @llvm.dbg.value(metadata i32 %1, metadata !14466, metadata !DIExpression()), !dbg !14470
  call void @llvm.dbg.value(metadata i8* %2, metadata !14467, metadata !DIExpression()), !dbg !14470
  call void @llvm.dbg.value(metadata i32 %3, metadata !14468, metadata !DIExpression()), !dbg !14470
  %5 = icmp ult i32 %1, %3, !dbg !14471
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14471
  call void @llvm.dbg.value(metadata i32 %6, metadata !14469, metadata !DIExpression()), !dbg !14470
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !14472
  ret i32 %6, !dbg !14473
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14474 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14478, metadata !DIExpression()), !dbg !14479
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !14480
  ret void, !dbg !14481
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14482 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14491, metadata !DIExpression()), !dbg !14502
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14492, metadata !DIExpression()), !dbg !14502
  call void @llvm.dbg.value(metadata i32 %2, metadata !14493, metadata !DIExpression()), !dbg !14502
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14494, metadata !DIExpression()), !dbg !14502
  call void @llvm.dbg.value(metadata i8* %4, metadata !14495, metadata !DIExpression()), !dbg !14502
  call void @llvm.dbg.value(metadata i8* %5, metadata !14496, metadata !DIExpression()), !dbg !14502
  call void @llvm.dbg.value(metadata i8* %6, metadata !14497, metadata !DIExpression()), !dbg !14502
  call void @llvm.dbg.value(metadata i32 %7, metadata !14498, metadata !DIExpression()), !dbg !14502
  call void @llvm.dbg.value(metadata i32 %8, metadata !14499, metadata !DIExpression()), !dbg !14502
  call void @llvm.dbg.value(metadata i8* undef, metadata !14500, metadata !DIExpression()), !dbg !14502
  %11 = icmp eq i32 %7, 15, !dbg !14503
  br i1 %11, label %12, label %15, !dbg !14503

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !14503
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #28, !dbg !14503
  br i1 %14, label %19, label %18, !dbg !14503

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !14503
  %17 = icmp ult i32 %16, 31, !dbg !14503
  br i1 %17, label %19, label %18, !dbg !14503

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.272, i32 0, i32 0), i32 noundef 536) #27, !dbg !14507
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.273, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #27, !dbg !14507
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.272, i32 0, i32 0), i32 noundef 536) #27, !dbg !14507
  unreachable, !dbg !14507

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14509
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #28, !dbg !14510
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14511
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #28, !dbg !14512
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #28, !dbg !14513
  call void @llvm.dbg.value(metadata i8* %22, metadata !14501, metadata !DIExpression()), !dbg !14502
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !14514
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14515
  store i8* null, i8** %23, align 4, !dbg !14516
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14517
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !14517
  br i1 %25, label %29, label %26, !dbg !14519

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 6, !dbg !14520
  %28 = load %struct.k_heap*, %struct.k_heap** %27, align 8, !dbg !14520
  br label %29, !dbg !14521

29:                                               ; preds = %19, %26
  %30 = phi %struct.k_heap* [ %28, %26 ], [ null, %19 ], !dbg !14502
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14522
  store %struct.k_heap* %30, %struct.k_heap** %31, align 8, !dbg !14524
  ret i8* %22, !dbg !14525
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #5 !dbg !14526 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14530, metadata !DIExpression()), !dbg !14531
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !14532
  ret i1 %2, !dbg !14533
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #12 !dbg !14534 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14539, metadata !DIExpression()), !dbg !14540
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14541
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #28, !dbg !14542
  ret void, !dbg !14543
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #12 !dbg !14544 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14549, metadata !DIExpression()), !dbg !14553
  call void @llvm.dbg.value(metadata i32 %1, metadata !14550, metadata !DIExpression()), !dbg !14553
  call void @llvm.dbg.value(metadata i32 %2, metadata !14551, metadata !DIExpression()), !dbg !14553
  call void @llvm.dbg.value(metadata i32 %3, metadata !14552, metadata !DIExpression()), !dbg !14553
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14554
  store %union.anon* null, %union.anon** %5, align 8, !dbg !14555
  %6 = trunc i32 %3 to i8, !dbg !14556
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14557
  store i8 %6, i8* %7, align 4, !dbg !14558
  %8 = trunc i32 %2 to i8, !dbg !14559
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14560
  store i8 %8, i8* %9, align 1, !dbg !14561
  %10 = trunc i32 %1 to i8, !dbg !14562
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14563
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14563
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14563
  store i8 %10, i8* %13, align 2, !dbg !14564
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14565
  store i8 0, i8* %14, align 1, !dbg !14566
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #28, !dbg !14567
  ret void, !dbg !14568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !14569 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14573, metadata !DIExpression()), !dbg !14581
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14574, metadata !DIExpression()), !dbg !14581
  call void @llvm.dbg.value(metadata i32 %2, metadata !14575, metadata !DIExpression()), !dbg !14581
  call void @llvm.dbg.value(metadata i32 0, metadata !14580, metadata !DIExpression()), !dbg !14581
  %4 = add i32 %2, 7, !dbg !14582
  %5 = and i32 %4, -8, !dbg !14582
  %6 = add i32 %5, 64, !dbg !14582
  call void @llvm.dbg.value(metadata i32 %6, metadata !14576, metadata !DIExpression()), !dbg !14581
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.274(%struct.z_thread_stack_element* noundef %1) #28, !dbg !14584
  call void @llvm.dbg.value(metadata i8* %7, metadata !14579, metadata !DIExpression()), !dbg !14581
  call void @llvm.dbg.value(metadata i32 %5, metadata !14577, metadata !DIExpression()), !dbg !14581
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14585
  call void @llvm.dbg.value(metadata i8* %8, metadata !14578, metadata !DIExpression()), !dbg !14581
  call void @llvm.dbg.value(metadata i32 0, metadata !14580, metadata !DIExpression()), !dbg !14581
  %9 = ptrtoint i8* %7 to i32, !dbg !14586
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14587
  store i32 %9, i32* %10, align 4, !dbg !14588
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14589
  store i32 %5, i32* %11, align 4, !dbg !14590
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14591
  store i32 0, i32* %12, align 4, !dbg !14592
  call void @llvm.dbg.value(metadata i8* %8, metadata !14578, metadata !DIExpression()), !dbg !14581
  ret i8* %8, !dbg !14593
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.274(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !14594 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14598, metadata !DIExpression()), !dbg !14599
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14600
  ret i8* %2, !dbg !14601
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !14602 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14607, metadata !DIExpression()), !dbg !14608
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14609
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #28, !dbg !14610
  ret void, !dbg !14611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !14612 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14614, metadata !DIExpression()), !dbg !14615
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14616
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #28, !dbg !14617
  ret void, !dbg !14618
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !14619 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14623, metadata !DIExpression()), !dbg !14624
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14625
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14626
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14627
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14628
  ret void, !dbg !14629
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !14630 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14635, metadata !DIExpression()), !dbg !14636
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14637
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14638
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14639
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14640
  ret void, !dbg !14641
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14642 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14659, metadata !DIExpression()), !dbg !14660
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14650, metadata !DIExpression()), !dbg !14660
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14651, metadata !DIExpression()), !dbg !14660
  call void @llvm.dbg.value(metadata i32 %2, metadata !14652, metadata !DIExpression()), !dbg !14660
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14653, metadata !DIExpression()), !dbg !14660
  call void @llvm.dbg.value(metadata i8* %4, metadata !14654, metadata !DIExpression()), !dbg !14660
  call void @llvm.dbg.value(metadata i8* %5, metadata !14655, metadata !DIExpression()), !dbg !14660
  call void @llvm.dbg.value(metadata i8* %6, metadata !14656, metadata !DIExpression()), !dbg !14660
  call void @llvm.dbg.value(metadata i32 %7, metadata !14657, metadata !DIExpression()), !dbg !14660
  call void @llvm.dbg.value(metadata i32 %8, metadata !14658, metadata !DIExpression()), !dbg !14660
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !14661, !srcloc !14378
  call void @llvm.dbg.value(metadata i32 %11, metadata !14374, metadata !DIExpression()) #26, !dbg !14666
  %12 = icmp eq i32 %11, 0, !dbg !14667
  br i1 %12, label %14, label %13, !dbg !14668

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.272, i32 0, i32 0), i32 noundef 647) #27, !dbg !14669
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.278, i32 0, i32 0)) #27, !dbg !14669
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.272, i32 0, i32 0), i32 noundef 647) #27, !dbg !14669
  unreachable, !dbg !14669

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !14659, metadata !DIExpression()), !dbg !14660
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #28, !dbg !14671
  %17 = icmp eq i64 %15, -1, !dbg !14672
  br i1 %17, label %19, label %18, !dbg !14674

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #28, !dbg !14675
  br label %19, !dbg !14677

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !14678
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14679 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14684, metadata !DIExpression()), !dbg !14685
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14683, metadata !DIExpression()), !dbg !14685
  %4 = icmp eq i64 %3, 0, !dbg !14686
  br i1 %4, label %5, label %6, !dbg !14688

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #28, !dbg !14689
  br label %7, !dbg !14691

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #28, !dbg !14692
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14694
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14695 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14699, metadata !DIExpression()), !dbg !14700
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14701, !srcloc !14703
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #28, !dbg !14704
  ret void, !dbg !14705
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14706 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14709, metadata !DIExpression()), !dbg !14710
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14708, metadata !DIExpression()), !dbg !14710
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14711
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !14712
  ret void, !dbg !14713
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14714 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14716, metadata !DIExpression()), !dbg !14735
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !14736

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.272, i32 0, i32 0), i32 noundef 750) #27, !dbg !14740
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.282, i32 0, i32 0)) #27, !dbg !14740
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.272, i32 0, i32 0), i32 noundef 750) #27, !dbg !14740
  unreachable, !dbg !14740

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %29, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14716, metadata !DIExpression()), !dbg !14735
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14743
  br i1 %4, label %6, label %5, !dbg !14744

5:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !14745
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14733, metadata !DIExpression()), !dbg !14746
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %31, label %32, !dbg !14747

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14751
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14751
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14753
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !14753
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14754
  %12 = load i32, i32* %11, align 4, !dbg !14754
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14755
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !14755
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14756
  %16 = load i8*, i8** %15, align 4, !dbg !14756
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14757
  %18 = load i8*, i8** %17, align 4, !dbg !14757
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14758
  %20 = load i8*, i8** %19, align 4, !dbg !14758
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14759
  %22 = load i32, i32* %21, align 4, !dbg !14759
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14760
  %24 = load i32, i32* %23, align 4, !dbg !14760
  %25 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* undef) #28, !dbg !14761
  %26 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14762
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %26, i32 0, i32 2, !dbg !14763
  %28 = bitcast i8** %27 to %struct._static_thread_data**, !dbg !14764
  store %struct._static_thread_data* %3, %struct._static_thread_data** %28, align 4, !dbg !14764
  %29 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14765
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %29, metadata !14716, metadata !DIExpression()), !dbg !14735
  %30 = icmp ugt %struct._static_thread_data* %29, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14766
  br i1 %30, label %1, label %2, !dbg !14736, !llvm.loop !14767

31:                                               ; preds = %48, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.272, i32 0, i32 0), i32 noundef 781) #27, !dbg !14769
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.282, i32 0, i32 0)) #27, !dbg !14769
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.272, i32 0, i32 0), i32 noundef 781) #27, !dbg !14769
  unreachable, !dbg !14769

32:                                               ; preds = %5, %48
  %33 = phi %struct._static_thread_data* [ %49, %48 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %33, metadata !14733, metadata !DIExpression()), !dbg !14746
  %34 = icmp ult %struct._static_thread_data* %33, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14772
  br i1 %34, label %36, label %35, !dbg !14773

35:                                               ; preds = %32
  tail call void @k_sched_unlock() #27, !dbg !14774
  ret void, !dbg !14775

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 9, !dbg !14776
  %38 = load i32, i32* %37, align 4, !dbg !14776
  %39 = icmp eq i32 %38, -1, !dbg !14779
  br i1 %39, label %48, label %40, !dbg !14780

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 0, !dbg !14781
  %42 = load %struct.k_thread*, %struct.k_thread** %41, align 4, !dbg !14781
  %43 = icmp sgt i32 %38, 0, !dbg !14783
  %44 = select i1 %43, i32 %38, i32 0, !dbg !14783
  %45 = zext i32 %44 to i64, !dbg !14783
  %46 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %45) #28, !dbg !14783
  %47 = insertvalue [1 x i64] poison, i64 %46, 0, !dbg !14784
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %42, [1 x i64] %47) #28, !dbg !14784
  br label %48, !dbg !14785

48:                                               ; preds = %36, %40
  %49 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 1, !dbg !14786
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %49, metadata !14733, metadata !DIExpression()), !dbg !14746
  %50 = icmp ugt %struct._static_thread_data* %49, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14787
  br i1 %50, label %31, label %32, !dbg !14747, !llvm.loop !14788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !14790 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14795, metadata !DIExpression()), !dbg !14796
  call void @llvm.dbg.value(metadata i64 %0, metadata !14797, metadata !DIExpression()), !dbg !14814
  call void @llvm.dbg.value(metadata i32 1000, metadata !14802, metadata !DIExpression()), !dbg !14814
  call void @llvm.dbg.value(metadata i32 10000, metadata !14803, metadata !DIExpression()), !dbg !14814
  call void @llvm.dbg.value(metadata i8 1, metadata !14804, metadata !DIExpression()), !dbg !14814
  call void @llvm.dbg.value(metadata i8 0, metadata !14805, metadata !DIExpression()), !dbg !14814
  call void @llvm.dbg.value(metadata i8 1, metadata !14806, metadata !DIExpression()), !dbg !14814
  call void @llvm.dbg.value(metadata i8 0, metadata !14807, metadata !DIExpression()), !dbg !14814
  call void @llvm.dbg.value(metadata i8 1, metadata !14808, metadata !DIExpression()), !dbg !14814
  call void @llvm.dbg.value(metadata i8 0, metadata !14809, metadata !DIExpression()), !dbg !14814
  call void @llvm.dbg.value(metadata i64 0, metadata !14810, metadata !DIExpression()), !dbg !14814
  call void @llvm.dbg.value(metadata i64 0, metadata !14810, metadata !DIExpression()), !dbg !14814
  %2 = mul i64 %0, 10, !dbg !14816
  ret i64 %2, !dbg !14822
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !14823 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14825, metadata !DIExpression()), !dbg !14829
  call void @llvm.dbg.value(metadata i8* %1, metadata !14826, metadata !DIExpression()), !dbg !14829
  call void @llvm.dbg.value(metadata i8* %2, metadata !14827, metadata !DIExpression()), !dbg !14829
  call void @llvm.dbg.value(metadata i8* %3, metadata !14828, metadata !DIExpression()), !dbg !14829
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14830
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14831
  %7 = load i8, i8* %6, align 4, !dbg !14832
  %8 = or i8 %7, 4, !dbg !14832
  store i8 %8, i8* %6, align 4, !dbg !14832
  tail call void @z_thread_essential_clear() #28, !dbg !14833
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #30, !dbg !14834
  unreachable, !dbg !14834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #13 !dbg !14835 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14840, metadata !DIExpression()), !dbg !14842
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14843
  %3 = load i32, i32* %2, align 4, !dbg !14843
  call void @llvm.dbg.value(metadata i32 %3, metadata !14841, metadata !DIExpression()), !dbg !14842
  %4 = icmp eq i32 %3, 0, !dbg !14844
  br i1 %4, label %10, label %5, !dbg !14846

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !14847
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 6), align 4, !dbg !14850
  %8 = zext i8 %7 to i32, !dbg !14851
  %9 = icmp eq i32 %6, %8, !dbg !14852
  br i1 %9, label %11, label %10, !dbg !14853

10:                                               ; preds = %5, %1
  br label %11, !dbg !14854

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !14842
  ret i1 %12, !dbg !14855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #14 !dbg !14856 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14858, metadata !DIExpression()), !dbg !14859
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14860
  %3 = load i32, i32* %2, align 4, !dbg !14860
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 6), align 4, !dbg !14862
  %5 = zext i8 %4 to i32, !dbg !14863
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14864
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !14865
  %8 = or i32 %7, %5, !dbg !14866
  %9 = icmp eq i32 %3, %8, !dbg !14867
  br i1 %9, label %10, label %11, !dbg !14868

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !14869
  br label %11, !dbg !14870

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !14871
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #14 !dbg !14872 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14876, metadata !DIExpression()), !dbg !14877
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 6), align 4, !dbg !14878
  %3 = zext i8 %2 to i32, !dbg !14879
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14880
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !14881
  %6 = or i32 %5, %3, !dbg !14882
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14883
  store i32 %6, i32* %7, align 4, !dbg !14884
  ret void, !dbg !14885
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !14886 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14890, metadata !DIExpression()), !dbg !14891
  ret i32 -134, !dbg !14892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #5 !dbg !14893 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14897, metadata !DIExpression()), !dbg !14899
  call void @llvm.dbg.value(metadata i32 %1, metadata !14898, metadata !DIExpression()), !dbg !14899
  ret i32 -134, !dbg !14900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #5 !dbg !14901 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14908, metadata !DIExpression()), !dbg !14910
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !14909, metadata !DIExpression()), !dbg !14910
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14911
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !14913
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14910
  ret i32 %6, !dbg !14914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #5 !dbg !14915 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !14919, metadata !DIExpression()), !dbg !14920
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !14921
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14920
  ret i32 %3, !dbg !14923
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14924 {
  tail call void @sys_clock_idle_exit() #27, !dbg !14926
  ret void, !dbg !14927
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !14928 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14930, metadata !DIExpression()), !dbg !14933
  call void @llvm.dbg.value(metadata i8* %1, metadata !14931, metadata !DIExpression()), !dbg !14933
  call void @llvm.dbg.value(metadata i8* %2, metadata !14932, metadata !DIExpression()), !dbg !14933
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14934
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !14934
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !14934
  %7 = load i8, i8* %6, align 2, !dbg !14934
  %8 = icmp sgt i8 %7, -1, !dbg !14934
  br i1 %8, label %10, label %9, !dbg !14937

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 39) #27, !dbg !14938
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.293, i32 0, i32 0), i32 noundef 39) #27, !dbg !14938
  unreachable, !dbg !14938

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !14940, !srcloc !14947
  call void @llvm.dbg.value(metadata i32 undef, metadata !14943, metadata !DIExpression()) #26, !dbg !14948
  call void @llvm.dbg.value(metadata i32 undef, metadata !14944, metadata !DIExpression()) #26, !dbg !14948
  tail call fastcc void @k_cpu_idle() #28, !dbg !14949
  br label %10, !dbg !14950, !llvm.loop !14951
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14953 {
  tail call void @arch_cpu_idle() #27, !dbg !14954
  ret void, !dbg !14955
}

; Function Attrs: optsize
declare !dbg !14956 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #12 !dbg !14957 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14975, metadata !DIExpression()), !dbg !14979
  call void @llvm.dbg.value(metadata i8* %1, metadata !14976, metadata !DIExpression()), !dbg !14979
  call void @llvm.dbg.value(metadata i32 %2, metadata !14977, metadata !DIExpression()), !dbg !14979
  call void @llvm.dbg.value(metadata i32 %3, metadata !14978, metadata !DIExpression()), !dbg !14979
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14980
  store i32 %2, i32* %5, align 4, !dbg !14981
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !14982
  store i32 %3, i32* %6, align 4, !dbg !14983
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14984
  store i8* %1, i8** %7, align 4, !dbg !14985
  %8 = mul i32 %3, %2, !dbg !14986
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !14987
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14988
  store i8* %9, i8** %10, align 4, !dbg !14989
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14990
  store i8* %1, i8** %11, align 4, !dbg !14991
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14992
  store i8* %1, i8** %12, align 4, !dbg !14993
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14994
  store i32 0, i32* %13, align 4, !dbg !14995
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14996
  store i8 0, i8* %14, align 4, !dbg !14997
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14998
  tail call fastcc void @z_waitq_init.296(%union.anon* noundef %15) #28, !dbg !14999
  %16 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, i32 0, !dbg !15000
  store i32 0, i32* %16, align 4, !dbg !15000
  ret void, !dbg !15001
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.296(%union.anon* noundef %0) unnamed_addr #12 !dbg !15002 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15006, metadata !DIExpression()), !dbg !15007
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15008
  tail call fastcc void @sys_dlist_init.297(%struct._dnode* noundef %2) #28, !dbg !15009
  ret void, !dbg !15010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.297(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !15011 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15016, metadata !DIExpression()), !dbg !15017
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15018
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15019
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15020
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15021
  ret void, !dbg !15022
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !15023 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15027, metadata !DIExpression()), !dbg !15033
  call void @llvm.dbg.value(metadata i32 %1, metadata !15028, metadata !DIExpression()), !dbg !15033
  call void @llvm.dbg.value(metadata i32 %2, metadata !15029, metadata !DIExpression()), !dbg !15033
  %5 = bitcast i32* %4 to i8*, !dbg !15034
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !15034
  call void @llvm.dbg.value(metadata i32* %4, metadata !15032, metadata !DIExpression(DW_OP_deref)), !dbg !15033
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #28, !dbg !15035
  br i1 %6, label %13, label %7, !dbg !15037

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !15038
  call void @llvm.dbg.value(metadata i32 %8, metadata !15032, metadata !DIExpression()), !dbg !15033
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #28, !dbg !15040
  call void @llvm.dbg.value(metadata i8* %9, metadata !15030, metadata !DIExpression()), !dbg !15033
  %10 = icmp eq i8* %9, null, !dbg !15041
  br i1 %10, label %13, label %11, !dbg !15043

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #28, !dbg !15044
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15046
  store i8 1, i8* %12, align 4, !dbg !15047
  call void @llvm.dbg.value(metadata i32 0, metadata !15031, metadata !DIExpression()), !dbg !15033
  br label %13, !dbg !15048

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !15049
  call void @llvm.dbg.value(metadata i32 %14, metadata !15031, metadata !DIExpression()), !dbg !15033
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !15050
  ret i32 %14, !dbg !15051
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #24 !dbg !15052 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15057, metadata !DIExpression()), !dbg !15060
  call void @llvm.dbg.value(metadata i32 %1, metadata !15058, metadata !DIExpression()), !dbg !15060
  call void @llvm.dbg.value(metadata i32* %2, metadata !15059, metadata !DIExpression()), !dbg !15060
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !15061
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !15061
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !15061
  store i32 %6, i32* %2, align 4, !dbg !15061
  ret i1 %5, !dbg !15062
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !15063 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15067, metadata !DIExpression()), !dbg !15068
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #27, !dbg !15069
  ret i8* %2, !dbg !15070
}

; Function Attrs: optsize
declare !dbg !15071 dso_local i8* @z_thread_aligned_alloc(i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !15074 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15078, metadata !DIExpression()), !dbg !15079
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15080
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %2) #28, !dbg !15080
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !15080
  br i1 %4, label %5, label %15, !dbg !15082

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15083
  %7 = load i8, i8* %6, align 4, !dbg !15083
  %8 = and i8 %7, 1, !dbg !15085
  %9 = icmp eq i8 %8, 0, !dbg !15086
  br i1 %9, label %15, label %10, !dbg !15087

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15088
  %12 = load i8*, i8** %11, align 4, !dbg !15088
  tail call void @k_free(i8* noundef %12) #27, !dbg !15090
  %13 = load i8, i8* %6, align 4, !dbg !15091
  %14 = and i8 %13, -2, !dbg !15091
  store i8 %14, i8* %6, align 4, !dbg !15091
  br label %15, !dbg !15092

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !15079
  ret i32 %16, !dbg !15093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #13 !dbg !15094 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15098, metadata !DIExpression()), !dbg !15099
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15100
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #28, !dbg !15101
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15102
  ret %struct.k_thread* %4, !dbg !15103
}

; Function Attrs: optsize
declare !dbg !15104 dso_local void @k_free(i8* noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #13 !dbg !15105 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15109, metadata !DIExpression()), !dbg !15110
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #28, !dbg !15111
  br i1 %2, label %6, label %3, !dbg !15111

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15112
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15112
  br label %6, !dbg !15111

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15111
  ret %struct._dnode* %7, !dbg !15113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !15114 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15118, metadata !DIExpression()), !dbg !15119
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15120
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15120
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15121
  ret i1 %4, !dbg !15122
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15123 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15133, metadata !DIExpression()), !dbg !15141
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15131, metadata !DIExpression()), !dbg !15141
  call void @llvm.dbg.value(metadata i8* %1, metadata !15132, metadata !DIExpression()), !dbg !15141
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !15142, !srcloc !15151
  call void @llvm.dbg.value(metadata i32 %5, metadata !15145, metadata !DIExpression()) #26, !dbg !15152
  %6 = icmp eq i32 %5, 0, !dbg !15153
  %7 = icmp eq i64 %4, 0, !dbg !15154
  %8 = select i1 %6, i1 true, i1 %7, !dbg !15154
  br i1 %8, label %10, label %9, !dbg !15154

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.302, i32 0, i32 0), i32 noundef 118) #27, !dbg !15155
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.303, i32 0, i32 0)) #27, !dbg !15155
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.302, i32 0, i32 0), i32 noundef 118) #27, !dbg !15155
  unreachable, !dbg !15155

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15157
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15158, metadata !DIExpression()) #26, !dbg !15165
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15167, !srcloc !15173
  call void @llvm.dbg.value(metadata i32 undef, metadata !15170, metadata !DIExpression()) #26, !dbg !15174
  call void @llvm.dbg.value(metadata i32 undef, metadata !15171, metadata !DIExpression()) #26, !dbg !15174
  call void @llvm.dbg.value(metadata i32 undef, metadata !15164, metadata !DIExpression()) #26, !dbg !15165
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15175
  br i1 %13, label %15, label %14, !dbg !15178

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #27, !dbg !15179
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #27, !dbg !15179
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #27, !dbg !15179
  unreachable, !dbg !15179

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !15167
  call void @llvm.dbg.value(metadata i32 %16, metadata !15170, metadata !DIExpression()) #26, !dbg !15174
  call void @llvm.dbg.value(metadata i32 %16, metadata !15164, metadata !DIExpression()) #26, !dbg !15165
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15181
  call void @llvm.dbg.value(metadata i32 %16, metadata !15135, metadata !DIExpression()), !dbg !15141
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15182
  %18 = load i32, i32* %17, align 4, !dbg !15182
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15184
  %20 = load i32, i32* %19, align 4, !dbg !15184
  %21 = icmp ult i32 %18, %20, !dbg !15185
  br i1 %21, label %22, label %52, !dbg !15186

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15187
  %24 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %23) #27, !dbg !15189
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !15134, metadata !DIExpression()), !dbg !15141
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !15190
  br i1 %25, label %34, label %26, !dbg !15192

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 0, i32 6, !dbg !15193
  %28 = load i8*, i8** %27, align 4, !dbg !15193
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15195
  %30 = load i32, i32* %29, align 4, !dbg !15195
  %31 = tail call i8* @memcpy(i8* noundef %28, i8* noundef %1, i32 noundef %30) #27, !dbg !15196
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !15197, metadata !DIExpression()), !dbg !15203
  call void @llvm.dbg.value(metadata i32 0, metadata !15202, metadata !DIExpression()), !dbg !15203
  %32 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 7, i32 1, !dbg !15205
  store i32 0, i32* %32, align 4, !dbg !15206
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %24) #27, !dbg !15207
  %33 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15208
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %33) #27, !dbg !15208
  br label %64, !dbg !15209

34:                                               ; preds = %22
  %35 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15210
  %36 = load i8*, i8** %35, align 4, !dbg !15210
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15212
  %38 = load i32, i32* %37, align 4, !dbg !15212
  %39 = tail call i8* @memcpy(i8* noundef %36, i8* noundef %1, i32 noundef %38) #27, !dbg !15213
  %40 = load i32, i32* %37, align 4, !dbg !15214
  %41 = load i8*, i8** %35, align 4, !dbg !15215
  %42 = getelementptr inbounds i8, i8* %41, i32 %40, !dbg !15215
  store i8* %42, i8** %35, align 4, !dbg !15215
  %43 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15216
  %44 = load i8*, i8** %43, align 4, !dbg !15216
  %45 = icmp eq i8* %42, %44, !dbg !15218
  br i1 %45, label %46, label %49, !dbg !15219

46:                                               ; preds = %34
  %47 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15220
  %48 = load i8*, i8** %47, align 4, !dbg !15220
  store i8* %48, i8** %35, align 4, !dbg !15222
  br label %49, !dbg !15223

49:                                               ; preds = %46, %34
  %50 = load i32, i32* %17, align 4, !dbg !15224
  %51 = add i32 %50, 1, !dbg !15224
  store i32 %51, i32* %17, align 4, !dbg !15224
  call void @llvm.dbg.value(metadata i32 0, metadata !15140, metadata !DIExpression()), !dbg !15141
  br label %59, !dbg !15225

52:                                               ; preds = %15
  br i1 %7, label %59, label %53, !dbg !15226

53:                                               ; preds = %52
  %54 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15227
  %55 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %54, i32 0, i32 0, i32 6, !dbg !15230
  store i8* %1, i8** %55, align 4, !dbg !15231
  %56 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15232
  %57 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15233
  %58 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %57, %union.anon* noundef %56, [1 x i64] %2) #27, !dbg !15233
  call void @llvm.dbg.value(metadata i32 %58, metadata !15140, metadata !DIExpression()), !dbg !15141
  br label %64, !dbg !15234

59:                                               ; preds = %52, %49
  %60 = phi i32 [ 0, %49 ], [ -35, %52 ], !dbg !15235
  call void @llvm.dbg.value(metadata i32 %60, metadata !15140, metadata !DIExpression()), !dbg !15141
  call void @llvm.dbg.value(metadata i32 undef, metadata !15236, metadata !DIExpression()) #26, !dbg !15242
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15241, metadata !DIExpression()) #26, !dbg !15242
  %61 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15244
  br i1 %61, label %63, label %62, !dbg !15247

62:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 194) #27, !dbg !15248
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.308, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #27, !dbg !15248
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 194) #27, !dbg !15248
  unreachable, !dbg !15248

63:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !15236, metadata !DIExpression()) #26, !dbg !15242
  call void @llvm.dbg.value(metadata i32 %16, metadata !15250, metadata !DIExpression()) #26, !dbg !15253
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !15255, !srcloc !15256
  br label %64, !dbg !15257

64:                                               ; preds = %63, %53, %26
  %65 = phi i32 [ 0, %26 ], [ %60, %63 ], [ %58, %53 ], !dbg !15141
  ret i32 %65, !dbg !15258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #14 !dbg !15259 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15269, metadata !DIExpression()), !dbg !15271
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !15270, metadata !DIExpression()), !dbg !15271
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15272
  %4 = load i32, i32* %3, align 4, !dbg !15272
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !15273
  store i32 %4, i32* %5, align 4, !dbg !15274
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15275
  %7 = load i32, i32* %6, align 4, !dbg !15275
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !15276
  store i32 %7, i32* %8, align 4, !dbg !15277
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15278
  %10 = load i32, i32* %9, align 4, !dbg !15278
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !15279
  store i32 %10, i32* %11, align 4, !dbg !15280
  ret void, !dbg !15281
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15282 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15288, metadata !DIExpression()), !dbg !15292
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15286, metadata !DIExpression()), !dbg !15292
  call void @llvm.dbg.value(metadata i8* %1, metadata !15287, metadata !DIExpression()), !dbg !15292
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !15293, !srcloc !15151
  call void @llvm.dbg.value(metadata i32 %5, metadata !15145, metadata !DIExpression()) #26, !dbg !15298
  %6 = icmp eq i32 %5, 0, !dbg !15299
  %7 = icmp eq i64 %4, 0, !dbg !15300
  %8 = select i1 %6, i1 true, i1 %7, !dbg !15300
  br i1 %8, label %10, label %9, !dbg !15300

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.302, i32 0, i32 0), i32 noundef 208) #27, !dbg !15301
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.303, i32 0, i32 0)) #27, !dbg !15301
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.302, i32 0, i32 0), i32 noundef 208) #27, !dbg !15301
  unreachable, !dbg !15301

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15303
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15158, metadata !DIExpression()) #26, !dbg !15304
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15306, !srcloc !15173
  call void @llvm.dbg.value(metadata i32 undef, metadata !15170, metadata !DIExpression()) #26, !dbg !15308
  call void @llvm.dbg.value(metadata i32 undef, metadata !15171, metadata !DIExpression()) #26, !dbg !15308
  call void @llvm.dbg.value(metadata i32 undef, metadata !15164, metadata !DIExpression()) #26, !dbg !15304
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15309
  br i1 %13, label %15, label %14, !dbg !15310

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #27, !dbg !15311
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #27, !dbg !15311
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #27, !dbg !15311
  unreachable, !dbg !15311

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !15306
  call void @llvm.dbg.value(metadata i32 %16, metadata !15170, metadata !DIExpression()) #26, !dbg !15308
  call void @llvm.dbg.value(metadata i32 %16, metadata !15164, metadata !DIExpression()) #26, !dbg !15304
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15312
  call void @llvm.dbg.value(metadata i32 %16, metadata !15289, metadata !DIExpression()), !dbg !15292
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15313
  %18 = load i32, i32* %17, align 4, !dbg !15313
  %19 = icmp eq i32 %18, 0, !dbg !15315
  br i1 %19, label %61, label %20, !dbg !15316

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15317
  %22 = load i8*, i8** %21, align 4, !dbg !15317
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15319
  %24 = load i32, i32* %23, align 4, !dbg !15319
  %25 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %22, i32 noundef %24) #27, !dbg !15320
  %26 = load i32, i32* %23, align 4, !dbg !15321
  %27 = load i8*, i8** %21, align 4, !dbg !15322
  %28 = getelementptr inbounds i8, i8* %27, i32 %26, !dbg !15322
  store i8* %28, i8** %21, align 4, !dbg !15322
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15323
  %30 = load i8*, i8** %29, align 4, !dbg !15323
  %31 = icmp eq i8* %28, %30, !dbg !15325
  br i1 %31, label %32, label %35, !dbg !15326

32:                                               ; preds = %20
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15327
  %34 = load i8*, i8** %33, align 4, !dbg !15327
  store i8* %34, i8** %21, align 4, !dbg !15329
  br label %35, !dbg !15330

35:                                               ; preds = %32, %20
  %36 = load i32, i32* %17, align 4, !dbg !15331
  %37 = add i32 %36, -1, !dbg !15331
  store i32 %37, i32* %17, align 4, !dbg !15331
  %38 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15332
  %39 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %38) #27, !dbg !15333
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !15290, metadata !DIExpression()), !dbg !15292
  %40 = icmp eq %struct.k_thread* %39, null, !dbg !15334
  br i1 %40, label %68, label %41, !dbg !15336

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15337
  %43 = load i8*, i8** %42, align 4, !dbg !15337
  %44 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 0, i32 6, !dbg !15339
  %45 = load i8*, i8** %44, align 4, !dbg !15339
  %46 = load i32, i32* %23, align 4, !dbg !15340
  %47 = tail call i8* @memcpy(i8* noundef %43, i8* noundef %45, i32 noundef %46) #27, !dbg !15341
  %48 = load i32, i32* %23, align 4, !dbg !15342
  %49 = load i8*, i8** %42, align 4, !dbg !15343
  %50 = getelementptr inbounds i8, i8* %49, i32 %48, !dbg !15343
  store i8* %50, i8** %42, align 4, !dbg !15343
  %51 = load i8*, i8** %29, align 4, !dbg !15344
  %52 = icmp eq i8* %50, %51, !dbg !15346
  br i1 %52, label %53, label %56, !dbg !15347

53:                                               ; preds = %41
  %54 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15348
  %55 = load i8*, i8** %54, align 4, !dbg !15348
  store i8* %55, i8** %42, align 4, !dbg !15350
  br label %56, !dbg !15351

56:                                               ; preds = %53, %41
  %57 = load i32, i32* %17, align 4, !dbg !15352
  %58 = add i32 %57, 1, !dbg !15352
  store i32 %58, i32* %17, align 4, !dbg !15352
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !15197, metadata !DIExpression()), !dbg !15353
  call void @llvm.dbg.value(metadata i32 0, metadata !15202, metadata !DIExpression()), !dbg !15353
  %59 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 7, i32 1, !dbg !15355
  store i32 0, i32* %59, align 4, !dbg !15356
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %39) #27, !dbg !15357
  %60 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15358
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %60) #27, !dbg !15358
  br label %73, !dbg !15359

61:                                               ; preds = %15
  br i1 %7, label %68, label %62, !dbg !15360

62:                                               ; preds = %61
  %63 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15361
  %64 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %63, i32 0, i32 0, i32 6, !dbg !15364
  store i8* %1, i8** %64, align 4, !dbg !15365
  %65 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15366
  %66 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15367
  %67 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %66, %union.anon* noundef %65, [1 x i64] %2) #27, !dbg !15367
  call void @llvm.dbg.value(metadata i32 %67, metadata !15291, metadata !DIExpression()), !dbg !15292
  br label %73, !dbg !15368

68:                                               ; preds = %61, %35
  %69 = phi i32 [ 0, %35 ], [ -35, %61 ], !dbg !15369
  call void @llvm.dbg.value(metadata i32 %69, metadata !15291, metadata !DIExpression()), !dbg !15292
  call void @llvm.dbg.value(metadata i32 undef, metadata !15236, metadata !DIExpression()) #26, !dbg !15370
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15241, metadata !DIExpression()) #26, !dbg !15370
  %70 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15372
  br i1 %70, label %72, label %71, !dbg !15373

71:                                               ; preds = %68
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 194) #27, !dbg !15374
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.308, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #27, !dbg !15374
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 194) #27, !dbg !15374
  unreachable, !dbg !15374

72:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i32 %16, metadata !15236, metadata !DIExpression()) #26, !dbg !15370
  call void @llvm.dbg.value(metadata i32 %16, metadata !15250, metadata !DIExpression()) #26, !dbg !15375
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !15377, !srcloc !15256
  br label %73, !dbg !15378

73:                                               ; preds = %72, %62, %56
  %74 = phi i32 [ 0, %56 ], [ %69, %72 ], [ %67, %62 ], !dbg !15292
  ret i32 %74, !dbg !15379
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !15380 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15384, metadata !DIExpression()), !dbg !15388
  call void @llvm.dbg.value(metadata i8* %1, metadata !15385, metadata !DIExpression()), !dbg !15388
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15389
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !15158, metadata !DIExpression()) #26, !dbg !15390
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15392, !srcloc !15173
  call void @llvm.dbg.value(metadata i32 undef, metadata !15170, metadata !DIExpression()) #26, !dbg !15394
  call void @llvm.dbg.value(metadata i32 undef, metadata !15171, metadata !DIExpression()) #26, !dbg !15394
  call void @llvm.dbg.value(metadata i32 undef, metadata !15164, metadata !DIExpression()) #26, !dbg !15390
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !15395
  br i1 %5, label %7, label %6, !dbg !15396

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #27, !dbg !15397
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #27, !dbg !15397
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #27, !dbg !15397
  unreachable, !dbg !15397

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15170, metadata !DIExpression()) #26, !dbg !15394
  call void @llvm.dbg.value(metadata i32 undef, metadata !15164, metadata !DIExpression()) #26, !dbg !15390
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !15398
  call void @llvm.dbg.value(metadata i32 undef, metadata !15386, metadata !DIExpression()), !dbg !15388
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15399
  %9 = load i32, i32* %8, align 4, !dbg !15399
  %10 = icmp eq i32 %9, 0, !dbg !15401
  br i1 %10, label %17, label %11, !dbg !15402

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15403
  %13 = load i8*, i8** %12, align 4, !dbg !15403
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15405
  %15 = load i32, i32* %14, align 4, !dbg !15405
  %16 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %13, i32 noundef %15) #27, !dbg !15406
  call void @llvm.dbg.value(metadata i32 0, metadata !15387, metadata !DIExpression()), !dbg !15388
  br label %17, !dbg !15407

17:                                               ; preds = %7, %11
  %18 = phi i32 [ 0, %11 ], [ -35, %7 ], !dbg !15408
  call void @llvm.dbg.value(metadata i32 %18, metadata !15387, metadata !DIExpression()), !dbg !15388
  call void @llvm.dbg.value(metadata i32 undef, metadata !15236, metadata !DIExpression()) #26, !dbg !15409
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !15241, metadata !DIExpression()) #26, !dbg !15409
  %19 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !15411
  br i1 %19, label %21, label %20, !dbg !15412

20:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 194) #27, !dbg !15413
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.308, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #27, !dbg !15413
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 194) #27, !dbg !15413
  unreachable, !dbg !15413

21:                                               ; preds = %17
  %22 = extractvalue { i32, i32 } %4, 0, !dbg !15392
  call void @llvm.dbg.value(metadata i32 %22, metadata !15170, metadata !DIExpression()) #26, !dbg !15394
  call void @llvm.dbg.value(metadata i32 %22, metadata !15164, metadata !DIExpression()) #26, !dbg !15390
  call void @llvm.dbg.value(metadata i32 %22, metadata !15386, metadata !DIExpression()), !dbg !15388
  call void @llvm.dbg.value(metadata i32 undef, metadata !15236, metadata !DIExpression()) #26, !dbg !15409
  call void @llvm.dbg.value(metadata i32 undef, metadata !15250, metadata !DIExpression()) #26, !dbg !15414
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %22) #26, !dbg !15416, !srcloc !15256
  ret i32 %18, !dbg !15417
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !15418 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15422, metadata !DIExpression()), !dbg !15425
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15426
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %2, metadata !15158, metadata !DIExpression()) #26, !dbg !15427
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15429, !srcloc !15173
  call void @llvm.dbg.value(metadata i32 undef, metadata !15170, metadata !DIExpression()) #26, !dbg !15431
  call void @llvm.dbg.value(metadata i32 undef, metadata !15171, metadata !DIExpression()) #26, !dbg !15431
  call void @llvm.dbg.value(metadata i32 undef, metadata !15164, metadata !DIExpression()) #26, !dbg !15427
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %2) #27, !dbg !15432
  br i1 %4, label %6, label %5, !dbg !15433

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #27, !dbg !15434
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %2) #27, !dbg !15434
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #27, !dbg !15434
  unreachable, !dbg !15434

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15170, metadata !DIExpression()) #26, !dbg !15431
  call void @llvm.dbg.value(metadata i32 undef, metadata !15164, metadata !DIExpression()) #26, !dbg !15427
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %2) #27, !dbg !15435
  call void @llvm.dbg.value(metadata i32 undef, metadata !15423, metadata !DIExpression()), !dbg !15425
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %7) #27, !dbg !15436
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !15424, metadata !DIExpression()), !dbg !15425
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !15437
  br i1 %9, label %15, label %10, !dbg !15438

10:                                               ; preds = %6, %10
  %11 = phi %struct.k_thread* [ %13, %10 ], [ %8, %6 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !15197, metadata !DIExpression()), !dbg !15439
  call void @llvm.dbg.value(metadata i32 -35, metadata !15202, metadata !DIExpression()), !dbg !15439
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 7, i32 1, !dbg !15442
  store i32 -35, i32* %12, align 4, !dbg !15443
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %11) #27, !dbg !15444
  %13 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %7) #27, !dbg !15436
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15424, metadata !DIExpression()), !dbg !15425
  %14 = icmp eq %struct.k_thread* %13, null, !dbg !15437
  br i1 %14, label %15, label %10, !dbg !15438, !llvm.loop !15445

15:                                               ; preds = %10, %6
  %16 = extractvalue { i32, i32 } %3, 0, !dbg !15429
  call void @llvm.dbg.value(metadata i32 %16, metadata !15170, metadata !DIExpression()) #26, !dbg !15431
  call void @llvm.dbg.value(metadata i32 %16, metadata !15164, metadata !DIExpression()) #26, !dbg !15427
  call void @llvm.dbg.value(metadata i32 %16, metadata !15423, metadata !DIExpression()), !dbg !15425
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15447
  store i32 0, i32* %17, align 4, !dbg !15448
  %18 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15449
  %19 = load i8*, i8** %18, align 4, !dbg !15449
  %20 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15450
  store i8* %19, i8** %20, align 4, !dbg !15451
  %21 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15452
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %2, [1 x i32] %21) #27, !dbg !15452
  ret void, !dbg !15453
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !15454 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15469, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata i32 %1, metadata !15470, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata i32 %2, metadata !15471, metadata !DIExpression()), !dbg !15472
  %4 = icmp eq i32 %2, 0, !dbg !15473
  %5 = icmp ugt i32 %1, %2, !dbg !15473
  %6 = or i1 %4, %5, !dbg !15473
  br i1 %6, label %11, label %7, !dbg !15473

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15475
  store i32 %1, i32* %8, align 4, !dbg !15476
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !15477
  store i32 %2, i32* %9, align 4, !dbg !15478
  %10 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !15479
  tail call fastcc void @z_waitq_init.311(%union.anon* noundef %10) #28, !dbg !15480
  br label %11, !dbg !15481

11:                                               ; preds = %3, %7
  %12 = phi i32 [ 0, %7 ], [ -22, %3 ], !dbg !15472
  ret i32 %12, !dbg !15482
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.311(%union.anon* noundef %0) unnamed_addr #12 !dbg !15483 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15488, metadata !DIExpression()), !dbg !15489
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15490
  tail call fastcc void @sys_dlist_init.312(%struct._dnode* noundef %2) #28, !dbg !15491
  ret void, !dbg !15492
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.312(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !15493 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15498, metadata !DIExpression()), !dbg !15499
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15500
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15501
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15502
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15503
  ret void, !dbg !15504
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_give(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !15505 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15509, metadata !DIExpression()), !dbg !15595
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.313, metadata !15596, metadata !DIExpression()) #26, !dbg !15603
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15605, !srcloc !15611
  call void @llvm.dbg.value(metadata i32 undef, metadata !15608, metadata !DIExpression()) #26, !dbg !15612
  call void @llvm.dbg.value(metadata i32 undef, metadata !15609, metadata !DIExpression()) #26, !dbg !15612
  call void @llvm.dbg.value(metadata i32 undef, metadata !15602, metadata !DIExpression()) #26, !dbg !15603
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.313) #27, !dbg !15613
  br i1 %3, label %5, label %4, !dbg !15616

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.316, i32 0, i32 0), i32 noundef 148) #27, !dbg !15617
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.317, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.313) #27, !dbg !15617
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.316, i32 0, i32 0), i32 noundef 148) #27, !dbg !15617
  unreachable, !dbg !15617

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15608, metadata !DIExpression()) #26, !dbg !15612
  call void @llvm.dbg.value(metadata i32 undef, metadata !15602, metadata !DIExpression()) #26, !dbg !15603
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.313) #27, !dbg !15619
  call void @llvm.dbg.value(metadata i32 undef, metadata !15510, metadata !DIExpression()), !dbg !15595
  %6 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !15620
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %6) #27, !dbg !15621
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15515, metadata !DIExpression()), !dbg !15595
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15622
  br i1 %8, label %11, label %9, !dbg !15624

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15625, metadata !DIExpression()), !dbg !15631
  call void @llvm.dbg.value(metadata i32 0, metadata !15630, metadata !DIExpression()), !dbg !15631
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !15634
  store i32 0, i32* %10, align 4, !dbg !15635
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #27, !dbg !15636
  br label %19, !dbg !15637

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15638
  %13 = load i32, i32* %12, align 4, !dbg !15638
  %14 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !15640
  %15 = load i32, i32* %14, align 4, !dbg !15640
  %16 = icmp ne i32 %13, %15, !dbg !15641
  %17 = zext i1 %16 to i32, !dbg !15642
  %18 = add i32 %13, %17, !dbg !15643
  store i32 %18, i32* %12, align 4, !dbg !15643
  br label %19

19:                                               ; preds = %11, %9
  %20 = extractvalue { i32, i32 } %2, 0, !dbg !15605
  call void @llvm.dbg.value(metadata i32 %20, metadata !15608, metadata !DIExpression()) #26, !dbg !15612
  call void @llvm.dbg.value(metadata i32 %20, metadata !15602, metadata !DIExpression()) #26, !dbg !15603
  call void @llvm.dbg.value(metadata i32 %20, metadata !15510, metadata !DIExpression()), !dbg !15595
  %21 = insertvalue [1 x i32] poison, i32 %20, 0, !dbg !15644
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.313, [1 x i32] %21) #27, !dbg !15644
  ret void, !dbg !15645
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15646 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15655, metadata !DIExpression()), !dbg !15659
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15654, metadata !DIExpression()), !dbg !15659
  call void @llvm.dbg.value(metadata i32 0, metadata !15656, metadata !DIExpression()), !dbg !15659
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !15660, !srcloc !15669
  call void @llvm.dbg.value(metadata i32 %4, metadata !15663, metadata !DIExpression()) #26, !dbg !15670
  %5 = icmp eq i32 %4, 0, !dbg !15671
  %6 = icmp eq i64 %3, 0, !dbg !15672
  %7 = select i1 %5, i1 true, i1 %6, !dbg !15672
  br i1 %7, label %9, label %8, !dbg !15672

8:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.321, i32 0, i32 0), i32 noundef 122) #27, !dbg !15673
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.322, i32 0, i32 0)) #27, !dbg !15673
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.321, i32 0, i32 0), i32 noundef 122) #27, !dbg !15673
  unreachable, !dbg !15673

9:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.313, metadata !15596, metadata !DIExpression()) #26, !dbg !15675
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15677, !srcloc !15611
  call void @llvm.dbg.value(metadata i32 undef, metadata !15608, metadata !DIExpression()) #26, !dbg !15679
  call void @llvm.dbg.value(metadata i32 undef, metadata !15609, metadata !DIExpression()) #26, !dbg !15679
  call void @llvm.dbg.value(metadata i32 undef, metadata !15602, metadata !DIExpression()) #26, !dbg !15675
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.313) #27, !dbg !15680
  br i1 %11, label %13, label %12, !dbg !15681

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.316, i32 0, i32 0), i32 noundef 148) #27, !dbg !15682
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.317, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.313) #27, !dbg !15682
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.316, i32 0, i32 0), i32 noundef 148) #27, !dbg !15682
  unreachable, !dbg !15682

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %10, 0, !dbg !15677
  call void @llvm.dbg.value(metadata i32 %14, metadata !15608, metadata !DIExpression()) #26, !dbg !15679
  call void @llvm.dbg.value(metadata i32 %14, metadata !15602, metadata !DIExpression()) #26, !dbg !15675
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.313) #27, !dbg !15683
  call void @llvm.dbg.value(metadata i32 %14, metadata !15657, metadata !DIExpression()), !dbg !15659
  %15 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15684
  %16 = load i32, i32* %15, align 4, !dbg !15684
  %17 = icmp eq i32 %16, 0, !dbg !15684
  br i1 %17, label %23, label %18, !dbg !15686, !prof !15687

18:                                               ; preds = %13
  %19 = add i32 %16, -1, !dbg !15688
  store i32 %19, i32* %15, align 4, !dbg !15688
  call void @llvm.dbg.value(metadata i32 undef, metadata !15690, metadata !DIExpression()) #26, !dbg !15696
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.313, metadata !15695, metadata !DIExpression()) #26, !dbg !15696
  %20 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.313) #27, !dbg !15698
  br i1 %20, label %22, label %21, !dbg !15701

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.316, i32 0, i32 0), i32 noundef 194) #27, !dbg !15702
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.324, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.313) #27, !dbg !15702
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.316, i32 0, i32 0), i32 noundef 194) #27, !dbg !15702
  unreachable, !dbg !15702

22:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %14, metadata !15690, metadata !DIExpression()) #26, !dbg !15696
  call void @llvm.dbg.value(metadata i32 %14, metadata !15704, metadata !DIExpression()) #26, !dbg !15707
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !15709, !srcloc !15710
  call void @llvm.dbg.value(metadata i32 0, metadata !15656, metadata !DIExpression()), !dbg !15659
  br label %32, !dbg !15711

23:                                               ; preds = %13
  br i1 %6, label %24, label %28, !dbg !15712

24:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !15690, metadata !DIExpression()) #26, !dbg !15713
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.313, metadata !15695, metadata !DIExpression()) #26, !dbg !15713
  %25 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.313) #27, !dbg !15717
  br i1 %25, label %27, label %26, !dbg !15718

26:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.316, i32 0, i32 0), i32 noundef 194) #27, !dbg !15719
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.324, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.313) #27, !dbg !15719
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.316, i32 0, i32 0), i32 noundef 194) #27, !dbg !15719
  unreachable, !dbg !15719

27:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 %14, metadata !15690, metadata !DIExpression()) #26, !dbg !15713
  call void @llvm.dbg.value(metadata i32 %14, metadata !15704, metadata !DIExpression()) #26, !dbg !15720
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !15722, !srcloc !15710
  call void @llvm.dbg.value(metadata i32 -16, metadata !15656, metadata !DIExpression()), !dbg !15659
  br label %32, !dbg !15723

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !15724
  %30 = insertvalue [1 x i32] poison, i32 %14, 0, !dbg !15725
  %31 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.313, [1 x i32] %30, %union.anon* noundef %29, [1 x i64] %1) #27, !dbg !15725
  call void @llvm.dbg.value(metadata i32 %31, metadata !15656, metadata !DIExpression()), !dbg !15659
  br label %32, !dbg !15726

32:                                               ; preds = %22, %27, %28
  %33 = phi i32 [ 0, %22 ], [ -16, %27 ], [ %31, %28 ], !dbg !15659
  call void @llvm.dbg.value(metadata i32 %33, metadata !15656, metadata !DIExpression()), !dbg !15659
  call void @llvm.dbg.label(metadata !15658), !dbg !15727
  ret i32 %33, !dbg !15728
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_reset(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !15729 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15731, metadata !DIExpression()), !dbg !15734
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.313, metadata !15596, metadata !DIExpression()) #26, !dbg !15735
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15737, !srcloc !15611
  call void @llvm.dbg.value(metadata i32 undef, metadata !15608, metadata !DIExpression()) #26, !dbg !15739
  call void @llvm.dbg.value(metadata i32 undef, metadata !15609, metadata !DIExpression()) #26, !dbg !15739
  call void @llvm.dbg.value(metadata i32 undef, metadata !15602, metadata !DIExpression()) #26, !dbg !15735
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.313) #27, !dbg !15740
  br i1 %3, label %5, label %4, !dbg !15741

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.316, i32 0, i32 0), i32 noundef 148) #27, !dbg !15742
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.317, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.313) #27, !dbg !15742
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.316, i32 0, i32 0), i32 noundef 148) #27, !dbg !15742
  unreachable, !dbg !15742

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15608, metadata !DIExpression()) #26, !dbg !15739
  call void @llvm.dbg.value(metadata i32 undef, metadata !15602, metadata !DIExpression()) #26, !dbg !15735
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.313) #27, !dbg !15743
  call void @llvm.dbg.value(metadata i32 undef, metadata !15733, metadata !DIExpression()), !dbg !15734
  %6 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %6) #27, !dbg !15744
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15732, metadata !DIExpression()), !dbg !15734
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15746
  br i1 %8, label %14, label %9, !dbg !15748

9:                                                ; preds = %5, %9
  %10 = phi %struct.k_thread* [ %12, %9 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !15625, metadata !DIExpression()), !dbg !15749
  call void @llvm.dbg.value(metadata i32 -11, metadata !15630, metadata !DIExpression()), !dbg !15749
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %10, i32 0, i32 7, i32 1, !dbg !15751
  store i32 -11, i32* %11, align 4, !dbg !15752
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %10) #27, !dbg !15753
  %12 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %6) #27, !dbg !15744
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !15732, metadata !DIExpression()), !dbg !15734
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !15746
  br i1 %13, label %14, label %9, !dbg !15748, !llvm.loop !15754

14:                                               ; preds = %9, %5
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15737
  call void @llvm.dbg.value(metadata i32 %15, metadata !15608, metadata !DIExpression()) #26, !dbg !15739
  call void @llvm.dbg.value(metadata i32 %15, metadata !15602, metadata !DIExpression()) #26, !dbg !15735
  call void @llvm.dbg.value(metadata i32 %15, metadata !15733, metadata !DIExpression()), !dbg !15734
  %16 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15757
  store i32 0, i32* %16, align 4, !dbg !15758
  %17 = insertvalue [1 x i32] poison, i32 %15, 0, !dbg !15759
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.313, [1 x i32] %17) #27, !dbg !15759
  ret void, !dbg !15760
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !15761 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15765, metadata !DIExpression()), !dbg !15769
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15766, metadata !DIExpression()), !dbg !15769
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15770
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !15770
  %5 = load i8, i8* %4, align 2, !dbg !15770
  call void @llvm.dbg.value(metadata i8 %5, metadata !15767, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15769
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15771
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !15771
  %8 = load i8, i8* %7, align 2, !dbg !15771
  call void @llvm.dbg.value(metadata i8 %8, metadata !15768, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15769
  %9 = icmp eq i8 %8, %5, !dbg !15772
  %10 = sext i8 %5 to i32, !dbg !15774
  %11 = sext i8 %8 to i32, !dbg !15774
  %12 = sub nsw i32 %11, %10, !dbg !15774
  %13 = select i1 %9, i32 0, i32 %12, !dbg !15774
  ret i32 %13, !dbg !15775
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !15776 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15780, metadata !DIExpression()), !dbg !15781
  %2 = tail call fastcc i32 @slice_time() #28, !dbg !15782
  %3 = icmp eq i32 %2, 0, !dbg !15784
  br i1 %3, label %8, label %4, !dbg !15785

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !15786
  %6 = add i32 %5, %2, !dbg !15788
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15789
  %7 = tail call fastcc i32 @slice_time() #28, !dbg !15790
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !15791
  br label %8, !dbg !15792

8:                                                ; preds = %4, %1
  ret void, !dbg !15793
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #13 !dbg !15794 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15798, metadata !DIExpression()), !dbg !15800
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !15801
  call void @llvm.dbg.value(metadata i32 %1, metadata !15799, metadata !DIExpression()), !dbg !15800
  ret i32 %1, !dbg !15802
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15803 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15807, metadata !DIExpression()), !dbg !15816
  call void @llvm.dbg.value(metadata i32 %1, metadata !15808, metadata !DIExpression()), !dbg !15816
  call void @llvm.dbg.value(metadata i32 0, metadata !15809, metadata !DIExpression()), !dbg !15817
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !15825
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15827, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !15834
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()) #26, !dbg !15834
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !15825
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15835
  br i1 %4, label %6, label %5, !dbg !15838

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !15839
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15839
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !15839
  unreachable, !dbg !15839

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !15834
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !15825
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15841
  call void @llvm.dbg.value(metadata i32 undef, metadata !15815, metadata !DIExpression()), !dbg !15817
  call void @llvm.dbg.value(metadata i32 undef, metadata !15809, metadata !DIExpression()), !dbg !15817
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15842
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #28, !dbg !15845
  %8 = icmp sgt i32 %0, 0, !dbg !15846
  %9 = icmp sgt i32 %7, 2, !dbg !15848
  %10 = select i1 %9, i32 %7, i32 2, !dbg !15848
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !15848
  store i32 %11, i32* @slice_ticks, align 4, !dbg !15849
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !15850
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #28, !dbg !15851
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !15858
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15857, metadata !DIExpression()) #26, !dbg !15858
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15860
  br i1 %12, label %14, label %13, !dbg !15863

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !15864
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15864
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !15864
  unreachable, !dbg !15864

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !15827
  call void @llvm.dbg.value(metadata i32 %15, metadata !15830, metadata !DIExpression()) #26, !dbg !15834
  call void @llvm.dbg.value(metadata i32 %15, metadata !15824, metadata !DIExpression()) #26, !dbg !15825
  call void @llvm.dbg.value(metadata i32 %15, metadata !15815, metadata !DIExpression()), !dbg !15817
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !15858
  call void @llvm.dbg.value(metadata i32 undef, metadata !15866, metadata !DIExpression()) #26, !dbg !15869
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #26, !dbg !15871, !srcloc !15872
  call void @llvm.dbg.value(metadata i32 1, metadata !15809, metadata !DIExpression()), !dbg !15817
  call void @llvm.dbg.value(metadata i32 undef, metadata !15809, metadata !DIExpression()), !dbg !15817
  ret void, !dbg !15873
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #5 !dbg !15874 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15876, metadata !DIExpression()), !dbg !15877
  call void @llvm.dbg.value(metadata i32 %0, metadata !15878, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15893
  call void @llvm.dbg.value(metadata i32 1000, metadata !15881, metadata !DIExpression()), !dbg !15893
  call void @llvm.dbg.value(metadata i32 10000, metadata !15882, metadata !DIExpression()), !dbg !15893
  call void @llvm.dbg.value(metadata i8 1, metadata !15883, metadata !DIExpression()), !dbg !15893
  call void @llvm.dbg.value(metadata i1 true, metadata !15884, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15893
  call void @llvm.dbg.value(metadata i1 true, metadata !15885, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15893
  call void @llvm.dbg.value(metadata i8 0, metadata !15886, metadata !DIExpression()), !dbg !15893
  call void @llvm.dbg.value(metadata i1 true, metadata !15887, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15893
  call void @llvm.dbg.value(metadata i1 false, metadata !15888, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15893
  call void @llvm.dbg.value(metadata i64 0, metadata !15889, metadata !DIExpression()), !dbg !15893
  call void @llvm.dbg.value(metadata i64 0, metadata !15889, metadata !DIExpression()), !dbg !15893
  %2 = mul i32 %0, 10, !dbg !15895
  ret i32 %2, !dbg !15901
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !15902 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15904, metadata !DIExpression()), !dbg !15906
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !15907
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15909, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !15911
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()) #26, !dbg !15911
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !15907
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15912
  br i1 %3, label %5, label %4, !dbg !15913

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !15914
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15914
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !15914
  unreachable, !dbg !15914

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15909
  call void @llvm.dbg.value(metadata i32 %6, metadata !15830, metadata !DIExpression()) #26, !dbg !15911
  call void @llvm.dbg.value(metadata i32 %6, metadata !15824, metadata !DIExpression()) #26, !dbg !15907
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15915
  call void @llvm.dbg.value(metadata i32 %6, metadata !15905, metadata !DIExpression()), !dbg !15906
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15916
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15918
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !15919
  br i1 %9, label %10, label %14, !dbg !15920

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #28, !dbg !15921
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !15923
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15857, metadata !DIExpression()) #26, !dbg !15923
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15925
  br i1 %11, label %13, label %12, !dbg !15926

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !15927
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15927
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !15927
  unreachable, !dbg !15927

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !15852, metadata !DIExpression()) #26, !dbg !15923
  call void @llvm.dbg.value(metadata i32 %6, metadata !15866, metadata !DIExpression()) #26, !dbg !15928
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !15930, !srcloc !15872
  br label %33, !dbg !15931

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15932
  %15 = tail call fastcc i32 @slice_time() #28, !dbg !15933
  %16 = icmp eq i32 %15, 0, !dbg !15933
  br i1 %16, label %27, label %17, !dbg !15935

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #28, !dbg !15936
  br i1 %18, label %19, label %27, !dbg !15937

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15938
  %21 = icmp sgt i32 %20, %0, !dbg !15941
  br i1 %21, label %25, label %22, !dbg !15942

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15943
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #28, !dbg !15943
  call void @llvm.dbg.value(metadata i32 %24, metadata !15905, metadata !DIExpression()), !dbg !15906
  br label %28, !dbg !15945

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !15946
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15946
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15948
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !15906
  call void @llvm.dbg.value(metadata i32 %29, metadata !15905, metadata !DIExpression()), !dbg !15906
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !15950
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15857, metadata !DIExpression()) #26, !dbg !15950
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15952
  br i1 %30, label %32, label %31, !dbg !15953

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !15954
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15954
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !15954
  unreachable, !dbg !15954

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !15852, metadata !DIExpression()) #26, !dbg !15950
  call void @llvm.dbg.value(metadata i32 %29, metadata !15866, metadata !DIExpression()) #26, !dbg !15955
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #26, !dbg !15957, !srcloc !15872
  br label %33, !dbg !15958

33:                                               ; preds = %32, %13
  ret void, !dbg !15958
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #13 !dbg !15959 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15963, metadata !DIExpression()), !dbg !15965
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #28, !dbg !15966
  %3 = icmp eq i32 %2, 0, !dbg !15966
  br i1 %3, label %16, label %4, !dbg !15967

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #28, !dbg !15968
  br i1 %5, label %16, label %6, !dbg !15969

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15970
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !15970
  %9 = load i8, i8* %8, align 2, !dbg !15970
  %10 = sext i8 %9 to i32, !dbg !15971
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !15972
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #28, !dbg !15973
  br i1 %12, label %16, label %13, !dbg !15974

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #28, !dbg !15975
  %15 = xor i1 %14, true, !dbg !15976
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !15965
  call void @llvm.dbg.value(metadata i1 %17, metadata !15964, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15965
  ret i1 %17, !dbg !15977
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !15978 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15982, metadata !DIExpression()), !dbg !15984
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15985
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15983, metadata !DIExpression()), !dbg !15984
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #28, !dbg !15986
  br i1 %3, label %5, label %4, !dbg !15988

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #28, !dbg !15989
  br label %5, !dbg !15991

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !15982, metadata !DIExpression()), !dbg !15984
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #28, !dbg !15992
  ret i32 %6, !dbg !15993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !15994 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15996, metadata !DIExpression()), !dbg !15998
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15999
  %3 = load i8, i8* %2, align 1, !dbg !15999
  call void @llvm.dbg.value(metadata i8 %3, metadata !15997, metadata !DIExpression()), !dbg !15998
  %4 = and i8 %3, 31, !dbg !16000
  %5 = icmp ne i8 %4, 0, !dbg !16001
  ret i1 %5, !dbg !16002
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16003 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16005, metadata !DIExpression()), !dbg !16006
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #28, !dbg !16007
  br i1 %2, label %3, label %7, !dbg !16009

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16010, metadata !DIExpression()) #26, !dbg !16013
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16016
  %5 = load i8, i8* %4, align 1, !dbg !16017
  %6 = and i8 %5, 127, !dbg !16017
  store i8 %6, i8* %4, align 1, !dbg !16017
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16018, metadata !DIExpression()) #26, !dbg !16021
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16025
  br label %7, !dbg !16026

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16027, metadata !DIExpression()) #26, !dbg !16030
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16032
  %9 = load i8, i8* %8, align 1, !dbg !16033
  %10 = or i8 %9, -128, !dbg !16033
  store i8 %10, i8* %8, align 1, !dbg !16033
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16034, metadata !DIExpression()) #26, !dbg !16037
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16041, metadata !DIExpression()) #26, !dbg !16049
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16047, metadata !DIExpression()) #26, !dbg !16049
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !16051
  br i1 %11, label %12, label %13, !dbg !16054

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 186) #27, !dbg !16055
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 186) #27, !dbg !16055
  unreachable, !dbg !16055

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.333(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16057
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !16048, metadata !DIExpression()) #26, !dbg !16049
  %15 = icmp eq %struct._dnode* %14, null, !dbg !16059
  br i1 %15, label %26, label %16, !dbg !16057

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !16048, metadata !DIExpression()) #26, !dbg !16049
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !16061
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !16048, metadata !DIExpression()) #26, !dbg !16049
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #27, !dbg !16062
  %20 = icmp sgt i32 %19, 0, !dbg !16065
  br i1 %20, label %21, label %23, !dbg !16066

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16067
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #27, !dbg !16069
  br label %28, !dbg !16070

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #27, !dbg !16059
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !16048, metadata !DIExpression()) #26, !dbg !16049
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16059
  br i1 %25, label %26, label %16, !dbg !16057, !llvm.loop !16071

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16073
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #27, !dbg !16074
  br label %28, !dbg !16075

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16076
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !16077
  %31 = zext i1 %30 to i32, !dbg !16077
  tail call fastcc void @update_cache(i32 noundef %31) #28, !dbg !16078
  ret void, !dbg !16079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16080 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16082, metadata !DIExpression()), !dbg !16083
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #28, !dbg !16084
  ret i1 %2, !dbg !16085
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16086 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !16088, metadata !DIExpression()), !dbg !16090
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16089, metadata !DIExpression()), !dbg !16090
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #28, !dbg !16091
  br i1 %3, label %4, label %5, !dbg !16094

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1139) #27, !dbg !16095
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1139) #27, !dbg !16095
  unreachable, !dbg !16095

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !16097
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #28, !dbg !16098
  ret void, !dbg !16099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #5 !dbg !16100 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16102, metadata !DIExpression()), !dbg !16103
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !16104
  ret i1 %2, !dbg !16105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.333(%struct._dnode* noundef %0) unnamed_addr #13 !dbg !16106 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16110, metadata !DIExpression()), !dbg !16111
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.336(%struct._dnode* noundef %0) #28, !dbg !16112
  br i1 %2, label %6, label %3, !dbg !16112

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16113
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16113
  br label %6, !dbg !16112

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !16112
  ret %struct._dnode* %7, !dbg !16114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #14 !dbg !16115 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16119, metadata !DIExpression()), !dbg !16123
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16120, metadata !DIExpression()), !dbg !16123
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16124
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16124
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16121, metadata !DIExpression()), !dbg !16123
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16125
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16126
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16127
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16128
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16129
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16130
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16131
  ret void, !dbg !16132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #13 !dbg !16133 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16137, metadata !DIExpression()), !dbg !16139
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16138, metadata !DIExpression()), !dbg !16139
  %3 = icmp eq %struct._dnode* %1, null, !dbg !16140
  br i1 %3, label %6, label %4, !dbg !16141

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #28, !dbg !16142
  br label %6, !dbg !16141

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !16141
  ret %struct._dnode* %7, !dbg !16143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #14 !dbg !16144 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16148, metadata !DIExpression()), !dbg !16151
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16149, metadata !DIExpression()), !dbg !16151
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16152
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16152
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16150, metadata !DIExpression()), !dbg !16151
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16153
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16154
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16155
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !16156
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16157
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16158
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16159
  ret void, !dbg !16160
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !16161 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16163, metadata !DIExpression()), !dbg !16165
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16166
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16173, metadata !DIExpression()) #26, !dbg !16176
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16177
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16174, metadata !DIExpression()) #26, !dbg !16176
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !16178
  br i1 %4, label %13, label %5, !dbg !16180

5:                                                ; preds = %1
  %6 = icmp eq %struct.k_thread* %2, null, !dbg !16181
  br i1 %6, label %10, label %7, !dbg !16182

7:                                                ; preds = %5
  %8 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef nonnull %2) #27, !dbg !16183
  %9 = icmp eq i32 %8, 0, !dbg !16183
  br i1 %9, label %10, label %13, !dbg !16184

10:                                               ; preds = %7, %5
  %11 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %3) #27, !dbg !16185
  br i1 %11, label %12, label %13, !dbg !16188

12:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16189
  br label %13

13:                                               ; preds = %1, %7, %10, %12
  %14 = phi %struct.k_thread* [ %2, %12 ], [ %2, %7 ], [ %2, %1 ], [ %3, %10 ], !dbg !16176
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16173, metadata !DIExpression()) #26, !dbg !16176
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !16191
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !16192
  %17 = select i1 %15, %struct.k_thread* %16, %struct.k_thread* %14, !dbg !16192
  call void @llvm.dbg.value(metadata %struct.k_thread* %17, metadata !16164, metadata !DIExpression()), !dbg !16165
  call void @llvm.dbg.value(metadata %struct.k_thread* %17, metadata !16193, metadata !DIExpression()) #26, !dbg !16199
  call void @llvm.dbg.value(metadata i32 %0, metadata !16198, metadata !DIExpression()) #26, !dbg !16199
  %18 = icmp eq i32 %0, 0, !dbg !16202
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16204
  br i1 %18, label %20, label %33, !dbg !16205

20:                                               ; preds = %13
  %21 = icmp eq %struct.k_thread* %19, null, !dbg !16206
  br i1 %21, label %22, label %23, !dbg !16209

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 137) #27, !dbg !16210
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.335, i32 0, i32 0)) #27, !dbg !16210
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 137) #27, !dbg !16210
  unreachable, !dbg !16210

23:                                               ; preds = %20
  %24 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %19) #27, !dbg !16212
  br i1 %24, label %33, label %25, !dbg !16214

25:                                               ; preds = %23
  %26 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %17) #27, !dbg !16215
  br i1 %26, label %33, label %27, !dbg !16217

27:                                               ; preds = %25
  %28 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %19) #27, !dbg !16218
  %29 = icmp eq i32 %28, 0, !dbg !16218
  br i1 %29, label %30, label %33, !dbg !16220

30:                                               ; preds = %27
  %31 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef %17) #27, !dbg !16221
  %32 = icmp eq i32 %31, 0, !dbg !16221
  br i1 %32, label %37, label %33, !dbg !16222

33:                                               ; preds = %13, %27, %25, %23, %30
  %34 = icmp eq %struct.k_thread* %17, %19, !dbg !16223
  br i1 %34, label %36, label %35, !dbg !16226

35:                                               ; preds = %33
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #28, !dbg !16227
  br label %36, !dbg !16229

36:                                               ; preds = %35, %33
  tail call fastcc void @update_metairq_preempt(%struct.k_thread* noundef %17) #28, !dbg !16230
  br label %37, !dbg !16231

37:                                               ; preds = %30, %36
  %38 = phi %struct.k_thread* [ %17, %36 ], [ %19, %30 ], !dbg !16204
  store %struct.k_thread* %38, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16204
  ret void, !dbg !16232
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #13 !dbg !16233 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16237, metadata !DIExpression()), !dbg !16240
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16238, metadata !DIExpression()), !dbg !16240
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.333(%struct._dnode* noundef %0) #28, !dbg !16241
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16239, metadata !DIExpression()), !dbg !16240
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16238, metadata !DIExpression()), !dbg !16240
  ret %struct.k_thread* %3, !dbg !16242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_metairq(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16243 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16245, metadata !DIExpression()), !dbg !16246
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16247
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16247
  %4 = load i8, i8* %3, align 2, !dbg !16247
  %5 = icmp slt i8 %4, -15, !dbg !16248
  %6 = zext i1 %5 to i32, !dbg !16248
  ret i32 %6, !dbg !16249
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16250 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16252, metadata !DIExpression()), !dbg !16253
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16254
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #28, !dbg !16255
  %4 = xor i1 %3, true, !dbg !16256
  ret i1 %4, !dbg !16257
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16258 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16260, metadata !DIExpression()), !dbg !16261
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !16262
  %3 = load i16, i16* %2, align 2, !dbg !16262
  %4 = icmp ult i16 %3, 128, !dbg !16263
  %5 = zext i1 %4 to i32, !dbg !16263
  ret i32 %5, !dbg !16264
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @update_metairq_preempt(%struct.k_thread* noundef %0) unnamed_addr #14 !dbg !16265 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16267, metadata !DIExpression()), !dbg !16268
  %2 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef %0) #28, !dbg !16269
  %3 = icmp eq i32 %2, 0, !dbg !16269
  br i1 %3, label %11, label %4, !dbg !16271

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16272
  %6 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef %5) #28, !dbg !16273
  %7 = icmp eq i32 %6, 0, !dbg !16273
  br i1 %7, label %8, label %15, !dbg !16274

8:                                                ; preds = %4
  %9 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %5) #28, !dbg !16275
  %10 = icmp eq i32 %9, 0, !dbg !16275
  br i1 %10, label %13, label %15, !dbg !16276

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #28, !dbg !16277
  br i1 %12, label %15, label %13, !dbg !16279

13:                                               ; preds = %11, %8
  %14 = phi %struct.k_thread* [ %5, %8 ], [ null, %11 ]
  store %struct.k_thread* %14, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16280
  br label %15, !dbg !16281

15:                                               ; preds = %13, %4, %8, %11
  ret void, !dbg !16281
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16282 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16288, metadata !DIExpression()), !dbg !16289
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16290
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #28, !dbg !16291
  %4 = xor i1 %3, true, !dbg !16292
  ret i1 %4, !dbg !16293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16294 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16300, metadata !DIExpression()), !dbg !16301
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16302
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16302
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16303
  ret i1 %4, !dbg !16304
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #13 !dbg !16305 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16307, metadata !DIExpression()), !dbg !16309
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16308, metadata !DIExpression()), !dbg !16309
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16310
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16310
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !16311
  br i1 %5, label %9, label %6, !dbg !16312

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16313
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !16313
  br label %9, !dbg !16312

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !16312
  ret %struct._dnode* %10, !dbg !16314
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.336(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !16315 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16319, metadata !DIExpression()), !dbg !16320
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16321
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16321
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !16322
  ret i1 %4, !dbg !16323
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #14 !dbg !16324 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16328, metadata !DIExpression()), !dbg !16331
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16332
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16332
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16329, metadata !DIExpression()), !dbg !16331
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16333
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16333
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16330, metadata !DIExpression()), !dbg !16331
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16334
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16335
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16336
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16337
  tail call fastcc void @sys_dnode_init.337(%struct._dnode* noundef %0) #28, !dbg !16338
  ret void, !dbg !16339
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.337(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !16340 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16342, metadata !DIExpression()), !dbg !16343
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16344
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16345
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16346
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16347
  ret void, !dbg !16348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !16349 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16353, metadata !DIExpression()), !dbg !16355
  call void @llvm.dbg.value(metadata i32 %1, metadata !16354, metadata !DIExpression()), !dbg !16355
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16356
  %4 = load i8, i8* %3, align 1, !dbg !16356
  %5 = zext i8 %4 to i32, !dbg !16357
  %6 = and i32 %5, %1, !dbg !16358
  %7 = icmp ne i32 %6, 0, !dbg !16359
  ret i1 %7, !dbg !16360
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !16361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16365, metadata !DIExpression()), !dbg !16367
  call void @llvm.dbg.value(metadata i32 %1, metadata !16366, metadata !DIExpression()), !dbg !16367
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #28, !dbg !16368
  ret i1 %3, !dbg !16369
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !16370 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16372, metadata !DIExpression()), !dbg !16374
  call void @llvm.dbg.value(metadata i32 %1, metadata !16373, metadata !DIExpression()), !dbg !16374
  %3 = icmp slt i32 %0, %1, !dbg !16375
  ret i1 %3, !dbg !16376
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16377 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16379, metadata !DIExpression()), !dbg !16383
  call void @llvm.dbg.value(metadata i32 0, metadata !16380, metadata !DIExpression()), !dbg !16384
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !16385
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16387, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !16389
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()) #26, !dbg !16389
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !16385
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16390
  br i1 %3, label %5, label %4, !dbg !16391

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !16392
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16392
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !16392
  unreachable, !dbg !16392

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !16389
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !16385
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16393
  call void @llvm.dbg.value(metadata i32 undef, metadata !16382, metadata !DIExpression()), !dbg !16384
  call void @llvm.dbg.value(metadata i32 undef, metadata !16380, metadata !DIExpression()), !dbg !16384
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #28, !dbg !16394
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !16399
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15857, metadata !DIExpression()) #26, !dbg !16399
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16401
  br i1 %6, label %8, label %7, !dbg !16402

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !16403
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16403
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !16403
  unreachable, !dbg !16403

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16387
  call void @llvm.dbg.value(metadata i32 %9, metadata !15830, metadata !DIExpression()) #26, !dbg !16389
  call void @llvm.dbg.value(metadata i32 %9, metadata !15824, metadata !DIExpression()) #26, !dbg !16385
  call void @llvm.dbg.value(metadata i32 %9, metadata !16382, metadata !DIExpression()), !dbg !16384
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !16399
  call void @llvm.dbg.value(metadata i32 undef, metadata !15866, metadata !DIExpression()) #26, !dbg !16404
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !16406, !srcloc !15872
  call void @llvm.dbg.value(metadata i32 1, metadata !16380, metadata !DIExpression()), !dbg !16384
  call void @llvm.dbg.value(metadata i32 undef, metadata !16380, metadata !DIExpression()), !dbg !16384
  ret void, !dbg !16407
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16408 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16410, metadata !DIExpression()), !dbg !16411
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #28, !dbg !16412
  br i1 %2, label %27, label %3, !dbg !16414

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #28, !dbg !16415
  br i1 %4, label %5, label %27, !dbg !16416

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16027, metadata !DIExpression()) #26, !dbg !16417
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16420
  %7 = load i8, i8* %6, align 1, !dbg !16421
  %8 = or i8 %7, -128, !dbg !16421
  store i8 %8, i8* %6, align 1, !dbg !16421
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16034, metadata !DIExpression()) #26, !dbg !16422
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16041, metadata !DIExpression()) #26, !dbg !16424
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16047, metadata !DIExpression()) #26, !dbg !16424
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !16426
  br i1 %9, label %10, label %11, !dbg !16427

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 186) #27, !dbg !16428
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 186) #27, !dbg !16428
  unreachable, !dbg !16428

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.333(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16429
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !16048, metadata !DIExpression()) #26, !dbg !16424
  %13 = icmp eq %struct._dnode* %12, null, !dbg !16430
  br i1 %13, label %24, label %14, !dbg !16429

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !16048, metadata !DIExpression()) #26, !dbg !16424
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !16431
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !16048, metadata !DIExpression()) #26, !dbg !16424
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #27, !dbg !16432
  %18 = icmp sgt i32 %17, 0, !dbg !16433
  br i1 %18, label %19, label %21, !dbg !16434

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16435
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #27, !dbg !16436
  br label %26, !dbg !16437

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #27, !dbg !16430
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !16048, metadata !DIExpression()) #26, !dbg !16424
  %23 = icmp eq %struct._dnode* %22, null, !dbg !16430
  br i1 %23, label %24, label %14, !dbg !16429, !llvm.loop !16438

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16440
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #27, !dbg !16441
  br label %26, !dbg !16442

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #28, !dbg !16443
  br label %27, !dbg !16444

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !16445
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16446 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16448, metadata !DIExpression()), !dbg !16449
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #28, !dbg !16450
  br i1 %2, label %6, label %3, !dbg !16451

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #28, !dbg !16452
  %5 = xor i1 %4, true, !dbg !16451
  br label %6, !dbg !16451

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !16453
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16454 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16456, metadata !DIExpression()), !dbg !16460
  call void @llvm.dbg.value(metadata i32 0, metadata !16457, metadata !DIExpression()), !dbg !16461
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !16462
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16464, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !16466
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()) #26, !dbg !16466
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !16462
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16467
  br i1 %3, label %5, label %4, !dbg !16468

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !16469
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16469
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !16469
  unreachable, !dbg !16469

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !16466
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !16462
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16470
  call void @llvm.dbg.value(metadata i32 undef, metadata !16459, metadata !DIExpression()), !dbg !16461
  call void @llvm.dbg.value(metadata i32 undef, metadata !16457, metadata !DIExpression()), !dbg !16461
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #28, !dbg !16471
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !16474
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15857, metadata !DIExpression()) #26, !dbg !16474
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16476
  br i1 %6, label %8, label %7, !dbg !16477

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !16478
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16478
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !16478
  unreachable, !dbg !16478

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16464
  call void @llvm.dbg.value(metadata i32 %9, metadata !15830, metadata !DIExpression()) #26, !dbg !16466
  call void @llvm.dbg.value(metadata i32 %9, metadata !15824, metadata !DIExpression()) #26, !dbg !16462
  call void @llvm.dbg.value(metadata i32 %9, metadata !16459, metadata !DIExpression()), !dbg !16461
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !16474
  call void @llvm.dbg.value(metadata i32 undef, metadata !15866, metadata !DIExpression()) #26, !dbg !16479
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !16481, !srcloc !15872
  call void @llvm.dbg.value(metadata i32 1, metadata !16457, metadata !DIExpression()), !dbg !16461
  call void @llvm.dbg.value(metadata i32 undef, metadata !16457, metadata !DIExpression()), !dbg !16461
  ret void, !dbg !16482
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16483 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16485, metadata !DIExpression()), !dbg !16487
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !16488
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16490, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !16492
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()) #26, !dbg !16492
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !16488
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16493
  br i1 %3, label %5, label %4, !dbg !16494

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !16495
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16495
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !16495
  unreachable, !dbg !16495

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16490
  call void @llvm.dbg.value(metadata i32 %6, metadata !15830, metadata !DIExpression()) #26, !dbg !16492
  call void @llvm.dbg.value(metadata i32 %6, metadata !15824, metadata !DIExpression()) #26, !dbg !16488
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16496
  call void @llvm.dbg.value(metadata i32 %6, metadata !16486, metadata !DIExpression()), !dbg !16487
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #28, !dbg !16497
  br i1 %7, label %8, label %12, !dbg !16499

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !16500
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15857, metadata !DIExpression()) #26, !dbg !16500
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16503
  br i1 %9, label %11, label %10, !dbg !16504

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !16505
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16505
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !16505
  unreachable, !dbg !16505

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !15852, metadata !DIExpression()) #26, !dbg !16500
  call void @llvm.dbg.value(metadata i32 %6, metadata !15866, metadata !DIExpression()) #26, !dbg !16506
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !16508, !srcloc !15872
  br label %14, !dbg !16509

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.342(%struct.k_thread* noundef %0) #28, !dbg !16510
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #28, !dbg !16511
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16512
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #28, !dbg !16512
  br label %14, !dbg !16513

14:                                               ; preds = %12, %11
  ret void, !dbg !16513
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16514 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16516, metadata !DIExpression()), !dbg !16517
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16518
  %3 = load i8, i8* %2, align 1, !dbg !16518
  %4 = and i8 %3, 4, !dbg !16519
  %5 = icmp eq i8 %4, 0, !dbg !16520
  ret i1 %5, !dbg !16521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.342(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !16522 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16524, metadata !DIExpression()), !dbg !16525
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16526
  %3 = load i8, i8* %2, align 1, !dbg !16527
  %4 = and i8 %3, -5, !dbg !16527
  store i8 %4, i8* %2, align 1, !dbg !16527
  ret void, !dbg !16528
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !16529 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !16532, metadata !DIExpression()), !dbg !16533
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16531, metadata !DIExpression()), !dbg !16533
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #28, !dbg !16534
  br i1 %4, label %5, label %12, !dbg !16536

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #28, !dbg !16537
  br i1 %6, label %7, label %12, !dbg !16538

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16539, metadata !DIExpression()) #26, !dbg !16545
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16544, metadata !DIExpression()) #26, !dbg !16545
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16548, metadata !DIExpression()) #26, !dbg !16553
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #27, !dbg !16555
  br i1 %8, label %10, label %9, !dbg !16558

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 225) #27, !dbg !16559
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef %0) #27, !dbg !16559
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 225) #27, !dbg !16559
  unreachable, !dbg !16559

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !16539, metadata !DIExpression()) #26, !dbg !16545
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !16561
  br label %16, !dbg !16562

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !16563
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15857, metadata !DIExpression()) #26, !dbg !16563
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #27, !dbg !16566
  br i1 %13, label %15, label %14, !dbg !16567

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !16568
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef %0) #27, !dbg !16568
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !16568
  unreachable, !dbg !16568

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !15852, metadata !DIExpression()) #26, !dbg !16563
  call void @llvm.dbg.value(metadata i32 %3, metadata !15866, metadata !DIExpression()) #26, !dbg !16569
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !16571, !srcloc !15872
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !16572
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !16573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16577, metadata !DIExpression()), !dbg !16578
  call void @llvm.dbg.value(metadata i32 %0, metadata !16579, metadata !DIExpression()), !dbg !16584
  %2 = icmp eq i32 %0, 0, !dbg !16586
  br i1 %2, label %3, label %6, !dbg !16587

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !16588, !srcloc !16595
  call void @llvm.dbg.value(metadata i32 %4, metadata !16591, metadata !DIExpression()) #26, !dbg !16596
  %5 = icmp eq i32 %4, 0, !dbg !16597
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !16578
  ret i1 %7, !dbg !16598
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #13 !dbg !16599 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16602
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16601, metadata !DIExpression()), !dbg !16603
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16604
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !16605
  ret i1 %3, !dbg !16606
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !16607 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16609, metadata !DIExpression()), !dbg !16611
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !16612
  call void @llvm.dbg.value(metadata i32 %2, metadata !16610, metadata !DIExpression()), !dbg !16611
  ret i32 %2, !dbg !16613
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16614 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16616, metadata !DIExpression()), !dbg !16620
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #28, !dbg !16621
  call void @llvm.dbg.value(metadata i32 0, metadata !16617, metadata !DIExpression()), !dbg !16622
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !16623
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16625, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !16627
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()) #26, !dbg !16627
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !16623
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16628
  br i1 %4, label %6, label %5, !dbg !16629

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !16630
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16630
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !16630
  unreachable, !dbg !16630

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16625
  call void @llvm.dbg.value(metadata i32 %7, metadata !15830, metadata !DIExpression()) #26, !dbg !16627
  call void @llvm.dbg.value(metadata i32 %7, metadata !15824, metadata !DIExpression()) #26, !dbg !16623
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16631
  call void @llvm.dbg.value(metadata i32 %7, metadata !16619, metadata !DIExpression()), !dbg !16622
  call void @llvm.dbg.value(metadata i32 undef, metadata !16617, metadata !DIExpression()), !dbg !16622
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #28, !dbg !16632
  br i1 %8, label %9, label %13, !dbg !16636

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16010, metadata !DIExpression()) #26, !dbg !16637
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16640
  %11 = load i8, i8* %10, align 1, !dbg !16641
  %12 = and i8 %11, 127, !dbg !16641
  store i8 %12, i8* %10, align 1, !dbg !16641
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16018, metadata !DIExpression()) #26, !dbg !16642
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16644
  br label %13, !dbg !16645

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #28, !dbg !16646
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16647
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !16648
  %16 = zext i1 %15 to i32, !dbg !16648
  tail call fastcc void @update_cache(i32 noundef %16) #28, !dbg !16649
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !16650
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15857, metadata !DIExpression()) #26, !dbg !16650
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16652
  br i1 %17, label %19, label %18, !dbg !16653

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !16654
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16654
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !16654
  unreachable, !dbg !16654

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !15852, metadata !DIExpression()) #26, !dbg !16650
  call void @llvm.dbg.value(metadata i32 %7, metadata !15866, metadata !DIExpression()) #26, !dbg !16655
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #26, !dbg !16657, !srcloc !15872
  call void @llvm.dbg.value(metadata i32 1, metadata !16617, metadata !DIExpression()), !dbg !16622
  call void @llvm.dbg.value(metadata i32 undef, metadata !16617, metadata !DIExpression()), !dbg !16622
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16658
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !16660
  br i1 %21, label %22, label %23, !dbg !16661

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #28, !dbg !16662
  br label %23, !dbg !16664

23:                                               ; preds = %22, %19
  ret void, !dbg !16665
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16666 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16668, metadata !DIExpression()), !dbg !16669
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16670
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !16671
  ret i32 %3, !dbg !16672
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !16673 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16675, metadata !DIExpression()), !dbg !16676
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16677
  %3 = load i8, i8* %2, align 1, !dbg !16678
  %4 = or i8 %3, 16, !dbg !16678
  store i8 %4, i8* %2, align 1, !dbg !16678
  ret void, !dbg !16679
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !16680 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16681, !srcloc !15833
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16681
  call void @llvm.dbg.value(metadata i32 %2, metadata !15830, metadata !DIExpression()) #26, !dbg !16683
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()) #26, !dbg !16683
  tail call void @z_reschedule_irqlock(i32 noundef %2) #28, !dbg !16684
  ret void, !dbg !16685
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !16686 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16688, metadata !DIExpression()), !dbg !16689
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #28, !dbg !16690
  br i1 %2, label %3, label %5, !dbg !16692

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #28, !dbg !16693
  br label %6, !dbg !16695

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !15866, metadata !DIExpression()) #26, !dbg !16696
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #26, !dbg !16699, !srcloc !15872
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !16700
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16701 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16703, metadata !DIExpression()), !dbg !16705
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !16706
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16708, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !16710
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()) #26, !dbg !16710
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !16706
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16711
  br i1 %3, label %5, label %4, !dbg !16712

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !16713
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16713
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !16713
  unreachable, !dbg !16713

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16708
  call void @llvm.dbg.value(metadata i32 %6, metadata !15830, metadata !DIExpression()) #26, !dbg !16710
  call void @llvm.dbg.value(metadata i32 %6, metadata !15824, metadata !DIExpression()) #26, !dbg !16706
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16714
  call void @llvm.dbg.value(metadata i32 %6, metadata !16704, metadata !DIExpression()), !dbg !16705
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #28, !dbg !16715
  br i1 %7, label %12, label %8, !dbg !16717

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !16718
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15857, metadata !DIExpression()) #26, !dbg !16718
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16721
  br i1 %9, label %11, label %10, !dbg !16722

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !16723
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16723
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !16723
  unreachable, !dbg !16723

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !15852, metadata !DIExpression()) #26, !dbg !16718
  call void @llvm.dbg.value(metadata i32 %6, metadata !15866, metadata !DIExpression()) #26, !dbg !16724
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !16726, !srcloc !15872
  br label %14, !dbg !16727

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #28, !dbg !16728
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #28, !dbg !16729
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16730
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #28, !dbg !16730
  br label %14, !dbg !16731

14:                                               ; preds = %12, %11
  ret void, !dbg !16731
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16732 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16734, metadata !DIExpression()), !dbg !16735
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16736
  %3 = load i8, i8* %2, align 1, !dbg !16736
  %4 = and i8 %3, 16, !dbg !16737
  %5 = icmp ne i8 %4, 0, !dbg !16738
  ret i1 %5, !dbg !16739
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !16740 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16742, metadata !DIExpression()), !dbg !16743
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16744
  %3 = load i8, i8* %2, align 1, !dbg !16745
  %4 = and i8 %3, -17, !dbg !16745
  store i8 %4, i8* %2, align 1, !dbg !16745
  ret void, !dbg !16746
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16747 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16757, metadata !DIExpression()), !dbg !16761
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16755, metadata !DIExpression()), !dbg !16761
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16756, metadata !DIExpression()), !dbg !16761
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16762
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !16762
  br i1 %5, label %9, label %6, !dbg !16762

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #28, !dbg !16762
  br i1 %7, label %9, label %8, !dbg !16765

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 773) #27, !dbg !16766
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 773) #27, !dbg !16766
  unreachable, !dbg !16766

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !16758, metadata !DIExpression()), !dbg !16768
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !16769
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16771, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !16773
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()) #26, !dbg !16773
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !16769
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16774
  br i1 %11, label %13, label %12, !dbg !16775

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !16776
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16776
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !16776
  unreachable, !dbg !16776

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !16773
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !16769
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16777
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()), !dbg !16768
  call void @llvm.dbg.value(metadata i32 undef, metadata !16758, metadata !DIExpression()), !dbg !16768
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #28, !dbg !16778
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !16781
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15857, metadata !DIExpression()) #26, !dbg !16781
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16783
  br i1 %14, label %16, label %15, !dbg !16784

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !16785
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16785
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !16785
  unreachable, !dbg !16785

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !16771
  call void @llvm.dbg.value(metadata i32 %17, metadata !15830, metadata !DIExpression()) #26, !dbg !16773
  call void @llvm.dbg.value(metadata i32 %17, metadata !15824, metadata !DIExpression()) #26, !dbg !16769
  call void @llvm.dbg.value(metadata i32 %17, metadata !16760, metadata !DIExpression()), !dbg !16768
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !16781
  call void @llvm.dbg.value(metadata i32 undef, metadata !15866, metadata !DIExpression()) #26, !dbg !16786
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #26, !dbg !16788, !srcloc !15872
  call void @llvm.dbg.value(metadata i32 1, metadata !16758, metadata !DIExpression()), !dbg !16768
  call void @llvm.dbg.value(metadata i32 undef, metadata !16758, metadata !DIExpression()), !dbg !16768
  ret void, !dbg !16789
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16790 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16792, metadata !DIExpression()), !dbg !16793
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16794
  %3 = load i8, i8* %2, align 1, !dbg !16794
  %4 = and i8 %3, 1, !dbg !16795
  %5 = icmp ne i8 %4, 0, !dbg !16796
  ret i1 %5, !dbg !16797
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16798 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16802, metadata !DIExpression()), !dbg !16803
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16800, metadata !DIExpression()), !dbg !16803
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16801, metadata !DIExpression()), !dbg !16803
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #28, !dbg !16804
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #28, !dbg !16805
  ret void, !dbg !16806
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !16807 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16811, metadata !DIExpression()), !dbg !16813
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16812, metadata !DIExpression()), !dbg !16813
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #28, !dbg !16814
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #28, !dbg !16815
  %3 = icmp eq %union.anon* %1, null, !dbg !16816
  br i1 %3, label %24, label %4, !dbg !16818

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16819
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !16821
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !16822
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !16041, metadata !DIExpression()) #26, !dbg !16823
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16047, metadata !DIExpression()) #26, !dbg !16823
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !16825
  br i1 %7, label %8, label %9, !dbg !16826

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 186) #27, !dbg !16827
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 186) #27, !dbg !16827
  unreachable, !dbg !16827

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.333(%struct._dnode* noundef nonnull %6) #27, !dbg !16828
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !16048, metadata !DIExpression()) #26, !dbg !16823
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16829
  br i1 %11, label %22, label %12, !dbg !16828

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !16048, metadata !DIExpression()) #26, !dbg !16823
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16830
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16048, metadata !DIExpression()) #26, !dbg !16823
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #27, !dbg !16831
  %16 = icmp sgt i32 %15, 0, !dbg !16832
  br i1 %16, label %17, label %19, !dbg !16833

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16834
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !16835
  br label %24, !dbg !16836

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #27, !dbg !16829
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !16048, metadata !DIExpression()) #26, !dbg !16823
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16829
  br i1 %21, label %22, label %12, !dbg !16828, !llvm.loop !16837

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16839
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #27, !dbg !16840
  br label %24, !dbg !16841

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !16842
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16843 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16848, metadata !DIExpression()), !dbg !16849
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16847, metadata !DIExpression()), !dbg !16849
  %4 = icmp eq i64 %3, -1, !dbg !16850
  br i1 %4, label %6, label %5, !dbg !16852

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.346(%struct.k_thread* noundef %0, [1 x i64] %1) #28, !dbg !16853
  br label %6, !dbg !16855

6:                                                ; preds = %5, %2
  ret void, !dbg !16856
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.346(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16857 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16860, metadata !DIExpression()), !dbg !16861
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16859, metadata !DIExpression()), !dbg !16861
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16862
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !16863
  ret void, !dbg !16864
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !16865 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16867, metadata !DIExpression()), !dbg !16875
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !16876
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !16876
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16868, metadata !DIExpression()), !dbg !16875
  call void @llvm.dbg.value(metadata i32 0, metadata !16869, metadata !DIExpression()), !dbg !16877
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !16878
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16880, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !16882
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()) #26, !dbg !16882
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !16878
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16883
  br i1 %5, label %7, label %6, !dbg !16884

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !16885
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16885
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !16885
  unreachable, !dbg !16885

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !16882
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !16878
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16886
  call void @llvm.dbg.value(metadata i32 undef, metadata !16871, metadata !DIExpression()), !dbg !16877
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()), !dbg !16877
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !16887
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !16888
  %10 = load i8, i8* %9, align 1, !dbg !16888
  %11 = and i8 %10, 40, !dbg !16889
  %12 = icmp eq i8 %11, 0, !dbg !16889
  call void @llvm.dbg.value(metadata i1 %12, metadata !16872, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16890
  br i1 %12, label %13, label %20, !dbg !16891

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !16892
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !16892
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !16892
  %17 = icmp eq %union.anon* %16, null, !dbg !16896
  br i1 %17, label %19, label %18, !dbg !16897

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #28, !dbg !16898
  br label %19, !dbg !16900

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.342(%struct.k_thread* noundef nonnull %3) #28, !dbg !16901
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #28, !dbg !16902
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #28, !dbg !16903
  br label %20, !dbg !16904

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !16905
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15857, metadata !DIExpression()) #26, !dbg !16905
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16907
  br i1 %21, label %23, label %22, !dbg !16908

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !16909
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16909
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !16909
  unreachable, !dbg !16909

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !16880
  call void @llvm.dbg.value(metadata i32 %24, metadata !15830, metadata !DIExpression()) #26, !dbg !16882
  call void @llvm.dbg.value(metadata i32 %24, metadata !15824, metadata !DIExpression()) #26, !dbg !16878
  call void @llvm.dbg.value(metadata i32 %24, metadata !16871, metadata !DIExpression()), !dbg !16877
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !16905
  call void @llvm.dbg.value(metadata i32 undef, metadata !15866, metadata !DIExpression()) #26, !dbg !16910
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #26, !dbg !16912, !srcloc !15872
  call void @llvm.dbg.value(metadata i32 1, metadata !16869, metadata !DIExpression()), !dbg !16877
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()), !dbg !16877
  ret void, !dbg !16913
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16914 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16916, metadata !DIExpression()), !dbg !16917
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #28, !dbg !16918
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #28, !dbg !16919
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #28, !dbg !16920
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16921
  store %union.anon* null, %union.anon** %3, align 8, !dbg !16922
  ret void, !dbg !16923
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !16924 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16928, metadata !DIExpression()), !dbg !16929
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16930
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !16930
  %4 = icmp eq %union.anon* %3, null, !dbg !16930
  br i1 %4, label %5, label %6, !dbg !16933

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 726) #27, !dbg !16934
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 726) #27, !dbg !16934
  unreachable, !dbg !16934

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !16936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !16937 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16939, metadata !DIExpression()), !dbg !16940
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16941
  %3 = load i8, i8* %2, align 1, !dbg !16942
  %4 = and i8 %3, -3, !dbg !16942
  store i8 %4, i8* %2, align 1, !dbg !16942
  ret void, !dbg !16943
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16944 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16946, metadata !DIExpression()), !dbg !16947
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #28, !dbg !16948
  br i1 %2, label %3, label %7, !dbg !16950

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16010, metadata !DIExpression()) #26, !dbg !16951
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16954
  %5 = load i8, i8* %4, align 1, !dbg !16955
  %6 = and i8 %5, 127, !dbg !16955
  store i8 %6, i8* %4, align 1, !dbg !16955
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16018, metadata !DIExpression()) #26, !dbg !16956
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16958
  br label %7, !dbg !16959

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16960
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !16961
  %10 = zext i1 %9 to i32, !dbg !16961
  tail call fastcc void @update_cache(i32 noundef %10) #28, !dbg !16962
  ret void, !dbg !16963
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !16964 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16966, metadata !DIExpression()), !dbg !16967
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16968
  %3 = load i8, i8* %2, align 1, !dbg !16969
  %4 = or i8 %3, 2, !dbg !16969
  store i8 %4, i8* %2, align 1, !dbg !16969
  ret void, !dbg !16970
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #25 !dbg !16971 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16973, metadata !DIExpression()), !dbg !16977
  call void @llvm.dbg.value(metadata i32 0, metadata !16974, metadata !DIExpression()), !dbg !16978
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !16979
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16981, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !16983
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()) #26, !dbg !16983
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !16979
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16984
  br i1 %3, label %5, label %4, !dbg !16985

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !16986
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16986
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !16986
  unreachable, !dbg !16986

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !16983
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !16979
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16987
  call void @llvm.dbg.value(metadata i32 undef, metadata !16976, metadata !DIExpression()), !dbg !16978
  call void @llvm.dbg.value(metadata i32 undef, metadata !16974, metadata !DIExpression()), !dbg !16978
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #28, !dbg !16988
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !16991
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15857, metadata !DIExpression()) #26, !dbg !16991
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16993
  br i1 %6, label %8, label %7, !dbg !16994

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !16995
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16995
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !16995
  unreachable, !dbg !16995

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16981
  call void @llvm.dbg.value(metadata i32 %9, metadata !15830, metadata !DIExpression()) #26, !dbg !16983
  call void @llvm.dbg.value(metadata i32 %9, metadata !15824, metadata !DIExpression()) #26, !dbg !16979
  call void @llvm.dbg.value(metadata i32 %9, metadata !16976, metadata !DIExpression()), !dbg !16978
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !16991
  call void @llvm.dbg.value(metadata i32 undef, metadata !15866, metadata !DIExpression()) #26, !dbg !16996
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !16998, !srcloc !15872
  call void @llvm.dbg.value(metadata i32 1, metadata !16974, metadata !DIExpression()), !dbg !16978
  call void @llvm.dbg.value(metadata i32 undef, metadata !16974, metadata !DIExpression()), !dbg !16978
  ret void, !dbg !16999
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17000 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17006, metadata !DIExpression()), !dbg !17011
  call void @llvm.dbg.value(metadata i32 %0, metadata !17004, metadata !DIExpression()), !dbg !17011
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !17005, metadata !DIExpression()), !dbg !17011
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17012
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #28, !dbg !17013
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17014
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !17015
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #28, !dbg !17016
  call void @llvm.dbg.value(metadata i32 %6, metadata !17007, metadata !DIExpression()), !dbg !17011
  call void @llvm.dbg.value(metadata i32 0, metadata !17008, metadata !DIExpression()), !dbg !17017
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !17018
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17020, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17022
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()) #26, !dbg !17022
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !17018
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17023
  br i1 %8, label %10, label %9, !dbg !17024

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !17025
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17025
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !17025
  unreachable, !dbg !17025

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17022
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !17018
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17026
  call void @llvm.dbg.value(metadata i32 undef, metadata !17010, metadata !DIExpression()), !dbg !17017
  call void @llvm.dbg.value(metadata i32 undef, metadata !17008, metadata !DIExpression()), !dbg !17017
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !17027
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17031
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !17032
  br i1 %13, label %14, label %15, !dbg !17033

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !17034
  br label %15, !dbg !17036

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !17037
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15857, metadata !DIExpression()) #26, !dbg !17037
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17039
  br i1 %16, label %18, label %17, !dbg !17040

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !17041
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17041
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !17041
  unreachable, !dbg !17041

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !17020
  call void @llvm.dbg.value(metadata i32 %19, metadata !15830, metadata !DIExpression()) #26, !dbg !17022
  call void @llvm.dbg.value(metadata i32 %19, metadata !15824, metadata !DIExpression()) #26, !dbg !17018
  call void @llvm.dbg.value(metadata i32 %19, metadata !17010, metadata !DIExpression()), !dbg !17017
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !17037
  call void @llvm.dbg.value(metadata i32 undef, metadata !15866, metadata !DIExpression()) #26, !dbg !17042
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #26, !dbg !17044, !srcloc !15872
  call void @llvm.dbg.value(metadata i32 1, metadata !17008, metadata !DIExpression()), !dbg !17017
  call void @llvm.dbg.value(metadata i32 undef, metadata !17008, metadata !DIExpression()), !dbg !17017
  ret i32 %6, !dbg !17045
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17046 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17051, metadata !DIExpression()), !dbg !17054
  call void @llvm.dbg.value(metadata i64 undef, metadata !17053, metadata !DIExpression()), !dbg !17054
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17050, metadata !DIExpression()), !dbg !17054
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !17052, metadata !DIExpression()), !dbg !17054
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17055
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !17056
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !17057
  br i1 %6, label %7, label %8, !dbg !17060

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 846) #27, !dbg !17061
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 846) #27, !dbg !17061
  unreachable, !dbg !17061

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !17063
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17065, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17067
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()) #26, !dbg !17067
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !17063
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17068
  br i1 %10, label %12, label %11, !dbg !17069

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !17070
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17070
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !17070
  unreachable, !dbg !17070

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17067
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !17063
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17071
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17072
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #28, !dbg !17073
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16548, metadata !DIExpression()) #26, !dbg !17074
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #27, !dbg !17076
  br i1 %14, label %16, label %15, !dbg !17077

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 225) #27, !dbg !17078
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef %0) #27, !dbg !17078
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 225) #27, !dbg !17078
  unreachable, !dbg !17078

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !16539, metadata !DIExpression()) #26, !dbg !17079
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16544, metadata !DIExpression()) #26, !dbg !17079
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16548, metadata !DIExpression()) #26, !dbg !17081
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17083
  br i1 %17, label %19, label %18, !dbg !17084

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 225) #27, !dbg !17085
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17085
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 225) #27, !dbg !17085
  unreachable, !dbg !17085

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !16539, metadata !DIExpression()) #26, !dbg !17079
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #27, !dbg !17086
  ret i32 %21, !dbg !17087
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17088 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17092, metadata !DIExpression()), !dbg !17097
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17093, metadata !DIExpression()), !dbg !17097
  call void @llvm.dbg.value(metadata i32 0, metadata !17094, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !17099
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17101, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17103
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()) #26, !dbg !17103
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !17099
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17104
  br i1 %3, label %5, label %4, !dbg !17105

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !17106
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17106
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !17106
  unreachable, !dbg !17106

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17103
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !17099
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17107
  call void @llvm.dbg.value(metadata i32 undef, metadata !17096, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17093, metadata !DIExpression()), !dbg !17097
  call void @llvm.dbg.value(metadata i32 undef, metadata !17094, metadata !DIExpression()), !dbg !17098
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #28, !dbg !17108
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17093, metadata !DIExpression()), !dbg !17097
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !17111
  br i1 %8, label %10, label %9, !dbg !17113

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #28, !dbg !17114
  br label %10, !dbg !17116

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !17117
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15857, metadata !DIExpression()) #26, !dbg !17117
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17119
  br i1 %11, label %13, label %12, !dbg !17120

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !17121
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17121
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !17121
  unreachable, !dbg !17121

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17101
  call void @llvm.dbg.value(metadata i32 %14, metadata !15830, metadata !DIExpression()) #26, !dbg !17103
  call void @llvm.dbg.value(metadata i32 %14, metadata !15824, metadata !DIExpression()) #26, !dbg !17099
  call void @llvm.dbg.value(metadata i32 %14, metadata !17096, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !17117
  call void @llvm.dbg.value(metadata i32 undef, metadata !15866, metadata !DIExpression()) #26, !dbg !17122
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !17124, !srcloc !15872
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17093, metadata !DIExpression()), !dbg !17097
  call void @llvm.dbg.value(metadata i32 undef, metadata !17094, metadata !DIExpression()), !dbg !17098
  ret %struct.k_thread* %7, !dbg !17125
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17126 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17128, metadata !DIExpression()), !dbg !17133
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17129, metadata !DIExpression()), !dbg !17133
  call void @llvm.dbg.value(metadata i32 0, metadata !17130, metadata !DIExpression()), !dbg !17134
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !17135
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17137, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17139
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()) #26, !dbg !17139
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !17135
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17140
  br i1 %3, label %5, label %4, !dbg !17141

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !17142
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17142
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !17142
  unreachable, !dbg !17142

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17139
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !17135
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17143
  call void @llvm.dbg.value(metadata i32 undef, metadata !17132, metadata !DIExpression()), !dbg !17134
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17129, metadata !DIExpression()), !dbg !17133
  call void @llvm.dbg.value(metadata i32 undef, metadata !17130, metadata !DIExpression()), !dbg !17134
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #28, !dbg !17144
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17129, metadata !DIExpression()), !dbg !17133
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !17147
  br i1 %8, label %11, label %9, !dbg !17149

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #28, !dbg !17150
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #28, !dbg !17152
  br label %11, !dbg !17153

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !17154
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15857, metadata !DIExpression()) #26, !dbg !17154
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17156
  br i1 %12, label %14, label %13, !dbg !17157

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !17158
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17158
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !17158
  unreachable, !dbg !17158

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !17137
  call void @llvm.dbg.value(metadata i32 %15, metadata !15830, metadata !DIExpression()) #26, !dbg !17139
  call void @llvm.dbg.value(metadata i32 %15, metadata !15824, metadata !DIExpression()) #26, !dbg !17135
  call void @llvm.dbg.value(metadata i32 %15, metadata !17132, metadata !DIExpression()), !dbg !17134
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !17154
  call void @llvm.dbg.value(metadata i32 undef, metadata !15866, metadata !DIExpression()) #26, !dbg !17159
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #26, !dbg !17161, !srcloc !15872
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17129, metadata !DIExpression()), !dbg !17133
  call void @llvm.dbg.value(metadata i32 undef, metadata !17130, metadata !DIExpression()), !dbg !17134
  ret %struct.k_thread* %7, !dbg !17162
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17163 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17165, metadata !DIExpression()), !dbg !17166
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16973, metadata !DIExpression()) #26, !dbg !17167
  call void @llvm.dbg.value(metadata i32 0, metadata !16974, metadata !DIExpression()) #26, !dbg !17169
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !17170
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17172, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17174
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()) #26, !dbg !17174
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !17170
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17175
  br i1 %3, label %5, label %4, !dbg !17176

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !17177
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17177
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !17177
  unreachable, !dbg !17177

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17174
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !17170
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17178
  call void @llvm.dbg.value(metadata i32 undef, metadata !16976, metadata !DIExpression()) #26, !dbg !17169
  call void @llvm.dbg.value(metadata i32 undef, metadata !16974, metadata !DIExpression()) #26, !dbg !17169
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !17179
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !17180
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15857, metadata !DIExpression()) #26, !dbg !17180
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17182
  br i1 %6, label %8, label %7, !dbg !17183

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !17184
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17184
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !17184
  unreachable, !dbg !17184

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17172
  call void @llvm.dbg.value(metadata i32 %9, metadata !15830, metadata !DIExpression()) #26, !dbg !17174
  call void @llvm.dbg.value(metadata i32 %9, metadata !15824, metadata !DIExpression()) #26, !dbg !17170
  call void @llvm.dbg.value(metadata i32 %9, metadata !16976, metadata !DIExpression()) #26, !dbg !17169
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !17180
  call void @llvm.dbg.value(metadata i32 undef, metadata !15866, metadata !DIExpression()) #26, !dbg !17185
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !17187, !srcloc !15872
  call void @llvm.dbg.value(metadata i32 1, metadata !16974, metadata !DIExpression()) #26, !dbg !17169
  call void @llvm.dbg.value(metadata i32 undef, metadata !16974, metadata !DIExpression()) #26, !dbg !17169
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #28, !dbg !17188
  ret void, !dbg !17189
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17190 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17192, metadata !DIExpression()), !dbg !17198
  call void @llvm.dbg.value(metadata i32 %1, metadata !17193, metadata !DIExpression()), !dbg !17198
  call void @llvm.dbg.value(metadata i8 0, metadata !17194, metadata !DIExpression()), !dbg !17198
  call void @llvm.dbg.value(metadata i32 0, metadata !17195, metadata !DIExpression()), !dbg !17199
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !17200
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17202, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17204
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()) #26, !dbg !17204
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !17200
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17205
  br i1 %4, label %6, label %5, !dbg !17206

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !17207
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17207
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !17207
  unreachable, !dbg !17207

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17204
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !17200
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17208
  call void @llvm.dbg.value(metadata i32 undef, metadata !17197, metadata !DIExpression()), !dbg !17199
  call void @llvm.dbg.value(metadata i8 poison, metadata !17194, metadata !DIExpression()), !dbg !17198
  call void @llvm.dbg.value(metadata i32 undef, metadata !17195, metadata !DIExpression()), !dbg !17199
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #28, !dbg !17209
  call void @llvm.dbg.value(metadata i1 %9, metadata !17194, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17198
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !17212

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16010, metadata !DIExpression()) #26, !dbg !17213
  %14 = load i8, i8* %7, align 1, !dbg !17219
  %15 = and i8 %14, 127, !dbg !17219
  store i8 %15, i8* %7, align 1, !dbg !17219
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16018, metadata !DIExpression()) #26, !dbg !17220
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !17222
  store i8 %12, i8* %11, align 2, !dbg !17223
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16027, metadata !DIExpression()) #26, !dbg !17224
  %16 = load i8, i8* %7, align 1, !dbg !17226
  %17 = or i8 %16, -128, !dbg !17226
  store i8 %17, i8* %7, align 1, !dbg !17226
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16034, metadata !DIExpression()) #26, !dbg !17227
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16041, metadata !DIExpression()) #26, !dbg !17229
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16047, metadata !DIExpression()) #26, !dbg !17229
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !17231
  br i1 %18, label %19, label %20, !dbg !17232

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 186) #27, !dbg !17233
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 186) #27, !dbg !17233
  unreachable, !dbg !17233

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.333(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !17234
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !16048, metadata !DIExpression()) #26, !dbg !17229
  %22 = icmp eq %struct._dnode* %21, null, !dbg !17235
  br i1 %22, label %32, label %23, !dbg !17234

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !16048, metadata !DIExpression()) #26, !dbg !17229
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !17236
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !16048, metadata !DIExpression()) #26, !dbg !17229
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #27, !dbg !17237
  %27 = icmp sgt i32 %26, 0, !dbg !17238
  br i1 %27, label %28, label %29, !dbg !17239

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #27, !dbg !17240
  br label %33, !dbg !17241

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #27, !dbg !17235
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !16048, metadata !DIExpression()) #26, !dbg !17229
  %31 = icmp eq %struct._dnode* %30, null, !dbg !17235
  br i1 %31, label %32, label %23, !dbg !17234, !llvm.loop !17242

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #27, !dbg !17244
  br label %33, !dbg !17245

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #28, !dbg !17246
  br label %35, !dbg !17247

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !17248
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !17250
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15857, metadata !DIExpression()) #26, !dbg !17250
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17252
  br i1 %36, label %38, label %37, !dbg !17253

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !17254
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17254
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !17254
  unreachable, !dbg !17254

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !17202
  call void @llvm.dbg.value(metadata i32 %39, metadata !15830, metadata !DIExpression()) #26, !dbg !17204
  call void @llvm.dbg.value(metadata i32 %39, metadata !15824, metadata !DIExpression()) #26, !dbg !17200
  call void @llvm.dbg.value(metadata i32 %39, metadata !17197, metadata !DIExpression()), !dbg !17199
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !17250
  call void @llvm.dbg.value(metadata i32 undef, metadata !15866, metadata !DIExpression()) #26, !dbg !17255
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #26, !dbg !17257, !srcloc !15872
  call void @llvm.dbg.value(metadata i8 poison, metadata !17194, metadata !DIExpression()), !dbg !17198
  call void @llvm.dbg.value(metadata i32 undef, metadata !17195, metadata !DIExpression()), !dbg !17199
  ret i1 %9, !dbg !17258
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17259 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17263, metadata !DIExpression()), !dbg !17266
  call void @llvm.dbg.value(metadata i32 %1, metadata !17264, metadata !DIExpression()), !dbg !17266
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #28, !dbg !17267
  call void @llvm.dbg.value(metadata i1 %3, metadata !17265, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17266
  br i1 %3, label %4, label %12, !dbg !17268

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17270
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17271
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17271
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17271
  %9 = load i8, i8* %8, align 1, !dbg !17271
  %10 = icmp eq i8 %9, 0, !dbg !17272
  br i1 %10, label %11, label %12, !dbg !17273

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #28, !dbg !17274
  br label %12, !dbg !17276

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !17277
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !17278 {
  call void @llvm.dbg.value(metadata i32 0, metadata !17280, metadata !DIExpression()), !dbg !17283
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !17284
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17286, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17288
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()) #26, !dbg !17288
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !17284
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17289
  br i1 %2, label %4, label %3, !dbg !17290

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !17291
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17291
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !17291
  unreachable, !dbg !17291

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17288
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !17284
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17292
  call void @llvm.dbg.value(metadata i32 undef, metadata !17282, metadata !DIExpression()), !dbg !17283
  call void @llvm.dbg.value(metadata i32 undef, metadata !17280, metadata !DIExpression()), !dbg !17283
  tail call fastcc void @z_sched_lock() #28, !dbg !17293
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !17296
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15857, metadata !DIExpression()) #26, !dbg !17296
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17298
  br i1 %5, label %7, label %6, !dbg !17299

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !17300
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17300
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !17300
  unreachable, !dbg !17300

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !17286
  call void @llvm.dbg.value(metadata i32 %8, metadata !15830, metadata !DIExpression()) #26, !dbg !17288
  call void @llvm.dbg.value(metadata i32 %8, metadata !15824, metadata !DIExpression()) #26, !dbg !17284
  call void @llvm.dbg.value(metadata i32 %8, metadata !17282, metadata !DIExpression()), !dbg !17283
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !17296
  call void @llvm.dbg.value(metadata i32 undef, metadata !15866, metadata !DIExpression()) #26, !dbg !17301
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #26, !dbg !17303, !srcloc !15872
  call void @llvm.dbg.value(metadata i32 1, metadata !17280, metadata !DIExpression()), !dbg !17283
  call void @llvm.dbg.value(metadata i32 undef, metadata !17280, metadata !DIExpression()), !dbg !17283
  ret void, !dbg !17304
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !17305 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17306, !srcloc !16595
  call void @llvm.dbg.value(metadata i32 %1, metadata !16591, metadata !DIExpression()) #26, !dbg !17311
  %2 = icmp eq i32 %1, 0, !dbg !17312
  br i1 %2, label %4, label %3, !dbg !17313

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.358, i32 0, i32 0), i32 noundef 253) #27, !dbg !17314
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.335, i32 0, i32 0)) #27, !dbg !17314
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.358, i32 0, i32 0), i32 noundef 253) #27, !dbg !17314
  unreachable, !dbg !17314

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17316
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17316
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17316
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17316
  %9 = load i8, i8* %8, align 1, !dbg !17316
  %10 = icmp eq i8 %9, 1, !dbg !17316
  br i1 %10, label %11, label %12, !dbg !17319

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.359, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.358, i32 0, i32 0), i32 noundef 254) #27, !dbg !17320
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.335, i32 0, i32 0)) #27, !dbg !17320
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.358, i32 0, i32 0), i32 noundef 254) #27, !dbg !17320
  unreachable, !dbg !17320

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !17322
  store i8 %13, i8* %8, align 1, !dbg !17322
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !17323, !srcloc !17325
  ret void, !dbg !17326
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !17327 {
  call void @llvm.dbg.value(metadata i32 0, metadata !17329, metadata !DIExpression()), !dbg !17332
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !17333
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17335, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17337
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()) #26, !dbg !17337
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !17333
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17338
  br i1 %2, label %4, label %3, !dbg !17339

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !17340
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17340
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !17340
  unreachable, !dbg !17340

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17337
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !17333
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17341
  call void @llvm.dbg.value(metadata i32 undef, metadata !17331, metadata !DIExpression()), !dbg !17332
  call void @llvm.dbg.value(metadata i32 undef, metadata !17329, metadata !DIExpression()), !dbg !17332
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17342
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17342
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17342
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17342
  %9 = load i8, i8* %8, align 1, !dbg !17342
  %10 = icmp eq i8 %9, 0, !dbg !17342
  br i1 %10, label %11, label %12, !dbg !17347

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 999) #27, !dbg !17348
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.335, i32 0, i32 0)) #27, !dbg !17348
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 999) #27, !dbg !17348
  unreachable, !dbg !17348

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17350, !srcloc !16595
  call void @llvm.dbg.value(metadata i32 %13, metadata !16591, metadata !DIExpression()) #26, !dbg !17355
  %14 = icmp eq i32 %13, 0, !dbg !17356
  br i1 %14, label %16, label %15, !dbg !17357

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1000) #27, !dbg !17358
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.335, i32 0, i32 0)) #27, !dbg !17358
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1000) #27, !dbg !17358
  unreachable, !dbg !17358

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17360
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !17361
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !17361
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !17361
  %21 = load i8, i8* %20, align 1, !dbg !17362
  %22 = add i8 %21, 1, !dbg !17362
  store i8 %22, i8* %20, align 1, !dbg !17362
  tail call fastcc void @update_cache(i32 noundef 0) #28, !dbg !17363
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !17364
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15857, metadata !DIExpression()) #26, !dbg !17364
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17366
  br i1 %23, label %25, label %24, !dbg !17367

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !17368
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17368
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !17368
  unreachable, !dbg !17368

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !17335
  call void @llvm.dbg.value(metadata i32 %26, metadata !15830, metadata !DIExpression()) #26, !dbg !17337
  call void @llvm.dbg.value(metadata i32 %26, metadata !15824, metadata !DIExpression()) #26, !dbg !17333
  call void @llvm.dbg.value(metadata i32 %26, metadata !17331, metadata !DIExpression()), !dbg !17332
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !17364
  call void @llvm.dbg.value(metadata i32 undef, metadata !15866, metadata !DIExpression()) #26, !dbg !17369
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #26, !dbg !17371, !srcloc !15872
  call void @llvm.dbg.value(metadata i32 1, metadata !17329, metadata !DIExpression()), !dbg !17332
  call void @llvm.dbg.value(metadata i32 undef, metadata !17329, metadata !DIExpression()), !dbg !17332
  tail call fastcc void @z_reschedule_unlocked() #28, !dbg !17372
  ret void, !dbg !17373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #13 !dbg !17374 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !17375
  ret %struct.k_thread* %1, !dbg !17376
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !17377 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !17381, metadata !DIExpression()), !dbg !17386
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !17382, metadata !DIExpression()), !dbg !17386
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !17387
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !17383, metadata !DIExpression()), !dbg !17386
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !17388
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17384, metadata !DIExpression()), !dbg !17386
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #28, !dbg !17389
  call void @llvm.dbg.value(metadata i32 %5, metadata !17385, metadata !DIExpression()), !dbg !17386
  %6 = icmp sgt i32 %5, 0, !dbg !17390
  br i1 %6, label %17, label %7, !dbg !17392

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !17393
  br i1 %8, label %17, label %9, !dbg !17395

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !17396
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !17396
  %12 = load i32, i32* %11, align 8, !dbg !17396
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !17398
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !17398
  %15 = load i32, i32* %14, align 8, !dbg !17398
  %16 = icmp ult i32 %12, %15, !dbg !17399
  br label %17, !dbg !17400

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !17401
  ret i1 %18, !dbg !17402
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17403 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17420, metadata !DIExpression()), !dbg !17435
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17421, metadata !DIExpression()), !dbg !17435
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #28, !dbg !17436
  br i1 %4, label %5, label %6, !dbg !17439

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1179) #27, !dbg !17440
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1179) #27, !dbg !17440
  unreachable, !dbg !17440

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17442
  %8 = load i32, i32* %7, align 4, !dbg !17443
  %9 = add nsw i32 %8, 1, !dbg !17443
  store i32 %9, i32* %7, align 4, !dbg !17443
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !17444
  store i32 %8, i32* %10, align 8, !dbg !17445
  %11 = load i32, i32* %7, align 4, !dbg !17446
  %12 = icmp eq i32 %11, 0, !dbg !17447
  br i1 %12, label %13, label %35, !dbg !17448

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !17449
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #26, !dbg !17449
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !17423, metadata !DIExpression()), !dbg !17449
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17449
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !17449
  %17 = load i32, i32* %16, align 4, !dbg !17449
  %18 = shl i32 %17, 2, !dbg !17449
  %19 = alloca i8, i32 %18, align 8, !dbg !17449
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !17449
  store i8* %19, i8** %20, align 4, !dbg !17449
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !17449
  %22 = alloca i8, i32 %17, align 8, !dbg !17449
  store i8* %22, i8** %21, align 4, !dbg !17449
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !17449
  store i32 -1, i32* %23, align 4, !dbg !17449
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17450
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !17432, metadata !DIExpression()), !dbg !17451
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !17422, metadata !DIExpression()), !dbg !17435
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !17452
  br i1 %25, label %26, label %27, !dbg !17449

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #26, !dbg !17452
  br label %35, !dbg !17453

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !17422, metadata !DIExpression()), !dbg !17435
  %29 = load i32, i32* %7, align 4, !dbg !17454
  %30 = add nsw i32 %29, 1, !dbg !17454
  store i32 %30, i32* %7, align 4, !dbg !17454
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !17456
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !17456
  store i32 %29, i32* %32, align 8, !dbg !17457
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17450
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !17432, metadata !DIExpression()), !dbg !17451
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !17422, metadata !DIExpression()), !dbg !17435
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !17452
  br i1 %34, label %26, label %27, !dbg !17449, !llvm.loop !17458

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17460
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17461
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #27, !dbg !17462
  ret void, !dbg !17463
}

; Function Attrs: optsize
declare !dbg !17464 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !17469 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17472 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17474, metadata !DIExpression()), !dbg !17476
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17475, metadata !DIExpression()), !dbg !17476
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #28, !dbg !17477
  br i1 %3, label %4, label %5, !dbg !17480

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1200) #27, !dbg !17481
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1200) #27, !dbg !17481
  unreachable, !dbg !17481

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17483
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17484
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #27, !dbg !17485
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !17486
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !17486
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !17488
  br i1 %10, label %11, label %13, !dbg !17489

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17490
  store i32 0, i32* %12, align 4, !dbg !17492
  br label %13, !dbg !17493

13:                                               ; preds = %11, %5
  ret void, !dbg !17494
}

; Function Attrs: optsize
declare !dbg !17495 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !17496 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17500, metadata !DIExpression()), !dbg !17503
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17501, metadata !DIExpression()), !dbg !17503
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17504
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #28, !dbg !17505
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !17502, metadata !DIExpression()), !dbg !17503
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17501, metadata !DIExpression()), !dbg !17503
  ret %struct.k_thread* %4, !dbg !17506
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !17507 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !17511, metadata !DIExpression()), !dbg !17512
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !17513
  ret %struct.rbnode* %2, !dbg !17514
}

; Function Attrs: optsize
declare !dbg !17515 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #19 !dbg !17518 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !17530, metadata !DIExpression()), !dbg !17534
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !17535
  %3 = load i32, i32* %2, align 4, !dbg !17535
  %4 = icmp eq i32 %3, 0, !dbg !17537
  br i1 %4, label %10, label %5, !dbg !17538

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17531, metadata !DIExpression()), !dbg !17534
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !17539, !range !5427
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !17540
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !17532, metadata !DIExpression()), !dbg !17534
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.333(%struct._dnode* noundef %7) #28, !dbg !17541
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !17533, metadata !DIExpression()), !dbg !17534
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17531, metadata !DIExpression()), !dbg !17534
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !17534
  ret %struct.k_thread* %11, !dbg !17542
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17543 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17547, metadata !DIExpression()), !dbg !17550
  call void @llvm.dbg.value(metadata i32 0, metadata !17548, metadata !DIExpression()), !dbg !17550
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.363(%union.anon* noundef %0) #28, !dbg !17551
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17549, metadata !DIExpression()), !dbg !17550
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17552
  br i1 %3, label %8, label %4, !dbg !17553

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #28, !dbg !17554
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #28, !dbg !17556
  call void @llvm.dbg.value(metadata i32 1, metadata !17548, metadata !DIExpression()), !dbg !17550
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.363(%union.anon* noundef %0) #28, !dbg !17551
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17549, metadata !DIExpression()), !dbg !17550
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17552
  br i1 %7, label %8, label %4, !dbg !17553, !llvm.loop !17557

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !17550
  ret i32 %9, !dbg !17559
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.363(%union.anon* noundef readonly %0) unnamed_addr #13 !dbg !17560 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17562, metadata !DIExpression()), !dbg !17563
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17564
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.333(%struct._dnode* noundef %2) #28, !dbg !17565
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17566
  ret %struct.k_thread* %4, !dbg !17567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #12 !dbg !17568 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !17577, metadata !DIExpression()), !dbg !17578
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !17579
  tail call fastcc void @sys_dlist_init.364(%struct._dnode* noundef nonnull %2) #28, !dbg !17580
  ret void, !dbg !17581
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.364(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !17582 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17586, metadata !DIExpression()), !dbg !17587
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17588
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17589
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17590
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17591
  ret void, !dbg !17592
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !17593 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #28, !dbg !17594
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #28, !dbg !17595
  ret void, !dbg !17596
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #13 !dbg !17597 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17602, metadata !DIExpression()), !dbg !17603
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !17604
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !17604
  %4 = load i8, i8* %3, align 2, !dbg !17604
  %5 = sext i8 %4 to i32, !dbg !17605
  ret i32 %5, !dbg !17606
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17607 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17611, metadata !DIExpression()), !dbg !17614
  call void @llvm.dbg.value(metadata i32 %1, metadata !17612, metadata !DIExpression()), !dbg !17614
  %3 = add i32 %1, 16, !dbg !17615
  %4 = icmp ult i32 %3, 31, !dbg !17615
  br i1 %4, label %6, label %5, !dbg !17615

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.369, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1331) #27, !dbg !17619
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.370, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #27, !dbg !17619
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1331) #27, !dbg !17619
  unreachable, !dbg !17619

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17621, !srcloc !16595
  call void @llvm.dbg.value(metadata i32 %7, metadata !16591, metadata !DIExpression()) #26, !dbg !17626
  %8 = icmp eq i32 %7, 0, !dbg !17627
  br i1 %8, label %10, label %9, !dbg !17628

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1332) #27, !dbg !17629
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.335, i32 0, i32 0)) #27, !dbg !17629
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1332) #27, !dbg !17629
  unreachable, !dbg !17629

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17613, metadata !DIExpression()), !dbg !17614
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #28, !dbg !17631
  ret void, !dbg !17632
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !17633 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #28, !dbg !17634
  br i1 %1, label %8, label %2, !dbg !17635

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !17636
  br i1 %3, label %8, label %4, !dbg !17637

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17638
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #28, !dbg !17639
  %7 = xor i1 %6, true, !dbg !17637
  br label %8, !dbg !17637

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !17640
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #13 !dbg !17641 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !17642, !range !8159
  %2 = icmp eq i8 %1, 0, !dbg !17642
  ret i1 %2, !dbg !17643
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !17644 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17647, !srcloc !16595
  call void @llvm.dbg.value(metadata i32 %1, metadata !16591, metadata !DIExpression()) #26, !dbg !17652
  %2 = icmp eq i32 %1, 0, !dbg !17653
  br i1 %2, label %4, label %3, !dbg !17654

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1392) #27, !dbg !17655
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.335, i32 0, i32 0)) #27, !dbg !17655
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1392) #27, !dbg !17655
  unreachable, !dbg !17655

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !17657
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17659, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17661
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()) #26, !dbg !17661
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !17657
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17662
  br i1 %6, label %8, label %7, !dbg !17663

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !17664
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17664
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !17664
  unreachable, !dbg !17664

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17661
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !17657
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17665
  call void @llvm.dbg.value(metadata i32 undef, metadata !17646, metadata !DIExpression()), !dbg !17666
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17667
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16010, metadata !DIExpression()) #26, !dbg !17670
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !17672
  %11 = load i8, i8* %10, align 1, !dbg !17673
  %12 = and i8 %11, 127, !dbg !17673
  store i8 %12, i8* %10, align 1, !dbg !17673
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16018, metadata !DIExpression()) #26, !dbg !17674
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #27, !dbg !17676
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17677
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16027, metadata !DIExpression()) #26, !dbg !17678
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !17680
  %15 = load i8, i8* %14, align 1, !dbg !17681
  %16 = or i8 %15, -128, !dbg !17681
  store i8 %16, i8* %14, align 1, !dbg !17681
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16034, metadata !DIExpression()) #26, !dbg !17682
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16041, metadata !DIExpression()) #26, !dbg !17684
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16047, metadata !DIExpression()) #26, !dbg !17684
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #27, !dbg !17686
  br i1 %17, label %18, label %19, !dbg !17687

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 186) #27, !dbg !17688
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 186) #27, !dbg !17688
  unreachable, !dbg !17688

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.333(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !17689
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !16048, metadata !DIExpression()) #26, !dbg !17684
  %21 = icmp eq %struct._dnode* %20, null, !dbg !17690
  br i1 %21, label %32, label %22, !dbg !17689

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !16048, metadata !DIExpression()) #26, !dbg !17684
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !17691
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !16048, metadata !DIExpression()) #26, !dbg !17684
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #27, !dbg !17692
  %26 = icmp sgt i32 %25, 0, !dbg !17693
  br i1 %26, label %27, label %29, !dbg !17694

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !17695
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #27, !dbg !17696
  br label %34, !dbg !17697

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #27, !dbg !17690
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !16048, metadata !DIExpression()) #26, !dbg !17684
  %31 = icmp eq %struct._dnode* %30, null, !dbg !17690
  br i1 %31, label %32, label %22, !dbg !17689, !llvm.loop !17698

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !17700
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #27, !dbg !17701
  br label %34, !dbg !17702

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #28, !dbg !17703
  call void @llvm.dbg.value(metadata i32 undef, metadata !16539, metadata !DIExpression()) #26, !dbg !17704
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16544, metadata !DIExpression()) #26, !dbg !17704
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16548, metadata !DIExpression()) #26, !dbg !17706
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17708
  br i1 %35, label %37, label %36, !dbg !17709

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 225) #27, !dbg !17710
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17710
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 225) #27, !dbg !17710
  unreachable, !dbg !17710

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !17659
  call void @llvm.dbg.value(metadata i32 %38, metadata !15830, metadata !DIExpression()) #26, !dbg !17661
  call void @llvm.dbg.value(metadata i32 %38, metadata !15824, metadata !DIExpression()) #26, !dbg !17657
  call void @llvm.dbg.value(metadata i32 %38, metadata !17646, metadata !DIExpression()), !dbg !17666
  call void @llvm.dbg.value(metadata i32 undef, metadata !16539, metadata !DIExpression()) #26, !dbg !17704
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #27, !dbg !17711
  ret void, !dbg !17712
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !17713 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17717, metadata !DIExpression()), !dbg !17720
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17721, !srcloc !16595
  call void @llvm.dbg.value(metadata i32 %3, metadata !16591, metadata !DIExpression()) #26, !dbg !17726
  %4 = icmp eq i32 %3, 0, !dbg !17727
  br i1 %4, label %6, label %5, !dbg !17728

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1463) #27, !dbg !17729
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.335, i32 0, i32 0)) #27, !dbg !17729
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1463) #27, !dbg !17729
  unreachable, !dbg !17729

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !17731
  br i1 %7, label %8, label %10, !dbg !17733

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17734
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #28, !dbg !17736
  br label %15, !dbg !17737

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !17718, metadata !DIExpression()), !dbg !17720
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #28, !dbg !17738
  %12 = sext i32 %11 to i64, !dbg !17738
  call void @llvm.dbg.value(metadata i64 %12, metadata !17718, metadata !DIExpression()), !dbg !17720
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #28, !dbg !17739
  %14 = trunc i64 %13 to i32, !dbg !17739
  call void @llvm.dbg.value(metadata i32 %14, metadata !17719, metadata !DIExpression()), !dbg !17720
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !17720
  ret i32 %16, !dbg !17740
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17741 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17745, metadata !DIExpression()), !dbg !17746
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !17747, !srcloc !17749
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #28, !dbg !17750
  ret void, !dbg !17751
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !17752 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17756, metadata !DIExpression()), !dbg !17760
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17761, !srcloc !16595
  call void @llvm.dbg.value(metadata i32 %2, metadata !16591, metadata !DIExpression()) #26, !dbg !17766
  %3 = icmp eq i32 %2, 0, !dbg !17767
  br i1 %3, label %5, label %4, !dbg !17768

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1420) #27, !dbg !17769
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.335, i32 0, i32 0)) #27, !dbg !17769
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1420) #27, !dbg !17769
  unreachable, !dbg !17769

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !17771
  br i1 %6, label %7, label %8, !dbg !17773

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #28, !dbg !17774
  br label %43, !dbg !17776

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !17758, metadata !DIExpression()), !dbg !17760
  %9 = icmp sgt i64 %0, -3, !dbg !17777
  br i1 %9, label %10, label %14, !dbg !17779

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17780
  %12 = trunc i64 %0 to i32, !dbg !17782
  %13 = add i32 %11, %12, !dbg !17782
  call void @llvm.dbg.value(metadata i32 %13, metadata !17757, metadata !DIExpression()), !dbg !17760
  br label %17, !dbg !17783

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !17784
  %16 = sub i32 -2, %15, !dbg !17784
  call void @llvm.dbg.value(metadata i32 %16, metadata !17757, metadata !DIExpression()), !dbg !17760
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !17786
  call void @llvm.dbg.value(metadata i32 %18, metadata !17757, metadata !DIExpression()), !dbg !17760
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !17787
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17789, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17791
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()) #26, !dbg !17791
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !17787
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17792
  br i1 %20, label %22, label %21, !dbg !17793

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !17794
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17794
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !17794
  unreachable, !dbg !17794

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17791
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !17787
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17795
  call void @llvm.dbg.value(metadata i32 undef, metadata !17759, metadata !DIExpression()), !dbg !17760
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17796
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !17797
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #28, !dbg !17798
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17799
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17800
  tail call fastcc void @z_add_thread_timeout.346(%struct.k_thread* noundef %24, [1 x i64] %25) #28, !dbg !17800
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17801
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #28, !dbg !17802
  call void @llvm.dbg.value(metadata i32 undef, metadata !16539, metadata !DIExpression()) #26, !dbg !17803
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16544, metadata !DIExpression()) #26, !dbg !17803
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16548, metadata !DIExpression()) #26, !dbg !17805
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17807
  br i1 %27, label %29, label %28, !dbg !17808

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 225) #27, !dbg !17809
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17809
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 225) #27, !dbg !17809
  unreachable, !dbg !17809

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !17789
  call void @llvm.dbg.value(metadata i32 %30, metadata !15830, metadata !DIExpression()) #26, !dbg !17791
  call void @llvm.dbg.value(metadata i32 %30, metadata !15824, metadata !DIExpression()) #26, !dbg !17787
  call void @llvm.dbg.value(metadata i32 %30, metadata !17759, metadata !DIExpression()), !dbg !17760
  call void @llvm.dbg.value(metadata i32 undef, metadata !16539, metadata !DIExpression()) #26, !dbg !17803
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #27, !dbg !17810
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17811
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #28, !dbg !17811
  br i1 %33, label %34, label %35, !dbg !17814

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.373, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1448) #27, !dbg !17815
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.335, i32 0, i32 0)) #27, !dbg !17815
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1448) #27, !dbg !17815
  unreachable, !dbg !17815

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !17817
  %37 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17818
  %38 = zext i32 %37 to i64, !dbg !17818
  %39 = sub nsw i64 %36, %38, !dbg !17819
  call void @llvm.dbg.value(metadata i64 %39, metadata !17756, metadata !DIExpression()), !dbg !17760
  %40 = icmp sgt i64 %39, 0, !dbg !17820
  %41 = select i1 %40, i64 %39, i64 0, !dbg !17820
  %42 = trunc i64 %41 to i32, !dbg !17820
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !17760
  ret i32 %44, !dbg !17821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #5 !dbg !17822 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17824, metadata !DIExpression()), !dbg !17825
  call void @llvm.dbg.value(metadata i64 %0, metadata !15878, metadata !DIExpression()), !dbg !17826
  call void @llvm.dbg.value(metadata i32 10000, metadata !15881, metadata !DIExpression()), !dbg !17826
  call void @llvm.dbg.value(metadata i32 1000, metadata !15882, metadata !DIExpression()), !dbg !17826
  call void @llvm.dbg.value(metadata i8 1, metadata !15883, metadata !DIExpression()), !dbg !17826
  call void @llvm.dbg.value(metadata i1 false, metadata !15884, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17826
  call void @llvm.dbg.value(metadata i1 false, metadata !15885, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17826
  call void @llvm.dbg.value(metadata i8 0, metadata !15886, metadata !DIExpression()), !dbg !17826
  call void @llvm.dbg.value(metadata i1 false, metadata !15887, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17826
  call void @llvm.dbg.value(metadata i1 true, metadata !15888, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17826
  call void @llvm.dbg.value(metadata i64 0, metadata !15889, metadata !DIExpression()), !dbg !17826
  call void @llvm.dbg.value(metadata i64 0, metadata !15889, metadata !DIExpression()), !dbg !17826
  call void @llvm.dbg.value(metadata i64 %0, metadata !15878, metadata !DIExpression()), !dbg !17826
  %2 = udiv i64 %0, 10, !dbg !17828
  ret i64 %2, !dbg !17832
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !17833 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !17834, !srcloc !17836
  tail call void @z_impl_k_yield() #28, !dbg !17837
  ret void, !dbg !17838
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17839 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17843, metadata !DIExpression()), !dbg !17845
  %2 = sext i32 %0 to i64, !dbg !17846
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #28, !dbg !17847
  call void @llvm.dbg.value(metadata i64 %3, metadata !17844, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17845
  %4 = shl i64 %3, 32, !dbg !17848
  %5 = ashr exact i64 %4, 32, !dbg !17848
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #28, !dbg !17849
  call void @llvm.dbg.value(metadata i32 %6, metadata !17844, metadata !DIExpression()), !dbg !17845
  %7 = sext i32 %6 to i64, !dbg !17850
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #28, !dbg !17851
  %9 = trunc i64 %8 to i32, !dbg !17851
  ret i32 %9, !dbg !17852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !17853 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17855, metadata !DIExpression()), !dbg !17856
  call void @llvm.dbg.value(metadata i64 %0, metadata !15878, metadata !DIExpression()), !dbg !17857
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15881, metadata !DIExpression()), !dbg !17857
  call void @llvm.dbg.value(metadata i32 10000, metadata !15882, metadata !DIExpression()), !dbg !17857
  call void @llvm.dbg.value(metadata i8 1, metadata !15883, metadata !DIExpression()), !dbg !17857
  call void @llvm.dbg.value(metadata i1 false, metadata !15884, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17857
  call void @llvm.dbg.value(metadata i1 true, metadata !15885, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17857
  call void @llvm.dbg.value(metadata i8 0, metadata !15886, metadata !DIExpression()), !dbg !17857
  call void @llvm.dbg.value(metadata i1 false, metadata !15887, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17857
  call void @llvm.dbg.value(metadata i1 true, metadata !15888, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17857
  call void @llvm.dbg.value(metadata i64 0, metadata !15889, metadata !DIExpression()), !dbg !17857
  call void @llvm.dbg.value(metadata i64 0, metadata !15889, metadata !DIExpression()), !dbg !17857
  %2 = add i64 %0, 99, !dbg !17859
  call void @llvm.dbg.value(metadata i64 %2, metadata !15878, metadata !DIExpression()), !dbg !17857
  %3 = udiv i64 %2, 100, !dbg !17860
  ret i64 %3, !dbg !17861
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #5 !dbg !17862 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17864, metadata !DIExpression()), !dbg !17865
  call void @llvm.dbg.value(metadata i64 %0, metadata !15878, metadata !DIExpression()), !dbg !17866
  call void @llvm.dbg.value(metadata i32 10000, metadata !15881, metadata !DIExpression()), !dbg !17866
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15882, metadata !DIExpression()), !dbg !17866
  call void @llvm.dbg.value(metadata i8 1, metadata !15883, metadata !DIExpression()), !dbg !17866
  call void @llvm.dbg.value(metadata i1 false, metadata !15884, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17866
  call void @llvm.dbg.value(metadata i1 false, metadata !15885, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17866
  call void @llvm.dbg.value(metadata i8 0, metadata !15886, metadata !DIExpression()), !dbg !17866
  call void @llvm.dbg.value(metadata i1 true, metadata !15887, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17866
  call void @llvm.dbg.value(metadata i1 false, metadata !15888, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17866
  call void @llvm.dbg.value(metadata i64 0, metadata !15889, metadata !DIExpression()), !dbg !17866
  call void @llvm.dbg.value(metadata i64 0, metadata !15889, metadata !DIExpression()), !dbg !17866
  %2 = mul i64 %0, 100, !dbg !17868
  ret i64 %2, !dbg !17870
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17871 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17873, metadata !DIExpression()), !dbg !17874
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #28, !dbg !17875
  br i1 %2, label %14, label %3, !dbg !17877

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #28, !dbg !17878
  %5 = icmp slt i32 %4, 0, !dbg !17880
  br i1 %5, label %6, label %10, !dbg !17881

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17882
  %8 = load i8, i8* %7, align 1, !dbg !17882
  %9 = icmp eq i8 %8, 16, !dbg !17885
  br i1 %9, label %10, label %14, !dbg !17886

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #28, !dbg !17887
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #28, !dbg !17888
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17889, !srcloc !16595
  call void @llvm.dbg.value(metadata i32 %11, metadata !16591, metadata !DIExpression()) #26, !dbg !17893
  %12 = icmp eq i32 %11, 0, !dbg !17894
  br i1 %12, label %13, label %14, !dbg !17895

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #28, !dbg !17896
  br label %14, !dbg !17898

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !17899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !17900 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17902, metadata !DIExpression()), !dbg !17903
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17904
  %3 = load i8, i8* %2, align 1, !dbg !17904
  %4 = and i8 %3, 2, !dbg !17905
  %5 = icmp ne i8 %4, 0, !dbg !17906
  ret i1 %5, !dbg !17907
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #13 !dbg !17908 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17913
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17912, metadata !DIExpression()), !dbg !17914
  ret %struct.k_thread* %1, !dbg !17915
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !17916 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17917, !srcloc !16595
  call void @llvm.dbg.value(metadata i32 %1, metadata !16591, metadata !DIExpression()) #26, !dbg !17920
  %2 = icmp eq i32 %1, 0, !dbg !17921
  br i1 %2, label %3, label %8, !dbg !17922

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17923
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #28, !dbg !17924
  %6 = icmp ne i32 %5, 0, !dbg !17922
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !17925
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17926 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17928, metadata !DIExpression()), !dbg !17930
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !17931
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17933, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !17935
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()) #26, !dbg !17935
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !17931
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17936
  br i1 %3, label %5, label %4, !dbg !17937

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !17938
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17938
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !17938
  unreachable, !dbg !17938

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !17933
  call void @llvm.dbg.value(metadata i32 %6, metadata !15830, metadata !DIExpression()) #26, !dbg !17935
  call void @llvm.dbg.value(metadata i32 %6, metadata !15824, metadata !DIExpression()) #26, !dbg !17931
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17939
  call void @llvm.dbg.value(metadata i32 %6, metadata !17929, metadata !DIExpression()), !dbg !17930
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !17940
  %8 = load i8, i8* %7, align 4, !dbg !17940
  %9 = and i8 %8, 1, !dbg !17942
  %10 = icmp eq i8 %9, 0, !dbg !17943
  br i1 %10, label %15, label %11, !dbg !17944

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !17945
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15857, metadata !DIExpression()) #26, !dbg !17945
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17948
  br i1 %12, label %14, label %13, !dbg !17949

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !17950
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17950
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !17950
  unreachable, !dbg !17950

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !15852, metadata !DIExpression()) #26, !dbg !17945
  call void @llvm.dbg.value(metadata i32 %6, metadata !15866, metadata !DIExpression()) #26, !dbg !17951
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !17953, !srcloc !15872
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.378, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1731) #27, !dbg !17954
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.379, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #27, !dbg !17954
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1731) #27, !dbg !17954
  unreachable, !dbg !17954

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17958
  %17 = load i8, i8* %16, align 1, !dbg !17958
  %18 = and i8 %17, 8, !dbg !17960
  %19 = icmp eq i8 %18, 0, !dbg !17961
  br i1 %19, label %24, label %20, !dbg !17962

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !17963
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15857, metadata !DIExpression()) #26, !dbg !17963
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17966
  br i1 %21, label %23, label %22, !dbg !17967

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !17968
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17968
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !17968
  unreachable, !dbg !17968

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !15852, metadata !DIExpression()) #26, !dbg !17963
  call void @llvm.dbg.value(metadata i32 %6, metadata !15866, metadata !DIExpression()) #26, !dbg !17969
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !17971, !srcloc !15872
  br label %39, !dbg !17972

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #28, !dbg !17973
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17974
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !17976
  br i1 %26, label %27, label %35, !dbg !17977

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17978, !srcloc !16595
  call void @llvm.dbg.value(metadata i32 %28, metadata !16591, metadata !DIExpression()) #26, !dbg !17981
  %29 = icmp eq i32 %28, 0, !dbg !17982
  br i1 %29, label %30, label %35, !dbg !17983

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !16539, metadata !DIExpression()) #26, !dbg !17984
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16544, metadata !DIExpression()) #26, !dbg !17984
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16548, metadata !DIExpression()) #26, !dbg !17987
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17989
  br i1 %31, label %33, label %32, !dbg !17990

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 225) #27, !dbg !17991
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17991
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 225) #27, !dbg !17991
  unreachable, !dbg !17991

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !16539, metadata !DIExpression()) #26, !dbg !17984
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #27, !dbg !17992
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.378, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1778) #27, !dbg !17993
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.380, i32 0, i32 0)) #27, !dbg !17993
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1778) #27, !dbg !17993
  unreachable, !dbg !17993

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !17997
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15857, metadata !DIExpression()) #26, !dbg !17997
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17999
  br i1 %36, label %38, label %37, !dbg !18000

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !18001
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18001
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !18001
  unreachable, !dbg !18001

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !15852, metadata !DIExpression()) #26, !dbg !17997
  call void @llvm.dbg.value(metadata i32 %6, metadata !15866, metadata !DIExpression()) #26, !dbg !18002
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !18004, !srcloc !15872
  br label %39, !dbg !18005

39:                                               ; preds = %38, %23
  ret void, !dbg !18005
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !18006 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18008, metadata !DIExpression()), !dbg !18009
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18010
  %3 = load i8, i8* %2, align 1, !dbg !18010
  %4 = and i8 %3, 8, !dbg !18012
  %5 = icmp eq i8 %4, 0, !dbg !18013
  br i1 %5, label %6, label %20, !dbg !18014

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !18015
  %8 = or i8 %7, 8, !dbg !18015
  store i8 %8, i8* %2, align 1, !dbg !18015
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #28, !dbg !18017
  br i1 %9, label %10, label %12, !dbg !18019

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16010, metadata !DIExpression()) #26, !dbg !18020
  %11 = and i8 %8, 95, !dbg !18023
  store i8 %11, i8* %2, align 1, !dbg !18023
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16018, metadata !DIExpression()) #26, !dbg !18024
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !18026
  br label %12, !dbg !18027

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18028
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !18028
  %15 = icmp eq %union.anon* %14, null, !dbg !18030
  br i1 %15, label %17, label %16, !dbg !18031

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #28, !dbg !18032
  br label %17, !dbg !18034

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #28, !dbg !18035
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !18036
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #28, !dbg !18037
  tail call fastcc void @update_cache(i32 noundef 1) #28, !dbg !18038
  br label %20, !dbg !18039

20:                                               ; preds = %17, %1
  ret void, !dbg !18040
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !18041 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !18045, metadata !DIExpression()), !dbg !18047
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.363(%union.anon* noundef %0) #28, !dbg !18048
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !18046, metadata !DIExpression()), !dbg !18047
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !18049
  br i1 %3, label %10, label %4, !dbg !18050

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #28, !dbg !18051
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #28, !dbg !18053
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !18054, metadata !DIExpression()), !dbg !18060
  call void @llvm.dbg.value(metadata i32 0, metadata !18059, metadata !DIExpression()), !dbg !18060
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !18062
  store i32 0, i32* %7, align 4, !dbg !18063
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #28, !dbg !18064
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.363(%union.anon* noundef %0) #28, !dbg !18048
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !18046, metadata !DIExpression()), !dbg !18047
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !18049
  br i1 %9, label %10, label %4, !dbg !18050, !llvm.loop !18065

10:                                               ; preds = %4, %1
  ret void, !dbg !18067
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !18068 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18073, metadata !DIExpression()), !dbg !18076
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18072, metadata !DIExpression()), !dbg !18076
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !18077
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18079, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !18081
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()) #26, !dbg !18081
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !18077
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18082
  br i1 %4, label %6, label %5, !dbg !18083

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !18084
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18084
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !18084
  unreachable, !dbg !18084

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !18079
  call void @llvm.dbg.value(metadata i32 %7, metadata !15830, metadata !DIExpression()) #26, !dbg !18081
  call void @llvm.dbg.value(metadata i32 %7, metadata !15824, metadata !DIExpression()) #26, !dbg !18077
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18085
  call void @llvm.dbg.value(metadata i32 %7, metadata !18074, metadata !DIExpression()), !dbg !18076
  call void @llvm.dbg.value(metadata i32 0, metadata !18075, metadata !DIExpression()), !dbg !18076
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18086
  %9 = load i8, i8* %8, align 1, !dbg !18086
  %10 = and i8 %9, 8, !dbg !18088
  %11 = icmp eq i8 %10, 0, !dbg !18089
  br i1 %11, label %12, label %35, !dbg !18090

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !18073, metadata !DIExpression()), !dbg !18076
  %14 = icmp eq i64 %13, 0, !dbg !18091
  br i1 %14, label %35, label %15, !dbg !18093

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18094
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !18096
  br i1 %17, label %35, label %18, !dbg !18097

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18098
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !18098
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !18099
  %22 = icmp eq %union.anon* %20, %21, !dbg !18100
  br i1 %22, label %35, label %23, !dbg !18101

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !18102, !srcloc !16595
  call void @llvm.dbg.value(metadata i32 %24, metadata !16591, metadata !DIExpression()) #26, !dbg !18108
  %25 = icmp eq i32 %24, 0, !dbg !18109
  br i1 %25, label %27, label %26, !dbg !18110

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1809) #27, !dbg !18111
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.381, i32 0, i32 0)) #27, !dbg !18111
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.332, i32 0, i32 0), i32 noundef 1809) #27, !dbg !18111
  unreachable, !dbg !18111

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18113
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !18114
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #28, !dbg !18115
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18116
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #28, !dbg !18117
  call void @llvm.dbg.value(metadata i32 undef, metadata !16539, metadata !DIExpression()) #26, !dbg !18118
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16544, metadata !DIExpression()) #26, !dbg !18118
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16548, metadata !DIExpression()) #26, !dbg !18120
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18122
  br i1 %31, label %33, label %32, !dbg !18123

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 225) #27, !dbg !18124
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18124
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 225) #27, !dbg !18124
  unreachable, !dbg !18124

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !16539, metadata !DIExpression()) #26, !dbg !18118
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #27, !dbg !18125
  call void @llvm.dbg.value(metadata i32 %34, metadata !18075, metadata !DIExpression()), !dbg !18076
  br label %40, !dbg !18126

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !18127
  call void @llvm.dbg.value(metadata i32 %36, metadata !18075, metadata !DIExpression()), !dbg !18076
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !18128
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15857, metadata !DIExpression()) #26, !dbg !18128
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18130
  br i1 %37, label %39, label %38, !dbg !18131

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !18132
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18132
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !18132
  unreachable, !dbg !18132

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !15852, metadata !DIExpression()) #26, !dbg !18128
  call void @llvm.dbg.value(metadata i32 %7, metadata !15866, metadata !DIExpression()) #26, !dbg !18133
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #26, !dbg !18135, !srcloc !15872
  br label %40, !dbg !18136

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !18076
  ret i32 %41, !dbg !18137
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !18138 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !18142, metadata !DIExpression()), !dbg !18150
  call void @llvm.dbg.value(metadata i32 %1, metadata !18143, metadata !DIExpression()), !dbg !18150
  call void @llvm.dbg.value(metadata i8* %2, metadata !18144, metadata !DIExpression()), !dbg !18150
  call void @llvm.dbg.value(metadata i8 0, metadata !18146, metadata !DIExpression()), !dbg !18150
  call void @llvm.dbg.value(metadata i32 0, metadata !18147, metadata !DIExpression()), !dbg !18151
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !18152
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18154, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !18156
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()) #26, !dbg !18156
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !18152
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18157
  br i1 %5, label %7, label %6, !dbg !18158

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !18159
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18159
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 148) #27, !dbg !18159
  unreachable, !dbg !18159

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #26, !dbg !18156
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()) #26, !dbg !18152
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18160
  call void @llvm.dbg.value(metadata i32 undef, metadata !18149, metadata !DIExpression()), !dbg !18151
  call void @llvm.dbg.value(metadata i8 poison, metadata !18146, metadata !DIExpression()), !dbg !18150
  call void @llvm.dbg.value(metadata i32 undef, metadata !18147, metadata !DIExpression()), !dbg !18151
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #28, !dbg !18161
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18145, metadata !DIExpression()), !dbg !18150
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !18164
  br i1 %10, label %15, label %11, !dbg !18166

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18167, metadata !DIExpression()), !dbg !18174
  call void @llvm.dbg.value(metadata i32 %1, metadata !18172, metadata !DIExpression()), !dbg !18174
  call void @llvm.dbg.value(metadata i8* %2, metadata !18173, metadata !DIExpression()), !dbg !18174
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18054, metadata !DIExpression()), !dbg !18177
  call void @llvm.dbg.value(metadata i32 %1, metadata !18059, metadata !DIExpression()), !dbg !18177
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 7, i32 1, !dbg !18179
  store i32 %1, i32* %12, align 4, !dbg !18180
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !18181
  store i8* %2, i8** %13, align 4, !dbg !18182
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #28, !dbg !18183
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #28, !dbg !18184
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #28, !dbg !18185
  call void @llvm.dbg.value(metadata i8 1, metadata !18146, metadata !DIExpression()), !dbg !18150
  br label %15, !dbg !18186

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !18146, metadata !DIExpression()), !dbg !18150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !18187
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15857, metadata !DIExpression()) #26, !dbg !18187
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18189
  br i1 %16, label %18, label %17, !dbg !18190

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !18191
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18191
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.327, i32 0, i32 0), i32 noundef 194) #27, !dbg !18191
  unreachable, !dbg !18191

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !18150
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !18154
  call void @llvm.dbg.value(metadata i32 %20, metadata !15830, metadata !DIExpression()) #26, !dbg !18156
  call void @llvm.dbg.value(metadata i32 %20, metadata !15824, metadata !DIExpression()) #26, !dbg !18152
  call void @llvm.dbg.value(metadata i32 %20, metadata !18149, metadata !DIExpression()), !dbg !18151
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #26, !dbg !18187
  call void @llvm.dbg.value(metadata i32 undef, metadata !15866, metadata !DIExpression()) #26, !dbg !18192
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #26, !dbg !18194, !srcloc !15872
  call void @llvm.dbg.value(metadata i8 poison, metadata !18146, metadata !DIExpression()), !dbg !18150
  call void @llvm.dbg.value(metadata i32 undef, metadata !18147, metadata !DIExpression()), !dbg !18151
  ret i1 %19, !dbg !18195
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !18196 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !18202, metadata !DIExpression()), !dbg !18207
  call void @llvm.dbg.value(metadata i64 undef, metadata !18204, metadata !DIExpression()), !dbg !18207
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !18201, metadata !DIExpression()), !dbg !18207
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !18203, metadata !DIExpression()), !dbg !18207
  call void @llvm.dbg.value(metadata i8** %4, metadata !18205, metadata !DIExpression()), !dbg !18207
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #28, !dbg !18208
  call void @llvm.dbg.value(metadata i32 %6, metadata !18206, metadata !DIExpression()), !dbg !18207
  %7 = icmp eq i8** %4, null, !dbg !18209
  br i1 %7, label %12, label %8, !dbg !18211

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18212
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !18214
  %11 = load i8*, i8** %10, align 4, !dbg !18214
  store i8* %11, i8** %4, align 4, !dbg !18215
  br label %12, !dbg !18216

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !18217
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !18218 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !18220
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !18221
  ret void, !dbg !18222
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18223 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !18233, metadata !DIExpression()), !dbg !18250
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18231, metadata !DIExpression()), !dbg !18250
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !18232, metadata !DIExpression()), !dbg !18250
  %5 = icmp eq i64 %4, -1, !dbg !18251
  br i1 %5, label %63, label %6, !dbg !18253

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18254
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.386(%struct._dnode* noundef %7) #28, !dbg !18254
  br i1 %8, label %9, label %10, !dbg !18257

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.387, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.389, i32 0, i32 0), i32 noundef 99) #27, !dbg !18258
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.390, i32 0, i32 0)) #27, !dbg !18258
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.389, i32 0, i32 0), i32 noundef 99) #27, !dbg !18258
  unreachable, !dbg !18258

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !18260
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !18261
  call void @llvm.dbg.value(metadata i32 0, metadata !18234, metadata !DIExpression()), !dbg !18262
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18263, metadata !DIExpression()) #26, !dbg !18270
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18272, !srcloc !18278
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18279
  call void @llvm.dbg.value(metadata i32 undef, metadata !18276, metadata !DIExpression()) #26, !dbg !18279
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18270
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18280
  br i1 %13, label %15, label %14, !dbg !18283

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.387, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.391, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 148) #27, !dbg !18284
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18284
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 148) #27, !dbg !18284
  unreachable, !dbg !18284

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !18272
  call void @llvm.dbg.value(metadata i32 %16, metadata !18275, metadata !DIExpression()) #26, !dbg !18279
  call void @llvm.dbg.value(metadata i32 %16, metadata !18269, metadata !DIExpression()) #26, !dbg !18270
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18286
  call void @llvm.dbg.value(metadata i32 %16, metadata !18240, metadata !DIExpression()), !dbg !18262
  call void @llvm.dbg.value(metadata i32 undef, metadata !18234, metadata !DIExpression()), !dbg !18262
  %17 = icmp slt i64 %4, -1, !dbg !18287
  br i1 %17, label %18, label %24, !dbg !18288

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !18289
  %20 = add i64 %4, %19, !dbg !18290
  %21 = sub i64 -2, %20, !dbg !18290
  call void @llvm.dbg.value(metadata i64 %21, metadata !18244, metadata !DIExpression()), !dbg !18291
  %22 = icmp sgt i64 %21, 1, !dbg !18292
  %23 = select i1 %22, i64 %21, i64 1, !dbg !18292
  br label %29, !dbg !18293

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !18294
  %26 = tail call fastcc i32 @elapsed.394() #28, !dbg !18296
  %27 = sext i32 %26 to i64, !dbg !18296
  %28 = add nsw i64 %25, %27, !dbg !18297
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !18298
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !18299
  store i64 %30, i64* %31, align 8, !dbg !18300
  %32 = tail call fastcc %struct._timeout* @first() #28, !dbg !18301
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !18241, metadata !DIExpression()), !dbg !18303
  %33 = icmp eq %struct._timeout* %32, null, !dbg !18304
  br i1 %33, label %48, label %34, !dbg !18304

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !18305
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !18241, metadata !DIExpression()), !dbg !18303
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !18309
  %38 = load i64, i64* %37, align 8, !dbg !18309
  %39 = icmp slt i64 %35, %38, !dbg !18310
  br i1 %39, label %40, label %44, !dbg !18311

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !18309
  %42 = sub nsw i64 %38, %35, !dbg !18312
  store i64 %42, i64* %41, align 8, !dbg !18312
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !18314
  tail call fastcc void @sys_dlist_insert.395(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #28, !dbg !18315
  br label %49, !dbg !18316

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !18317
  store i64 %45, i64* %31, align 8, !dbg !18317
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #28, !dbg !18318
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !18241, metadata !DIExpression()), !dbg !18303
  %47 = icmp eq %struct._timeout* %46, null, !dbg !18304
  br i1 %47, label %48, label %34, !dbg !18304, !llvm.loop !18319

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.396(%struct._dnode* noundef nonnull %7) #28, !dbg !18321
  br label %49, !dbg !18324

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #28, !dbg !18325
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !18326
  br i1 %51, label %52, label %59, !dbg !18327

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #28, !dbg !18328
  call void @llvm.dbg.value(metadata i32 %53, metadata !18247, metadata !DIExpression()), !dbg !18329
  %54 = icmp ne i32 %53, 0, !dbg !18330
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !18332
  br i1 %57, label %59, label %58, !dbg !18332

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #27, !dbg !18333
  br label %59, !dbg !18335

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18342
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18341, metadata !DIExpression()) #26, !dbg !18342
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18344
  br i1 %60, label %62, label %61, !dbg !18347

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.387, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.397, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 194) #27, !dbg !18348
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.398, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18348
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 194) #27, !dbg !18348
  unreachable, !dbg !18348

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !18336, metadata !DIExpression()) #26, !dbg !18342
  call void @llvm.dbg.value(metadata i32 %16, metadata !18350, metadata !DIExpression()) #26, !dbg !18353
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !18355, !srcloc !18356
  call void @llvm.dbg.value(metadata i32 undef, metadata !18234, metadata !DIExpression()), !dbg !18262
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !18357
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.386(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !18358 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18364, metadata !DIExpression()), !dbg !18365
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18366
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18366
  %4 = icmp ne %struct._dnode* %3, null, !dbg !18367
  ret i1 %4, !dbg !18368
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.394() unnamed_addr #1 !dbg !18369 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !18372
  %2 = icmp eq i32 %1, 0, !dbg !18373
  br i1 %2, label %3, label %5, !dbg !18372

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !18374
  br label %5, !dbg !18372

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !18372
  ret i32 %6, !dbg !18375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #13 !dbg !18376 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.401() #28, !dbg !18382
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !18380, metadata !DIExpression()), !dbg !18383
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !18384
  ret %struct._timeout* %2, !dbg !18385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.395(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #14 !dbg !18386 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18390, metadata !DIExpression()), !dbg !18394
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !18391, metadata !DIExpression()), !dbg !18394
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18395
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !18395
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !18392, metadata !DIExpression()), !dbg !18394
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !18396
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !18397
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !18398
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !18399
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !18400
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !18401
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !18402
  ret void, !dbg !18403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #13 !dbg !18404 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18408, metadata !DIExpression()), !dbg !18410
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18411
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.399(%struct._dnode* noundef %2) #28, !dbg !18412
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18409, metadata !DIExpression()), !dbg !18410
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !18413
  ret %struct._timeout* %4, !dbg !18414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.396(%struct._dnode* noundef %0) unnamed_addr #14 !dbg !18415 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18420, metadata !DIExpression()), !dbg !18423
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18421, metadata !DIExpression()), !dbg !18423
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18424
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !18422, metadata !DIExpression()), !dbg !18423
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18425
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !18426
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18427
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !18428
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !18429
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !18430
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18431
  ret void, !dbg !18432
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !18433 {
  %1 = tail call fastcc %struct._timeout* @first() #28, !dbg !18438
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !18435, metadata !DIExpression()), !dbg !18439
  %2 = tail call fastcc i32 @elapsed.394() #28, !dbg !18440
  call void @llvm.dbg.value(metadata i32 %2, metadata !18436, metadata !DIExpression()), !dbg !18439
  %3 = icmp eq %struct._timeout* %1, null, !dbg !18441
  br i1 %3, label %14, label %4, !dbg !18443

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !18444
  %6 = load i64, i64* %5, align 8, !dbg !18444
  %7 = sext i32 %2 to i64, !dbg !18445
  %8 = sub nsw i64 %6, %7, !dbg !18446
  %9 = icmp sgt i64 %8, 2147483647, !dbg !18447
  br i1 %9, label %14, label %10, !dbg !18448

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !18449
  %12 = select i1 %11, i64 %8, i64 0, !dbg !18449
  %13 = trunc i64 %12 to i32, !dbg !18449
  call void @llvm.dbg.value(metadata i32 %13, metadata !18437, metadata !DIExpression()), !dbg !18439
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !18451
  call void @llvm.dbg.value(metadata i32 %15, metadata !18437, metadata !DIExpression()), !dbg !18439
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !18452
  %17 = icmp ne i32 %16, 0, !dbg !18454
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !18455
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !18455
  call void @llvm.dbg.value(metadata i32 %20, metadata !18437, metadata !DIExpression()), !dbg !18439
  ret i32 %20, !dbg !18456
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.399(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !18457 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18461, metadata !DIExpression()), !dbg !18463
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18462, metadata !DIExpression()), !dbg !18463
  %2 = icmp eq %struct._dnode* %0, null, !dbg !18464
  br i1 %2, label %5, label %3, !dbg !18465

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.400(%struct._dnode* noundef nonnull %0) #28, !dbg !18466
  br label %5, !dbg !18465

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !18465
  ret %struct._dnode* %6, !dbg !18467
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.400(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !18468 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18470, metadata !DIExpression()), !dbg !18472
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18471, metadata !DIExpression()), !dbg !18472
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18473
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !18474
  br i1 %3, label %7, label %4, !dbg !18475

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18476
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !18476
  br label %7, !dbg !18475

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !18475
  ret %struct._dnode* %8, !dbg !18477
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.401() unnamed_addr #13 !dbg !18478 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18482, metadata !DIExpression()), !dbg !18483
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.402() #28, !dbg !18484
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !18484
  ret %struct._dnode* %3, !dbg !18485
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.402() unnamed_addr #13 !dbg !18486 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18490, metadata !DIExpression()), !dbg !18491
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !18492
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !18493
  ret i1 %2, !dbg !18494
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18495 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18499, metadata !DIExpression()), !dbg !18504
  call void @llvm.dbg.value(metadata i32 -22, metadata !18500, metadata !DIExpression()), !dbg !18504
  call void @llvm.dbg.value(metadata i32 0, metadata !18501, metadata !DIExpression()), !dbg !18505
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18263, metadata !DIExpression()) #26, !dbg !18506
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18508, !srcloc !18278
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18510
  call void @llvm.dbg.value(metadata i32 undef, metadata !18276, metadata !DIExpression()) #26, !dbg !18510
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18506
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18511
  br i1 %3, label %5, label %4, !dbg !18512

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.387, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.391, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 148) #27, !dbg !18513
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18513
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 148) #27, !dbg !18513
  unreachable, !dbg !18513

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18510
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18506
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18514
  call void @llvm.dbg.value(metadata i32 undef, metadata !18503, metadata !DIExpression()), !dbg !18505
  call void @llvm.dbg.value(metadata i32 -22, metadata !18500, metadata !DIExpression()), !dbg !18504
  call void @llvm.dbg.value(metadata i32 undef, metadata !18501, metadata !DIExpression()), !dbg !18505
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !18500, metadata !DIExpression()), !dbg !18504
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.386(%struct._dnode* noundef %6) #28, !dbg !18515
  br i1 %7, label %8, label %9, !dbg !18519

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #28, !dbg !18520
  call void @llvm.dbg.value(metadata i32 0, metadata !18500, metadata !DIExpression()), !dbg !18504
  br label %9, !dbg !18522

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !18504
  call void @llvm.dbg.value(metadata i32 %10, metadata !18500, metadata !DIExpression()), !dbg !18504
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18523
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18341, metadata !DIExpression()) #26, !dbg !18523
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18525
  br i1 %11, label %13, label %12, !dbg !18526

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.387, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.397, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 194) #27, !dbg !18527
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.398, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18527
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 194) #27, !dbg !18527
  unreachable, !dbg !18527

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !18508
  call void @llvm.dbg.value(metadata i32 %14, metadata !18275, metadata !DIExpression()) #26, !dbg !18510
  call void @llvm.dbg.value(metadata i32 %14, metadata !18269, metadata !DIExpression()) #26, !dbg !18506
  call void @llvm.dbg.value(metadata i32 %14, metadata !18503, metadata !DIExpression()), !dbg !18505
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18523
  call void @llvm.dbg.value(metadata i32 undef, metadata !18350, metadata !DIExpression()) #26, !dbg !18528
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !18530, !srcloc !18356
  call void @llvm.dbg.value(metadata i32 %10, metadata !18500, metadata !DIExpression()), !dbg !18504
  call void @llvm.dbg.value(metadata i32 undef, metadata !18501, metadata !DIExpression()), !dbg !18505
  ret i32 %10, !dbg !18531
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #14 !dbg !18532 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18534, metadata !DIExpression()), !dbg !18535
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #28, !dbg !18536
  %3 = icmp eq %struct._timeout* %2, null, !dbg !18538
  br i1 %3, label %10, label %4, !dbg !18539

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !18540
  %6 = load i64, i64* %5, align 8, !dbg !18540
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !18542
  %8 = load i64, i64* %7, align 8, !dbg !18543
  %9 = add nsw i64 %8, %6, !dbg !18543
  store i64 %9, i64* %7, align 8, !dbg !18543
  br label %10, !dbg !18544

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18545
  tail call fastcc void @sys_dlist_remove.405(%struct._dnode* noundef %11) #28, !dbg !18546
  ret void, !dbg !18547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.405(%struct._dnode* nocapture noundef %0) unnamed_addr #14 !dbg !18548 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18552, metadata !DIExpression()), !dbg !18555
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18556
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18556
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18553, metadata !DIExpression()), !dbg !18555
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18557
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !18557
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !18554, metadata !DIExpression()), !dbg !18555
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !18558
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !18559
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !18560
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !18561
  tail call fastcc void @sys_dnode_init.406(%struct._dnode* noundef %0) #28, !dbg !18562
  ret void, !dbg !18563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.406(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !18564 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18566, metadata !DIExpression()), !dbg !18567
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18568
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !18569
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18570
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !18571
  ret void, !dbg !18572
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18573 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18579, metadata !DIExpression()), !dbg !18584
  call void @llvm.dbg.value(metadata i64 0, metadata !18580, metadata !DIExpression()), !dbg !18584
  call void @llvm.dbg.value(metadata i32 0, metadata !18581, metadata !DIExpression()), !dbg !18585
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18263, metadata !DIExpression()) #26, !dbg !18586
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18588, !srcloc !18278
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18590
  call void @llvm.dbg.value(metadata i32 undef, metadata !18276, metadata !DIExpression()) #26, !dbg !18590
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18586
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18591
  br i1 %3, label %5, label %4, !dbg !18592

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.387, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.391, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 148) #27, !dbg !18593
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18593
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 148) #27, !dbg !18593
  unreachable, !dbg !18593

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18590
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18586
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18594
  call void @llvm.dbg.value(metadata i32 undef, metadata !18583, metadata !DIExpression()), !dbg !18585
  call void @llvm.dbg.value(metadata i64 0, metadata !18580, metadata !DIExpression()), !dbg !18584
  call void @llvm.dbg.value(metadata i32 undef, metadata !18581, metadata !DIExpression()), !dbg !18585
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #28, !dbg !18595
  call void @llvm.dbg.value(metadata i64 %6, metadata !18580, metadata !DIExpression()), !dbg !18584
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18598
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18341, metadata !DIExpression()) #26, !dbg !18598
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18600
  br i1 %7, label %9, label %8, !dbg !18601

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.387, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.397, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 194) #27, !dbg !18602
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.398, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18602
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 194) #27, !dbg !18602
  unreachable, !dbg !18602

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !18588
  call void @llvm.dbg.value(metadata i32 %10, metadata !18275, metadata !DIExpression()) #26, !dbg !18590
  call void @llvm.dbg.value(metadata i32 %10, metadata !18269, metadata !DIExpression()) #26, !dbg !18586
  call void @llvm.dbg.value(metadata i32 %10, metadata !18583, metadata !DIExpression()), !dbg !18585
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18598
  call void @llvm.dbg.value(metadata i32 undef, metadata !18350, metadata !DIExpression()) #26, !dbg !18603
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #26, !dbg !18605, !srcloc !18356
  call void @llvm.dbg.value(metadata i64 %6, metadata !18580, metadata !DIExpression()), !dbg !18584
  call void @llvm.dbg.value(metadata i32 undef, metadata !18581, metadata !DIExpression()), !dbg !18585
  ret i64 %6, !dbg !18606
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !18607 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18609, metadata !DIExpression()), !dbg !18613
  call void @llvm.dbg.value(metadata i64 0, metadata !18610, metadata !DIExpression()), !dbg !18613
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.407(%struct._timeout* noundef %0) #28, !dbg !18614
  br i1 %2, label %21, label %3, !dbg !18616

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #28, !dbg !18617
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !18611, metadata !DIExpression()), !dbg !18618
  call void @llvm.dbg.value(metadata i64 0, metadata !18610, metadata !DIExpression()), !dbg !18613
  %5 = icmp eq %struct._timeout* %4, null, !dbg !18619
  br i1 %5, label %16, label %6, !dbg !18621

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !18611, metadata !DIExpression()), !dbg !18618
  call void @llvm.dbg.value(metadata i64 %8, metadata !18610, metadata !DIExpression()), !dbg !18613
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !18622
  %10 = load i64, i64* %9, align 8, !dbg !18622
  %11 = add nsw i64 %10, %8, !dbg !18624
  call void @llvm.dbg.value(metadata i64 %11, metadata !18610, metadata !DIExpression()), !dbg !18613
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !18625
  br i1 %12, label %16, label %13, !dbg !18627

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #28, !dbg !18628
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !18611, metadata !DIExpression()), !dbg !18618
  call void @llvm.dbg.value(metadata i64 %11, metadata !18610, metadata !DIExpression()), !dbg !18613
  %15 = icmp eq %struct._timeout* %14, null, !dbg !18619
  br i1 %15, label %16, label %6, !dbg !18621, !llvm.loop !18629

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !18613
  call void @llvm.dbg.value(metadata i64 %17, metadata !18610, metadata !DIExpression()), !dbg !18613
  %18 = tail call fastcc i32 @elapsed.394() #28, !dbg !18631
  %19 = sext i32 %18 to i64, !dbg !18631
  %20 = sub nsw i64 %17, %19, !dbg !18632
  br label %21, !dbg !18633

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !18613
  ret i64 %22, !dbg !18634
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.407(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #13 !dbg !18635 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18639, metadata !DIExpression()), !dbg !18640
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18641
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.386(%struct._dnode* noundef %2) #28, !dbg !18642
  %4 = xor i1 %3, true, !dbg !18643
  ret i1 %4, !dbg !18644
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18645 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18647, metadata !DIExpression()), !dbg !18652
  call void @llvm.dbg.value(metadata i64 0, metadata !18648, metadata !DIExpression()), !dbg !18652
  call void @llvm.dbg.value(metadata i32 0, metadata !18649, metadata !DIExpression()), !dbg !18653
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18263, metadata !DIExpression()) #26, !dbg !18654
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18656, !srcloc !18278
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18658
  call void @llvm.dbg.value(metadata i32 undef, metadata !18276, metadata !DIExpression()) #26, !dbg !18658
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18654
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18659
  br i1 %3, label %5, label %4, !dbg !18660

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.387, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.391, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 148) #27, !dbg !18661
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18661
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 148) #27, !dbg !18661
  unreachable, !dbg !18661

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18658
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18654
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18662
  call void @llvm.dbg.value(metadata i32 undef, metadata !18651, metadata !DIExpression()), !dbg !18653
  call void @llvm.dbg.value(metadata i64 0, metadata !18648, metadata !DIExpression()), !dbg !18652
  call void @llvm.dbg.value(metadata i32 undef, metadata !18649, metadata !DIExpression()), !dbg !18653
  %6 = load i64, i64* @curr_tick, align 8, !dbg !18663
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #28, !dbg !18666
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !18648, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18652
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18667
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18341, metadata !DIExpression()) #26, !dbg !18667
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18669
  br i1 %8, label %10, label %9, !dbg !18670

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.387, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.397, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 194) #27, !dbg !18671
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.398, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18671
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 194) #27, !dbg !18671
  unreachable, !dbg !18671

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !18656
  call void @llvm.dbg.value(metadata i32 %11, metadata !18275, metadata !DIExpression()) #26, !dbg !18658
  call void @llvm.dbg.value(metadata i32 %11, metadata !18269, metadata !DIExpression()) #26, !dbg !18654
  call void @llvm.dbg.value(metadata i32 %11, metadata !18651, metadata !DIExpression()), !dbg !18653
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !18648, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18652
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18667
  call void @llvm.dbg.value(metadata i32 undef, metadata !18350, metadata !DIExpression()) #26, !dbg !18672
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #26, !dbg !18674, !srcloc !18356
  call void @llvm.dbg.value(metadata i32 undef, metadata !18649, metadata !DIExpression()), !dbg !18653
  %12 = add i64 %7, %6, !dbg !18675
  ret i64 %12, !dbg !18676
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !18677 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !18679, metadata !DIExpression()), !dbg !18683
  call void @llvm.dbg.value(metadata i32 0, metadata !18680, metadata !DIExpression()), !dbg !18684
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18263, metadata !DIExpression()) #26, !dbg !18685
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18687, !srcloc !18278
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18689
  call void @llvm.dbg.value(metadata i32 undef, metadata !18276, metadata !DIExpression()) #26, !dbg !18689
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18685
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18690
  br i1 %2, label %4, label %3, !dbg !18691

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.387, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.391, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 148) #27, !dbg !18692
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18692
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 148) #27, !dbg !18692
  unreachable, !dbg !18692

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18689
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18685
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18693
  call void @llvm.dbg.value(metadata i32 undef, metadata !18682, metadata !DIExpression()), !dbg !18684
  call void @llvm.dbg.value(metadata i32 -1, metadata !18679, metadata !DIExpression()), !dbg !18683
  call void @llvm.dbg.value(metadata i32 undef, metadata !18680, metadata !DIExpression()), !dbg !18684
  %5 = tail call fastcc i32 @next_timeout() #28, !dbg !18694
  call void @llvm.dbg.value(metadata i32 %5, metadata !18679, metadata !DIExpression()), !dbg !18683
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18697
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18341, metadata !DIExpression()) #26, !dbg !18697
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18699
  br i1 %6, label %8, label %7, !dbg !18700

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.387, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.397, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 194) #27, !dbg !18701
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.398, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18701
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 194) #27, !dbg !18701
  unreachable, !dbg !18701

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !18687
  call void @llvm.dbg.value(metadata i32 %9, metadata !18275, metadata !DIExpression()) #26, !dbg !18689
  call void @llvm.dbg.value(metadata i32 %9, metadata !18269, metadata !DIExpression()) #26, !dbg !18685
  call void @llvm.dbg.value(metadata i32 %9, metadata !18682, metadata !DIExpression()), !dbg !18684
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18697
  call void @llvm.dbg.value(metadata i32 undef, metadata !18350, metadata !DIExpression()) #26, !dbg !18702
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !18704, !srcloc !18356
  call void @llvm.dbg.value(metadata i32 %5, metadata !18679, metadata !DIExpression()), !dbg !18683
  call void @llvm.dbg.value(metadata i32 undef, metadata !18680, metadata !DIExpression()), !dbg !18684
  ret i32 %5, !dbg !18705
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !18706 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18708, metadata !DIExpression()), !dbg !18718
  call void @llvm.dbg.value(metadata i1 %1, metadata !18709, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18718
  call void @llvm.dbg.value(metadata i32 0, metadata !18710, metadata !DIExpression()), !dbg !18719
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18263, metadata !DIExpression()) #26, !dbg !18720
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18722, !srcloc !18278
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18724
  call void @llvm.dbg.value(metadata i32 undef, metadata !18276, metadata !DIExpression()) #26, !dbg !18724
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18720
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18725
  br i1 %4, label %6, label %5, !dbg !18726

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.387, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.391, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 148) #27, !dbg !18727
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18727
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 148) #27, !dbg !18727
  unreachable, !dbg !18727

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18724
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18720
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18728
  call void @llvm.dbg.value(metadata i32 undef, metadata !18712, metadata !DIExpression()), !dbg !18719
  call void @llvm.dbg.value(metadata i32 undef, metadata !18710, metadata !DIExpression()), !dbg !18719
  %7 = tail call fastcc i32 @next_timeout() #28, !dbg !18729
  call void @llvm.dbg.value(metadata i32 %7, metadata !18713, metadata !DIExpression()), !dbg !18730
  call void @llvm.dbg.value(metadata i1 undef, metadata !18716, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18730
  %8 = icmp slt i32 %7, 2, !dbg !18731
  call void @llvm.dbg.value(metadata i1 %8, metadata !18717, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18730
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !18732
  call void @llvm.dbg.value(metadata i1 %9, metadata !18716, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18730
  br i1 %10, label %14, label %11, !dbg !18732

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !18734
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !18734
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #27, !dbg !18736
  br label %14, !dbg !18737

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18738
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18341, metadata !DIExpression()) #26, !dbg !18738
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18740
  br i1 %15, label %17, label %16, !dbg !18741

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.387, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.397, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 194) #27, !dbg !18742
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.398, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18742
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 194) #27, !dbg !18742
  unreachable, !dbg !18742

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !18722
  call void @llvm.dbg.value(metadata i32 %18, metadata !18275, metadata !DIExpression()) #26, !dbg !18724
  call void @llvm.dbg.value(metadata i32 %18, metadata !18269, metadata !DIExpression()) #26, !dbg !18720
  call void @llvm.dbg.value(metadata i32 %18, metadata !18712, metadata !DIExpression()), !dbg !18719
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18738
  call void @llvm.dbg.value(metadata i32 undef, metadata !18350, metadata !DIExpression()) #26, !dbg !18743
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #26, !dbg !18745, !srcloc !18356
  call void @llvm.dbg.value(metadata i32 1, metadata !18710, metadata !DIExpression()), !dbg !18719
  call void @llvm.dbg.value(metadata i32 undef, metadata !18710, metadata !DIExpression()), !dbg !18719
  ret void, !dbg !18746
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !18747 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18751, metadata !DIExpression()), !dbg !18756
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !18757
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18263, metadata !DIExpression()) #26, !dbg !18758
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18760, !srcloc !18278
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18762
  call void @llvm.dbg.value(metadata i32 undef, metadata !18276, metadata !DIExpression()) #26, !dbg !18762
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18758
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18763
  br i1 %3, label %5, label %4, !dbg !18764

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.387, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.391, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 148) #27, !dbg !18765
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18765
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 148) #27, !dbg !18765
  unreachable, !dbg !18765

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18762
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18758
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18766
  call void @llvm.dbg.value(metadata i32 undef, metadata !18752, metadata !DIExpression()), !dbg !18756
  store i32 %0, i32* @announce_remaining, align 4, !dbg !18756
  call void @llvm.dbg.value(metadata i32 undef, metadata !18752, metadata !DIExpression()), !dbg !18756
  %6 = tail call fastcc %struct._timeout* @first() #28, !dbg !18767
  %7 = icmp eq %struct._timeout* %6, null, !dbg !18768
  br i1 %7, label %37, label %8, !dbg !18769

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !18756
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !18770
  %14 = load i64, i64* %13, align 8, !dbg !18770
  %15 = sext i32 %11 to i64, !dbg !18771
  %16 = icmp sgt i64 %14, %15, !dbg !18772
  br i1 %16, label %35, label %17, !dbg !18773

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !18753, metadata !DIExpression()), !dbg !18774
  %18 = trunc i64 %14 to i32, !dbg !18775
  call void @llvm.dbg.value(metadata i32 %18, metadata !18755, metadata !DIExpression()), !dbg !18774
  %19 = sext i32 %18 to i64, !dbg !18776
  %20 = load i64, i64* @curr_tick, align 8, !dbg !18777
  %21 = add i64 %20, %19, !dbg !18777
  store i64 %21, i64* @curr_tick, align 8, !dbg !18777
  store i64 0, i64* %13, align 8, !dbg !18778
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #28, !dbg !18779
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18780
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18341, metadata !DIExpression()) #26, !dbg !18780
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18782
  br i1 %22, label %24, label %23, !dbg !18783

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.387, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.397, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 194) #27, !dbg !18784
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.398, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18784
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 194) #27, !dbg !18784
  unreachable, !dbg !18784

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !18336, metadata !DIExpression()) #26, !dbg !18780
  call void @llvm.dbg.value(metadata i32 %12, metadata !18350, metadata !DIExpression()) #26, !dbg !18785
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #26, !dbg !18787, !srcloc !18356
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !18788
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !18788
  tail call void %26(%struct._timeout* noundef nonnull %9) #27, !dbg !18789
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18263, metadata !DIExpression()) #26, !dbg !18790
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18792, !srcloc !18278
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18794
  call void @llvm.dbg.value(metadata i32 undef, metadata !18276, metadata !DIExpression()) #26, !dbg !18794
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18790
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18795
  br i1 %28, label %30, label %29, !dbg !18796

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.387, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.391, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 148) #27, !dbg !18797
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18797
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 148) #27, !dbg !18797
  unreachable, !dbg !18797

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18794
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18790
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18798
  call void @llvm.dbg.value(metadata i32 undef, metadata !18752, metadata !DIExpression()), !dbg !18756
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !18799
  %32 = sub nsw i32 %31, %18, !dbg !18799
  store i32 %32, i32* @announce_remaining, align 4, !dbg !18756
  call void @llvm.dbg.value(metadata i32 undef, metadata !18752, metadata !DIExpression()), !dbg !18756
  %33 = tail call fastcc %struct._timeout* @first() #28, !dbg !18767
  %34 = icmp eq %struct._timeout* %33, null, !dbg !18768
  br i1 %34, label %37, label %8, !dbg !18769, !llvm.loop !18800

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !18802
  store i64 %36, i64* %13, align 8, !dbg !18802
  br label %41, !dbg !18805

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !18756
  %40 = sext i32 %39 to i64, !dbg !18806
  br label %41, !dbg !18806

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !18806
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !18807
  %45 = add i64 %44, %42, !dbg !18807
  store i64 %45, i64* @curr_tick, align 8, !dbg !18807
  store i32 0, i32* @announce_remaining, align 4, !dbg !18808
  %46 = tail call fastcc i32 @next_timeout() #28, !dbg !18809
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #27, !dbg !18810
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18811
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18341, metadata !DIExpression()) #26, !dbg !18811
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18813
  br i1 %47, label %49, label %48, !dbg !18814

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.387, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.397, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 194) #27, !dbg !18815
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.398, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18815
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 194) #27, !dbg !18815
  unreachable, !dbg !18815

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !18756
  call void @llvm.dbg.value(metadata i32 %50, metadata !18336, metadata !DIExpression()) #26, !dbg !18811
  call void @llvm.dbg.value(metadata i32 %50, metadata !18350, metadata !DIExpression()) #26, !dbg !18816
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #26, !dbg !18818, !srcloc !18356
  ret void, !dbg !18819
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !18820 {
  call void @llvm.dbg.value(metadata i64 0, metadata !18824, metadata !DIExpression()), !dbg !18828
  call void @llvm.dbg.value(metadata i32 0, metadata !18825, metadata !DIExpression()), !dbg !18829
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18263, metadata !DIExpression()) #26, !dbg !18830
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18832, !srcloc !18278
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18834
  call void @llvm.dbg.value(metadata i32 undef, metadata !18276, metadata !DIExpression()) #26, !dbg !18834
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18830
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18835
  br i1 %2, label %4, label %3, !dbg !18836

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.387, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.391, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 148) #27, !dbg !18837
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18837
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 148) #27, !dbg !18837
  unreachable, !dbg !18837

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !18275, metadata !DIExpression()) #26, !dbg !18834
  call void @llvm.dbg.value(metadata i32 undef, metadata !18269, metadata !DIExpression()) #26, !dbg !18830
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18838
  call void @llvm.dbg.value(metadata i32 undef, metadata !18827, metadata !DIExpression()), !dbg !18829
  call void @llvm.dbg.value(metadata i64 0, metadata !18824, metadata !DIExpression()), !dbg !18828
  call void @llvm.dbg.value(metadata i32 undef, metadata !18825, metadata !DIExpression()), !dbg !18829
  %5 = load i64, i64* @curr_tick, align 8, !dbg !18839
  %6 = tail call fastcc i32 @elapsed.394() #28, !dbg !18842
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !18824, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !18828
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18843
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18341, metadata !DIExpression()) #26, !dbg !18843
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18845
  br i1 %7, label %9, label %8, !dbg !18846

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.387, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.397, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 194) #27, !dbg !18847
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.398, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18847
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.392, i32 0, i32 0), i32 noundef 194) #27, !dbg !18847
  unreachable, !dbg !18847

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !18832
  call void @llvm.dbg.value(metadata i32 %10, metadata !18275, metadata !DIExpression()) #26, !dbg !18834
  call void @llvm.dbg.value(metadata i32 %10, metadata !18269, metadata !DIExpression()) #26, !dbg !18830
  call void @llvm.dbg.value(metadata i32 %10, metadata !18827, metadata !DIExpression()), !dbg !18829
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !18824, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !18828
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !18824, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18828
  call void @llvm.dbg.value(metadata i32 undef, metadata !18336, metadata !DIExpression()) #26, !dbg !18843
  call void @llvm.dbg.value(metadata i32 undef, metadata !18350, metadata !DIExpression()) #26, !dbg !18848
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #26, !dbg !18850, !srcloc !18356
  call void @llvm.dbg.value(metadata i32 undef, metadata !18825, metadata !DIExpression()), !dbg !18829
  %11 = sext i32 %6 to i64, !dbg !18842
  %12 = add i64 %5, %11, !dbg !18851
  ret i64 %12, !dbg !18852
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !18853 {
  %1 = tail call i64 @sys_clock_tick_get() #28, !dbg !18854
  %2 = trunc i64 %1 to i32, !dbg !18855
  ret i32 %2, !dbg !18856
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !18857 {
  %1 = tail call i64 @sys_clock_tick_get() #28, !dbg !18858
  ret i64 %1, !dbg !18859
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !18860 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18862, metadata !DIExpression()), !dbg !18869
  %2 = icmp eq i32 %0, 0, !dbg !18870
  br i1 %2, label %10, label %3, !dbg !18872

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.414() #28, !dbg !18873
  call void @llvm.dbg.value(metadata i32 %4, metadata !18863, metadata !DIExpression()), !dbg !18869
  %5 = mul i32 %0, 84, !dbg !18874
  call void @llvm.dbg.value(metadata i32 %5, metadata !18864, metadata !DIExpression()), !dbg !18869
  br label %6, !dbg !18875

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.414() #28, !dbg !18876
  call void @llvm.dbg.value(metadata i32 %7, metadata !18865, metadata !DIExpression()), !dbg !18877
  %8 = sub i32 %7, %4, !dbg !18878
  %9 = icmp ult i32 %8, %5, !dbg !18880
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !18881
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.414() unnamed_addr #1 !dbg !18882 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.415() #28, !dbg !18883
  ret i32 %1, !dbg !18884
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.415() unnamed_addr #1 !dbg !18885 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !18886
  ret i32 %1, !dbg !18887
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !18888 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18892, metadata !DIExpression()), !dbg !18894
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !18895

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #28, !dbg !18896
  br label %14, !dbg !18900

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !18893, metadata !DIExpression()), !dbg !18894
  %6 = icmp slt i64 %2, -1, !dbg !18901
  br i1 %6, label %7, label %9, !dbg !18904

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18905
  br label %14, !dbg !18906

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #28, !dbg !18908
  %11 = icmp ugt i64 %2, 1, !dbg !18909
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18909
  %13 = add nsw i64 %10, %12, !dbg !18910
  br label %14, !dbg !18911

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18912
  ret i64 %15, !dbg !18913
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !18914 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.418, i32 0, i32 0)) #27, !dbg !18916
  ret void, !dbg !18917
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !18918 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !18920, metadata !DIExpression()), !dbg !18942
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !18921, metadata !DIExpression()), !dbg !18943
  br i1 icmp ugt (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %2, label %3, !dbg !18944

2:                                                ; preds = %7, %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.420, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.421, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.422, i32 0, i32 0), i32 noundef 24) #27, !dbg !18948
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5.423, i32 0, i32 0)) #27, !dbg !18948
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.422, i32 0, i32 0), i32 noundef 24) #27, !dbg !18948
  unreachable, !dbg !18948

3:                                                ; preds = %1, %7
  %4 = phi %struct.k_heap* [ %12, %7 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !18921, metadata !DIExpression()), !dbg !18943
  %5 = icmp ult %struct.k_heap* %4, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !18951
  br i1 %5, label %7, label %6, !dbg !18952

6:                                                ; preds = %3
  ret i32 0, !dbg !18953

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !18954
  %9 = load i8*, i8** %8, align 4, !dbg !18954
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !18957
  %11 = load i32, i32* %10, align 4, !dbg !18957
  tail call void @k_heap_init(%struct.k_heap* noundef %4, i8* noundef %9, i32 noundef %11) #28, !dbg !18958
  %12 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !18959
  call void @llvm.dbg.value(metadata %struct.k_heap* %12, metadata !18921, metadata !DIExpression()), !dbg !18943
  %13 = icmp ugt %struct.k_heap* %12, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !18960
  br i1 %13, label %2, label %3, !dbg !18944, !llvm.loop !18961
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !18963 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18967, metadata !DIExpression()), !dbg !18970
  call void @llvm.dbg.value(metadata i8* %1, metadata !18968, metadata !DIExpression()), !dbg !18970
  call void @llvm.dbg.value(metadata i32 %2, metadata !18969, metadata !DIExpression()), !dbg !18970
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18971
  tail call fastcc void @z_waitq_init.424(%union.anon* noundef nonnull %4) #28, !dbg !18972
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18973
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #27, !dbg !18974
  ret void, !dbg !18975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.424(%union.anon* noundef %0) unnamed_addr #12 !dbg !18976 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !18981, metadata !DIExpression()), !dbg !18982
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !18983
  tail call fastcc void @sys_dlist_init.425(%struct._dnode* noundef %2) #28, !dbg !18984
  ret void, !dbg !18985
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.425(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !18986 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18991, metadata !DIExpression()), !dbg !18992
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18993
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !18994
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18995
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !18996
  ret void, !dbg !18997
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !18998 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !19009, metadata !DIExpression()), !dbg !19019
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19006, metadata !DIExpression()), !dbg !19019
  call void @llvm.dbg.value(metadata i32 %1, metadata !19007, metadata !DIExpression()), !dbg !19019
  call void @llvm.dbg.value(metadata i32 %2, metadata !19008, metadata !DIExpression()), !dbg !19019
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #27, !dbg !19020
  call void @llvm.dbg.value(metadata i64 %6, metadata !19011, metadata !DIExpression()), !dbg !19019
  call void @llvm.dbg.value(metadata i8* null, metadata !19012, metadata !DIExpression()), !dbg !19019
  %7 = icmp eq i64 %5, -1, !dbg !19021
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !19021
  call void @llvm.dbg.value(metadata i64 %8, metadata !19011, metadata !DIExpression()), !dbg !19019
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !19022
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !19023, metadata !DIExpression()) #26, !dbg !19030
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19032, !srcloc !19038
  call void @llvm.dbg.value(metadata i32 undef, metadata !19035, metadata !DIExpression()) #26, !dbg !19039
  call void @llvm.dbg.value(metadata i32 undef, metadata !19036, metadata !DIExpression()) #26, !dbg !19039
  call void @llvm.dbg.value(metadata i32 undef, metadata !19029, metadata !DIExpression()) #26, !dbg !19030
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19040
  br i1 %11, label %13, label %12, !dbg !19043

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.420, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.426, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.427, i32 0, i32 0), i32 noundef 148) #27, !dbg !19044
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.428, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #27, !dbg !19044
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.427, i32 0, i32 0), i32 noundef 148) #27, !dbg !19044
  unreachable, !dbg !19044

13:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !19035, metadata !DIExpression()) #26, !dbg !19039
  call void @llvm.dbg.value(metadata i32 undef, metadata !19029, metadata !DIExpression()) #26, !dbg !19030
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19046
  call void @llvm.dbg.value(metadata i32 undef, metadata !19013, metadata !DIExpression()), !dbg !19019
  %14 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !19047, !srcloc !19056
  call void @llvm.dbg.value(metadata i32 %14, metadata !19050, metadata !DIExpression()) #26, !dbg !19057
  %15 = icmp eq i32 %14, 0, !dbg !19058
  %16 = icmp eq i64 %5, 0, !dbg !19059
  %17 = select i1 %15, i1 true, i1 %16, !dbg !19059
  br i1 %17, label %18, label %25, !dbg !19059

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !19012, metadata !DIExpression()), !dbg !19019
  call void @llvm.dbg.value(metadata i8 0, metadata !19018, metadata !DIExpression()), !dbg !19019
  call void @llvm.dbg.value(metadata i32 undef, metadata !19013, metadata !DIExpression()), !dbg !19019
  %20 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #27, !dbg !19060
  call void @llvm.dbg.value(metadata i8* %20, metadata !19012, metadata !DIExpression()), !dbg !19019
  %21 = tail call i64 @sys_clock_tick_get() #27, !dbg !19062
  call void @llvm.dbg.value(metadata i64 %21, metadata !19010, metadata !DIExpression()), !dbg !19019
  %22 = icmp eq i8* %20, null, !dbg !19063
  br i1 %22, label %23, label %43, !dbg !19065

23:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !19013, metadata !DIExpression()), !dbg !19019
  %24 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %26, !dbg !19065

25:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.420, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.429, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.422, i32 0, i32 0), i32 noundef 76) #27, !dbg !19066
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.430, i32 0, i32 0)) #27, !dbg !19066
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.422, i32 0, i32 0), i32 noundef 76) #27, !dbg !19066
  unreachable, !dbg !19066

26:                                               ; preds = %23, %39
  %27 = phi i64 [ %21, %23 ], [ %41, %39 ]
  %28 = phi { i32, i32 } [ %10, %23 ], [ %36, %39 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !19018, metadata !DIExpression()), !dbg !19019
  %29 = sub nsw i64 %8, %27, !dbg !19068
  %30 = icmp slt i64 %29, 1, !dbg !19069
  br i1 %30, label %43, label %31, !dbg !19070

31:                                               ; preds = %26
  %32 = extractvalue { i32, i32 } %28, 0, !dbg !19019
  call void @llvm.dbg.value(metadata i8 undef, metadata !19018, metadata !DIExpression()), !dbg !19019
  %33 = insertvalue [1 x i32] poison, i32 %32, 0, !dbg !19071
  %34 = insertvalue [1 x i64] poison, i64 %29, 0, !dbg !19071
  %35 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %33, %union.anon* noundef nonnull %24, [1 x i64] %34) #27, !dbg !19071
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !19023, metadata !DIExpression()) #26, !dbg !19072
  %36 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19074, !srcloc !19038
  call void @llvm.dbg.value(metadata i32 undef, metadata !19035, metadata !DIExpression()) #26, !dbg !19076
  call void @llvm.dbg.value(metadata i32 undef, metadata !19036, metadata !DIExpression()) #26, !dbg !19076
  call void @llvm.dbg.value(metadata i32 undef, metadata !19029, metadata !DIExpression()) #26, !dbg !19072
  %37 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19077
  br i1 %37, label %39, label %38, !dbg !19078

38:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.420, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.426, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.427, i32 0, i32 0), i32 noundef 148) #27, !dbg !19079
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.428, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #27, !dbg !19079
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.427, i32 0, i32 0), i32 noundef 148) #27, !dbg !19079
  unreachable, !dbg !19079

39:                                               ; preds = %31
  call void @llvm.dbg.value(metadata i8 undef, metadata !19018, metadata !DIExpression()), !dbg !19019
  call void @llvm.dbg.value(metadata i32 undef, metadata !19035, metadata !DIExpression()) #26, !dbg !19076
  call void @llvm.dbg.value(metadata i32 undef, metadata !19029, metadata !DIExpression()) #26, !dbg !19072
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19080
  call void @llvm.dbg.value(metadata i32 undef, metadata !19013, metadata !DIExpression()), !dbg !19019
  call void @llvm.dbg.value(metadata i8* null, metadata !19012, metadata !DIExpression()), !dbg !19019
  call void @llvm.dbg.value(metadata i32 undef, metadata !19013, metadata !DIExpression()), !dbg !19019
  %40 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #27, !dbg !19060
  call void @llvm.dbg.value(metadata i8* %40, metadata !19012, metadata !DIExpression()), !dbg !19019
  %41 = tail call i64 @sys_clock_tick_get() #27, !dbg !19062
  call void @llvm.dbg.value(metadata i64 %41, metadata !19010, metadata !DIExpression()), !dbg !19019
  %42 = icmp eq i8* %40, null, !dbg !19063
  br i1 %42, label %26, label %43, !dbg !19065, !llvm.loop !19081

43:                                               ; preds = %39, %26, %18
  %44 = phi { i32, i32 } [ %10, %18 ], [ %28, %26 ], [ %36, %39 ]
  %45 = phi i8* [ %20, %18 ], [ null, %26 ], [ %40, %39 ], !dbg !19060
  call void @llvm.dbg.value(metadata i8* %45, metadata !19012, metadata !DIExpression()), !dbg !19019
  call void @llvm.dbg.value(metadata i32 undef, metadata !19084, metadata !DIExpression()) #26, !dbg !19090
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !19089, metadata !DIExpression()) #26, !dbg !19090
  %46 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19092
  br i1 %46, label %48, label %47, !dbg !19095

47:                                               ; preds = %43
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.420, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.431, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.427, i32 0, i32 0), i32 noundef 194) #27, !dbg !19096
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.432, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #27, !dbg !19096
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.427, i32 0, i32 0), i32 noundef 194) #27, !dbg !19096
  unreachable, !dbg !19096

48:                                               ; preds = %43
  %49 = extractvalue { i32, i32 } %44, 0, !dbg !19019
  call void @llvm.dbg.value(metadata i32 %49, metadata !19084, metadata !DIExpression()) #26, !dbg !19090
  call void @llvm.dbg.value(metadata i32 %49, metadata !19098, metadata !DIExpression()) #26, !dbg !19101
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %49) #26, !dbg !19103, !srcloc !19104
  ret i8* %45, !dbg !19105
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !19106 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !19112, metadata !DIExpression()), !dbg !19114
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19110, metadata !DIExpression()), !dbg !19114
  call void @llvm.dbg.value(metadata i32 %1, metadata !19111, metadata !DIExpression()), !dbg !19114
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #28, !dbg !19115
  call void @llvm.dbg.value(metadata i8* %4, metadata !19113, metadata !DIExpression()), !dbg !19114
  ret i8* %4, !dbg !19116
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !19117 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19121, metadata !DIExpression()), !dbg !19124
  call void @llvm.dbg.value(metadata i8* %1, metadata !19122, metadata !DIExpression()), !dbg !19124
  %3 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !19125
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !19023, metadata !DIExpression()) #26, !dbg !19126
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19128, !srcloc !19038
  call void @llvm.dbg.value(metadata i32 undef, metadata !19035, metadata !DIExpression()) #26, !dbg !19130
  call void @llvm.dbg.value(metadata i32 undef, metadata !19036, metadata !DIExpression()) #26, !dbg !19130
  call void @llvm.dbg.value(metadata i32 undef, metadata !19029, metadata !DIExpression()) #26, !dbg !19126
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !19131
  br i1 %5, label %7, label %6, !dbg !19132

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.420, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.426, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.427, i32 0, i32 0), i32 noundef 148) #27, !dbg !19133
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.428, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #27, !dbg !19133
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.427, i32 0, i32 0), i32 noundef 148) #27, !dbg !19133
  unreachable, !dbg !19133

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !19128
  call void @llvm.dbg.value(metadata i32 %8, metadata !19035, metadata !DIExpression()) #26, !dbg !19130
  call void @llvm.dbg.value(metadata i32 %8, metadata !19029, metadata !DIExpression()) #26, !dbg !19126
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !19134
  call void @llvm.dbg.value(metadata i32 %8, metadata !19123, metadata !DIExpression()), !dbg !19124
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !19135
  tail call void @sys_heap_free(%struct.sys_heap* noundef %9, i8* noundef %1) #27, !dbg !19136
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !19137
  %11 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %10) #27, !dbg !19139
  %12 = icmp eq i32 %11, 0, !dbg !19140
  br i1 %12, label %15, label %13, !dbg !19141

13:                                               ; preds = %7
  %14 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !19142
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %14) #27, !dbg !19142
  br label %19, !dbg !19144

15:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !19084, metadata !DIExpression()) #26, !dbg !19145
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !19089, metadata !DIExpression()) #26, !dbg !19145
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !19148
  br i1 %16, label %18, label %17, !dbg !19149

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.420, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.431, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.427, i32 0, i32 0), i32 noundef 194) #27, !dbg !19150
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.432, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #27, !dbg !19150
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.427, i32 0, i32 0), i32 noundef 194) #27, !dbg !19150
  unreachable, !dbg !19150

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %8, metadata !19084, metadata !DIExpression()) #26, !dbg !19145
  call void @llvm.dbg.value(metadata i32 %8, metadata !19098, metadata !DIExpression()) #26, !dbg !19151
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #26, !dbg !19153, !srcloc !19104
  br label %19

19:                                               ; preds = %18, %13
  ret void, !dbg !19154
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nofree noinline nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { nofree nosync nounwind willreturn }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { argmemonly nofree nounwind willreturn writeonly }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #26 = { nounwind }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin optsize "no-builtins" }
attributes #29 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #30 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #31 = { nounwind readnone }
attributes #32 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!914, !2, !2589, !27, !354, !420, !442, !2591, !2593, !2626, !2660, !2662, !452, !503, !2664, !2667, !2678, !2724, !2726, !2754, !2782, !2825, !2896, !2941, !532, !674, !2969, !710, !720, !745, !950, !2974, !1086, !1152, !1458, !1722, !3013, !1837, !1927, !3015, !3101, !3166, !1977, !3169, !1984, !2355, !3187, !3189, !2375, !2400, !3295, !2517, !3298, !2558}
!llvm.ident = !{!3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300, !3300}
!llvm.module.flags = !{!3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 97, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5440, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 85)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2720, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "log_const_main", scope: !27, file: !120, line: 10, type: !346, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !117, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/metairq_dispatch/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !104, !105, !106, !107, !111, !113, !114, !116}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!103 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!105 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!106 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !108, line: 46, baseType: !109)
!108 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !110)
!110 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !112, line: 214, baseType: !32)
!112 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !115)
!115 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!116 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !105)
!117 = !{!25, !118, !271, !275, !282, !315, !320, !324, !326}
!118 = !DIGlobalVariableExpression(var: !119, expr: !DIExpression())
!119 = distinct !DIGlobalVariable(name: "_k_thread_data_metairq_thread", scope: !27, file: !120, line: 28, type: !121, isLocal: false, isDefinition: true, align: 32)
!120 = !DIFile(filename: "zephyr/samples/kernel/metairq_dispatch/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !122, line: 620, size: 384, elements: !123)
!122 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!123 = !{!124, !244, !252, !253, !258, !259, !260, !261, !262, !263, !264, !268}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !121, file: !122, line: 621, baseType: !125, size: 32)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 32)
!126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !128)
!127 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = !{!129, !198, !211, !212, !213, !214, !220, !239}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !126, file: !127, line: 247, baseType: !130, size: 384)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !131)
!131 = !{!132, !160, !168, !171, !172, !185, !186, !187}
!132 = !DIDerivedType(tag: DW_TAG_member, scope: !130, file: !127, line: 60, baseType: !133, size: 64)
!133 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !130, file: !127, line: 60, size: 64, elements: !134)
!134 = !{!135, !151}
!135 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !133, file: !127, line: 61, baseType: !136, size: 64)
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !138)
!137 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !139)
!139 = !{!140, !146}
!140 = !DIDerivedType(tag: DW_TAG_member, scope: !138, file: !137, line: 38, baseType: !141, size: 32)
!141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !138, file: !137, line: 38, size: 32, elements: !142)
!142 = !{!143, !145}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !141, file: !137, line: 39, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !141, file: !137, line: 40, baseType: !144, size: 32)
!146 = !DIDerivedType(tag: DW_TAG_member, scope: !138, file: !137, line: 42, baseType: !147, size: 32, offset: 32)
!147 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !138, file: !137, line: 42, size: 32, elements: !148)
!148 = !{!149, !150}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !147, file: !137, line: 43, baseType: !144, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !147, file: !137, line: 44, baseType: !144, size: 32)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !133, file: !127, line: 62, baseType: !152, size: 64)
!152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !154)
!153 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!154 = !{!155}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !152, file: !153, line: 50, baseType: !156, size: 64)
!156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 64, elements: !158)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!158 = !{!159}
!159 = !DISubrange(count: 2)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !130, file: !127, line: 68, baseType: !161, size: 32, offset: 64)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !164)
!163 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!164 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !165)
!165 = !{!166}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !164, file: !163, line: 232, baseType: !167, size: 64)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !138)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !130, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !170)
!170 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !130, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!172 = !DIDerivedType(tag: DW_TAG_member, scope: !130, file: !127, line: 90, baseType: !173, size: 16, offset: 112)
!173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !130, file: !127, line: 90, size: 16, elements: !174)
!174 = !{!175, !182}
!175 = !DIDerivedType(tag: DW_TAG_member, scope: !173, file: !127, line: 91, baseType: !176, size: 16)
!176 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !173, file: !127, line: 91, size: 16, elements: !177)
!177 = !{!178, !181}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !176, file: !127, line: 96, baseType: !179, size: 8)
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !180)
!180 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !176, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !173, file: !127, line: 100, baseType: !183, size: 16)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !184)
!184 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !130, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !130, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !130, file: !127, line: 131, baseType: !188, size: 192, offset: 192)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !189)
!189 = !{!190, !191, !197}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !188, file: !163, line: 245, baseType: !136, size: 64)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !188, file: !163, line: 246, baseType: !192, size: 32, offset: 64)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !193)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!194 = !DISubroutineType(types: !195)
!195 = !{null, !196}
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !188, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !126, file: !127, line: 250, baseType: !199, size: 288, offset: 384)
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !201)
!200 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!201 = !{!202, !203, !204, !205, !206, !207, !208, !209, !210}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !199, file: !200, line: 26, baseType: !113, size: 32)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !199, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !199, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !199, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !199, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !199, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !199, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !199, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !199, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !126, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !126, file: !127, line: 256, baseType: !162, size: 64, offset: 704)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !126, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !126, file: !127, line: 300, baseType: !215, size: 96, offset: 800)
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !216)
!216 = !{!217, !218, !219}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !215, file: !127, line: 153, baseType: !22, size: 32)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !215, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !215, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !126, file: !127, line: 325, baseType: !221, size: 32, offset: 896)
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !223)
!223 = !{!224, !233, !234}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !222, file: !122, line: 5074, baseType: !225, size: 96)
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !227)
!226 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!227 = !{!228, !231, !232}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !225, file: !226, line: 57, baseType: !229, size: 32)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 32)
!230 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !226, line: 57, flags: DIFlagFwdDecl)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !225, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !225, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !222, file: !122, line: 5075, baseType: !162, size: 64, offset: 96)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !222, file: !122, line: 5076, baseType: !235, size: 32, offset: 160)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !237)
!236 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!237 = !{!238}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !235, file: !236, line: 52, baseType: !22, size: 32)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !126, file: !127, line: 343, baseType: !240, size: 64, offset: 928)
!240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !241)
!241 = !{!242, !243}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !240, file: !200, line: 63, baseType: !113, size: 32)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !240, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !121, file: !122, line: 622, baseType: !245, size: 32, offset: 32)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !250)
!249 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!250 = !{!251}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !248, file: !249, line: 48, baseType: !103, size: 8)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !121, file: !122, line: 623, baseType: !32, size: 32, offset: 64)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !121, file: !122, line: 624, baseType: !254, size: 32, offset: 96)
!254 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !247, line: 46, baseType: !255)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 32)
!256 = !DISubroutineType(types: !257)
!257 = !{null, !104, !104, !104}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !121, file: !122, line: 625, baseType: !104, size: 32, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !121, file: !122, line: 626, baseType: !104, size: 32, offset: 160)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !121, file: !122, line: 627, baseType: !104, size: 32, offset: 192)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !121, file: !122, line: 628, baseType: !105, size: 32, offset: 224)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !121, file: !122, line: 629, baseType: !113, size: 32, offset: 256)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !121, file: !122, line: 630, baseType: !116, size: 32, offset: 288)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !121, file: !122, line: 631, baseType: !265, size: 32, offset: 320)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 32)
!266 = !DISubroutineType(types: !267)
!267 = !{null}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !121, file: !122, line: 632, baseType: !269, size: 32, offset: 352)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!271 = !DIGlobalVariableExpression(var: !272, expr: !DIExpression())
!272 = distinct !DIGlobalVariable(name: "metairq_thread", scope: !27, file: !120, line: 28, type: !273, isLocal: false, isDefinition: true)
!273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !274)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !125)
!275 = !DIGlobalVariableExpression(var: !276, expr: !DIExpression())
!276 = distinct !DIGlobalVariable(name: "report_cookie", scope: !27, file: !120, line: 46, type: !277, isLocal: false, isDefinition: true, align: 32)
!277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !122, line: 2909, size: 128, elements: !278)
!278 = !{!279, !280, !281}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !277, file: !122, line: 2910, baseType: !162, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !277, file: !122, line: 2911, baseType: !32, size: 32, offset: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !277, file: !122, line: 2912, baseType: !32, size: 32, offset: 96)
!282 = !DIGlobalVariableExpression(var: !283, expr: !DIExpression())
!283 = distinct !DIGlobalVariable(name: "threads", scope: !27, file: !120, line: 22, type: !284, isLocal: true, isDefinition: true)
!284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 15872, elements: !313)
!285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_rec", file: !120, line: 18, size: 3968, elements: !286)
!286 = !{!287, !288, !301}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !285, file: !120, line: 19, baseType: !126, size: 1024)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "msgq", scope: !285, file: !120, line: 20, baseType: !289, size: 352, offset: 1024)
!289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !122, line: 4204, size: 352, elements: !290)
!290 = !{!291, !292, !293, !294, !295, !296, !297, !298, !299, !300}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !289, file: !122, line: 4206, baseType: !162, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !289, file: !122, line: 4208, baseType: !235, size: 32, offset: 64)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !289, file: !122, line: 4210, baseType: !111, size: 32, offset: 96)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !289, file: !122, line: 4212, baseType: !113, size: 32, offset: 128)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !289, file: !122, line: 4214, baseType: !102, size: 32, offset: 160)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !289, file: !122, line: 4216, baseType: !102, size: 32, offset: 192)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !289, file: !122, line: 4218, baseType: !102, size: 32, offset: 224)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !289, file: !122, line: 4220, baseType: !102, size: 32, offset: 256)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !289, file: !122, line: 4222, baseType: !113, size: 32, offset: 288)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !289, file: !122, line: 4227, baseType: !169, size: 8, offset: 320)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "msgq_buf", scope: !285, file: !120, line: 21, baseType: !302, size: 2560, offset: 1376)
!302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !303, size: 2560, elements: !311)
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msg", file: !304, line: 44, size: 160, elements: !305)
!304 = !DIFile(filename: "zephyr/samples/kernel/metairq_dispatch/src/msgdev.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!305 = !{!306, !307, !308, !309, !310}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !303, file: !304, line: 46, baseType: !113, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !303, file: !304, line: 49, baseType: !113, size: 32, offset: 32)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !303, file: !304, line: 52, baseType: !113, size: 32, offset: 64)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "proc_cyc", scope: !303, file: !304, line: 55, baseType: !113, size: 32, offset: 96)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "metairq_latency", scope: !303, file: !304, line: 58, baseType: !113, size: 32, offset: 128)
!311 = !{!312}
!312 = !DISubrange(count: 16)
!313 = !{!314}
!314 = !DISubrange(count: 4)
!315 = !DIGlobalVariableExpression(var: !316, expr: !DIExpression())
!316 = distinct !DIGlobalVariable(name: "thread_stacks", scope: !27, file: !120, line: 24, type: !317, isLocal: false, isDefinition: true, align: 512)
!317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 67584, elements: !318)
!318 = !{!314, !319}
!319 = !DISubrange(count: 2112)
!320 = !DIGlobalVariableExpression(var: !321, expr: !DIExpression())
!321 = distinct !DIGlobalVariable(name: "_k_thread_stack_metairq_thread", scope: !27, file: !120, line: 28, type: !322, isLocal: false, isDefinition: true, align: 512)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 16896, elements: !323)
!323 = !{!319}
!324 = !DIGlobalVariableExpression(var: !325, expr: !DIExpression())
!325 = distinct !DIGlobalVariable(name: "_k_thread_obj_metairq_thread", scope: !27, file: !120, line: 28, type: !126, isLocal: false, isDefinition: true)
!326 = !DIGlobalVariableExpression(var: !327, expr: !DIExpression())
!327 = distinct !DIGlobalVariable(name: "stats", scope: !27, file: !120, line: 41, type: !328, isLocal: false, isDefinition: true)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !120, line: 34, size: 4000, elements: !329)
!329 = !{!330, !333, !337}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "num_mirq", scope: !328, file: !120, line: 35, baseType: !331, size: 32)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !332, line: 22, baseType: !106)
!332 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!333 = !DIDerivedType(tag: DW_TAG_member, name: "mirq_latencies", scope: !328, file: !120, line: 36, baseType: !334, size: 1280, offset: 32)
!334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1280, elements: !335)
!335 = !{!336}
!336 = !DISubrange(count: 40)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !328, file: !120, line: 40, baseType: !338, size: 2688, offset: 1312)
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 2688, elements: !313)
!339 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !328, file: !120, line: 37, size: 672, elements: !340)
!340 = !{!341, !342}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "nevt", scope: !339, file: !120, line: 38, baseType: !113, size: 32)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "latencies", scope: !339, file: !120, line: 39, baseType: !343, size: 640, offset: 32)
!343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 640, elements: !344)
!344 = !{!345}
!345 = !DISubrange(count: 20)
!346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !349)
!348 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!349 = !{!350, !351}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !347, file: !348, line: 17, baseType: !269, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !347, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!352 = !DIGlobalVariableExpression(var: !353, expr: !DIExpression())
!353 = distinct !DIGlobalVariable(name: "hw_msgs", scope: !354, file: !360, line: 27, type: !398, isLocal: false, isDefinition: true, align: 32)
!354 = distinct !DICompileUnit(language: DW_LANG_C99, file: !355, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !356, globals: !357, splitDebugInlining: false, nameTableKind: None)
!355 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/metairq_dispatch/src/msgdev.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!356 = !{!107, !104, !105, !113, !114}
!357 = !{!352, !358, !385, !387, !389, !392}
!358 = !DIGlobalVariableExpression(var: !359, expr: !DIExpression())
!359 = distinct !DIGlobalVariable(name: "timeout", scope: !354, file: !360, line: 17, type: !361, isLocal: true, isDefinition: true)
!360 = !DIFile(filename: "zephyr/samples/kernel/metairq_dispatch/src/msgdev.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !362)
!362 = !{!363, !378, !384}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !361, file: !163, line: 245, baseType: !364, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !365)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !366)
!366 = !{!367, !373}
!367 = !DIDerivedType(tag: DW_TAG_member, scope: !365, file: !137, line: 38, baseType: !368, size: 32)
!368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !365, file: !137, line: 38, size: 32, elements: !369)
!369 = !{!370, !372}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !368, file: !137, line: 39, baseType: !371, size: 32)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !368, file: !137, line: 40, baseType: !371, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, scope: !365, file: !137, line: 42, baseType: !374, size: 32, offset: 32)
!374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !365, file: !137, line: 42, size: 32, elements: !375)
!375 = !{!376, !377}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !374, file: !137, line: 43, baseType: !371, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !374, file: !137, line: 44, baseType: !371, size: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !361, file: !163, line: 246, baseType: !379, size: 32, offset: 64)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !380)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 32)
!381 = !DISubroutineType(types: !382)
!382 = !{null, !383}
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 32)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !361, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "max_duty_cyc", scope: !354, file: !360, line: 23, type: !113, isLocal: false, isDefinition: true)
!387 = !DIGlobalVariableExpression(var: !388, expr: !DIExpression())
!388 = distinct !DIGlobalVariable(name: "msg_seq", scope: !354, file: !360, line: 25, type: !113, isLocal: false, isDefinition: true)
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "_k_fifo_buf_hw_msgs", scope: !354, file: !360, line: 27, type: !391, isLocal: true, isDefinition: true, align: 32)
!391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 320, elements: !335)
!392 = !DIGlobalVariableExpression(var: !393, expr: !DIExpression())
!393 = distinct !DIGlobalVariable(name: "state", scope: !394, file: !360, line: 38, type: !114, isLocal: true, isDefinition: true)
!394 = distinct !DISubprogram(name: "rand32", scope: !360, file: !360, line: 36, type: !395, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !397)
!395 = !DISubroutineType(types: !396)
!396 = !{!113}
!397 = !{}
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !122, line: 4204, size: 352, elements: !399)
!399 = !{!400, !406, !410, !411, !412, !413, !414, !415, !416, !417}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !398, file: !122, line: 4206, baseType: !401, size: 64)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !402)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !403)
!403 = !{!404}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !402, file: !163, line: 232, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !365)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !398, file: !122, line: 4208, baseType: !407, size: 32, offset: 64)
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !408)
!408 = !{!409}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !407, file: !236, line: 52, baseType: !22, size: 32)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !398, file: !122, line: 4210, baseType: !111, size: 32, offset: 96)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !398, file: !122, line: 4212, baseType: !113, size: 32, offset: 128)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !398, file: !122, line: 4214, baseType: !102, size: 32, offset: 160)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !398, file: !122, line: 4216, baseType: !102, size: 32, offset: 192)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !398, file: !122, line: 4218, baseType: !102, size: 32, offset: 224)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !398, file: !122, line: 4220, baseType: !102, size: 32, offset: 256)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !398, file: !122, line: 4222, baseType: !113, size: 32, offset: 288)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !398, file: !122, line: 4227, baseType: !169, size: 8, offset: 320)
!418 = !DIGlobalVariableExpression(var: !419, expr: !DIExpression())
!419 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !420, file: !434, line: 18, type: !435, isLocal: false, isDefinition: true)
!420 = distinct !DICompileUnit(language: DW_LANG_C99, file: !421, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !422, globals: !433, splitDebugInlining: false, nameTableKind: None)
!421 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!422 = !{!22, !104, !24, !423, !425, !427, !111, !105, !428, !429, !430, !431, !102, !432, !183, !269}
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 32)
!424 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 32)
!426 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 32)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 32)
!433 = !{!418}
!434 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !436)
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !437)
!437 = !{!438, !439}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !436, file: !348, line: 17, baseType: !269, size: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !436, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!440 = !DIGlobalVariableExpression(var: !441, expr: !DIExpression())
!441 = distinct !DIGlobalVariable(name: "_char_out", scope: !442, file: !446, line: 54, type: !447, isLocal: false, isDefinition: true)
!442 = distinct !DICompileUnit(language: DW_LANG_C99, file: !443, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, globals: !445, splitDebugInlining: false, nameTableKind: None)
!443 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!444 = !{!104, !105}
!445 = !{!440}
!446 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 32)
!448 = !DISubroutineType(types: !449)
!449 = !{!105, !105}
!450 = !DIGlobalVariableExpression(var: !451, expr: !DIExpression())
!451 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !452, file: !469, line: 56, type: !470, isLocal: true, isDefinition: true, align: 32)
!452 = distinct !DICompileUnit(language: DW_LANG_C99, file: !453, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !454, globals: !468, splitDebugInlining: false, nameTableKind: None)
!453 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!454 = !{!455}
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !457, line: 258, baseType: !458)
!457 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f401xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 249, size: 224, elements: !459)
!459 = !{!460, !462, !463, !464, !465, !466, !467}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !458, file: !457, line: 251, baseType: !461, size: 32)
!461 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !113)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !458, file: !457, line: 252, baseType: !461, size: 32, offset: 32)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !458, file: !457, line: 253, baseType: !461, size: 32, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !458, file: !457, line: 254, baseType: !461, size: 32, offset: 96)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !458, file: !457, line: 255, baseType: !461, size: 32, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !458, file: !457, line: 256, baseType: !461, size: 32, offset: 160)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !458, file: !457, line: 257, baseType: !461, size: 32, offset: 192)
!468 = !{!450}
!469 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !471)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !473)
!472 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!473 = !{!474, !500}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !471, file: !472, line: 60, baseType: !475, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 32)
!476 = !DISubroutineType(types: !477)
!477 = !{!105, !478}
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !480)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !482)
!481 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!482 = !{!483, !484, !485, !486, !493, !494}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !480, file: !481, line: 380, baseType: !269, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !480, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !480, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !480, file: !481, line: 386, baseType: !487, size: 32, offset: 96)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 32)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !489)
!489 = !{!490, !491}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !488, file: !481, line: 359, baseType: !169, size: 8)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !488, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!492 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !480, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !480, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 32)
!496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !497)
!497 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !481, line: 43, baseType: !498)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !499)
!499 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !471, file: !472, line: 65, baseType: !478, size: 32, offset: 32)
!501 = !DIGlobalVariableExpression(var: !502, expr: !DIExpression())
!502 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !503, file: !506, line: 71, type: !507, isLocal: true, isDefinition: true, align: 32)
!503 = distinct !DICompileUnit(language: DW_LANG_C99, file: !504, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !505, splitDebugInlining: false, nameTableKind: None)
!504 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!505 = !{!501}
!506 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !508)
!508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !509)
!509 = !{!510, !529}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !508, file: !472, line: 60, baseType: !511, size: 32)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 32)
!512 = !DISubroutineType(types: !513)
!513 = !{!105, !514}
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 32)
!515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !516)
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !517)
!517 = !{!518, !519, !520, !521, !527, !528}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !516, file: !481, line: 380, baseType: !269, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !516, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !516, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !516, file: !481, line: 386, baseType: !522, size: 32, offset: 96)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 32)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !524)
!524 = !{!525, !526}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !523, file: !481, line: 359, baseType: !169, size: 8)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !523, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !516, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !516, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !508, file: !472, line: 65, baseType: !514, size: 32, offset: 32)
!530 = !DIGlobalVariableExpression(var: !531, expr: !DIExpression())
!531 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !532, file: !539, line: 17, type: !667, isLocal: false, isDefinition: true)
!532 = distinct !DICompileUnit(language: DW_LANG_C99, file: !533, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !534, globals: !535, splitDebugInlining: false, nameTableKind: None)
!533 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!534 = !{!111, !105, !113, !104}
!535 = !{!530, !536, !663}
!536 = !DIGlobalVariableExpression(var: !537, expr: !DIExpression())
!537 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !538, file: !539, line: 198, type: !649, isLocal: true, isDefinition: true)
!538 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !539, file: !539, line: 175, type: !540, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !532, retainedNodes: !644)
!539 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!540 = !DISubroutineType(types: !541)
!541 = !{null, !542}
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 32)
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !544)
!544 = !{!545, !603, !615, !616, !617, !618, !624, !639}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !543, file: !127, line: 247, baseType: !546, size: 384)
!546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !547)
!547 = !{!548, !572, !579, !580, !581, !590, !591, !592}
!548 = !DIDerivedType(tag: DW_TAG_member, scope: !546, file: !127, line: 60, baseType: !549, size: 64)
!549 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !546, file: !127, line: 60, size: 64, elements: !550)
!550 = !{!551, !566}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !549, file: !127, line: 61, baseType: !552, size: 64)
!552 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !553)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !554)
!554 = !{!555, !561}
!555 = !DIDerivedType(tag: DW_TAG_member, scope: !553, file: !137, line: 38, baseType: !556, size: 32)
!556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !553, file: !137, line: 38, size: 32, elements: !557)
!557 = !{!558, !560}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !556, file: !137, line: 39, baseType: !559, size: 32)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 32)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !556, file: !137, line: 40, baseType: !559, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_member, scope: !553, file: !137, line: 42, baseType: !562, size: 32, offset: 32)
!562 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !553, file: !137, line: 42, size: 32, elements: !563)
!563 = !{!564, !565}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !562, file: !137, line: 43, baseType: !559, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !562, file: !137, line: 44, baseType: !559, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !549, file: !127, line: 62, baseType: !567, size: 64)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !568)
!568 = !{!569}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !567, file: !153, line: 50, baseType: !570, size: 64)
!570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !571, size: 64, elements: !158)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !546, file: !127, line: 68, baseType: !573, size: 32, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 32)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !575)
!575 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !576)
!576 = !{!577}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !575, file: !163, line: 232, baseType: !578, size: 64)
!578 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !553)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !546, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !546, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!581 = !DIDerivedType(tag: DW_TAG_member, scope: !546, file: !127, line: 90, baseType: !582, size: 16, offset: 112)
!582 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !546, file: !127, line: 90, size: 16, elements: !583)
!583 = !{!584, !589}
!584 = !DIDerivedType(tag: DW_TAG_member, scope: !582, file: !127, line: 91, baseType: !585, size: 16)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !582, file: !127, line: 91, size: 16, elements: !586)
!586 = !{!587, !588}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !585, file: !127, line: 96, baseType: !179, size: 8)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !585, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !582, file: !127, line: 100, baseType: !183, size: 16)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !546, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !546, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !546, file: !127, line: 131, baseType: !593, size: 192, offset: 192)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !594)
!594 = !{!595, !596, !602}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !593, file: !163, line: 245, baseType: !552, size: 64)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !593, file: !163, line: 246, baseType: !597, size: 32, offset: 64)
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !598)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 32)
!599 = !DISubroutineType(types: !600)
!600 = !{null, !601}
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !593, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !543, file: !127, line: 250, baseType: !604, size: 288, offset: 384)
!604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !605)
!605 = !{!606, !607, !608, !609, !610, !611, !612, !613, !614}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !604, file: !200, line: 26, baseType: !113, size: 32)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !604, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !604, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !604, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !604, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !604, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !604, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !604, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !604, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !543, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !543, file: !127, line: 256, baseType: !574, size: 64, offset: 704)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !543, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !543, file: !127, line: 300, baseType: !619, size: 96, offset: 800)
!619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !620)
!620 = !{!621, !622, !623}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !619, file: !127, line: 153, baseType: !22, size: 32)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !619, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !619, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !543, file: !127, line: 325, baseType: !625, size: 32, offset: 896)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 32)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !627)
!627 = !{!628, !634, !635}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !626, file: !122, line: 5074, baseType: !629, size: 96)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !630)
!630 = !{!631, !632, !633}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !629, file: !226, line: 57, baseType: !229, size: 32)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !629, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !629, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !626, file: !122, line: 5075, baseType: !574, size: 64, offset: 96)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !626, file: !122, line: 5076, baseType: !636, size: 32, offset: 160)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !637)
!637 = !{!638}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !636, file: !236, line: 52, baseType: !22, size: 32)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !543, file: !127, line: 343, baseType: !640, size: 64, offset: 928)
!640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !641)
!641 = !{!642, !643}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !640, file: !200, line: 63, baseType: !113, size: 32)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !640, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!644 = !{!645, !646, !647, !648}
!645 = !DILocalVariable(name: "thread", arg: 1, scope: !538, file: !539, line: 175, type: !542)
!646 = !DILocalVariable(name: "region_num", scope: !538, file: !539, line: 200, type: !169)
!647 = !DILocalVariable(name: "guard_start", scope: !538, file: !539, line: 265, type: !22)
!648 = !DILocalVariable(name: "guard_size", scope: !538, file: !539, line: 266, type: !111)
!649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !650, size: 96, elements: !661)
!650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !651, line: 52, size: 96, elements: !652)
!651 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!652 = !{!653, !654, !655}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !650, file: !651, line: 53, baseType: !22, size: 32)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !650, file: !651, line: 54, baseType: !111, size: 32, offset: 32)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !650, file: !651, line: 55, baseType: !656, size: 32, offset: 64)
!656 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !657, line: 151, baseType: !658)
!657 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !657, line: 149, size: 32, elements: !659)
!659 = !{!660}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !658, file: !657, line: 150, baseType: !113, size: 32)
!661 = !{!662}
!662 = !DISubrange(count: 1)
!663 = !DIGlobalVariableExpression(var: !664, expr: !DIExpression())
!664 = distinct !DIGlobalVariable(name: "static_regions", scope: !532, file: !539, line: 62, type: !665, isLocal: true, isDefinition: true)
!665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !666, size: 96, elements: !661)
!666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !650)
!667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !668)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !669)
!669 = !{!670, !671}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !668, file: !348, line: 17, baseType: !269, size: 32)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !668, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!672 = !DIGlobalVariableExpression(var: !673, expr: !DIExpression())
!673 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !674, file: !707, line: 39, type: !169, isLocal: true, isDefinition: true)
!674 = distinct !DICompileUnit(language: DW_LANG_C99, file: !675, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !676, globals: !706, splitDebugInlining: false, nameTableKind: None)
!675 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!676 = !{!677, !104, !105, !694, !169}
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 32)
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !679, line: 1226, baseType: !680)
!679 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 1213, size: 352, elements: !681)
!681 = !{!682, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !680, file: !679, line: 1215, baseType: !683, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !461)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !680, file: !679, line: 1216, baseType: !461, size: 32, offset: 32)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !680, file: !679, line: 1217, baseType: !461, size: 32, offset: 64)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !680, file: !679, line: 1218, baseType: !461, size: 32, offset: 96)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !680, file: !679, line: 1219, baseType: !461, size: 32, offset: 128)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !680, file: !679, line: 1220, baseType: !461, size: 32, offset: 160)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !680, file: !679, line: 1221, baseType: !461, size: 32, offset: 192)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !680, file: !679, line: 1222, baseType: !461, size: 32, offset: 224)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !680, file: !679, line: 1223, baseType: !461, size: 32, offset: 256)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !680, file: !679, line: 1224, baseType: !461, size: 32, offset: 288)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !680, file: !679, line: 1225, baseType: !461, size: 32, offset: 320)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 32)
!695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !696)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !697, line: 27, size: 96, elements: !698)
!697 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!698 = !{!699, !700, !701}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !696, file: !697, line: 29, baseType: !113, size: 32)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !696, file: !697, line: 31, baseType: !269, size: 32, offset: 32)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !696, file: !697, line: 37, baseType: !702, size: 32, offset: 64)
!702 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !657, line: 146, baseType: !703)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !657, line: 141, size: 32, elements: !704)
!704 = !{!705}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !703, file: !657, line: 143, baseType: !113, size: 32)
!706 = !{!672}
!707 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!708 = !DIGlobalVariableExpression(var: !709, expr: !DIExpression())
!709 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !710, file: !717, line: 21, type: !447, isLocal: true, isDefinition: true)
!710 = distinct !DICompileUnit(language: DW_LANG_C99, file: !711, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !712, globals: !716, splitDebugInlining: false, nameTableKind: None)
!711 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!712 = !{!713, !105, !104}
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 32)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !715, line: 22, baseType: !105)
!715 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!716 = !{!708}
!717 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!718 = !DIGlobalVariableExpression(var: !719, expr: !DIExpression())
!719 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !720, file: !725, line: 13, type: !742, isLocal: true, isDefinition: true)
!720 = distinct !DICompileUnit(language: DW_LANG_C99, file: !721, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !722, splitDebugInlining: false, nameTableKind: None)
!721 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!722 = !{!723, !718}
!723 = !DIGlobalVariableExpression(var: !724, expr: !DIExpression())
!724 = distinct !DIGlobalVariable(name: "mpu_config", scope: !720, file: !725, line: 37, type: !726, isLocal: false, isDefinition: true)
!725 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !727)
!727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !697, line: 41, size: 64, elements: !728)
!728 = !{!729, !730}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !727, file: !697, line: 43, baseType: !113, size: 32)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !727, file: !697, line: 45, baseType: !731, size: 32, offset: 32)
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 32)
!732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !733)
!733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !697, line: 27, size: 96, elements: !734)
!734 = !{!735, !736, !737}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !733, file: !697, line: 29, baseType: !113, size: 32)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !733, file: !697, line: 31, baseType: !269, size: 32, offset: 32)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !733, file: !697, line: 37, baseType: !738, size: 32, offset: 64)
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !657, line: 146, baseType: !739)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !657, line: 141, size: 32, elements: !740)
!740 = !{!741}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !739, file: !657, line: 143, baseType: !113, size: 32)
!742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !732, size: 192, elements: !158)
!743 = !DIGlobalVariableExpression(var: !744, expr: !DIExpression())
!744 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !745, file: !828, line: 72, type: !909, isLocal: true, isDefinition: true)
!745 = distinct !DICompileUnit(language: DW_LANG_C99, file: !746, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !747, retainedTypes: !814, globals: !825, splitDebugInlining: false, nameTableKind: None)
!746 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!747 = !{!30, !748}
!748 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !457, line: 65, baseType: !105, size: 32, elements: !749)
!749 = !{!750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813}
!750 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!751 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!752 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!753 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!754 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!755 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!756 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!757 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!758 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!759 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!760 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!761 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!762 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!763 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!764 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!765 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!766 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!767 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!768 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!769 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!770 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!771 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!772 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!773 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!774 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!775 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!776 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!777 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!778 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!779 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!780 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!781 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!782 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!783 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!784 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!785 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!786 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!787 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!788 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!789 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!790 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!791 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!792 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!793 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!794 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!795 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!796 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!797 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!798 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!799 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!800 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!801 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!802 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!803 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!804 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!805 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!806 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!807 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!808 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!809 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!810 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!811 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!812 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!813 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!814 = !{!111, !105, !104, !815}
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !457, line: 243, baseType: !817)
!817 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 235, size: 192, elements: !818)
!818 = !{!819, !820, !821, !822, !823, !824}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !817, file: !457, line: 237, baseType: !461, size: 32)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !817, file: !457, line: 238, baseType: !461, size: 32, offset: 32)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !817, file: !457, line: 239, baseType: !461, size: 32, offset: 64)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !817, file: !457, line: 240, baseType: !461, size: 32, offset: 96)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !817, file: !457, line: 241, baseType: !461, size: 32, offset: 128)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !817, file: !457, line: 242, baseType: !461, size: 32, offset: 160)
!825 = !{!826, !830, !846, !857, !874, !743, !876, !889, !891, !893, !895, !897, !899, !901, !903, !905, !907}
!826 = !DIGlobalVariableExpression(var: !827, expr: !DIExpression())
!827 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !745, file: !828, line: 424, type: !829, isLocal: false, isDefinition: true, align: 16)
!828 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 64, elements: !313)
!830 = !DIGlobalVariableExpression(var: !831, expr: !DIExpression())
!831 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !745, file: !828, line: 424, type: !832, isLocal: false, isDefinition: true, align: 32)
!832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !833)
!833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !834)
!834 = !{!835, !836, !837, !838, !844, !845}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !833, file: !481, line: 380, baseType: !269, size: 32)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !833, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !833, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !833, file: !481, line: 386, baseType: !839, size: 32, offset: 96)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 32)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !841)
!841 = !{!842, !843}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !840, file: !481, line: 359, baseType: !169, size: 8)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !840, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !833, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !833, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!846 = !DIGlobalVariableExpression(var: !847, expr: !DIExpression())
!847 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !745, file: !828, line: 424, type: !848, isLocal: true, isDefinition: true, align: 32)
!848 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !849)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !850)
!850 = !{!851, !856}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !849, file: !472, line: 60, baseType: !852, size: 32)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 32)
!853 = !DISubroutineType(types: !854)
!854 = !{!105, !855}
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 32)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !849, file: !472, line: 65, baseType: !855, size: 32, offset: 32)
!857 = !DIGlobalVariableExpression(var: !858, expr: !DIExpression())
!858 = distinct !DIGlobalVariable(name: "exti_data", scope: !745, file: !828, line: 423, type: !859, isLocal: true, isDefinition: true)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !828, line: 107, size: 1472, elements: !860)
!860 = !{!861}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !859, file: !828, line: 109, baseType: !862, size: 1472)
!862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !863, size: 1472, elements: !872)
!863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !828, line: 101, size: 64, elements: !864)
!864 = !{!865, !871}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !863, file: !828, line: 102, baseType: !866, size: 32)
!866 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !867, line: 63, baseType: !868)
!867 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 32)
!869 = !DISubroutineType(types: !870)
!870 = !{null, !105, !104}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !863, file: !828, line: 103, baseType: !104, size: 32, offset: 32)
!872 = !{!873}
!873 = !DISubrange(count: 23)
!874 = !DIGlobalVariableExpression(var: !875, expr: !DIExpression())
!875 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !745, file: !828, line: 424, type: !840, isLocal: true, isDefinition: true, align: 8)
!876 = !DIGlobalVariableExpression(var: !877, expr: !DIExpression())
!877 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !878, file: !828, line: 493, type: !883, isLocal: true, isDefinition: true, align: 32)
!878 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !828, file: !828, line: 460, type: !879, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !881)
!879 = !DISubroutineType(types: !880)
!880 = !{null, !855}
!881 = !{!882}
!882 = !DILocalVariable(name: "dev", arg: 1, scope: !878, file: !828, line: 460, type: !855)
!883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !884)
!884 = !{!885, !886, !887, !888}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !883, file: !10, line: 55, baseType: !116, size: 32)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !883, file: !10, line: 57, baseType: !116, size: 32, offset: 32)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !883, file: !10, line: 59, baseType: !104, size: 32, offset: 64)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !883, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!889 = !DIGlobalVariableExpression(var: !890, expr: !DIExpression())
!890 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !878, file: !828, line: 497, type: !883, isLocal: true, isDefinition: true, align: 32)
!891 = !DIGlobalVariableExpression(var: !892, expr: !DIExpression())
!892 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !878, file: !828, line: 507, type: !883, isLocal: true, isDefinition: true, align: 32)
!893 = !DIGlobalVariableExpression(var: !894, expr: !DIExpression())
!894 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !878, file: !828, line: 512, type: !883, isLocal: true, isDefinition: true, align: 32)
!895 = !DIGlobalVariableExpression(var: !896, expr: !DIExpression())
!896 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !878, file: !828, line: 516, type: !883, isLocal: true, isDefinition: true, align: 32)
!897 = !DIGlobalVariableExpression(var: !898, expr: !DIExpression())
!898 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !878, file: !828, line: 523, type: !883, isLocal: true, isDefinition: true, align: 32)
!899 = !DIGlobalVariableExpression(var: !900, expr: !DIExpression())
!900 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !878, file: !828, line: 527, type: !883, isLocal: true, isDefinition: true, align: 32)
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !878, file: !828, line: 581, type: !883, isLocal: true, isDefinition: true, align: 32)
!903 = !DIGlobalVariableExpression(var: !904, expr: !DIExpression())
!904 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !878, file: !828, line: 586, type: !883, isLocal: true, isDefinition: true, align: 32)
!905 = !DIGlobalVariableExpression(var: !906, expr: !DIExpression())
!906 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !878, file: !828, line: 591, type: !883, isLocal: true, isDefinition: true, align: 32)
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !878, file: !828, line: 595, type: !883, isLocal: true, isDefinition: true, align: 32)
!909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !910, size: 736, elements: !872)
!910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !911)
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !457, line: 133, baseType: !748)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !914, file: !919, line: 24, type: !945, isLocal: false, isDefinition: true, align: 16)
!914 = distinct !DICompileUnit(language: DW_LANG_C99, file: !915, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !916, splitDebugInlining: false, nameTableKind: None)
!915 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!916 = !{!917, !912, !923, !925, !927, !929, !931, !933, !935, !937, !939, !941, !943}
!917 = !DIGlobalVariableExpression(var: !918, expr: !DIExpression())
!918 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !914, file: !919, line: 19, type: !920, isLocal: false, isDefinition: true, align: 16)
!919 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 224, elements: !921)
!921 = !{!922}
!922 = !DISubrange(count: 14)
!923 = !DIGlobalVariableExpression(var: !924, expr: !DIExpression())
!924 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !914, file: !919, line: 31, type: !829, isLocal: false, isDefinition: true, align: 16)
!925 = !DIGlobalVariableExpression(var: !926, expr: !DIExpression())
!926 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !914, file: !919, line: 38, type: !829, isLocal: false, isDefinition: true, align: 16)
!927 = !DIGlobalVariableExpression(var: !928, expr: !DIExpression())
!928 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !914, file: !919, line: 45, type: !829, isLocal: false, isDefinition: true, align: 16)
!929 = !DIGlobalVariableExpression(var: !930, expr: !DIExpression())
!930 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !914, file: !919, line: 52, type: !829, isLocal: false, isDefinition: true, align: 16)
!931 = !DIGlobalVariableExpression(var: !932, expr: !DIExpression())
!932 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !914, file: !919, line: 59, type: !829, isLocal: false, isDefinition: true, align: 16)
!933 = !DIGlobalVariableExpression(var: !934, expr: !DIExpression())
!934 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !914, file: !919, line: 66, type: !829, isLocal: false, isDefinition: true, align: 16)
!935 = !DIGlobalVariableExpression(var: !936, expr: !DIExpression())
!936 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !914, file: !919, line: 73, type: !829, isLocal: false, isDefinition: true, align: 16)
!937 = !DIGlobalVariableExpression(var: !938, expr: !DIExpression())
!938 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !914, file: !919, line: 80, type: !829, isLocal: false, isDefinition: true, align: 16)
!939 = !DIGlobalVariableExpression(var: !940, expr: !DIExpression())
!940 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_50", scope: !914, file: !919, line: 87, type: !829, isLocal: false, isDefinition: true, align: 16)
!941 = !DIGlobalVariableExpression(var: !942, expr: !DIExpression())
!942 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !914, file: !919, line: 94, type: !829, isLocal: false, isDefinition: true, align: 16)
!943 = !DIGlobalVariableExpression(var: !944, expr: !DIExpression())
!944 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !914, file: !919, line: 101, type: !829, isLocal: false, isDefinition: true, align: 16)
!945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 48, elements: !946)
!946 = !{!947}
!947 = !DISubrange(count: 3)
!948 = !DIGlobalVariableExpression(var: !949, expr: !DIExpression())
!949 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !950, file: !1014, line: 398, type: !1045, isLocal: true, isDefinition: true)
!950 = distinct !DICompileUnit(language: DW_LANG_C99, file: !951, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !952, retainedTypes: !965, globals: !1011, splitDebugInlining: false, nameTableKind: None)
!951 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!952 = !{!953, !30, !958}
!953 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !954, line: 197, baseType: !32, size: 32, elements: !955)
!954 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!955 = !{!956, !957}
!956 = !DIEnumerator(name: "SUCCESS", value: 0)
!957 = !DIEnumerator(name: "ERROR", value: 1)
!958 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !959, line: 44, baseType: !32, size: 32, elements: !960)
!959 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!960 = !{!961, !962, !963, !964}
!961 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!962 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!963 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!964 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!965 = !{!104, !105, !113, !966, !1004, !1010}
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 32)
!967 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 369, baseType: !968)
!968 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 335, size: 1152, elements: !969)
!969 = !{!970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1003}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !968, file: !457, line: 337, baseType: !461, size: 32)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !968, file: !457, line: 338, baseType: !461, size: 32, offset: 32)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !968, file: !457, line: 339, baseType: !461, size: 32, offset: 64)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !968, file: !457, line: 340, baseType: !461, size: 32, offset: 96)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !968, file: !457, line: 341, baseType: !461, size: 32, offset: 128)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !968, file: !457, line: 342, baseType: !461, size: 32, offset: 160)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !968, file: !457, line: 343, baseType: !461, size: 32, offset: 192)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !968, file: !457, line: 344, baseType: !113, size: 32, offset: 224)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !968, file: !457, line: 345, baseType: !461, size: 32, offset: 256)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !968, file: !457, line: 346, baseType: !461, size: 32, offset: 288)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !968, file: !457, line: 347, baseType: !981, size: 64, offset: 320)
!981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 64, elements: !158)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !968, file: !457, line: 348, baseType: !461, size: 32, offset: 384)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !968, file: !457, line: 349, baseType: !461, size: 32, offset: 416)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !968, file: !457, line: 350, baseType: !461, size: 32, offset: 448)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !968, file: !457, line: 351, baseType: !113, size: 32, offset: 480)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !968, file: !457, line: 352, baseType: !461, size: 32, offset: 512)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !968, file: !457, line: 353, baseType: !461, size: 32, offset: 544)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !968, file: !457, line: 354, baseType: !981, size: 64, offset: 576)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !968, file: !457, line: 355, baseType: !461, size: 32, offset: 640)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !968, file: !457, line: 356, baseType: !461, size: 32, offset: 672)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !968, file: !457, line: 357, baseType: !461, size: 32, offset: 704)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !968, file: !457, line: 358, baseType: !113, size: 32, offset: 736)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !968, file: !457, line: 359, baseType: !461, size: 32, offset: 768)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !968, file: !457, line: 360, baseType: !461, size: 32, offset: 800)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !968, file: !457, line: 361, baseType: !981, size: 64, offset: 832)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !968, file: !457, line: 362, baseType: !461, size: 32, offset: 896)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !968, file: !457, line: 363, baseType: !461, size: 32, offset: 928)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !968, file: !457, line: 364, baseType: !981, size: 64, offset: 960)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !968, file: !457, line: 365, baseType: !461, size: 32, offset: 1024)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !968, file: !457, line: 366, baseType: !461, size: 32, offset: 1056)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !968, file: !457, line: 367, baseType: !1002, size: 32, offset: 1088)
!1002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 32, elements: !661)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !968, file: !457, line: 368, baseType: !461, size: 32, offset: 1120)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 32)
!1005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1006, line: 343, size: 64, elements: !1007)
!1006 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1007 = !{!1008, !1009}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1005, file: !1006, line: 344, baseType: !113, size: 32)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1005, file: !1006, line: 345, baseType: !113, size: 32, offset: 32)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!1011 = !{!1012, !1016, !1032, !1043, !948}
!1012 = !DIGlobalVariableExpression(var: !1013, expr: !DIExpression())
!1013 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !950, file: !1014, line: 752, type: !1015, isLocal: false, isDefinition: true, align: 16)
!1014 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1015 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 640, elements: !335)
!1016 = !DIGlobalVariableExpression(var: !1017, expr: !DIExpression())
!1017 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !950, file: !1014, line: 752, type: !1018, isLocal: false, isDefinition: true, align: 32)
!1018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1019)
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1020)
!1020 = !{!1021, !1022, !1023, !1024, !1030, !1031}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1019, file: !481, line: 380, baseType: !269, size: 32)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1019, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1019, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1019, file: !481, line: 386, baseType: !1025, size: 32, offset: 96)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 32)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1027)
!1027 = !{!1028, !1029}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1026, file: !481, line: 359, baseType: !169, size: 8)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1026, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1019, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1019, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1032 = !DIGlobalVariableExpression(var: !1033, expr: !DIExpression())
!1033 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !950, file: !1014, line: 752, type: !1034, isLocal: true, isDefinition: true, align: 32)
!1034 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1035)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !1036)
!1036 = !{!1037, !1042}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1035, file: !472, line: 60, baseType: !1038, size: 32)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 32)
!1039 = !DISubroutineType(types: !1040)
!1040 = !{!105, !1041}
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1035, file: !472, line: 65, baseType: !1041, size: 32, offset: 32)
!1043 = !DIGlobalVariableExpression(var: !1044, expr: !DIExpression())
!1044 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !950, file: !1014, line: 752, type: !1026, isLocal: true, isDefinition: true, align: 8)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !959, line: 100, size: 224, elements: !1046)
!1046 = !{!1047, !1053, !1054, !1063, !1068, !1073, !1079}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1045, file: !959, line: 101, baseType: !1048, size: 32)
!1048 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !959, line: 76, baseType: !1049)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 32)
!1050 = !DISubroutineType(types: !1051)
!1051 = !{!105, !1041, !1052}
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !959, line: 56, baseType: !104)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1045, file: !959, line: 102, baseType: !1048, size: 32, offset: 32)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1045, file: !959, line: 103, baseType: !1055, size: 32, offset: 64)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !959, line: 83, baseType: !1056)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{!105, !1041, !1052, !1059, !104}
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !959, line: 72, baseType: !1060)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 32)
!1061 = !DISubroutineType(types: !1062)
!1062 = !{null, !1041, !1052, !104}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1045, file: !959, line: 104, baseType: !1064, size: 32, offset: 96)
!1064 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !959, line: 79, baseType: !1065)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 32)
!1066 = !DISubroutineType(types: !1067)
!1067 = !{!105, !1041, !1052, !1010}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1045, file: !959, line: 105, baseType: !1069, size: 32, offset: 128)
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !959, line: 88, baseType: !1070)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 32)
!1071 = !DISubroutineType(types: !1072)
!1072 = !{!958, !1041, !1052}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1045, file: !959, line: 106, baseType: !1074, size: 32, offset: 160)
!1074 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !959, line: 92, baseType: !1075)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 32)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!105, !1041, !1052, !1078}
!1078 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !959, line: 64, baseType: !104)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1045, file: !959, line: 107, baseType: !1080, size: 32, offset: 192)
!1080 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !959, line: 96, baseType: !1081)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 32)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!105, !1041, !1052, !104}
!1084 = !DIGlobalVariableExpression(var: !1085, expr: !DIExpression())
!1085 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1086, file: !1143, line: 603, type: !1145, isLocal: true, isDefinition: true, align: 32)
!1086 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1087, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1088, globals: !1140, splitDebugInlining: false, nameTableKind: None)
!1087 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!1088 = !{!104, !105, !1089}
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 32)
!1090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1091)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1092, line: 336, size: 160, elements: !1093)
!1092 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1093 = !{!1094, !1114, !1118, !1122, !1135}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1091, file: !1092, line: 365, baseType: !1095, size: 32)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 32)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{!105, !1098, !1113}
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 32)
!1099 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1100)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1101)
!1101 = !{!1102, !1103, !1104, !1105, !1111, !1112}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1100, file: !481, line: 380, baseType: !269, size: 32)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1100, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1100, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1100, file: !481, line: 386, baseType: !1106, size: 32, offset: 96)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 32)
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1108)
!1108 = !{!1109, !1110}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1107, file: !481, line: 359, baseType: !169, size: 8)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1107, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1100, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1100, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1091, file: !1092, line: 366, baseType: !1115, size: 32, offset: 32)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 32)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{null, !1098, !170}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1091, file: !1092, line: 374, baseType: !1119, size: 32, offset: 64)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 32)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{!105, !1098}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1091, file: !1092, line: 377, baseType: !1123, size: 32, offset: 96)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 32)
!1124 = !DISubroutineType(types: !1125)
!1125 = !{!105, !1098, !1126}
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 32)
!1127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1128)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1092, line: 122, size: 64, elements: !1129)
!1129 = !{!1130, !1131, !1132, !1133, !1134}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1128, file: !1092, line: 123, baseType: !113, size: 32)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1128, file: !1092, line: 124, baseType: !169, size: 8, offset: 32)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1128, file: !1092, line: 125, baseType: !169, size: 8, offset: 40)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1128, file: !1092, line: 126, baseType: !169, size: 8, offset: 48)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1128, file: !1092, line: 127, baseType: !169, size: 8, offset: 56)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1091, file: !1092, line: 379, baseType: !1136, size: 32, offset: 128)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 32)
!1137 = !DISubroutineType(types: !1138)
!1138 = !{!105, !1098, !1139}
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 32)
!1140 = !{!1084, !1141}
!1141 = !DIGlobalVariableExpression(var: !1142, expr: !DIExpression())
!1142 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1086, file: !1143, line: 38, type: !1144, isLocal: true, isDefinition: true)
!1143 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1098)
!1145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1146)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !1147)
!1147 = !{!1148, !1149}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1146, file: !472, line: 60, baseType: !1119, size: 32)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1146, file: !472, line: 65, baseType: !1098, size: 32, offset: 32)
!1150 = !DIGlobalVariableExpression(var: !1151, expr: !DIExpression())
!1151 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1152, file: !1321, line: 762, type: !1433, isLocal: true, isDefinition: true)
!1152 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1153, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1154, retainedTypes: !1172, globals: !1318, splitDebugInlining: false, nameTableKind: None)
!1153 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!1154 = !{!30, !1155, !1161, !1166, !958}
!1155 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1156, line: 506, baseType: !32, size: 32, elements: !1157)
!1156 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1157 = !{!1158, !1159, !1160}
!1158 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1159 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1160 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1161 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1156, line: 512, baseType: !32, size: 32, elements: !1162)
!1162 = !{!1163, !1164, !1165}
!1163 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1164 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1165 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1166 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !867, line: 43, baseType: !32, size: 32, elements: !1167)
!1167 = !{!1168, !1169, !1170, !1171}
!1168 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1169 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1170 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1171 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1172 = !{!104, !105, !1173, !1243, !1248, !1208, !1161, !1155, !1253, !1254, !113, !1268, !1223, !102, !1278, !1279}
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 32)
!1174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1175)
!1175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1156, line: 523, size: 288, elements: !1176)
!1176 = !{!1177, !1198, !1204, !1209, !1213, !1214, !1215, !1219, !1239}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1175, file: !1156, line: 524, baseType: !1178, size: 32)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 32)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{!105, !1181, !1196, !1197}
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 32)
!1182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1183)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1184)
!1184 = !{!1185, !1186, !1187, !1188, !1194, !1195}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1183, file: !481, line: 380, baseType: !269, size: 32)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1183, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1183, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1183, file: !481, line: 386, baseType: !1189, size: 32, offset: 96)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 32)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1191)
!1191 = !{!1192, !1193}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1190, file: !481, line: 359, baseType: !169, size: 8)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1190, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1183, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1183, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1156, line: 237, baseType: !169)
!1197 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1156, line: 257, baseType: !113)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1175, file: !1156, line: 530, baseType: !1199, size: 32, offset: 32)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 32)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{!105, !1181, !1202}
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 32)
!1203 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1156, line: 229, baseType: !113)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1175, file: !1156, line: 532, baseType: !1205, size: 32, offset: 64)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 32)
!1206 = !DISubroutineType(types: !1207)
!1207 = !{!105, !1181, !1208, !1203}
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1156, line: 216, baseType: !113)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1175, file: !1156, line: 535, baseType: !1210, size: 32, offset: 96)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 32)
!1211 = !DISubroutineType(types: !1212)
!1212 = !{!105, !1181, !1208}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1175, file: !1156, line: 537, baseType: !1210, size: 32, offset: 128)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1175, file: !1156, line: 539, baseType: !1210, size: 32, offset: 160)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1175, file: !1156, line: 541, baseType: !1216, size: 32, offset: 192)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1217 = !DISubroutineType(types: !1218)
!1218 = !{!105, !1181, !1196, !1155, !1161}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1175, file: !1156, line: 544, baseType: !1220, size: 32, offset: 224)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 32)
!1221 = !DISubroutineType(types: !1222)
!1222 = !{!105, !1181, !1223, !492}
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 32)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1156, line: 478, size: 96, elements: !1225)
!1225 = !{!1226, !1233, !1238}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1224, file: !1156, line: 482, baseType: !1227, size: 32)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1228, line: 33, baseType: !1229)
!1228 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1228, line: 29, size: 32, elements: !1230)
!1230 = !{!1231}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1229, file: !1228, line: 30, baseType: !1232, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 32)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1224, file: !1156, line: 485, baseType: !1234, size: 32, offset: 32)
!1234 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1156, line: 464, baseType: !1235)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 32)
!1236 = !DISubroutineType(types: !1237)
!1237 = !{null, !1181, !1223, !1208}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1224, file: !1156, line: 493, baseType: !1208, size: 32, offset: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1175, file: !1156, line: 547, baseType: !1240, size: 32, offset: 256)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 32)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{!113, !1181}
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1245)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1156, line: 428, size: 32, elements: !1246)
!1246 = !{!1247}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1245, file: !1156, line: 434, baseType: !1208, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 32)
!1249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1250)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1156, line: 441, size: 32, elements: !1251)
!1251 = !{!1252}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1250, file: !1156, line: 447, baseType: !1208, size: 32)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 32)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 32)
!1255 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !457, line: 275, baseType: !1256)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 264, size: 320, elements: !1257)
!1257 = !{!1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1256, file: !457, line: 266, baseType: !461, size: 32)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1256, file: !457, line: 267, baseType: !461, size: 32, offset: 32)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1256, file: !457, line: 268, baseType: !461, size: 32, offset: 64)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1256, file: !457, line: 269, baseType: !461, size: 32, offset: 96)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1256, file: !457, line: 270, baseType: !461, size: 32, offset: 128)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1256, file: !457, line: 271, baseType: !461, size: 32, offset: 160)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1256, file: !457, line: 272, baseType: !461, size: 32, offset: 192)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1256, file: !457, line: 273, baseType: !461, size: 32, offset: 224)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1256, file: !457, line: 274, baseType: !1267, size: 64, offset: 256)
!1267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !461, size: 64, elements: !158)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !457, line: 288, baseType: !1270)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 281, size: 288, elements: !1271)
!1271 = !{!1272, !1273, !1274, !1276, !1277}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1270, file: !457, line: 283, baseType: !461, size: 32)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1270, file: !457, line: 284, baseType: !461, size: 32, offset: 32)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1270, file: !457, line: 285, baseType: !1275, size: 128, offset: 64)
!1275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !461, size: 128, elements: !313)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1270, file: !457, line: 286, baseType: !981, size: 64, offset: 192)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1270, file: !457, line: 287, baseType: !461, size: 32, offset: 256)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 32)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 32)
!1280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1281)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !959, line: 100, size: 224, elements: !1282)
!1282 = !{!1283, !1288, !1289, !1298, !1303, !1308, !1313}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1281, file: !959, line: 101, baseType: !1284, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !959, line: 76, baseType: !1285)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 32)
!1286 = !DISubroutineType(types: !1287)
!1287 = !{!105, !1181, !1052}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1281, file: !959, line: 102, baseType: !1284, size: 32, offset: 32)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1281, file: !959, line: 103, baseType: !1290, size: 32, offset: 64)
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !959, line: 83, baseType: !1291)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{!105, !1181, !1052, !1294, !104}
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !959, line: 72, baseType: !1295)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 32)
!1296 = !DISubroutineType(types: !1297)
!1297 = !{null, !1181, !1052, !104}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1281, file: !959, line: 104, baseType: !1299, size: 32, offset: 96)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !959, line: 79, baseType: !1300)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 32)
!1301 = !DISubroutineType(types: !1302)
!1302 = !{!105, !1181, !1052, !1010}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1281, file: !959, line: 105, baseType: !1304, size: 32, offset: 128)
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !959, line: 88, baseType: !1305)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 32)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{!958, !1181, !1052}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1281, file: !959, line: 106, baseType: !1309, size: 32, offset: 160)
!1309 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !959, line: 92, baseType: !1310)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 32)
!1311 = !DISubroutineType(types: !1312)
!1312 = !{!105, !1181, !1052, !1078}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1281, file: !959, line: 107, baseType: !1314, size: 32, offset: 192)
!1314 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !959, line: 96, baseType: !1315)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 32)
!1316 = !DISubroutineType(types: !1317)
!1317 = !{!105, !1181, !1052, !104}
!1318 = !{!1319, !1325, !1327, !1337, !1339, !1341, !1343, !1348, !1350, !1352, !1357, !1359, !1361, !1363, !1365, !1367, !1369, !1371, !1373, !1375, !1377, !1379, !1381, !1383, !1385, !1399, !1401, !1403, !1405, !1407, !1409, !1411, !1413, !1415, !1417, !1419, !1421, !1423, !1425, !1427, !1150, !1429, !1431, !1444, !1446, !1448, !1450, !1452, !1454}
!1319 = !DIGlobalVariableExpression(var: !1320, expr: !DIExpression())
!1320 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1152, file: !1321, line: 762, type: !1322, isLocal: false, isDefinition: true, align: 16)
!1321 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 112, elements: !1323)
!1323 = !{!1324}
!1324 = !DISubrange(count: 7)
!1325 = !DIGlobalVariableExpression(var: !1326, expr: !DIExpression())
!1326 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !1152, file: !1321, line: 762, type: !1182, isLocal: false, isDefinition: true, align: 32)
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !1152, file: !1321, line: 762, type: !1329, isLocal: true, isDefinition: true, align: 32)
!1329 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1330)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !1331)
!1331 = !{!1332, !1336}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1330, file: !472, line: 60, baseType: !1333, size: 32)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 32)
!1334 = !DISubroutineType(types: !1335)
!1335 = !{!105, !1181}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1330, file: !472, line: 65, baseType: !1181, size: 32, offset: 32)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !1152, file: !1321, line: 766, type: !1322, isLocal: false, isDefinition: true, align: 16)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "__device_dts_ord_20", scope: !1152, file: !1321, line: 766, type: !1182, isLocal: false, isDefinition: true, align: 32)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_20", scope: !1152, file: !1321, line: 766, type: !1329, isLocal: true, isDefinition: true, align: 32)
!1343 = !DIGlobalVariableExpression(var: !1344, expr: !DIExpression())
!1344 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1152, file: !1321, line: 770, type: !1345, isLocal: false, isDefinition: true, align: 16)
!1345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 80, elements: !1346)
!1346 = !{!1347}
!1347 = !DISubrange(count: 5)
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1152, file: !1321, line: 770, type: !1182, isLocal: false, isDefinition: true, align: 32)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1152, file: !1321, line: 770, type: !1329, isLocal: true, isDefinition: true, align: 32)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !1152, file: !1321, line: 774, type: !1354, isLocal: false, isDefinition: true, align: 16)
!1354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 96, elements: !1355)
!1355 = !{!1356}
!1356 = !DISubrange(count: 6)
!1357 = !DIGlobalVariableExpression(var: !1358, expr: !DIExpression())
!1358 = distinct !DIGlobalVariable(name: "__device_dts_ord_23", scope: !1152, file: !1321, line: 774, type: !1182, isLocal: false, isDefinition: true, align: 32)
!1359 = !DIGlobalVariableExpression(var: !1360, expr: !DIExpression())
!1360 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_23", scope: !1152, file: !1321, line: 774, type: !1329, isLocal: true, isDefinition: true, align: 32)
!1361 = !DIGlobalVariableExpression(var: !1362, expr: !DIExpression())
!1362 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1152, file: !1321, line: 778, type: !1345, isLocal: false, isDefinition: true, align: 16)
!1363 = !DIGlobalVariableExpression(var: !1364, expr: !DIExpression())
!1364 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1152, file: !1321, line: 778, type: !1182, isLocal: false, isDefinition: true, align: 32)
!1365 = !DIGlobalVariableExpression(var: !1366, expr: !DIExpression())
!1366 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1152, file: !1321, line: 778, type: !1329, isLocal: true, isDefinition: true, align: 32)
!1367 = !DIGlobalVariableExpression(var: !1368, expr: !DIExpression())
!1368 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1152, file: !1321, line: 782, type: !1345, isLocal: false, isDefinition: true, align: 16)
!1369 = !DIGlobalVariableExpression(var: !1370, expr: !DIExpression())
!1370 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1152, file: !1321, line: 782, type: !1182, isLocal: false, isDefinition: true, align: 32)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1152, file: !1321, line: 782, type: !1329, isLocal: true, isDefinition: true, align: 32)
!1373 = !DIGlobalVariableExpression(var: !1374, expr: !DIExpression())
!1374 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1152, file: !1321, line: 786, type: !1345, isLocal: false, isDefinition: true, align: 16)
!1375 = !DIGlobalVariableExpression(var: !1376, expr: !DIExpression())
!1376 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1152, file: !1321, line: 786, type: !1182, isLocal: false, isDefinition: true, align: 32)
!1377 = !DIGlobalVariableExpression(var: !1378, expr: !DIExpression())
!1378 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1152, file: !1321, line: 786, type: !1329, isLocal: true, isDefinition: true, align: 32)
!1379 = !DIGlobalVariableExpression(var: !1380, expr: !DIExpression())
!1380 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1152, file: !1321, line: 790, type: !1345, isLocal: false, isDefinition: true, align: 16)
!1381 = !DIGlobalVariableExpression(var: !1382, expr: !DIExpression())
!1382 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1152, file: !1321, line: 790, type: !1182, isLocal: false, isDefinition: true, align: 32)
!1383 = !DIGlobalVariableExpression(var: !1384, expr: !DIExpression())
!1384 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1152, file: !1321, line: 790, type: !1329, isLocal: true, isDefinition: true, align: 32)
!1385 = !DIGlobalVariableExpression(var: !1386, expr: !DIExpression())
!1386 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1152, file: !1321, line: 762, type: !1387, isLocal: true, isDefinition: true)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1388, line: 237, size: 128, elements: !1389)
!1388 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1389 = !{!1390, !1391, !1392}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1387, file: !1388, line: 239, baseType: !1250, size: 32)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1387, file: !1388, line: 241, baseType: !1181, size: 32, offset: 32)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1387, file: !1388, line: 243, baseType: !1393, size: 64, offset: 64)
!1393 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1228, line: 40, baseType: !1394)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1228, line: 35, size: 64, elements: !1395)
!1395 = !{!1396, !1398}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1394, file: !1228, line: 36, baseType: !1397, size: 32)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 32)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1394, file: !1228, line: 37, baseType: !1397, size: 32, offset: 32)
!1399 = !DIGlobalVariableExpression(var: !1400, expr: !DIExpression())
!1400 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !1152, file: !1321, line: 762, type: !1190, isLocal: true, isDefinition: true, align: 8)
!1401 = !DIGlobalVariableExpression(var: !1402, expr: !DIExpression())
!1402 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1152, file: !1321, line: 766, type: !1387, isLocal: true, isDefinition: true)
!1403 = !DIGlobalVariableExpression(var: !1404, expr: !DIExpression())
!1404 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_20", scope: !1152, file: !1321, line: 766, type: !1190, isLocal: true, isDefinition: true, align: 8)
!1405 = !DIGlobalVariableExpression(var: !1406, expr: !DIExpression())
!1406 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1152, file: !1321, line: 770, type: !1387, isLocal: true, isDefinition: true)
!1407 = !DIGlobalVariableExpression(var: !1408, expr: !DIExpression())
!1408 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1152, file: !1321, line: 770, type: !1190, isLocal: true, isDefinition: true, align: 8)
!1409 = !DIGlobalVariableExpression(var: !1410, expr: !DIExpression())
!1410 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1152, file: !1321, line: 774, type: !1387, isLocal: true, isDefinition: true)
!1411 = !DIGlobalVariableExpression(var: !1412, expr: !DIExpression())
!1412 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_23", scope: !1152, file: !1321, line: 774, type: !1190, isLocal: true, isDefinition: true, align: 8)
!1413 = !DIGlobalVariableExpression(var: !1414, expr: !DIExpression())
!1414 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1152, file: !1321, line: 778, type: !1387, isLocal: true, isDefinition: true)
!1415 = !DIGlobalVariableExpression(var: !1416, expr: !DIExpression())
!1416 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1152, file: !1321, line: 778, type: !1190, isLocal: true, isDefinition: true, align: 8)
!1417 = !DIGlobalVariableExpression(var: !1418, expr: !DIExpression())
!1418 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1152, file: !1321, line: 782, type: !1387, isLocal: true, isDefinition: true)
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1152, file: !1321, line: 782, type: !1190, isLocal: true, isDefinition: true, align: 8)
!1421 = !DIGlobalVariableExpression(var: !1422, expr: !DIExpression())
!1422 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1152, file: !1321, line: 786, type: !1387, isLocal: true, isDefinition: true)
!1423 = !DIGlobalVariableExpression(var: !1424, expr: !DIExpression())
!1424 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1152, file: !1321, line: 786, type: !1190, isLocal: true, isDefinition: true, align: 8)
!1425 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression())
!1426 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1152, file: !1321, line: 790, type: !1387, isLocal: true, isDefinition: true)
!1427 = !DIGlobalVariableExpression(var: !1428, expr: !DIExpression())
!1428 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1152, file: !1321, line: 790, type: !1190, isLocal: true, isDefinition: true, align: 8)
!1429 = !DIGlobalVariableExpression(var: !1430, expr: !DIExpression())
!1430 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1152, file: !1321, line: 656, type: !1174, isLocal: true, isDefinition: true)
!1431 = !DIGlobalVariableExpression(var: !1432, expr: !DIExpression())
!1432 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1152, file: !1321, line: 766, type: !1433, isLocal: true, isDefinition: true)
!1433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1434)
!1434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1388, line: 224, size: 160, elements: !1435)
!1435 = !{!1436, !1437, !1438, !1439}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1434, file: !1388, line: 226, baseType: !1245, size: 32)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1434, file: !1388, line: 228, baseType: !1010, size: 32, offset: 32)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1434, file: !1388, line: 230, baseType: !105, size: 32, offset: 64)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1434, file: !1388, line: 231, baseType: !1440, size: 64, offset: 96)
!1440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1006, line: 343, size: 64, elements: !1441)
!1441 = !{!1442, !1443}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1440, file: !1006, line: 344, baseType: !113, size: 32)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1440, file: !1006, line: 345, baseType: !113, size: 32, offset: 32)
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1152, file: !1321, line: 770, type: !1433, isLocal: true, isDefinition: true)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1152, file: !1321, line: 774, type: !1433, isLocal: true, isDefinition: true)
!1448 = !DIGlobalVariableExpression(var: !1449, expr: !DIExpression())
!1449 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1152, file: !1321, line: 778, type: !1433, isLocal: true, isDefinition: true)
!1450 = !DIGlobalVariableExpression(var: !1451, expr: !DIExpression())
!1451 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1152, file: !1321, line: 782, type: !1433, isLocal: true, isDefinition: true)
!1452 = !DIGlobalVariableExpression(var: !1453, expr: !DIExpression())
!1453 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1152, file: !1321, line: 786, type: !1433, isLocal: true, isDefinition: true)
!1454 = !DIGlobalVariableExpression(var: !1455, expr: !DIExpression())
!1455 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1152, file: !1321, line: 790, type: !1433, isLocal: true, isDefinition: true)
!1456 = !DIGlobalVariableExpression(var: !1457, expr: !DIExpression())
!1457 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1458, file: !1597, line: 44, type: !1715, isLocal: false, isDefinition: true)
!1458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1459, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1460, retainedTypes: !1493, globals: !1594, splitDebugInlining: false, nameTableKind: None)
!1459 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!1460 = !{!30, !1461, !1468, !1475, !1482, !1488, !958}
!1461 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1092, line: 47, baseType: !32, size: 32, elements: !1462)
!1462 = !{!1463, !1464, !1465, !1466, !1467}
!1463 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1464 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1465 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1466 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1467 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1468 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1092, line: 75, baseType: !32, size: 32, elements: !1469)
!1469 = !{!1470, !1471, !1472, !1473, !1474}
!1470 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1471 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1472 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1473 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1474 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1475 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1092, line: 92, baseType: !32, size: 32, elements: !1476)
!1476 = !{!1477, !1478, !1479, !1480, !1481}
!1477 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1478 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1479 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1480 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1481 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1482 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1092, line: 84, baseType: !32, size: 32, elements: !1483)
!1483 = !{!1484, !1485, !1486, !1487}
!1484 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1485 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1486 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1487 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1488 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1092, line: 107, baseType: !32, size: 32, elements: !1489)
!1489 = !{!1490, !1491, !1492}
!1490 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1491 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1492 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1493 = !{!104, !105, !1494, !170, !169, !1543, !113, !1052, !1554, !183, !114, !1593}
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 32)
!1495 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1496)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1092, line: 336, size: 160, elements: !1497)
!1497 = !{!1498, !1517, !1521, !1525, !1538}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1496, file: !1092, line: 365, baseType: !1499, size: 32)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 32)
!1500 = !DISubroutineType(types: !1501)
!1501 = !{!105, !1502, !1113}
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 32)
!1503 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1504)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1505)
!1505 = !{!1506, !1507, !1508, !1509, !1515, !1516}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1504, file: !481, line: 380, baseType: !269, size: 32)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1504, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1504, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1504, file: !481, line: 386, baseType: !1510, size: 32, offset: 96)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 32)
!1511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1512)
!1512 = !{!1513, !1514}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1511, file: !481, line: 359, baseType: !169, size: 8)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1511, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1504, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1504, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1496, file: !1092, line: 366, baseType: !1518, size: 32, offset: 32)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 32)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{null, !1502, !170}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1496, file: !1092, line: 374, baseType: !1522, size: 32, offset: 64)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 32)
!1523 = !DISubroutineType(types: !1524)
!1524 = !{!105, !1502}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1496, file: !1092, line: 377, baseType: !1526, size: 32, offset: 96)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 32)
!1527 = !DISubroutineType(types: !1528)
!1528 = !{!105, !1502, !1529}
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1531)
!1531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1092, line: 122, size: 64, elements: !1532)
!1532 = !{!1533, !1534, !1535, !1536, !1537}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1531, file: !1092, line: 123, baseType: !113, size: 32)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1531, file: !1092, line: 124, baseType: !169, size: 8, offset: 32)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1531, file: !1092, line: 125, baseType: !169, size: 8, offset: 40)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1531, file: !1092, line: 126, baseType: !169, size: 8, offset: 48)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1531, file: !1092, line: 127, baseType: !169, size: 8, offset: 56)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1496, file: !1092, line: 379, baseType: !1539, size: 32, offset: 128)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 32)
!1540 = !DISubroutineType(types: !1541)
!1541 = !{!105, !1502, !1542}
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 32)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 32)
!1544 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !457, line: 507, baseType: !1545)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 498, size: 224, elements: !1546)
!1546 = !{!1547, !1548, !1549, !1550, !1551, !1552, !1553}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1545, file: !457, line: 500, baseType: !461, size: 32)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1545, file: !457, line: 501, baseType: !461, size: 32, offset: 32)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1545, file: !457, line: 502, baseType: !461, size: 32, offset: 64)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1545, file: !457, line: 503, baseType: !461, size: 32, offset: 96)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1545, file: !457, line: 504, baseType: !461, size: 32, offset: 128)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1545, file: !457, line: 505, baseType: !461, size: 32, offset: 160)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1545, file: !457, line: 506, baseType: !461, size: 32, offset: 192)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 32)
!1555 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1556)
!1556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !959, line: 100, size: 224, elements: !1557)
!1557 = !{!1558, !1563, !1564, !1573, !1578, !1583, !1588}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1556, file: !959, line: 101, baseType: !1559, size: 32)
!1559 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !959, line: 76, baseType: !1560)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{!105, !1502, !1052}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1556, file: !959, line: 102, baseType: !1559, size: 32, offset: 32)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1556, file: !959, line: 103, baseType: !1565, size: 32, offset: 64)
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !959, line: 83, baseType: !1566)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 32)
!1567 = !DISubroutineType(types: !1568)
!1568 = !{!105, !1502, !1052, !1569, !104}
!1569 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !959, line: 72, baseType: !1570)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 32)
!1571 = !DISubroutineType(types: !1572)
!1572 = !{null, !1502, !1052, !104}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1556, file: !959, line: 104, baseType: !1574, size: 32, offset: 96)
!1574 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !959, line: 79, baseType: !1575)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 32)
!1576 = !DISubroutineType(types: !1577)
!1577 = !{!105, !1502, !1052, !1010}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1556, file: !959, line: 105, baseType: !1579, size: 32, offset: 128)
!1579 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !959, line: 88, baseType: !1580)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 32)
!1581 = !DISubroutineType(types: !1582)
!1582 = !{!958, !1502, !1052}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1556, file: !959, line: 106, baseType: !1584, size: 32, offset: 160)
!1584 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !959, line: 92, baseType: !1585)
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 32)
!1586 = !DISubroutineType(types: !1587)
!1587 = !{!105, !1502, !1052, !1078}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1556, file: !959, line: 107, baseType: !1589, size: 32, offset: 192)
!1589 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !959, line: 96, baseType: !1590)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 32)
!1591 = !DISubroutineType(types: !1592)
!1592 = !{!105, !1502, !1052, !104}
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 32)
!1594 = !{!1456, !1595, !1601, !1603, !1610, !1612, !1614, !1616, !1618, !1620, !1622, !1624, !1626, !1628, !1672, !1675, !1677, !1680, !1683, !1685, !1691, !1693, !1695, !1697, !1699, !1701, !1703, !1705, !1707, !1709, !1711, !1713}
!1595 = !DIGlobalVariableExpression(var: !1596, expr: !DIExpression())
!1596 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !1458, file: !1597, line: 1914, type: !1598, isLocal: false, isDefinition: true, align: 16)
!1597 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 128, elements: !1599)
!1599 = !{!1600}
!1600 = !DISubrange(count: 8)
!1601 = !DIGlobalVariableExpression(var: !1602, expr: !DIExpression())
!1602 = distinct !DIGlobalVariable(name: "__device_dts_ord_47", scope: !1458, file: !1597, line: 1914, type: !1503, isLocal: false, isDefinition: true, align: 32)
!1603 = !DIGlobalVariableExpression(var: !1604, expr: !DIExpression())
!1604 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_47", scope: !1458, file: !1597, line: 1914, type: !1605, isLocal: true, isDefinition: true, align: 32)
!1605 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1606)
!1606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !1607)
!1607 = !{!1608, !1609}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1606, file: !472, line: 60, baseType: !1522, size: 32)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1606, file: !472, line: 65, baseType: !1502, size: 32, offset: 32)
!1610 = !DIGlobalVariableExpression(var: !1611, expr: !DIExpression())
!1611 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1458, file: !1597, line: 1914, type: !1598, isLocal: false, isDefinition: true, align: 16)
!1612 = !DIGlobalVariableExpression(var: !1613, expr: !DIExpression())
!1613 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1458, file: !1597, line: 1914, type: !1503, isLocal: false, isDefinition: true, align: 32)
!1614 = !DIGlobalVariableExpression(var: !1615, expr: !DIExpression())
!1615 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1458, file: !1597, line: 1914, type: !1605, isLocal: true, isDefinition: true, align: 32)
!1616 = !DIGlobalVariableExpression(var: !1617, expr: !DIExpression())
!1617 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_50", scope: !1458, file: !1597, line: 1914, type: !1598, isLocal: false, isDefinition: true, align: 16)
!1618 = !DIGlobalVariableExpression(var: !1619, expr: !DIExpression())
!1619 = distinct !DIGlobalVariable(name: "__device_dts_ord_50", scope: !1458, file: !1597, line: 1914, type: !1503, isLocal: false, isDefinition: true, align: 32)
!1620 = !DIGlobalVariableExpression(var: !1621, expr: !DIExpression())
!1621 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_50", scope: !1458, file: !1597, line: 1914, type: !1605, isLocal: true, isDefinition: true, align: 32)
!1622 = !DIGlobalVariableExpression(var: !1623, expr: !DIExpression())
!1623 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_47", scope: !1458, file: !1597, line: 1914, type: !1511, isLocal: true, isDefinition: true, align: 8)
!1624 = !DIGlobalVariableExpression(var: !1625, expr: !DIExpression())
!1625 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1458, file: !1597, line: 1914, type: !1511, isLocal: true, isDefinition: true, align: 8)
!1626 = !DIGlobalVariableExpression(var: !1627, expr: !DIExpression())
!1627 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_50", scope: !1458, file: !1597, line: 1914, type: !1511, isLocal: true, isDefinition: true, align: 8)
!1628 = !DIGlobalVariableExpression(var: !1629, expr: !DIExpression())
!1629 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1458, file: !1597, line: 1914, type: !1630, isLocal: true, isDefinition: true)
!1630 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1631)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1632, line: 22, size: 224, elements: !1633)
!1632 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1633 = !{!1634, !1635, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1631, file: !1632, line: 24, baseType: !1543, size: 32)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1631, file: !1632, line: 26, baseType: !1636, size: 32, offset: 32)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 32)
!1637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1638)
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1006, line: 343, size: 64, elements: !1639)
!1639 = !{!1640, !1641}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1638, file: !1006, line: 344, baseType: !113, size: 32)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1638, file: !1006, line: 345, baseType: !113, size: 32, offset: 32)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1631, file: !1632, line: 28, baseType: !111, size: 32, offset: 64)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1631, file: !1632, line: 30, baseType: !492, size: 8, offset: 96)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1631, file: !1632, line: 32, baseType: !105, size: 32, offset: 128)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1631, file: !1632, line: 34, baseType: !492, size: 8, offset: 160)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1631, file: !1632, line: 36, baseType: !492, size: 8, offset: 168)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1631, file: !1632, line: 38, baseType: !492, size: 8, offset: 176)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1631, file: !1632, line: 40, baseType: !492, size: 8, offset: 184)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1631, file: !1632, line: 41, baseType: !1650, size: 32, offset: 192)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 32)
!1651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1652)
!1652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1653, line: 60, size: 64, elements: !1654)
!1653 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1654 = !{!1655, !1671}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1652, file: !1653, line: 69, baseType: !1656, size: 32)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 32)
!1657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1658)
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1653, line: 50, size: 64, elements: !1659)
!1659 = !{!1660, !1669, !1670}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1658, file: !1653, line: 52, baseType: !1661, size: 32)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 32)
!1662 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1663)
!1663 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1664, line: 37, baseType: !1665)
!1664 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1664, line: 32, size: 64, elements: !1666)
!1666 = !{!1667, !1668}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1665, file: !1664, line: 34, baseType: !113, size: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1665, file: !1664, line: 36, baseType: !113, size: 32, offset: 32)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1658, file: !1653, line: 54, baseType: !169, size: 8, offset: 32)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1658, file: !1653, line: 56, baseType: !169, size: 8, offset: 40)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1652, file: !1653, line: 71, baseType: !169, size: 8, offset: 32)
!1672 = !DIGlobalVariableExpression(var: !1673, expr: !DIExpression())
!1673 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1458, file: !1597, line: 1914, type: !1674, isLocal: true, isDefinition: true)
!1674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1637, size: 64, elements: !661)
!1675 = !DIGlobalVariableExpression(var: !1676, expr: !DIExpression())
!1676 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_47", scope: !1458, file: !1597, line: 1914, type: !1651, isLocal: true, isDefinition: true)
!1677 = !DIGlobalVariableExpression(var: !1678, expr: !DIExpression())
!1678 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_47", scope: !1458, file: !1597, line: 1914, type: !1679, isLocal: true, isDefinition: true)
!1679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1657, size: 64, elements: !661)
!1680 = !DIGlobalVariableExpression(var: !1681, expr: !DIExpression())
!1681 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_47", scope: !1458, file: !1597, line: 1914, type: !1682, isLocal: true, isDefinition: true)
!1682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1662, size: 128, elements: !158)
!1683 = !DIGlobalVariableExpression(var: !1684, expr: !DIExpression())
!1684 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1458, file: !1597, line: 1539, type: !1495, isLocal: true, isDefinition: true)
!1685 = !DIGlobalVariableExpression(var: !1686, expr: !DIExpression())
!1686 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1458, file: !1597, line: 1914, type: !1687, isLocal: true, isDefinition: true)
!1687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1632, line: 74, size: 64, elements: !1688)
!1688 = !{!1689, !1690}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1687, file: !1632, line: 76, baseType: !113, size: 32)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1687, file: !1632, line: 78, baseType: !1502, size: 32, offset: 32)
!1691 = !DIGlobalVariableExpression(var: !1692, expr: !DIExpression())
!1692 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1458, file: !1597, line: 1914, type: !1630, isLocal: true, isDefinition: true)
!1693 = !DIGlobalVariableExpression(var: !1694, expr: !DIExpression())
!1694 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1458, file: !1597, line: 1914, type: !1674, isLocal: true, isDefinition: true)
!1695 = !DIGlobalVariableExpression(var: !1696, expr: !DIExpression())
!1696 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1458, file: !1597, line: 1914, type: !1651, isLocal: true, isDefinition: true)
!1697 = !DIGlobalVariableExpression(var: !1698, expr: !DIExpression())
!1698 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1458, file: !1597, line: 1914, type: !1679, isLocal: true, isDefinition: true)
!1699 = !DIGlobalVariableExpression(var: !1700, expr: !DIExpression())
!1700 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1458, file: !1597, line: 1914, type: !1682, isLocal: true, isDefinition: true)
!1701 = !DIGlobalVariableExpression(var: !1702, expr: !DIExpression())
!1702 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1458, file: !1597, line: 1914, type: !1687, isLocal: true, isDefinition: true)
!1703 = !DIGlobalVariableExpression(var: !1704, expr: !DIExpression())
!1704 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1458, file: !1597, line: 1914, type: !1630, isLocal: true, isDefinition: true)
!1705 = !DIGlobalVariableExpression(var: !1706, expr: !DIExpression())
!1706 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1458, file: !1597, line: 1914, type: !1674, isLocal: true, isDefinition: true)
!1707 = !DIGlobalVariableExpression(var: !1708, expr: !DIExpression())
!1708 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_50", scope: !1458, file: !1597, line: 1914, type: !1651, isLocal: true, isDefinition: true)
!1709 = !DIGlobalVariableExpression(var: !1710, expr: !DIExpression())
!1710 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_50", scope: !1458, file: !1597, line: 1914, type: !1679, isLocal: true, isDefinition: true)
!1711 = !DIGlobalVariableExpression(var: !1712, expr: !DIExpression())
!1712 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_50", scope: !1458, file: !1597, line: 1914, type: !1682, isLocal: true, isDefinition: true)
!1713 = !DIGlobalVariableExpression(var: !1714, expr: !DIExpression())
!1714 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1458, file: !1597, line: 1914, type: !1687, isLocal: true, isDefinition: true)
!1715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1716)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !1717)
!1717 = !{!1718, !1719}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1716, file: !348, line: 17, baseType: !269, size: 32)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1716, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!1720 = !DIGlobalVariableExpression(var: !1721, expr: !DIExpression())
!1721 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1722, file: !1800, line: 65, type: !461, isLocal: true, isDefinition: true)
!1722 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1723, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1724, retainedTypes: !1725, globals: !1797, splitDebugInlining: false, nameTableKind: None)
!1723 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!1724 = !{!748}
!1725 = !{!107, !1726, !116, !169, !113, !1734, !1765}
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 32)
!1727 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !679, line: 770, baseType: !1728)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 764, size: 128, elements: !1729)
!1729 = !{!1730, !1731, !1732, !1733}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1728, file: !679, line: 766, baseType: !461, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1728, file: !679, line: 767, baseType: !461, size: 32, offset: 32)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1728, file: !679, line: 768, baseType: !461, size: 32, offset: 64)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1728, file: !679, line: 769, baseType: !683, size: 32, offset: 96)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 32)
!1735 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !679, line: 426, baseType: !1736)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 411, size: 28704, elements: !1737)
!1737 = !{!1738, !1740, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1755, !1760, !1764}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1736, file: !679, line: 413, baseType: !1739, size: 256)
!1739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !461, size: 256, elements: !1599)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1736, file: !679, line: 414, baseType: !1741, size: 768, offset: 256)
!1741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 768, elements: !1742)
!1742 = !{!1743}
!1743 = !DISubrange(count: 24)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1736, file: !679, line: 415, baseType: !1739, size: 256, offset: 1024)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1736, file: !679, line: 416, baseType: !1741, size: 768, offset: 1280)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1736, file: !679, line: 417, baseType: !1739, size: 256, offset: 2048)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1736, file: !679, line: 418, baseType: !1741, size: 768, offset: 2304)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1736, file: !679, line: 419, baseType: !1739, size: 256, offset: 3072)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1736, file: !679, line: 420, baseType: !1741, size: 768, offset: 3328)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1736, file: !679, line: 421, baseType: !1739, size: 256, offset: 4096)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1736, file: !679, line: 422, baseType: !1752, size: 1792, offset: 4352)
!1752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1792, elements: !1753)
!1753 = !{!1754}
!1754 = !DISubrange(count: 56)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1736, file: !679, line: 423, baseType: !1756, size: 1920, offset: 6144)
!1756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1757, size: 1920, elements: !1758)
!1757 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !169)
!1758 = !{!1759}
!1759 = !DISubrange(count: 240)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1736, file: !679, line: 424, baseType: !1761, size: 20608, offset: 8064)
!1761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 20608, elements: !1762)
!1762 = !{!1763}
!1763 = !DISubrange(count: 644)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1736, file: !679, line: 425, baseType: !461, size: 32, offset: 28672)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 32)
!1766 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !1767)
!1767 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !1768)
!1768 = !{!1769, !1770, !1771, !1772, !1773, !1774, !1775, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1788, !1789, !1790, !1792, !1794, !1796}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1767, file: !679, line: 447, baseType: !683, size: 32)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1767, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1767, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1767, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1767, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1767, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1767, file: !679, line: 453, baseType: !1776, size: 96, offset: 192)
!1776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1757, size: 96, elements: !1777)
!1777 = !{!1778}
!1778 = !DISubrange(count: 12)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1767, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1767, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1767, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1767, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1767, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1767, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1767, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1767, file: !679, line: 461, baseType: !1787, size: 64, offset: 512)
!1787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !683, size: 64, elements: !158)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1767, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1767, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1767, file: !679, line: 464, baseType: !1791, size: 128, offset: 640)
!1791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !683, size: 128, elements: !313)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1767, file: !679, line: 465, baseType: !1793, size: 160, offset: 768)
!1793 = !DICompositeType(tag: DW_TAG_array_type, baseType: !683, size: 160, elements: !1346)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1767, file: !679, line: 466, baseType: !1795, size: 160, offset: 928)
!1795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 160, elements: !1346)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1767, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!1797 = !{!1798, !1824, !1829, !1831, !1833, !1720}
!1798 = !DIGlobalVariableExpression(var: !1799, expr: !DIExpression())
!1799 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1722, file: !1800, line: 285, type: !1801, isLocal: true, isDefinition: true, align: 32)
!1800 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1802)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !1803)
!1803 = !{!1804, !1823}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1802, file: !472, line: 60, baseType: !1805, size: 32)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 32)
!1806 = !DISubroutineType(types: !1807)
!1807 = !{!105, !1808}
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 32)
!1809 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1810)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1811)
!1811 = !{!1812, !1813, !1814, !1815, !1821, !1822}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1810, file: !481, line: 380, baseType: !269, size: 32)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1810, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1810, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1810, file: !481, line: 386, baseType: !1816, size: 32, offset: 96)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 32)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1818)
!1818 = !{!1819, !1820}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1817, file: !481, line: 359, baseType: !169, size: 8)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1817, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1810, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1810, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1802, file: !472, line: 65, baseType: !1808, size: 32, offset: 32)
!1824 = !DIGlobalVariableExpression(var: !1825, expr: !DIExpression())
!1825 = distinct !DIGlobalVariable(name: "lock", scope: !1722, file: !1800, line: 34, type: !1826, isLocal: true, isDefinition: true)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !1827)
!1827 = !{!1828}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1826, file: !236, line: 52, baseType: !22, size: 32)
!1829 = !DIGlobalVariableExpression(var: !1830, expr: !DIExpression())
!1830 = distinct !DIGlobalVariable(name: "last_load", scope: !1722, file: !1800, line: 36, type: !113, isLocal: true, isDefinition: true)
!1831 = !DIGlobalVariableExpression(var: !1832, expr: !DIExpression())
!1832 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1722, file: !1800, line: 48, type: !113, isLocal: true, isDefinition: true)
!1833 = !DIGlobalVariableExpression(var: !1834, expr: !DIExpression())
!1834 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1722, file: !1800, line: 54, type: !113, isLocal: true, isDefinition: true)
!1835 = !DIGlobalVariableExpression(var: !1836, expr: !DIExpression())
!1836 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1837, file: !1919, line: 22, type: !1921, isLocal: true, isDefinition: true)
!1837 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1838, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1839, retainedTypes: !1840, globals: !1916, splitDebugInlining: false, nameTableKind: None)
!1838 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!1839 = !{!1155, !1161}
!1840 = !{!1841, !1905, !1910, !1208, !1161, !1155, !1915, !104}
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 32)
!1842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1843)
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1156, line: 523, size: 288, elements: !1844)
!1844 = !{!1845, !1864, !1868, !1872, !1876, !1877, !1878, !1882, !1901}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1843, file: !1156, line: 524, baseType: !1846, size: 32)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 32)
!1847 = !DISubroutineType(types: !1848)
!1848 = !{!105, !1849, !1196, !1197}
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 32)
!1850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1851)
!1851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1852)
!1852 = !{!1853, !1854, !1855, !1856, !1862, !1863}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1851, file: !481, line: 380, baseType: !269, size: 32)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1851, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1851, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1851, file: !481, line: 386, baseType: !1857, size: 32, offset: 96)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 32)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1859)
!1859 = !{!1860, !1861}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1858, file: !481, line: 359, baseType: !169, size: 8)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1858, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1851, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1851, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1843, file: !1156, line: 530, baseType: !1865, size: 32, offset: 32)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 32)
!1866 = !DISubroutineType(types: !1867)
!1867 = !{!105, !1849, !1202}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1843, file: !1156, line: 532, baseType: !1869, size: 32, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 32)
!1870 = !DISubroutineType(types: !1871)
!1871 = !{!105, !1849, !1208, !1203}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1843, file: !1156, line: 535, baseType: !1873, size: 32, offset: 96)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 32)
!1874 = !DISubroutineType(types: !1875)
!1875 = !{!105, !1849, !1208}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1843, file: !1156, line: 537, baseType: !1873, size: 32, offset: 128)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1843, file: !1156, line: 539, baseType: !1873, size: 32, offset: 160)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1843, file: !1156, line: 541, baseType: !1879, size: 32, offset: 192)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 32)
!1880 = !DISubroutineType(types: !1881)
!1881 = !{!105, !1849, !1196, !1155, !1161}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1843, file: !1156, line: 544, baseType: !1883, size: 32, offset: 224)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 32)
!1884 = !DISubroutineType(types: !1885)
!1885 = !{!105, !1849, !1886, !492}
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 32)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1156, line: 478, size: 96, elements: !1888)
!1888 = !{!1889, !1895, !1900}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1887, file: !1156, line: 482, baseType: !1890, size: 32)
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1228, line: 33, baseType: !1891)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1228, line: 29, size: 32, elements: !1892)
!1892 = !{!1893}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1891, file: !1228, line: 30, baseType: !1894, size: 32)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 32)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1887, file: !1156, line: 485, baseType: !1896, size: 32, offset: 32)
!1896 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1156, line: 464, baseType: !1897)
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1898, size: 32)
!1898 = !DISubroutineType(types: !1899)
!1899 = !{null, !1849, !1886, !1208}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1887, file: !1156, line: 493, baseType: !1208, size: 32, offset: 64)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1843, file: !1156, line: 547, baseType: !1902, size: 32, offset: 256)
!1902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 32)
!1903 = !DISubroutineType(types: !1904)
!1904 = !{!113, !1849}
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 32)
!1906 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1907)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1156, line: 428, size: 32, elements: !1908)
!1908 = !{!1909}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1907, file: !1156, line: 434, baseType: !1208, size: 32)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 32)
!1911 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1912)
!1912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1156, line: 441, size: 32, elements: !1913)
!1913 = !{!1914}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1912, file: !1156, line: 447, baseType: !1208, size: 32)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 32)
!1916 = !{!1917, !1835}
!1917 = !DIGlobalVariableExpression(var: !1918, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1918 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1837, file: !1919, line: 37, type: !1920, isLocal: true, isDefinition: true)
!1919 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1920 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !111)
!1921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1922, size: 352, elements: !1923)
!1922 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1849)
!1923 = !{!1924}
!1924 = !DISubrange(count: 11)
!1925 = !DIGlobalVariableExpression(var: !1926, expr: !DIExpression())
!1926 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1927, file: !1969, line: 139, type: !1974, isLocal: false, isDefinition: true)
!1927 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1928, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1929, globals: !1966, splitDebugInlining: false, nameTableKind: None)
!1928 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!1929 = !{!1930}
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 32)
!1931 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 369, baseType: !1932)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 335, size: 1152, elements: !1933)
!1933 = !{!1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1932, file: !457, line: 337, baseType: !461, size: 32)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1932, file: !457, line: 338, baseType: !461, size: 32, offset: 32)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1932, file: !457, line: 339, baseType: !461, size: 32, offset: 64)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1932, file: !457, line: 340, baseType: !461, size: 32, offset: 96)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1932, file: !457, line: 341, baseType: !461, size: 32, offset: 128)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1932, file: !457, line: 342, baseType: !461, size: 32, offset: 160)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1932, file: !457, line: 343, baseType: !461, size: 32, offset: 192)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1932, file: !457, line: 344, baseType: !113, size: 32, offset: 224)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1932, file: !457, line: 345, baseType: !461, size: 32, offset: 256)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1932, file: !457, line: 346, baseType: !461, size: 32, offset: 288)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1932, file: !457, line: 347, baseType: !981, size: 64, offset: 320)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1932, file: !457, line: 348, baseType: !461, size: 32, offset: 384)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1932, file: !457, line: 349, baseType: !461, size: 32, offset: 416)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1932, file: !457, line: 350, baseType: !461, size: 32, offset: 448)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1932, file: !457, line: 351, baseType: !113, size: 32, offset: 480)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1932, file: !457, line: 352, baseType: !461, size: 32, offset: 512)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1932, file: !457, line: 353, baseType: !461, size: 32, offset: 544)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1932, file: !457, line: 354, baseType: !981, size: 64, offset: 576)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1932, file: !457, line: 355, baseType: !461, size: 32, offset: 640)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1932, file: !457, line: 356, baseType: !461, size: 32, offset: 672)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1932, file: !457, line: 357, baseType: !461, size: 32, offset: 704)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1932, file: !457, line: 358, baseType: !113, size: 32, offset: 736)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1932, file: !457, line: 359, baseType: !461, size: 32, offset: 768)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1932, file: !457, line: 360, baseType: !461, size: 32, offset: 800)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1932, file: !457, line: 361, baseType: !981, size: 64, offset: 832)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1932, file: !457, line: 362, baseType: !461, size: 32, offset: 896)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1932, file: !457, line: 363, baseType: !461, size: 32, offset: 928)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1932, file: !457, line: 364, baseType: !981, size: 64, offset: 960)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1932, file: !457, line: 365, baseType: !461, size: 32, offset: 1024)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1932, file: !457, line: 366, baseType: !461, size: 32, offset: 1056)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1932, file: !457, line: 367, baseType: !1002, size: 32, offset: 1088)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1932, file: !457, line: 368, baseType: !461, size: 32, offset: 1120)
!1966 = !{!1967, !1970, !1925}
!1967 = !DIGlobalVariableExpression(var: !1968, expr: !DIExpression())
!1968 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1927, file: !1969, line: 137, type: !113, isLocal: false, isDefinition: true)
!1969 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1970 = !DIGlobalVariableExpression(var: !1971, expr: !DIExpression())
!1971 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1927, file: !1969, line: 138, type: !1972, isLocal: false, isDefinition: true)
!1972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1973, size: 128, elements: !311)
!1973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !169)
!1974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1973, size: 64, elements: !1599)
!1975 = !DIGlobalVariableExpression(var: !1976, expr: !DIExpression())
!1976 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1977, file: !1980, line: 23, type: !1981, isLocal: false, isDefinition: true)
!1977 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1978, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, globals: !1979, splitDebugInlining: false, nameTableKind: None)
!1978 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!1979 = !{!1975}
!1980 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !105)
!1982 = !DIGlobalVariableExpression(var: !1983, expr: !DIExpression())
!1983 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1984, file: !1988, line: 37, type: !2241, isLocal: false, isDefinition: true)
!1984 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1985, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1986, retainedTypes: !1995, globals: !2068, splitDebugInlining: false, nameTableKind: None)
!1985 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!1986 = !{!1987, !30, !748}
!1987 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1988, line: 63, baseType: !32, size: 32, elements: !1989)
!1988 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1989 = !{!1990, !1991, !1992, !1993, !1994}
!1990 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1991 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1992 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1993 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1994 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1995 = !{!111, !104, !105, !1996, !102, !113, !2026, !116, !169, !2051}
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 32)
!1997 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1998)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1999, line: 51, size: 64, elements: !2000)
!1999 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2000 = !{!2001, !2021}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1998, file: !1999, line: 52, baseType: !2002, size: 32)
!2002 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1999, line: 38, baseType: !2003)
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 32)
!2004 = !DISubroutineType(types: !2005)
!2005 = !{!105, !2006, !432, !183}
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 32)
!2007 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2008)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !2009)
!2009 = !{!2010, !2011, !2012, !2013, !2019, !2020}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2008, file: !481, line: 380, baseType: !269, size: 32)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2008, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2008, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2008, file: !481, line: 386, baseType: !2014, size: 32, offset: 96)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 32)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !2016)
!2016 = !{!2017, !2018}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2015, file: !481, line: 359, baseType: !169, size: 8)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2015, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2008, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2008, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1998, file: !1999, line: 53, baseType: !2022, size: 32, offset: 32)
!2022 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1999, line: 47, baseType: !2023)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 32)
!2024 = !DISubroutineType(types: !2025)
!2025 = !{!105, !2006, !432, !183, !113}
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 32)
!2027 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2028)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2029)
!2029 = !{!2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2028, file: !679, line: 447, baseType: !683, size: 32)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2028, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2028, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2028, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2028, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2028, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2028, file: !679, line: 453, baseType: !1776, size: 96, offset: 192)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2028, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2028, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2028, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2028, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2028, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2028, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2028, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2028, file: !679, line: 461, baseType: !1787, size: 64, offset: 512)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2028, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2028, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2028, file: !679, line: 464, baseType: !1791, size: 128, offset: 640)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2028, file: !679, line: 465, baseType: !1793, size: 160, offset: 768)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2028, file: !679, line: 466, baseType: !1795, size: 160, offset: 928)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2028, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 32)
!2052 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !679, line: 426, baseType: !2053)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 411, size: 28704, elements: !2054)
!2054 = !{!2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2053, file: !679, line: 413, baseType: !1739, size: 256)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2053, file: !679, line: 414, baseType: !1741, size: 768, offset: 256)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2053, file: !679, line: 415, baseType: !1739, size: 256, offset: 1024)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2053, file: !679, line: 416, baseType: !1741, size: 768, offset: 1280)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2053, file: !679, line: 417, baseType: !1739, size: 256, offset: 2048)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2053, file: !679, line: 418, baseType: !1741, size: 768, offset: 2304)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2053, file: !679, line: 419, baseType: !1739, size: 256, offset: 3072)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2053, file: !679, line: 420, baseType: !1741, size: 768, offset: 3328)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2053, file: !679, line: 421, baseType: !1739, size: 256, offset: 4096)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2053, file: !679, line: 422, baseType: !1752, size: 1792, offset: 4352)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2053, file: !679, line: 423, baseType: !1756, size: 1920, offset: 6144)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2053, file: !679, line: 424, baseType: !1761, size: 20608, offset: 8064)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2053, file: !679, line: 425, baseType: !461, size: 32, offset: 28672)
!2068 = !{!1982, !2069, !2194, !2202, !2204, !2207, !2211, !2213, !2218}
!2069 = !DIGlobalVariableExpression(var: !2070, expr: !DIExpression())
!2070 = distinct !DIGlobalVariable(name: "_kernel", scope: !1984, file: !1988, line: 40, type: !2071, isLocal: false, isDefinition: true)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !163, line: 158, size: 320, elements: !2072)
!2072 = !{!2073, !2189}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2071, file: !163, line: 159, baseType: !2074, size: 224)
!2074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2075, size: 224, elements: !661)
!2075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !163, line: 100, size: 224, elements: !2076)
!2076 = !{!2077, !2078, !2079, !2182, !2183, !2184, !2185, !2186}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2075, file: !163, line: 102, baseType: !113, size: 32)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2075, file: !163, line: 105, baseType: !102, size: 32, offset: 32)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2075, file: !163, line: 108, baseType: !2080, size: 32, offset: 64)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 32)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !2082)
!2082 = !{!2083, !2141, !2153, !2154, !2155, !2156, !2162, !2177}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2081, file: !127, line: 247, baseType: !2084, size: 384)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !2085)
!2085 = !{!2086, !2110, !2117, !2118, !2119, !2128, !2129, !2130}
!2086 = !DIDerivedType(tag: DW_TAG_member, scope: !2084, file: !127, line: 60, baseType: !2087, size: 64)
!2087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2084, file: !127, line: 60, size: 64, elements: !2088)
!2088 = !{!2089, !2104}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2087, file: !127, line: 61, baseType: !2090, size: 64)
!2090 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2091)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2092)
!2092 = !{!2093, !2099}
!2093 = !DIDerivedType(tag: DW_TAG_member, scope: !2091, file: !137, line: 38, baseType: !2094, size: 32)
!2094 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2091, file: !137, line: 38, size: 32, elements: !2095)
!2095 = !{!2096, !2098}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2094, file: !137, line: 39, baseType: !2097, size: 32)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2094, file: !137, line: 40, baseType: !2097, size: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, scope: !2091, file: !137, line: 42, baseType: !2100, size: 32, offset: 32)
!2100 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2091, file: !137, line: 42, size: 32, elements: !2101)
!2101 = !{!2102, !2103}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2100, file: !137, line: 43, baseType: !2097, size: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2100, file: !137, line: 44, baseType: !2097, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2087, file: !127, line: 62, baseType: !2105, size: 64)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !2106)
!2106 = !{!2107}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2105, file: !153, line: 50, baseType: !2108, size: 64)
!2108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2109, size: 64, elements: !158)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 32)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2084, file: !127, line: 68, baseType: !2111, size: 32, offset: 64)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 32)
!2112 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !2113)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !2114)
!2114 = !{!2115}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2113, file: !163, line: 232, baseType: !2116, size: 64)
!2116 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2091)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2084, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2084, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!2119 = !DIDerivedType(tag: DW_TAG_member, scope: !2084, file: !127, line: 90, baseType: !2120, size: 16, offset: 112)
!2120 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2084, file: !127, line: 90, size: 16, elements: !2121)
!2121 = !{!2122, !2127}
!2122 = !DIDerivedType(tag: DW_TAG_member, scope: !2120, file: !127, line: 91, baseType: !2123, size: 16)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2120, file: !127, line: 91, size: 16, elements: !2124)
!2124 = !{!2125, !2126}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2123, file: !127, line: 96, baseType: !179, size: 8)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2123, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2120, file: !127, line: 100, baseType: !183, size: 16)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2084, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2084, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2084, file: !127, line: 131, baseType: !2131, size: 192, offset: 192)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2132)
!2132 = !{!2133, !2134, !2140}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2131, file: !163, line: 245, baseType: !2090, size: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2131, file: !163, line: 246, baseType: !2135, size: 32, offset: 64)
!2135 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2136)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 32)
!2137 = !DISubroutineType(types: !2138)
!2138 = !{null, !2139}
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 32)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2131, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2081, file: !127, line: 250, baseType: !2142, size: 288, offset: 384)
!2142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !2143)
!2143 = !{!2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2142, file: !200, line: 26, baseType: !113, size: 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2142, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2142, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2142, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2142, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2142, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2142, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2142, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2142, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2081, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2081, file: !127, line: 256, baseType: !2112, size: 64, offset: 704)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2081, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2081, file: !127, line: 300, baseType: !2157, size: 96, offset: 800)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !2158)
!2158 = !{!2159, !2160, !2161}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2157, file: !127, line: 153, baseType: !22, size: 32)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2157, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2157, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2081, file: !127, line: 325, baseType: !2163, size: 32, offset: 896)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 32)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !2165)
!2165 = !{!2166, !2172, !2173}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2164, file: !122, line: 5074, baseType: !2167, size: 96)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !2168)
!2168 = !{!2169, !2170, !2171}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2167, file: !226, line: 57, baseType: !229, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2167, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2167, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2164, file: !122, line: 5075, baseType: !2112, size: 64, offset: 96)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2164, file: !122, line: 5076, baseType: !2174, size: 32, offset: 160)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2175)
!2175 = !{!2176}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2174, file: !236, line: 52, baseType: !22, size: 32)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2081, file: !127, line: 343, baseType: !2178, size: 64, offset: 928)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !2179)
!2179 = !{!2180, !2181}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2178, file: !200, line: 63, baseType: !113, size: 32)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2178, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2075, file: !163, line: 111, baseType: !2080, size: 32, offset: 96)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "metairq_preempted", scope: !2075, file: !163, line: 119, baseType: !2080, size: 32, offset: 128)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2075, file: !163, line: 124, baseType: !105, size: 32, offset: 160)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2075, file: !163, line: 127, baseType: !169, size: 8, offset: 192)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2075, file: !163, line: 153, baseType: !2187, offset: 200)
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2188, line: 33, elements: !397)
!2188 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2071, file: !163, line: 170, baseType: !2190, size: 96, offset: 224)
!2190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !163, line: 83, size: 96, elements: !2191)
!2191 = !{!2192, !2193}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2190, file: !163, line: 86, baseType: !2080, size: 32)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2190, file: !163, line: 90, baseType: !2116, size: 64, offset: 32)
!2194 = !DIGlobalVariableExpression(var: !2195, expr: !DIExpression())
!2195 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1984, file: !1988, line: 43, type: !2196, isLocal: false, isDefinition: true, align: 512)
!2196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2197, size: 8704, elements: !2200)
!2197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !2198)
!2198 = !{!2199}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2197, file: !249, line: 48, baseType: !103, size: 8)
!2200 = !{!2201}
!2201 = !DISubrange(count: 1088)
!2202 = !DIGlobalVariableExpression(var: !2203, expr: !DIExpression())
!2203 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1984, file: !1988, line: 44, type: !2081, isLocal: false, isDefinition: true)
!2204 = !DIGlobalVariableExpression(var: !2205, expr: !DIExpression())
!2205 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1984, file: !1988, line: 48, type: !2206, isLocal: false, isDefinition: true)
!2206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2081, size: 1024, elements: !661)
!2207 = !DIGlobalVariableExpression(var: !2208, expr: !DIExpression())
!2208 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1984, file: !1988, line: 86, type: !2209, isLocal: false, isDefinition: true, align: 512)
!2209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2197, size: 16896, elements: !2210)
!2210 = !{!662, !319}
!2211 = !DIGlobalVariableExpression(var: !2212, expr: !DIExpression())
!2212 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1984, file: !1988, line: 217, type: !492, isLocal: false, isDefinition: true)
!2213 = !DIGlobalVariableExpression(var: !2214, expr: !DIExpression())
!2214 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1984, file: !1988, line: 50, type: !2215, isLocal: true, isDefinition: true, align: 512)
!2215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2197, size: 3072, elements: !2216)
!2216 = !{!662, !2217}
!2217 = !DISubrange(count: 384)
!2218 = !DIGlobalVariableExpression(var: !2219, expr: !DIExpression())
!2219 = distinct !DIGlobalVariable(name: "levels", scope: !2220, file: !1988, line: 232, type: !2240, isLocal: true, isDefinition: true)
!2220 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1988, file: !1988, line: 230, type: !2221, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1984, retainedNodes: !2223)
!2221 = !DISubroutineType(types: !2222)
!2222 = !{null, !1987}
!2223 = !{!2224, !2225, !2235, !2239}
!2224 = !DILocalVariable(name: "level", arg: 1, scope: !2220, file: !1988, line: 230, type: !1987)
!2225 = !DILocalVariable(name: "entry", scope: !2220, file: !1988, line: 244, type: !2226)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 32)
!2227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2228)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !2229)
!2229 = !{!2230, !2234}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2228, file: !472, line: 60, baseType: !2231, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2232, size: 32)
!2232 = !DISubroutineType(types: !2233)
!2233 = !{!105, !2006}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2228, file: !472, line: 65, baseType: !2006, size: 32, offset: 32)
!2235 = !DILocalVariable(name: "dev", scope: !2236, file: !1988, line: 247, type: !2006)
!2236 = distinct !DILexicalBlock(scope: !2237, file: !1988, line: 246, column: 64)
!2237 = distinct !DILexicalBlock(scope: !2238, file: !1988, line: 246, column: 2)
!2238 = distinct !DILexicalBlock(scope: !2220, file: !1988, line: 246, column: 2)
!2239 = !DILocalVariable(name: "rc", scope: !2236, file: !1988, line: 248, type: !105)
!2240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2226, size: 192, elements: !1355)
!2241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2242)
!2242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !2243)
!2243 = !{!2244, !2245}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2242, file: !348, line: 17, baseType: !269, size: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2242, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!2246 = !DIGlobalVariableExpression(var: !2247, expr: !DIExpression())
!2247 = distinct !DIGlobalVariable(name: "states_str", scope: !2248, file: !2249, line: 276, type: !2372, isLocal: true, isDefinition: true)
!2248 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2249, file: !2249, line: 271, type: !2250, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !2363)
!2249 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2250 = !DISubroutineType(types: !2251)
!2251 = !{!269, !2252, !102, !111}
!2252 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !2253)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 32)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !2255)
!2255 = !{!2256, !2314, !2326, !2327, !2328, !2329, !2335, !2350}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2254, file: !127, line: 247, baseType: !2257, size: 384)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !2258)
!2258 = !{!2259, !2283, !2290, !2291, !2292, !2301, !2302, !2303}
!2259 = !DIDerivedType(tag: DW_TAG_member, scope: !2257, file: !127, line: 60, baseType: !2260, size: 64)
!2260 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2257, file: !127, line: 60, size: 64, elements: !2261)
!2261 = !{!2262, !2277}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2260, file: !127, line: 61, baseType: !2263, size: 64)
!2263 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2264)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2265)
!2265 = !{!2266, !2272}
!2266 = !DIDerivedType(tag: DW_TAG_member, scope: !2264, file: !137, line: 38, baseType: !2267, size: 32)
!2267 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2264, file: !137, line: 38, size: 32, elements: !2268)
!2268 = !{!2269, !2271}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2267, file: !137, line: 39, baseType: !2270, size: 32)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 32)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2267, file: !137, line: 40, baseType: !2270, size: 32)
!2272 = !DIDerivedType(tag: DW_TAG_member, scope: !2264, file: !137, line: 42, baseType: !2273, size: 32, offset: 32)
!2273 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2264, file: !137, line: 42, size: 32, elements: !2274)
!2274 = !{!2275, !2276}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2273, file: !137, line: 43, baseType: !2270, size: 32)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2273, file: !137, line: 44, baseType: !2270, size: 32)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2260, file: !127, line: 62, baseType: !2278, size: 64)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !2279)
!2279 = !{!2280}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2278, file: !153, line: 50, baseType: !2281, size: 64)
!2281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2282, size: 64, elements: !158)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 32)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2257, file: !127, line: 68, baseType: !2284, size: 32, offset: 64)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 32)
!2285 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !2286)
!2286 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !2287)
!2287 = !{!2288}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2286, file: !163, line: 232, baseType: !2289, size: 64)
!2289 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2264)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2257, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2257, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!2292 = !DIDerivedType(tag: DW_TAG_member, scope: !2257, file: !127, line: 90, baseType: !2293, size: 16, offset: 112)
!2293 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2257, file: !127, line: 90, size: 16, elements: !2294)
!2294 = !{!2295, !2300}
!2295 = !DIDerivedType(tag: DW_TAG_member, scope: !2293, file: !127, line: 91, baseType: !2296, size: 16)
!2296 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2293, file: !127, line: 91, size: 16, elements: !2297)
!2297 = !{!2298, !2299}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2296, file: !127, line: 96, baseType: !179, size: 8)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2296, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2293, file: !127, line: 100, baseType: !183, size: 16)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2257, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2257, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2257, file: !127, line: 131, baseType: !2304, size: 192, offset: 192)
!2304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2305)
!2305 = !{!2306, !2307, !2313}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2304, file: !163, line: 245, baseType: !2263, size: 64)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2304, file: !163, line: 246, baseType: !2308, size: 32, offset: 64)
!2308 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2309)
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 32)
!2310 = !DISubroutineType(types: !2311)
!2311 = !{null, !2312}
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2304, size: 32)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2304, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2254, file: !127, line: 250, baseType: !2315, size: 288, offset: 384)
!2315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !2316)
!2316 = !{!2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2315, file: !200, line: 26, baseType: !113, size: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2315, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2315, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2315, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2315, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2315, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2315, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2315, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2315, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2254, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2254, file: !127, line: 256, baseType: !2285, size: 64, offset: 704)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2254, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2254, file: !127, line: 300, baseType: !2330, size: 96, offset: 800)
!2330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !2331)
!2331 = !{!2332, !2333, !2334}
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2330, file: !127, line: 153, baseType: !22, size: 32)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2330, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2330, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2254, file: !127, line: 325, baseType: !2336, size: 32, offset: 896)
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 32)
!2337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !2338)
!2338 = !{!2339, !2345, !2346}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2337, file: !122, line: 5074, baseType: !2340, size: 96)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !2341)
!2341 = !{!2342, !2343, !2344}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2340, file: !226, line: 57, baseType: !229, size: 32)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2340, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2340, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2337, file: !122, line: 5075, baseType: !2285, size: 64, offset: 96)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2337, file: !122, line: 5076, baseType: !2347, size: 32, offset: 160)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2348)
!2348 = !{!2349}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2347, file: !236, line: 52, baseType: !22, size: 32)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2254, file: !127, line: 343, baseType: !2351, size: 64, offset: 928)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !2352)
!2352 = !{!2353, !2354}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2351, file: !200, line: 63, baseType: !113, size: 32)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2351, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!2355 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2356, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2357, globals: !2359, splitDebugInlining: false, nameTableKind: None)
!2356 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!2357 = !{!104, !269, !107, !169, !22, !105, !2358, !24, !111, !102, !113, !114}
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2263, size: 32)
!2359 = !{!2246, !2360}
!2360 = !DIGlobalVariableExpression(var: !2361, expr: !DIExpression())
!2361 = distinct !DIGlobalVariable(name: "states_sz", scope: !2248, file: !2249, line: 279, type: !2362, isLocal: true, isDefinition: true)
!2362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1920, size: 256, elements: !1599)
!2363 = !{!2364, !2365, !2366, !2367, !2368, !2369, !2370}
!2364 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2248, file: !2249, line: 271, type: !2252)
!2365 = !DILocalVariable(name: "buf", arg: 2, scope: !2248, file: !2249, line: 271, type: !102)
!2366 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2248, file: !2249, line: 271, type: !111)
!2367 = !DILocalVariable(name: "off", scope: !2248, file: !2249, line: 273, type: !111)
!2368 = !DILocalVariable(name: "bit", scope: !2248, file: !2249, line: 274, type: !169)
!2369 = !DILocalVariable(name: "thread_state", scope: !2248, file: !2249, line: 275, type: !169)
!2370 = !DILocalVariable(name: "index", scope: !2371, file: !2249, line: 293, type: !169)
!2371 = distinct !DILexicalBlock(scope: !2248, file: !2249, line: 293, column: 2)
!2372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 256, elements: !1599)
!2373 = !DIGlobalVariableExpression(var: !2374, expr: !DIExpression())
!2374 = distinct !DIGlobalVariable(name: "lock", scope: !2375, file: !2394, line: 39, type: !2395, isLocal: true, isDefinition: true)
!2375 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2376, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2377, globals: !2393, splitDebugInlining: false, nameTableKind: None)
!2376 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!2377 = !{!104, !492, !105, !2378}
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 32)
!2379 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2380)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2381)
!2381 = !{!2382, !2388}
!2382 = !DIDerivedType(tag: DW_TAG_member, scope: !2380, file: !137, line: 38, baseType: !2383, size: 32)
!2383 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2380, file: !137, line: 38, size: 32, elements: !2384)
!2384 = !{!2385, !2387}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2383, file: !137, line: 39, baseType: !2386, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 32)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2383, file: !137, line: 40, baseType: !2386, size: 32)
!2388 = !DIDerivedType(tag: DW_TAG_member, scope: !2380, file: !137, line: 42, baseType: !2389, size: 32, offset: 32)
!2389 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2380, file: !137, line: 42, size: 32, elements: !2390)
!2390 = !{!2391, !2392}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2389, file: !137, line: 43, baseType: !2386, size: 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2389, file: !137, line: 44, baseType: !2386, size: 32)
!2393 = !{!2373}
!2394 = !DIFile(filename: "zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2396)
!2396 = !{!2397}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2395, file: !236, line: 52, baseType: !22, size: 32)
!2398 = !DIGlobalVariableExpression(var: !2399, expr: !DIExpression())
!2399 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2400, file: !2510, line: 56, type: !2497, isLocal: false, isDefinition: true)
!2400 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2401, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2402, globals: !2507, splitDebugInlining: false, nameTableKind: None)
!2401 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!2402 = !{!2403, !102, !104, !2505, !432, !107, !116, !105, !113, !114, !2506}
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 32)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !2405)
!2405 = !{!2406, !2464, !2476, !2477, !2478, !2479, !2485, !2500}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2404, file: !127, line: 247, baseType: !2407, size: 384)
!2407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !2408)
!2408 = !{!2409, !2433, !2440, !2441, !2442, !2451, !2452, !2453}
!2409 = !DIDerivedType(tag: DW_TAG_member, scope: !2407, file: !127, line: 60, baseType: !2410, size: 64)
!2410 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2407, file: !127, line: 60, size: 64, elements: !2411)
!2411 = !{!2412, !2427}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2410, file: !127, line: 61, baseType: !2413, size: 64)
!2413 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2414)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2415)
!2415 = !{!2416, !2422}
!2416 = !DIDerivedType(tag: DW_TAG_member, scope: !2414, file: !137, line: 38, baseType: !2417, size: 32)
!2417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2414, file: !137, line: 38, size: 32, elements: !2418)
!2418 = !{!2419, !2421}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2417, file: !137, line: 39, baseType: !2420, size: 32)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2417, file: !137, line: 40, baseType: !2420, size: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, scope: !2414, file: !137, line: 42, baseType: !2423, size: 32, offset: 32)
!2423 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2414, file: !137, line: 42, size: 32, elements: !2424)
!2424 = !{!2425, !2426}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2423, file: !137, line: 43, baseType: !2420, size: 32)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2423, file: !137, line: 44, baseType: !2420, size: 32)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2410, file: !127, line: 62, baseType: !2428, size: 64)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !2429)
!2429 = !{!2430}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2428, file: !153, line: 50, baseType: !2431, size: 64)
!2431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2432, size: 64, elements: !158)
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 32)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2407, file: !127, line: 68, baseType: !2434, size: 32, offset: 64)
!2434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 32)
!2435 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !2436)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !2437)
!2437 = !{!2438}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2436, file: !163, line: 232, baseType: !2439, size: 64)
!2439 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2414)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2407, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2407, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!2442 = !DIDerivedType(tag: DW_TAG_member, scope: !2407, file: !127, line: 90, baseType: !2443, size: 16, offset: 112)
!2443 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2407, file: !127, line: 90, size: 16, elements: !2444)
!2444 = !{!2445, !2450}
!2445 = !DIDerivedType(tag: DW_TAG_member, scope: !2443, file: !127, line: 91, baseType: !2446, size: 16)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2443, file: !127, line: 91, size: 16, elements: !2447)
!2447 = !{!2448, !2449}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2446, file: !127, line: 96, baseType: !179, size: 8)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2446, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2443, file: !127, line: 100, baseType: !183, size: 16)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2407, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2407, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2407, file: !127, line: 131, baseType: !2454, size: 192, offset: 192)
!2454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2455)
!2455 = !{!2456, !2457, !2463}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2454, file: !163, line: 245, baseType: !2413, size: 64)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2454, file: !163, line: 246, baseType: !2458, size: 32, offset: 64)
!2458 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2459)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 32)
!2460 = !DISubroutineType(types: !2461)
!2461 = !{null, !2462}
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2454, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2404, file: !127, line: 250, baseType: !2465, size: 288, offset: 384)
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !2466)
!2466 = !{!2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2465, file: !200, line: 26, baseType: !113, size: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2465, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2465, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2465, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2465, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2465, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2465, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2465, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2465, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2404, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2404, file: !127, line: 256, baseType: !2435, size: 64, offset: 704)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2404, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2404, file: !127, line: 300, baseType: !2480, size: 96, offset: 800)
!2480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !2481)
!2481 = !{!2482, !2483, !2484}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2480, file: !127, line: 153, baseType: !22, size: 32)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2480, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2480, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2404, file: !127, line: 325, baseType: !2486, size: 32, offset: 896)
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2487, size: 32)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !2488)
!2488 = !{!2489, !2495, !2496}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2487, file: !122, line: 5074, baseType: !2490, size: 96)
!2490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !2491)
!2491 = !{!2492, !2493, !2494}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2490, file: !226, line: 57, baseType: !229, size: 32)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2490, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2490, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2487, file: !122, line: 5075, baseType: !2435, size: 64, offset: 96)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2487, file: !122, line: 5076, baseType: !2497, size: 32, offset: 160)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2498)
!2498 = !{!2499}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2497, file: !236, line: 52, baseType: !22, size: 32)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2404, file: !127, line: 343, baseType: !2501, size: 64, offset: 928)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !2502)
!2502 = !{!2503, !2504}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2501, file: !200, line: 63, baseType: !113, size: 32)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2501, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2432, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 32)
!2507 = !{!2398, !2508, !2511, !2513}
!2508 = !DIGlobalVariableExpression(var: !2509, expr: !DIExpression())
!2509 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2400, file: !2510, line: 404, type: !105, isLocal: true, isDefinition: true)
!2510 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2511 = !DIGlobalVariableExpression(var: !2512, expr: !DIExpression())
!2512 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2400, file: !2510, line: 405, type: !105, isLocal: true, isDefinition: true)
!2513 = !DIGlobalVariableExpression(var: !2514, expr: !DIExpression())
!2514 = distinct !DIGlobalVariable(name: "pending_current", scope: !2400, file: !2510, line: 425, type: !2403, isLocal: true, isDefinition: true)
!2515 = !DIGlobalVariableExpression(var: !2516, expr: !DIExpression())
!2516 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2517, file: !2547, line: 19, type: !2553, isLocal: true, isDefinition: true)
!2517 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2518, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2519, globals: !2544, splitDebugInlining: false, nameTableKind: None)
!2518 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!2519 = !{!107, !104, !116, !113, !114, !105, !2520, !102, !109}
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 32)
!2521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2522)
!2522 = !{!2523, !2538, !2543}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2521, file: !163, line: 245, baseType: !2524, size: 64)
!2524 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2525)
!2525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2526)
!2526 = !{!2527, !2533}
!2527 = !DIDerivedType(tag: DW_TAG_member, scope: !2525, file: !137, line: 38, baseType: !2528, size: 32)
!2528 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2525, file: !137, line: 38, size: 32, elements: !2529)
!2529 = !{!2530, !2532}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2528, file: !137, line: 39, baseType: !2531, size: 32)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2525, size: 32)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2528, file: !137, line: 40, baseType: !2531, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_member, scope: !2525, file: !137, line: 42, baseType: !2534, size: 32, offset: 32)
!2534 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2525, file: !137, line: 42, size: 32, elements: !2535)
!2535 = !{!2536, !2537}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2534, file: !137, line: 43, baseType: !2531, size: 32)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2534, file: !137, line: 44, baseType: !2531, size: 32)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2521, file: !163, line: 246, baseType: !2539, size: 32, offset: 64)
!2539 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2540)
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 32)
!2541 = !DISubroutineType(types: !2542)
!2542 = !{null, !2520}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2521, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2544 = !{!2545, !2515, !2548, !2550}
!2545 = !DIGlobalVariableExpression(var: !2546, expr: !DIExpression())
!2546 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2517, file: !2547, line: 15, type: !114, isLocal: true, isDefinition: true)
!2547 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2548 = !DIGlobalVariableExpression(var: !2549, expr: !DIExpression())
!2549 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2517, file: !2547, line: 25, type: !105, isLocal: true, isDefinition: true)
!2550 = !DIGlobalVariableExpression(var: !2551, expr: !DIExpression())
!2551 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2517, file: !2547, line: 17, type: !2552, isLocal: true, isDefinition: true)
!2552 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2525)
!2553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2554)
!2554 = !{!2555}
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2553, file: !236, line: 52, baseType: !22, size: 32)
!2556 = !DIGlobalVariableExpression(var: !2557, expr: !DIExpression())
!2557 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2558, file: !2577, line: 55, type: !2578, isLocal: true, isDefinition: true, align: 32)
!2558 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2559, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2560, globals: !2576, splitDebugInlining: false, nameTableKind: None)
!2559 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!2560 = !{!104, !107, !105, !2561}
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2563)
!2563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2564)
!2564 = !{!2565, !2571}
!2565 = !DIDerivedType(tag: DW_TAG_member, scope: !2563, file: !137, line: 38, baseType: !2566, size: 32)
!2566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2563, file: !137, line: 38, size: 32, elements: !2567)
!2567 = !{!2568, !2570}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2566, file: !137, line: 39, baseType: !2569, size: 32)
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 32)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2566, file: !137, line: 40, baseType: !2569, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_member, scope: !2563, file: !137, line: 42, baseType: !2572, size: 32, offset: 32)
!2572 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2563, file: !137, line: 42, size: 32, elements: !2573)
!2573 = !{!2574, !2575}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2572, file: !137, line: 43, baseType: !2569, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2572, file: !137, line: 44, baseType: !2569, size: 32)
!2576 = !{!2556}
!2577 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2579)
!2579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !2580)
!2580 = !{!2581, !2588}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2579, file: !472, line: 60, baseType: !2582, size: 32)
!2582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2583, size: 32)
!2583 = !DISubroutineType(types: !2584)
!2584 = !{!105, !2585}
!2585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 32)
!2586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2587)
!2587 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !472, line: 48, flags: DIFlagFwdDecl)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2579, file: !472, line: 65, baseType: !2585, size: 32, offset: 32)
!2589 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2590, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2590 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!2591 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2592, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2592 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!2593 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2594, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2595, retainedTypes: !2603, splitDebugInlining: false, nameTableKind: None)
!2594 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!2595 = !{!30, !2596}
!2596 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2597, line: 54, baseType: !32, size: 32, elements: !2598)
!2597 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2598 = !{!2599, !2600, !2601, !2602}
!2599 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2600 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2601 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2602 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2603 = !{!104, !111, !432, !24, !2604, !22, !2610, !105, !1010, !2625}
!2604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2605, size: 32)
!2605 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2597, line: 58, baseType: !2606)
!2606 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2597, line: 58, size: 64, elements: !2607)
!2607 = !{!2608}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2606, file: !2597, line: 58, baseType: !2609, size: 64)
!2609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 64, elements: !1599)
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 32)
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2597, line: 68, size: 128, elements: !2612)
!2612 = !{!2613, !2616, !2617, !2618}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2611, file: !2597, line: 69, baseType: !2614, size: 64)
!2614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2615, size: 64, elements: !158)
!2615 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2597, line: 61, baseType: !113)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2611, file: !2597, line: 70, baseType: !2615, size: 32, offset: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2611, file: !2597, line: 71, baseType: !113, size: 32, offset: 96)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2611, file: !2597, line: 77, baseType: !2619, offset: 128)
!2619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2620, elements: !2623)
!2620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2597, line: 64, size: 32, elements: !2621)
!2621 = !{!2622}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2620, file: !2597, line: 65, baseType: !2615, size: 32)
!2623 = !{!2624}
!2624 = !DISubrange(count: 0)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!2626 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2627, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2628, retainedTypes: !2648, splitDebugInlining: false, nameTableKind: None)
!2627 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!2628 = !{!2629, !2637}
!2629 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2630, line: 69, baseType: !32, size: 32, elements: !2631)
!2630 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2631 = !{!2632, !2633, !2634, !2635, !2636}
!2632 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2633 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2634 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2635 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2636 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2637 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2630, line: 56, baseType: !32, size: 32, elements: !2638)
!2638 = !{!2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647}
!2639 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2640 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2641 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2642 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2643 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2644 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2645 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2646 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2647 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2648 = !{!105, !2629, !2637, !2649, !180, !499, !2651, !2652, !170, !184, !269, !111, !104, !22, !32, !428, !2654, !2655, !106, !429, !110, !430, !2650, !2656, !2657, !2658, !2659}
!2649 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2630, line: 31, baseType: !2650)
!2650 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !110)
!2651 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !112, line: 329, baseType: !32)
!2652 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2630, line: 32, baseType: !2653)
!2653 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !115)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 32)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2650, size: 32)
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 32)
!2658 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !112, line: 145, baseType: !105)
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2658, size: 32)
!2660 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2661, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2661 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!2662 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2663, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2663 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!2664 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2665, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2666, splitDebugInlining: false, nameTableKind: None)
!2665 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!2666 = !{!269, !170, !105, !32}
!2667 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2668, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2669, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2668 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!2669 = !{!2670, !30}
!2670 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2671, line: 27, baseType: !32, size: 32, elements: !2672)
!2671 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2672 = !{!2673, !2674, !2675, !2676, !2677}
!2673 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2674 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2675 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2676 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2677 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2678 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2679, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2680, retainedTypes: !2681, splitDebugInlining: false, nameTableKind: None)
!2679 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!2680 = !{!748, !2670, !30}
!2681 = !{!911, !2682, !104, !105, !116, !113, !169, !2699}
!2682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2683, size: 32)
!2683 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !679, line: 426, baseType: !2684)
!2684 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 411, size: 28704, elements: !2685)
!2685 = !{!2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698}
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2684, file: !679, line: 413, baseType: !1739, size: 256)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2684, file: !679, line: 414, baseType: !1741, size: 768, offset: 256)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2684, file: !679, line: 415, baseType: !1739, size: 256, offset: 1024)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2684, file: !679, line: 416, baseType: !1741, size: 768, offset: 1280)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2684, file: !679, line: 417, baseType: !1739, size: 256, offset: 2048)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2684, file: !679, line: 418, baseType: !1741, size: 768, offset: 2304)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2684, file: !679, line: 419, baseType: !1739, size: 256, offset: 3072)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2684, file: !679, line: 420, baseType: !1741, size: 768, offset: 3328)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2684, file: !679, line: 421, baseType: !1739, size: 256, offset: 4096)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2684, file: !679, line: 422, baseType: !1752, size: 1792, offset: 4352)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2684, file: !679, line: 423, baseType: !1756, size: 1920, offset: 6144)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2684, file: !679, line: 424, baseType: !1761, size: 20608, offset: 8064)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2684, file: !679, line: 425, baseType: !461, size: 32, offset: 28672)
!2699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2700, size: 32)
!2700 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2701)
!2701 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2702)
!2702 = !{!2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723}
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2701, file: !679, line: 447, baseType: !683, size: 32)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2701, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2701, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2701, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2701, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2701, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2701, file: !679, line: 453, baseType: !1776, size: 96, offset: 192)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2701, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2701, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2701, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2701, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2701, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2701, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2701, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2701, file: !679, line: 461, baseType: !1787, size: 64, offset: 512)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2701, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2701, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2701, file: !679, line: 464, baseType: !1791, size: 128, offset: 640)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2701, file: !679, line: 465, baseType: !1793, size: 160, offset: 768)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2701, file: !679, line: 466, baseType: !1795, size: 160, offset: 928)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2701, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2724 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2725, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2725 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!2726 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2727, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2728, splitDebugInlining: false, nameTableKind: None)
!2727 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!2728 = !{!104, !105, !22, !2729}
!2729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2730, size: 32)
!2730 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2731)
!2731 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2732)
!2732 = !{!2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753}
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2731, file: !679, line: 447, baseType: !683, size: 32)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2731, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2731, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2731, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2731, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2731, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2731, file: !679, line: 453, baseType: !1776, size: 96, offset: 192)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2731, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2731, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2731, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2731, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2731, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2731, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2731, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2731, file: !679, line: 461, baseType: !1787, size: 64, offset: 512)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2731, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2731, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2731, file: !679, line: 464, baseType: !1791, size: 128, offset: 640)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2731, file: !679, line: 465, baseType: !1793, size: 160, offset: 768)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2731, file: !679, line: 466, baseType: !1795, size: 160, offset: 928)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2731, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2754 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2755, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2756, splitDebugInlining: false, nameTableKind: None)
!2755 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!2756 = !{!2757, !104, !105}
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2759)
!2759 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2760)
!2760 = !{!2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2759, file: !679, line: 447, baseType: !683, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2759, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2759, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2759, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2759, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2759, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2759, file: !679, line: 453, baseType: !1776, size: 96, offset: 192)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2759, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2759, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2759, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2759, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2759, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2759, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2759, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2759, file: !679, line: 461, baseType: !1787, size: 64, offset: 512)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2759, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2759, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2759, file: !679, line: 464, baseType: !1791, size: 128, offset: 640)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2759, file: !679, line: 465, baseType: !1793, size: 160, offset: 768)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2759, file: !679, line: 466, baseType: !1795, size: 160, offset: 928)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2759, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2782 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2783, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2784, splitDebugInlining: false, nameTableKind: None)
!2783 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!2784 = !{!2785, !113, !104, !105}
!2785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2786, size: 32)
!2786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2787, line: 98, size: 256, elements: !2788)
!2787 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2788 = !{!2789, !2794, !2799, !2804, !2809, !2814, !2819, !2824}
!2789 = !DIDerivedType(tag: DW_TAG_member, scope: !2786, file: !2787, line: 99, baseType: !2790, size: 32)
!2790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2786, file: !2787, line: 99, size: 32, elements: !2791)
!2791 = !{!2792, !2793}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2790, file: !2787, line: 99, baseType: !113, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2790, file: !2787, line: 99, baseType: !113, size: 32)
!2794 = !DIDerivedType(tag: DW_TAG_member, scope: !2786, file: !2787, line: 100, baseType: !2795, size: 32, offset: 32)
!2795 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2786, file: !2787, line: 100, size: 32, elements: !2796)
!2796 = !{!2797, !2798}
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2795, file: !2787, line: 100, baseType: !113, size: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2795, file: !2787, line: 100, baseType: !113, size: 32)
!2799 = !DIDerivedType(tag: DW_TAG_member, scope: !2786, file: !2787, line: 101, baseType: !2800, size: 32, offset: 64)
!2800 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2786, file: !2787, line: 101, size: 32, elements: !2801)
!2801 = !{!2802, !2803}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2800, file: !2787, line: 101, baseType: !113, size: 32)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2800, file: !2787, line: 101, baseType: !113, size: 32)
!2804 = !DIDerivedType(tag: DW_TAG_member, scope: !2786, file: !2787, line: 102, baseType: !2805, size: 32, offset: 96)
!2805 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2786, file: !2787, line: 102, size: 32, elements: !2806)
!2806 = !{!2807, !2808}
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2805, file: !2787, line: 102, baseType: !113, size: 32)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2805, file: !2787, line: 102, baseType: !113, size: 32)
!2809 = !DIDerivedType(tag: DW_TAG_member, scope: !2786, file: !2787, line: 103, baseType: !2810, size: 32, offset: 128)
!2810 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2786, file: !2787, line: 103, size: 32, elements: !2811)
!2811 = !{!2812, !2813}
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2810, file: !2787, line: 103, baseType: !113, size: 32)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2810, file: !2787, line: 103, baseType: !113, size: 32)
!2814 = !DIDerivedType(tag: DW_TAG_member, scope: !2786, file: !2787, line: 104, baseType: !2815, size: 32, offset: 160)
!2815 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2786, file: !2787, line: 104, size: 32, elements: !2816)
!2816 = !{!2817, !2818}
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2815, file: !2787, line: 104, baseType: !113, size: 32)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2815, file: !2787, line: 104, baseType: !113, size: 32)
!2819 = !DIDerivedType(tag: DW_TAG_member, scope: !2786, file: !2787, line: 105, baseType: !2820, size: 32, offset: 192)
!2820 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2786, file: !2787, line: 105, size: 32, elements: !2821)
!2821 = !{!2822, !2823}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2820, file: !2787, line: 105, baseType: !113, size: 32)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2820, file: !2787, line: 105, baseType: !113, size: 32)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2786, file: !2787, line: 106, baseType: !113, size: 32, offset: 224)
!2825 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2826, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2669, retainedTypes: !2827, splitDebugInlining: false, nameTableKind: None)
!2826 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!2827 = !{!2828, !104, !105, !2853, !2625, !113}
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2830)
!2830 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2831)
!2831 = !{!2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2830, file: !679, line: 447, baseType: !683, size: 32)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2830, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2830, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2830, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2830, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2830, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2830, file: !679, line: 453, baseType: !1776, size: 96, offset: 192)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2830, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2830, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2830, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2830, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2830, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2830, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2830, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2830, file: !679, line: 461, baseType: !1787, size: 64, offset: 512)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2830, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2830, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2830, file: !679, line: 464, baseType: !1791, size: 128, offset: 640)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2830, file: !679, line: 465, baseType: !1793, size: 160, offset: 768)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2830, file: !679, line: 466, baseType: !1795, size: 160, offset: 928)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2830, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2854, size: 32)
!2854 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2787, line: 141, baseType: !2855)
!2855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2787, line: 97, size: 256, elements: !2856)
!2856 = !{!2857}
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2855, file: !2787, line: 107, baseType: !2858, size: 256)
!2858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2787, line: 98, size: 256, elements: !2859)
!2859 = !{!2860, !2865, !2870, !2875, !2880, !2885, !2890, !2895}
!2860 = !DIDerivedType(tag: DW_TAG_member, scope: !2858, file: !2787, line: 99, baseType: !2861, size: 32)
!2861 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2858, file: !2787, line: 99, size: 32, elements: !2862)
!2862 = !{!2863, !2864}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2861, file: !2787, line: 99, baseType: !113, size: 32)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2861, file: !2787, line: 99, baseType: !113, size: 32)
!2865 = !DIDerivedType(tag: DW_TAG_member, scope: !2858, file: !2787, line: 100, baseType: !2866, size: 32, offset: 32)
!2866 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2858, file: !2787, line: 100, size: 32, elements: !2867)
!2867 = !{!2868, !2869}
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2866, file: !2787, line: 100, baseType: !113, size: 32)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2866, file: !2787, line: 100, baseType: !113, size: 32)
!2870 = !DIDerivedType(tag: DW_TAG_member, scope: !2858, file: !2787, line: 101, baseType: !2871, size: 32, offset: 64)
!2871 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2858, file: !2787, line: 101, size: 32, elements: !2872)
!2872 = !{!2873, !2874}
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2871, file: !2787, line: 101, baseType: !113, size: 32)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2871, file: !2787, line: 101, baseType: !113, size: 32)
!2875 = !DIDerivedType(tag: DW_TAG_member, scope: !2858, file: !2787, line: 102, baseType: !2876, size: 32, offset: 96)
!2876 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2858, file: !2787, line: 102, size: 32, elements: !2877)
!2877 = !{!2878, !2879}
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2876, file: !2787, line: 102, baseType: !113, size: 32)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2876, file: !2787, line: 102, baseType: !113, size: 32)
!2880 = !DIDerivedType(tag: DW_TAG_member, scope: !2858, file: !2787, line: 103, baseType: !2881, size: 32, offset: 128)
!2881 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2858, file: !2787, line: 103, size: 32, elements: !2882)
!2882 = !{!2883, !2884}
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2881, file: !2787, line: 103, baseType: !113, size: 32)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2881, file: !2787, line: 103, baseType: !113, size: 32)
!2885 = !DIDerivedType(tag: DW_TAG_member, scope: !2858, file: !2787, line: 104, baseType: !2886, size: 32, offset: 160)
!2886 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2858, file: !2787, line: 104, size: 32, elements: !2887)
!2887 = !{!2888, !2889}
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2886, file: !2787, line: 104, baseType: !113, size: 32)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2886, file: !2787, line: 104, baseType: !113, size: 32)
!2890 = !DIDerivedType(tag: DW_TAG_member, scope: !2858, file: !2787, line: 105, baseType: !2891, size: 32, offset: 192)
!2891 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2858, file: !2787, line: 105, size: 32, elements: !2892)
!2892 = !{!2893, !2894}
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2891, file: !2787, line: 105, baseType: !113, size: 32)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2891, file: !2787, line: 105, baseType: !113, size: 32)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2858, file: !2787, line: 106, baseType: !113, size: 32, offset: 224)
!2896 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2897, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1724, retainedTypes: !2898, splitDebugInlining: false, nameTableKind: None)
!2897 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!2898 = !{!911, !116, !169, !113, !2899, !2916}
!2899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2900, size: 32)
!2900 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !679, line: 426, baseType: !2901)
!2901 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 411, size: 28704, elements: !2902)
!2902 = !{!2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915}
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2901, file: !679, line: 413, baseType: !1739, size: 256)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2901, file: !679, line: 414, baseType: !1741, size: 768, offset: 256)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2901, file: !679, line: 415, baseType: !1739, size: 256, offset: 1024)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2901, file: !679, line: 416, baseType: !1741, size: 768, offset: 1280)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2901, file: !679, line: 417, baseType: !1739, size: 256, offset: 2048)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2901, file: !679, line: 418, baseType: !1741, size: 768, offset: 2304)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2901, file: !679, line: 419, baseType: !1739, size: 256, offset: 3072)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2901, file: !679, line: 420, baseType: !1741, size: 768, offset: 3328)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2901, file: !679, line: 421, baseType: !1739, size: 256, offset: 4096)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2901, file: !679, line: 422, baseType: !1752, size: 1792, offset: 4352)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2901, file: !679, line: 423, baseType: !1756, size: 1920, offset: 6144)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2901, file: !679, line: 424, baseType: !1761, size: 20608, offset: 8064)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2901, file: !679, line: 425, baseType: !461, size: 32, offset: 28672)
!2916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2917, size: 32)
!2917 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2918)
!2918 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2919)
!2919 = !{!2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940}
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2918, file: !679, line: 447, baseType: !683, size: 32)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2918, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2918, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2918, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2918, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2918, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2918, file: !679, line: 453, baseType: !1776, size: 96, offset: 192)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2918, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2918, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2918, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2918, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2918, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2918, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2918, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2918, file: !679, line: 461, baseType: !1787, size: 64, offset: 512)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2918, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2918, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2918, file: !679, line: 464, baseType: !1791, size: 128, offset: 640)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2918, file: !679, line: 465, baseType: !1793, size: 160, offset: 768)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2918, file: !679, line: 466, baseType: !1795, size: 160, offset: 928)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2918, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2941 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2942, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2943, splitDebugInlining: false, nameTableKind: None)
!2942 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!2943 = !{!2944, !104, !105}
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 32)
!2945 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2946)
!2946 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2947)
!2947 = !{!2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968}
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2946, file: !679, line: 447, baseType: !683, size: 32)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2946, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2946, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2946, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2946, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2946, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2946, file: !679, line: 453, baseType: !1776, size: 96, offset: 192)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2946, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2946, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2946, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2946, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2946, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2946, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2946, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2946, file: !679, line: 461, baseType: !1787, size: 64, offset: 512)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2946, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2946, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2946, file: !679, line: 464, baseType: !1791, size: 128, offset: 640)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2946, file: !679, line: 465, baseType: !1793, size: 160, offset: 768)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2946, file: !679, line: 466, baseType: !1795, size: 160, offset: 928)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2946, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2969 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2970, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2971, splitDebugInlining: false, nameTableKind: None)
!2970 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!2971 = !{!103, !102, !111, !1113, !2972, !170, !104}
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !170)
!2974 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2975, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2976, splitDebugInlining: false, nameTableKind: None)
!2975 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!2976 = !{!2977}
!2977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2978, size: 32)
!2978 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 369, baseType: !2979)
!2979 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 335, size: 1152, elements: !2980)
!2980 = !{!2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012}
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2979, file: !457, line: 337, baseType: !461, size: 32)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2979, file: !457, line: 338, baseType: !461, size: 32, offset: 32)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2979, file: !457, line: 339, baseType: !461, size: 32, offset: 64)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2979, file: !457, line: 340, baseType: !461, size: 32, offset: 96)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2979, file: !457, line: 341, baseType: !461, size: 32, offset: 128)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2979, file: !457, line: 342, baseType: !461, size: 32, offset: 160)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2979, file: !457, line: 343, baseType: !461, size: 32, offset: 192)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2979, file: !457, line: 344, baseType: !113, size: 32, offset: 224)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2979, file: !457, line: 345, baseType: !461, size: 32, offset: 256)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2979, file: !457, line: 346, baseType: !461, size: 32, offset: 288)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2979, file: !457, line: 347, baseType: !981, size: 64, offset: 320)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2979, file: !457, line: 348, baseType: !461, size: 32, offset: 384)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2979, file: !457, line: 349, baseType: !461, size: 32, offset: 416)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2979, file: !457, line: 350, baseType: !461, size: 32, offset: 448)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2979, file: !457, line: 351, baseType: !113, size: 32, offset: 480)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2979, file: !457, line: 352, baseType: !461, size: 32, offset: 512)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2979, file: !457, line: 353, baseType: !461, size: 32, offset: 544)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2979, file: !457, line: 354, baseType: !981, size: 64, offset: 576)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2979, file: !457, line: 355, baseType: !461, size: 32, offset: 640)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2979, file: !457, line: 356, baseType: !461, size: 32, offset: 672)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2979, file: !457, line: 357, baseType: !461, size: 32, offset: 704)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2979, file: !457, line: 358, baseType: !113, size: 32, offset: 736)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2979, file: !457, line: 359, baseType: !461, size: 32, offset: 768)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2979, file: !457, line: 360, baseType: !461, size: 32, offset: 800)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2979, file: !457, line: 361, baseType: !981, size: 64, offset: 832)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2979, file: !457, line: 362, baseType: !461, size: 32, offset: 896)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2979, file: !457, line: 363, baseType: !461, size: 32, offset: 928)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2979, file: !457, line: 364, baseType: !981, size: 64, offset: 960)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2979, file: !457, line: 365, baseType: !461, size: 32, offset: 1024)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2979, file: !457, line: 366, baseType: !461, size: 32, offset: 1056)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2979, file: !457, line: 367, baseType: !1002, size: 32, offset: 1088)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2979, file: !457, line: 368, baseType: !461, size: 32, offset: 1120)
!3013 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3014, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3014 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!3015 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3016, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3017, retainedTypes: !3033, splitDebugInlining: false, nameTableKind: None)
!3016 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!3017 = !{!3018, !3025, !3029}
!3018 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3019, line: 38, baseType: !32, size: 32, elements: !3020)
!3019 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3020 = !{!3021, !3022, !3023, !3024}
!3021 = !DIEnumerator(name: "HAL_OK", value: 0)
!3022 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3023 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3024 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3025 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !954, line: 184, baseType: !32, size: 32, elements: !3026)
!3026 = !{!3027, !3028}
!3027 = !DIEnumerator(name: "RESET", value: 0)
!3028 = !DIEnumerator(name: "SET", value: 1)
!3029 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !954, line: 190, baseType: !32, size: 32, elements: !3030)
!3030 = !{!3031, !3032}
!3031 = !DIEnumerator(name: "DISABLE", value: 0)
!3032 = !DIEnumerator(name: "ENABLE", value: 1)
!3033 = !{!104, !3034, !169, !113, !1593, !3070, !3076, !3087, !183, !3088, !114}
!3034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3035, size: 32)
!3035 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 369, baseType: !3036)
!3036 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 335, size: 1152, elements: !3037)
!3037 = !{!3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069}
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3036, file: !457, line: 337, baseType: !461, size: 32)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3036, file: !457, line: 338, baseType: !461, size: 32, offset: 32)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3036, file: !457, line: 339, baseType: !461, size: 32, offset: 64)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3036, file: !457, line: 340, baseType: !461, size: 32, offset: 96)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3036, file: !457, line: 341, baseType: !461, size: 32, offset: 128)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3036, file: !457, line: 342, baseType: !461, size: 32, offset: 160)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3036, file: !457, line: 343, baseType: !461, size: 32, offset: 192)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3036, file: !457, line: 344, baseType: !113, size: 32, offset: 224)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3036, file: !457, line: 345, baseType: !461, size: 32, offset: 256)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3036, file: !457, line: 346, baseType: !461, size: 32, offset: 288)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3036, file: !457, line: 347, baseType: !981, size: 64, offset: 320)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3036, file: !457, line: 348, baseType: !461, size: 32, offset: 384)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3036, file: !457, line: 349, baseType: !461, size: 32, offset: 416)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3036, file: !457, line: 350, baseType: !461, size: 32, offset: 448)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3036, file: !457, line: 351, baseType: !113, size: 32, offset: 480)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3036, file: !457, line: 352, baseType: !461, size: 32, offset: 512)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3036, file: !457, line: 353, baseType: !461, size: 32, offset: 544)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3036, file: !457, line: 354, baseType: !981, size: 64, offset: 576)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3036, file: !457, line: 355, baseType: !461, size: 32, offset: 640)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3036, file: !457, line: 356, baseType: !461, size: 32, offset: 672)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3036, file: !457, line: 357, baseType: !461, size: 32, offset: 704)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3036, file: !457, line: 358, baseType: !113, size: 32, offset: 736)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3036, file: !457, line: 359, baseType: !461, size: 32, offset: 768)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3036, file: !457, line: 360, baseType: !461, size: 32, offset: 800)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3036, file: !457, line: 361, baseType: !981, size: 64, offset: 832)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3036, file: !457, line: 362, baseType: !461, size: 32, offset: 896)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3036, file: !457, line: 363, baseType: !461, size: 32, offset: 928)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3036, file: !457, line: 364, baseType: !981, size: 64, offset: 960)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3036, file: !457, line: 365, baseType: !461, size: 32, offset: 1024)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3036, file: !457, line: 366, baseType: !461, size: 32, offset: 1056)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3036, file: !457, line: 367, baseType: !1002, size: 32, offset: 1088)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3036, file: !457, line: 368, baseType: !461, size: 32, offset: 1120)
!3070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3071, size: 32)
!3071 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !457, line: 329, baseType: !3072)
!3072 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 325, size: 64, elements: !3073)
!3073 = !{!3074, !3075}
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3072, file: !457, line: 327, baseType: !461, size: 32)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3072, file: !457, line: 328, baseType: !461, size: 32, offset: 32)
!3076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3077, size: 32)
!3077 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !457, line: 258, baseType: !3078)
!3078 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 249, size: 224, elements: !3079)
!3079 = !{!3080, !3081, !3082, !3083, !3084, !3085, !3086}
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3078, file: !457, line: 251, baseType: !461, size: 32)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3078, file: !457, line: 252, baseType: !461, size: 32, offset: 32)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3078, file: !457, line: 253, baseType: !461, size: 32, offset: 64)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3078, file: !457, line: 254, baseType: !461, size: 32, offset: 96)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3078, file: !457, line: 255, baseType: !461, size: 32, offset: 128)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3078, file: !457, line: 256, baseType: !461, size: 32, offset: 160)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3078, file: !457, line: 257, baseType: !461, size: 32, offset: 192)
!3087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 32)
!3088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3089, size: 32)
!3089 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !457, line: 275, baseType: !3090)
!3090 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 264, size: 320, elements: !3091)
!3091 = !{!3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100}
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3090, file: !457, line: 266, baseType: !461, size: 32)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3090, file: !457, line: 267, baseType: !461, size: 32, offset: 32)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3090, file: !457, line: 268, baseType: !461, size: 32, offset: 64)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3090, file: !457, line: 269, baseType: !461, size: 32, offset: 96)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3090, file: !457, line: 270, baseType: !461, size: 32, offset: 128)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3090, file: !457, line: 271, baseType: !461, size: 32, offset: 160)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3090, file: !457, line: 272, baseType: !461, size: 32, offset: 192)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3090, file: !457, line: 273, baseType: !461, size: 32, offset: 224)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3090, file: !457, line: 274, baseType: !1267, size: 64, offset: 256)
!3101 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3102, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3103, retainedTypes: !3104, splitDebugInlining: false, nameTableKind: None)
!3102 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!3103 = !{!953}
!3104 = !{!3105, !113, !3113, !3119, !3130}
!3105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3106, size: 32)
!3106 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !679, line: 770, baseType: !3107)
!3107 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 764, size: 128, elements: !3108)
!3108 = !{!3109, !3110, !3111, !3112}
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3107, file: !679, line: 766, baseType: !461, size: 32)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3107, file: !679, line: 767, baseType: !461, size: 32, offset: 32)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3107, file: !679, line: 768, baseType: !461, size: 32, offset: 64)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3107, file: !679, line: 769, baseType: !683, size: 32, offset: 96)
!3113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3114, size: 32)
!3114 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !457, line: 329, baseType: !3115)
!3115 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 325, size: 64, elements: !3116)
!3116 = !{!3117, !3118}
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3115, file: !457, line: 327, baseType: !461, size: 32)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3115, file: !457, line: 328, baseType: !461, size: 32, offset: 32)
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3120, size: 32)
!3120 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !457, line: 258, baseType: !3121)
!3121 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 249, size: 224, elements: !3122)
!3122 = !{!3123, !3124, !3125, !3126, !3127, !3128, !3129}
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3121, file: !457, line: 251, baseType: !461, size: 32)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3121, file: !457, line: 252, baseType: !461, size: 32, offset: 32)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3121, file: !457, line: 253, baseType: !461, size: 32, offset: 64)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3121, file: !457, line: 254, baseType: !461, size: 32, offset: 96)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3121, file: !457, line: 255, baseType: !461, size: 32, offset: 128)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3121, file: !457, line: 256, baseType: !461, size: 32, offset: 160)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3121, file: !457, line: 257, baseType: !461, size: 32, offset: 192)
!3130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3131, size: 32)
!3131 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 369, baseType: !3132)
!3132 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 335, size: 1152, elements: !3133)
!3133 = !{!3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3132, file: !457, line: 337, baseType: !461, size: 32)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3132, file: !457, line: 338, baseType: !461, size: 32, offset: 32)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3132, file: !457, line: 339, baseType: !461, size: 32, offset: 64)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3132, file: !457, line: 340, baseType: !461, size: 32, offset: 96)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3132, file: !457, line: 341, baseType: !461, size: 32, offset: 128)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3132, file: !457, line: 342, baseType: !461, size: 32, offset: 160)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3132, file: !457, line: 343, baseType: !461, size: 32, offset: 192)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3132, file: !457, line: 344, baseType: !113, size: 32, offset: 224)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3132, file: !457, line: 345, baseType: !461, size: 32, offset: 256)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3132, file: !457, line: 346, baseType: !461, size: 32, offset: 288)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3132, file: !457, line: 347, baseType: !981, size: 64, offset: 320)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3132, file: !457, line: 348, baseType: !461, size: 32, offset: 384)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3132, file: !457, line: 349, baseType: !461, size: 32, offset: 416)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3132, file: !457, line: 350, baseType: !461, size: 32, offset: 448)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3132, file: !457, line: 351, baseType: !113, size: 32, offset: 480)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3132, file: !457, line: 352, baseType: !461, size: 32, offset: 512)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3132, file: !457, line: 353, baseType: !461, size: 32, offset: 544)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3132, file: !457, line: 354, baseType: !981, size: 64, offset: 576)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3132, file: !457, line: 355, baseType: !461, size: 32, offset: 640)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3132, file: !457, line: 356, baseType: !461, size: 32, offset: 672)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3132, file: !457, line: 357, baseType: !461, size: 32, offset: 704)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3132, file: !457, line: 358, baseType: !113, size: 32, offset: 736)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3132, file: !457, line: 359, baseType: !461, size: 32, offset: 768)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3132, file: !457, line: 360, baseType: !461, size: 32, offset: 800)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3132, file: !457, line: 361, baseType: !981, size: 64, offset: 832)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3132, file: !457, line: 362, baseType: !461, size: 32, offset: 896)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3132, file: !457, line: 363, baseType: !461, size: 32, offset: 928)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3132, file: !457, line: 364, baseType: !981, size: 64, offset: 960)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3132, file: !457, line: 365, baseType: !461, size: 32, offset: 1024)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3132, file: !457, line: 366, baseType: !461, size: 32, offset: 1056)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3132, file: !457, line: 367, baseType: !1002, size: 32, offset: 1088)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3132, file: !457, line: 368, baseType: !461, size: 32, offset: 1120)
!3166 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3167, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3168, splitDebugInlining: false, nameTableKind: None)
!3167 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!3168 = !{!104, !111}
!3169 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3170, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3171, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!3170 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!3171 = !{!3172, !3179, !2670, !30}
!3172 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3173, line: 14, baseType: !32, size: 32, elements: !3174)
!3173 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3174 = !{!3175, !3176, !3177, !3178}
!3175 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3176 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3177 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3178 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3179 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3173, line: 42, baseType: !32, size: 32, elements: !3180)
!3180 = !{!3181, !3182, !3183, !3184, !3185, !3186}
!3181 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3182 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3183 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3184 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3185 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3186 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3187 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3188, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!3188 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!3189 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3190, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3191, splitDebugInlining: false, nameTableKind: None)
!3190 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!3191 = !{!104, !105, !3192, !3207}
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 32)
!3193 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !3194)
!3194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !3195)
!3195 = !{!3196, !3202}
!3196 = !DIDerivedType(tag: DW_TAG_member, scope: !3194, file: !137, line: 38, baseType: !3197, size: 32)
!3197 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3194, file: !137, line: 38, size: 32, elements: !3198)
!3198 = !{!3199, !3201}
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3197, file: !137, line: 39, baseType: !3200, size: 32)
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3194, size: 32)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3197, file: !137, line: 40, baseType: !3200, size: 32)
!3202 = !DIDerivedType(tag: DW_TAG_member, scope: !3194, file: !137, line: 42, baseType: !3203, size: 32, offset: 32)
!3203 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3194, file: !137, line: 42, size: 32, elements: !3204)
!3204 = !{!3205, !3206}
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3203, file: !137, line: 43, baseType: !3200, size: 32)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3203, file: !137, line: 44, baseType: !3200, size: 32)
!3207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3208, size: 32)
!3208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !3209)
!3209 = !{!3210, !3254, !3266, !3267, !3268, !3269, !3275, !3290}
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3208, file: !127, line: 247, baseType: !3211, size: 384)
!3211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !3212)
!3212 = !{!3213, !3223, !3230, !3231, !3232, !3241, !3242, !3243}
!3213 = !DIDerivedType(tag: DW_TAG_member, scope: !3211, file: !127, line: 60, baseType: !3214, size: 64)
!3214 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3211, file: !127, line: 60, size: 64, elements: !3215)
!3215 = !{!3216, !3217}
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3214, file: !127, line: 61, baseType: !3193, size: 64)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3214, file: !127, line: 62, baseType: !3218, size: 64)
!3218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !3219)
!3219 = !{!3220}
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3218, file: !153, line: 50, baseType: !3221, size: 64)
!3221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3222, size: 64, elements: !158)
!3222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3218, size: 32)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3211, file: !127, line: 68, baseType: !3224, size: 32, offset: 64)
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3225, size: 32)
!3225 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !3226)
!3226 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !3227)
!3227 = !{!3228}
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3226, file: !163, line: 232, baseType: !3229, size: 64)
!3229 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !3194)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3211, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3211, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!3232 = !DIDerivedType(tag: DW_TAG_member, scope: !3211, file: !127, line: 90, baseType: !3233, size: 16, offset: 112)
!3233 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3211, file: !127, line: 90, size: 16, elements: !3234)
!3234 = !{!3235, !3240}
!3235 = !DIDerivedType(tag: DW_TAG_member, scope: !3233, file: !127, line: 91, baseType: !3236, size: 16)
!3236 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3233, file: !127, line: 91, size: 16, elements: !3237)
!3237 = !{!3238, !3239}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3236, file: !127, line: 96, baseType: !179, size: 8)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3236, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3233, file: !127, line: 100, baseType: !183, size: 16)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3211, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3211, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3211, file: !127, line: 131, baseType: !3244, size: 192, offset: 192)
!3244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !3245)
!3245 = !{!3246, !3247, !3253}
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3244, file: !163, line: 245, baseType: !3193, size: 64)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3244, file: !163, line: 246, baseType: !3248, size: 32, offset: 64)
!3248 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !3249)
!3249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3250, size: 32)
!3250 = !DISubroutineType(types: !3251)
!3251 = !{null, !3252}
!3252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3244, size: 32)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3244, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3208, file: !127, line: 250, baseType: !3255, size: 288, offset: 384)
!3255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !3256)
!3256 = !{!3257, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265}
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3255, file: !200, line: 26, baseType: !113, size: 32)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3255, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3255, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3255, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3255, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3255, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3255, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3255, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3255, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3208, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3208, file: !127, line: 256, baseType: !3225, size: 64, offset: 704)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3208, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3208, file: !127, line: 300, baseType: !3270, size: 96, offset: 800)
!3270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !3271)
!3271 = !{!3272, !3273, !3274}
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3270, file: !127, line: 153, baseType: !22, size: 32)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3270, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3270, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3208, file: !127, line: 325, baseType: !3276, size: 32, offset: 896)
!3276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3277, size: 32)
!3277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !3278)
!3278 = !{!3279, !3285, !3286}
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3277, file: !122, line: 5074, baseType: !3280, size: 96)
!3280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !3281)
!3281 = !{!3282, !3283, !3284}
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3280, file: !226, line: 57, baseType: !229, size: 32)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3280, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3280, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3277, file: !122, line: 5075, baseType: !3225, size: 64, offset: 96)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3277, file: !122, line: 5076, baseType: !3287, size: 32, offset: 160)
!3287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !3288)
!3288 = !{!3289}
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3287, file: !236, line: 52, baseType: !22, size: 32)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3208, file: !127, line: 343, baseType: !3291, size: 64, offset: 928)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !3292)
!3292 = !{!3293, !3294}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3291, file: !200, line: 63, baseType: !113, size: 32)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3291, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!3295 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3296, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3297, splitDebugInlining: false, nameTableKind: None)
!3296 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!3297 = !{!22, !104, !105}
!3298 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3299, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!3299 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!3300 = !{!"Ubuntu clang version 14.0.6"}
!3301 = !{i32 7, !"Dwarf Version", i32 4}
!3302 = !{i32 2, !"Debug Info Version", i32 3}
!3303 = !{i32 1, !"wchar_size", i32 4}
!3304 = !{i32 1, !"min_enum_size", i32 4}
!3305 = !{i32 1, !"branch-target-enforcement", i32 0}
!3306 = !{i32 1, !"sign-return-address", i32 0}
!3307 = !{i32 1, !"sign-return-address-all", i32 0}
!3308 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3309 = !{i32 7, !"frame-pointer", i32 2}
!3310 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3311, file: !3311, line: 26, type: !266, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2589, retainedNodes: !397)
!3311 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3312 = !DILocation(line: 28, column: 1, scope: !3310)
!3313 = !{i64 2154450027, i64 2154450047, i64 2154450110}
!3314 = !DILocation(line: 29, column: 1, scope: !3310)
!3315 = !{i64 2154450442, i64 2154450462, i64 2154450525}
!3316 = !DILocation(line: 30, column: 1, scope: !3310)
!3317 = !{i64 2154450861, i64 2154450881, i64 2154450944}
!3318 = !DILocation(line: 31, column: 1, scope: !3310)
!3319 = !{i64 2154451280, i64 2154451300, i64 2154451363}
!3320 = !DILocation(line: 33, column: 1, scope: !3310)
!3321 = !{i64 2154451572, i64 2154451592, i64 2154451655}
!3322 = !DILocation(line: 35, column: 1, scope: !3310)
!3323 = !{i64 2154451897, i64 2154451917, i64 2154451980}
!3324 = !DILocation(line: 50, column: 1, scope: !3310)
!3325 = !{i64 2154452324, i64 2154452344, i64 2154452407}
!3326 = !DILocation(line: 54, column: 1, scope: !3310)
!3327 = !{i64 2154452763, i64 2154452783, i64 2154452846}
!3328 = !DILocation(line: 61, column: 1, scope: !3310)
!3329 = !{i64 2154453080, i64 2154453100, i64 2154453163}
!3330 = !DILocation(line: 63, column: 1, scope: !3310)
!3331 = !{i64 2154457521, i64 2154457541, i64 2154457604}
!3332 = !DILocation(line: 64, column: 1, scope: !3310)
!3333 = !{i64 2154458043, i64 2154458063, i64 2154458126}
!3334 = !DILocation(line: 65, column: 1, scope: !3310)
!3335 = !{i64 2154458541, i64 2154458561, i64 2154458624}
!3336 = !DILocation(line: 66, column: 1, scope: !3310)
!3337 = !{i64 2154459023, i64 2154459043, i64 2154459106}
!3338 = !DILocation(line: 67, column: 1, scope: !3310)
!3339 = !{i64 2154459530, i64 2154459550, i64 2154459613}
!3340 = !DILocation(line: 68, column: 1, scope: !3310)
!3341 = !{i64 2154460018, i64 2154460038, i64 2154460101}
!3342 = !DILocation(line: 70, column: 1, scope: !3310)
!3343 = !{i64 2154460486, i64 2154460506, i64 2154460569}
!3344 = !DILocation(line: 71, column: 1, scope: !3310)
!3345 = !{i64 2154460928, i64 2154460948, i64 2154461011}
!3346 = !DILocation(line: 72, column: 1, scope: !3310)
!3347 = !{i64 2154461386, i64 2154461406, i64 2154461469}
!3348 = !DILocation(line: 79, column: 1, scope: !3310)
!3349 = !{i64 2154461840, i64 2154461860, i64 2154461923}
!3350 = !DILocation(line: 80, column: 1, scope: !3310)
!3351 = !{i64 2154462351, i64 2154462371, i64 2154462434}
!3352 = !DILocation(line: 82, column: 1, scope: !3310)
!3353 = !{i64 2154462842, i64 2154462862, i64 2154462925}
!3354 = !DILocation(line: 97, column: 1, scope: !3310)
!3355 = !{i64 2154463179, i64 2154463199, i64 2154463262}
!3356 = !DILocation(line: 99, column: 1, scope: !3310)
!3357 = !{i64 2154463397, i64 2154463417, i64 2154463480}
!3358 = !DILocation(line: 102, column: 1, scope: !3310)
!3359 = !{i64 2154463654, i64 2154463674, i64 2154463737}
!3360 = !DILocation(line: 105, column: 1, scope: !3310)
!3361 = !{i64 2154463894, i64 2154463914, i64 2154463977}
!3362 = !DILocation(line: 115, column: 1, scope: !3310)
!3363 = !{i64 2154464233, i64 2154464253, i64 2154464316}
!3364 = !DILocation(line: 118, column: 1, scope: !3310)
!3365 = !{i64 2154464577, i64 2154464597, i64 2154464660}
!3366 = !DILocation(line: 32, column: 1, scope: !3367)
!3367 = !DILexicalBlockFile(scope: !3310, file: !3368, discriminator: 0)
!3368 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3369 = !{i64 2154464933, i64 2154464953, i64 2154465016}
!3370 = !DILocation(line: 33, column: 1, scope: !3367)
!3371 = !{i64 2154465445, i64 2154465465, i64 2154465528}
!3372 = !DILocation(line: 53, column: 1, scope: !3367)
!3373 = !{i64 2154465953, i64 2154465973, i64 2154466036}
!3374 = !DILocation(line: 54, column: 1, scope: !3367)
!3375 = !{i64 2154466371, i64 2154466391, i64 2154466454}
!3376 = !DILocation(line: 55, column: 1, scope: !3367)
!3377 = !{i64 2154470850, i64 2154470870, i64 2154470933}
!3378 = !DILocation(line: 56, column: 1, scope: !3367)
!3379 = !{i64 2154471268, i64 2154471288, i64 2154471351}
!3380 = !DILocation(line: 57, column: 1, scope: !3367)
!3381 = !{i64 2154471686, i64 2154471706, i64 2154471769}
!3382 = !DILocation(line: 58, column: 1, scope: !3367)
!3383 = !{i64 2154472104, i64 2154472124, i64 2154472187}
!3384 = !DILocation(line: 59, column: 1, scope: !3367)
!3385 = !{i64 2154472522, i64 2154472542, i64 2154472605}
!3386 = !DILocation(line: 60, column: 1, scope: !3367)
!3387 = !{i64 2154472946, i64 2154472966, i64 2154473029}
!3388 = !DILocation(line: 61, column: 1, scope: !3367)
!3389 = !{i64 2154473263, i64 2154473283, i64 2154473346}
!3390 = !DILocation(line: 70, column: 1, scope: !3367)
!3391 = !{i64 2154473492, i64 2154473512, i64 2154473575}
!3392 = !DILocation(line: 72, column: 1, scope: !3367)
!3393 = !{i64 2154473824, i64 2154473844, i64 2154473907}
!3394 = !DILocation(line: 73, column: 1, scope: !3367)
!3395 = !{i64 2154474274, i64 2154474294, i64 2154474357}
!3396 = !DILocation(line: 74, column: 1, scope: !3367)
!3397 = !{i64 2154474724, i64 2154474744, i64 2154474807}
!3398 = !DILocation(line: 75, column: 1, scope: !3367)
!3399 = !{i64 2154475174, i64 2154475194, i64 2154475257}
!3400 = !DILocation(line: 76, column: 1, scope: !3367)
!3401 = !{i64 2154475624, i64 2154475644, i64 2154475707}
!3402 = !DILocation(line: 77, column: 1, scope: !3367)
!3403 = !{i64 2154476074, i64 2154476094, i64 2154476157}
!3404 = !DILocation(line: 78, column: 1, scope: !3367)
!3405 = !{i64 2154476524, i64 2154476544, i64 2154476607}
!3406 = !DILocation(line: 79, column: 1, scope: !3367)
!3407 = !{i64 2154476974, i64 2154476994, i64 2154477057}
!3408 = !DILocation(line: 80, column: 1, scope: !3367)
!3409 = !{i64 2154477427, i64 2154477447, i64 2154477510}
!3410 = !DILocation(line: 84, column: 1, scope: !3367)
!3411 = !{i64 2154477759, i64 2154477779, i64 2154477842}
!3412 = !DILocation(line: 91, column: 1, scope: !3367)
!3413 = !{i64 2154478156, i64 2154478176, i64 2154478239}
!3414 = !DILocation(line: 93, column: 1, scope: !3367)
!3415 = !{i64 2154478523, i64 2154478543, i64 2154478606}
!3416 = !DILocation(line: 106, column: 1, scope: !3367)
!3417 = !{i64 2154478793, i64 2154478813, i64 2154478876}
!3418 = !DILocation(line: 11, column: 1, scope: !3419)
!3419 = !DILexicalBlockFile(scope: !3310, file: !3420, discriminator: 0)
!3420 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3421 = distinct !DISubprogram(name: "metairq_fn", scope: !120, file: !120, line: 48, type: !256, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3422)
!3422 = !{!3423, !3424, !3425, !3426, !3428}
!3423 = !DILocalVariable(name: "p1", arg: 1, scope: !3421, file: !120, line: 48, type: !104)
!3424 = !DILocalVariable(name: "p2", arg: 2, scope: !3421, file: !120, line: 48, type: !104)
!3425 = !DILocalVariable(name: "p3", arg: 3, scope: !3421, file: !120, line: 48, type: !104)
!3426 = !DILocalVariable(name: "m", scope: !3427, file: !120, line: 59, type: !303)
!3427 = distinct !DILexicalBlock(scope: !3421, file: !120, line: 54, column: 15)
!3428 = !DILocalVariable(name: "ret", scope: !3427, file: !120, line: 64, type: !105)
!3429 = !DILocation(line: 0, scope: !3421)
!3430 = !DILocation(line: 54, column: 2, scope: !3421)
!3431 = !DILocation(line: 59, column: 3, scope: !3427)
!3432 = !DILocation(line: 59, column: 14, scope: !3427)
!3433 = !DILocation(line: 61, column: 3, scope: !3427)
!3434 = !DILocation(line: 62, column: 23, scope: !3427)
!3435 = !DILocation(line: 62, column: 44, scope: !3427)
!3436 = !DILocation(line: 62, column: 40, scope: !3427)
!3437 = !DILocation(line: 62, column: 21, scope: !3427)
!3438 = !DILocation(line: 64, column: 35, scope: !3427)
!3439 = !DILocation(line: 64, column: 43, scope: !3427)
!3440 = !DILocation(line: 64, column: 13, scope: !3427)
!3441 = !DILocation(line: 0, scope: !3427)
!3442 = !DILocation(line: 66, column: 7, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3427, file: !120, line: 66, column: 7)
!3444 = !DILocation(line: 66, column: 7, scope: !3427)
!3445 = !DILocation(line: 67, column: 4, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3447, file: !120, line: 67, column: 4)
!3447 = distinct !DILexicalBlock(scope: !3448, file: !120, line: 67, column: 4)
!3448 = distinct !DILexicalBlock(scope: !3449, file: !120, line: 67, column: 4)
!3449 = distinct !DILexicalBlock(scope: !3450, file: !120, line: 67, column: 4)
!3450 = distinct !DILexicalBlock(scope: !3443, file: !120, line: 66, column: 12)
!3451 = !DILocation(line: 69, column: 3, scope: !3450)
!3452 = !DILocation(line: 70, column: 2, scope: !3421)
!3453 = distinct !{!3453, !3430, !3452}
!3454 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !122, file: !122, line: 1675, type: !395, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!3455 = !DILocation(line: 1677, column: 9, scope: !3454)
!3456 = !DILocation(line: 1677, column: 2, scope: !3454)
!3457 = distinct !DISubprogram(name: "k_msgq_put", scope: !3458, file: !3458, line: 1129, type: !3459, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3466)
!3458 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!3459 = !DISubroutineType(types: !3460)
!3460 = !{!105, !3461, !13, !3462}
!3461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 32)
!3462 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !3463)
!3463 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !3464)
!3464 = !{!3465}
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3463, file: !108, line: 66, baseType: !107, size: 64)
!3466 = !{!3467, !3468, !3469}
!3467 = !DILocalVariable(name: "msgq", arg: 1, scope: !3457, file: !3458, line: 1129, type: !3461)
!3468 = !DILocalVariable(name: "data", arg: 2, scope: !3457, file: !3458, line: 1129, type: !13)
!3469 = !DILocalVariable(name: "timeout", arg: 3, scope: !3457, file: !3458, line: 1129, type: !3462)
!3470 = !DILocation(line: 0, scope: !3457)
!3471 = !DILocation(line: 1139, column: 2, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3457, file: !3458, line: 1139, column: 2)
!3473 = !{i64 2154164172}
!3474 = !DILocation(line: 1140, column: 9, scope: !3457)
!3475 = !DILocation(line: 1140, column: 2, scope: !3457)
!3476 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3477, file: !3477, line: 175, type: !3478, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3480)
!3477 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3478 = !DISubroutineType(types: !3479)
!3479 = !{!103, !105}
!3480 = !{!3481}
!3481 = !DILocalVariable(name: "level", arg: 1, scope: !3476, file: !3477, line: 175, type: !105)
!3482 = !DILocation(line: 0, scope: !3476)
!3483 = !DILocation(line: 177, column: 2, scope: !3476)
!3484 = !DILocation(line: 189, column: 1, scope: !3476)
!3485 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3486, file: !3486, line: 24, type: !395, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!3486 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3487 = !DILocation(line: 26, column: 9, scope: !3485)
!3488 = !DILocation(line: 26, column: 2, scope: !3485)
!3489 = distinct !DISubprogram(name: "main", scope: !120, file: !120, line: 226, type: !266, scopeLine: 227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3490)
!3490 = !{!3491, !3493}
!3491 = !DILocalVariable(name: "i", scope: !3492, file: !120, line: 228, type: !106)
!3492 = distinct !DILexicalBlock(scope: !3489, file: !120, line: 228, column: 2)
!3493 = !DILocalVariable(name: "prio", scope: !3494, file: !120, line: 235, type: !105)
!3494 = distinct !DILexicalBlock(scope: !3495, file: !120, line: 228, column: 41)
!3495 = distinct !DILexicalBlock(scope: !3492, file: !120, line: 228, column: 2)
!3496 = !DILocation(line: 0, scope: !3492)
!3497 = !DILocation(line: 228, column: 2, scope: !3492)
!3498 = !DILocation(line: 246, column: 2, scope: !3489)
!3499 = !DILocation(line: 247, column: 1, scope: !3489)
!3500 = !DILocation(line: 235, column: 31, scope: !3494)
!3501 = !DILocation(line: 0, scope: !3494)
!3502 = !DILocation(line: 237, column: 27, scope: !3494)
!3503 = !DILocation(line: 237, column: 41, scope: !3494)
!3504 = !DILocation(line: 237, column: 33, scope: !3494)
!3505 = !DILocation(line: 237, column: 3, scope: !3494)
!3506 = !DILocation(line: 240, column: 31, scope: !3494)
!3507 = !DILocation(line: 241, column: 5, scope: !3494)
!3508 = !DILocation(line: 242, column: 16, scope: !3494)
!3509 = !DILocation(line: 240, column: 3, scope: !3494)
!3510 = !DILocation(line: 228, column: 37, scope: !3495)
!3511 = !DILocation(line: 228, column: 21, scope: !3495)
!3512 = distinct !{!3512, !3497, !3513}
!3513 = !DILocation(line: 244, column: 2, scope: !3492)
!3514 = distinct !DISubprogram(name: "k_thread_create", scope: !3458, file: !3458, line: 24, type: !3515, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3517)
!3515 = !DISubroutineType(types: !3516)
!3516 = !{!274, !125, !245, !111, !254, !104, !104, !104, !105, !113, !3462}
!3517 = !{!3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527}
!3518 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3514, file: !3458, line: 24, type: !125)
!3519 = !DILocalVariable(name: "stack", arg: 2, scope: !3514, file: !3458, line: 24, type: !245)
!3520 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3514, file: !3458, line: 24, type: !111)
!3521 = !DILocalVariable(name: "entry", arg: 4, scope: !3514, file: !3458, line: 24, type: !254)
!3522 = !DILocalVariable(name: "p1", arg: 5, scope: !3514, file: !3458, line: 24, type: !104)
!3523 = !DILocalVariable(name: "p2", arg: 6, scope: !3514, file: !3458, line: 24, type: !104)
!3524 = !DILocalVariable(name: "p3", arg: 7, scope: !3514, file: !3458, line: 24, type: !104)
!3525 = !DILocalVariable(name: "prio", arg: 8, scope: !3514, file: !3458, line: 24, type: !105)
!3526 = !DILocalVariable(name: "options", arg: 9, scope: !3514, file: !3458, line: 24, type: !113)
!3527 = !DILocalVariable(name: "delay", arg: 10, scope: !3514, file: !3458, line: 24, type: !3462)
!3528 = !DILocation(line: 0, scope: !3514)
!3529 = !DILocation(line: 49, column: 2, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3514, file: !3458, line: 49, column: 2)
!3531 = !{i64 2154159784}
!3532 = !DILocation(line: 50, column: 9, scope: !3514)
!3533 = !DILocation(line: 50, column: 2, scope: !3514)
!3534 = distinct !DISubprogram(name: "thread_fn", scope: !120, file: !120, line: 177, type: !256, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3535)
!3535 = !{!3536, !3537, !3538, !3539, !3540, !3541, !3543, !3544, !3548}
!3536 = !DILocalVariable(name: "p1", arg: 1, scope: !3534, file: !120, line: 177, type: !104)
!3537 = !DILocalVariable(name: "p2", arg: 2, scope: !3534, file: !120, line: 177, type: !104)
!3538 = !DILocalVariable(name: "p3", arg: 3, scope: !3534, file: !120, line: 177, type: !104)
!3539 = !DILocalVariable(name: "id", scope: !3534, file: !120, line: 181, type: !105)
!3540 = !DILocalVariable(name: "m", scope: !3534, file: !120, line: 182, type: !303)
!3541 = !DILocalVariable(name: "ret", scope: !3542, file: !120, line: 188, type: !105)
!3542 = distinct !DILexicalBlock(scope: !3534, file: !120, line: 187, column: 15)
!3543 = !DILocalVariable(name: "start", scope: !3542, file: !120, line: 189, type: !113)
!3544 = !DILocalVariable(name: "i", scope: !3545, file: !120, line: 202, type: !3547)
!3545 = distinct !DILexicalBlock(scope: !3546, file: !120, line: 202, column: 4)
!3546 = distinct !DILexicalBlock(scope: !3542, file: !120, line: 201, column: 49)
!3547 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !105)
!3548 = !DILocalVariable(name: "dur", scope: !3542, file: !120, line: 206, type: !113)
!3549 = !DILocation(line: 0, scope: !3534)
!3550 = !DILocation(line: 181, column: 11, scope: !3534)
!3551 = !DILocation(line: 182, column: 2, scope: !3534)
!3552 = !DILocation(line: 182, column: 13, scope: !3534)
!3553 = !DILocation(line: 184, column: 2, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3555, file: !120, line: 184, column: 2)
!3555 = distinct !DILexicalBlock(scope: !3556, file: !120, line: 184, column: 2)
!3556 = distinct !DILexicalBlock(scope: !3557, file: !120, line: 184, column: 2)
!3557 = distinct !DILexicalBlock(scope: !3534, file: !120, line: 184, column: 2)
!3558 = !DILocation(line: 188, column: 13, scope: !3542)
!3559 = !DILocation(line: 0, scope: !3542)
!3560 = !DILocation(line: 189, column: 20, scope: !3542)
!3561 = !DILocation(line: 191, column: 3, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3563, file: !120, line: 191, column: 3)
!3563 = distinct !DILexicalBlock(scope: !3542, file: !120, line: 191, column: 3)
!3564 = !DILocation(line: 191, column: 3, scope: !3563)
!3565 = !DILocation(line: 201, column: 10, scope: !3542)
!3566 = !DILocation(line: 201, column: 27, scope: !3542)
!3567 = !DILocation(line: 201, column: 39, scope: !3542)
!3568 = !DILocation(line: 201, column: 35, scope: !3542)
!3569 = !DILocation(line: 201, column: 3, scope: !3542)
!3570 = !DILocation(line: 191, column: 3, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3562, file: !120, line: 191, column: 3)
!3572 = !DILocation(line: 202, column: 9, scope: !3545)
!3573 = !DILocation(line: 202, column: 22, scope: !3545)
!3574 = !DILocation(line: 202, column: 29, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3545, file: !120, line: 202, column: 4)
!3576 = !DILocation(line: 202, column: 31, scope: !3575)
!3577 = !DILocation(line: 202, column: 4, scope: !3545)
!3578 = !DILocation(line: 202, column: 4, scope: !3575)
!3579 = distinct !{!3579, !3569, !3580}
!3580 = !DILocation(line: 204, column: 3, scope: !3542)
!3581 = !DILocation(line: 202, column: 39, scope: !3575)
!3582 = distinct !{!3582, !3577, !3583}
!3583 = !DILocation(line: 203, column: 4, scope: !3545)
!3584 = !DILocation(line: 206, column: 18, scope: !3542)
!3585 = !DILocation(line: 206, column: 35, scope: !3542)
!3586 = !DILocation(line: 216, column: 3, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3588, file: !120, line: 216, column: 3)
!3588 = distinct !DILexicalBlock(scope: !3589, file: !120, line: 216, column: 3)
!3589 = distinct !DILexicalBlock(scope: !3590, file: !120, line: 216, column: 3)
!3590 = distinct !DILexicalBlock(scope: !3542, file: !120, line: 216, column: 3)
!3591 = !DILocation(line: 222, column: 34, scope: !3542)
!3592 = !DILocation(line: 222, column: 30, scope: !3542)
!3593 = !DILocation(line: 222, column: 3, scope: !3542)
!3594 = distinct !{!3594, !3595, !3596}
!3595 = !DILocation(line: 187, column: 2, scope: !3534)
!3596 = !DILocation(line: 223, column: 2, scope: !3534)
!3597 = distinct !DISubprogram(name: "k_current_get", scope: !122, file: !122, line: 530, type: !3598, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!3598 = !DISubroutineType(types: !3599)
!3599 = !{!274}
!3600 = !DILocation(line: 535, column: 9, scope: !3597)
!3601 = !DILocation(line: 535, column: 2, scope: !3597)
!3602 = distinct !DISubprogram(name: "k_thread_priority_get", scope: !3458, file: !3458, line: 258, type: !3603, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3605)
!3603 = !DISubroutineType(types: !3604)
!3604 = !{!105, !274}
!3605 = !{!3606}
!3606 = !DILocalVariable(name: "thread", arg: 1, scope: !3602, file: !3458, line: 258, type: !274)
!3607 = !DILocation(line: 0, scope: !3602)
!3608 = !DILocation(line: 266, column: 2, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3602, file: !3458, line: 266, column: 2)
!3610 = !{i64 2154160668}
!3611 = !DILocation(line: 267, column: 9, scope: !3602)
!3612 = !DILocation(line: 267, column: 2, scope: !3602)
!3613 = distinct !DISubprogram(name: "k_msgq_get", scope: !3458, file: !3458, line: 1147, type: !3614, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3616)
!3614 = !DISubroutineType(types: !3615)
!3615 = !{!105, !3461, !104, !3462}
!3616 = !{!3617, !3618, !3619}
!3617 = !DILocalVariable(name: "msgq", arg: 1, scope: !3613, file: !3458, line: 1147, type: !3461)
!3618 = !DILocalVariable(name: "data", arg: 2, scope: !3613, file: !3458, line: 1147, type: !104)
!3619 = !DILocalVariable(name: "timeout", arg: 3, scope: !3613, file: !3458, line: 1147, type: !3462)
!3620 = !DILocation(line: 0, scope: !3613)
!3621 = !DILocation(line: 1157, column: 2, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3613, file: !3458, line: 1157, column: 2)
!3623 = !{i64 2154164240}
!3624 = !DILocation(line: 1158, column: 9, scope: !3613)
!3625 = !DILocation(line: 1158, column: 2, scope: !3613)
!3626 = distinct !DISubprogram(name: "record_latencies", scope: !120, file: !120, line: 111, type: !3627, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3630)
!3627 = !DISubroutineType(types: !3628)
!3628 = !{null, !3629, !113}
!3629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!3630 = !{!3631, !3632, !3633, !3634, !3635, !3638, !3639, !3640, !3641, !3642}
!3631 = !DILocalVariable(name: "m", arg: 1, scope: !3626, file: !120, line: 111, type: !3629)
!3632 = !DILocalVariable(name: "latency", arg: 2, scope: !3626, file: !120, line: 111, type: !113)
!3633 = !DILocalVariable(name: "t", scope: !3626, file: !120, line: 129, type: !105)
!3634 = !DILocalVariable(name: "lidx", scope: !3626, file: !120, line: 130, type: !105)
!3635 = !DILocalVariable(name: "hi", scope: !3636, file: !120, line: 145, type: !113)
!3636 = distinct !DILexicalBlock(scope: !3637, file: !120, line: 144, column: 32)
!3637 = distinct !DILexicalBlock(scope: !3626, file: !120, line: 144, column: 6)
!3638 = !DILocalVariable(name: "lo", scope: !3636, file: !120, line: 145, type: !113)
!3639 = !DILocalVariable(name: "mean", scope: !3636, file: !120, line: 145, type: !113)
!3640 = !DILocalVariable(name: "stdev", scope: !3636, file: !120, line: 145, type: !113)
!3641 = !DILocalVariable(name: "ret", scope: !3636, file: !120, line: 145, type: !113)
!3642 = !DILocalVariable(name: "i", scope: !3643, file: !120, line: 159, type: !105)
!3643 = distinct !DILexicalBlock(scope: !3636, file: !120, line: 159, column: 3)
!3644 = !DILocation(line: 0, scope: !3626)
!3645 = !DILocation(line: 125, column: 9, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3626, file: !120, line: 125, column: 6)
!3647 = !DILocation(line: 125, column: 13, scope: !3646)
!3648 = !DILocation(line: 125, column: 6, scope: !3626)
!3649 = !DILocation(line: 129, column: 13, scope: !3626)
!3650 = !DILocation(line: 130, column: 30, scope: !3626)
!3651 = !DILocation(line: 130, column: 34, scope: !3626)
!3652 = !DILocation(line: 132, column: 11, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3626, file: !120, line: 132, column: 6)
!3654 = !DILocation(line: 132, column: 6, scope: !3626)
!3655 = !DILocation(line: 133, column: 3, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3653, file: !120, line: 132, column: 53)
!3657 = !DILocation(line: 133, column: 36, scope: !3656)
!3658 = !DILocation(line: 134, column: 2, scope: !3656)
!3659 = !DILocation(line: 136, column: 57, scope: !3626)
!3660 = !DILocation(line: 136, column: 23, scope: !3626)
!3661 = !DILocation(line: 136, column: 2, scope: !3626)
!3662 = !DILocation(line: 136, column: 52, scope: !3626)
!3663 = !DILocation(line: 144, column: 9, scope: !3637)
!3664 = !DILocation(line: 144, column: 13, scope: !3637)
!3665 = !DILocation(line: 144, column: 6, scope: !3626)
!3666 = !DILocation(line: 145, column: 3, scope: !3636)
!3667 = !DILocation(line: 147, column: 9, scope: !3636)
!3668 = !DILocation(line: 0, scope: !3636)
!3669 = !DILocation(line: 148, column: 3, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3671, file: !120, line: 148, column: 3)
!3671 = distinct !DILexicalBlock(scope: !3636, file: !120, line: 148, column: 3)
!3672 = !DILocation(line: 148, column: 3, scope: !3671)
!3673 = !DILocation(line: 148, column: 3, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3670, file: !120, line: 148, column: 3)
!3675 = !DILocation(line: 149, column: 3, scope: !3636)
!3676 = !DILocation(line: 151, column: 42, scope: !3636)
!3677 = !DILocation(line: 151, column: 3, scope: !3636)
!3678 = !DILocation(line: 154, column: 3, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3680, file: !120, line: 154, column: 3)
!3680 = distinct !DILexicalBlock(scope: !3681, file: !120, line: 154, column: 3)
!3681 = distinct !DILexicalBlock(scope: !3682, file: !120, line: 154, column: 3)
!3682 = distinct !DILexicalBlock(scope: !3636, file: !120, line: 154, column: 3)
!3683 = !DILocation(line: 155, column: 3, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3685, file: !120, line: 155, column: 3)
!3685 = distinct !DILexicalBlock(scope: !3686, file: !120, line: 155, column: 3)
!3686 = distinct !DILexicalBlock(scope: !3687, file: !120, line: 155, column: 3)
!3687 = distinct !DILexicalBlock(scope: !3636, file: !120, line: 155, column: 3)
!3688 = !DILocation(line: 156, column: 3, scope: !3689)
!3689 = distinct !DILexicalBlock(scope: !3690, file: !120, line: 156, column: 3)
!3690 = distinct !DILexicalBlock(scope: !3691, file: !120, line: 156, column: 3)
!3691 = distinct !DILexicalBlock(scope: !3692, file: !120, line: 156, column: 3)
!3692 = distinct !DILexicalBlock(scope: !3636, file: !120, line: 156, column: 3)
!3693 = !DILocation(line: 0, scope: !3643)
!3694 = !DILocation(line: 159, column: 3, scope: !3643)
!3695 = !DILocation(line: 173, column: 3, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3697, file: !120, line: 173, column: 3)
!3697 = distinct !DILexicalBlock(scope: !3698, file: !120, line: 173, column: 3)
!3698 = distinct !DILexicalBlock(scope: !3699, file: !120, line: 173, column: 3)
!3699 = distinct !DILexicalBlock(scope: !3636, file: !120, line: 173, column: 3)
!3700 = !DILocation(line: 174, column: 2, scope: !3637)
!3701 = !DILocation(line: 174, column: 2, scope: !3636)
!3702 = !DILocation(line: 160, column: 25, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3704, file: !120, line: 160, column: 8)
!3704 = distinct !DILexicalBlock(scope: !3705, file: !120, line: 159, column: 41)
!3705 = distinct !DILexicalBlock(scope: !3643, file: !120, line: 159, column: 3)
!3706 = !DILocation(line: 160, column: 30, scope: !3703)
!3707 = !DILocation(line: 160, column: 8, scope: !3704)
!3708 = !DILocation(line: 161, column: 5, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3710, file: !120, line: 161, column: 5)
!3710 = distinct !DILexicalBlock(scope: !3711, file: !120, line: 161, column: 5)
!3711 = distinct !DILexicalBlock(scope: !3712, file: !120, line: 161, column: 5)
!3712 = distinct !DILexicalBlock(scope: !3713, file: !120, line: 161, column: 5)
!3713 = distinct !DILexicalBlock(scope: !3703, file: !120, line: 160, column: 36)
!3714 = !DILocation(line: 162, column: 5, scope: !3713)
!3715 = !DILocation(line: 165, column: 15, scope: !3704)
!3716 = !DILocation(line: 165, column: 4, scope: !3704)
!3717 = !DILocation(line: 169, column: 4, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3719, file: !120, line: 169, column: 4)
!3719 = distinct !DILexicalBlock(scope: !3720, file: !120, line: 169, column: 4)
!3720 = distinct !DILexicalBlock(scope: !3721, file: !120, line: 169, column: 4)
!3721 = distinct !DILexicalBlock(scope: !3704, file: !120, line: 169, column: 4)
!3722 = !DILocation(line: 171, column: 3, scope: !3704)
!3723 = !DILocation(line: 159, column: 37, scope: !3705)
!3724 = !DILocation(line: 159, column: 21, scope: !3705)
!3725 = distinct !{!3725, !3694, !3726}
!3726 = !DILocation(line: 171, column: 3, scope: !3643)
!3727 = !DILocation(line: 175, column: 1, scope: !3626)
!3728 = distinct !DISubprogram(name: "atomic_inc", scope: !3729, file: !3729, line: 123, type: !3730, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3734)
!3729 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3730 = !DISubroutineType(types: !3731)
!3731 = !{!3732, !3733}
!3732 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !332, line: 23, baseType: !331)
!3733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!3734 = !{!3735}
!3735 = !DILocalVariable(name: "target", arg: 1, scope: !3728, file: !3729, line: 123, type: !3733)
!3736 = !DILocation(line: 0, scope: !3728)
!3737 = !DILocation(line: 125, column: 9, scope: !3728)
!3738 = !DILocation(line: 125, column: 2, scope: !3728)
!3739 = distinct !DISubprogram(name: "k_sem_take", scope: !3458, file: !3458, line: 1044, type: !3740, scopeLine: 1045, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3743)
!3740 = !DISubroutineType(types: !3741)
!3741 = !{!105, !3742, !3462}
!3742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!3743 = !{!3744, !3745}
!3744 = !DILocalVariable(name: "sem", arg: 1, scope: !3739, file: !3458, line: 1044, type: !3742)
!3745 = !DILocalVariable(name: "timeout", arg: 2, scope: !3739, file: !3458, line: 1044, type: !3462)
!3746 = !DILocation(line: 0, scope: !3739)
!3747 = !DILocation(line: 1053, column: 2, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !3739, file: !3458, line: 1053, column: 2)
!3749 = !{i64 2154163832}
!3750 = !DILocation(line: 1054, column: 9, scope: !3739)
!3751 = !DILocation(line: 1054, column: 2, scope: !3739)
!3752 = distinct !DISubprogram(name: "k_msleep", scope: !122, file: !122, line: 439, type: !3753, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3755)
!3753 = !DISubroutineType(types: !3754)
!3754 = !{!116, !116}
!3755 = !{!3756}
!3756 = !DILocalVariable(name: "ms", arg: 1, scope: !3752, file: !122, line: 439, type: !116)
!3757 = !DILocation(line: 0, scope: !3752)
!3758 = !DILocation(line: 441, column: 9, scope: !3752)
!3759 = !DILocation(line: 441, column: 2, scope: !3752)
!3760 = distinct !DISubprogram(name: "calc_stats", scope: !120, file: !120, line: 87, type: !3761, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3765)
!3761 = !DISubroutineType(types: !3762)
!3762 = !{null, !3763, !113, !1010, !1010, !1010, !1010}
!3763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3764, size: 32)
!3764 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!3765 = !{!3766, !3767, !3768, !3769, !3770, !3771, !3772, !3773, !3774, !3776, !3778}
!3766 = !DILocalVariable(name: "array", arg: 1, scope: !3760, file: !120, line: 87, type: !3763)
!3767 = !DILocalVariable(name: "n", arg: 2, scope: !3760, file: !120, line: 87, type: !113)
!3768 = !DILocalVariable(name: "lo", arg: 3, scope: !3760, file: !120, line: 88, type: !1010)
!3769 = !DILocalVariable(name: "hi", arg: 4, scope: !3760, file: !120, line: 88, type: !1010)
!3770 = !DILocalVariable(name: "mean", arg: 5, scope: !3760, file: !120, line: 88, type: !1010)
!3771 = !DILocalVariable(name: "stdev", arg: 6, scope: !3760, file: !120, line: 88, type: !1010)
!3772 = !DILocalVariable(name: "tot", scope: !3760, file: !120, line: 90, type: !114)
!3773 = !DILocalVariable(name: "totsq", scope: !3760, file: !120, line: 90, type: !114)
!3774 = !DILocalVariable(name: "i", scope: !3775, file: !120, line: 94, type: !105)
!3775 = distinct !DILexicalBlock(scope: !3760, file: !120, line: 94, column: 2)
!3776 = !DILocalVariable(name: "i", scope: !3777, file: !120, line: 102, type: !105)
!3777 = distinct !DILexicalBlock(scope: !3760, file: !120, line: 102, column: 2)
!3778 = !DILocalVariable(name: "d", scope: !3779, file: !120, line: 103, type: !109)
!3779 = distinct !DILexicalBlock(scope: !3780, file: !120, line: 102, column: 30)
!3780 = distinct !DILexicalBlock(scope: !3777, file: !120, line: 102, column: 2)
!3781 = !DILocation(line: 0, scope: !3760)
!3782 = !DILocation(line: 92, column: 6, scope: !3760)
!3783 = !DILocation(line: 93, column: 6, scope: !3760)
!3784 = !DILocation(line: 0, scope: !3775)
!3785 = !DILocation(line: 94, column: 20, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3775, file: !120, line: 94, column: 2)
!3787 = !DILocation(line: 94, column: 2, scope: !3775)
!3788 = !DILocation(line: 100, column: 31, scope: !3760)
!3789 = !DILocation(line: 100, column: 37, scope: !3760)
!3790 = !DILocation(line: 100, column: 10, scope: !3760)
!3791 = !DILocation(line: 100, column: 8, scope: !3760)
!3792 = !DILocation(line: 0, scope: !3777)
!3793 = !DILocation(line: 102, column: 2, scope: !3777)
!3794 = !DILocation(line: 100, column: 28, scope: !3760)
!3795 = !DILocation(line: 100, column: 26, scope: !3760)
!3796 = !DILocation(line: 100, column: 39, scope: !3760)
!3797 = !DILocation(line: 95, column: 9, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3786, file: !120, line: 94, column: 30)
!3799 = !DILocation(line: 95, column: 7, scope: !3798)
!3800 = !DILocation(line: 96, column: 9, scope: !3798)
!3801 = !DILocation(line: 96, column: 7, scope: !3798)
!3802 = !DILocation(line: 97, column: 10, scope: !3798)
!3803 = !DILocation(line: 97, column: 7, scope: !3798)
!3804 = !DILocation(line: 94, column: 26, scope: !3786)
!3805 = distinct !{!3805, !3787, !3806}
!3806 = !DILocation(line: 98, column: 2, scope: !3775)
!3807 = !DILocation(line: 108, column: 24, scope: !3760)
!3808 = !DILocation(line: 108, column: 35, scope: !3760)
!3809 = !DILocation(line: 108, column: 11, scope: !3760)
!3810 = !DILocation(line: 108, column: 9, scope: !3760)
!3811 = !DILocation(line: 109, column: 1, scope: !3760)
!3812 = !DILocation(line: 103, column: 26, scope: !3779)
!3813 = !DILocation(line: 103, column: 35, scope: !3779)
!3814 = !DILocation(line: 103, column: 15, scope: !3779)
!3815 = !DILocation(line: 0, scope: !3779)
!3816 = !DILocation(line: 105, column: 14, scope: !3779)
!3817 = !DILocation(line: 105, column: 9, scope: !3779)
!3818 = !DILocation(line: 102, column: 26, scope: !3780)
!3819 = !DILocation(line: 102, column: 20, scope: !3780)
!3820 = distinct !{!3820, !3793, !3821}
!3821 = !DILocation(line: 106, column: 2, scope: !3777)
!3822 = distinct !DISubprogram(name: "isqrt", scope: !120, file: !120, line: 76, type: !3823, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3825)
!3823 = !DISubroutineType(types: !3824)
!3824 = !{!113, !114}
!3825 = !{!3826, !3827, !3830}
!3826 = !DILocalVariable(name: "n", arg: 1, scope: !3822, file: !120, line: 76, type: !114)
!3827 = !DILocalVariable(name: "lo", scope: !3828, file: !120, line: 79, type: !114)
!3828 = distinct !DILexicalBlock(scope: !3829, file: !120, line: 78, column: 13)
!3829 = distinct !DILexicalBlock(scope: !3822, file: !120, line: 78, column: 6)
!3830 = !DILocalVariable(name: "hi", scope: !3828, file: !120, line: 80, type: !114)
!3831 = !DILocation(line: 0, scope: !3822)
!3832 = !DILocation(line: 78, column: 8, scope: !3829)
!3833 = !DILocation(line: 78, column: 6, scope: !3822)
!3834 = !DILocation(line: 85, column: 1, scope: !3822)
!3835 = !DILocation(line: 79, column: 25, scope: !3828)
!3836 = !DILocation(line: 79, column: 17, scope: !3828)
!3837 = !DILocation(line: 79, column: 31, scope: !3828)
!3838 = !DILocation(line: 0, scope: !3828)
!3839 = !DILocation(line: 80, column: 20, scope: !3828)
!3840 = !DILocation(line: 82, column: 26, scope: !3828)
!3841 = !DILocation(line: 82, column: 32, scope: !3828)
!3842 = !DILocation(line: 82, column: 21, scope: !3828)
!3843 = distinct !DISubprogram(name: "k_sleep", scope: !3458, file: !3458, line: 91, type: !3844, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3846)
!3844 = !DISubroutineType(types: !3845)
!3845 = !{!116, !3462}
!3846 = !{!3847}
!3847 = !DILocalVariable(name: "timeout", arg: 1, scope: !3843, file: !3458, line: 91, type: !3462)
!3848 = !DILocation(line: 0, scope: !3843)
!3849 = !DILocation(line: 99, column: 2, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3843, file: !3458, line: 99, column: 2)
!3851 = !{i64 2154159988}
!3852 = !DILocation(line: 100, column: 9, scope: !3843)
!3853 = !DILocation(line: 100, column: 2, scope: !3843)
!3854 = distinct !DISubprogram(name: "atomic_add", scope: !3729, file: !3729, line: 86, type: !3855, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3857)
!3855 = !DISubroutineType(types: !3856)
!3856 = !{!3732, !3733, !3732}
!3857 = !{!3858, !3859}
!3858 = !DILocalVariable(name: "target", arg: 1, scope: !3854, file: !3729, line: 86, type: !3733)
!3859 = !DILocalVariable(name: "value", arg: 2, scope: !3854, file: !3729, line: 86, type: !3732)
!3860 = !DILocation(line: 0, scope: !3854)
!3861 = !DILocation(line: 88, column: 9, scope: !3854)
!3862 = !DILocation(line: 88, column: 2, scope: !3854)
!3863 = distinct !DISubprogram(name: "z_current_get", scope: !3458, file: !3458, line: 173, type: !3598, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!3864 = !DILocation(line: 180, column: 2, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3863, file: !3458, line: 180, column: 2)
!3866 = !{i64 2154160328}
!3867 = !DILocation(line: 181, column: 9, scope: !3863)
!3868 = !DILocation(line: 181, column: 2, scope: !3863)
!3869 = distinct !DISubprogram(name: "message_dev_init", scope: !360, file: !360, line: 83, type: !266, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3870)
!3870 = !{!3871, !3872, !3873}
!3871 = !DILocalVariable(name: "cyc_per_tick", scope: !3869, file: !360, line: 90, type: !114)
!3872 = !DILocalVariable(name: "avg_ticks_per_event", scope: !3869, file: !360, line: 91, type: !114)
!3873 = !DILocalVariable(name: "avg_cyc_per_event", scope: !3869, file: !360, line: 92, type: !114)
!3874 = !DILocation(line: 0, scope: !3869)
!3875 = !DILocation(line: 94, column: 15, scope: !3869)
!3876 = !DILocation(line: 96, column: 2, scope: !3869)
!3877 = !DILocation(line: 97, column: 1, scope: !3869)
!3878 = distinct !DISubprogram(name: "dev_timer_expired", scope: !360, file: !360, line: 54, type: !381, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3879)
!3879 = !{!3880, !3881, !3882, !3890}
!3880 = !DILocalVariable(name: "t", arg: 1, scope: !3878, file: !360, line: 54, type: !383)
!3881 = !DILocalVariable(name: "timestamp", scope: !3878, file: !360, line: 57, type: !113)
!3882 = !DILocalVariable(name: "m", scope: !3878, file: !360, line: 58, type: !3883)
!3883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msg", file: !304, line: 44, size: 160, elements: !3884)
!3884 = !{!3885, !3886, !3887, !3888, !3889}
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3883, file: !304, line: 46, baseType: !113, size: 32)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !3883, file: !304, line: 49, baseType: !113, size: 32, offset: 32)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !3883, file: !304, line: 52, baseType: !113, size: 32, offset: 64)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "proc_cyc", scope: !3883, file: !304, line: 55, baseType: !113, size: 32, offset: 96)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "metairq_latency", scope: !3883, file: !304, line: 58, baseType: !113, size: 32, offset: 128)
!3890 = !DILocalVariable(name: "ret", scope: !3878, file: !360, line: 65, type: !105)
!3891 = !DILocation(line: 0, scope: !3878)
!3892 = !DILocation(line: 56, column: 2, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3894, file: !360, line: 56, column: 2)
!3894 = distinct !DILexicalBlock(scope: !3878, file: !360, line: 56, column: 2)
!3895 = !DILocation(line: 56, column: 2, scope: !3894)
!3896 = !DILocation(line: 56, column: 2, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3893, file: !360, line: 56, column: 2)
!3898 = !DILocation(line: 57, column: 23, scope: !3878)
!3899 = !DILocation(line: 58, column: 2, scope: !3878)
!3900 = !DILocation(line: 58, column: 13, scope: !3878)
!3901 = !DILocation(line: 60, column: 17, scope: !3878)
!3902 = !DILocation(line: 60, column: 4, scope: !3878)
!3903 = !DILocation(line: 60, column: 8, scope: !3878)
!3904 = !DILocation(line: 61, column: 4, scope: !3878)
!3905 = !DILocation(line: 61, column: 14, scope: !3878)
!3906 = !DILocation(line: 62, column: 13, scope: !3878)
!3907 = !DILocation(line: 62, column: 22, scope: !3878)
!3908 = !DILocation(line: 62, column: 4, scope: !3878)
!3909 = !DILocation(line: 62, column: 11, scope: !3878)
!3910 = !DILocation(line: 63, column: 15, scope: !3878)
!3911 = !DILocation(line: 63, column: 26, scope: !3878)
!3912 = !DILocation(line: 63, column: 24, scope: !3878)
!3913 = !DILocation(line: 63, column: 4, scope: !3878)
!3914 = !DILocation(line: 63, column: 13, scope: !3878)
!3915 = !DILocation(line: 65, column: 12, scope: !3878)
!3916 = !DILocation(line: 67, column: 10, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3878, file: !360, line: 67, column: 6)
!3918 = !DILocation(line: 67, column: 6, scope: !3878)
!3919 = !DILocation(line: 68, column: 3, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3917, file: !360, line: 67, column: 16)
!3921 = !DILocation(line: 69, column: 2, scope: !3920)
!3922 = !DILocation(line: 71, column: 8, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3878, file: !360, line: 71, column: 6)
!3924 = !DILocation(line: 71, column: 12, scope: !3923)
!3925 = !DILocation(line: 71, column: 6, scope: !3878)
!3926 = !DILocation(line: 72, column: 3, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3923, file: !360, line: 71, column: 26)
!3928 = !DILocation(line: 73, column: 2, scope: !3927)
!3929 = !DILocation(line: 74, column: 1, scope: !3878)
!3930 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !122, file: !122, line: 1675, type: !395, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !397)
!3931 = !DILocation(line: 1677, column: 9, scope: !3930)
!3932 = !DILocation(line: 1677, column: 2, scope: !3930)
!3933 = !DILocation(line: 40, column: 7, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !394, file: !360, line: 40, column: 6)
!3935 = !DILocation(line: 40, column: 6, scope: !394)
!3936 = !DILocation(line: 41, column: 22, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3934, file: !360, line: 40, column: 14)
!3938 = !DILocation(line: 41, column: 12, scope: !3937)
!3939 = !DILocation(line: 41, column: 40, scope: !3937)
!3940 = !DILocation(line: 42, column: 2, scope: !3937)
!3941 = !DILocation(line: 45, column: 10, scope: !394)
!3942 = !DILocation(line: 45, column: 16, scope: !394)
!3943 = !DILocation(line: 45, column: 41, scope: !394)
!3944 = !DILocation(line: 45, column: 8, scope: !394)
!3945 = !DILocation(line: 46, column: 26, scope: !394)
!3946 = !DILocation(line: 46, column: 9, scope: !394)
!3947 = !DILocation(line: 46, column: 2, scope: !394)
!3948 = distinct !DISubprogram(name: "k_msgq_put", scope: !3458, file: !3458, line: 1129, type: !3949, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3956)
!3949 = !DISubroutineType(types: !3950)
!3950 = !{!105, !3951, !13, !3952}
!3951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 32)
!3952 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !3953)
!3953 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !3954)
!3954 = !{!3955}
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3953, file: !108, line: 66, baseType: !107, size: 64)
!3956 = !{!3957, !3958, !3959}
!3957 = !DILocalVariable(name: "msgq", arg: 1, scope: !3948, file: !3458, line: 1129, type: !3951)
!3958 = !DILocalVariable(name: "data", arg: 2, scope: !3948, file: !3458, line: 1129, type: !13)
!3959 = !DILocalVariable(name: "timeout", arg: 3, scope: !3948, file: !3458, line: 1129, type: !3952)
!3960 = !DILocation(line: 0, scope: !3948)
!3961 = !DILocation(line: 1139, column: 2, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3948, file: !3458, line: 1139, column: 2)
!3963 = !{i64 2154162435}
!3964 = !DILocation(line: 1140, column: 9, scope: !3948)
!3965 = !DILocation(line: 1140, column: 2, scope: !3948)
!3966 = distinct !DISubprogram(name: "timeout_reset", scope: !360, file: !360, line: 76, type: !266, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3967)
!3967 = !{!3968}
!3968 = !DILocalVariable(name: "ticks", scope: !3966, file: !360, line: 78, type: !113)
!3969 = !DILocation(line: 78, column: 19, scope: !3966)
!3970 = !DILocation(line: 78, column: 28, scope: !3966)
!3971 = !DILocation(line: 0, scope: !3966)
!3972 = !DILocation(line: 80, column: 45, scope: !3966)
!3973 = !DILocation(line: 80, column: 2, scope: !3966)
!3974 = !DILocation(line: 81, column: 1, scope: !3966)
!3975 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3486, file: !3486, line: 24, type: !395, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !397)
!3976 = !DILocation(line: 26, column: 9, scope: !3975)
!3977 = !DILocation(line: 26, column: 2, scope: !3975)
!3978 = distinct !DISubprogram(name: "message_dev_fetch", scope: !360, file: !360, line: 99, type: !3979, scopeLine: 100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3982)
!3979 = !DISubroutineType(types: !3980)
!3980 = !{null, !3981}
!3981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3883, size: 32)
!3982 = !{!3983, !3984}
!3983 = !DILocalVariable(name: "m", arg: 1, scope: !3978, file: !360, line: 99, type: !3981)
!3984 = !DILocalVariable(name: "ret", scope: !3978, file: !360, line: 101, type: !105)
!3985 = !DILocation(line: 0, scope: !3978)
!3986 = !DILocation(line: 101, column: 33, scope: !3978)
!3987 = !DILocation(line: 101, column: 12, scope: !3978)
!3988 = !DILocation(line: 103, column: 2, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3990, file: !360, line: 103, column: 2)
!3990 = distinct !DILexicalBlock(scope: !3978, file: !360, line: 103, column: 2)
!3991 = !DILocation(line: 103, column: 2, scope: !3990)
!3992 = !DILocation(line: 103, column: 2, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3989, file: !360, line: 103, column: 2)
!3994 = !DILocation(line: 104, column: 1, scope: !3978)
!3995 = distinct !DISubprogram(name: "k_msgq_get", scope: !3458, file: !3458, line: 1147, type: !3996, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3998)
!3996 = !DISubroutineType(types: !3997)
!3997 = !{!105, !3951, !104, !3952}
!3998 = !{!3999, !4000, !4001}
!3999 = !DILocalVariable(name: "msgq", arg: 1, scope: !3995, file: !3458, line: 1147, type: !3951)
!4000 = !DILocalVariable(name: "data", arg: 2, scope: !3995, file: !3458, line: 1147, type: !104)
!4001 = !DILocalVariable(name: "timeout", arg: 3, scope: !3995, file: !3458, line: 1147, type: !3952)
!4002 = !DILocation(line: 0, scope: !3995)
!4003 = !DILocation(line: 1157, column: 2, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !3995, file: !3458, line: 1157, column: 2)
!4005 = !{i64 2154162503}
!4006 = !DILocation(line: 1158, column: 9, scope: !3995)
!4007 = !DILocation(line: 1158, column: 2, scope: !3995)
!4008 = distinct !DISubprogram(name: "cbvprintf_package", scope: !434, file: !434, line: 233, type: !4009, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4018)
!4009 = !DISubroutineType(types: !4010)
!4010 = !{!105, !104, !111, !113, !269, !4011}
!4011 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4012, line: 99, baseType: !4013)
!4012 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4013 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4012, line: 40, baseType: !4014)
!4014 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !434, baseType: !4015)
!4015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4016)
!4016 = !{!4017}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4015, file: !434, line: 18, baseType: !104, size: 32)
!4018 = !{!4019, !4020, !4021, !4022, !4023, !4024, !4025, !4026, !4027, !4028, !4030, !4031, !4032, !4033, !4034, !4035, !4036, !4037, !4038, !4039, !4040, !4041, !4054, !4063, !4066, !4067, !4070, !4073, !4076, !4079, !4085}
!4019 = !DILocalVariable(name: "packaged", arg: 1, scope: !4008, file: !434, line: 233, type: !104)
!4020 = !DILocalVariable(name: "len", arg: 2, scope: !4008, file: !434, line: 233, type: !111)
!4021 = !DILocalVariable(name: "flags", arg: 3, scope: !4008, file: !434, line: 233, type: !113)
!4022 = !DILocalVariable(name: "fmt", arg: 4, scope: !4008, file: !434, line: 234, type: !269)
!4023 = !DILocalVariable(name: "ap", arg: 5, scope: !4008, file: !434, line: 234, type: !4011)
!4024 = !DILocalVariable(name: "buf0", scope: !4008, file: !434, line: 247, type: !432)
!4025 = !DILocalVariable(name: "buf", scope: !4008, file: !434, line: 248, type: !432)
!4026 = !DILocalVariable(name: "size", scope: !4008, file: !434, line: 249, type: !32)
!4027 = !DILocalVariable(name: "align", scope: !4008, file: !434, line: 250, type: !32)
!4028 = !DILocalVariable(name: "str_ptr_pos", scope: !4008, file: !434, line: 251, type: !4029)
!4029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 128, elements: !311)
!4030 = !DILocalVariable(name: "str_ptr_arg", scope: !4008, file: !434, line: 252, type: !4029)
!4031 = !DILocalVariable(name: "s_idx", scope: !4008, file: !434, line: 253, type: !32)
!4032 = !DILocalVariable(name: "s_rw_cnt", scope: !4008, file: !434, line: 254, type: !32)
!4033 = !DILocalVariable(name: "s_ro_cnt", scope: !4008, file: !434, line: 255, type: !32)
!4034 = !DILocalVariable(name: "arg_idx", scope: !4008, file: !434, line: 256, type: !105)
!4035 = !DILocalVariable(name: "i", scope: !4008, file: !434, line: 257, type: !32)
!4036 = !DILocalVariable(name: "s", scope: !4008, file: !434, line: 258, type: !269)
!4037 = !DILocalVariable(name: "parsing", scope: !4008, file: !434, line: 259, type: !492)
!4038 = !DILocalVariable(name: "rws_pos_en", scope: !4008, file: !434, line: 263, type: !492)
!4039 = !DILocalVariable(name: "fros_cnt", scope: !4008, file: !434, line: 268, type: !105)
!4040 = !DILocalVariable(name: "is_str_arg", scope: !4008, file: !434, line: 269, type: !492)
!4041 = !DILocalVariable(name: "pkg_hdr", scope: !4008, file: !434, line: 270, type: !4042)
!4042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4043, size: 32)
!4043 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4044, line: 78, size: 32, elements: !4045)
!4044 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4045 = !{!4046, !4053}
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4043, file: !4044, line: 80, baseType: !4047, size: 32)
!4047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4044, line: 45, size: 32, elements: !4048)
!4048 = !{!4049, !4050, !4051, !4052}
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4047, file: !4044, line: 47, baseType: !169, size: 8)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4047, file: !4044, line: 50, baseType: !169, size: 8, offset: 8)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4047, file: !4044, line: 53, baseType: !169, size: 8, offset: 16)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4047, file: !4044, line: 56, baseType: !169, size: 8, offset: 24)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4043, file: !4044, line: 82, baseType: !104, size: 32)
!4054 = !DILocalVariable(name: "v", scope: !4055, file: !434, line: 567, type: !4059)
!4055 = distinct !DILexicalBlock(scope: !4056, file: !434, line: 562, column: 14)
!4056 = distinct !DILexicalBlock(scope: !4057, file: !434, line: 481, column: 18)
!4057 = distinct !DILexicalBlock(scope: !4058, file: !434, line: 466, column: 3)
!4058 = distinct !DILexicalBlock(scope: !4008, file: !434, line: 343, column: 15)
!4059 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4008, file: !434, line: 567, size: 64, elements: !4060)
!4060 = !{!4061, !4062}
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4059, file: !434, line: 567, baseType: !426, size: 64)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4059, file: !434, line: 567, baseType: !424, size: 64)
!4063 = !DILocalVariable(name: "is_ro", scope: !4064, file: !434, line: 620, type: !492)
!4064 = distinct !DILexicalBlock(scope: !4065, file: !434, line: 613, column: 19)
!4065 = distinct !DILexicalBlock(scope: !4058, file: !434, line: 613, column: 7)
!4066 = !DILocalVariable(name: "do_ro", scope: !4064, file: !434, line: 621, type: !492)
!4067 = !DILocalVariable(name: "s_ptr_idx", scope: !4068, file: !434, line: 626, type: !113)
!4068 = distinct !DILexicalBlock(scope: !4069, file: !434, line: 625, column: 11)
!4069 = distinct !DILexicalBlock(scope: !4064, file: !434, line: 623, column: 8)
!4070 = !DILocalVariable(name: "v", scope: !4071, file: !434, line: 684, type: !105)
!4071 = distinct !DILexicalBlock(scope: !4072, file: !434, line: 683, column: 35)
!4072 = distinct !DILexicalBlock(scope: !4065, file: !434, line: 683, column: 14)
!4073 = !DILocalVariable(name: "v", scope: !4074, file: !434, line: 691, type: !106)
!4074 = distinct !DILexicalBlock(scope: !4075, file: !434, line: 690, column: 36)
!4075 = distinct !DILexicalBlock(scope: !4072, file: !434, line: 690, column: 14)
!4076 = !DILocalVariable(name: "v", scope: !4077, file: !434, line: 698, type: !110)
!4077 = distinct !DILexicalBlock(scope: !4078, file: !434, line: 697, column: 41)
!4078 = distinct !DILexicalBlock(scope: !4075, file: !434, line: 697, column: 14)
!4079 = !DILocalVariable(name: "pos", scope: !4080, file: !434, line: 762, type: !169)
!4080 = distinct !DILexicalBlock(scope: !4081, file: !434, line: 757, column: 31)
!4081 = distinct !DILexicalBlock(scope: !4082, file: !434, line: 757, column: 3)
!4082 = distinct !DILexicalBlock(scope: !4083, file: !434, line: 757, column: 3)
!4083 = distinct !DILexicalBlock(scope: !4084, file: !434, line: 756, column: 16)
!4084 = distinct !DILexicalBlock(scope: !4008, file: !434, line: 756, column: 6)
!4085 = !DILabel(scope: !4064, name: "process_string", file: !434, line: 615)
!4086 = !DILocation(line: 0, scope: !4008)
!4087 = !DILocation(line: 251, column: 2, scope: !4008)
!4088 = !DILocation(line: 251, column: 10, scope: !4008)
!4089 = !DILocation(line: 252, column: 2, scope: !4008)
!4090 = !DILocation(line: 252, column: 10, scope: !4008)
!4091 = !DILocation(line: 263, column: 29, scope: !4008)
!4092 = !DILocation(line: 263, column: 21, scope: !4008)
!4093 = !DILocation(line: 268, column: 21, scope: !4008)
!4094 = !DILocation(line: 268, column: 19, scope: !4008)
!4095 = !DILocation(line: 273, column: 6, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4008, file: !434, line: 273, column: 6)
!4097 = !DILocation(line: 273, column: 26, scope: !4096)
!4098 = !DILocation(line: 273, column: 6, scope: !4008)
!4099 = !DILocation(line: 297, column: 6, scope: !4008)
!4100 = !DILocation(line: 305, column: 11, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4008, file: !434, line: 305, column: 6)
!4102 = !DILocation(line: 305, column: 6, scope: !4008)
!4103 = !DILocation(line: 327, column: 19, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4008, file: !434, line: 327, column: 6)
!4105 = !DILocation(line: 327, column: 22, scope: !4104)
!4106 = !DILocation(line: 327, column: 33, scope: !4104)
!4107 = !DILocation(line: 327, column: 50, scope: !4104)
!4108 = !DILocation(line: 327, column: 6, scope: !4008)
!4109 = !DILocation(line: 338, column: 9, scope: !4008)
!4110 = !DILocation(line: 341, column: 2, scope: !4008)
!4111 = !DILocation(line: 472, column: 8, scope: !4057)
!4112 = !DILocation(line: 473, column: 14, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !4114, file: !434, line: 473, column: 9)
!4114 = distinct !DILexicalBlock(scope: !4115, file: !434, line: 472, column: 18)
!4115 = distinct !DILexicalBlock(scope: !4057, file: !434, line: 472, column: 8)
!4116 = !DILocation(line: 473, column: 9, scope: !4114)
!4117 = !DILocation(line: 479, column: 5, scope: !4114)
!4118 = !DILocation(line: 468, column: 9, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4057, file: !434, line: 468, column: 8)
!4120 = !DILocation(line: 468, column: 8, scope: !4119)
!4121 = !DILocation(line: 468, column: 15, scope: !4119)
!4122 = !DILocation(line: 468, column: 8, scope: !4057)
!4123 = distinct !{!4123, !4124, !4125}
!4124 = !DILocation(line: 343, column: 2, scope: !4008)
!4125 = !DILocation(line: 712, column: 2, scope: !4008)
!4126 = !DILocation(line: 481, column: 4, scope: !4057)
!4127 = !DILocation(line: 484, column: 12, scope: !4056)
!4128 = !DILocation(line: 485, column: 5, scope: !4056)
!4129 = !DILocation(line: 505, column: 5, scope: !4056)
!4130 = !DILocation(line: 518, column: 5, scope: !4056)
!4131 = !DILocation(line: 523, column: 5, scope: !4056)
!4132 = !DILocation(line: 532, column: 9, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4056, file: !434, line: 532, column: 9)
!4134 = !DILocation(line: 532, column: 17, scope: !4133)
!4135 = !DILocation(line: 532, column: 9, scope: !4056)
!4136 = !DILocation(line: 533, column: 10, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !4138, file: !434, line: 533, column: 10)
!4138 = distinct !DILexicalBlock(scope: !4133, file: !434, line: 532, column: 25)
!4139 = !DILocation(line: 533, column: 18, scope: !4137)
!4140 = !DILocation(line: 0, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4055, file: !434, line: 569, column: 9)
!4142 = !DILocation(line: 0, scope: !4055)
!4143 = !DILocation(line: 579, column: 20, scope: !4055)
!4144 = !DILocation(line: 579, column: 11, scope: !4055)
!4145 = !DILocation(line: 580, column: 9, scope: !4055)
!4146 = !DILocation(line: 582, column: 21, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4148, file: !434, line: 582, column: 10)
!4148 = distinct !DILexicalBlock(scope: !4149, file: !434, line: 580, column: 23)
!4149 = distinct !DILexicalBlock(scope: !4055, file: !434, line: 580, column: 9)
!4150 = !DILocation(line: 582, column: 28, scope: !4147)
!4151 = !DILocation(line: 582, column: 10, scope: !4148)
!4152 = !DILocation(line: 0, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4154, file: !434, line: 587, column: 17)
!4154 = distinct !DILexicalBlock(scope: !4148, file: !434, line: 585, column: 10)
!4155 = !DILocation(line: 593, column: 9, scope: !4055)
!4156 = !DILocation(line: 600, column: 5, scope: !4056)
!4157 = !DILocation(line: 605, column: 18, scope: !4058)
!4158 = !DILocation(line: 605, column: 9, scope: !4058)
!4159 = !DILocation(line: 608, column: 20, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4058, file: !434, line: 608, column: 7)
!4161 = !DILocation(line: 608, column: 23, scope: !4160)
!4162 = !DILocation(line: 608, column: 34, scope: !4160)
!4163 = !DILocation(line: 608, column: 41, scope: !4160)
!4164 = !DILocation(line: 608, column: 7, scope: !4058)
!4165 = !DILocation(line: 613, column: 7, scope: !4058)
!4166 = !DILocation(line: 614, column: 8, scope: !4064)
!4167 = !DILocation(line: 614, column: 4, scope: !4064)
!4168 = !DILocation(line: 256, column: 6, scope: !4008)
!4169 = !DILocation(line: 254, column: 15, scope: !4008)
!4170 = !DILocation(line: 320, column: 7, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4101, file: !434, line: 305, column: 20)
!4172 = !DILocation(line: 615, column: 1, scope: !4064)
!4173 = !DILocation(line: 616, column: 8, scope: !4064)
!4174 = !DILocation(line: 617, column: 5, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4176, file: !434, line: 616, column: 22)
!4176 = distinct !DILexicalBlock(scope: !4064, file: !434, line: 616, column: 8)
!4177 = !DILocation(line: 617, column: 25, scope: !4175)
!4178 = !DILocation(line: 618, column: 4, scope: !4175)
!4179 = !DILocation(line: 620, column: 26, scope: !4064)
!4180 = !DILocation(line: 620, column: 29, scope: !4064)
!4181 = !DILocation(line: 620, column: 17, scope: !4064)
!4182 = !DILocation(line: 620, column: 43, scope: !4064)
!4183 = !DILocation(line: 0, scope: !4064)
!4184 = !DILocation(line: 623, column: 14, scope: !4069)
!4185 = !DILocation(line: 626, column: 26, scope: !4068)
!4186 = !DILocation(line: 626, column: 37, scope: !4068)
!4187 = !DILocation(line: 0, scope: !4068)
!4188 = !DILocation(line: 634, column: 15, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4068, file: !434, line: 634, column: 9)
!4190 = !DILocation(line: 635, column: 6, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4192, file: !434, line: 635, column: 6)
!4192 = distinct !DILexicalBlock(scope: !4193, file: !434, line: 635, column: 6)
!4193 = distinct !DILexicalBlock(scope: !4194, file: !434, line: 635, column: 6)
!4194 = distinct !DILexicalBlock(scope: !4189, file: !434, line: 634, column: 44)
!4195 = !DILocation(line: 639, column: 15, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4068, file: !434, line: 639, column: 9)
!4197 = !DILocation(line: 639, column: 9, scope: !4068)
!4198 = !DILocation(line: 640, column: 6, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4200, file: !434, line: 640, column: 6)
!4200 = distinct !DILexicalBlock(scope: !4201, file: !434, line: 640, column: 6)
!4201 = distinct !DILexicalBlock(scope: !4202, file: !434, line: 640, column: 6)
!4202 = distinct !DILexicalBlock(scope: !4196, file: !434, line: 639, column: 43)
!4203 = !DILocation(line: 644, column: 9, scope: !4068)
!4204 = !DILocation(line: 649, column: 27, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4206, file: !434, line: 644, column: 23)
!4206 = distinct !DILexicalBlock(scope: !4068, file: !434, line: 644, column: 9)
!4207 = !DILocation(line: 649, column: 6, scope: !4205)
!4208 = !DILocation(line: 649, column: 25, scope: !4205)
!4209 = !DILocation(line: 650, column: 27, scope: !4205)
!4210 = !DILocation(line: 650, column: 6, scope: !4205)
!4211 = !DILocation(line: 650, column: 25, scope: !4205)
!4212 = !DILocation(line: 651, column: 10, scope: !4205)
!4213 = !DILocation(line: 653, column: 26, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4215, file: !434, line: 651, column: 17)
!4215 = distinct !DILexicalBlock(scope: !4205, file: !434, line: 651, column: 10)
!4216 = !DILocation(line: 654, column: 15, scope: !4214)
!4217 = !DILocation(line: 655, column: 6, scope: !4214)
!4218 = !DILocation(line: 656, column: 15, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4215, file: !434, line: 655, column: 13)
!4220 = !DILocation(line: 658, column: 16, scope: !4206)
!4221 = !DILocation(line: 663, column: 10, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4223, file: !434, line: 658, column: 23)
!4223 = distinct !DILexicalBlock(scope: !4206, file: !434, line: 658, column: 16)
!4224 = !DILocation(line: 664, column: 5, scope: !4222)
!4225 = !DILocation(line: 664, column: 16, scope: !4223)
!4226 = !DILocation(line: 669, column: 10, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4228, file: !434, line: 664, column: 28)
!4228 = distinct !DILexicalBlock(scope: !4223, file: !434, line: 664, column: 16)
!4229 = !DILocation(line: 670, column: 5, scope: !4227)
!4230 = !DILocation(line: 675, column: 13, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4228, file: !434, line: 670, column: 12)
!4232 = !DILocation(line: 675, column: 27, scope: !4231)
!4233 = !DILocation(line: 675, column: 10, scope: !4231)
!4234 = !DILocation(line: 678, column: 10, scope: !4068)
!4235 = !DILocation(line: 680, column: 8, scope: !4064)
!4236 = !DILocation(line: 683, column: 14, scope: !4065)
!4237 = !DILocation(line: 684, column: 12, scope: !4071)
!4238 = !DILocation(line: 0, scope: !4071)
!4239 = !DILocation(line: 686, column: 8, scope: !4071)
!4240 = !DILocation(line: 687, column: 5, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4242, file: !434, line: 686, column: 22)
!4242 = distinct !DILexicalBlock(scope: !4071, file: !434, line: 686, column: 8)
!4243 = !DILocation(line: 687, column: 17, scope: !4241)
!4244 = !DILocation(line: 688, column: 4, scope: !4241)
!4245 = !DILocation(line: 698, column: 18, scope: !4077)
!4246 = !DILocation(line: 0, scope: !4077)
!4247 = !DILocation(line: 700, column: 8, scope: !4077)
!4248 = !DILocation(line: 704, column: 6, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4250, file: !434, line: 703, column: 12)
!4250 = distinct !DILexicalBlock(scope: !4251, file: !434, line: 701, column: 9)
!4251 = distinct !DILexicalBlock(scope: !4252, file: !434, line: 700, column: 22)
!4252 = distinct !DILexicalBlock(scope: !4077, file: !434, line: 700, column: 8)
!4253 = !DILocation(line: 704, column: 24, scope: !4249)
!4254 = !DILocation(line: 706, column: 4, scope: !4251)
!4255 = !DILocation(line: 709, column: 4, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4257, file: !434, line: 709, column: 4)
!4257 = distinct !DILexicalBlock(scope: !4258, file: !434, line: 709, column: 4)
!4258 = distinct !DILexicalBlock(scope: !4259, file: !434, line: 709, column: 4)
!4259 = distinct !DILexicalBlock(scope: !4078, file: !434, line: 708, column: 10)
!4260 = !DILocation(line: 0, scope: !4072)
!4261 = !DILocation(line: 0, scope: !4058)
!4262 = !DILocation(line: 720, column: 6, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4008, file: !434, line: 720, column: 6)
!4264 = !DILocation(line: 720, column: 17, scope: !4263)
!4265 = !DILocation(line: 720, column: 31, scope: !4263)
!4266 = !DILocation(line: 720, column: 6, scope: !4008)
!4267 = !DILocation(line: 721, column: 3, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4269, file: !434, line: 721, column: 3)
!4269 = distinct !DILexicalBlock(scope: !4270, file: !434, line: 721, column: 3)
!4270 = distinct !DILexicalBlock(scope: !4271, file: !434, line: 721, column: 3)
!4271 = distinct !DILexicalBlock(scope: !4263, file: !434, line: 720, column: 38)
!4272 = !DILocation(line: 729, column: 6, scope: !4008)
!4273 = !DILocation(line: 730, column: 21, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4275, file: !434, line: 729, column: 20)
!4275 = distinct !DILexicalBlock(scope: !4008, file: !434, line: 729, column: 6)
!4276 = !DILocation(line: 730, column: 27, scope: !4274)
!4277 = !DILocation(line: 730, column: 3, scope: !4274)
!4278 = !DILocation(line: 737, column: 22, scope: !4008)
!4279 = !DILocation(line: 737, column: 20, scope: !4008)
!4280 = !DILocation(line: 0, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4008, file: !434, line: 739, column: 6)
!4282 = !DILocation(line: 745, column: 17, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4281, file: !434, line: 743, column: 9)
!4284 = !DILocation(line: 745, column: 25, scope: !4283)
!4285 = !DILocation(line: 746, column: 17, scope: !4283)
!4286 = !DILocation(line: 746, column: 28, scope: !4283)
!4287 = !DILocation(line: 749, column: 29, scope: !4008)
!4288 = !DILocation(line: 749, column: 16, scope: !4008)
!4289 = !DILocation(line: 749, column: 27, scope: !4008)
!4290 = !DILocation(line: 756, column: 6, scope: !4084)
!4291 = !DILocation(line: 756, column: 6, scope: !4008)
!4292 = !DILocation(line: 757, column: 3, scope: !4082)
!4293 = !DILocation(line: 758, column: 10, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4080, file: !434, line: 758, column: 8)
!4295 = !DILocation(line: 758, column: 25, scope: !4294)
!4296 = !DILocation(line: 758, column: 8, scope: !4080)
!4297 = !DILocation(line: 0, scope: !4080)
!4298 = !DILocation(line: 765, column: 8, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4080, file: !434, line: 765, column: 8)
!4300 = !DILocation(line: 765, column: 19, scope: !4299)
!4301 = !DILocation(line: 765, column: 23, scope: !4299)
!4302 = !DILocation(line: 765, column: 8, scope: !4080)
!4303 = !DILocation(line: 762, column: 33, scope: !4080)
!4304 = !DILocation(line: 769, column: 8, scope: !4080)
!4305 = !DILocation(line: 769, column: 11, scope: !4080)
!4306 = !DILocation(line: 757, column: 27, scope: !4081)
!4307 = !DILocation(line: 757, column: 17, scope: !4081)
!4308 = distinct !{!4308, !4292, !4309}
!4309 = !DILocation(line: 770, column: 3, scope: !4082)
!4310 = !DILocation(line: 774, column: 16, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4312, file: !434, line: 774, column: 2)
!4312 = distinct !DILexicalBlock(scope: !4008, file: !434, line: 774, column: 2)
!4313 = !DILocation(line: 774, column: 2, scope: !4312)
!4314 = !DILocation(line: 776, column: 16, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4316, file: !434, line: 776, column: 7)
!4316 = distinct !DILexicalBlock(scope: !4311, file: !434, line: 774, column: 30)
!4317 = !DILocation(line: 776, column: 19, scope: !4315)
!4318 = !DILocation(line: 776, column: 34, scope: !4315)
!4319 = !DILocation(line: 776, column: 7, scope: !4316)
!4320 = !DILocation(line: 780, column: 7, scope: !4316)
!4321 = !DILocation(line: 782, column: 13, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4323, file: !434, line: 780, column: 19)
!4323 = distinct !DILexicalBlock(scope: !4316, file: !434, line: 780, column: 7)
!4324 = !DILocation(line: 782, column: 8, scope: !4322)
!4325 = !DILocation(line: 782, column: 11, scope: !4322)
!4326 = !DILocation(line: 783, column: 3, scope: !4322)
!4327 = !DILocation(line: 785, column: 26, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4323, file: !434, line: 783, column: 10)
!4329 = !DILocation(line: 785, column: 41, scope: !4328)
!4330 = !DILocation(line: 785, column: 24, scope: !4328)
!4331 = !DILocation(line: 785, column: 8, scope: !4328)
!4332 = !DILocation(line: 787, column: 52, scope: !4328)
!4333 = !DILocation(line: 789, column: 11, scope: !4328)
!4334 = !DILocation(line: 789, column: 21, scope: !4328)
!4335 = !DILocation(line: 0, scope: !4323)
!4336 = !DILocation(line: 793, column: 7, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4316, file: !434, line: 793, column: 7)
!4338 = !DILocation(line: 793, column: 18, scope: !4337)
!4339 = !DILocation(line: 793, column: 22, scope: !4337)
!4340 = !DILocation(line: 793, column: 29, scope: !4337)
!4341 = !DILocation(line: 793, column: 7, scope: !4316)
!4342 = !DILocation(line: 797, column: 12, scope: !4316)
!4343 = !DILocation(line: 797, column: 7, scope: !4316)
!4344 = !DILocation(line: 797, column: 10, scope: !4316)
!4345 = !DILocation(line: 799, column: 3, scope: !4316)
!4346 = !DILocation(line: 800, column: 7, scope: !4316)
!4347 = !DILocation(line: 801, column: 2, scope: !4316)
!4348 = !DILocation(line: 338, column: 4, scope: !4008)
!4349 = !DILocation(line: 774, column: 26, scope: !4311)
!4350 = distinct !{!4350, !4313, !4351}
!4351 = !DILocation(line: 801, column: 2, scope: !4312)
!4352 = !DILocation(line: 808, column: 9, scope: !4008)
!4353 = !DILocation(line: 808, column: 2, scope: !4008)
!4354 = !DILocation(line: 813, column: 1, scope: !4008)
!4355 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !434, file: !434, line: 33, type: !4356, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4358)
!4356 = !DISubroutineType(types: !4357)
!4357 = !{!492, !269}
!4358 = !{!4359}
!4359 = !DILocalVariable(name: "addr", arg: 1, scope: !4355, file: !434, line: 33, type: !269)
!4360 = !DILocation(line: 0, scope: !4355)
!4361 = !DILocation(line: 41, column: 9, scope: !4355)
!4362 = !DILocation(line: 41, column: 2, scope: !4355)
!4363 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4364, file: !4364, line: 24, type: !4365, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4367)
!4364 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4365 = !DISubroutineType(types: !4366)
!4366 = !{!492, !13}
!4367 = !{!4368}
!4368 = !DILocalVariable(name: "addr", arg: 1, scope: !4363, file: !4364, line: 24, type: !13)
!4369 = !DILocation(line: 0, scope: !4363)
!4370 = !DILocation(line: 49, column: 30, scope: !4363)
!4371 = !DILocation(line: 49, column: 57, scope: !4363)
!4372 = !DILocation(line: 49, column: 2, scope: !4363)
!4373 = distinct !DISubprogram(name: "cbprintf_package", scope: !434, file: !434, line: 815, type: !4374, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4376)
!4374 = !DISubroutineType(types: !4375)
!4375 = !{!105, !104, !111, !113, !269, null}
!4376 = !{!4377, !4378, !4379, !4380, !4381, !4382}
!4377 = !DILocalVariable(name: "packaged", arg: 1, scope: !4373, file: !434, line: 815, type: !104)
!4378 = !DILocalVariable(name: "len", arg: 2, scope: !4373, file: !434, line: 815, type: !111)
!4379 = !DILocalVariable(name: "flags", arg: 3, scope: !4373, file: !434, line: 815, type: !113)
!4380 = !DILocalVariable(name: "format", arg: 4, scope: !4373, file: !434, line: 816, type: !269)
!4381 = !DILocalVariable(name: "ap", scope: !4373, file: !434, line: 818, type: !4011)
!4382 = !DILocalVariable(name: "ret", scope: !4373, file: !434, line: 819, type: !105)
!4383 = !DILocation(line: 0, scope: !4373)
!4384 = !DILocation(line: 818, column: 2, scope: !4373)
!4385 = !DILocation(line: 818, column: 10, scope: !4373)
!4386 = !DILocation(line: 821, column: 2, scope: !4373)
!4387 = !DILocation(line: 822, column: 8, scope: !4373)
!4388 = !DILocation(line: 823, column: 2, scope: !4373)
!4389 = !DILocation(line: 825, column: 1, scope: !4373)
!4390 = !DILocation(line: 824, column: 2, scope: !4373)
!4391 = distinct !DISubprogram(name: "cbpprintf_external", scope: !434, file: !434, line: 827, type: !4392, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4402)
!4392 = !DISubroutineType(types: !4393)
!4393 = !{!105, !4394, !4398, !104, !104}
!4394 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4044, line: 297, baseType: !4395)
!4395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4396, size: 32)
!4396 = !DISubroutineType(types: !4397)
!4397 = !{!105, null}
!4398 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4044, line: 328, baseType: !4399)
!4399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4400, size: 32)
!4400 = !DISubroutineType(types: !4401)
!4401 = !{!105, !4394, !104, !269, !4011}
!4402 = !{!4403, !4404, !4405, !4406, !4407, !4408, !4414, !4415, !4416, !4417, !4418, !4419, !4420, !4421}
!4403 = !DILocalVariable(name: "out", arg: 1, scope: !4391, file: !434, line: 827, type: !4394)
!4404 = !DILocalVariable(name: "formatter", arg: 2, scope: !4391, file: !434, line: 828, type: !4398)
!4405 = !DILocalVariable(name: "ctx", arg: 3, scope: !4391, file: !434, line: 829, type: !104)
!4406 = !DILocalVariable(name: "packaged", arg: 4, scope: !4391, file: !434, line: 829, type: !104)
!4407 = !DILocalVariable(name: "buf", scope: !4391, file: !434, line: 831, type: !432)
!4408 = !DILocalVariable(name: "hdr", scope: !4391, file: !434, line: 832, type: !4409)
!4409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4410, size: 32)
!4410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4044, line: 96, size: 64, elements: !4411)
!4411 = !{!4412, !4413}
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4410, file: !4044, line: 98, baseType: !4043, size: 32)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4410, file: !4044, line: 101, baseType: !102, size: 32, offset: 32)
!4414 = !DILocalVariable(name: "s", scope: !4391, file: !434, line: 833, type: !102)
!4415 = !DILocalVariable(name: "ps", scope: !4391, file: !434, line: 833, type: !431)
!4416 = !DILocalVariable(name: "i", scope: !4391, file: !434, line: 834, type: !32)
!4417 = !DILocalVariable(name: "args_size", scope: !4391, file: !434, line: 834, type: !32)
!4418 = !DILocalVariable(name: "s_nbr", scope: !4391, file: !434, line: 834, type: !32)
!4419 = !DILocalVariable(name: "ros_nbr", scope: !4391, file: !434, line: 834, type: !32)
!4420 = !DILocalVariable(name: "rws_nbr", scope: !4391, file: !434, line: 834, type: !32)
!4421 = !DILocalVariable(name: "s_idx", scope: !4391, file: !434, line: 834, type: !32)
!4422 = !DILocation(line: 0, scope: !4391)
!4423 = !DILocation(line: 836, column: 10, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4391, file: !434, line: 836, column: 6)
!4425 = !DILocation(line: 836, column: 6, scope: !4391)
!4426 = !DILocation(line: 842, column: 28, scope: !4391)
!4427 = !DILocation(line: 842, column: 14, scope: !4391)
!4428 = !DILocation(line: 852, column: 16, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4430, file: !434, line: 852, column: 2)
!4430 = distinct !DILexicalBlock(scope: !4391, file: !434, line: 852, column: 2)
!4431 = !DILocation(line: 852, column: 2, scope: !4430)
!4432 = !DILocation(line: 841, column: 28, scope: !4391)
!4433 = !DILocation(line: 841, column: 14, scope: !4391)
!4434 = !DILocation(line: 841, column: 32, scope: !4391)
!4435 = !DILocation(line: 847, column: 19, scope: !4391)
!4436 = !DILocation(line: 843, column: 28, scope: !4391)
!4437 = !DILocation(line: 843, column: 14, scope: !4391)
!4438 = !DILocation(line: 847, column: 31, scope: !4391)
!4439 = !DILocation(line: 844, column: 28, scope: !4391)
!4440 = !DILocation(line: 844, column: 14, scope: !4391)
!4441 = !DILocation(line: 847, column: 45, scope: !4391)
!4442 = !DILocation(line: 847, column: 41, scope: !4391)
!4443 = !DILocation(line: 854, column: 24, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4429, file: !434, line: 852, column: 30)
!4445 = !DILocation(line: 854, column: 11, scope: !4444)
!4446 = !DILocation(line: 855, column: 30, scope: !4444)
!4447 = !DILocation(line: 855, column: 22, scope: !4444)
!4448 = !DILocation(line: 855, column: 8, scope: !4444)
!4449 = !DILocation(line: 857, column: 7, scope: !4444)
!4450 = !DILocation(line: 859, column: 8, scope: !4444)
!4451 = !DILocation(line: 859, column: 18, scope: !4444)
!4452 = !DILocation(line: 859, column: 5, scope: !4444)
!4453 = !DILocation(line: 852, column: 26, scope: !4429)
!4454 = distinct !{!4454, !4431, !4455}
!4455 = !DILocation(line: 860, column: 2, scope: !4430)
!4456 = !DILocation(line: 863, column: 6, scope: !4391)
!4457 = !DILocation(line: 866, column: 56, scope: !4391)
!4458 = !DILocation(line: 866, column: 9, scope: !4391)
!4459 = !DILocation(line: 866, column: 2, scope: !4391)
!4460 = !DILocation(line: 867, column: 1, scope: !4391)
!4461 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !434, file: !434, line: 179, type: !4462, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4464)
!4462 = !DISubroutineType(types: !4463)
!4463 = !{!105, !4394, !4398, !104, !269, !104}
!4464 = !{!4465, !4466, !4467, !4468, !4469, !4470}
!4465 = !DILocalVariable(name: "out", arg: 1, scope: !4461, file: !434, line: 179, type: !4394)
!4466 = !DILocalVariable(name: "formatter", arg: 2, scope: !4461, file: !434, line: 180, type: !4398)
!4467 = !DILocalVariable(name: "ctx", arg: 3, scope: !4461, file: !434, line: 181, type: !104)
!4468 = !DILocalVariable(name: "fmt", arg: 4, scope: !4461, file: !434, line: 182, type: !269)
!4469 = !DILocalVariable(name: "buf", arg: 5, scope: !4461, file: !434, line: 182, type: !104)
!4470 = !DILocalVariable(name: "u", scope: !4461, file: !434, line: 187, type: !4471)
!4471 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4461, file: !434, line: 184, size: 32, elements: !4472)
!4472 = !{!4473, !4474}
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4471, file: !434, line: 185, baseType: !4011, size: 32)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4471, file: !434, line: 186, baseType: !104, size: 32)
!4475 = !DILocation(line: 0, scope: !4461)
!4476 = !DILocation(line: 191, column: 9, scope: !4461)
!4477 = !DILocation(line: 191, column: 2, scope: !4461)
!4478 = distinct !DISubprogram(name: "is_ptr", scope: !434, file: !434, line: 881, type: !4479, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4481)
!4479 = !DISubroutineType(types: !4480)
!4480 = !{!492, !269, !105}
!4481 = !{!4482, !4483, !4484, !4485, !4486}
!4482 = !DILocalVariable(name: "fmt", arg: 1, scope: !4478, file: !434, line: 881, type: !269)
!4483 = !DILocalVariable(name: "n", arg: 2, scope: !4478, file: !434, line: 881, type: !105)
!4484 = !DILocalVariable(name: "c", scope: !4478, file: !434, line: 883, type: !103)
!4485 = !DILocalVariable(name: "mod", scope: !4478, file: !434, line: 884, type: !492)
!4486 = !DILocalVariable(name: "cnt", scope: !4478, file: !434, line: 885, type: !105)
!4487 = !DILocation(line: 0, scope: !4478)
!4488 = !DILocation(line: 887, column: 14, scope: !4478)
!4489 = !DILocation(line: 887, column: 22, scope: !4478)
!4490 = !DILocation(line: 887, column: 2, scope: !4478)
!4491 = !DILocation(line: 887, column: 18, scope: !4478)
!4492 = !DILocation(line: 888, column: 7, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4478, file: !434, line: 887, column: 31)
!4494 = !DILocation(line: 889, column: 12, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4496, file: !434, line: 889, column: 8)
!4496 = distinct !DILexicalBlock(scope: !4497, file: !434, line: 888, column: 12)
!4497 = distinct !DILexicalBlock(scope: !4493, file: !434, line: 888, column: 7)
!4498 = !DILocation(line: 889, column: 8, scope: !4496)
!4499 = !DILocation(line: 890, column: 11, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4501, file: !434, line: 890, column: 9)
!4501 = distinct !DILexicalBlock(scope: !4495, file: !434, line: 889, column: 18)
!4502 = !DILocation(line: 890, column: 9, scope: !4501)
!4503 = !DILocation(line: 892, column: 16, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4500, file: !434, line: 892, column: 16)
!4505 = !DILocation(line: 892, column: 16, scope: !4500)
!4506 = !DILocation(line: 895, column: 15, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4495, file: !434, line: 895, column: 15)
!4508 = !DILocation(line: 895, column: 15, scope: !4495)
!4509 = !DILocation(line: 900, column: 9, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4493, file: !434, line: 900, column: 7)
!4511 = !DILocation(line: 900, column: 7, scope: !4493)
!4512 = distinct !{!4512, !4490, !4513}
!4513 = !DILocation(line: 903, column: 2, scope: !4478)
!4514 = !DILocation(line: 906, column: 1, scope: !4478)
!4515 = distinct !DISubprogram(name: "is_fmt_spec", scope: !434, file: !434, line: 873, type: !4516, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4518)
!4516 = !DISubroutineType(types: !4517)
!4517 = !{!492, !103}
!4518 = !{!4519}
!4519 = !DILocalVariable(name: "c", arg: 1, scope: !4515, file: !434, line: 873, type: !103)
!4520 = !DILocation(line: 0, scope: !4515)
!4521 = !DILocation(line: 875, column: 19, scope: !4515)
!4522 = !DILocation(line: 875, column: 2, scope: !4515)
!4523 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !434, file: !434, line: 908, type: !4524, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4530)
!4524 = !DISubroutineType(types: !4525)
!4525 = !{!105, !104, !111, !4526, !104, !113, !2625, !111}
!4526 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4044, line: 308, baseType: !4527)
!4527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4528, size: 32)
!4528 = !DISubroutineType(types: !4529)
!4529 = !{!105, !13, !111, !104}
!4530 = !{!4531, !4532, !4533, !4534, !4535, !4536, !4537, !4538, !4539, !4540, !4541, !4542, !4543, !4544, !4545, !4546, !4548, !4549, !4550, !4551, !4552, !4558, !4561, !4562, !4563, !4565, !4568, !4569, !4570, !4571, !4572, !4573, !4574, !4575, !4576, !4577, !4578, !4579, !4581, !4584, !4585, !4586, !4587, !4588, !4589, !4591, !4594, !4595, !4596}
!4531 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4523, file: !434, line: 908, type: !104)
!4532 = !DILocalVariable(name: "in_len", arg: 2, scope: !4523, file: !434, line: 909, type: !111)
!4533 = !DILocalVariable(name: "cb", arg: 3, scope: !4523, file: !434, line: 910, type: !4526)
!4534 = !DILocalVariable(name: "ctx", arg: 4, scope: !4523, file: !434, line: 911, type: !104)
!4535 = !DILocalVariable(name: "flags", arg: 5, scope: !4523, file: !434, line: 912, type: !113)
!4536 = !DILocalVariable(name: "strl", arg: 6, scope: !4523, file: !434, line: 913, type: !2625)
!4537 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4523, file: !434, line: 914, type: !111)
!4538 = !DILocalVariable(name: "buf", scope: !4523, file: !434, line: 918, type: !432)
!4539 = !DILocalVariable(name: "buf32", scope: !4523, file: !434, line: 919, type: !1010)
!4540 = !DILocalVariable(name: "args_size", scope: !4523, file: !434, line: 920, type: !32)
!4541 = !DILocalVariable(name: "ros_nbr", scope: !4523, file: !434, line: 920, type: !32)
!4542 = !DILocalVariable(name: "rws_nbr", scope: !4523, file: !434, line: 920, type: !32)
!4543 = !DILocalVariable(name: "fmt_present", scope: !4523, file: !434, line: 921, type: !492)
!4544 = !DILocalVariable(name: "rw_cpy", scope: !4523, file: !434, line: 922, type: !492)
!4545 = !DILocalVariable(name: "ro_cpy", scope: !4523, file: !434, line: 923, type: !492)
!4546 = !DILocalVariable(name: "in_desc", scope: !4523, file: !434, line: 924, type: !4547)
!4547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4047, size: 32)
!4548 = !DILocalVariable(name: "out_len", scope: !4523, file: !434, line: 960, type: !105)
!4549 = !DILocalVariable(name: "fmt", scope: !4523, file: !434, line: 965, type: !269)
!4550 = !DILocalVariable(name: "str_pos", scope: !4523, file: !434, line: 966, type: !432)
!4551 = !DILocalVariable(name: "strl_cnt", scope: !4523, file: !434, line: 967, type: !111)
!4552 = !DILocalVariable(name: "i", scope: !4553, file: !434, line: 973, type: !105)
!4553 = distinct !DILexicalBlock(scope: !4554, file: !434, line: 973, column: 4)
!4554 = distinct !DILexicalBlock(scope: !4555, file: !434, line: 972, column: 15)
!4555 = distinct !DILexicalBlock(scope: !4556, file: !434, line: 972, column: 7)
!4556 = distinct !DILexicalBlock(scope: !4557, file: !434, line: 970, column: 18)
!4557 = distinct !DILexicalBlock(scope: !4523, file: !434, line: 970, column: 6)
!4558 = !DILocalVariable(name: "str", scope: !4559, file: !434, line: 974, type: !269)
!4559 = distinct !DILexicalBlock(scope: !4560, file: !434, line: 973, column: 38)
!4560 = distinct !DILexicalBlock(scope: !4553, file: !434, line: 973, column: 4)
!4561 = !DILocalVariable(name: "len", scope: !4559, file: !434, line: 975, type: !105)
!4562 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4556, file: !434, line: 990, type: !492)
!4563 = !DILocalVariable(name: "i", scope: !4564, file: !434, line: 995, type: !105)
!4564 = distinct !DILexicalBlock(scope: !4556, file: !434, line: 995, column: 3)
!4565 = !DILocalVariable(name: "arg_idx", scope: !4566, file: !434, line: 996, type: !169)
!4566 = distinct !DILexicalBlock(scope: !4567, file: !434, line: 995, column: 37)
!4567 = distinct !DILexicalBlock(scope: !4564, file: !434, line: 995, column: 3)
!4568 = !DILocalVariable(name: "arg_pos", scope: !4566, file: !434, line: 997, type: !169)
!4569 = !DILocalVariable(name: "str", scope: !4566, file: !434, line: 998, type: !269)
!4570 = !DILocalVariable(name: "is_ro", scope: !4566, file: !434, line: 999, type: !492)
!4571 = !DILocalVariable(name: "len", scope: !4566, file: !434, line: 1000, type: !105)
!4572 = !DILocalVariable(name: "out_desc", scope: !4523, file: !434, line: 1038, type: !4047)
!4573 = !DILocalVariable(name: "cpy_str_pos", scope: !4523, file: !434, line: 1040, type: !4029)
!4574 = !DILocalVariable(name: "keep_str_pos", scope: !4523, file: !434, line: 1042, type: !4029)
!4575 = !DILocalVariable(name: "scpy_cnt", scope: !4523, file: !434, line: 1043, type: !169)
!4576 = !DILocalVariable(name: "keep_cnt", scope: !4523, file: !434, line: 1044, type: !169)
!4577 = !DILocalVariable(name: "dst", scope: !4523, file: !434, line: 1045, type: !432)
!4578 = !DILocalVariable(name: "rv", scope: !4523, file: !434, line: 1046, type: !105)
!4579 = !DILocalVariable(name: "i", scope: !4580, file: !434, line: 1074, type: !105)
!4580 = distinct !DILexicalBlock(scope: !4523, file: !434, line: 1074, column: 2)
!4581 = !DILocalVariable(name: "arg_idx", scope: !4582, file: !434, line: 1075, type: !169)
!4582 = distinct !DILexicalBlock(scope: !4583, file: !434, line: 1074, column: 36)
!4583 = distinct !DILexicalBlock(scope: !4580, file: !434, line: 1074, column: 2)
!4584 = !DILocalVariable(name: "arg_pos", scope: !4582, file: !434, line: 1076, type: !169)
!4585 = !DILocalVariable(name: "str", scope: !4582, file: !434, line: 1077, type: !269)
!4586 = !DILocalVariable(name: "is_ro", scope: !4582, file: !434, line: 1078, type: !492)
!4587 = !DILocalVariable(name: "in_desc_backup", scope: !4523, file: !434, line: 1114, type: !4047)
!4588 = !DILocalVariable(name: "strs_len", scope: !4523, file: !434, line: 1134, type: !111)
!4589 = !DILocalVariable(name: "i", scope: !4590, file: !434, line: 1143, type: !105)
!4590 = distinct !DILexicalBlock(scope: !4523, file: !434, line: 1143, column: 2)
!4591 = !DILocalVariable(name: "loc", scope: !4592, file: !434, line: 1144, type: !169)
!4592 = distinct !DILexicalBlock(scope: !4593, file: !434, line: 1143, column: 37)
!4593 = distinct !DILexicalBlock(scope: !4590, file: !434, line: 1143, column: 2)
!4594 = !DILocalVariable(name: "str", scope: !4592, file: !434, line: 1145, type: !269)
!4595 = !DILocalVariable(name: "str_len", scope: !4592, file: !434, line: 1146, type: !183)
!4596 = !DILabel(scope: !4597, name: "calculate_string_length", file: !434, line: 1021)
!4597 = distinct !DILexicalBlock(scope: !4598, file: !434, line: 1020, column: 56)
!4598 = distinct !DILexicalBlock(scope: !4599, file: !434, line: 1020, column: 15)
!4599 = distinct !DILexicalBlock(scope: !4566, file: !434, line: 1014, column: 8)
!4600 = !DILocation(line: 0, scope: !4523)
!4601 = !DILocation(line: 916, column: 2, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4603, file: !434, line: 916, column: 2)
!4603 = distinct !DILexicalBlock(scope: !4523, file: !434, line: 916, column: 2)
!4604 = !DILocation(line: 916, column: 2, scope: !4603)
!4605 = !DILocation(line: 916, column: 2, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4602, file: !434, line: 916, column: 2)
!4607 = !DILocation(line: 919, column: 20, scope: !4523)
!4608 = !DILocation(line: 921, column: 27, scope: !4523)
!4609 = !DILocation(line: 921, column: 21, scope: !4523)
!4610 = !DILocation(line: 926, column: 18, scope: !4523)
!4611 = !DILocation(line: 926, column: 11, scope: !4523)
!4612 = !DILocation(line: 926, column: 34, scope: !4523)
!4613 = !DILocation(line: 931, column: 21, scope: !4523)
!4614 = !DILocation(line: 931, column: 12, scope: !4523)
!4615 = !DILocation(line: 932, column: 11, scope: !4523)
!4616 = !DILocation(line: 932, column: 19, scope: !4523)
!4617 = !DILocation(line: 938, column: 21, scope: !4523)
!4618 = !DILocation(line: 938, column: 12, scope: !4523)
!4619 = !DILocation(line: 939, column: 19, scope: !4523)
!4620 = !DILocation(line: 939, column: 23, scope: !4523)
!4621 = !DILocation(line: 946, column: 14, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4523, file: !434, line: 946, column: 6)
!4623 = !DILocation(line: 947, column: 7, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4625, file: !434, line: 947, column: 7)
!4625 = distinct !DILexicalBlock(scope: !4622, file: !434, line: 946, column: 26)
!4626 = !DILocation(line: 947, column: 7, scope: !4625)
!4627 = !DILocation(line: 948, column: 4, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4624, file: !434, line: 947, column: 11)
!4629 = !DILocation(line: 949, column: 3, scope: !4628)
!4630 = !DILocation(line: 958, column: 23, scope: !4523)
!4631 = !DILocation(line: 958, column: 14, scope: !4523)
!4632 = !DILocation(line: 958, column: 27, scope: !4523)
!4633 = !DILocation(line: 965, column: 41, scope: !4523)
!4634 = !DILocation(line: 965, column: 20, scope: !4523)
!4635 = !DILocation(line: 966, column: 22, scope: !4523)
!4636 = !DILocation(line: 970, column: 9, scope: !4557)
!4637 = !DILocation(line: 970, column: 6, scope: !4523)
!4638 = !DILocation(line: 972, column: 7, scope: !4556)
!4639 = !DILocation(line: 0, scope: !4553)
!4640 = !DILocation(line: 973, column: 4, scope: !4553)
!4641 = !DILocation(line: 974, column: 46, scope: !4559)
!4642 = !DILocation(line: 974, column: 40, scope: !4559)
!4643 = !DILocation(line: 974, column: 23, scope: !4559)
!4644 = !DILocation(line: 0, scope: !4559)
!4645 = !DILocation(line: 975, column: 15, scope: !4559)
!4646 = !DILocation(line: 978, column: 14, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4559, file: !434, line: 978, column: 9)
!4648 = !DILocation(line: 979, column: 25, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4647, file: !434, line: 978, column: 38)
!4650 = !DILocation(line: 979, column: 19, scope: !4649)
!4651 = !DILocation(line: 979, column: 6, scope: !4649)
!4652 = !DILocation(line: 979, column: 23, scope: !4649)
!4653 = !DILocation(line: 980, column: 5, scope: !4649)
!4654 = !DILocation(line: 981, column: 13, scope: !4559)
!4655 = !DILocation(line: 982, column: 12, scope: !4559)
!4656 = !DILocation(line: 973, column: 34, scope: !4560)
!4657 = !DILocation(line: 973, column: 22, scope: !4560)
!4658 = distinct !{!4658, !4640, !4659}
!4659 = !DILocation(line: 983, column: 4, scope: !4553)
!4660 = !DILocation(line: 985, column: 16, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4662, file: !434, line: 985, column: 8)
!4662 = distinct !DILexicalBlock(scope: !4555, file: !434, line: 984, column: 10)
!4663 = !DILocation(line: 967, column: 9, scope: !4523)
!4664 = !DILocation(line: 971, column: 11, scope: !4556)
!4665 = !DILocation(line: 0, scope: !4556)
!4666 = !DILocation(line: 0, scope: !4564)
!4667 = !DILocation(line: 995, column: 21, scope: !4567)
!4668 = !DILocation(line: 995, column: 3, scope: !4564)
!4669 = !DILocation(line: 990, column: 34, scope: !4556)
!4670 = !DILocation(line: 990, column: 26, scope: !4556)
!4671 = !DILocation(line: 996, column: 30, scope: !4566)
!4672 = !DILocation(line: 0, scope: !4566)
!4673 = !DILocation(line: 997, column: 30, scope: !4566)
!4674 = !DILocation(line: 997, column: 22, scope: !4566)
!4675 = !DILocation(line: 998, column: 39, scope: !4566)
!4676 = !DILocation(line: 998, column: 22, scope: !4566)
!4677 = !DILocation(line: 999, column: 17, scope: !4566)
!4678 = !DILocation(line: 1002, column: 20, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4566, file: !434, line: 1002, column: 8)
!4680 = !DILocation(line: 996, column: 22, scope: !4566)
!4681 = !DILocation(line: 1002, column: 35, scope: !4679)
!4682 = !DILocation(line: 1002, column: 23, scope: !4679)
!4683 = !DILocation(line: 1002, column: 8, scope: !4566)
!4684 = !DILocation(line: 1003, column: 5, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4686, file: !434, line: 1003, column: 5)
!4686 = distinct !DILexicalBlock(scope: !4687, file: !434, line: 1003, column: 5)
!4687 = distinct !DILexicalBlock(scope: !4688, file: !434, line: 1003, column: 5)
!4688 = distinct !DILexicalBlock(scope: !4689, file: !434, line: 1003, column: 5)
!4689 = distinct !DILexicalBlock(scope: !4679, file: !434, line: 1002, column: 45)
!4690 = !DILocation(line: 1010, column: 13, scope: !4689)
!4691 = !DILocation(line: 1011, column: 5, scope: !4689)
!4692 = !DILocation(line: 1014, column: 8, scope: !4566)
!4693 = !DILocation(line: 1015, column: 9, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4599, file: !434, line: 1014, column: 15)
!4695 = !DILocation(line: 1018, column: 14, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4697, file: !434, line: 1017, column: 12)
!4697 = distinct !DILexicalBlock(scope: !4694, file: !434, line: 1015, column: 9)
!4698 = !DILocation(line: 1020, column: 4, scope: !4694)
!4699 = !DILocation(line: 1020, column: 15, scope: !4599)
!4700 = !DILocation(line: 1021, column: 1, scope: !4597)
!4701 = !DILocation(line: 1022, column: 11, scope: !4597)
!4702 = !DILocation(line: 1025, column: 14, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4597, file: !434, line: 1025, column: 9)
!4704 = !DILocation(line: 1026, column: 25, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4703, file: !434, line: 1025, column: 38)
!4706 = !DILocation(line: 1026, column: 19, scope: !4705)
!4707 = !DILocation(line: 1026, column: 6, scope: !4705)
!4708 = !DILocation(line: 1026, column: 23, scope: !4705)
!4709 = !DILocation(line: 1027, column: 5, scope: !4705)
!4710 = !DILocation(line: 1031, column: 21, scope: !4597)
!4711 = !DILocation(line: 1031, column: 13, scope: !4597)
!4712 = !DILocation(line: 1032, column: 4, scope: !4597)
!4713 = !DILocation(line: 995, column: 33, scope: !4567)
!4714 = distinct !{!4714, !4668, !4715}
!4715 = !DILocation(line: 1033, column: 3, scope: !4564)
!4716 = !DILocation(line: 1040, column: 10, scope: !4523)
!4717 = !DILocation(line: 1042, column: 10, scope: !4523)
!4718 = !DILocation(line: 1052, column: 6, scope: !4523)
!4719 = !DILocation(line: 1055, column: 9, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4721, file: !434, line: 1052, column: 14)
!4721 = distinct !DILexicalBlock(scope: !4523, file: !434, line: 1052, column: 6)
!4722 = !DILocation(line: 1056, column: 2, scope: !4720)
!4723 = !DILocation(line: 1056, column: 21, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4721, file: !434, line: 1056, column: 13)
!4725 = !DILocation(line: 1066, column: 3, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4727, file: !434, line: 1065, column: 11)
!4727 = distinct !DILexicalBlock(scope: !4523, file: !434, line: 1065, column: 6)
!4728 = !DILocation(line: 1067, column: 2, scope: !4726)
!4729 = !DILocation(line: 1068, column: 10, scope: !4523)
!4730 = !DILocation(line: 0, scope: !4580)
!4731 = !DILocation(line: 1074, column: 20, scope: !4583)
!4732 = !DILocation(line: 1074, column: 2, scope: !4580)
!4733 = !DILocation(line: 1110, column: 24, scope: !4523)
!4734 = !DILocation(line: 1053, column: 12, scope: !4720)
!4735 = !DILocation(line: 1054, column: 12, scope: !4720)
!4736 = !DILocation(line: 1108, column: 30, scope: !4523)
!4737 = !DILocation(line: 1108, column: 40, scope: !4523)
!4738 = !DILocation(line: 1108, column: 38, scope: !4523)
!4739 = !DILocation(line: 1109, column: 31, scope: !4523)
!4740 = !DILocation(line: 1109, column: 24, scope: !4523)
!4741 = !DILocation(line: 1110, column: 31, scope: !4523)
!4742 = !DILocation(line: 1114, column: 31, scope: !4523)
!4743 = !DILocation(line: 1114, column: 48, scope: !4523)
!4744 = !DILocation(line: 1115, column: 13, scope: !4523)
!4745 = !DILocation(line: 1118, column: 7, scope: !4523)
!4746 = !DILocation(line: 1119, column: 9, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4523, file: !434, line: 1119, column: 6)
!4748 = !DILocation(line: 1119, column: 6, scope: !4523)
!4749 = !DILocation(line: 1075, column: 29, scope: !4582)
!4750 = !DILocation(line: 1075, column: 21, scope: !4582)
!4751 = !DILocation(line: 0, scope: !4582)
!4752 = !DILocation(line: 1076, column: 29, scope: !4582)
!4753 = !DILocation(line: 1076, column: 21, scope: !4582)
!4754 = !DILocation(line: 1077, column: 38, scope: !4582)
!4755 = !DILocation(line: 1077, column: 21, scope: !4582)
!4756 = !DILocation(line: 1078, column: 16, scope: !4582)
!4757 = !DILocation(line: 1080, column: 19, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4582, file: !434, line: 1080, column: 7)
!4759 = !DILocation(line: 1080, column: 34, scope: !4758)
!4760 = !DILocation(line: 1080, column: 22, scope: !4758)
!4761 = !DILocation(line: 1080, column: 7, scope: !4582)
!4762 = !DILocation(line: 1084, column: 7, scope: !4582)
!4763 = !DILocation(line: 1085, column: 8, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4765, file: !434, line: 1084, column: 14)
!4765 = distinct !DILexicalBlock(scope: !4582, file: !434, line: 1084, column: 7)
!4766 = !DILocation(line: 1086, column: 5, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4768, file: !434, line: 1086, column: 5)
!4768 = distinct !DILexicalBlock(scope: !4769, file: !434, line: 1086, column: 5)
!4769 = distinct !DILexicalBlock(scope: !4770, file: !434, line: 1085, column: 49)
!4770 = distinct !DILexicalBlock(scope: !4764, file: !434, line: 1085, column: 8)
!4771 = !DILocation(line: 1086, column: 5, scope: !4768)
!4772 = !DILocation(line: 1086, column: 5, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4767, file: !434, line: 1086, column: 5)
!4774 = !DILocation(line: 1087, column: 25, scope: !4769)
!4775 = !DILocation(line: 1087, column: 5, scope: !4769)
!4776 = !DILocation(line: 1088, column: 4, scope: !4769)
!4777 = !DILocation(line: 1088, column: 15, scope: !4770)
!4778 = !DILocation(line: 1089, column: 5, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4780, file: !434, line: 1089, column: 5)
!4780 = distinct !DILexicalBlock(scope: !4781, file: !434, line: 1089, column: 5)
!4781 = distinct !DILexicalBlock(scope: !4782, file: !434, line: 1088, column: 61)
!4782 = distinct !DILexicalBlock(scope: !4770, file: !434, line: 1088, column: 15)
!4783 = !DILocation(line: 1089, column: 5, scope: !4780)
!4784 = !DILocation(line: 1089, column: 5, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4779, file: !434, line: 1089, column: 5)
!4786 = !DILocation(line: 1090, column: 26, scope: !4781)
!4787 = !DILocation(line: 1090, column: 5, scope: !4781)
!4788 = !DILocation(line: 1091, column: 4, scope: !4781)
!4789 = !DILocation(line: 1095, column: 8, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4765, file: !434, line: 1094, column: 10)
!4791 = !DILocation(line: 1096, column: 5, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4793, file: !434, line: 1096, column: 5)
!4793 = distinct !DILexicalBlock(scope: !4794, file: !434, line: 1096, column: 5)
!4794 = distinct !DILexicalBlock(scope: !4795, file: !434, line: 1095, column: 49)
!4795 = distinct !DILexicalBlock(scope: !4790, file: !434, line: 1095, column: 8)
!4796 = !DILocation(line: 1096, column: 5, scope: !4793)
!4797 = !DILocation(line: 1096, column: 5, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4792, file: !434, line: 1096, column: 5)
!4799 = !DILocation(line: 1097, column: 25, scope: !4794)
!4800 = !DILocation(line: 1097, column: 5, scope: !4794)
!4801 = !DILocation(line: 1098, column: 4, scope: !4794)
!4802 = !DILocation(line: 1099, column: 5, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4804, file: !434, line: 1099, column: 5)
!4804 = distinct !DILexicalBlock(scope: !4805, file: !434, line: 1099, column: 5)
!4805 = distinct !DILexicalBlock(scope: !4795, file: !434, line: 1098, column: 11)
!4806 = !DILocation(line: 1099, column: 5, scope: !4804)
!4807 = !DILocation(line: 1099, column: 5, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4803, file: !434, line: 1099, column: 5)
!4809 = !DILocation(line: 1100, column: 26, scope: !4805)
!4810 = !DILocation(line: 1100, column: 5, scope: !4805)
!4811 = !DILocation(line: 1100, column: 30, scope: !4805)
!4812 = !DILocation(line: 1101, column: 26, scope: !4805)
!4813 = !DILocation(line: 1101, column: 5, scope: !4805)
!4814 = !DILocation(line: 0, scope: !4765)
!4815 = !DILocation(line: 1074, column: 32, scope: !4583)
!4816 = distinct !{!4816, !4732, !4817}
!4817 = !DILocation(line: 1104, column: 2, scope: !4580)
!4818 = !DILocation(line: 1124, column: 13, scope: !4523)
!4819 = !DILocation(line: 1127, column: 10, scope: !4523)
!4820 = !DILocation(line: 1127, column: 7, scope: !4523)
!4821 = !DILocation(line: 1128, column: 9, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4523, file: !434, line: 1128, column: 6)
!4823 = !DILocation(line: 1128, column: 6, scope: !4523)
!4824 = !DILocation(line: 1134, column: 27, scope: !4523)
!4825 = !DILocation(line: 1136, column: 7, scope: !4523)
!4826 = !DILocation(line: 1137, column: 9, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4523, file: !434, line: 1137, column: 6)
!4828 = !DILocation(line: 1137, column: 6, scope: !4523)
!4829 = !DILocation(line: 1131, column: 10, scope: !4523)
!4830 = !DILocation(line: 1140, column: 10, scope: !4523)
!4831 = !DILocation(line: 0, scope: !4590)
!4832 = !DILocation(line: 1143, column: 20, scope: !4593)
!4833 = !DILocation(line: 1143, column: 2, scope: !4590)
!4834 = !DILocation(line: 1144, column: 3, scope: !4592)
!4835 = !DILocation(line: 1144, column: 17, scope: !4592)
!4836 = !DILocation(line: 0, scope: !4592)
!4837 = !DILocation(line: 1144, column: 11, scope: !4592)
!4838 = !DILocation(line: 1145, column: 38, scope: !4592)
!4839 = !DILocation(line: 1145, column: 21, scope: !4592)
!4840 = !DILocation(line: 1146, column: 22, scope: !4592)
!4841 = !DILocation(line: 1146, column: 29, scope: !4592)
!4842 = !DILocation(line: 1148, column: 8, scope: !4592)
!4843 = !DILocation(line: 1149, column: 10, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4592, file: !434, line: 1149, column: 7)
!4845 = !DILocation(line: 1149, column: 7, scope: !4592)
!4846 = !DILocation(line: 1154, column: 8, scope: !4592)
!4847 = !DILocation(line: 1155, column: 10, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4592, file: !434, line: 1155, column: 7)
!4849 = !DILocation(line: 1155, column: 7, scope: !4592)
!4850 = !DILocation(line: 1159, column: 2, scope: !4593)
!4851 = !DILocation(line: 1152, column: 11, scope: !4592)
!4852 = !DILocation(line: 1158, column: 11, scope: !4592)
!4853 = !DILocation(line: 1143, column: 33, scope: !4593)
!4854 = distinct !{!4854, !4833, !4855}
!4855 = !DILocation(line: 1159, column: 2, scope: !4590)
!4856 = !DILocation(line: 1162, column: 8, scope: !4523)
!4857 = !DILocation(line: 1164, column: 2, scope: !4523)
!4858 = !DILocation(line: 1165, column: 1, scope: !4523)
!4859 = distinct !DISubprogram(name: "get_package_len", scope: !434, file: !434, line: 196, type: !4860, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4862)
!4860 = !DISubroutineType(types: !4861)
!4861 = !{!111, !104}
!4862 = !{!4863, !4864, !4865, !4866, !4867, !4868, !4869}
!4863 = !DILocalVariable(name: "packaged", arg: 1, scope: !4859, file: !434, line: 196, type: !104)
!4864 = !DILocalVariable(name: "buf", scope: !4859, file: !434, line: 200, type: !432)
!4865 = !DILocalVariable(name: "start", scope: !4859, file: !434, line: 201, type: !432)
!4866 = !DILocalVariable(name: "args_size", scope: !4859, file: !434, line: 202, type: !32)
!4867 = !DILocalVariable(name: "s_nbr", scope: !4859, file: !434, line: 202, type: !32)
!4868 = !DILocalVariable(name: "ros_nbr", scope: !4859, file: !434, line: 202, type: !32)
!4869 = !DILocalVariable(name: "i", scope: !4870, file: !434, line: 215, type: !105)
!4870 = distinct !DILexicalBlock(scope: !4859, file: !434, line: 215, column: 2)
!4871 = !DILocation(line: 0, scope: !4859)
!4872 = !DILocation(line: 198, column: 2, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4874, file: !434, line: 198, column: 2)
!4874 = distinct !DILexicalBlock(scope: !4859, file: !434, line: 198, column: 2)
!4875 = !DILocation(line: 198, column: 2, scope: !4874)
!4876 = !DILocation(line: 198, column: 2, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4873, file: !434, line: 198, column: 2)
!4878 = !DILocation(line: 204, column: 14, scope: !4859)
!4879 = !DILocation(line: 204, column: 21, scope: !4859)
!4880 = !DILocation(line: 205, column: 14, scope: !4859)
!4881 = !DILocation(line: 206, column: 14, scope: !4859)
!4882 = !DILocation(line: 209, column: 6, scope: !4859)
!4883 = !DILocation(line: 212, column: 6, scope: !4859)
!4884 = !DILocation(line: 0, scope: !4870)
!4885 = !DILocation(line: 215, column: 20, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4870, file: !434, line: 215, column: 2)
!4887 = !DILocation(line: 215, column: 2, scope: !4870)
!4888 = !DILocation(line: 220, column: 33, scope: !4859)
!4889 = !DILocation(line: 220, column: 2, scope: !4859)
!4890 = !DILocation(line: 216, column: 6, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4886, file: !434, line: 215, column: 34)
!4892 = !DILocation(line: 217, column: 10, scope: !4891)
!4893 = !DILocation(line: 217, column: 36, scope: !4891)
!4894 = !DILocation(line: 217, column: 7, scope: !4891)
!4895 = !DILocation(line: 215, column: 30, scope: !4886)
!4896 = distinct !{!4896, !4887, !4897}
!4897 = !DILocation(line: 218, column: 2, scope: !4870)
!4898 = distinct !DISubprogram(name: "append_string", scope: !434, file: !434, line: 223, type: !4899, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4901)
!4899 = !DISubroutineType(types: !4900)
!4900 = !{!105, !4526, !104, !269, !183}
!4901 = !{!4902, !4903, !4904, !4905}
!4902 = !DILocalVariable(name: "cb", arg: 1, scope: !4898, file: !434, line: 223, type: !4526)
!4903 = !DILocalVariable(name: "ctx", arg: 2, scope: !4898, file: !434, line: 223, type: !104)
!4904 = !DILocalVariable(name: "str", arg: 3, scope: !4898, file: !434, line: 223, type: !269)
!4905 = !DILocalVariable(name: "strl", arg: 4, scope: !4898, file: !434, line: 223, type: !183)
!4906 = !DILocation(line: 0, scope: !4898)
!4907 = !DILocation(line: 225, column: 9, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4898, file: !434, line: 225, column: 6)
!4909 = !DILocation(line: 225, column: 6, scope: !4898)
!4910 = !DILocation(line: 226, column: 14, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4908, file: !434, line: 225, column: 18)
!4912 = !DILocation(line: 226, column: 12, scope: !4911)
!4913 = !DILocation(line: 226, column: 3, scope: !4911)
!4914 = !DILocation(line: 229, column: 14, scope: !4898)
!4915 = !DILocation(line: 229, column: 9, scope: !4898)
!4916 = !DILocation(line: 229, column: 27, scope: !4898)
!4917 = !DILocation(line: 229, column: 39, scope: !4898)
!4918 = !DILocation(line: 230, column: 17, scope: !4898)
!4919 = !DILocation(line: 230, column: 9, scope: !4898)
!4920 = !DILocation(line: 230, column: 2, scope: !4898)
!4921 = !DILocation(line: 231, column: 1, scope: !4898)
!4922 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !446, file: !446, line: 45, type: !448, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4923)
!4923 = !{!4924}
!4924 = !DILocalVariable(name: "c", arg: 1, scope: !4922, file: !446, line: 45, type: !105)
!4925 = !DILocation(line: 0, scope: !4922)
!4926 = !DILocation(line: 50, column: 2, scope: !4922)
!4927 = distinct !DISubprogram(name: "__printk_hook_install", scope: !446, file: !446, line: 63, type: !4928, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4930)
!4928 = !DISubroutineType(types: !4929)
!4929 = !{null, !447}
!4930 = !{!4931}
!4931 = !DILocalVariable(name: "fn", arg: 1, scope: !4927, file: !446, line: 63, type: !447)
!4932 = !DILocation(line: 0, scope: !4927)
!4933 = !DILocation(line: 65, column: 12, scope: !4927)
!4934 = !DILocation(line: 66, column: 1, scope: !4927)
!4935 = distinct !DISubprogram(name: "__printk_get_hook", scope: !446, file: !446, line: 76, type: !4936, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !397)
!4936 = !DISubroutineType(types: !4937)
!4937 = !{!104}
!4938 = !DILocation(line: 78, column: 9, scope: !4935)
!4939 = !DILocation(line: 78, column: 2, scope: !4935)
!4940 = distinct !DISubprogram(name: "vprintk", scope: !446, file: !446, line: 113, type: !4941, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4949)
!4941 = !DISubroutineType(types: !4942)
!4942 = !{null, !269, !4943}
!4943 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4012, line: 99, baseType: !4944)
!4944 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4012, line: 40, baseType: !4945)
!4945 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !446, baseType: !4946)
!4946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4947)
!4947 = !{!4948}
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4946, file: !446, line: 79, baseType: !104, size: 32)
!4949 = !{!4950, !4951, !4952}
!4950 = !DILocalVariable(name: "fmt", arg: 1, scope: !4940, file: !446, line: 113, type: !269)
!4951 = !DILocalVariable(name: "ap", arg: 2, scope: !4940, file: !446, line: 113, type: !4943)
!4952 = !DILocalVariable(name: "ctx", scope: !4953, file: !446, line: 121, type: !4955)
!4953 = distinct !DILexicalBlock(scope: !4954, file: !446, line: 120, column: 27)
!4954 = distinct !DILexicalBlock(scope: !4940, file: !446, line: 120, column: 6)
!4955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !446, line: 81, size: 32, elements: !4956)
!4956 = !{!4957, !4958}
!4957 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4955, file: !446, line: 85, baseType: !32, size: 32)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4955, file: !446, line: 86, baseType: !4959, offset: 32)
!4959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, elements: !2623)
!4960 = !DILocation(line: 0, scope: !4940)
!4961 = !DILocation(line: 148, column: 3, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4954, file: !446, line: 138, column: 9)
!4963 = !DILocation(line: 155, column: 1, scope: !4940)
!4964 = distinct !DISubprogram(name: "char_out", scope: !446, file: !446, line: 107, type: !4965, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4967)
!4965 = !DISubroutineType(types: !4966)
!4966 = !{!105, !105, !104}
!4967 = !{!4968, !4969}
!4968 = !DILocalVariable(name: "c", arg: 1, scope: !4964, file: !446, line: 107, type: !105)
!4969 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4964, file: !446, line: 107, type: !104)
!4970 = !DILocation(line: 0, scope: !4964)
!4971 = !DILocation(line: 110, column: 9, scope: !4964)
!4972 = !DILocation(line: 110, column: 2, scope: !4964)
!4973 = distinct !DISubprogram(name: "cbvprintf", scope: !4044, file: !4044, line: 739, type: !4974, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4976)
!4974 = !DISubroutineType(types: !4975)
!4975 = !{!105, !4394, !104, !269, !4943}
!4976 = !{!4977, !4978, !4979, !4980}
!4977 = !DILocalVariable(name: "out", arg: 1, scope: !4973, file: !4044, line: 739, type: !4394)
!4978 = !DILocalVariable(name: "ctx", arg: 2, scope: !4973, file: !4044, line: 739, type: !104)
!4979 = !DILocalVariable(name: "format", arg: 3, scope: !4973, file: !4044, line: 739, type: !269)
!4980 = !DILocalVariable(name: "ap", arg: 4, scope: !4973, file: !4044, line: 739, type: !4943)
!4981 = !DILocation(line: 0, scope: !4973)
!4982 = !DILocation(line: 741, column: 9, scope: !4973)
!4983 = !DILocation(line: 741, column: 2, scope: !4973)
!4984 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !446, file: !446, line: 157, type: !4985, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4987)
!4985 = !DISubroutineType(types: !4986)
!4986 = !{null, !102, !111}
!4987 = !{!4988, !4989, !4990}
!4988 = !DILocalVariable(name: "c", arg: 1, scope: !4984, file: !446, line: 157, type: !102)
!4989 = !DILocalVariable(name: "n", arg: 2, scope: !4984, file: !446, line: 157, type: !111)
!4990 = !DILocalVariable(name: "i", scope: !4984, file: !446, line: 159, type: !111)
!4991 = !DILocation(line: 0, scope: !4984)
!4992 = !DILocation(line: 164, column: 16, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4994, file: !446, line: 164, column: 2)
!4994 = distinct !DILexicalBlock(scope: !4984, file: !446, line: 164, column: 2)
!4995 = !DILocation(line: 164, column: 2, scope: !4994)
!4996 = !DILocation(line: 165, column: 3, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4993, file: !446, line: 164, column: 26)
!4998 = !DILocation(line: 165, column: 13, scope: !4997)
!4999 = !DILocation(line: 164, column: 22, scope: !4993)
!5000 = distinct !{!5000, !4995, !5001}
!5001 = !DILocation(line: 166, column: 2, scope: !4994)
!5002 = !DILocation(line: 171, column: 1, scope: !4984)
!5003 = distinct !DISubprogram(name: "printk", scope: !446, file: !446, line: 203, type: !5004, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !5006)
!5004 = !DISubroutineType(types: !5005)
!5005 = !{null, !269, null}
!5006 = !{!5007, !5008}
!5007 = !DILocalVariable(name: "fmt", arg: 1, scope: !5003, file: !446, line: 203, type: !269)
!5008 = !DILocalVariable(name: "ap", scope: !5003, file: !446, line: 205, type: !4943)
!5009 = !DILocation(line: 0, scope: !5003)
!5010 = !DILocation(line: 205, column: 2, scope: !5003)
!5011 = !DILocation(line: 205, column: 10, scope: !5003)
!5012 = !DILocation(line: 207, column: 2, scope: !5003)
!5013 = !DILocation(line: 209, column: 2, scope: !5003)
!5014 = !DILocation(line: 211, column: 2, scope: !5003)
!5015 = !DILocation(line: 212, column: 1, scope: !5003)
!5016 = distinct !DISubprogram(name: "snprintk", scope: !446, file: !446, line: 239, type: !5017, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !5019)
!5017 = !DISubroutineType(types: !5018)
!5018 = !{!105, !102, !111, !269, null}
!5019 = !{!5020, !5021, !5022, !5023, !5024}
!5020 = !DILocalVariable(name: "str", arg: 1, scope: !5016, file: !446, line: 239, type: !102)
!5021 = !DILocalVariable(name: "size", arg: 2, scope: !5016, file: !446, line: 239, type: !111)
!5022 = !DILocalVariable(name: "fmt", arg: 3, scope: !5016, file: !446, line: 239, type: !269)
!5023 = !DILocalVariable(name: "ap", scope: !5016, file: !446, line: 241, type: !4943)
!5024 = !DILocalVariable(name: "ret", scope: !5016, file: !446, line: 242, type: !105)
!5025 = !DILocation(line: 0, scope: !5016)
!5026 = !DILocation(line: 241, column: 2, scope: !5016)
!5027 = !DILocation(line: 241, column: 10, scope: !5016)
!5028 = !DILocation(line: 244, column: 2, scope: !5016)
!5029 = !DILocation(line: 245, column: 8, scope: !5016)
!5030 = !DILocation(line: 246, column: 2, scope: !5016)
!5031 = !DILocation(line: 249, column: 1, scope: !5016)
!5032 = !DILocation(line: 248, column: 2, scope: !5016)
!5033 = distinct !DISubprogram(name: "vsnprintk", scope: !446, file: !446, line: 251, type: !5034, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !5036)
!5034 = !DISubroutineType(types: !5035)
!5035 = !{!105, !102, !111, !269, !4943}
!5036 = !{!5037, !5038, !5039, !5040, !5041}
!5037 = !DILocalVariable(name: "str", arg: 1, scope: !5033, file: !446, line: 251, type: !102)
!5038 = !DILocalVariable(name: "size", arg: 2, scope: !5033, file: !446, line: 251, type: !111)
!5039 = !DILocalVariable(name: "fmt", arg: 3, scope: !5033, file: !446, line: 251, type: !269)
!5040 = !DILocalVariable(name: "ap", arg: 4, scope: !5033, file: !446, line: 251, type: !4943)
!5041 = !DILocalVariable(name: "ctx", scope: !5033, file: !446, line: 253, type: !5042)
!5042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !446, line: 217, size: 96, elements: !5043)
!5043 = !{!5044, !5045, !5046}
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5042, file: !446, line: 218, baseType: !102, size: 32)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5042, file: !446, line: 219, baseType: !105, size: 32, offset: 32)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5042, file: !446, line: 220, baseType: !105, size: 32, offset: 64)
!5047 = !DILocation(line: 0, scope: !5033)
!5048 = !DILocation(line: 253, column: 2, scope: !5033)
!5049 = !DILocation(line: 253, column: 21, scope: !5033)
!5050 = !DILocation(line: 253, column: 27, scope: !5033)
!5051 = !DILocation(line: 255, column: 2, scope: !5033)
!5052 = !DILocation(line: 257, column: 10, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5033, file: !446, line: 257, column: 6)
!5054 = !DILocation(line: 257, column: 22, scope: !5053)
!5055 = !DILocation(line: 257, column: 16, scope: !5053)
!5056 = !DILocation(line: 257, column: 6, scope: !5033)
!5057 = !DILocation(line: 258, column: 3, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5053, file: !446, line: 257, column: 27)
!5059 = !DILocation(line: 258, column: 18, scope: !5058)
!5060 = !DILocation(line: 259, column: 2, scope: !5058)
!5061 = !DILocation(line: 262, column: 1, scope: !5033)
!5062 = !DILocation(line: 261, column: 2, scope: !5033)
!5063 = distinct !DISubprogram(name: "str_out", scope: !446, file: !446, line: 223, type: !5064, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !5067)
!5064 = !DISubroutineType(types: !5065)
!5065 = !{!105, !105, !5066}
!5066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5042, size: 32)
!5067 = !{!5068, !5069}
!5068 = !DILocalVariable(name: "c", arg: 1, scope: !5063, file: !446, line: 223, type: !105)
!5069 = !DILocalVariable(name: "ctx", arg: 2, scope: !5063, file: !446, line: 223, type: !5066)
!5070 = !DILocation(line: 0, scope: !5063)
!5071 = !DILocation(line: 225, column: 11, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5063, file: !446, line: 225, column: 6)
!5073 = !DILocation(line: 225, column: 15, scope: !5072)
!5074 = !DILocation(line: 0, scope: !5072)
!5075 = !DILocation(line: 225, column: 23, scope: !5072)
!5076 = !DILocation(line: 225, column: 45, scope: !5072)
!5077 = !DILocation(line: 225, column: 37, scope: !5072)
!5078 = !DILocation(line: 225, column: 6, scope: !5063)
!5079 = !DILocation(line: 226, column: 8, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5072, file: !446, line: 225, column: 50)
!5081 = !DILocation(line: 226, column: 13, scope: !5080)
!5082 = !DILocation(line: 227, column: 3, scope: !5080)
!5083 = !DILocation(line: 230, column: 29, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5063, file: !446, line: 230, column: 6)
!5085 = !DILocation(line: 230, column: 17, scope: !5084)
!5086 = !DILocation(line: 230, column: 6, scope: !5063)
!5087 = !DILocation(line: 231, column: 22, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5084, file: !446, line: 230, column: 34)
!5089 = !DILocation(line: 231, column: 3, scope: !5088)
!5090 = !DILocation(line: 231, column: 26, scope: !5088)
!5091 = !DILocation(line: 232, column: 2, scope: !5088)
!5092 = !DILocation(line: 233, column: 28, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5084, file: !446, line: 232, column: 9)
!5094 = !DILocation(line: 233, column: 22, scope: !5093)
!5095 = !DILocation(line: 233, column: 3, scope: !5093)
!5096 = !DILocation(line: 233, column: 26, scope: !5093)
!5097 = !DILocation(line: 237, column: 1, scope: !5063)
!5098 = distinct !DISubprogram(name: "z_thread_entry", scope: !5099, file: !5099, line: 30, type: !5100, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !5102)
!5099 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5100 = !DISubroutineType(types: !5101)
!5101 = !{null, !254, !104, !104, !104}
!5102 = !{!5103, !5104, !5105, !5106}
!5103 = !DILocalVariable(name: "entry", arg: 1, scope: !5098, file: !5099, line: 30, type: !254)
!5104 = !DILocalVariable(name: "p1", arg: 2, scope: !5098, file: !5099, line: 31, type: !104)
!5105 = !DILocalVariable(name: "p2", arg: 3, scope: !5098, file: !5099, line: 31, type: !104)
!5106 = !DILocalVariable(name: "p3", arg: 4, scope: !5098, file: !5099, line: 31, type: !104)
!5107 = !DILocation(line: 0, scope: !5098)
!5108 = !DILocation(line: 36, column: 2, scope: !5098)
!5109 = !DILocation(line: 38, column: 17, scope: !5098)
!5110 = !DILocation(line: 38, column: 2, scope: !5098)
!5111 = !DILocation(line: 45, column: 2, scope: !5098)
!5112 = distinct !DISubprogram(name: "k_current_get", scope: !122, file: !122, line: 530, type: !5113, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !397)
!5113 = !DISubroutineType(types: !5114)
!5114 = !{!5115}
!5115 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !5116)
!5116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5117, size: 32)
!5117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !5118)
!5118 = !{!5119, !5177, !5189, !5190, !5191, !5192, !5198, !5213}
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5117, file: !127, line: 247, baseType: !5120, size: 384)
!5120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !5121)
!5121 = !{!5122, !5146, !5153, !5154, !5155, !5164, !5165, !5166}
!5122 = !DIDerivedType(tag: DW_TAG_member, scope: !5120, file: !127, line: 60, baseType: !5123, size: 64)
!5123 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5120, file: !127, line: 60, size: 64, elements: !5124)
!5124 = !{!5125, !5140}
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5123, file: !127, line: 61, baseType: !5126, size: 64)
!5126 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !5127)
!5127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !5128)
!5128 = !{!5129, !5135}
!5129 = !DIDerivedType(tag: DW_TAG_member, scope: !5127, file: !137, line: 38, baseType: !5130, size: 32)
!5130 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5127, file: !137, line: 38, size: 32, elements: !5131)
!5131 = !{!5132, !5134}
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5130, file: !137, line: 39, baseType: !5133, size: 32)
!5133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5127, size: 32)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5130, file: !137, line: 40, baseType: !5133, size: 32)
!5135 = !DIDerivedType(tag: DW_TAG_member, scope: !5127, file: !137, line: 42, baseType: !5136, size: 32, offset: 32)
!5136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5127, file: !137, line: 42, size: 32, elements: !5137)
!5137 = !{!5138, !5139}
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5136, file: !137, line: 43, baseType: !5133, size: 32)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5136, file: !137, line: 44, baseType: !5133, size: 32)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5123, file: !127, line: 62, baseType: !5141, size: 64)
!5141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !5142)
!5142 = !{!5143}
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5141, file: !153, line: 50, baseType: !5144, size: 64)
!5144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5145, size: 64, elements: !158)
!5145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5141, size: 32)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5120, file: !127, line: 68, baseType: !5147, size: 32, offset: 64)
!5147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5148, size: 32)
!5148 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !5149)
!5149 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !5150)
!5150 = !{!5151}
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5149, file: !163, line: 232, baseType: !5152, size: 64)
!5152 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !5127)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5120, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5120, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!5155 = !DIDerivedType(tag: DW_TAG_member, scope: !5120, file: !127, line: 90, baseType: !5156, size: 16, offset: 112)
!5156 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5120, file: !127, line: 90, size: 16, elements: !5157)
!5157 = !{!5158, !5163}
!5158 = !DIDerivedType(tag: DW_TAG_member, scope: !5156, file: !127, line: 91, baseType: !5159, size: 16)
!5159 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5156, file: !127, line: 91, size: 16, elements: !5160)
!5160 = !{!5161, !5162}
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5159, file: !127, line: 96, baseType: !179, size: 8)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5159, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5156, file: !127, line: 100, baseType: !183, size: 16)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5120, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5120, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5120, file: !127, line: 131, baseType: !5167, size: 192, offset: 192)
!5167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !5168)
!5168 = !{!5169, !5170, !5176}
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5167, file: !163, line: 245, baseType: !5126, size: 64)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5167, file: !163, line: 246, baseType: !5171, size: 32, offset: 64)
!5171 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !5172)
!5172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5173, size: 32)
!5173 = !DISubroutineType(types: !5174)
!5174 = !{null, !5175}
!5175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5167, size: 32)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5167, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5117, file: !127, line: 250, baseType: !5178, size: 288, offset: 384)
!5178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !5179)
!5179 = !{!5180, !5181, !5182, !5183, !5184, !5185, !5186, !5187, !5188}
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5178, file: !200, line: 26, baseType: !113, size: 32)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5178, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5178, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5178, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5178, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5178, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5178, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5178, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5178, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5117, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5117, file: !127, line: 256, baseType: !5148, size: 64, offset: 704)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5117, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5117, file: !127, line: 300, baseType: !5193, size: 96, offset: 800)
!5193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !5194)
!5194 = !{!5195, !5196, !5197}
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5193, file: !127, line: 153, baseType: !22, size: 32)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5193, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5193, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5117, file: !127, line: 325, baseType: !5199, size: 32, offset: 896)
!5199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5200, size: 32)
!5200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !5201)
!5201 = !{!5202, !5208, !5209}
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5200, file: !122, line: 5074, baseType: !5203, size: 96)
!5203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !5204)
!5204 = !{!5205, !5206, !5207}
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5203, file: !226, line: 57, baseType: !229, size: 32)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5203, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5203, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5200, file: !122, line: 5075, baseType: !5148, size: 64, offset: 96)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5200, file: !122, line: 5076, baseType: !5210, size: 32, offset: 160)
!5210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !5211)
!5211 = !{!5212}
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !5210, file: !236, line: 52, baseType: !22, size: 32)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5117, file: !127, line: 343, baseType: !5214, size: 64, offset: 928)
!5214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !5215)
!5215 = !{!5216, !5217}
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5214, file: !200, line: 63, baseType: !113, size: 32)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5214, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!5218 = !DILocation(line: 535, column: 9, scope: !5112)
!5219 = !DILocation(line: 535, column: 2, scope: !5112)
!5220 = distinct !DISubprogram(name: "k_thread_abort", scope: !3458, file: !3458, line: 188, type: !5221, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !5223)
!5221 = !DISubroutineType(types: !5222)
!5222 = !{null, !5115}
!5223 = !{!5224}
!5224 = !DILocalVariable(name: "thread", arg: 1, scope: !5220, file: !3458, line: 188, type: !5115)
!5225 = !DILocation(line: 0, scope: !5220)
!5226 = !DILocation(line: 197, column: 2, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5220, file: !3458, line: 197, column: 2)
!5228 = !{i64 2154155116}
!5229 = !DILocation(line: 198, column: 2, scope: !5220)
!5230 = !DILocation(line: 199, column: 1, scope: !5220)
!5231 = distinct !DISubprogram(name: "z_current_get", scope: !3458, file: !3458, line: 173, type: !5113, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !397)
!5232 = !DILocation(line: 180, column: 2, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5231, file: !3458, line: 180, column: 2)
!5234 = !{i64 2154155048}
!5235 = !DILocation(line: 181, column: 9, scope: !5231)
!5236 = !DILocation(line: 181, column: 2, scope: !5231)
!5237 = distinct !DISubprogram(name: "sys_heap_free", scope: !5238, file: !5238, line: 163, type: !5239, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5247)
!5238 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5239 = !DISubroutineType(types: !5240)
!5240 = !{null, !5241, !104}
!5241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5242, size: 32)
!5242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !5243)
!5243 = !{!5244, !5245, !5246}
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5242, file: !226, line: 57, baseType: !2610, size: 32)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5242, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5242, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!5247 = !{!5248, !5249, !5250, !5251}
!5248 = !DILocalVariable(name: "heap", arg: 1, scope: !5237, file: !5238, line: 163, type: !5241)
!5249 = !DILocalVariable(name: "mem", arg: 2, scope: !5237, file: !5238, line: 163, type: !104)
!5250 = !DILocalVariable(name: "h", scope: !5237, file: !5238, line: 168, type: !2610)
!5251 = !DILocalVariable(name: "c", scope: !5237, file: !5238, line: 169, type: !2615)
!5252 = !DILocation(line: 0, scope: !5237)
!5253 = !DILocation(line: 165, column: 10, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5237, file: !5238, line: 165, column: 6)
!5255 = !DILocation(line: 165, column: 6, scope: !5237)
!5256 = !DILocation(line: 168, column: 27, scope: !5237)
!5257 = !DILocation(line: 169, column: 16, scope: !5237)
!5258 = !{i32 0, i32 536870912}
!5259 = !DILocation(line: 175, column: 2, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5261, file: !5238, line: 175, column: 2)
!5261 = distinct !DILexicalBlock(scope: !5237, file: !5238, line: 175, column: 2)
!5262 = !DILocation(line: 175, column: 2, scope: !5261)
!5263 = !DILocation(line: 175, column: 2, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5260, file: !5238, line: 175, column: 2)
!5265 = !DILocation(line: 183, column: 2, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5267, file: !5238, line: 183, column: 2)
!5267 = distinct !DILexicalBlock(scope: !5237, file: !5238, line: 183, column: 2)
!5268 = !DILocation(line: 183, column: 2, scope: !5267)
!5269 = !DILocation(line: 183, column: 2, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5266, file: !5238, line: 183, column: 2)
!5271 = !DILocation(line: 187, column: 2, scope: !5237)
!5272 = !DILocation(line: 197, column: 2, scope: !5237)
!5273 = !DILocation(line: 198, column: 1, scope: !5237)
!5274 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !5238, file: !5238, line: 157, type: !5275, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5277)
!5275 = !DISubroutineType(types: !5276)
!5276 = !{!2615, !2610, !104}
!5277 = !{!5278, !5279, !5280, !5281}
!5278 = !DILocalVariable(name: "h", arg: 1, scope: !5274, file: !5238, line: 157, type: !2610)
!5279 = !DILocalVariable(name: "p", arg: 2, scope: !5274, file: !5238, line: 157, type: !104)
!5280 = !DILocalVariable(name: "mem", scope: !5274, file: !5238, line: 159, type: !432)
!5281 = !DILocalVariable(name: "base", scope: !5274, file: !5238, line: 159, type: !432)
!5282 = !DILocation(line: 0, scope: !5274)
!5283 = !DILocation(line: 159, column: 39, scope: !5274)
!5284 = !DILocation(line: 160, column: 14, scope: !5274)
!5285 = !DILocation(line: 160, column: 38, scope: !5274)
!5286 = !DILocation(line: 160, column: 46, scope: !5274)
!5287 = !DILocation(line: 160, column: 2, scope: !5274)
!5288 = distinct !DISubprogram(name: "chunk_used", scope: !2597, file: !2597, line: 137, type: !5289, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5291)
!5289 = !DISubroutineType(types: !5290)
!5290 = !{!492, !2610, !2615}
!5291 = !{!5292, !5293}
!5292 = !DILocalVariable(name: "h", arg: 1, scope: !5288, file: !2597, line: 137, type: !2610)
!5293 = !DILocalVariable(name: "c", arg: 2, scope: !5288, file: !2597, line: 137, type: !2615)
!5294 = !DILocation(line: 0, scope: !5288)
!5295 = !DILocation(line: 139, column: 9, scope: !5288)
!5296 = !DILocation(line: 139, column: 42, scope: !5288)
!5297 = !DILocation(line: 139, column: 2, scope: !5288)
!5298 = distinct !DISubprogram(name: "right_chunk", scope: !2597, file: !2597, line: 204, type: !5299, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5301)
!5299 = !DISubroutineType(types: !5300)
!5300 = !{!2615, !2610, !2615}
!5301 = !{!5302, !5303}
!5302 = !DILocalVariable(name: "h", arg: 1, scope: !5298, file: !2597, line: 204, type: !2610)
!5303 = !DILocalVariable(name: "c", arg: 2, scope: !5298, file: !2597, line: 204, type: !2615)
!5304 = !DILocation(line: 0, scope: !5298)
!5305 = !DILocation(line: 206, column: 13, scope: !5298)
!5306 = !DILocation(line: 206, column: 11, scope: !5298)
!5307 = !DILocation(line: 206, column: 2, scope: !5298)
!5308 = distinct !DISubprogram(name: "left_chunk", scope: !2597, file: !2597, line: 199, type: !5299, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5309)
!5309 = !{!5310, !5311}
!5310 = !DILocalVariable(name: "h", arg: 1, scope: !5308, file: !2597, line: 199, type: !2610)
!5311 = !DILocalVariable(name: "c", arg: 2, scope: !5308, file: !2597, line: 199, type: !2615)
!5312 = !DILocation(line: 0, scope: !5308)
!5313 = !DILocation(line: 201, column: 13, scope: !5308)
!5314 = !DILocation(line: 201, column: 11, scope: !5308)
!5315 = !DILocation(line: 201, column: 2, scope: !5308)
!5316 = distinct !DISubprogram(name: "set_chunk_used", scope: !2597, file: !2597, line: 147, type: !5317, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5319)
!5317 = !DISubroutineType(types: !5318)
!5318 = !{null, !2610, !2615, !492}
!5319 = !{!5320, !5321, !5322, !5323, !5324}
!5320 = !DILocalVariable(name: "h", arg: 1, scope: !5316, file: !2597, line: 147, type: !2610)
!5321 = !DILocalVariable(name: "c", arg: 2, scope: !5316, file: !2597, line: 147, type: !2615)
!5322 = !DILocalVariable(name: "used", arg: 3, scope: !5316, file: !2597, line: 147, type: !492)
!5323 = !DILocalVariable(name: "buf", scope: !5316, file: !2597, line: 149, type: !2604)
!5324 = !DILocalVariable(name: "cmem", scope: !5316, file: !2597, line: 150, type: !104)
!5325 = !DILocation(line: 0, scope: !5316)
!5326 = !DILocation(line: 149, column: 22, scope: !5316)
!5327 = !DILocation(line: 0, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5329, file: !2597, line: 159, column: 7)
!5329 = distinct !DILexicalBlock(scope: !5330, file: !2597, line: 158, column: 9)
!5330 = distinct !DILexicalBlock(scope: !5316, file: !2597, line: 152, column: 6)
!5331 = !DILocation(line: 159, column: 7, scope: !5329)
!5332 = !DILocation(line: 165, column: 1, scope: !5316)
!5333 = distinct !DISubprogram(name: "free_chunk", scope: !5238, file: !5238, line: 133, type: !5334, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5336)
!5334 = !DISubroutineType(types: !5335)
!5335 = !{null, !2610, !2615}
!5336 = !{!5337, !5338}
!5337 = !DILocalVariable(name: "h", arg: 1, scope: !5333, file: !5238, line: 133, type: !2610)
!5338 = !DILocalVariable(name: "c", arg: 2, scope: !5333, file: !5238, line: 133, type: !2615)
!5339 = !DILocation(line: 0, scope: !5333)
!5340 = !DILocation(line: 136, column: 21, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5333, file: !5238, line: 136, column: 6)
!5342 = !DILocation(line: 136, column: 7, scope: !5341)
!5343 = !DILocation(line: 136, column: 6, scope: !5333)
!5344 = !DILocation(line: 137, column: 3, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5341, file: !5238, line: 136, column: 41)
!5346 = !DILocation(line: 138, column: 22, scope: !5345)
!5347 = !DILocation(line: 138, column: 3, scope: !5345)
!5348 = !DILocation(line: 139, column: 2, scope: !5345)
!5349 = !DILocation(line: 142, column: 21, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5333, file: !5238, line: 142, column: 6)
!5351 = !DILocation(line: 142, column: 7, scope: !5350)
!5352 = !DILocation(line: 142, column: 6, scope: !5333)
!5353 = !DILocation(line: 143, column: 3, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5350, file: !5238, line: 142, column: 40)
!5355 = !DILocation(line: 144, column: 19, scope: !5354)
!5356 = !DILocation(line: 144, column: 3, scope: !5354)
!5357 = !DILocation(line: 145, column: 7, scope: !5354)
!5358 = !DILocation(line: 146, column: 2, scope: !5354)
!5359 = !DILocation(line: 148, column: 2, scope: !5333)
!5360 = !DILocation(line: 149, column: 1, scope: !5333)
!5361 = distinct !DISubprogram(name: "free_list_remove", scope: !5238, file: !5238, line: 60, type: !5334, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5362)
!5362 = !{!5363, !5364, !5365}
!5363 = !DILocalVariable(name: "h", arg: 1, scope: !5361, file: !5238, line: 60, type: !2610)
!5364 = !DILocalVariable(name: "c", arg: 2, scope: !5361, file: !5238, line: 60, type: !2615)
!5365 = !DILocalVariable(name: "bidx", scope: !5366, file: !5238, line: 63, type: !105)
!5366 = distinct !DILexicalBlock(scope: !5367, file: !5238, line: 62, column: 31)
!5367 = distinct !DILexicalBlock(scope: !5361, file: !5238, line: 62, column: 6)
!5368 = !DILocation(line: 0, scope: !5361)
!5369 = !DILocation(line: 63, column: 28, scope: !5366)
!5370 = !{i32 0, i32 32768}
!5371 = !DILocation(line: 63, column: 14, scope: !5366)
!5372 = !DILocation(line: 0, scope: !5366)
!5373 = !DILocation(line: 64, column: 3, scope: !5366)
!5374 = !DILocation(line: 66, column: 1, scope: !5361)
!5375 = distinct !DISubprogram(name: "merge_chunks", scope: !5238, file: !5238, line: 125, type: !5376, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5378)
!5376 = !DISubroutineType(types: !5377)
!5377 = !{null, !2610, !2615, !2615}
!5378 = !{!5379, !5380, !5381, !5382}
!5379 = !DILocalVariable(name: "h", arg: 1, scope: !5375, file: !5238, line: 125, type: !2610)
!5380 = !DILocalVariable(name: "lc", arg: 2, scope: !5375, file: !5238, line: 125, type: !2615)
!5381 = !DILocalVariable(name: "rc", arg: 3, scope: !5375, file: !5238, line: 125, type: !2615)
!5382 = !DILocalVariable(name: "newsz", scope: !5375, file: !5238, line: 127, type: !5383)
!5383 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2597, line: 62, baseType: !113)
!5384 = !DILocation(line: 0, scope: !5375)
!5385 = !DILocation(line: 127, column: 20, scope: !5375)
!5386 = !DILocation(line: 127, column: 40, scope: !5375)
!5387 = !DILocation(line: 127, column: 38, scope: !5375)
!5388 = !DILocation(line: 129, column: 2, scope: !5375)
!5389 = !DILocation(line: 130, column: 25, scope: !5375)
!5390 = !DILocation(line: 130, column: 2, scope: !5375)
!5391 = !DILocation(line: 131, column: 1, scope: !5375)
!5392 = distinct !DISubprogram(name: "free_list_add", scope: !5238, file: !5238, line: 98, type: !5334, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5393)
!5393 = !{!5394, !5395, !5396}
!5394 = !DILocalVariable(name: "h", arg: 1, scope: !5392, file: !5238, line: 98, type: !2610)
!5395 = !DILocalVariable(name: "c", arg: 2, scope: !5392, file: !5238, line: 98, type: !2615)
!5396 = !DILocalVariable(name: "bidx", scope: !5397, file: !5238, line: 101, type: !105)
!5397 = distinct !DILexicalBlock(scope: !5398, file: !5238, line: 100, column: 31)
!5398 = distinct !DILexicalBlock(scope: !5392, file: !5238, line: 100, column: 6)
!5399 = !DILocation(line: 0, scope: !5392)
!5400 = !DILocation(line: 101, column: 28, scope: !5397)
!5401 = !DILocation(line: 101, column: 14, scope: !5397)
!5402 = !DILocation(line: 0, scope: !5397)
!5403 = !DILocation(line: 102, column: 3, scope: !5397)
!5404 = !DILocation(line: 104, column: 1, scope: !5392)
!5405 = distinct !DISubprogram(name: "chunk_size", scope: !2597, file: !2597, line: 142, type: !5406, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5408)
!5406 = !DISubroutineType(types: !5407)
!5407 = !{!5383, !2610, !2615}
!5408 = !{!5409, !5410}
!5409 = !DILocalVariable(name: "h", arg: 1, scope: !5405, file: !2597, line: 142, type: !2610)
!5410 = !DILocalVariable(name: "c", arg: 2, scope: !5405, file: !2597, line: 142, type: !2615)
!5411 = !DILocation(line: 0, scope: !5405)
!5412 = !DILocation(line: 144, column: 9, scope: !5405)
!5413 = !DILocation(line: 144, column: 42, scope: !5405)
!5414 = !DILocation(line: 144, column: 2, scope: !5405)
!5415 = distinct !DISubprogram(name: "bucket_idx", scope: !2597, file: !2597, line: 250, type: !5416, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5418)
!5416 = !DISubroutineType(types: !5417)
!5417 = !{!105, !2610, !5383}
!5418 = !{!5419, !5420, !5421}
!5419 = !DILocalVariable(name: "h", arg: 1, scope: !5415, file: !2597, line: 250, type: !2610)
!5420 = !DILocalVariable(name: "sz", arg: 2, scope: !5415, file: !2597, line: 250, type: !5383)
!5421 = !DILocalVariable(name: "usable_sz", scope: !5415, file: !2597, line: 252, type: !32)
!5422 = !DILocation(line: 0, scope: !5415)
!5423 = !DILocation(line: 252, column: 32, scope: !5415)
!5424 = !DILocation(line: 252, column: 30, scope: !5415)
!5425 = !DILocation(line: 252, column: 50, scope: !5415)
!5426 = !DILocation(line: 253, column: 14, scope: !5415)
!5427 = !{i32 0, i32 33}
!5428 = !DILocation(line: 253, column: 12, scope: !5415)
!5429 = !DILocation(line: 253, column: 2, scope: !5415)
!5430 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !5238, file: !5238, line: 68, type: !5431, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5433)
!5431 = !DISubroutineType(types: !5432)
!5432 = !{null, !2610, !2615, !105}
!5433 = !{!5434, !5435, !5436, !5437, !5439, !5442}
!5434 = !DILocalVariable(name: "h", arg: 1, scope: !5430, file: !5238, line: 68, type: !2610)
!5435 = !DILocalVariable(name: "c", arg: 2, scope: !5430, file: !5238, line: 68, type: !2615)
!5436 = !DILocalVariable(name: "bidx", arg: 3, scope: !5430, file: !5238, line: 68, type: !105)
!5437 = !DILocalVariable(name: "b", scope: !5430, file: !5238, line: 70, type: !5438)
!5438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2620, size: 32)
!5439 = !DILocalVariable(name: "second", scope: !5440, file: !5238, line: 84, type: !2615)
!5440 = distinct !DILexicalBlock(scope: !5441, file: !5238, line: 80, column: 9)
!5441 = distinct !DILexicalBlock(scope: !5430, file: !5238, line: 72, column: 6)
!5442 = !DILocalVariable(name: "first", scope: !5440, file: !5238, line: 85, type: !2615)
!5443 = !DILocation(line: 0, scope: !5430)
!5444 = !DILocation(line: 72, column: 9, scope: !5441)
!5445 = !DILocation(line: 72, column: 14, scope: !5441)
!5446 = !DILocation(line: 72, column: 6, scope: !5430)
!5447 = !DILocation(line: 76, column: 23, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5441, file: !5238, line: 72, column: 21)
!5449 = !DILocation(line: 76, column: 6, scope: !5448)
!5450 = !DILocation(line: 76, column: 20, scope: !5448)
!5451 = !DILocation(line: 77, column: 11, scope: !5448)
!5452 = !DILocation(line: 78, column: 3, scope: !5448)
!5453 = !DILocation(line: 79, column: 3, scope: !5448)
!5454 = !DILocation(line: 80, column: 2, scope: !5448)
!5455 = !DILocation(line: 0, scope: !5440)
!5456 = !DILocation(line: 85, column: 21, scope: !5440)
!5457 = !{i32 0, i32 65536}
!5458 = !DILocation(line: 87, column: 3, scope: !5440)
!5459 = !DILocation(line: 88, column: 3, scope: !5440)
!5460 = !DILocation(line: 89, column: 3, scope: !5440)
!5461 = !DILocation(line: 90, column: 3, scope: !5440)
!5462 = !DILocation(line: 96, column: 1, scope: !5430)
!5463 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2597, file: !2597, line: 187, type: !5376, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5464)
!5464 = !{!5465, !5466, !5467}
!5465 = !DILocalVariable(name: "h", arg: 1, scope: !5463, file: !2597, line: 187, type: !2610)
!5466 = !DILocalVariable(name: "c", arg: 2, scope: !5463, file: !2597, line: 187, type: !2615)
!5467 = !DILocalVariable(name: "prev", arg: 3, scope: !5463, file: !2597, line: 188, type: !2615)
!5468 = !DILocation(line: 0, scope: !5463)
!5469 = !DILocation(line: 190, column: 2, scope: !5463)
!5470 = !DILocation(line: 191, column: 1, scope: !5463)
!5471 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2597, file: !2597, line: 193, type: !5376, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5472)
!5472 = !{!5473, !5474, !5475}
!5473 = !DILocalVariable(name: "h", arg: 1, scope: !5471, file: !2597, line: 193, type: !2610)
!5474 = !DILocalVariable(name: "c", arg: 2, scope: !5471, file: !2597, line: 193, type: !2615)
!5475 = !DILocalVariable(name: "next", arg: 3, scope: !5471, file: !2597, line: 194, type: !2615)
!5476 = !DILocation(line: 0, scope: !5471)
!5477 = !DILocation(line: 196, column: 2, scope: !5471)
!5478 = !DILocation(line: 197, column: 1, scope: !5471)
!5479 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2597, file: !2597, line: 177, type: !5299, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5480)
!5480 = !{!5481, !5482}
!5481 = !DILocalVariable(name: "h", arg: 1, scope: !5479, file: !2597, line: 177, type: !2610)
!5482 = !DILocalVariable(name: "c", arg: 2, scope: !5479, file: !2597, line: 177, type: !2615)
!5483 = !DILocation(line: 0, scope: !5479)
!5484 = !DILocation(line: 179, column: 9, scope: !5479)
!5485 = !DILocation(line: 179, column: 2, scope: !5479)
!5486 = distinct !DISubprogram(name: "chunk_field", scope: !2597, file: !2597, line: 107, type: !5487, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5489)
!5487 = !DISubroutineType(types: !5488)
!5488 = !{!2615, !2610, !2615, !2596}
!5489 = !{!5490, !5491, !5492, !5493, !5494}
!5490 = !DILocalVariable(name: "h", arg: 1, scope: !5486, file: !2597, line: 107, type: !2610)
!5491 = !DILocalVariable(name: "c", arg: 2, scope: !5486, file: !2597, line: 107, type: !2615)
!5492 = !DILocalVariable(name: "f", arg: 3, scope: !5486, file: !2597, line: 108, type: !2596)
!5493 = !DILocalVariable(name: "buf", scope: !5486, file: !2597, line: 110, type: !2604)
!5494 = !DILocalVariable(name: "cmem", scope: !5486, file: !2597, line: 111, type: !104)
!5495 = !DILocation(line: 0, scope: !5486)
!5496 = !DILocation(line: 110, column: 22, scope: !5486)
!5497 = !DILocation(line: 111, column: 15, scope: !5486)
!5498 = !DILocation(line: 116, column: 11, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5500, file: !2597, line: 115, column: 9)
!5500 = distinct !DILexicalBlock(scope: !5486, file: !2597, line: 113, column: 6)
!5501 = !DILocation(line: 116, column: 10, scope: !5499)
!5502 = !DILocation(line: 118, column: 1, scope: !5486)
!5503 = distinct !DISubprogram(name: "chunk_buf", scope: !2597, file: !2597, line: 101, type: !5504, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5506)
!5504 = !DISubroutineType(types: !5505)
!5505 = !{!2604, !2610}
!5506 = !{!5507}
!5507 = !DILocalVariable(name: "h", arg: 1, scope: !5503, file: !2597, line: 101, type: !2610)
!5508 = !DILocation(line: 0, scope: !5503)
!5509 = !DILocation(line: 104, column: 9, scope: !5503)
!5510 = !DILocation(line: 104, column: 2, scope: !5503)
!5511 = distinct !DISubprogram(name: "chunk_set", scope: !2597, file: !2597, line: 120, type: !5512, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5514)
!5512 = !DISubroutineType(types: !5513)
!5513 = !{null, !2610, !2615, !2596, !2615}
!5514 = !{!5515, !5516, !5517, !5518, !5519, !5520}
!5515 = !DILocalVariable(name: "h", arg: 1, scope: !5511, file: !2597, line: 120, type: !2610)
!5516 = !DILocalVariable(name: "c", arg: 2, scope: !5511, file: !2597, line: 120, type: !2615)
!5517 = !DILocalVariable(name: "f", arg: 3, scope: !5511, file: !2597, line: 121, type: !2596)
!5518 = !DILocalVariable(name: "val", arg: 4, scope: !5511, file: !2597, line: 121, type: !2615)
!5519 = !DILocalVariable(name: "buf", scope: !5511, file: !2597, line: 125, type: !2604)
!5520 = !DILocalVariable(name: "cmem", scope: !5511, file: !2597, line: 126, type: !104)
!5521 = !DILocation(line: 0, scope: !5511)
!5522 = !DILocation(line: 125, column: 22, scope: !5511)
!5523 = !DILocation(line: 126, column: 15, scope: !5511)
!5524 = !DILocation(line: 133, column: 27, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5526, file: !2597, line: 131, column: 9)
!5526 = distinct !DILexicalBlock(scope: !5511, file: !2597, line: 128, column: 6)
!5527 = !DILocation(line: 133, column: 4, scope: !5525)
!5528 = !DILocation(line: 133, column: 3, scope: !5525)
!5529 = !DILocation(line: 133, column: 25, scope: !5525)
!5530 = !DILocation(line: 135, column: 1, scope: !5511)
!5531 = distinct !DISubprogram(name: "min_chunk_size", scope: !2597, file: !2597, line: 240, type: !5532, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5534)
!5532 = !DISubroutineType(types: !5533)
!5533 = !{!5383, !2610}
!5534 = !{!5535}
!5535 = !DILocalVariable(name: "h", arg: 1, scope: !5531, file: !2597, line: 240, type: !2610)
!5536 = !DILocation(line: 0, scope: !5531)
!5537 = !DILocation(line: 242, column: 9, scope: !5531)
!5538 = !DILocation(line: 242, column: 2, scope: !5531)
!5539 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2597, file: !2597, line: 235, type: !5540, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5542)
!5540 = !DISubroutineType(types: !5541)
!5541 = !{!5383, !2610, !111}
!5542 = !{!5543, !5544}
!5543 = !DILocalVariable(name: "h", arg: 1, scope: !5539, file: !2597, line: 235, type: !2610)
!5544 = !DILocalVariable(name: "bytes", arg: 2, scope: !5539, file: !2597, line: 235, type: !111)
!5545 = !DILocation(line: 0, scope: !5539)
!5546 = !DILocation(line: 237, column: 39, scope: !5539)
!5547 = !DILocation(line: 237, column: 9, scope: !5539)
!5548 = !DILocation(line: 237, column: 2, scope: !5539)
!5549 = distinct !DISubprogram(name: "chunksz", scope: !2597, file: !2597, line: 230, type: !5550, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5552)
!5550 = !DISubroutineType(types: !5551)
!5551 = !{!5383, !111}
!5552 = !{!5553}
!5553 = !DILocalVariable(name: "bytes", arg: 1, scope: !5549, file: !2597, line: 230, type: !111)
!5554 = !DILocation(line: 0, scope: !5549)
!5555 = !DILocation(line: 232, column: 29, scope: !5549)
!5556 = !DILocation(line: 232, column: 35, scope: !5549)
!5557 = !DILocation(line: 232, column: 2, scope: !5549)
!5558 = distinct !DISubprogram(name: "set_chunk_size", scope: !2597, file: !2597, line: 172, type: !5559, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5561)
!5559 = !DISubroutineType(types: !5560)
!5560 = !{null, !2610, !2615, !5383}
!5561 = !{!5562, !5563, !5564}
!5562 = !DILocalVariable(name: "h", arg: 1, scope: !5558, file: !2597, line: 172, type: !2610)
!5563 = !DILocalVariable(name: "c", arg: 2, scope: !5558, file: !2597, line: 172, type: !2615)
!5564 = !DILocalVariable(name: "size", arg: 3, scope: !5558, file: !2597, line: 172, type: !5383)
!5565 = !DILocation(line: 0, scope: !5558)
!5566 = !DILocation(line: 174, column: 38, scope: !5558)
!5567 = !DILocation(line: 174, column: 2, scope: !5558)
!5568 = !DILocation(line: 175, column: 1, scope: !5558)
!5569 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2597, file: !2597, line: 209, type: !5559, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5570)
!5570 = !{!5571, !5572, !5573}
!5571 = !DILocalVariable(name: "h", arg: 1, scope: !5569, file: !2597, line: 209, type: !2610)
!5572 = !DILocalVariable(name: "c", arg: 2, scope: !5569, file: !2597, line: 209, type: !2615)
!5573 = !DILocalVariable(name: "size", arg: 3, scope: !5569, file: !2597, line: 210, type: !5383)
!5574 = !DILocation(line: 0, scope: !5569)
!5575 = !DILocation(line: 212, column: 2, scope: !5569)
!5576 = !DILocation(line: 213, column: 1, scope: !5569)
!5577 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !5238, file: !5238, line: 34, type: !5431, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5578)
!5578 = !{!5579, !5580, !5581, !5582, !5583, !5586}
!5579 = !DILocalVariable(name: "h", arg: 1, scope: !5577, file: !5238, line: 34, type: !2610)
!5580 = !DILocalVariable(name: "c", arg: 2, scope: !5577, file: !5238, line: 34, type: !2615)
!5581 = !DILocalVariable(name: "bidx", arg: 3, scope: !5577, file: !5238, line: 34, type: !105)
!5582 = !DILocalVariable(name: "b", scope: !5577, file: !5238, line: 36, type: !5438)
!5583 = !DILocalVariable(name: "first", scope: !5584, file: !5238, line: 47, type: !2615)
!5584 = distinct !DILexicalBlock(scope: !5585, file: !5238, line: 46, column: 9)
!5585 = distinct !DILexicalBlock(scope: !5577, file: !5238, line: 42, column: 6)
!5586 = !DILocalVariable(name: "second", scope: !5584, file: !5238, line: 48, type: !2615)
!5587 = !DILocation(line: 0, scope: !5577)
!5588 = !DILocation(line: 36, column: 29, scope: !5577)
!5589 = !DILocation(line: 42, column: 6, scope: !5585)
!5590 = !DILocation(line: 42, column: 28, scope: !5585)
!5591 = !DILocation(line: 42, column: 6, scope: !5577)
!5592 = !DILocation(line: 44, column: 24, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5585, file: !5238, line: 42, column: 34)
!5594 = !DILocation(line: 44, column: 23, scope: !5593)
!5595 = !DILocation(line: 44, column: 6, scope: !5593)
!5596 = !DILocation(line: 44, column: 20, scope: !5593)
!5597 = !DILocation(line: 45, column: 6, scope: !5593)
!5598 = !DILocation(line: 45, column: 11, scope: !5593)
!5599 = !DILocation(line: 46, column: 2, scope: !5593)
!5600 = !DILocation(line: 47, column: 21, scope: !5584)
!5601 = !DILocation(line: 0, scope: !5584)
!5602 = !DILocation(line: 50, column: 6, scope: !5584)
!5603 = !DILocation(line: 50, column: 11, scope: !5584)
!5604 = !DILocation(line: 51, column: 3, scope: !5584)
!5605 = !DILocation(line: 52, column: 3, scope: !5584)
!5606 = !DILocation(line: 58, column: 1, scope: !5577)
!5607 = distinct !DISubprogram(name: "next_free_chunk", scope: !2597, file: !2597, line: 182, type: !5299, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5608)
!5608 = !{!5609, !5610}
!5609 = !DILocalVariable(name: "h", arg: 1, scope: !5607, file: !2597, line: 182, type: !2610)
!5610 = !DILocalVariable(name: "c", arg: 2, scope: !5607, file: !2597, line: 182, type: !2615)
!5611 = !DILocation(line: 0, scope: !5607)
!5612 = !DILocation(line: 184, column: 9, scope: !5607)
!5613 = !DILocation(line: 184, column: 2, scope: !5607)
!5614 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !5238, file: !5238, line: 200, type: !5615, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5617)
!5615 = !DISubroutineType(types: !5616)
!5616 = !{!111, !5241, !104}
!5617 = !{!5618, !5619, !5620, !5621, !5622, !5623, !5624}
!5618 = !DILocalVariable(name: "heap", arg: 1, scope: !5614, file: !5238, line: 200, type: !5241)
!5619 = !DILocalVariable(name: "mem", arg: 2, scope: !5614, file: !5238, line: 200, type: !104)
!5620 = !DILocalVariable(name: "h", scope: !5614, file: !5238, line: 202, type: !2610)
!5621 = !DILocalVariable(name: "c", scope: !5614, file: !5238, line: 203, type: !2615)
!5622 = !DILocalVariable(name: "addr", scope: !5614, file: !5238, line: 204, type: !111)
!5623 = !DILocalVariable(name: "chunk_base", scope: !5614, file: !5238, line: 205, type: !111)
!5624 = !DILocalVariable(name: "chunk_sz", scope: !5614, file: !5238, line: 206, type: !111)
!5625 = !DILocation(line: 0, scope: !5614)
!5626 = !DILocation(line: 202, column: 27, scope: !5614)
!5627 = !DILocation(line: 203, column: 16, scope: !5614)
!5628 = !DILocation(line: 204, column: 16, scope: !5614)
!5629 = !DILocation(line: 205, column: 31, scope: !5614)
!5630 = !DILocation(line: 205, column: 22, scope: !5614)
!5631 = !DILocation(line: 206, column: 20, scope: !5614)
!5632 = !DILocation(line: 206, column: 37, scope: !5614)
!5633 = !DILocation(line: 208, column: 26, scope: !5614)
!5634 = !DILocation(line: 208, column: 18, scope: !5614)
!5635 = !DILocation(line: 208, column: 2, scope: !5614)
!5636 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !5238, file: !5238, line: 263, type: !5637, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5639)
!5637 = !DISubroutineType(types: !5638)
!5638 = !{!104, !5241, !111}
!5639 = !{!5640, !5641, !5642, !5643, !5644, !5645}
!5640 = !DILocalVariable(name: "heap", arg: 1, scope: !5636, file: !5238, line: 263, type: !5241)
!5641 = !DILocalVariable(name: "bytes", arg: 2, scope: !5636, file: !5238, line: 263, type: !111)
!5642 = !DILocalVariable(name: "h", scope: !5636, file: !5238, line: 265, type: !2610)
!5643 = !DILocalVariable(name: "mem", scope: !5636, file: !5238, line: 266, type: !104)
!5644 = !DILocalVariable(name: "chunk_sz", scope: !5636, file: !5238, line: 272, type: !5383)
!5645 = !DILocalVariable(name: "c", scope: !5636, file: !5238, line: 273, type: !2615)
!5646 = !DILocation(line: 0, scope: !5636)
!5647 = !DILocation(line: 265, column: 27, scope: !5636)
!5648 = !DILocation(line: 268, column: 12, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5636, file: !5238, line: 268, column: 6)
!5650 = !DILocation(line: 268, column: 18, scope: !5649)
!5651 = !DILocation(line: 268, column: 21, scope: !5649)
!5652 = !DILocation(line: 268, column: 6, scope: !5636)
!5653 = !DILocation(line: 272, column: 23, scope: !5636)
!5654 = !DILocation(line: 273, column: 16, scope: !5636)
!5655 = !DILocation(line: 274, column: 8, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5636, file: !5238, line: 274, column: 6)
!5657 = !DILocation(line: 274, column: 6, scope: !5636)
!5658 = !DILocation(line: 279, column: 6, scope: !5659)
!5659 = distinct !DILexicalBlock(scope: !5636, file: !5238, line: 279, column: 6)
!5660 = !DILocation(line: 279, column: 23, scope: !5659)
!5661 = !DILocation(line: 279, column: 6, scope: !5636)
!5662 = !DILocation(line: 280, column: 24, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5659, file: !5238, line: 279, column: 35)
!5664 = !DILocation(line: 280, column: 3, scope: !5663)
!5665 = !DILocation(line: 281, column: 3, scope: !5663)
!5666 = !DILocation(line: 282, column: 2, scope: !5663)
!5667 = !DILocation(line: 284, column: 2, scope: !5636)
!5668 = !DILocation(line: 286, column: 8, scope: !5636)
!5669 = !DILocation(line: 298, column: 2, scope: !5636)
!5670 = !DILocation(line: 299, column: 1, scope: !5636)
!5671 = distinct !DISubprogram(name: "size_too_big", scope: !2597, file: !2597, line: 256, type: !5672, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5674)
!5672 = !DISubroutineType(types: !5673)
!5673 = !{!492, !2610, !111}
!5674 = !{!5675, !5676}
!5675 = !DILocalVariable(name: "h", arg: 1, scope: !5671, file: !2597, line: 256, type: !2610)
!5676 = !DILocalVariable(name: "bytes", arg: 2, scope: !5671, file: !2597, line: 256, type: !111)
!5677 = !DILocation(line: 0, scope: !5671)
!5678 = !DILocation(line: 262, column: 16, scope: !5671)
!5679 = !DILocation(line: 262, column: 36, scope: !5671)
!5680 = !DILocation(line: 262, column: 30, scope: !5671)
!5681 = !DILocation(line: 262, column: 2, scope: !5671)
!5682 = distinct !DISubprogram(name: "alloc_chunk", scope: !5238, file: !5238, line: 211, type: !5683, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5685)
!5683 = !DISubroutineType(types: !5684)
!5684 = !{!2615, !2610, !5383}
!5685 = !{!5686, !5687, !5688, !5689, !5690, !5693, !5694, !5696, !5697, !5700}
!5686 = !DILocalVariable(name: "h", arg: 1, scope: !5682, file: !5238, line: 211, type: !2610)
!5687 = !DILocalVariable(name: "sz", arg: 2, scope: !5682, file: !5238, line: 211, type: !5383)
!5688 = !DILocalVariable(name: "bi", scope: !5682, file: !5238, line: 213, type: !105)
!5689 = !DILocalVariable(name: "b", scope: !5682, file: !5238, line: 214, type: !5438)
!5690 = !DILocalVariable(name: "first", scope: !5691, file: !5238, line: 233, type: !2615)
!5691 = distinct !DILexicalBlock(scope: !5692, file: !5238, line: 232, column: 15)
!5692 = distinct !DILexicalBlock(scope: !5682, file: !5238, line: 232, column: 6)
!5693 = !DILocalVariable(name: "i", scope: !5691, file: !5238, line: 234, type: !105)
!5694 = !DILocalVariable(name: "c", scope: !5695, file: !5238, line: 236, type: !2615)
!5695 = distinct !DILexicalBlock(scope: !5691, file: !5238, line: 235, column: 6)
!5696 = !DILocalVariable(name: "bmask", scope: !5682, file: !5238, line: 249, type: !113)
!5697 = !DILocalVariable(name: "minbucket", scope: !5698, file: !5238, line: 252, type: !105)
!5698 = distinct !DILexicalBlock(scope: !5699, file: !5238, line: 251, column: 19)
!5699 = distinct !DILexicalBlock(scope: !5682, file: !5238, line: 251, column: 6)
!5700 = !DILocalVariable(name: "c", scope: !5698, file: !5238, line: 253, type: !2615)
!5701 = !DILocation(line: 0, scope: !5682)
!5702 = !DILocation(line: 213, column: 11, scope: !5682)
!5703 = !DILocation(line: 232, column: 9, scope: !5692)
!5704 = !DILocation(line: 232, column: 6, scope: !5692)
!5705 = !DILocation(line: 232, column: 6, scope: !5682)
!5706 = !DILocation(line: 236, column: 21, scope: !5695)
!5707 = !DILocation(line: 0, scope: !5691)
!5708 = !DILocation(line: 0, scope: !5695)
!5709 = !DILocation(line: 237, column: 8, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5695, file: !5238, line: 237, column: 8)
!5711 = !DILocation(line: 237, column: 25, scope: !5710)
!5712 = !DILocation(line: 237, column: 8, scope: !5695)
!5713 = !DILocation(line: 238, column: 5, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5710, file: !5238, line: 237, column: 32)
!5715 = !DILocation(line: 241, column: 14, scope: !5695)
!5716 = !DILocation(line: 241, column: 12, scope: !5695)
!5717 = !DILocation(line: 243, column: 12, scope: !5691)
!5718 = !DILocation(line: 243, column: 16, scope: !5691)
!5719 = distinct !{!5719, !5720, !5721}
!5720 = !DILocation(line: 235, column: 3, scope: !5691)
!5721 = !DILocation(line: 243, column: 35, scope: !5691)
!5722 = !DILocation(line: 249, column: 22, scope: !5682)
!5723 = !DILocation(line: 249, column: 39, scope: !5682)
!5724 = !DILocation(line: 249, column: 36, scope: !5682)
!5725 = !DILocation(line: 251, column: 12, scope: !5699)
!5726 = !DILocation(line: 251, column: 6, scope: !5682)
!5727 = !DILocation(line: 252, column: 19, scope: !5698)
!5728 = !DILocation(line: 0, scope: !5698)
!5729 = !DILocation(line: 253, column: 39, scope: !5698)
!5730 = !DILocation(line: 255, column: 3, scope: !5698)
!5731 = !DILocation(line: 261, column: 1, scope: !5682)
!5732 = distinct !DISubprogram(name: "split_chunks", scope: !5238, file: !5238, line: 109, type: !5376, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5733)
!5733 = !{!5734, !5735, !5736, !5737, !5738, !5739}
!5734 = !DILocalVariable(name: "h", arg: 1, scope: !5732, file: !5238, line: 109, type: !2610)
!5735 = !DILocalVariable(name: "lc", arg: 2, scope: !5732, file: !5238, line: 109, type: !2615)
!5736 = !DILocalVariable(name: "rc", arg: 3, scope: !5732, file: !5238, line: 109, type: !2615)
!5737 = !DILocalVariable(name: "sz0", scope: !5732, file: !5238, line: 114, type: !5383)
!5738 = !DILocalVariable(name: "lsz", scope: !5732, file: !5238, line: 115, type: !5383)
!5739 = !DILocalVariable(name: "rsz", scope: !5732, file: !5238, line: 116, type: !5383)
!5740 = !DILocation(line: 0, scope: !5732)
!5741 = !DILocation(line: 114, column: 18, scope: !5732)
!5742 = !DILocation(line: 115, column: 21, scope: !5732)
!5743 = !DILocation(line: 116, column: 22, scope: !5732)
!5744 = !DILocation(line: 118, column: 2, scope: !5732)
!5745 = !DILocation(line: 119, column: 2, scope: !5732)
!5746 = !DILocation(line: 120, column: 2, scope: !5732)
!5747 = !DILocation(line: 121, column: 25, scope: !5732)
!5748 = !DILocation(line: 121, column: 2, scope: !5732)
!5749 = !DILocation(line: 122, column: 1, scope: !5732)
!5750 = distinct !DISubprogram(name: "chunk_mem", scope: !5238, file: !5238, line: 24, type: !5751, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5753)
!5751 = !DISubroutineType(types: !5752)
!5752 = !{!104, !2610, !2615}
!5753 = !{!5754, !5755, !5756, !5757}
!5754 = !DILocalVariable(name: "h", arg: 1, scope: !5750, file: !5238, line: 24, type: !2610)
!5755 = !DILocalVariable(name: "c", arg: 2, scope: !5750, file: !5238, line: 24, type: !2615)
!5756 = !DILocalVariable(name: "buf", scope: !5750, file: !5238, line: 26, type: !2604)
!5757 = !DILocalVariable(name: "ret", scope: !5750, file: !5238, line: 27, type: !432)
!5758 = !DILocation(line: 0, scope: !5750)
!5759 = !DILocation(line: 26, column: 22, scope: !5750)
!5760 = !DILocation(line: 27, column: 38, scope: !5750)
!5761 = !DILocation(line: 31, column: 2, scope: !5750)
!5762 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !5238, file: !5238, line: 301, type: !5763, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5765)
!5763 = !DISubroutineType(types: !5764)
!5764 = !{!104, !5241, !111, !111}
!5765 = !{!5766, !5767, !5768, !5769, !5770, !5771, !5772, !5773, !5774, !5775, !5776, !5777}
!5766 = !DILocalVariable(name: "heap", arg: 1, scope: !5762, file: !5238, line: 301, type: !5241)
!5767 = !DILocalVariable(name: "align", arg: 2, scope: !5762, file: !5238, line: 301, type: !111)
!5768 = !DILocalVariable(name: "bytes", arg: 3, scope: !5762, file: !5238, line: 301, type: !111)
!5769 = !DILocalVariable(name: "h", scope: !5762, file: !5238, line: 303, type: !2610)
!5770 = !DILocalVariable(name: "gap", scope: !5762, file: !5238, line: 304, type: !111)
!5771 = !DILocalVariable(name: "rew", scope: !5762, file: !5238, line: 304, type: !111)
!5772 = !DILocalVariable(name: "padded_sz", scope: !5762, file: !5238, line: 335, type: !5383)
!5773 = !DILocalVariable(name: "c0", scope: !5762, file: !5238, line: 336, type: !2615)
!5774 = !DILocalVariable(name: "mem", scope: !5762, file: !5238, line: 341, type: !432)
!5775 = !DILocalVariable(name: "end", scope: !5762, file: !5238, line: 345, type: !2604)
!5776 = !DILocalVariable(name: "c", scope: !5762, file: !5238, line: 348, type: !2615)
!5777 = !DILocalVariable(name: "c_end", scope: !5762, file: !5238, line: 349, type: !2615)
!5778 = !DILocation(line: 0, scope: !5762)
!5779 = !DILocation(line: 303, column: 27, scope: !5762)
!5780 = !DILocation(line: 313, column: 16, scope: !5762)
!5781 = !DILocation(line: 313, column: 14, scope: !5762)
!5782 = !DILocation(line: 314, column: 12, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5762, file: !5238, line: 314, column: 6)
!5784 = !DILocation(line: 314, column: 6, scope: !5762)
!5785 = !DILocation(line: 315, column: 9, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5783, file: !5238, line: 314, column: 20)
!5787 = !DILocation(line: 316, column: 9, scope: !5786)
!5788 = !DILocation(line: 318, column: 13, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5790, file: !5238, line: 318, column: 7)
!5790 = distinct !DILexicalBlock(scope: !5783, file: !5238, line: 317, column: 9)
!5791 = !DILocation(line: 318, column: 7, scope: !5790)
!5792 = !DILocation(line: 319, column: 11, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5789, file: !5238, line: 318, column: 39)
!5794 = !DILocation(line: 319, column: 4, scope: !5793)
!5795 = !DILocation(line: 0, scope: !5783)
!5796 = !DILocation(line: 324, column: 2, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5798, file: !5238, line: 324, column: 2)
!5798 = distinct !DILexicalBlock(scope: !5762, file: !5238, line: 324, column: 2)
!5799 = !DILocation(line: 324, column: 2, scope: !5798)
!5800 = !DILocation(line: 324, column: 2, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5797, file: !5238, line: 324, column: 2)
!5802 = !DILocation(line: 326, column: 12, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5762, file: !5238, line: 326, column: 6)
!5804 = !DILocation(line: 326, column: 17, scope: !5803)
!5805 = !DILocation(line: 326, column: 20, scope: !5803)
!5806 = !DILocation(line: 326, column: 6, scope: !5762)
!5807 = !DILocation(line: 335, column: 50, scope: !5762)
!5808 = !DILocation(line: 335, column: 58, scope: !5762)
!5809 = !DILocation(line: 335, column: 24, scope: !5762)
!5810 = !DILocation(line: 336, column: 17, scope: !5762)
!5811 = !DILocation(line: 338, column: 9, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5762, file: !5238, line: 338, column: 6)
!5813 = !DILocation(line: 338, column: 6, scope: !5762)
!5814 = !DILocation(line: 341, column: 17, scope: !5762)
!5815 = !DILocation(line: 344, column: 20, scope: !5762)
!5816 = !DILocation(line: 344, column: 8, scope: !5762)
!5817 = !DILocation(line: 344, column: 47, scope: !5762)
!5818 = !DILocation(line: 345, column: 39, scope: !5762)
!5819 = !DILocation(line: 348, column: 16, scope: !5762)
!5820 = !DILocation(line: 349, column: 26, scope: !5762)
!5821 = !DILocation(line: 349, column: 24, scope: !5762)
!5822 = !DILocation(line: 353, column: 8, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5762, file: !5238, line: 353, column: 6)
!5824 = !DILocation(line: 353, column: 6, scope: !5762)
!5825 = !DILocation(line: 354, column: 3, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5823, file: !5238, line: 353, column: 14)
!5827 = !DILocation(line: 355, column: 3, scope: !5826)
!5828 = !DILocation(line: 356, column: 2, scope: !5826)
!5829 = !DILocation(line: 359, column: 6, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5762, file: !5238, line: 359, column: 6)
!5831 = !DILocation(line: 359, column: 24, scope: !5830)
!5832 = !DILocation(line: 359, column: 6, scope: !5762)
!5833 = !DILocation(line: 360, column: 3, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5830, file: !5238, line: 359, column: 33)
!5835 = !DILocation(line: 361, column: 3, scope: !5834)
!5836 = !DILocation(line: 362, column: 2, scope: !5834)
!5837 = !DILocation(line: 364, column: 2, scope: !5762)
!5838 = !DILocation(line: 377, column: 1, scope: !5762)
!5839 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !5238, file: !5238, line: 379, type: !5840, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5842)
!5840 = !DISubroutineType(types: !5841)
!5841 = !{!104, !5241, !104, !111, !111}
!5842 = !{!5843, !5844, !5845, !5846, !5847, !5848, !5849, !5850, !5851, !5852, !5858, !5859}
!5843 = !DILocalVariable(name: "heap", arg: 1, scope: !5839, file: !5238, line: 379, type: !5241)
!5844 = !DILocalVariable(name: "ptr", arg: 2, scope: !5839, file: !5238, line: 379, type: !104)
!5845 = !DILocalVariable(name: "align", arg: 3, scope: !5839, file: !5238, line: 380, type: !111)
!5846 = !DILocalVariable(name: "bytes", arg: 4, scope: !5839, file: !5238, line: 380, type: !111)
!5847 = !DILocalVariable(name: "h", scope: !5839, file: !5238, line: 382, type: !2610)
!5848 = !DILocalVariable(name: "c", scope: !5839, file: !5238, line: 399, type: !2615)
!5849 = !DILocalVariable(name: "rc", scope: !5839, file: !5238, line: 400, type: !2615)
!5850 = !DILocalVariable(name: "align_gap", scope: !5839, file: !5238, line: 401, type: !111)
!5851 = !DILocalVariable(name: "chunks_need", scope: !5839, file: !5238, line: 402, type: !5383)
!5852 = !DILocalVariable(name: "split_size", scope: !5853, file: !5238, line: 435, type: !5383)
!5853 = distinct !DILexicalBlock(scope: !5854, file: !5238, line: 433, column: 61)
!5854 = distinct !DILexicalBlock(scope: !5855, file: !5238, line: 432, column: 13)
!5855 = distinct !DILexicalBlock(scope: !5856, file: !5238, line: 409, column: 13)
!5856 = distinct !DILexicalBlock(scope: !5857, file: !5238, line: 406, column: 13)
!5857 = distinct !DILexicalBlock(scope: !5839, file: !5238, line: 404, column: 6)
!5858 = !DILocalVariable(name: "ptr2", scope: !5839, file: !5238, line: 474, type: !104)
!5859 = !DILocalVariable(name: "prev_size", scope: !5860, file: !5238, line: 477, type: !111)
!5860 = distinct !DILexicalBlock(scope: !5861, file: !5238, line: 476, column: 20)
!5861 = distinct !DILexicalBlock(scope: !5839, file: !5238, line: 476, column: 6)
!5862 = !DILocation(line: 0, scope: !5839)
!5863 = !DILocation(line: 382, column: 27, scope: !5839)
!5864 = !DILocation(line: 385, column: 10, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5839, file: !5238, line: 385, column: 6)
!5866 = !DILocation(line: 385, column: 6, scope: !5839)
!5867 = !DILocation(line: 386, column: 10, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5865, file: !5238, line: 385, column: 19)
!5869 = !DILocation(line: 386, column: 3, scope: !5868)
!5870 = !DILocation(line: 388, column: 12, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5839, file: !5238, line: 388, column: 6)
!5872 = !DILocation(line: 388, column: 6, scope: !5839)
!5873 = !DILocation(line: 389, column: 3, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5871, file: !5238, line: 388, column: 18)
!5875 = !DILocation(line: 390, column: 3, scope: !5874)
!5876 = !DILocation(line: 393, column: 2, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5878, file: !5238, line: 393, column: 2)
!5878 = distinct !DILexicalBlock(scope: !5839, file: !5238, line: 393, column: 2)
!5879 = !DILocation(line: 393, column: 2, scope: !5878)
!5880 = !DILocation(line: 393, column: 2, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5877, file: !5238, line: 393, column: 2)
!5882 = !DILocation(line: 395, column: 6, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5839, file: !5238, line: 395, column: 6)
!5884 = !DILocation(line: 395, column: 6, scope: !5839)
!5885 = !DILocation(line: 399, column: 16, scope: !5839)
!5886 = !DILocation(line: 400, column: 17, scope: !5839)
!5887 = !DILocation(line: 401, column: 49, scope: !5839)
!5888 = !DILocation(line: 401, column: 36, scope: !5839)
!5889 = !DILocation(line: 402, column: 52, scope: !5839)
!5890 = !DILocation(line: 402, column: 26, scope: !5839)
!5891 = !DILocation(line: 404, column: 6, scope: !5857)
!5892 = !DILocation(line: 404, column: 12, scope: !5857)
!5893 = !DILocation(line: 406, column: 13, scope: !5856)
!5894 = !DILocation(line: 406, column: 30, scope: !5856)
!5895 = !DILocation(line: 406, column: 13, scope: !5857)
!5896 = !DILocation(line: 409, column: 30, scope: !5855)
!5897 = !DILocation(line: 409, column: 13, scope: !5856)
!5898 = !DILocation(line: 420, column: 24, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5855, file: !5238, line: 409, column: 45)
!5900 = !DILocation(line: 420, column: 3, scope: !5899)
!5901 = !DILocation(line: 421, column: 3, scope: !5899)
!5902 = !DILocation(line: 422, column: 3, scope: !5899)
!5903 = !DILocation(line: 431, column: 3, scope: !5899)
!5904 = !DILocation(line: 432, column: 14, scope: !5854)
!5905 = !DILocation(line: 432, column: 32, scope: !5854)
!5906 = !DILocation(line: 433, column: 26, scope: !5854)
!5907 = !DILocation(line: 433, column: 24, scope: !5854)
!5908 = !DILocation(line: 433, column: 44, scope: !5854)
!5909 = !DILocation(line: 432, column: 13, scope: !5855)
!5910 = !DILocation(line: 435, column: 38, scope: !5853)
!5911 = !DILocation(line: 0, scope: !5853)
!5912 = !DILocation(line: 445, column: 3, scope: !5853)
!5913 = !DILocation(line: 447, column: 20, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5853, file: !5238, line: 447, column: 7)
!5915 = !DILocation(line: 447, column: 18, scope: !5914)
!5916 = !DILocation(line: 447, column: 7, scope: !5853)
!5917 = !DILocation(line: 448, column: 27, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5914, file: !5238, line: 447, column: 39)
!5919 = !DILocation(line: 448, column: 4, scope: !5918)
!5920 = !DILocation(line: 449, column: 4, scope: !5918)
!5921 = !DILocation(line: 450, column: 3, scope: !5918)
!5922 = !DILocation(line: 452, column: 3, scope: !5853)
!5923 = !DILocation(line: 453, column: 3, scope: !5853)
!5924 = !DILocation(line: 474, column: 15, scope: !5839)
!5925 = !DILocation(line: 476, column: 11, scope: !5861)
!5926 = !DILocation(line: 476, column: 6, scope: !5839)
!5927 = !DILocation(line: 477, column: 42, scope: !5860)
!5928 = !DILocation(line: 477, column: 22, scope: !5860)
!5929 = !DILocation(line: 477, column: 60, scope: !5860)
!5930 = !DILocation(line: 0, scope: !5860)
!5931 = !DILocation(line: 479, column: 21, scope: !5860)
!5932 = !DILocation(line: 479, column: 3, scope: !5860)
!5933 = !DILocation(line: 480, column: 3, scope: !5860)
!5934 = !DILocation(line: 481, column: 2, scope: !5860)
!5935 = !DILocation(line: 483, column: 1, scope: !5839)
!5936 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2597, file: !2597, line: 245, type: !5937, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5939)
!5937 = !DISubroutineType(types: !5938)
!5938 = !{!111, !2610, !5383}
!5939 = !{!5940, !5941}
!5940 = !DILocalVariable(name: "h", arg: 1, scope: !5936, file: !2597, line: 245, type: !2610)
!5941 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !5936, file: !2597, line: 245, type: !5383)
!5942 = !DILocation(line: 0, scope: !5936)
!5943 = !DILocation(line: 247, column: 20, scope: !5936)
!5944 = !DILocation(line: 247, column: 33, scope: !5936)
!5945 = !DILocation(line: 247, column: 2, scope: !5936)
!5946 = distinct !DISubprogram(name: "sys_heap_init", scope: !5238, file: !5238, line: 485, type: !5947, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5949)
!5947 = !DISubroutineType(types: !5948)
!5948 = !{null, !5241, !104, !111}
!5949 = !{!5950, !5951, !5952, !5953, !5954, !5955, !5956, !5957, !5958, !5959}
!5950 = !DILocalVariable(name: "heap", arg: 1, scope: !5946, file: !5238, line: 485, type: !5241)
!5951 = !DILocalVariable(name: "mem", arg: 2, scope: !5946, file: !5238, line: 485, type: !104)
!5952 = !DILocalVariable(name: "bytes", arg: 3, scope: !5946, file: !5238, line: 485, type: !111)
!5953 = !DILocalVariable(name: "addr", scope: !5946, file: !5238, line: 502, type: !22)
!5954 = !DILocalVariable(name: "end", scope: !5946, file: !5238, line: 503, type: !22)
!5955 = !DILocalVariable(name: "heap_sz", scope: !5946, file: !5238, line: 504, type: !5383)
!5956 = !DILocalVariable(name: "h", scope: !5946, file: !5238, line: 509, type: !2610)
!5957 = !DILocalVariable(name: "nb_buckets", scope: !5946, file: !5238, line: 520, type: !105)
!5958 = !DILocalVariable(name: "chunk0_size", scope: !5946, file: !5238, line: 521, type: !5383)
!5959 = !DILocalVariable(name: "i", scope: !5960, file: !5238, line: 526, type: !105)
!5960 = distinct !DILexicalBlock(scope: !5946, file: !5238, line: 526, column: 2)
!5961 = !DILocation(line: 0, scope: !5946)
!5962 = !DILocation(line: 491, column: 3, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5964, file: !5238, line: 491, column: 3)
!5964 = distinct !DILexicalBlock(scope: !5965, file: !5238, line: 491, column: 3)
!5965 = distinct !DILexicalBlock(scope: !5966, file: !5238, line: 489, column: 46)
!5966 = distinct !DILexicalBlock(scope: !5946, file: !5238, line: 489, column: 6)
!5967 = !DILocation(line: 491, column: 3, scope: !5964)
!5968 = !DILocation(line: 491, column: 3, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5963, file: !5238, line: 491, column: 3)
!5970 = !DILocation(line: 498, column: 2, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5972, file: !5238, line: 498, column: 2)
!5972 = distinct !DILexicalBlock(scope: !5946, file: !5238, line: 498, column: 2)
!5973 = !DILocation(line: 498, column: 2, scope: !5972)
!5974 = !DILocation(line: 498, column: 2, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5971, file: !5238, line: 498, column: 2)
!5976 = !DILocation(line: 499, column: 8, scope: !5946)
!5977 = !DILocation(line: 502, column: 19, scope: !5946)
!5978 = !DILocation(line: 503, column: 18, scope: !5946)
!5979 = !DILocation(line: 504, column: 27, scope: !5946)
!5980 = !DILocation(line: 504, column: 35, scope: !5946)
!5981 = !DILocation(line: 507, column: 2, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5983, file: !5238, line: 507, column: 2)
!5983 = distinct !DILexicalBlock(scope: !5946, file: !5238, line: 507, column: 2)
!5984 = !DILocation(line: 507, column: 2, scope: !5983)
!5985 = !DILocation(line: 507, column: 2, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5982, file: !5238, line: 507, column: 2)
!5987 = !DILocation(line: 509, column: 21, scope: !5946)
!5988 = !DILocation(line: 510, column: 8, scope: !5946)
!5989 = !DILocation(line: 510, column: 13, scope: !5946)
!5990 = !DILocation(line: 511, column: 5, scope: !5946)
!5991 = !DILocation(line: 511, column: 15, scope: !5946)
!5992 = !DILocation(line: 512, column: 5, scope: !5946)
!5993 = !DILocation(line: 512, column: 19, scope: !5946)
!5994 = !DILocation(line: 520, column: 19, scope: !5946)
!5995 = !DILocation(line: 522, column: 21, scope: !5946)
!5996 = !DILocation(line: 521, column: 56, scope: !5946)
!5997 = !DILocation(line: 521, column: 26, scope: !5946)
!5998 = !DILocation(line: 524, column: 2, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !6000, file: !5238, line: 524, column: 2)
!6000 = distinct !DILexicalBlock(scope: !5946, file: !5238, line: 524, column: 2)
!6001 = !DILocation(line: 524, column: 2, scope: !6000)
!6002 = !DILocation(line: 0, scope: !5960)
!6003 = !DILocation(line: 526, column: 20, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !5960, file: !5238, line: 526, column: 2)
!6005 = !DILocation(line: 526, column: 2, scope: !5960)
!6006 = !DILocation(line: 524, column: 2, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !5999, file: !5238, line: 524, column: 2)
!6008 = !DILocation(line: 531, column: 2, scope: !5946)
!6009 = !DILocation(line: 532, column: 2, scope: !5946)
!6010 = !DILocation(line: 533, column: 2, scope: !5946)
!6011 = !DILocation(line: 536, column: 41, scope: !5946)
!6012 = !DILocation(line: 536, column: 2, scope: !5946)
!6013 = !DILocation(line: 537, column: 2, scope: !5946)
!6014 = !DILocation(line: 540, column: 2, scope: !5946)
!6015 = !DILocation(line: 541, column: 2, scope: !5946)
!6016 = !DILocation(line: 542, column: 2, scope: !5946)
!6017 = !DILocation(line: 544, column: 2, scope: !5946)
!6018 = !DILocation(line: 545, column: 1, scope: !5946)
!6019 = !DILocation(line: 527, column: 17, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !6004, file: !5238, line: 526, column: 39)
!6021 = !DILocation(line: 527, column: 22, scope: !6020)
!6022 = !DILocation(line: 526, column: 35, scope: !6004)
!6023 = distinct !{!6023, !6005, !6024}
!6024 = !DILocation(line: 528, column: 2, scope: !5960)
!6025 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2630, file: !2630, line: 1338, type: !6026, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !6034)
!6026 = !DISubroutineType(types: !6027)
!6027 = !{!105, !4394, !104, !269, !6028, !113}
!6028 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4012, line: 99, baseType: !6029)
!6029 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4012, line: 40, baseType: !6030)
!6030 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2630, baseType: !6031)
!6031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6032)
!6032 = !{!6033}
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6031, file: !2630, baseType: !104, size: 32)
!6034 = !{!6035, !6036, !6037, !6038, !6039, !6040, !6044, !6045, !6046, !6048, !6053, !6096, !6099, !6102, !6103, !6104, !6105, !6106, !6107, !6108, !6111, !6112, !6113, !6117, !6120, !6122, !6125, !6126, !6127, !6132, !6138, !6141, !6145, !6151, !6155, !6158, !6160, !6163}
!6035 = !DILocalVariable(name: "out", arg: 1, scope: !6025, file: !2630, line: 1338, type: !4394)
!6036 = !DILocalVariable(name: "ctx", arg: 2, scope: !6025, file: !2630, line: 1338, type: !104)
!6037 = !DILocalVariable(name: "fp", arg: 3, scope: !6025, file: !2630, line: 1338, type: !269)
!6038 = !DILocalVariable(name: "ap", arg: 4, scope: !6025, file: !2630, line: 1339, type: !6028)
!6039 = !DILocalVariable(name: "flags", arg: 5, scope: !6025, file: !2630, line: 1339, type: !113)
!6040 = !DILocalVariable(name: "buf", scope: !6025, file: !2630, line: 1341, type: !6041)
!6041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 176, elements: !6042)
!6042 = !{!6043}
!6043 = !DISubrange(count: 22)
!6044 = !DILocalVariable(name: "count", scope: !6025, file: !2630, line: 1342, type: !111)
!6045 = !DILocalVariable(name: "sint", scope: !6025, file: !2630, line: 1343, type: !2649)
!6046 = !DILocalVariable(name: "tagged_ap", scope: !6025, file: !2630, line: 1345, type: !6047)
!6047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !492)
!6048 = !DILocalVariable(name: "rc", scope: !6049, file: !2630, line: 1377, type: !105)
!6049 = distinct !DILexicalBlock(scope: !6050, file: !2630, line: 1377, column: 4)
!6050 = distinct !DILexicalBlock(scope: !6051, file: !2630, line: 1376, column: 19)
!6051 = distinct !DILexicalBlock(scope: !6052, file: !2630, line: 1376, column: 7)
!6052 = distinct !DILexicalBlock(scope: !6025, file: !2630, line: 1375, column: 19)
!6053 = !DILocalVariable(name: "state", scope: !6052, file: !2630, line: 1395, type: !6054)
!6054 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6025, file: !2630, line: 1392, size: 192, elements: !6055)
!6055 = !{!6056, !6064}
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6054, file: !2630, line: 1393, baseType: !6057, size: 64)
!6057 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2630, line: 166, size: 64, elements: !6058)
!6058 = !{!6059, !6060, !6061, !6062, !6063}
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !6057, file: !2630, line: 168, baseType: !2649, size: 64)
!6060 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !6057, file: !2630, line: 171, baseType: !2652, size: 64)
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !6057, file: !2630, line: 174, baseType: !426, size: 64)
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !6057, file: !2630, line: 177, baseType: !424, size: 64)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6057, file: !2630, line: 180, baseType: !104, size: 32)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !6054, file: !2630, line: 1394, baseType: !6065, size: 96, offset: 64)
!6065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2630, line: 189, size: 96, elements: !6066)
!6066 = !{!6067, !6068, !6069, !6070, !6071, !6072, !6073, !6074, !6075, !6076, !6077, !6078, !6079, !6080, !6081, !6082, !6083, !6084, !6085, !6086, !6091}
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !6065, file: !2630, line: 191, baseType: !492, size: 1, flags: DIFlagBitField, extraData: i64 0)
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !6065, file: !2630, line: 194, baseType: !492, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !6065, file: !2630, line: 197, baseType: !492, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !6065, file: !2630, line: 200, baseType: !492, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !6065, file: !2630, line: 203, baseType: !492, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !6065, file: !2630, line: 206, baseType: !492, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !6065, file: !2630, line: 209, baseType: !492, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !6065, file: !2630, line: 212, baseType: !492, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !6065, file: !2630, line: 219, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !6065, file: !2630, line: 222, baseType: !492, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !6065, file: !2630, line: 229, baseType: !492, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !6065, file: !2630, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !6065, file: !2630, line: 238, baseType: !492, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !6065, file: !2630, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !6065, file: !2630, line: 244, baseType: !492, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !6065, file: !2630, line: 247, baseType: !492, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !6065, file: !2630, line: 252, baseType: !492, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !6065, file: !2630, line: 257, baseType: !492, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !6065, file: !2630, line: 260, baseType: !170, size: 8, offset: 24)
!6086 = !DIDerivedType(tag: DW_TAG_member, scope: !6065, file: !2630, line: 262, baseType: !6087, size: 32, offset: 32)
!6087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6065, file: !2630, line: 262, size: 32, elements: !6088)
!6088 = !{!6089, !6090}
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !6087, file: !2630, line: 267, baseType: !105, size: 32)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !6087, file: !2630, line: 289, baseType: !105, size: 32)
!6091 = !DIDerivedType(tag: DW_TAG_member, scope: !6065, file: !2630, line: 292, baseType: !6092, size: 32, offset: 64)
!6092 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6065, file: !2630, line: 292, size: 32, elements: !6093)
!6093 = !{!6094, !6095}
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !6092, file: !2630, line: 297, baseType: !105, size: 32)
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !6092, file: !2630, line: 306, baseType: !105, size: 32)
!6096 = !DILocalVariable(name: "conv", scope: !6052, file: !2630, line: 1400, type: !6097)
!6097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6098)
!6098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6065, size: 32)
!6099 = !DILocalVariable(name: "value", scope: !6052, file: !2630, line: 1401, type: !6100)
!6100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6101)
!6101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6057, size: 32)
!6102 = !DILocalVariable(name: "sp", scope: !6052, file: !2630, line: 1402, type: !269)
!6103 = !DILocalVariable(name: "width", scope: !6052, file: !2630, line: 1403, type: !105)
!6104 = !DILocalVariable(name: "precision", scope: !6052, file: !2630, line: 1404, type: !105)
!6105 = !DILocalVariable(name: "bps", scope: !6052, file: !2630, line: 1405, type: !269)
!6106 = !DILocalVariable(name: "bpe", scope: !6052, file: !2630, line: 1406, type: !269)
!6107 = !DILocalVariable(name: "sign", scope: !6052, file: !2630, line: 1407, type: !103)
!6108 = !DILocalVariable(name: "arg", scope: !6109, file: !2630, line: 1432, type: !105)
!6109 = distinct !DILexicalBlock(scope: !6110, file: !2630, line: 1431, column: 24)
!6110 = distinct !DILexicalBlock(scope: !6052, file: !2630, line: 1431, column: 7)
!6111 = !DILocalVariable(name: "specifier_cat", scope: !6052, file: !2630, line: 1468, type: !2629)
!6112 = !DILocalVariable(name: "length_mod", scope: !6052, file: !2630, line: 1470, type: !2637)
!6113 = !DILocalVariable(name: "rc", scope: !6114, file: !2630, line: 1575, type: !105)
!6114 = distinct !DILexicalBlock(scope: !6115, file: !2630, line: 1575, column: 4)
!6115 = distinct !DILexicalBlock(scope: !6116, file: !2630, line: 1574, column: 43)
!6116 = distinct !DILexicalBlock(scope: !6052, file: !2630, line: 1574, column: 7)
!6117 = !DILocalVariable(name: "rc", scope: !6118, file: !2630, line: 1584, type: !105)
!6118 = distinct !DILexicalBlock(scope: !6119, file: !2630, line: 1584, column: 4)
!6119 = distinct !DILexicalBlock(scope: !6052, file: !2630, line: 1582, column: 28)
!6120 = !DILocalVariable(name: "len", scope: !6121, file: !2630, line: 1589, type: !111)
!6121 = distinct !DILexicalBlock(scope: !6119, file: !2630, line: 1586, column: 13)
!6122 = !DILocalVariable(name: "len", scope: !6123, file: !2630, line: 1641, type: !111)
!6123 = distinct !DILexicalBlock(scope: !6124, file: !2630, line: 1640, column: 24)
!6124 = distinct !DILexicalBlock(scope: !6119, file: !2630, line: 1640, column: 8)
!6125 = !DILocalVariable(name: "nj_len", scope: !6052, file: !2630, line: 1722, type: !111)
!6126 = !DILocalVariable(name: "pad_len", scope: !6052, file: !2630, line: 1723, type: !105)
!6127 = !DILocalVariable(name: "pad", scope: !6128, file: !2630, line: 1751, type: !103)
!6128 = distinct !DILexicalBlock(scope: !6129, file: !2630, line: 1750, column: 26)
!6129 = distinct !DILexicalBlock(scope: !6130, file: !2630, line: 1750, column: 8)
!6130 = distinct !DILexicalBlock(scope: !6131, file: !2630, line: 1747, column: 18)
!6131 = distinct !DILexicalBlock(scope: !6052, file: !2630, line: 1747, column: 7)
!6132 = !DILocalVariable(name: "rc", scope: !6133, file: !2630, line: 1758, type: !105)
!6133 = distinct !DILexicalBlock(scope: !6134, file: !2630, line: 1758, column: 7)
!6134 = distinct !DILexicalBlock(scope: !6135, file: !2630, line: 1757, column: 21)
!6135 = distinct !DILexicalBlock(scope: !6136, file: !2630, line: 1757, column: 10)
!6136 = distinct !DILexicalBlock(scope: !6137, file: !2630, line: 1756, column: 26)
!6137 = distinct !DILexicalBlock(scope: !6128, file: !2630, line: 1756, column: 9)
!6138 = !DILocalVariable(name: "rc", scope: !6139, file: !2630, line: 1765, type: !105)
!6139 = distinct !DILexicalBlock(scope: !6140, file: !2630, line: 1765, column: 6)
!6140 = distinct !DILexicalBlock(scope: !6128, file: !2630, line: 1764, column: 25)
!6141 = !DILocalVariable(name: "rc", scope: !6142, file: !2630, line: 1774, type: !105)
!6142 = distinct !DILexicalBlock(scope: !6143, file: !2630, line: 1774, column: 4)
!6143 = distinct !DILexicalBlock(scope: !6144, file: !2630, line: 1773, column: 18)
!6144 = distinct !DILexicalBlock(scope: !6052, file: !2630, line: 1773, column: 7)
!6145 = !DILocalVariable(name: "rc", scope: !6146, file: !2630, line: 1819, type: !105)
!6146 = distinct !DILexicalBlock(scope: !6147, file: !2630, line: 1819, column: 5)
!6147 = distinct !DILexicalBlock(scope: !6148, file: !2630, line: 1818, column: 44)
!6148 = distinct !DILexicalBlock(scope: !6149, file: !2630, line: 1818, column: 8)
!6149 = distinct !DILexicalBlock(scope: !6150, file: !2630, line: 1817, column: 10)
!6150 = distinct !DILexicalBlock(scope: !6052, file: !2630, line: 1777, column: 7)
!6151 = !DILocalVariable(name: "rc", scope: !6152, file: !2630, line: 1823, type: !105)
!6152 = distinct !DILexicalBlock(scope: !6153, file: !2630, line: 1823, column: 5)
!6153 = distinct !DILexicalBlock(scope: !6154, file: !2630, line: 1822, column: 26)
!6154 = distinct !DILexicalBlock(scope: !6149, file: !2630, line: 1822, column: 8)
!6155 = !DILocalVariable(name: "rc", scope: !6156, file: !2630, line: 1828, type: !105)
!6156 = distinct !DILexicalBlock(scope: !6157, file: !2630, line: 1828, column: 5)
!6157 = distinct !DILexicalBlock(scope: !6149, file: !2630, line: 1827, column: 26)
!6158 = !DILocalVariable(name: "rc", scope: !6159, file: !2630, line: 1831, type: !105)
!6159 = distinct !DILexicalBlock(scope: !6149, file: !2630, line: 1831, column: 4)
!6160 = !DILocalVariable(name: "rc", scope: !6161, file: !2630, line: 1836, type: !105)
!6161 = distinct !DILexicalBlock(scope: !6162, file: !2630, line: 1836, column: 4)
!6162 = distinct !DILexicalBlock(scope: !6052, file: !2630, line: 1835, column: 21)
!6163 = !DILabel(scope: !6119, name: "prec_int_pad0", file: !2630, line: 1634)
!6164 = !DILocation(line: 0, scope: !6025)
!6165 = !DILocation(line: 1341, column: 2, scope: !6025)
!6166 = !DILocation(line: 1341, column: 7, scope: !6025)
!6167 = !DILocation(line: 1375, column: 2, scope: !6025)
!6168 = !DILocation(line: 1342, column: 9, scope: !6025)
!6169 = !DILocation(line: 1375, column: 9, scope: !6025)
!6170 = !DILocation(line: 1377, column: 4, scope: !6049)
!6171 = !DILocation(line: 0, scope: !6049)
!6172 = !DILocation(line: 1377, column: 4, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6049, file: !2630, line: 1377, column: 4)
!6174 = distinct !{!6174, !6167, !6175}
!6175 = !DILocation(line: 1839, column: 2, scope: !6025)
!6176 = !DILocation(line: 1392, column: 3, scope: !6052)
!6177 = !DILocation(line: 1395, column: 5, scope: !6052)
!6178 = !DILocation(line: 0, scope: !6052)
!6179 = !DILocation(line: 1409, column: 8, scope: !6052)
!6180 = !DILocation(line: 1414, column: 13, scope: !6181)
!6181 = distinct !DILexicalBlock(scope: !6052, file: !2630, line: 1414, column: 7)
!6182 = !DILocation(line: 1414, column: 7, scope: !6052)
!6183 = !DILocation(line: 1415, column: 12, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6181, file: !2630, line: 1414, column: 25)
!6185 = !DILocation(line: 1417, column: 14, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6184, file: !2630, line: 1417, column: 8)
!6187 = !DILocation(line: 1417, column: 8, scope: !6184)
!6188 = !DILocation(line: 1418, column: 21, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6186, file: !2630, line: 1417, column: 19)
!6190 = !DILocation(line: 1419, column: 13, scope: !6189)
!6191 = !DILocation(line: 1420, column: 4, scope: !6189)
!6192 = !DILocation(line: 1421, column: 20, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6181, file: !2630, line: 1421, column: 14)
!6194 = !DILocation(line: 1421, column: 14, scope: !6181)
!6195 = !DILocation(line: 1431, column: 13, scope: !6110)
!6196 = !DILocation(line: 1431, column: 7, scope: !6052)
!6197 = !DILocation(line: 1432, column: 14, scope: !6109)
!6198 = !DILocation(line: 0, scope: !6109)
!6199 = !DILocation(line: 1434, column: 12, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6109, file: !2630, line: 1434, column: 8)
!6201 = !DILocation(line: 1434, column: 8, scope: !6109)
!6202 = !DILocation(line: 1435, column: 24, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6200, file: !2630, line: 1434, column: 17)
!6204 = !DILocation(line: 1436, column: 4, scope: !6203)
!6205 = !DILocation(line: 1439, column: 20, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6110, file: !2630, line: 1439, column: 14)
!6207 = !DILocation(line: 1439, column: 14, scope: !6110)
!6208 = !DILocation(line: 1469, column: 37, scope: !6052)
!6209 = !DILocation(line: 1448, column: 20, scope: !6052)
!6210 = !DILocation(line: 1449, column: 22, scope: !6052)
!6211 = !DILocation(line: 1471, column: 34, scope: !6052)
!6212 = !DILocation(line: 1478, column: 7, scope: !6052)
!6213 = !DILocation(line: 1479, column: 4, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !6215, file: !2630, line: 1478, column: 40)
!6215 = distinct !DILexicalBlock(scope: !6052, file: !2630, line: 1478, column: 7)
!6216 = !DILocation(line: 1484, column: 19, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6214, file: !2630, line: 1479, column: 24)
!6218 = !DILocation(line: 1484, column: 17, scope: !6217)
!6219 = !DILocation(line: 1485, column: 5, scope: !6217)
!6220 = !DILocation(line: 1492, column: 20, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6222, file: !2630, line: 1491, column: 12)
!6222 = distinct !DILexicalBlock(scope: !6217, file: !2630, line: 1487, column: 9)
!6223 = !DILocation(line: 1492, column: 18, scope: !6221)
!6224 = !DILocation(line: 1494, column: 5, scope: !6217)
!6225 = !DILocation(line: 1497, column: 23, scope: !6217)
!6226 = !DILocation(line: 1496, column: 17, scope: !6217)
!6227 = !DILocation(line: 1498, column: 5, scope: !6217)
!6228 = !DILocation(line: 1501, column: 23, scope: !6217)
!6229 = !DILocation(line: 1500, column: 17, scope: !6217)
!6230 = !DILocation(line: 1502, column: 5, scope: !6217)
!6231 = !DILocation(line: 1513, column: 23, scope: !6217)
!6232 = !DILocation(line: 1513, column: 6, scope: !6217)
!6233 = !DILocation(line: 1512, column: 17, scope: !6217)
!6234 = !DILocation(line: 1514, column: 5, scope: !6217)
!6235 = !DILocation(line: 0, scope: !6217)
!6236 = !DILocation(line: 1516, column: 8, scope: !6214)
!6237 = !DILocation(line: 1517, column: 19, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6239, file: !2630, line: 1516, column: 33)
!6239 = distinct !DILexicalBlock(scope: !6214, file: !2630, line: 1516, column: 8)
!6240 = !DILocation(line: 1517, column: 17, scope: !6238)
!6241 = !DILocation(line: 1518, column: 4, scope: !6238)
!6242 = !DILocation(line: 1519, column: 19, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6244, file: !2630, line: 1518, column: 39)
!6244 = distinct !DILexicalBlock(scope: !6239, file: !2630, line: 1518, column: 15)
!6245 = !DILocation(line: 1519, column: 17, scope: !6243)
!6246 = !DILocation(line: 1520, column: 4, scope: !6243)
!6247 = !DILocation(line: 1522, column: 4, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6249, file: !2630, line: 1521, column: 47)
!6249 = distinct !DILexicalBlock(scope: !6215, file: !2630, line: 1521, column: 14)
!6250 = !DILocation(line: 1527, column: 19, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !6248, file: !2630, line: 1522, column: 24)
!6252 = !DILocation(line: 1527, column: 17, scope: !6251)
!6253 = !DILocation(line: 1528, column: 5, scope: !6251)
!6254 = !DILocation(line: 0, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6251, file: !2630, line: 1530, column: 9)
!6256 = !DILocation(line: 1540, column: 23, scope: !6251)
!6257 = !DILocation(line: 1539, column: 17, scope: !6251)
!6258 = !DILocation(line: 1542, column: 5, scope: !6251)
!6259 = !DILocation(line: 1545, column: 23, scope: !6251)
!6260 = !DILocation(line: 1544, column: 17, scope: !6251)
!6261 = !DILocation(line: 1547, column: 5, scope: !6251)
!6262 = !DILocation(line: 1551, column: 23, scope: !6251)
!6263 = !DILocation(line: 1551, column: 6, scope: !6251)
!6264 = !DILocation(line: 1550, column: 17, scope: !6251)
!6265 = !DILocation(line: 1552, column: 5, scope: !6251)
!6266 = !DILocation(line: 0, scope: !6251)
!6267 = !DILocation(line: 1554, column: 8, scope: !6248)
!6268 = !DILocation(line: 1555, column: 19, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6270, file: !2630, line: 1554, column: 33)
!6270 = distinct !DILexicalBlock(scope: !6248, file: !2630, line: 1554, column: 8)
!6271 = !DILocation(line: 1555, column: 17, scope: !6269)
!6272 = !DILocation(line: 1556, column: 4, scope: !6269)
!6273 = !DILocation(line: 1557, column: 19, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6275, file: !2630, line: 1556, column: 39)
!6275 = distinct !DILexicalBlock(scope: !6270, file: !2630, line: 1556, column: 15)
!6276 = !DILocation(line: 1557, column: 17, scope: !6274)
!6277 = !DILocation(line: 1558, column: 4, scope: !6274)
!6278 = !DILocation(line: 0, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6280, file: !2630, line: 1560, column: 8)
!6280 = distinct !DILexicalBlock(scope: !6281, file: !2630, line: 1559, column: 45)
!6281 = distinct !DILexicalBlock(scope: !6249, file: !2630, line: 1559, column: 14)
!6282 = !DILocation(line: 1566, column: 17, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6284, file: !2630, line: 1565, column: 46)
!6284 = distinct !DILexicalBlock(scope: !6281, file: !2630, line: 1565, column: 14)
!6285 = !DILocation(line: 1566, column: 15, scope: !6283)
!6286 = !DILocation(line: 1567, column: 3, scope: !6283)
!6287 = !DILocation(line: 1574, column: 21, scope: !6116)
!6288 = !DILocation(line: 1575, column: 4, scope: !6114)
!6289 = !DILocation(line: 0, scope: !6114)
!6290 = !DILocation(line: 1575, column: 4, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6114, file: !2630, line: 1575, column: 4)
!6292 = !DILocation(line: 1582, column: 17, scope: !6052)
!6293 = !DILocation(line: 1582, column: 3, scope: !6052)
!6294 = !DILocation(line: 1584, column: 4, scope: !6118)
!6295 = !DILocation(line: 0, scope: !6118)
!6296 = !DILocation(line: 1584, column: 4, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6118, file: !2630, line: 1584, column: 4)
!6298 = !DILocation(line: 1587, column: 31, scope: !6121)
!6299 = !DILocation(line: 1591, column: 18, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6121, file: !2630, line: 1591, column: 8)
!6301 = !DILocation(line: 1591, column: 8, scope: !6121)
!6302 = !DILocation(line: 1592, column: 11, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6300, file: !2630, line: 1591, column: 24)
!6304 = !DILocation(line: 0, scope: !6121)
!6305 = !DILocation(line: 1593, column: 4, scope: !6303)
!6306 = !DILocation(line: 1594, column: 11, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6300, file: !2630, line: 1593, column: 11)
!6308 = !DILocation(line: 1604, column: 51, scope: !6119)
!6309 = !DILocation(line: 1604, column: 13, scope: !6119)
!6310 = !DILocation(line: 1604, column: 11, scope: !6119)
!6311 = !DILocation(line: 1606, column: 4, scope: !6119)
!6312 = !DILocation(line: 1609, column: 14, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6119, file: !2630, line: 1609, column: 8)
!6314 = !DILocation(line: 1609, column: 8, scope: !6119)
!6315 = !DILocation(line: 1619, column: 18, scope: !6119)
!6316 = !DILocation(line: 1620, column: 13, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6119, file: !2630, line: 1620, column: 8)
!6318 = !DILocation(line: 1620, column: 8, scope: !6119)
!6319 = !DILocation(line: 1622, column: 36, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6317, file: !2630, line: 1620, column: 18)
!6321 = !DILocation(line: 1622, column: 17, scope: !6320)
!6322 = !DILocation(line: 1623, column: 4, scope: !6320)
!6323 = !DILocation(line: 1632, column: 29, scope: !6119)
!6324 = !DILocation(line: 1632, column: 10, scope: !6119)
!6325 = !DILocation(line: 1632, column: 4, scope: !6119)
!6326 = !DILocation(line: 1407, column: 8, scope: !6052)
!6327 = !DILocation(line: 0, scope: !6119)
!6328 = !DILocation(line: 1634, column: 3, scope: !6119)
!6329 = !DILocation(line: 1640, column: 18, scope: !6124)
!6330 = !DILocation(line: 1640, column: 8, scope: !6119)
!6331 = !DILocation(line: 1729, column: 13, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6052, file: !2630, line: 1729, column: 7)
!6333 = !DILocation(line: 1641, column: 22, scope: !6123)
!6334 = !DILocation(line: 0, scope: !6123)
!6335 = !DILocation(line: 1646, column: 21, scope: !6123)
!6336 = !DILocation(line: 1649, column: 13, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6123, file: !2630, line: 1649, column: 9)
!6338 = !DILocation(line: 1649, column: 9, scope: !6123)
!6339 = !DILocation(line: 1650, column: 35, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6337, file: !2630, line: 1649, column: 34)
!6341 = !DILocation(line: 1650, column: 23, scope: !6340)
!6342 = !DILocation(line: 1651, column: 5, scope: !6340)
!6343 = !DILocation(line: 1660, column: 15, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6119, file: !2630, line: 1660, column: 8)
!6345 = !DILocation(line: 1660, column: 19, scope: !6344)
!6346 = !DILocation(line: 1660, column: 8, scope: !6119)
!6347 = !DILocation(line: 1661, column: 23, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6344, file: !2630, line: 1660, column: 28)
!6349 = !DILocation(line: 1661, column: 11, scope: !6348)
!6350 = !DILocation(line: 1665, column: 22, scope: !6348)
!6351 = !DILocation(line: 1666, column: 21, scope: !6348)
!6352 = !DILocation(line: 1668, column: 5, scope: !6348)
!6353 = !DILocation(line: 1677, column: 30, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6355, file: !2630, line: 1676, column: 49)
!6355 = distinct !DILexicalBlock(scope: !6119, file: !2630, line: 1676, column: 8)
!6356 = !DILocation(line: 1677, column: 5, scope: !6354)
!6357 = !DILocation(line: 1680, column: 4, scope: !6119)
!6358 = !DILocation(line: 0, scope: !6300)
!6359 = !DILocation(line: 1597, column: 14, scope: !6121)
!6360 = !DILocation(line: 1699, column: 11, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6052, file: !2630, line: 1699, column: 7)
!6362 = !DILocation(line: 1699, column: 7, scope: !6052)
!6363 = !DILocation(line: 1725, column: 7, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6052, file: !2630, line: 1725, column: 7)
!6365 = !DILocation(line: 1725, column: 12, scope: !6364)
!6366 = !DILocation(line: 1747, column: 13, scope: !6131)
!6367 = !DILocation(line: 1747, column: 7, scope: !6052)
!6368 = !DILocation(line: 1722, column: 24, scope: !6052)
!6369 = !DILocation(line: 1725, column: 7, scope: !6052)
!6370 = !DILocation(line: 1729, column: 7, scope: !6052)
!6371 = !DILocation(line: 1736, column: 13, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6052, file: !2630, line: 1736, column: 7)
!6373 = !DILocation(line: 1735, column: 19, scope: !6052)
!6374 = !DILocation(line: 1736, column: 7, scope: !6052)
!6375 = !DILocation(line: 1748, column: 10, scope: !6130)
!6376 = !DILocation(line: 1750, column: 15, scope: !6129)
!6377 = !DILocation(line: 1750, column: 8, scope: !6130)
!6378 = !DILocation(line: 0, scope: !6128)
!6379 = !DILocation(line: 1756, column: 15, scope: !6137)
!6380 = !DILocation(line: 1756, column: 9, scope: !6128)
!6381 = !DILocation(line: 1758, column: 7, scope: !6133)
!6382 = !DILocation(line: 0, scope: !6133)
!6383 = !DILocation(line: 1758, column: 7, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6133, file: !2630, line: 1758, column: 7)
!6385 = !DILocation(line: 1764, column: 5, scope: !6128)
!6386 = !DILocation(line: 0, scope: !6130)
!6387 = !DILocation(line: 1764, column: 20, scope: !6128)
!6388 = !DILocation(line: 1764, column: 17, scope: !6128)
!6389 = !DILocation(line: 1765, column: 6, scope: !6139)
!6390 = !DILocation(line: 0, scope: !6139)
!6391 = !DILocation(line: 1765, column: 6, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6139, file: !2630, line: 1765, column: 6)
!6393 = distinct !{!6393, !6385, !6394}
!6394 = !DILocation(line: 1766, column: 5, scope: !6128)
!6395 = !DILocation(line: 1773, column: 12, scope: !6144)
!6396 = !DILocation(line: 1773, column: 7, scope: !6052)
!6397 = !DILocation(line: 1773, column: 7, scope: !6144)
!6398 = !DILocation(line: 1774, column: 4, scope: !6142)
!6399 = !DILocation(line: 0, scope: !6142)
!6400 = !DILocation(line: 1774, column: 4, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6142, file: !2630, line: 1774, column: 4)
!6402 = !DILocation(line: 1818, column: 8, scope: !6148)
!6403 = !DILocation(line: 1818, column: 27, scope: !6148)
!6404 = !DILocation(line: 1818, column: 25, scope: !6148)
!6405 = !DILocation(line: 1818, column: 8, scope: !6149)
!6406 = !DILocation(line: 1819, column: 5, scope: !6146)
!6407 = !DILocation(line: 0, scope: !6146)
!6408 = !DILocation(line: 1819, column: 5, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6146, file: !2630, line: 1819, column: 5)
!6410 = !DILocation(line: 1822, column: 14, scope: !6154)
!6411 = !DILocation(line: 1822, column: 8, scope: !6149)
!6412 = !DILocation(line: 1823, column: 5, scope: !6152)
!6413 = !DILocation(line: 0, scope: !6152)
!6414 = !DILocation(line: 1823, column: 5, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6152, file: !2630, line: 1823, column: 5)
!6416 = !DILocation(line: 1826, column: 20, scope: !6149)
!6417 = !DILocation(line: 1827, column: 4, scope: !6149)
!6418 = !DILocation(line: 0, scope: !6149)
!6419 = !DILocation(line: 1827, column: 21, scope: !6149)
!6420 = !DILocation(line: 1827, column: 18, scope: !6149)
!6421 = !DILocation(line: 1828, column: 5, scope: !6156)
!6422 = !DILocation(line: 0, scope: !6156)
!6423 = !DILocation(line: 1828, column: 5, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6156, file: !2630, line: 1828, column: 5)
!6425 = distinct !{!6425, !6417, !6426}
!6426 = !DILocation(line: 1829, column: 4, scope: !6149)
!6427 = !DILocation(line: 1831, column: 4, scope: !6159)
!6428 = !DILocation(line: 0, scope: !6159)
!6429 = !DILocation(line: 1831, column: 4, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6159, file: !2630, line: 1831, column: 4)
!6431 = !DILocation(line: 1835, column: 16, scope: !6052)
!6432 = !DILocation(line: 1835, column: 3, scope: !6052)
!6433 = !DILocation(line: 1836, column: 4, scope: !6161)
!6434 = !DILocation(line: 0, scope: !6161)
!6435 = !DILocation(line: 1836, column: 4, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6161, file: !2630, line: 1836, column: 4)
!6437 = !DILocation(line: 1837, column: 4, scope: !6162)
!6438 = distinct !{!6438, !6432, !6439}
!6439 = !DILocation(line: 1838, column: 3, scope: !6052)
!6440 = !DILocation(line: 1844, column: 1, scope: !6025)
!6441 = distinct !DISubprogram(name: "extract_conversion", scope: !2630, file: !2630, line: 642, type: !6442, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !6444)
!6442 = !DISubroutineType(types: !6443)
!6443 = !{!269, !6098, !269}
!6444 = !{!6445, !6446}
!6445 = !DILocalVariable(name: "conv", arg: 1, scope: !6441, file: !2630, line: 642, type: !6098)
!6446 = !DILocalVariable(name: "sp", arg: 2, scope: !6441, file: !2630, line: 643, type: !269)
!6447 = !DILocation(line: 0, scope: !6441)
!6448 = !DILocation(line: 645, column: 10, scope: !6441)
!6449 = !DILocation(line: 653, column: 2, scope: !6441)
!6450 = !DILocation(line: 654, column: 6, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6441, file: !2630, line: 654, column: 6)
!6452 = !DILocation(line: 654, column: 10, scope: !6451)
!6453 = !DILocation(line: 654, column: 6, scope: !6441)
!6454 = !DILocation(line: 655, column: 24, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6451, file: !2630, line: 654, column: 18)
!6456 = !DILocation(line: 655, column: 19, scope: !6455)
!6457 = !DILocation(line: 656, column: 3, scope: !6455)
!6458 = !DILocation(line: 659, column: 7, scope: !6441)
!6459 = !DILocation(line: 660, column: 7, scope: !6441)
!6460 = !DILocation(line: 661, column: 7, scope: !6441)
!6461 = !DILocation(line: 662, column: 7, scope: !6441)
!6462 = !DILocation(line: 663, column: 7, scope: !6441)
!6463 = !DILocation(line: 665, column: 2, scope: !6441)
!6464 = !DILocation(line: 666, column: 1, scope: !6441)
!6465 = distinct !DISubprogram(name: "outs", scope: !2630, file: !2630, line: 1319, type: !6466, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !6468)
!6466 = !DISubroutineType(types: !6467)
!6467 = !{!105, !4394, !104, !269, !269}
!6468 = !{!6469, !6470, !6471, !6472, !6473, !6474}
!6469 = !DILocalVariable(name: "out", arg: 1, scope: !6465, file: !2630, line: 1319, type: !4394)
!6470 = !DILocalVariable(name: "ctx", arg: 2, scope: !6465, file: !2630, line: 1320, type: !104)
!6471 = !DILocalVariable(name: "sp", arg: 3, scope: !6465, file: !2630, line: 1321, type: !269)
!6472 = !DILocalVariable(name: "ep", arg: 4, scope: !6465, file: !2630, line: 1322, type: !269)
!6473 = !DILocalVariable(name: "count", scope: !6465, file: !2630, line: 1324, type: !111)
!6474 = !DILocalVariable(name: "rc", scope: !6475, file: !2630, line: 1327, type: !105)
!6475 = distinct !DILexicalBlock(scope: !6465, file: !2630, line: 1326, column: 45)
!6476 = !DILocation(line: 0, scope: !6465)
!6477 = !DILocation(line: 1326, column: 2, scope: !6465)
!6478 = !DILocation(line: 1324, column: 9, scope: !6465)
!6479 = !DILocation(line: 1326, column: 13, scope: !6465)
!6480 = !DILocation(line: 1326, column: 19, scope: !6465)
!6481 = !DILocation(line: 1327, column: 21, scope: !6475)
!6482 = !DILocation(line: 1326, column: 36, scope: !6465)
!6483 = !DILocation(line: 1326, column: 39, scope: !6465)
!6484 = !DILocation(line: 1327, column: 24, scope: !6475)
!6485 = !DILocation(line: 1327, column: 16, scope: !6475)
!6486 = !DILocation(line: 1327, column: 12, scope: !6475)
!6487 = !DILocation(line: 0, scope: !6475)
!6488 = !DILocation(line: 1329, column: 10, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6475, file: !2630, line: 1329, column: 7)
!6490 = !DILocation(line: 1329, column: 7, scope: !6475)
!6491 = distinct !{!6491, !6477, !6492}
!6492 = !DILocation(line: 1333, column: 2, scope: !6465)
!6493 = !DILocation(line: 1336, column: 1, scope: !6465)
!6494 = distinct !DISubprogram(name: "encode_uint", scope: !2630, file: !2630, line: 788, type: !6495, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !6497)
!6495 = !DISubroutineType(types: !6496)
!6496 = !{!102, !2652, !6098, !102, !269}
!6497 = !{!6498, !6499, !6500, !6501, !6502, !6503, !6505, !6506}
!6498 = !DILocalVariable(name: "value", arg: 1, scope: !6494, file: !2630, line: 788, type: !2652)
!6499 = !DILocalVariable(name: "conv", arg: 2, scope: !6494, file: !2630, line: 789, type: !6098)
!6500 = !DILocalVariable(name: "bps", arg: 3, scope: !6494, file: !2630, line: 790, type: !102)
!6501 = !DILocalVariable(name: "bpe", arg: 4, scope: !6494, file: !2630, line: 791, type: !269)
!6502 = !DILocalVariable(name: "upcase", scope: !6494, file: !2630, line: 793, type: !492)
!6503 = !DILocalVariable(name: "radix", scope: !6494, file: !2630, line: 794, type: !6504)
!6504 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6505 = !DILocalVariable(name: "bp", scope: !6494, file: !2630, line: 795, type: !102)
!6506 = !DILocalVariable(name: "lsv", scope: !6507, file: !2630, line: 798, type: !32)
!6507 = distinct !DILexicalBlock(scope: !6494, file: !2630, line: 797, column: 5)
!6508 = !DILocation(line: 0, scope: !6494)
!6509 = !DILocation(line: 793, column: 35, scope: !6494)
!6510 = !DILocation(line: 793, column: 24, scope: !6494)
!6511 = !DILocation(line: 793, column: 16, scope: !6494)
!6512 = !DILocation(line: 794, column: 29, scope: !6494)
!6513 = !DILocation(line: 795, column: 24, scope: !6494)
!6514 = !DILocation(line: 795, column: 17, scope: !6494)
!6515 = !DILocation(line: 797, column: 2, scope: !6494)
!6516 = !DILocation(line: 802, column: 9, scope: !6507)
!6517 = !DILocation(line: 798, column: 22, scope: !6507)
!6518 = !DILocation(line: 0, scope: !6507)
!6519 = !DILocation(line: 800, column: 16, scope: !6507)
!6520 = !DILocation(line: 800, column: 11, scope: !6507)
!6521 = !DILocation(line: 800, column: 4, scope: !6507)
!6522 = !DILocation(line: 800, column: 9, scope: !6507)
!6523 = !DILocation(line: 803, column: 18, scope: !6494)
!6524 = !DILocation(line: 803, column: 24, scope: !6494)
!6525 = !DILocation(line: 803, column: 2, scope: !6507)
!6526 = distinct !{!6526, !6515, !6527}
!6527 = !DILocation(line: 803, column: 37, scope: !6494)
!6528 = !DILocation(line: 808, column: 12, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6494, file: !2630, line: 808, column: 6)
!6530 = !DILocation(line: 808, column: 6, scope: !6494)
!6531 = !DILocation(line: 809, column: 7, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6529, file: !2630, line: 808, column: 23)
!6533 = !DILocation(line: 813, column: 3, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6535, file: !2630, line: 811, column: 27)
!6535 = distinct !DILexicalBlock(scope: !6536, file: !2630, line: 811, column: 14)
!6536 = distinct !DILexicalBlock(scope: !6532, file: !2630, line: 809, column: 7)
!6537 = !DILocation(line: 0, scope: !6536)
!6538 = !DILocation(line: 818, column: 2, scope: !6494)
!6539 = distinct !DISubprogram(name: "store_count", scope: !2630, file: !2630, line: 1280, type: !6540, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !6544)
!6540 = !DISubroutineType(types: !6541)
!6541 = !{null, !6542, !104, !105}
!6542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6543, size: 32)
!6543 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6065)
!6544 = !{!6545, !6546, !6547}
!6545 = !DILocalVariable(name: "conv", arg: 1, scope: !6539, file: !2630, line: 1280, type: !6542)
!6546 = !DILocalVariable(name: "dp", arg: 2, scope: !6539, file: !2630, line: 1281, type: !104)
!6547 = !DILocalVariable(name: "count", arg: 3, scope: !6539, file: !2630, line: 1282, type: !105)
!6548 = !DILocation(line: 0, scope: !6539)
!6549 = !DILocation(line: 1284, column: 38, scope: !6539)
!6550 = !DILocation(line: 1284, column: 2, scope: !6539)
!6551 = !DILocation(line: 1286, column: 4, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6539, file: !2630, line: 1284, column: 50)
!6553 = !DILocation(line: 1286, column: 14, scope: !6552)
!6554 = !DILocation(line: 1287, column: 3, scope: !6552)
!6555 = !DILocation(line: 1289, column: 24, scope: !6552)
!6556 = !DILocation(line: 1289, column: 22, scope: !6552)
!6557 = !DILocation(line: 1290, column: 3, scope: !6552)
!6558 = !DILocation(line: 1292, column: 18, scope: !6552)
!6559 = !DILocation(line: 1292, column: 4, scope: !6552)
!6560 = !DILocation(line: 1292, column: 16, scope: !6552)
!6561 = !DILocation(line: 1293, column: 3, scope: !6552)
!6562 = !DILocation(line: 1295, column: 4, scope: !6552)
!6563 = !DILocation(line: 1295, column: 15, scope: !6552)
!6564 = !DILocation(line: 1296, column: 3, scope: !6552)
!6565 = !DILocation(line: 1298, column: 22, scope: !6552)
!6566 = !DILocation(line: 1298, column: 4, scope: !6552)
!6567 = !DILocation(line: 1298, column: 20, scope: !6552)
!6568 = !DILocation(line: 1299, column: 3, scope: !6552)
!6569 = !DILocation(line: 1301, column: 21, scope: !6552)
!6570 = !DILocation(line: 1301, column: 4, scope: !6552)
!6571 = !DILocation(line: 1301, column: 19, scope: !6552)
!6572 = !DILocation(line: 1302, column: 3, scope: !6552)
!6573 = !DILocation(line: 1304, column: 4, scope: !6552)
!6574 = !DILocation(line: 1304, column: 17, scope: !6552)
!6575 = !DILocation(line: 1305, column: 3, scope: !6552)
!6576 = !DILocation(line: 1307, column: 4, scope: !6552)
!6577 = !DILocation(line: 1307, column: 20, scope: !6552)
!6578 = !DILocation(line: 1308, column: 3, scope: !6552)
!6579 = !DILocation(line: 1316, column: 1, scope: !6539)
!6580 = distinct !DISubprogram(name: "isupper", scope: !6581, file: !6581, line: 16, type: !448, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !6582)
!6581 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6582 = !{!6583}
!6583 = !DILocalVariable(name: "a", arg: 1, scope: !6580, file: !6581, line: 16, type: !105)
!6584 = !DILocation(line: 0, scope: !6580)
!6585 = !DILocation(line: 18, column: 29, scope: !6580)
!6586 = !DILocation(line: 18, column: 45, scope: !6580)
!6587 = !DILocation(line: 18, column: 2, scope: !6580)
!6588 = distinct !DISubprogram(name: "conversion_radix", scope: !2630, file: !2630, line: 761, type: !6589, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !6591)
!6589 = !DISubroutineType(types: !6590)
!6590 = !{!111, !103}
!6591 = !{!6592}
!6592 = !DILocalVariable(name: "specifier", arg: 1, scope: !6588, file: !2630, line: 761, type: !103)
!6593 = !DILocation(line: 0, scope: !6588)
!6594 = !DILocation(line: 763, column: 2, scope: !6588)
!6595 = !DILocation(line: 770, column: 3, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6588, file: !2630, line: 763, column: 21)
!6597 = !DILocation(line: 774, column: 3, scope: !6596)
!6598 = !DILocation(line: 0, scope: !6596)
!6599 = !DILocation(line: 776, column: 1, scope: !6588)
!6600 = distinct !DISubprogram(name: "extract_flags", scope: !2630, file: !2630, line: 339, type: !6442, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !6601)
!6601 = !{!6602, !6603, !6604}
!6602 = !DILocalVariable(name: "conv", arg: 1, scope: !6600, file: !2630, line: 339, type: !6098)
!6603 = !DILocalVariable(name: "sp", arg: 2, scope: !6600, file: !2630, line: 340, type: !269)
!6604 = !DILocalVariable(name: "loop", scope: !6600, file: !2630, line: 342, type: !492)
!6605 = !DILocation(line: 0, scope: !6600)
!6606 = !DILocation(line: 344, column: 2, scope: !6600)
!6607 = !DILocation(line: 345, column: 11, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6600, file: !2630, line: 344, column: 5)
!6609 = !DILocation(line: 345, column: 3, scope: !6608)
!6610 = !DILocation(line: 351, column: 4, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6608, file: !2630, line: 345, column: 16)
!6612 = !DILocation(line: 354, column: 4, scope: !6611)
!6613 = !DILocation(line: 357, column: 4, scope: !6611)
!6614 = !DILocation(line: 360, column: 4, scope: !6611)
!6615 = !DILocation(line: 0, scope: !6611)
!6616 = !DILocation(line: 370, column: 12, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6600, file: !2630, line: 370, column: 6)
!6618 = !DILocation(line: 370, column: 22, scope: !6617)
!6619 = !DILocation(line: 371, column: 19, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6617, file: !2630, line: 370, column: 42)
!6621 = !DILocation(line: 372, column: 2, scope: !6620)
!6622 = !DILocation(line: 376, column: 2, scope: !6600)
!6623 = distinct !DISubprogram(name: "extract_width", scope: !2630, file: !2630, line: 388, type: !6442, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !6624)
!6624 = !{!6625, !6626, !6627, !6628}
!6625 = !DILocalVariable(name: "conv", arg: 1, scope: !6623, file: !2630, line: 388, type: !6098)
!6626 = !DILocalVariable(name: "sp", arg: 2, scope: !6623, file: !2630, line: 389, type: !269)
!6627 = !DILocalVariable(name: "wp", scope: !6623, file: !2630, line: 398, type: !269)
!6628 = !DILocalVariable(name: "width", scope: !6623, file: !2630, line: 399, type: !111)
!6629 = !DILocation(line: 0, scope: !6623)
!6630 = !DILocation(line: 391, column: 8, scope: !6623)
!6631 = !DILocation(line: 391, column: 22, scope: !6623)
!6632 = !DILocation(line: 393, column: 6, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6623, file: !2630, line: 393, column: 6)
!6634 = !DILocation(line: 393, column: 10, scope: !6633)
!6635 = !DILocation(line: 393, column: 6, scope: !6623)
!6636 = !DILocation(line: 394, column: 20, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6633, file: !2630, line: 393, column: 18)
!6638 = !DILocation(line: 395, column: 10, scope: !6637)
!6639 = !DILocation(line: 395, column: 3, scope: !6637)
!6640 = !DILocation(line: 399, column: 17, scope: !6623)
!6641 = !DILocation(line: 401, column: 6, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6623, file: !2630, line: 401, column: 6)
!6643 = !DILocation(line: 401, column: 9, scope: !6642)
!6644 = !DILocation(line: 401, column: 6, scope: !6623)
!6645 = !DILocation(line: 402, column: 23, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6642, file: !2630, line: 401, column: 16)
!6647 = !DILocation(line: 403, column: 9, scope: !6646)
!6648 = !DILocation(line: 403, column: 21, scope: !6646)
!6649 = !DILocation(line: 405, column: 11, scope: !6646)
!6650 = !DILocation(line: 404, column: 21, scope: !6646)
!6651 = !DILocation(line: 406, column: 2, scope: !6646)
!6652 = !DILocation(line: 409, column: 1, scope: !6623)
!6653 = distinct !DISubprogram(name: "extract_prec", scope: !2630, file: !2630, line: 420, type: !6442, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !6654)
!6654 = !{!6655, !6656, !6657}
!6655 = !DILocalVariable(name: "conv", arg: 1, scope: !6653, file: !2630, line: 420, type: !6098)
!6656 = !DILocalVariable(name: "sp", arg: 2, scope: !6653, file: !2630, line: 421, type: !269)
!6657 = !DILocalVariable(name: "prec", scope: !6653, file: !2630, line: 435, type: !111)
!6658 = !DILocation(line: 0, scope: !6653)
!6659 = !DILocation(line: 423, column: 24, scope: !6653)
!6660 = !DILocation(line: 423, column: 28, scope: !6653)
!6661 = !DILocation(line: 423, column: 8, scope: !6653)
!6662 = !DILocation(line: 423, column: 21, scope: !6653)
!6663 = !DILocation(line: 425, column: 6, scope: !6653)
!6664 = !DILocation(line: 428, column: 2, scope: !6653)
!6665 = !DILocation(line: 430, column: 6, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6653, file: !2630, line: 430, column: 6)
!6667 = !DILocation(line: 430, column: 10, scope: !6666)
!6668 = !DILocation(line: 430, column: 6, scope: !6653)
!6669 = !DILocation(line: 431, column: 19, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6666, file: !2630, line: 430, column: 18)
!6671 = !DILocation(line: 432, column: 10, scope: !6670)
!6672 = !DILocation(line: 432, column: 3, scope: !6670)
!6673 = !DILocation(line: 435, column: 16, scope: !6653)
!6674 = !DILocation(line: 437, column: 8, scope: !6653)
!6675 = !DILocation(line: 437, column: 19, scope: !6653)
!6676 = !DILocation(line: 439, column: 10, scope: !6653)
!6677 = !DILocation(line: 438, column: 20, scope: !6653)
!6678 = !DILocation(line: 441, column: 9, scope: !6653)
!6679 = !DILocation(line: 442, column: 1, scope: !6653)
!6680 = distinct !DISubprogram(name: "extract_length", scope: !2630, file: !2630, line: 453, type: !6442, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !6681)
!6681 = !{!6682, !6683}
!6682 = !DILocalVariable(name: "conv", arg: 1, scope: !6680, file: !2630, line: 453, type: !6098)
!6683 = !DILocalVariable(name: "sp", arg: 2, scope: !6680, file: !2630, line: 454, type: !269)
!6684 = !DILocation(line: 0, scope: !6680)
!6685 = !DILocation(line: 456, column: 10, scope: !6680)
!6686 = !DILocation(line: 456, column: 2, scope: !6680)
!6687 = !DILocation(line: 458, column: 8, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6689, file: !2630, line: 458, column: 7)
!6689 = distinct !DILexicalBlock(scope: !6680, file: !2630, line: 456, column: 15)
!6690 = !DILocation(line: 458, column: 7, scope: !6688)
!6691 = !DILocation(line: 458, column: 13, scope: !6688)
!6692 = !DILocation(line: 0, scope: !6688)
!6693 = !DILocation(line: 458, column: 7, scope: !6689)
!6694 = !DILocation(line: 459, column: 21, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6688, file: !2630, line: 458, column: 21)
!6696 = !DILocation(line: 460, column: 4, scope: !6695)
!6697 = !DILocation(line: 461, column: 3, scope: !6695)
!6698 = !DILocation(line: 462, column: 21, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6688, file: !2630, line: 461, column: 10)
!6700 = !DILocation(line: 466, column: 8, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6689, file: !2630, line: 466, column: 7)
!6702 = !DILocation(line: 466, column: 7, scope: !6701)
!6703 = !DILocation(line: 466, column: 13, scope: !6701)
!6704 = !DILocation(line: 0, scope: !6701)
!6705 = !DILocation(line: 466, column: 7, scope: !6689)
!6706 = !DILocation(line: 467, column: 21, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6701, file: !2630, line: 466, column: 21)
!6708 = !DILocation(line: 468, column: 4, scope: !6707)
!6709 = !DILocation(line: 469, column: 3, scope: !6707)
!6710 = !DILocation(line: 470, column: 21, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6701, file: !2630, line: 469, column: 10)
!6712 = !DILocation(line: 474, column: 9, scope: !6689)
!6713 = !DILocation(line: 474, column: 20, scope: !6689)
!6714 = !DILocation(line: 475, column: 3, scope: !6689)
!6715 = !DILocation(line: 476, column: 3, scope: !6689)
!6716 = !DILocation(line: 478, column: 9, scope: !6689)
!6717 = !DILocation(line: 478, column: 20, scope: !6689)
!6718 = !DILocation(line: 479, column: 3, scope: !6689)
!6719 = !DILocation(line: 480, column: 3, scope: !6689)
!6720 = !DILocation(line: 482, column: 9, scope: !6689)
!6721 = !DILocation(line: 482, column: 20, scope: !6689)
!6722 = !DILocation(line: 483, column: 3, scope: !6689)
!6723 = !DILocation(line: 484, column: 3, scope: !6689)
!6724 = !DILocation(line: 486, column: 9, scope: !6689)
!6725 = !DILocation(line: 486, column: 20, scope: !6689)
!6726 = !DILocation(line: 487, column: 3, scope: !6689)
!6727 = !DILocation(line: 492, column: 21, scope: !6689)
!6728 = !DILocation(line: 493, column: 3, scope: !6689)
!6729 = !DILocation(line: 495, column: 9, scope: !6689)
!6730 = !DILocation(line: 495, column: 20, scope: !6689)
!6731 = !DILocation(line: 496, column: 3, scope: !6689)
!6732 = !DILocation(line: 498, column: 2, scope: !6680)
!6733 = distinct !DISubprogram(name: "extract_specifier", scope: !2630, file: !2630, line: 513, type: !6442, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !6734)
!6734 = !{!6735, !6736, !6737, !6738}
!6735 = !DILocalVariable(name: "conv", arg: 1, scope: !6733, file: !2630, line: 513, type: !6098)
!6736 = !DILocalVariable(name: "sp", arg: 2, scope: !6733, file: !2630, line: 514, type: !269)
!6737 = !DILocalVariable(name: "unsupported", scope: !6733, file: !2630, line: 516, type: !492)
!6738 = !DILabel(scope: !6739, name: "int_conv", file: !2630, line: 526)
!6739 = distinct !DILexicalBlock(scope: !6733, file: !2630, line: 520, column: 27)
!6740 = !DILocation(line: 0, scope: !6733)
!6741 = !DILocation(line: 518, column: 20, scope: !6733)
!6742 = !DILocation(line: 518, column: 8, scope: !6733)
!6743 = !DILocation(line: 518, column: 18, scope: !6733)
!6744 = !DILocation(line: 520, column: 2, scope: !6733)
!6745 = !DILocation(line: 525, column: 3, scope: !6739)
!6746 = !DILocation(line: 0, scope: !6739)
!6747 = !DILocation(line: 526, column: 1, scope: !6739)
!6748 = !DILocation(line: 528, column: 24, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6739, file: !2630, line: 528, column: 7)
!6750 = !DILocation(line: 528, column: 7, scope: !6739)
!6751 = !DILocation(line: 535, column: 23, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6739, file: !2630, line: 535, column: 7)
!6753 = !DILocation(line: 535, column: 7, scope: !6739)
!6754 = !DILocation(line: 536, column: 36, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6752, file: !2630, line: 535, column: 31)
!6756 = !DILocation(line: 537, column: 3, scope: !6755)
!6757 = !DILocation(line: 570, column: 9, scope: !6739)
!6758 = !DILocation(line: 570, column: 23, scope: !6739)
!6759 = !DILocation(line: 575, column: 4, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6761, file: !2630, line: 573, column: 48)
!6761 = distinct !DILexicalBlock(scope: !6739, file: !2630, line: 573, column: 7)
!6762 = !DILocation(line: 603, column: 9, scope: !6739)
!6763 = !DILocation(line: 603, column: 23, scope: !6739)
!6764 = !DILocation(line: 605, column: 24, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6739, file: !2630, line: 605, column: 7)
!6766 = !DILocation(line: 605, column: 7, scope: !6739)
!6767 = !DILocation(line: 612, column: 9, scope: !6739)
!6768 = !DILocation(line: 612, column: 23, scope: !6739)
!6769 = !DILocation(line: 619, column: 24, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6739, file: !2630, line: 619, column: 7)
!6771 = !DILocation(line: 619, column: 7, scope: !6739)
!6772 = !DILocation(line: 625, column: 9, scope: !6739)
!6773 = !DILocation(line: 625, column: 17, scope: !6739)
!6774 = !DILocation(line: 626, column: 3, scope: !6739)
!6775 = !DILocation(line: 629, column: 20, scope: !6733)
!6776 = !DILocation(line: 629, column: 8, scope: !6733)
!6777 = !DILocation(line: 518, column: 23, scope: !6733)
!6778 = !DILocation(line: 631, column: 2, scope: !6733)
!6779 = distinct !DISubprogram(name: "extract_decimal", scope: !2630, file: !2630, line: 318, type: !6780, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !6782)
!6780 = !DISubroutineType(types: !6781)
!6781 = !{!111, !427}
!6782 = !{!6783, !6784, !6785}
!6783 = !DILocalVariable(name: "str", arg: 1, scope: !6779, file: !2630, line: 318, type: !427)
!6784 = !DILocalVariable(name: "sp", scope: !6779, file: !2630, line: 320, type: !269)
!6785 = !DILocalVariable(name: "val", scope: !6779, file: !2630, line: 321, type: !111)
!6786 = !DILocation(line: 0, scope: !6779)
!6787 = !DILocation(line: 320, column: 19, scope: !6779)
!6788 = !DILocation(line: 323, column: 37, scope: !6779)
!6789 = !DILocation(line: 323, column: 17, scope: !6779)
!6790 = !DILocation(line: 323, column: 9, scope: !6779)
!6791 = !DILocation(line: 323, column: 2, scope: !6779)
!6792 = !DILocation(line: 324, column: 13, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6779, file: !2630, line: 323, column: 43)
!6794 = !DILocation(line: 324, column: 24, scope: !6793)
!6795 = !DILocation(line: 324, column: 19, scope: !6793)
!6796 = !DILocation(line: 324, column: 27, scope: !6793)
!6797 = distinct !{!6797, !6791, !6798}
!6798 = !DILocation(line: 325, column: 2, scope: !6779)
!6799 = !DILocation(line: 326, column: 7, scope: !6779)
!6800 = !DILocation(line: 327, column: 2, scope: !6779)
!6801 = distinct !DISubprogram(name: "isdigit", scope: !6581, file: !6581, line: 43, type: !448, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !6802)
!6802 = !{!6803}
!6803 = !DILocalVariable(name: "a", arg: 1, scope: !6801, file: !6581, line: 43, type: !105)
!6804 = !DILocation(line: 0, scope: !6801)
!6805 = !DILocation(line: 45, column: 29, scope: !6801)
!6806 = !DILocation(line: 45, column: 45, scope: !6801)
!6807 = !DILocation(line: 45, column: 2, scope: !6801)
!6808 = distinct !DISubprogram(name: "assert_post_action", scope: !6809, file: !6809, line: 26, type: !6810, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !6812)
!6809 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6810 = !DISubroutineType(types: !6811)
!6811 = !{null, !269, !32}
!6812 = !{!6813, !6814}
!6813 = !DILocalVariable(name: "file", arg: 1, scope: !6808, file: !6809, line: 26, type: !269)
!6814 = !DILocalVariable(name: "line", arg: 2, scope: !6808, file: !6809, line: 26, type: !32)
!6815 = !DILocation(line: 0, scope: !6808)
!6816 = !DILocation(line: 43, column: 2, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6808, file: !6809, line: 43, column: 2)
!6818 = !{i64 2154160460, i64 2154160476, i64 2154160502, i64 2154160530, i64 2154160550}
!6819 = !DILocation(line: 44, column: 1, scope: !6808)
!6820 = distinct !DISubprogram(name: "assert_print", scope: !6809, file: !6809, line: 46, type: !5004, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !6821)
!6821 = !{!6822, !6823}
!6822 = !DILocalVariable(name: "fmt", arg: 1, scope: !6820, file: !6809, line: 46, type: !269)
!6823 = !DILocalVariable(name: "ap", scope: !6820, file: !6809, line: 48, type: !6824)
!6824 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4012, line: 99, baseType: !6825)
!6825 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4012, line: 40, baseType: !6826)
!6826 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6809, baseType: !6827)
!6827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6828)
!6828 = !{!6829}
!6829 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6827, file: !6809, line: 48, baseType: !104, size: 32)
!6830 = !DILocation(line: 0, scope: !6820)
!6831 = !DILocation(line: 48, column: 2, scope: !6820)
!6832 = !DILocation(line: 48, column: 10, scope: !6820)
!6833 = !DILocation(line: 50, column: 2, scope: !6820)
!6834 = !DILocation(line: 52, column: 2, scope: !6820)
!6835 = !DILocation(line: 54, column: 2, scope: !6820)
!6836 = !DILocation(line: 55, column: 1, scope: !6820)
!6837 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6838, file: !6838, line: 9, type: !266, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !397)
!6838 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!6839 = !DILocation(line: 11, column: 1, scope: !6837)
!6840 = !{i64 2147564860, i64 2147564903, i64 2147564943}
!6841 = !DILocation(line: 12, column: 1, scope: !6837)
!6842 = !{i64 2147569087, i64 2147569130, i64 2147569170}
!6843 = !DILocation(line: 13, column: 1, scope: !6837)
!6844 = !{i64 2147569296, i64 2147569339, i64 2147569379}
!6845 = !DILocation(line: 14, column: 1, scope: !6837)
!6846 = !{i64 2147569465, i64 2147569508, i64 2147569548}
!6847 = !DILocation(line: 15, column: 1, scope: !6837)
!6848 = !{i64 2147569628, i64 2147569671, i64 2147569711}
!6849 = !DILocation(line: 16, column: 1, scope: !6837)
!6850 = !{i64 2147569812, i64 2147569855, i64 2147569895}
!6851 = !DILocation(line: 17, column: 1, scope: !6837)
!6852 = !{i64 2147569991, i64 2147570034, i64 2147570074}
!6853 = !DILocation(line: 18, column: 1, scope: !6837)
!6854 = !{i64 2147570233, i64 2147570276, i64 2147570316}
!6855 = !DILocation(line: 19, column: 1, scope: !6837)
!6856 = !{i64 2147570468, i64 2147570511, i64 2147570551}
!6857 = !DILocation(line: 20, column: 1, scope: !6837)
!6858 = !{i64 2147570654, i64 2147570697, i64 2147570737}
!6859 = !DILocation(line: 21, column: 1, scope: !6837)
!6860 = !{i64 2147570870, i64 2147570913, i64 2147570953}
!6861 = !DILocation(line: 22, column: 1, scope: !6837)
!6862 = !{i64 2147571073, i64 2147571116, i64 2147571156}
!6863 = !DILocation(line: 23, column: 1, scope: !6837)
!6864 = !{i64 2147571276, i64 2147571319, i64 2147571359}
!6865 = !DILocation(line: 24, column: 1, scope: !6837)
!6866 = !{i64 2147571451, i64 2147571494, i64 2147571534}
!6867 = !DILocation(line: 25, column: 1, scope: !6837)
!6868 = !{i64 2147571659, i64 2147571702, i64 2147571742}
!6869 = !DILocation(line: 26, column: 1, scope: !6837)
!6870 = !{i64 2147571863, i64 2147571906, i64 2147571946}
!6871 = !DILocation(line: 27, column: 1, scope: !6837)
!6872 = !{i64 2147572056, i64 2147572099, i64 2147572139}
!6873 = !DILocation(line: 28, column: 1, scope: !6837)
!6874 = !{i64 2147572258, i64 2147572301, i64 2147572341}
!6875 = !DILocation(line: 29, column: 1, scope: !6837)
!6876 = !{i64 2147572457, i64 2147572500, i64 2147572540}
!6877 = !DILocation(line: 30, column: 1, scope: !6837)
!6878 = !{i64 2147572684, i64 2147572727, i64 2147572767}
!6879 = !DILocation(line: 31, column: 1, scope: !6837)
!6880 = !{i64 2147572886, i64 2147572929, i64 2147572969}
!6881 = !DILocation(line: 32, column: 1, scope: !6837)
!6882 = !{i64 2147573101, i64 2147573144, i64 2147573184}
!6883 = !DILocation(line: 33, column: 1, scope: !6837)
!6884 = !{i64 2147573273, i64 2147573316, i64 2147573356}
!6885 = !DILocation(line: 34, column: 1, scope: !6837)
!6886 = !{i64 2147573475, i64 2147573518, i64 2147573558}
!6887 = !DILocation(line: 35, column: 1, scope: !6837)
!6888 = !{i64 2147573701, i64 2147573744, i64 2147573784}
!6889 = !DILocation(line: 36, column: 1, scope: !6837)
!6890 = !{i64 2147573900, i64 2147573943, i64 2147573983}
!6891 = !DILocation(line: 37, column: 1, scope: !6837)
!6892 = !{i64 2147574075, i64 2147574118, i64 2147574158}
!6893 = !DILocation(line: 38, column: 1, scope: !6837)
!6894 = !{i64 2147574328, i64 2147574371, i64 2147574411}
!6895 = !DILocation(line: 39, column: 1, scope: !6837)
!6896 = !{i64 2147574569, i64 2147574612, i64 2147574652}
!6897 = !DILocation(line: 40, column: 1, scope: !6837)
!6898 = !{i64 2147574804, i64 2147574847, i64 2147574887}
!6899 = !DILocation(line: 41, column: 1, scope: !6837)
!6900 = !{i64 2147575036, i64 2147575079, i64 2147575119}
!6901 = !DILocation(line: 42, column: 1, scope: !6837)
!6902 = !{i64 2147575283, i64 2147575326, i64 2147575366}
!6903 = !DILocation(line: 43, column: 1, scope: !6837)
!6904 = !{i64 2147575509, i64 2147575552, i64 2147575592}
!6905 = !DILocation(line: 44, column: 1, scope: !6837)
!6906 = !{i64 2147575735, i64 2147575778, i64 2147575818}
!6907 = !DILocation(line: 45, column: 1, scope: !6837)
!6908 = !{i64 2147575994, i64 2147576037, i64 2147576077}
!6909 = !DILocation(line: 46, column: 1, scope: !6837)
!6910 = !{i64 2147576220, i64 2147576263, i64 2147576303}
!6911 = !DILocation(line: 47, column: 1, scope: !6837)
!6912 = !{i64 2147576455, i64 2147576498, i64 2147576538}
!6913 = !DILocation(line: 48, column: 1, scope: !6837)
!6914 = !{i64 2147576693, i64 2147576736, i64 2147576776}
!6915 = !DILocation(line: 49, column: 1, scope: !6837)
!6916 = !{i64 2147576967, i64 2147577010, i64 2147577050}
!6917 = !DILocation(line: 50, column: 1, scope: !6837)
!6918 = !{i64 2147577205, i64 2147577248, i64 2147577288}
!6919 = !DILocation(line: 51, column: 1, scope: !6837)
!6920 = !{i64 2147577458, i64 2147577501, i64 2147577541}
!6921 = !DILocation(line: 52, column: 1, scope: !6837)
!6922 = !{i64 2147577702, i64 2147577745, i64 2147577785}
!6923 = !DILocation(line: 53, column: 1, scope: !6837)
!6924 = !{i64 2147582013, i64 2147582056, i64 2147582096}
!6925 = !DILocation(line: 54, column: 1, scope: !6837)
!6926 = !{i64 2147582254, i64 2147582297, i64 2147582337}
!6927 = !DILocation(line: 55, column: 1, scope: !6837)
!6928 = !{i64 2147582501, i64 2147582544, i64 2147582584}
!6929 = !DILocation(line: 56, column: 1, scope: !6837)
!6930 = !{i64 2147582736, i64 2147582779, i64 2147582819}
!6931 = !DILocation(line: 57, column: 1, scope: !6837)
!6932 = !{i64 2147582971, i64 2147583014, i64 2147583054}
!6933 = !DILocation(line: 58, column: 1, scope: !6837)
!6934 = !{i64 2147583206, i64 2147583249, i64 2147583289}
!6935 = !DILocation(line: 59, column: 1, scope: !6837)
!6936 = !{i64 2147583444, i64 2147583487, i64 2147583527}
!6937 = !DILocation(line: 60, column: 1, scope: !6837)
!6938 = !{i64 2147583685, i64 2147583728, i64 2147583768}
!6939 = !DILocation(line: 61, column: 1, scope: !6837)
!6940 = !{i64 2147583965, i64 2147584008, i64 2147584048}
!6941 = !DILocation(line: 62, column: 1, scope: !6837)
!6942 = !{i64 2147584224, i64 2147584267, i64 2147584307}
!6943 = !DILocation(line: 63, column: 1, scope: !6837)
!6944 = !{i64 2147584462, i64 2147584505, i64 2147584545}
!6945 = !DILocation(line: 64, column: 1, scope: !6837)
!6946 = !{i64 2147584712, i64 2147584755, i64 2147584795}
!6947 = !DILocation(line: 65, column: 1, scope: !6837)
!6948 = !{i64 2147584941, i64 2147584984, i64 2147585024}
!6949 = !DILocation(line: 66, column: 1, scope: !6837)
!6950 = !{i64 2147585149, i64 2147585192, i64 2147585232}
!6951 = !DILocation(line: 67, column: 1, scope: !6837)
!6952 = !{i64 2147585360, i64 2147585403, i64 2147585443}
!6953 = !DILocation(line: 68, column: 1, scope: !6837)
!6954 = !{i64 2147585595, i64 2147585638, i64 2147585678}
!6955 = !DILocation(line: 69, column: 1, scope: !6837)
!6956 = !{i64 2147585824, i64 2147585867, i64 2147585907}
!6957 = !DILocation(line: 70, column: 1, scope: !6837)
!6958 = !{i64 2147586041, i64 2147586084, i64 2147586124}
!6959 = !DILocation(line: 71, column: 1, scope: !6837)
!6960 = !{i64 2147586270, i64 2147586313, i64 2147586353}
!6961 = !DILocation(line: 72, column: 1, scope: !6837)
!6962 = !{i64 2147586508, i64 2147586551, i64 2147586591}
!6963 = !DILocation(line: 73, column: 1, scope: !6837)
!6964 = !{i64 2147586740, i64 2147586783, i64 2147586823}
!6965 = !DILocation(line: 74, column: 1, scope: !6837)
!6966 = !{i64 2147586966, i64 2147587009, i64 2147587049}
!6967 = !DILocation(line: 75, column: 1, scope: !6837)
!6968 = !{i64 2147587183, i64 2147587226, i64 2147587266}
!6969 = !DILocation(line: 76, column: 1, scope: !6837)
!6970 = !{i64 2147587415, i64 2147587458, i64 2147587498}
!6971 = !DILocation(line: 77, column: 1, scope: !6837)
!6972 = !{i64 2147587641, i64 2147587684, i64 2147587724}
!6973 = !DILocation(line: 78, column: 1, scope: !6837)
!6974 = !{i64 2147587855, i64 2147587898, i64 2147587938}
!6975 = !DILocation(line: 79, column: 1, scope: !6837)
!6976 = !{i64 2147588075, i64 2147588118, i64 2147588158}
!6977 = !DILocation(line: 80, column: 1, scope: !6837)
!6978 = !{i64 2147588307, i64 2147588350, i64 2147588390}
!6979 = !DILocation(line: 81, column: 1, scope: !6837)
!6980 = !{i64 2147588515, i64 2147588558, i64 2147588598}
!6981 = !DILocation(line: 82, column: 1, scope: !6837)
!6982 = !{i64 2147588720, i64 2147588763, i64 2147588803}
!6983 = !DILocation(line: 83, column: 1, scope: !6837)
!6984 = !{i64 2147588937, i64 2147588980, i64 2147589020}
!6985 = !DILocation(line: 84, column: 1, scope: !6837)
!6986 = !{i64 2147589151, i64 2147589194, i64 2147589234}
!6987 = !DILocation(line: 85, column: 1, scope: !6837)
!6988 = !{i64 2147589377, i64 2147589420, i64 2147589460}
!6989 = !DILocation(line: 86, column: 1, scope: !6837)
!6990 = !{i64 2147589597, i64 2147589640, i64 2147589680}
!6991 = !DILocation(line: 87, column: 1, scope: !6837)
!6992 = !{i64 2147589802, i64 2147589845, i64 2147589885}
!6993 = !DILocation(line: 88, column: 1, scope: !6837)
!6994 = !{i64 2147594095, i64 2147594138, i64 2147594178}
!6995 = !DILocation(line: 89, column: 1, scope: !6837)
!6996 = !{i64 2147594330, i64 2147594373, i64 2147594413}
!6997 = !DILocation(line: 90, column: 1, scope: !6837)
!6998 = !{i64 2147594580, i64 2147594623, i64 2147594663}
!6999 = !DILocation(line: 91, column: 1, scope: !6837)
!7000 = !{i64 2147594830, i64 2147594873, i64 2147594913}
!7001 = !DILocation(line: 92, column: 1, scope: !6837)
!7002 = !{i64 2147595068, i64 2147595111, i64 2147595151}
!7003 = !DILocation(line: 93, column: 1, scope: !6837)
!7004 = !{i64 2147595279, i64 2147595322, i64 2147595362}
!7005 = !DILocation(line: 94, column: 1, scope: !6837)
!7006 = !{i64 2147595496, i64 2147595539, i64 2147595579}
!7007 = !DILocation(line: 95, column: 1, scope: !6837)
!7008 = !{i64 2147595692, i64 2147595735, i64 2147595775}
!7009 = !DILocation(line: 96, column: 1, scope: !6837)
!7010 = !{i64 2147595894, i64 2147595937, i64 2147595977}
!7011 = !DILocation(line: 97, column: 1, scope: !6837)
!7012 = !{i64 2147596087, i64 2147596130, i64 2147596170}
!7013 = !DILocation(line: 98, column: 1, scope: !6837)
!7014 = !{i64 2147596295, i64 2147596338, i64 2147596378}
!7015 = !DILocation(line: 99, column: 1, scope: !6837)
!7016 = !{i64 2147596491, i64 2147596534, i64 2147596574}
!7017 = !DILocation(line: 100, column: 1, scope: !6837)
!7018 = !{i64 2147596693, i64 2147596736, i64 2147596776}
!7019 = !DILocation(line: 101, column: 1, scope: !6837)
!7020 = !{i64 2147596904, i64 2147596947, i64 2147596987}
!7021 = !DILocation(line: 102, column: 1, scope: !6837)
!7022 = !{i64 2147597103, i64 2147597146, i64 2147597186}
!7023 = !DILocation(line: 103, column: 1, scope: !6837)
!7024 = !{i64 2147597278, i64 2147597321, i64 2147597361}
!7025 = !DILocation(line: 104, column: 1, scope: !6837)
!7026 = !{i64 2147597462, i64 2147597505, i64 2147597545}
!7027 = !DILocation(line: 105, column: 1, scope: !6837)
!7028 = !{i64 2147597664, i64 2147597707, i64 2147597747}
!7029 = !DILocation(line: 106, column: 1, scope: !6837)
!7030 = !{i64 2147597863, i64 2147597906, i64 2147597946}
!7031 = !DILocation(line: 107, column: 1, scope: !6837)
!7032 = !{i64 2147598068, i64 2147598111, i64 2147598151}
!7033 = !DILocation(line: 108, column: 1, scope: !6837)
!7034 = !{i64 2147598261, i64 2147598304, i64 2147598344}
!7035 = !DILocation(line: 109, column: 1, scope: !6837)
!7036 = !{i64 2147598427, i64 2147598470, i64 2147598510}
!7037 = !DILocation(line: 110, column: 1, scope: !6837)
!7038 = !{i64 2147598611, i64 2147598654, i64 2147598694}
!7039 = !DILocation(line: 111, column: 1, scope: !6837)
!7040 = !{i64 2147598801, i64 2147598844, i64 2147598884}
!7041 = !DILocation(line: 112, column: 1, scope: !6837)
!7042 = !{i64 2147598985, i64 2147599028, i64 2147599068}
!7043 = !DILocation(line: 113, column: 1, scope: !6837)
!7044 = !{i64 2147599199, i64 2147599242, i64 2147599282}
!7045 = !DILocation(line: 114, column: 1, scope: !6837)
!7046 = !{i64 2147599410, i64 2147599453, i64 2147599493}
!7047 = !DILocation(line: 115, column: 1, scope: !6837)
!7048 = !{i64 2147599633, i64 2147599676, i64 2147599716}
!7049 = !DILocation(line: 116, column: 1, scope: !6837)
!7050 = !{i64 2147599817, i64 2147599860, i64 2147599900}
!7051 = !DILocation(line: 117, column: 1, scope: !6837)
!7052 = !{i64 2147600031, i64 2147600074, i64 2147600114}
!7053 = !DILocation(line: 118, column: 1, scope: !6837)
!7054 = !{i64 2147600197, i64 2147600240, i64 2147600280}
!7055 = !DILocation(line: 119, column: 1, scope: !6837)
!7056 = !{i64 2147600378, i64 2147600421, i64 2147600461}
!7057 = !DILocation(line: 120, column: 1, scope: !6837)
!7058 = !{i64 2147600571, i64 2147600614, i64 2147600654}
!7059 = !DILocation(line: 121, column: 1, scope: !6837)
!7060 = !{i64 2147600797, i64 2147600840, i64 2147600880}
!7061 = !DILocation(line: 122, column: 1, scope: !6837)
!7062 = !{i64 2147601011, i64 2147601054, i64 2147601094}
!7063 = !DILocation(line: 123, column: 1, scope: !6837)
!7064 = !{i64 2147601237, i64 2147601280, i64 2147601320}
!7065 = !DILocation(line: 124, column: 1, scope: !6837)
!7066 = !{i64 2147601454, i64 2147601497, i64 2147601537}
!7067 = !DILocation(line: 125, column: 1, scope: !6837)
!7068 = !{i64 2147601731, i64 2147601774, i64 2147601814}
!7069 = !DILocation(line: 126, column: 1, scope: !6837)
!7070 = !{i64 2147601957, i64 2147602000, i64 2147602040}
!7071 = !DILocation(line: 127, column: 1, scope: !6837)
!7072 = !{i64 2147602165, i64 2147602208, i64 2147602248}
!7073 = !DILocation(line: 128, column: 1, scope: !6837)
!7074 = !{i64 2147602361, i64 2147602404, i64 2147602444}
!7075 = !DILocation(line: 129, column: 1, scope: !6837)
!7076 = !{i64 2147602626, i64 2147602669, i64 2147602709}
!7077 = !DILocation(line: 130, column: 1, scope: !6837)
!7078 = !{i64 2147602840, i64 2147602883, i64 2147602923}
!7079 = !DILocation(line: 131, column: 1, scope: !6837)
!7080 = !{i64 2147603015, i64 2147603058, i64 2147603098}
!7081 = !DILocation(line: 132, column: 1, scope: !6837)
!7082 = !{i64 2147607330, i64 2147607373, i64 2147607413}
!7083 = !DILocation(line: 133, column: 1, scope: !6837)
!7084 = !{i64 2147607529, i64 2147607572, i64 2147607612}
!7085 = !DILocation(line: 134, column: 1, scope: !6837)
!7086 = !{i64 2147607771, i64 2147607814, i64 2147607854}
!7087 = !DILocation(line: 135, column: 1, scope: !6837)
!7088 = !{i64 2147607934, i64 2147607977, i64 2147608017}
!7089 = !DILocation(line: 136, column: 1, scope: !6837)
!7090 = !{i64 2147608121, i64 2147608164, i64 2147608204}
!7091 = !DILocation(line: 137, column: 1, scope: !6837)
!7092 = !{i64 2147608329, i64 2147608372, i64 2147608412}
!7093 = !DILocation(line: 138, column: 1, scope: !6837)
!7094 = !{i64 2147608525, i64 2147608568, i64 2147608608}
!7095 = !DILocation(line: 139, column: 1, scope: !6837)
!7096 = !{i64 2147608718, i64 2147608761, i64 2147608801}
!7097 = !DILocation(line: 140, column: 1, scope: !6837)
!7098 = !{i64 2147608900, i64 2147608943, i64 2147608983}
!7099 = !DILocation(line: 141, column: 1, scope: !6837)
!7100 = !{i64 2147609114, i64 2147609157, i64 2147609197}
!7101 = !DILocation(line: 142, column: 1, scope: !6837)
!7102 = !{i64 2147609325, i64 2147609368, i64 2147609408}
!7103 = !DILocation(line: 143, column: 1, scope: !6837)
!7104 = !{i64 2147609545, i64 2147609588, i64 2147609628}
!7105 = !DILocation(line: 144, column: 1, scope: !6837)
!7106 = !{i64 2147609752, i64 2147609795, i64 2147609835}
!7107 = !DILocation(line: 145, column: 1, scope: !6837)
!7108 = !{i64 2147610025, i64 2147610068, i64 2147610108}
!7109 = !DILocation(line: 146, column: 1, scope: !6837)
!7110 = !{i64 2147610273, i64 2147610316, i64 2147610356}
!7111 = !DILocation(line: 147, column: 1, scope: !6837)
!7112 = !{i64 2147610472, i64 2147610515, i64 2147610555}
!7113 = !DILocation(line: 148, column: 1, scope: !6837)
!7114 = !{i64 2147610707, i64 2147610750, i64 2147610790}
!7115 = !DILocation(line: 149, column: 1, scope: !6837)
!7116 = !{i64 2147610957, i64 2147611000, i64 2147611040}
!7117 = !DILocation(line: 150, column: 1, scope: !6837)
!7118 = !{i64 2147611159, i64 2147611202, i64 2147611242}
!7119 = !DILocation(line: 151, column: 1, scope: !6837)
!7120 = !{i64 2147611382, i64 2147611425, i64 2147611465}
!7121 = !DILocation(line: 152, column: 1, scope: !6837)
!7122 = !{i64 2147611596, i64 2147611639, i64 2147611679}
!7123 = !DILocation(line: 153, column: 1, scope: !6837)
!7124 = !{i64 2147611840, i64 2147611883, i64 2147611923}
!7125 = !DILocation(line: 154, column: 1, scope: !6837)
!7126 = !{i64 2147612069, i64 2147612112, i64 2147612152}
!7127 = !DILocation(line: 155, column: 1, scope: !6837)
!7128 = !{i64 2147612298, i64 2147612341, i64 2147612381}
!7129 = !DILocation(line: 156, column: 1, scope: !6837)
!7130 = !{i64 2147612506, i64 2147612549, i64 2147612589}
!7131 = !DILocation(line: 157, column: 1, scope: !6837)
!7132 = !{i64 2147612744, i64 2147612787, i64 2147612827}
!7133 = !DILocation(line: 158, column: 1, scope: !6837)
!7134 = !{i64 2147612970, i64 2147613013, i64 2147613053}
!7135 = !DILocation(line: 159, column: 1, scope: !6837)
!7136 = !{i64 2147613229, i64 2147613272, i64 2147613312}
!7137 = !DILocation(line: 160, column: 1, scope: !6837)
!7138 = !{i64 2147613449, i64 2147613492, i64 2147613532}
!7139 = !DILocation(line: 161, column: 1, scope: !6837)
!7140 = !{i64 2147613681, i64 2147613724, i64 2147613764}
!7141 = !DILocation(line: 162, column: 1, scope: !6837)
!7142 = !{i64 2147613922, i64 2147613965, i64 2147614005}
!7143 = !DILocation(line: 163, column: 1, scope: !6837)
!7144 = !{i64 2147614163, i64 2147614206, i64 2147614246}
!7145 = !DILocation(line: 164, column: 1, scope: !6837)
!7146 = !{i64 2147614386, i64 2147614429, i64 2147614469}
!7147 = !DILocation(line: 165, column: 1, scope: !6837)
!7148 = !{i64 2147614603, i64 2147614646, i64 2147614686}
!7149 = !DILocation(line: 166, column: 1, scope: !6837)
!7150 = !{i64 2147614844, i64 2147614887, i64 2147614927}
!7151 = !DILocation(line: 167, column: 1, scope: !6837)
!7152 = !{i64 2147615031, i64 2147615074, i64 2147615114}
!7153 = !DILocation(line: 168, column: 1, scope: !6837)
!7154 = !{i64 2147615218, i64 2147615261, i64 2147615301}
!7155 = !DILocation(line: 169, column: 1, scope: !6837)
!7156 = !{i64 2147615381, i64 2147615424, i64 2147615464}
!7157 = !DILocation(line: 170, column: 1, scope: !6837)
!7158 = !{i64 2147615586, i64 2147615629, i64 2147615669}
!7159 = !DILocation(line: 171, column: 1, scope: !6837)
!7160 = !{i64 2147615779, i64 2147615822, i64 2147615862}
!7161 = !DILocation(line: 172, column: 1, scope: !6837)
!7162 = !{i64 2147620099, i64 2147620142, i64 2147620182}
!7163 = !DILocation(line: 173, column: 1, scope: !6837)
!7164 = !{i64 2147620322, i64 2147620365, i64 2147620405}
!7165 = !DILocation(line: 174, column: 1, scope: !6837)
!7166 = !{i64 2147620551, i64 2147620594, i64 2147620634}
!7167 = !DILocation(line: 175, column: 1, scope: !6837)
!7168 = !{i64 2147620765, i64 2147620808, i64 2147620848}
!7169 = !DILocation(line: 176, column: 1, scope: !6837)
!7170 = !{i64 2147620967, i64 2147621010, i64 2147621050}
!7171 = !DILocation(line: 177, column: 1, scope: !6837)
!7172 = !{i64 2147621163, i64 2147621206, i64 2147621246}
!7173 = !DILocation(line: 178, column: 1, scope: !6837)
!7174 = !{i64 2147621375, i64 2147621418, i64 2147621458}
!7175 = !DILocation(line: 179, column: 1, scope: !6837)
!7176 = !{i64 2147621596, i64 2147621639, i64 2147621679}
!7177 = !DILocation(line: 180, column: 1, scope: !6837)
!7178 = !{i64 2147621810, i64 2147621853, i64 2147621893}
!7179 = !DILocation(line: 181, column: 1, scope: !6837)
!7180 = !{i64 2147622000, i64 2147622043, i64 2147622083}
!7181 = !DILocation(line: 182, column: 1, scope: !6837)
!7182 = !{i64 2147622199, i64 2147622242, i64 2147622282}
!7183 = !DILocation(line: 183, column: 1, scope: !6837)
!7184 = !{i64 2147622404, i64 2147622447, i64 2147622487}
!7185 = !DILocation(line: 184, column: 1, scope: !6837)
!7186 = !{i64 2147622624, i64 2147622667, i64 2147622707}
!7187 = !DILocation(line: 185, column: 1, scope: !6837)
!7188 = !{i64 2147622825, i64 2147622868, i64 2147622908}
!7189 = !DILocation(line: 186, column: 1, scope: !6837)
!7190 = !{i64 2147623024, i64 2147623067, i64 2147623107}
!7191 = !DILocation(line: 187, column: 1, scope: !6837)
!7192 = !{i64 2147623229, i64 2147623272, i64 2147623312}
!7193 = !DILocation(line: 188, column: 1, scope: !6837)
!7194 = !{i64 2147623398, i64 2147623441, i64 2147623481}
!7195 = !DILocation(line: 189, column: 1, scope: !6837)
!7196 = !{i64 2147623582, i64 2147623625, i64 2147623665}
!7197 = !DILocation(line: 190, column: 1, scope: !6837)
!7198 = !{i64 2147623766, i64 2147623809, i64 2147623849}
!7199 = !DILocation(line: 191, column: 1, scope: !6837)
!7200 = !{i64 2147623953, i64 2147623996, i64 2147624036}
!7201 = !DILocation(line: 192, column: 1, scope: !6837)
!7202 = !{i64 2147624137, i64 2147624180, i64 2147624220}
!7203 = !DILocation(line: 193, column: 1, scope: !6837)
!7204 = !{i64 2147624375, i64 2147624418, i64 2147624458}
!7205 = !DILocation(line: 194, column: 1, scope: !6837)
!7206 = !{i64 2147624605, i64 2147624648, i64 2147624688}
!7207 = !DILocation(line: 195, column: 1, scope: !6837)
!7208 = !{i64 2147624834, i64 2147624877, i64 2147624917}
!7209 = !DILocation(line: 196, column: 1, scope: !6837)
!7210 = !{i64 2147625021, i64 2147625064, i64 2147625104}
!7211 = !DILocation(line: 197, column: 1, scope: !6837)
!7212 = !{i64 2147625217, i64 2147625260, i64 2147625300}
!7213 = !DILocation(line: 198, column: 1, scope: !6837)
!7214 = !{i64 2147625425, i64 2147625468, i64 2147625508}
!7215 = !DILocation(line: 199, column: 1, scope: !6837)
!7216 = !{i64 2147625637, i64 2147625680, i64 2147625720}
!7217 = !DILocation(line: 200, column: 1, scope: !6837)
!7218 = !{i64 2147625836, i64 2147625879, i64 2147625919}
!7219 = !DILocation(line: 201, column: 1, scope: !6837)
!7220 = !{i64 2147626074, i64 2147626117, i64 2147626157}
!7221 = !DILocation(line: 202, column: 1, scope: !6837)
!7222 = !{i64 2147626270, i64 2147626313, i64 2147626353}
!7223 = !DILocation(line: 203, column: 1, scope: !6837)
!7224 = !{i64 2147626472, i64 2147626515, i64 2147626555}
!7225 = !DILocation(line: 204, column: 1, scope: !6837)
!7226 = !{i64 2147626665, i64 2147626708, i64 2147626748}
!7227 = !DILocation(line: 205, column: 1, scope: !6837)
!7228 = !{i64 2147626899, i64 2147626942, i64 2147626982}
!7229 = !DILocation(line: 206, column: 1, scope: !6837)
!7230 = !{i64 2147627062, i64 2147627105, i64 2147627145}
!7231 = !DILocation(line: 207, column: 1, scope: !6837)
!7232 = !{i64 2147627301, i64 2147627344, i64 2147627384}
!7233 = !DILocation(line: 208, column: 1, scope: !6837)
!7234 = !{i64 2147627540, i64 2147627583, i64 2147627623}
!7235 = !DILocation(line: 209, column: 1, scope: !6837)
!7236 = !{i64 2147627776, i64 2147627819, i64 2147627859}
!7237 = !DILocation(line: 210, column: 1, scope: !6837)
!7238 = !{i64 2147628006, i64 2147628049, i64 2147628089}
!7239 = !DILocation(line: 211, column: 1, scope: !6837)
!7240 = !{i64 2147628220, i64 2147628263, i64 2147628303}
!7241 = !DILocation(line: 212, column: 1, scope: !6837)
!7242 = !{i64 2147628407, i64 2147628450, i64 2147628490}
!7243 = !DILocation(line: 213, column: 1, scope: !6837)
!7244 = !{i64 2147628606, i64 2147628649, i64 2147628689}
!7245 = !DILocation(line: 214, column: 1, scope: !6837)
!7246 = !{i64 2147628877, i64 2147628920, i64 2147628960}
!7247 = !DILocation(line: 215, column: 1, scope: !6837)
!7248 = !{i64 2147633113, i64 2147633156, i64 2147633196}
!7249 = !DILocation(line: 216, column: 1, scope: !6837)
!7250 = !{i64 2147633347, i64 2147633390, i64 2147633430}
!7251 = !DILocation(line: 217, column: 1, scope: !6837)
!7252 = !{i64 2147633555, i64 2147633598, i64 2147633638}
!7253 = !DILocation(line: 218, column: 1, scope: !6837)
!7254 = !{i64 2147633773, i64 2147633816, i64 2147633856}
!7255 = !DILocation(line: 219, column: 1, scope: !6837)
!7256 = !{i64 2147633963, i64 2147634006, i64 2147634046}
!7257 = !DILocation(line: 220, column: 1, scope: !6837)
!7258 = !{i64 2147634195, i64 2147634238, i64 2147634278}
!7259 = !DILocation(line: 221, column: 1, scope: !6837)
!7260 = !{i64 2147634415, i64 2147634458, i64 2147634498}
!7261 = !DILocation(line: 222, column: 1, scope: !6837)
!7262 = !{i64 2147634611, i64 2147634654, i64 2147634694}
!7263 = !DILocation(line: 223, column: 1, scope: !6837)
!7264 = !{i64 2147634817, i64 2147634860, i64 2147634900}
!7265 = !DILocation(line: 224, column: 1, scope: !6837)
!7266 = !{i64 2147635022, i64 2147635065, i64 2147635105}
!7267 = !DILocation(line: 225, column: 1, scope: !6837)
!7268 = !{i64 2147635248, i64 2147635291, i64 2147635331}
!7269 = !DILocation(line: 226, column: 1, scope: !6837)
!7270 = !{i64 2147635456, i64 2147635499, i64 2147635539}
!7271 = !DILocation(line: 227, column: 1, scope: !6837)
!7272 = !{i64 2147635652, i64 2147635695, i64 2147635735}
!7273 = !DILocation(line: 228, column: 1, scope: !6837)
!7274 = !{i64 2147635884, i64 2147635927, i64 2147635967}
!7275 = !DILocation(line: 229, column: 1, scope: !6837)
!7276 = !{i64 2147636068, i64 2147636111, i64 2147636151}
!7277 = !DILocation(line: 230, column: 1, scope: !6837)
!7278 = !{i64 2147636277, i64 2147636320, i64 2147636360}
!7279 = !DILocation(line: 231, column: 1, scope: !6837)
!7280 = !{i64 2147636485, i64 2147636528, i64 2147636568}
!7281 = !DILocation(line: 232, column: 1, scope: !6837)
!7282 = !{i64 2147636681, i64 2147636724, i64 2147636764}
!7283 = !DILocation(line: 233, column: 1, scope: !6837)
!7284 = !{i64 2147636865, i64 2147636908, i64 2147636948}
!7285 = !DILocation(line: 234, column: 1, scope: !6837)
!7286 = !{i64 2147637091, i64 2147637134, i64 2147637174}
!7287 = !DILocation(line: 235, column: 1, scope: !6837)
!7288 = !{i64 2147637317, i64 2147637360, i64 2147637400}
!7289 = !DILocation(line: 236, column: 1, scope: !6837)
!7290 = !{i64 2147637543, i64 2147637586, i64 2147637626}
!7291 = !DILocation(line: 237, column: 1, scope: !6837)
!7292 = !{i64 2147637769, i64 2147637812, i64 2147637852}
!7293 = !DILocation(line: 238, column: 1, scope: !6837)
!7294 = !{i64 2147637995, i64 2147638038, i64 2147638078}
!7295 = !DILocation(line: 239, column: 1, scope: !6837)
!7296 = !{i64 2147638227, i64 2147638270, i64 2147638310}
!7297 = !DILocation(line: 240, column: 1, scope: !6837)
!7298 = !{i64 2147638465, i64 2147638508, i64 2147638548}
!7299 = !DILocation(line: 241, column: 1, scope: !6837)
!7300 = !{i64 2147638685, i64 2147638728, i64 2147638768}
!7301 = !DILocation(line: 242, column: 1, scope: !6837)
!7302 = !{i64 2147638929, i64 2147638972, i64 2147639012}
!7303 = !DILocation(line: 243, column: 1, scope: !6837)
!7304 = !{i64 2147639170, i64 2147639213, i64 2147639253}
!7305 = !DILocation(line: 244, column: 1, scope: !6837)
!7306 = !{i64 2147639405, i64 2147639448, i64 2147639488}
!7307 = !DILocation(line: 245, column: 1, scope: !6837)
!7308 = !{i64 2147639637, i64 2147639680, i64 2147639720}
!7309 = !DILocation(line: 246, column: 1, scope: !6837)
!7310 = !{i64 2147639839, i64 2147639882, i64 2147639922}
!7311 = !DILocation(line: 247, column: 1, scope: !6837)
!7312 = !{i64 2147640089, i64 2147640132, i64 2147640172}
!7313 = !DILocation(line: 248, column: 1, scope: !6837)
!7314 = !{i64 2147640327, i64 2147640370, i64 2147640410}
!7315 = !DILocation(line: 249, column: 1, scope: !6837)
!7316 = !{i64 2147640535, i64 2147640578, i64 2147640618}
!7317 = !DILocation(line: 250, column: 1, scope: !6837)
!7318 = !{i64 2147640731, i64 2147640774, i64 2147640814}
!7319 = !DILocation(line: 251, column: 1, scope: !6837)
!7320 = !{i64 2147640915, i64 2147640958, i64 2147640998}
!7321 = !DILocation(line: 252, column: 1, scope: !6837)
!7322 = !{i64 2147641132, i64 2147641175, i64 2147641215}
!7323 = !DILocation(line: 253, column: 1, scope: !6837)
!7324 = !{i64 2147641337, i64 2147641380, i64 2147641420}
!7325 = !DILocation(line: 254, column: 1, scope: !6837)
!7326 = !{i64 2147641572, i64 2147641615, i64 2147641655}
!7327 = !DILocation(line: 255, column: 1, scope: !6837)
!7328 = !{i64 2147641795, i64 2147641838, i64 2147641878}
!7329 = !DILocation(line: 256, column: 1, scope: !6837)
!7330 = !{i64 2147646080, i64 2147646123, i64 2147646163}
!7331 = !DILocation(line: 257, column: 1, scope: !6837)
!7332 = !{i64 2147646318, i64 2147646361, i64 2147646401}
!7333 = !DILocation(line: 258, column: 1, scope: !6837)
!7334 = !{i64 2147646556, i64 2147646599, i64 2147646639}
!7335 = !DILocation(line: 259, column: 1, scope: !6837)
!7336 = !{i64 2147646773, i64 2147646816, i64 2147646856}
!7337 = !DILocation(line: 260, column: 1, scope: !6837)
!7338 = !{i64 2147646978, i64 2147647021, i64 2147647061}
!7339 = !DILocation(line: 261, column: 1, scope: !6837)
!7340 = !{i64 2147647171, i64 2147647214, i64 2147647254}
!7341 = !DILocation(line: 262, column: 1, scope: !6837)
!7342 = !{i64 2147647424, i64 2147647467, i64 2147647507}
!7343 = !DILocation(line: 263, column: 1, scope: !6837)
!7344 = !{i64 2147647632, i64 2147647675, i64 2147647715}
!7345 = !DILocation(line: 264, column: 1, scope: !6837)
!7346 = !{i64 2147647828, i64 2147647871, i64 2147647911}
!7347 = !DILocation(line: 265, column: 1, scope: !6837)
!7348 = !{i64 2147648042, i64 2147648085, i64 2147648125}
!7349 = !DILocation(line: 266, column: 1, scope: !6837)
!7350 = !{i64 2147648250, i64 2147648293, i64 2147648333}
!7351 = !DILocation(line: 267, column: 1, scope: !6837)
!7352 = !{i64 2147648440, i64 2147648483, i64 2147648523}
!7353 = !DILocation(line: 268, column: 1, scope: !6837)
!7354 = !{i64 2147648654, i64 2147648697, i64 2147648737}
!7355 = !DILocation(line: 269, column: 1, scope: !6837)
!7356 = !{i64 2147648916, i64 2147648959, i64 2147648999}
!7357 = !DILocation(line: 270, column: 1, scope: !6837)
!7358 = !{i64 2147649127, i64 2147649170, i64 2147649210}
!7359 = !DILocation(line: 271, column: 1, scope: !6837)
!7360 = !{i64 2147649371, i64 2147649414, i64 2147649454}
!7361 = !DILocation(line: 272, column: 1, scope: !6837)
!7362 = !{i64 2147649582, i64 2147649625, i64 2147649665}
!7363 = !DILocation(line: 273, column: 1, scope: !6837)
!7364 = !{i64 2147649811, i64 2147649854, i64 2147649894}
!7365 = !DILocation(line: 274, column: 1, scope: !6837)
!7366 = !{i64 2147650076, i64 2147650119, i64 2147650159}
!7367 = !DILocation(line: 275, column: 1, scope: !6837)
!7368 = !{i64 2147650281, i64 2147650324, i64 2147650364}
!7369 = !DILocation(line: 276, column: 1, scope: !6837)
!7370 = !{i64 2147650477, i64 2147650520, i64 2147650560}
!7371 = !DILocation(line: 277, column: 1, scope: !6837)
!7372 = !{i64 2147650700, i64 2147650743, i64 2147650783}
!7373 = !DILocation(line: 278, column: 1, scope: !6837)
!7374 = !{i64 2147650863, i64 2147650906, i64 2147650946}
!7375 = !DILocation(line: 279, column: 1, scope: !6837)
!7376 = !{i64 2147651068, i64 2147651111, i64 2147651151}
!7377 = !DILocation(line: 280, column: 1, scope: !6837)
!7378 = !{i64 2147651288, i64 2147651331, i64 2147651371}
!7379 = !DILocation(line: 281, column: 1, scope: !6837)
!7380 = !{i64 2147651502, i64 2147651545, i64 2147651585}
!7381 = !DILocation(line: 282, column: 1, scope: !6837)
!7382 = !{i64 2147651746, i64 2147651789, i64 2147651829}
!7383 = !DILocation(line: 283, column: 1, scope: !6837)
!7384 = !{i64 2147651978, i64 2147652021, i64 2147652061}
!7385 = !DILocation(line: 284, column: 1, scope: !6837)
!7386 = !{i64 2147652192, i64 2147652235, i64 2147652275}
!7387 = !DILocation(line: 285, column: 1, scope: !6837)
!7388 = !{i64 2147652403, i64 2147652446, i64 2147652486}
!7389 = !DILocation(line: 286, column: 1, scope: !6837)
!7390 = !{i64 2147652596, i64 2147652639, i64 2147652679}
!7391 = !DILocation(line: 287, column: 1, scope: !6837)
!7392 = !{i64 2147652795, i64 2147652838, i64 2147652878}
!7393 = !DILocation(line: 288, column: 1, scope: !6837)
!7394 = !{i64 2147652967, i64 2147653010, i64 2147653050}
!7395 = !DILocation(line: 289, column: 1, scope: !6837)
!7396 = !{i64 2147653160, i64 2147653203, i64 2147653243}
!7397 = !DILocation(line: 290, column: 1, scope: !6837)
!7398 = !{i64 2147653332, i64 2147653375, i64 2147653415}
!7399 = !DILocation(line: 291, column: 1, scope: !6837)
!7400 = !{i64 2147653522, i64 2147653565, i64 2147653605}
!7401 = !DILocation(line: 292, column: 1, scope: !6837)
!7402 = !{i64 2147653715, i64 2147653758, i64 2147653798}
!7403 = !DILocation(line: 293, column: 1, scope: !6837)
!7404 = !{i64 2147653911, i64 2147653954, i64 2147653994}
!7405 = !DILocation(line: 294, column: 1, scope: !6837)
!7406 = !{i64 2147654074, i64 2147654117, i64 2147654157}
!7407 = !DILocation(line: 295, column: 1, scope: !6837)
!7408 = !{i64 2147654276, i64 2147654319, i64 2147654359}
!7409 = !DILocation(line: 296, column: 1, scope: !6837)
!7410 = !{i64 2147654481, i64 2147654524, i64 2147654564}
!7411 = !DILocation(line: 297, column: 1, scope: !6837)
!7412 = !{i64 2147654689, i64 2147654732, i64 2147654772}
!7413 = !DILocation(line: 298, column: 1, scope: !6837)
!7414 = !{i64 2147654882, i64 2147654925, i64 2147654965}
!7415 = !DILocation(line: 299, column: 1, scope: !6837)
!7416 = !{i64 2147659130, i64 2147659173, i64 2147659213}
!7417 = !DILocation(line: 300, column: 1, scope: !6837)
!7418 = !{i64 2147659347, i64 2147659390, i64 2147659430}
!7419 = !DILocation(line: 301, column: 1, scope: !6837)
!7420 = !{i64 2147659567, i64 2147659610, i64 2147659650}
!7421 = !DILocation(line: 302, column: 1, scope: !6837)
!7422 = !{i64 2147659794, i64 2147659837, i64 2147659877}
!7423 = !DILocation(line: 303, column: 1, scope: !6837)
!7424 = !{i64 2147660011, i64 2147660054, i64 2147660094}
!7425 = !DILocation(line: 304, column: 1, scope: !6837)
!7426 = !{i64 2147660303, i64 2147660346, i64 2147660386}
!7427 = !DILocation(line: 305, column: 1, scope: !6837)
!7428 = !{i64 2147660535, i64 2147660578, i64 2147660618}
!7429 = !DILocation(line: 306, column: 1, scope: !6837)
!7430 = !{i64 2147660752, i64 2147660795, i64 2147660835}
!7431 = !DILocation(line: 307, column: 1, scope: !6837)
!7432 = !{i64 2147660959, i64 2147661002, i64 2147661042}
!7433 = !DILocation(line: 308, column: 1, scope: !6837)
!7434 = !{i64 2147661160, i64 2147661203, i64 2147661243}
!7435 = !DILocation(line: 309, column: 1, scope: !6837)
!7436 = !{i64 2147661392, i64 2147661435, i64 2147661475}
!7437 = !DILocation(line: 310, column: 1, scope: !6837)
!7438 = !{i64 2147661600, i64 2147661643, i64 2147661683}
!7439 = !DILocation(line: 311, column: 1, scope: !6837)
!7440 = !{i64 2147661790, i64 2147661833, i64 2147661873}
!7441 = !DILocation(line: 312, column: 1, scope: !6837)
!7442 = !{i64 2147662016, i64 2147662059, i64 2147662099}
!7443 = !DILocation(line: 313, column: 1, scope: !6837)
!7444 = !{i64 2147662205, i64 2147662248, i64 2147662288}
!7445 = !DILocation(line: 314, column: 1, scope: !6837)
!7446 = !{i64 2147662476, i64 2147662519, i64 2147662559}
!7447 = !DILocation(line: 315, column: 1, scope: !6837)
!7448 = !{i64 2147662696, i64 2147662739, i64 2147662779}
!7449 = !DILocation(line: 316, column: 1, scope: !6837)
!7450 = !{i64 2147662949, i64 2147662992, i64 2147663032}
!7451 = !DILocation(line: 317, column: 1, scope: !6837)
!7452 = !{i64 2147663157, i64 2147663200, i64 2147663240}
!7453 = !DILocation(line: 318, column: 1, scope: !6837)
!7454 = !{i64 2147663389, i64 2147663432, i64 2147663472}
!7455 = !DILocation(line: 319, column: 1, scope: !6837)
!7456 = !{i64 2147663600, i64 2147663643, i64 2147663683}
!7457 = !DILocation(line: 320, column: 1, scope: !6837)
!7458 = !{i64 2147663790, i64 2147663833, i64 2147663873}
!7459 = !DILocation(line: 321, column: 1, scope: !6837)
!7460 = !{i64 2147664004, i64 2147664047, i64 2147664087}
!7461 = !DILocation(line: 322, column: 1, scope: !6837)
!7462 = !{i64 2147664203, i64 2147664246, i64 2147664286}
!7463 = !DILocation(line: 323, column: 1, scope: !6837)
!7464 = !{i64 2147664390, i64 2147664433, i64 2147664473}
!7465 = !DILocation(line: 324, column: 1, scope: !6837)
!7466 = !{i64 2147664598, i64 2147664641, i64 2147664681}
!7467 = !DILocation(line: 325, column: 1, scope: !6837)
!7468 = !{i64 2147664827, i64 2147664870, i64 2147664910}
!7469 = !DILocation(line: 326, column: 1, scope: !6837)
!7470 = !{i64 2147665029, i64 2147665072, i64 2147665112}
!7471 = !DILocation(line: 327, column: 1, scope: !6837)
!7472 = !{i64 2147665228, i64 2147665271, i64 2147665311}
!7473 = !DILocation(line: 328, column: 1, scope: !6837)
!7474 = !{i64 2147665445, i64 2147665488, i64 2147665528}
!7475 = !DILocation(line: 330, column: 1, scope: !6837)
!7476 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !469, file: !469, line: 30, type: !476, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !7477)
!7477 = !{!7478, !7479}
!7478 = !DILocalVariable(name: "arg", arg: 1, scope: !7476, file: !469, line: 30, type: !478)
!7479 = !DILocalVariable(name: "key", scope: !7476, file: !469, line: 32, type: !113)
!7480 = !DILocation(line: 0, scope: !7476)
!7481 = !DILocation(line: 37, column: 2, scope: !7476)
!7482 = !DILocation(line: 38, column: 2, scope: !7476)
!7483 = !DILocation(line: 55, column: 2, scope: !7484, inlinedAt: !7491)
!7484 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7485, file: !7485, line: 42, type: !7486, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !7488)
!7485 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7486 = !DISubroutineType(types: !7487)
!7487 = !{!32}
!7488 = !{!7489, !7490}
!7489 = !DILocalVariable(name: "key", scope: !7484, file: !7485, line: 44, type: !32)
!7490 = !DILocalVariable(name: "tmp", scope: !7484, file: !7485, line: 53, type: !32)
!7491 = distinct !DILocation(line: 40, column: 8, scope: !7476)
!7492 = !{i64 1937197}
!7493 = !DILocation(line: 0, scope: !7484, inlinedAt: !7491)
!7494 = !DILocalVariable(name: "key", arg: 1, scope: !7495, file: !7485, line: 84, type: !32)
!7495 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7485, file: !7485, line: 84, type: !7496, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !7498)
!7496 = !DISubroutineType(types: !7497)
!7497 = !{null, !32}
!7498 = !{!7494}
!7499 = !DILocation(line: 0, scope: !7495, inlinedAt: !7500)
!7500 = distinct !DILocation(line: 47, column: 2, scope: !7476)
!7501 = !DILocation(line: 95, column: 2, scope: !7495, inlinedAt: !7500)
!7502 = !{i64 1938014}
!7503 = !DILocation(line: 51, column: 18, scope: !7476)
!7504 = !DILocation(line: 53, column: 2, scope: !7476)
!7505 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !7506, file: !7506, line: 1609, type: !266, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !397)
!7506 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7507 = !DILocation(line: 1611, column: 3, scope: !7505)
!7508 = !DILocation(line: 1612, column: 1, scope: !7505)
!7509 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !7506, file: !7506, line: 1629, type: !266, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !397)
!7510 = !DILocation(line: 1631, column: 3, scope: !7509)
!7511 = !DILocation(line: 1632, column: 1, scope: !7509)
!7512 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !506, file: !506, line: 26, type: !512, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !7513)
!7513 = !{!7514}
!7514 = !DILocalVariable(name: "dev", arg: 1, scope: !7512, file: !506, line: 26, type: !514)
!7515 = !DILocation(line: 0, scope: !7512)
!7516 = !DILocation(line: 68, column: 2, scope: !7512)
!7517 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !7518, file: !7518, line: 14, type: !5004, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !7519)
!7518 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7519 = !{!7520, !7521}
!7520 = !DILocalVariable(name: "fmt", arg: 1, scope: !7517, file: !7518, line: 14, type: !269)
!7521 = !DILocalVariable(name: "ap", scope: !7517, file: !7518, line: 16, type: !7522)
!7522 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4012, line: 99, baseType: !7523)
!7523 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4012, line: 40, baseType: !7524)
!7524 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7518, baseType: !7525)
!7525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7526)
!7526 = !{!7527}
!7527 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7525, file: !7518, line: 16, baseType: !104, size: 32)
!7528 = !DILocation(line: 0, scope: !7517)
!7529 = !DILocation(line: 16, column: 2, scope: !7517)
!7530 = !DILocation(line: 16, column: 10, scope: !7517)
!7531 = !DILocation(line: 18, column: 2, scope: !7517)
!7532 = !DILocation(line: 19, column: 2, scope: !7517)
!7533 = !DILocation(line: 20, column: 2, scope: !7517)
!7534 = !DILocation(line: 21, column: 1, scope: !7517)
!7535 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !7518, file: !7518, line: 23, type: !7536, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !7538)
!7536 = !DISubroutineType(types: !7537)
!7537 = !{null, !269, !7522}
!7538 = !{!7539, !7540}
!7539 = !DILocalVariable(name: "fmt", arg: 1, scope: !7535, file: !7518, line: 23, type: !269)
!7540 = !DILocalVariable(name: "ap", arg: 2, scope: !7535, file: !7518, line: 23, type: !7522)
!7541 = !DILocation(line: 0, scope: !7535)
!7542 = !DILocation(line: 25, column: 2, scope: !7535)
!7543 = !DILocation(line: 26, column: 1, scope: !7535)
!7544 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !7518, file: !7518, line: 52, type: !7545, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !7547)
!7545 = !DISubroutineType(types: !7546)
!7546 = !{null, !105, !13, !111}
!7547 = !{!7548, !7549, !7550, !7551}
!7548 = !DILocalVariable(name: "level", arg: 1, scope: !7544, file: !7518, line: 52, type: !105)
!7549 = !DILocalVariable(name: "data", arg: 2, scope: !7544, file: !7518, line: 52, type: !13)
!7550 = !DILocalVariable(name: "size", arg: 3, scope: !7544, file: !7518, line: 52, type: !111)
!7551 = !DILocalVariable(name: "data_buffer", scope: !7544, file: !7518, line: 54, type: !269)
!7552 = !DILocation(line: 0, scope: !7544)
!7553 = !DILocation(line: 55, column: 14, scope: !7544)
!7554 = !DILocation(line: 55, column: 2, scope: !7544)
!7555 = !DILocation(line: 56, column: 3, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7544, file: !7518, line: 55, column: 20)
!7557 = !DILocation(line: 57, column: 3, scope: !7556)
!7558 = !DILocation(line: 59, column: 7, scope: !7556)
!7559 = distinct !{!7559, !7554, !7560}
!7560 = !DILocation(line: 65, column: 2, scope: !7544)
!7561 = !DILocation(line: 66, column: 1, scope: !7544)
!7562 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3477, file: !3477, line: 175, type: !3478, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !7563)
!7563 = !{!7564}
!7564 = !DILocalVariable(name: "level", arg: 1, scope: !7562, file: !3477, line: 175, type: !105)
!7565 = !DILocation(line: 0, scope: !7562)
!7566 = !DILocation(line: 177, column: 2, scope: !7562)
!7567 = !DILocation(line: 189, column: 1, scope: !7562)
!7568 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !7518, file: !7518, line: 28, type: !7569, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !7571)
!7569 = !DISubroutineType(types: !7570)
!7570 = !{null, !269, !111}
!7571 = !{!7572, !7573, !7574, !7576, !7578}
!7572 = !DILocalVariable(name: "data", arg: 1, scope: !7568, file: !7518, line: 28, type: !269)
!7573 = !DILocalVariable(name: "length", arg: 2, scope: !7568, file: !7518, line: 28, type: !111)
!7574 = !DILocalVariable(name: "i", scope: !7575, file: !7518, line: 30, type: !111)
!7575 = distinct !DILexicalBlock(scope: !7568, file: !7518, line: 30, column: 2)
!7576 = !DILocalVariable(name: "i", scope: !7577, file: !7518, line: 40, type: !111)
!7577 = distinct !DILexicalBlock(scope: !7568, file: !7518, line: 40, column: 2)
!7578 = !DILocalVariable(name: "c", scope: !7579, file: !7518, line: 42, type: !170)
!7579 = distinct !DILexicalBlock(scope: !7580, file: !7518, line: 41, column: 19)
!7580 = distinct !DILexicalBlock(scope: !7581, file: !7518, line: 41, column: 7)
!7581 = distinct !DILexicalBlock(scope: !7582, file: !7518, line: 40, column: 54)
!7582 = distinct !DILexicalBlock(scope: !7577, file: !7518, line: 40, column: 2)
!7583 = !DILocation(line: 0, scope: !7568)
!7584 = !DILocation(line: 0, scope: !7575)
!7585 = !DILocation(line: 30, column: 2, scope: !7575)
!7586 = !DILocation(line: 38, column: 2, scope: !7568)
!7587 = !DILocation(line: 0, scope: !7577)
!7588 = !DILocation(line: 40, column: 2, scope: !7577)
!7589 = !DILocation(line: 31, column: 9, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7591, file: !7518, line: 31, column: 7)
!7591 = distinct !DILexicalBlock(scope: !7592, file: !7518, line: 30, column: 54)
!7592 = distinct !DILexicalBlock(scope: !7575, file: !7518, line: 30, column: 2)
!7593 = !DILocation(line: 31, column: 7, scope: !7591)
!7594 = !DILocation(line: 32, column: 35, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7590, file: !7518, line: 31, column: 19)
!7596 = !DILocation(line: 32, column: 20, scope: !7595)
!7597 = !DILocation(line: 32, column: 4, scope: !7595)
!7598 = !DILocation(line: 33, column: 3, scope: !7595)
!7599 = !DILocation(line: 34, column: 4, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7590, file: !7518, line: 33, column: 10)
!7601 = !DILocation(line: 30, column: 50, scope: !7592)
!7602 = !DILocation(line: 30, column: 24, scope: !7592)
!7603 = distinct !{!7603, !7585, !7604}
!7604 = !DILocation(line: 36, column: 2, scope: !7575)
!7605 = !DILocation(line: 49, column: 2, scope: !7568)
!7606 = !DILocation(line: 50, column: 1, scope: !7568)
!7607 = !DILocation(line: 41, column: 9, scope: !7580)
!7608 = !DILocation(line: 41, column: 7, scope: !7581)
!7609 = !DILocation(line: 42, column: 22, scope: !7579)
!7610 = !DILocation(line: 0, scope: !7579)
!7611 = !DILocation(line: 44, column: 25, scope: !7579)
!7612 = !DILocation(line: 44, column: 17, scope: !7579)
!7613 = !DILocation(line: 44, column: 33, scope: !7579)
!7614 = !DILocation(line: 44, column: 4, scope: !7579)
!7615 = !DILocation(line: 45, column: 3, scope: !7579)
!7616 = !DILocation(line: 46, column: 4, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7580, file: !7518, line: 45, column: 10)
!7618 = !DILocation(line: 40, column: 50, scope: !7582)
!7619 = !DILocation(line: 40, column: 24, scope: !7582)
!7620 = distinct !{!7620, !7588, !7621}
!7621 = !DILocation(line: 48, column: 2, scope: !7577)
!7622 = distinct !DISubprogram(name: "isprint", scope: !6581, file: !6581, line: 37, type: !448, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !7623)
!7623 = !{!7624}
!7624 = !DILocalVariable(name: "c", arg: 1, scope: !7622, file: !6581, line: 37, type: !105)
!7625 = !DILocation(line: 0, scope: !7622)
!7626 = !DILocation(line: 39, column: 38, scope: !7622)
!7627 = !DILocation(line: 39, column: 2, scope: !7622)
!7628 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7629, file: !7629, line: 57, type: !7630, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7676)
!7629 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7630 = !DISubroutineType(types: !7631)
!7631 = !{null, !32, !7632}
!7632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7633, size: 32)
!7633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7634)
!7634 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2787, line: 141, baseType: !7635)
!7635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2787, line: 97, size: 256, elements: !7636)
!7636 = !{!7637}
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7635, file: !2787, line: 107, baseType: !7638, size: 256)
!7638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2787, line: 98, size: 256, elements: !7639)
!7639 = !{!7640, !7645, !7650, !7655, !7660, !7665, !7670, !7675}
!7640 = !DIDerivedType(tag: DW_TAG_member, scope: !7638, file: !2787, line: 99, baseType: !7641, size: 32)
!7641 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7638, file: !2787, line: 99, size: 32, elements: !7642)
!7642 = !{!7643, !7644}
!7643 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7641, file: !2787, line: 99, baseType: !113, size: 32)
!7644 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7641, file: !2787, line: 99, baseType: !113, size: 32)
!7645 = !DIDerivedType(tag: DW_TAG_member, scope: !7638, file: !2787, line: 100, baseType: !7646, size: 32, offset: 32)
!7646 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7638, file: !2787, line: 100, size: 32, elements: !7647)
!7647 = !{!7648, !7649}
!7648 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7646, file: !2787, line: 100, baseType: !113, size: 32)
!7649 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7646, file: !2787, line: 100, baseType: !113, size: 32)
!7650 = !DIDerivedType(tag: DW_TAG_member, scope: !7638, file: !2787, line: 101, baseType: !7651, size: 32, offset: 64)
!7651 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7638, file: !2787, line: 101, size: 32, elements: !7652)
!7652 = !{!7653, !7654}
!7653 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7651, file: !2787, line: 101, baseType: !113, size: 32)
!7654 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7651, file: !2787, line: 101, baseType: !113, size: 32)
!7655 = !DIDerivedType(tag: DW_TAG_member, scope: !7638, file: !2787, line: 102, baseType: !7656, size: 32, offset: 96)
!7656 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7638, file: !2787, line: 102, size: 32, elements: !7657)
!7657 = !{!7658, !7659}
!7658 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7656, file: !2787, line: 102, baseType: !113, size: 32)
!7659 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7656, file: !2787, line: 102, baseType: !113, size: 32)
!7660 = !DIDerivedType(tag: DW_TAG_member, scope: !7638, file: !2787, line: 103, baseType: !7661, size: 32, offset: 128)
!7661 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7638, file: !2787, line: 103, size: 32, elements: !7662)
!7662 = !{!7663, !7664}
!7663 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7661, file: !2787, line: 103, baseType: !113, size: 32)
!7664 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7661, file: !2787, line: 103, baseType: !113, size: 32)
!7665 = !DIDerivedType(tag: DW_TAG_member, scope: !7638, file: !2787, line: 104, baseType: !7666, size: 32, offset: 160)
!7666 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7638, file: !2787, line: 104, size: 32, elements: !7667)
!7667 = !{!7668, !7669}
!7668 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7666, file: !2787, line: 104, baseType: !113, size: 32)
!7669 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7666, file: !2787, line: 104, baseType: !113, size: 32)
!7670 = !DIDerivedType(tag: DW_TAG_member, scope: !7638, file: !2787, line: 105, baseType: !7671, size: 32, offset: 192)
!7671 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7638, file: !2787, line: 105, size: 32, elements: !7672)
!7672 = !{!7673, !7674}
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7671, file: !2787, line: 105, baseType: !113, size: 32)
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7671, file: !2787, line: 105, baseType: !113, size: 32)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7638, file: !2787, line: 106, baseType: !113, size: 32, offset: 224)
!7676 = !{!7677, !7678}
!7677 = !DILocalVariable(name: "reason", arg: 1, scope: !7628, file: !7629, line: 57, type: !32)
!7678 = !DILocalVariable(name: "esf", arg: 2, scope: !7628, file: !7629, line: 57, type: !7632)
!7679 = !DILocation(line: 0, scope: !7628)
!7680 = !DILocation(line: 60, column: 10, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7628, file: !7629, line: 60, column: 6)
!7682 = !DILocation(line: 60, column: 6, scope: !7628)
!7683 = !DILocation(line: 61, column: 3, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7681, file: !7629, line: 60, column: 19)
!7685 = !DILocation(line: 62, column: 2, scope: !7684)
!7686 = !DILocation(line: 63, column: 2, scope: !7628)
!7687 = !DILocation(line: 64, column: 1, scope: !7628)
!7688 = distinct !DISubprogram(name: "esf_dump", scope: !7629, file: !7629, line: 20, type: !7689, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7691)
!7689 = !DISubroutineType(types: !7690)
!7690 = !{null, !7632}
!7691 = !{!7692}
!7692 = !DILocalVariable(name: "esf", arg: 1, scope: !7688, file: !7629, line: 20, type: !7632)
!7693 = !DILocation(line: 0, scope: !7688)
!7694 = !DILocation(line: 22, column: 2, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7696, file: !7629, line: 22, column: 2)
!7696 = distinct !DILexicalBlock(scope: !7697, file: !7629, line: 22, column: 2)
!7697 = distinct !DILexicalBlock(scope: !7698, file: !7629, line: 22, column: 2)
!7698 = distinct !DILexicalBlock(scope: !7688, file: !7629, line: 22, column: 2)
!7699 = !DILocation(line: 24, column: 2, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7701, file: !7629, line: 24, column: 2)
!7701 = distinct !DILexicalBlock(scope: !7702, file: !7629, line: 24, column: 2)
!7702 = distinct !DILexicalBlock(scope: !7703, file: !7629, line: 24, column: 2)
!7703 = distinct !DILexicalBlock(scope: !7688, file: !7629, line: 24, column: 2)
!7704 = !DILocation(line: 26, column: 2, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7706, file: !7629, line: 26, column: 2)
!7706 = distinct !DILexicalBlock(scope: !7707, file: !7629, line: 26, column: 2)
!7707 = distinct !DILexicalBlock(scope: !7708, file: !7629, line: 26, column: 2)
!7708 = distinct !DILexicalBlock(scope: !7688, file: !7629, line: 26, column: 2)
!7709 = !DILocation(line: 53, column: 2, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7711, file: !7629, line: 53, column: 2)
!7711 = distinct !DILexicalBlock(scope: !7712, file: !7629, line: 53, column: 2)
!7712 = distinct !DILexicalBlock(scope: !7713, file: !7629, line: 53, column: 2)
!7713 = distinct !DILexicalBlock(scope: !7688, file: !7629, line: 53, column: 2)
!7714 = !DILocation(line: 55, column: 1, scope: !7688)
!7715 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7629, file: !7629, line: 82, type: !7716, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7731)
!7716 = !DISubroutineType(types: !7717)
!7717 = !{null, !7632, !7718}
!7718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7719, size: 32)
!7719 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !200, line: 37, baseType: !7720)
!7720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !7721)
!7721 = !{!7722, !7723, !7724, !7725, !7726, !7727, !7728, !7729, !7730}
!7722 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7720, file: !200, line: 26, baseType: !113, size: 32)
!7723 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7720, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!7724 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7720, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!7725 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7720, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!7726 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7720, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!7727 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7720, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!7728 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7720, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!7729 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7720, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!7730 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7720, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!7731 = !{!7732, !7733, !7734}
!7732 = !DILocalVariable(name: "esf", arg: 1, scope: !7715, file: !7629, line: 82, type: !7632)
!7733 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7715, file: !7629, line: 82, type: !7718)
!7734 = !DILocalVariable(name: "reason", scope: !7715, file: !7629, line: 88, type: !32)
!7735 = !DILocation(line: 0, scope: !7715)
!7736 = !DILocation(line: 88, column: 35, scope: !7715)
!7737 = !DILocation(line: 108, column: 2, scope: !7715)
!7738 = !DILocation(line: 131, column: 1, scope: !7715)
!7739 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7629, file: !7629, line: 133, type: !7740, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7742)
!7740 = !DISubroutineType(types: !7741)
!7741 = !{null, !104}
!7742 = !{!7743, !7744, !7745}
!7743 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7739, file: !7629, line: 133, type: !104)
!7744 = !DILocalVariable(name: "ssf_contents", scope: !7739, file: !7629, line: 135, type: !1010)
!7745 = !DILocalVariable(name: "oops_esf", scope: !7739, file: !7629, line: 136, type: !7634)
!7746 = !DILocation(line: 0, scope: !7739)
!7747 = !DILocation(line: 136, column: 2, scope: !7739)
!7748 = !DILocation(line: 136, column: 15, scope: !7739)
!7749 = !DILocation(line: 139, column: 22, scope: !7739)
!7750 = !DILocation(line: 139, column: 17, scope: !7739)
!7751 = !DILocation(line: 139, column: 20, scope: !7739)
!7752 = !DILocation(line: 141, column: 2, scope: !7739)
!7753 = !DILocation(line: 142, column: 2, scope: !7739)
!7754 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7755, file: !7755, line: 40, type: !7496, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !7756)
!7755 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7756 = !{!7757}
!7757 = !DILocalVariable(name: "irq", arg: 1, scope: !7754, file: !7755, line: 40, type: !32)
!7758 = !DILocation(line: 0, scope: !7754)
!7759 = !DILocation(line: 42, column: 2, scope: !7754)
!7760 = !DILocation(line: 43, column: 1, scope: !7754)
!7761 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !679, file: !679, line: 1684, type: !7762, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !7764)
!7762 = !DISubroutineType(types: !7763)
!7763 = !{null, !911}
!7764 = !{!7765}
!7765 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7761, file: !679, line: 1684, type: !911)
!7766 = !DILocation(line: 0, scope: !7761)
!7767 = !DILocation(line: 1686, column: 23, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7761, file: !679, line: 1686, column: 7)
!7769 = !DILocation(line: 1686, column: 7, scope: !7761)
!7770 = !DILocation(line: 1688, column: 5, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7768, file: !679, line: 1687, column: 3)
!7772 = !{i64 2150444928}
!7773 = !DILocation(line: 1689, column: 81, scope: !7771)
!7774 = !DILocation(line: 1689, column: 60, scope: !7771)
!7775 = !DILocation(line: 1689, column: 34, scope: !7771)
!7776 = !DILocation(line: 1689, column: 5, scope: !7771)
!7777 = !DILocation(line: 1689, column: 43, scope: !7771)
!7778 = !DILocation(line: 1690, column: 5, scope: !7771)
!7779 = !{i64 2150445042}
!7780 = !DILocation(line: 1691, column: 3, scope: !7771)
!7781 = !DILocation(line: 1692, column: 1, scope: !7761)
!7782 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7755, file: !7755, line: 45, type: !7496, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !7783)
!7783 = !{!7784}
!7784 = !DILocalVariable(name: "irq", arg: 1, scope: !7782, file: !7755, line: 45, type: !32)
!7785 = !DILocation(line: 0, scope: !7782)
!7786 = !DILocation(line: 47, column: 2, scope: !7782)
!7787 = !DILocation(line: 48, column: 1, scope: !7782)
!7788 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !679, file: !679, line: 1722, type: !7762, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !7789)
!7789 = !{!7790}
!7790 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7788, file: !679, line: 1722, type: !911)
!7791 = !DILocation(line: 0, scope: !7788)
!7792 = !DILocation(line: 1724, column: 23, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7788, file: !679, line: 1724, column: 7)
!7794 = !DILocation(line: 1724, column: 7, scope: !7788)
!7795 = !DILocation(line: 1726, column: 81, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7793, file: !679, line: 1725, column: 3)
!7797 = !DILocation(line: 1726, column: 60, scope: !7796)
!7798 = !DILocation(line: 1726, column: 34, scope: !7796)
!7799 = !DILocation(line: 1726, column: 5, scope: !7796)
!7800 = !DILocation(line: 1726, column: 43, scope: !7796)
!7801 = !DILocation(line: 271, column: 3, scope: !7802, inlinedAt: !7804)
!7802 = distinct !DISubprogram(name: "__DSB", scope: !7803, file: !7803, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !397)
!7803 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7804 = distinct !DILocation(line: 1727, column: 5, scope: !7796)
!7805 = !{i64 2899311}
!7806 = !DILocation(line: 260, column: 3, scope: !7807, inlinedAt: !7808)
!7807 = distinct !DISubprogram(name: "__ISB", scope: !7803, file: !7803, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !397)
!7808 = distinct !DILocation(line: 1728, column: 5, scope: !7796)
!7809 = !{i64 2899028}
!7810 = !DILocation(line: 1729, column: 3, scope: !7796)
!7811 = !DILocation(line: 1730, column: 1, scope: !7788)
!7812 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7755, file: !7755, line: 50, type: !7813, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !7815)
!7813 = !DISubroutineType(types: !7814)
!7814 = !{!105, !32}
!7815 = !{!7816}
!7816 = !DILocalVariable(name: "irq", arg: 1, scope: !7812, file: !7755, line: 50, type: !32)
!7817 = !DILocation(line: 0, scope: !7812)
!7818 = !DILocation(line: 52, column: 20, scope: !7812)
!7819 = !DILocation(line: 52, column: 9, scope: !7812)
!7820 = !DILocation(line: 52, column: 41, scope: !7812)
!7821 = !DILocation(line: 52, column: 39, scope: !7812)
!7822 = !DILocation(line: 52, column: 2, scope: !7812)
!7823 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7755, file: !7755, line: 64, type: !7824, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !7826)
!7824 = !DISubroutineType(types: !7825)
!7825 = !{null, !32, !32, !113}
!7826 = !{!7827, !7828, !7829}
!7827 = !DILocalVariable(name: "irq", arg: 1, scope: !7823, file: !7755, line: 64, type: !32)
!7828 = !DILocalVariable(name: "prio", arg: 2, scope: !7823, file: !7755, line: 64, type: !32)
!7829 = !DILocalVariable(name: "flags", arg: 3, scope: !7823, file: !7755, line: 64, type: !113)
!7830 = !DILocation(line: 0, scope: !7823)
!7831 = !DILocation(line: 83, column: 8, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7833, file: !7755, line: 82, column: 9)
!7833 = distinct !DILexicalBlock(scope: !7823, file: !7755, line: 76, column: 6)
!7834 = !DILocation(line: 91, column: 2, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7836, file: !7755, line: 91, column: 2)
!7836 = distinct !DILexicalBlock(scope: !7823, file: !7755, line: 91, column: 2)
!7837 = !DILocation(line: 91, column: 2, scope: !7836)
!7838 = !DILocation(line: 91, column: 2, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7835, file: !7755, line: 91, column: 2)
!7840 = !DILocation(line: 95, column: 2, scope: !7823)
!7841 = !DILocation(line: 96, column: 1, scope: !7823)
!7842 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !679, file: !679, line: 1814, type: !7843, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !7845)
!7843 = !DISubroutineType(types: !7844)
!7844 = !{null, !911, !113}
!7845 = !{!7846, !7847}
!7846 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7842, file: !679, line: 1814, type: !911)
!7847 = !DILocalVariable(name: "priority", arg: 2, scope: !7842, file: !679, line: 1814, type: !113)
!7848 = !DILocation(line: 0, scope: !7842)
!7849 = !DILocation(line: 0, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7842, file: !679, line: 1816, column: 7)
!7851 = !DILocation(line: 1816, column: 7, scope: !7842)
!7852 = !DILocation(line: 1824, column: 1, scope: !7842)
!7853 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7755, file: !7755, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !7854)
!7854 = !{!7855}
!7855 = !DILocalVariable(name: "unused", arg: 1, scope: !7853, file: !7755, line: 155, type: !13)
!7856 = !DILocation(line: 0, scope: !7853)
!7857 = !DILocation(line: 159, column: 2, scope: !7853)
!7858 = !DILocation(line: 160, column: 1, scope: !7853)
!7859 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7860, file: !7860, line: 87, type: !266, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !397)
!7860 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7861 = !DILocation(line: 89, column: 2, scope: !7859)
!7862 = !DILocation(line: 90, column: 2, scope: !7859)
!7863 = !DILocation(line: 91, column: 1, scope: !7859)
!7864 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7860, file: !7860, line: 23, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!7865 = !DISubprogram(name: "z_arm_int_exit", scope: !7866, file: !7866, line: 153, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!7866 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7867 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7868, file: !7868, line: 256, type: !266, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !397)
!7868 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7869 = !DILocation(line: 258, column: 2, scope: !7867)
!7870 = !DILocation(line: 260, column: 2, scope: !7867)
!7871 = !DILocation(line: 262, column: 2, scope: !7867)
!7872 = !DILocation(line: 263, column: 2, scope: !7867)
!7873 = !DILocation(line: 267, column: 2, scope: !7867)
!7874 = !DILocation(line: 268, column: 2, scope: !7867)
!7875 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7868, file: !7868, line: 53, type: !266, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !397)
!7876 = !DILocation(line: 55, column: 12, scope: !7875)
!7877 = !DILocation(line: 271, column: 3, scope: !7878, inlinedAt: !7879)
!7878 = distinct !DISubprogram(name: "__DSB", scope: !7803, file: !7803, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !397)
!7879 = distinct !DILocation(line: 56, column: 2, scope: !7875)
!7880 = !{i64 2897982}
!7881 = !DILocation(line: 260, column: 3, scope: !7882, inlinedAt: !7883)
!7882 = distinct !DISubprogram(name: "__ISB", scope: !7803, file: !7803, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !397)
!7883 = distinct !DILocation(line: 57, column: 2, scope: !7875)
!7884 = !{i64 2897699}
!7885 = !DILocation(line: 58, column: 1, scope: !7875)
!7886 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7868, file: !7868, line: 96, type: !266, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !397)
!7887 = !DILocation(line: 103, column: 13, scope: !7886)
!7888 = !DILocation(line: 975, column: 3, scope: !7889, inlinedAt: !7892)
!7889 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7803, file: !7803, line: 971, type: !395, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !7890)
!7890 = !{!7891}
!7891 = !DILocalVariable(name: "result", scope: !7889, file: !7803, line: 973, type: !113)
!7892 = distinct !DILocation(line: 189, column: 16, scope: !7886)
!7893 = !{i64 2918812}
!7894 = !DILocation(line: 0, scope: !7889, inlinedAt: !7892)
!7895 = !DILocation(line: 189, column: 32, scope: !7886)
!7896 = !DILocalVariable(name: "control", arg: 1, scope: !7897, file: !7803, line: 1001, type: !113)
!7897 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7803, file: !7803, line: 1001, type: !7898, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !7900)
!7898 = !DISubroutineType(types: !7899)
!7899 = !{null, !113}
!7900 = !{!7896}
!7901 = !DILocation(line: 0, scope: !7897, inlinedAt: !7902)
!7902 = distinct !DILocation(line: 189, column: 2, scope: !7886)
!7903 = !DILocation(line: 1003, column: 3, scope: !7897, inlinedAt: !7902)
!7904 = !{i64 2919532}
!7905 = !DILocation(line: 260, column: 3, scope: !7882, inlinedAt: !7906)
!7906 = distinct !DILocation(line: 1004, column: 3, scope: !7897, inlinedAt: !7902)
!7907 = !DILocation(line: 191, column: 1, scope: !7886)
!7908 = distinct !DISubprogram(name: "arch_swap", scope: !7909, file: !7909, line: 33, type: !7813, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !7910)
!7909 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7910 = !{!7911}
!7911 = !DILocalVariable(name: "key", arg: 1, scope: !7908, file: !7909, line: 33, type: !32)
!7912 = !DILocation(line: 0, scope: !7908)
!7913 = !DILocation(line: 36, column: 2, scope: !7908)
!7914 = !DILocation(line: 36, column: 17, scope: !7908)
!7915 = !DILocation(line: 36, column: 25, scope: !7908)
!7916 = !DILocation(line: 37, column: 37, scope: !7908)
!7917 = !DILocation(line: 37, column: 17, scope: !7908)
!7918 = !DILocation(line: 37, column: 35, scope: !7908)
!7919 = !DILocation(line: 41, column: 12, scope: !7908)
!7920 = !DILocalVariable(name: "key", arg: 1, scope: !7921, file: !7485, line: 84, type: !32)
!7921 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7485, file: !7485, line: 84, type: !7496, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !7922)
!7922 = !{!7920}
!7923 = !DILocation(line: 0, scope: !7921, inlinedAt: !7924)
!7924 = distinct !DILocation(line: 44, column: 2, scope: !7908)
!7925 = !DILocation(line: 95, column: 2, scope: !7921, inlinedAt: !7924)
!7926 = !{i64 2040342}
!7927 = !DILocation(line: 53, column: 9, scope: !7908)
!7928 = !DILocation(line: 53, column: 24, scope: !7908)
!7929 = !DILocation(line: 53, column: 2, scope: !7908)
!7930 = distinct !DISubprogram(name: "arch_new_thread", scope: !7931, file: !7931, line: 56, type: !7932, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !8041)
!7931 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7932 = !DISubroutineType(types: !7933)
!7933 = !{null, !7934, !8036, !102, !254, !104, !104, !104}
!7934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7935, size: 32)
!7935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !7936)
!7936 = !{!7937, !7995, !8007, !8008, !8009, !8010, !8016, !8031}
!7937 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7935, file: !127, line: 247, baseType: !7938, size: 384)
!7938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !7939)
!7939 = !{!7940, !7964, !7971, !7972, !7973, !7982, !7983, !7984}
!7940 = !DIDerivedType(tag: DW_TAG_member, scope: !7938, file: !127, line: 60, baseType: !7941, size: 64)
!7941 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7938, file: !127, line: 60, size: 64, elements: !7942)
!7942 = !{!7943, !7958}
!7943 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7941, file: !127, line: 61, baseType: !7944, size: 64)
!7944 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !7945)
!7945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !7946)
!7946 = !{!7947, !7953}
!7947 = !DIDerivedType(tag: DW_TAG_member, scope: !7945, file: !137, line: 38, baseType: !7948, size: 32)
!7948 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7945, file: !137, line: 38, size: 32, elements: !7949)
!7949 = !{!7950, !7952}
!7950 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7948, file: !137, line: 39, baseType: !7951, size: 32)
!7951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7945, size: 32)
!7952 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7948, file: !137, line: 40, baseType: !7951, size: 32)
!7953 = !DIDerivedType(tag: DW_TAG_member, scope: !7945, file: !137, line: 42, baseType: !7954, size: 32, offset: 32)
!7954 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7945, file: !137, line: 42, size: 32, elements: !7955)
!7955 = !{!7956, !7957}
!7956 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7954, file: !137, line: 43, baseType: !7951, size: 32)
!7957 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7954, file: !137, line: 44, baseType: !7951, size: 32)
!7958 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7941, file: !127, line: 62, baseType: !7959, size: 64)
!7959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !7960)
!7960 = !{!7961}
!7961 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7959, file: !153, line: 50, baseType: !7962, size: 64)
!7962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7963, size: 64, elements: !158)
!7963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7959, size: 32)
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7938, file: !127, line: 68, baseType: !7965, size: 32, offset: 64)
!7965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7966, size: 32)
!7966 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !7967)
!7967 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !7968)
!7968 = !{!7969}
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7967, file: !163, line: 232, baseType: !7970, size: 64)
!7970 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !7945)
!7971 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7938, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!7972 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7938, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!7973 = !DIDerivedType(tag: DW_TAG_member, scope: !7938, file: !127, line: 90, baseType: !7974, size: 16, offset: 112)
!7974 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7938, file: !127, line: 90, size: 16, elements: !7975)
!7975 = !{!7976, !7981}
!7976 = !DIDerivedType(tag: DW_TAG_member, scope: !7974, file: !127, line: 91, baseType: !7977, size: 16)
!7977 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7974, file: !127, line: 91, size: 16, elements: !7978)
!7978 = !{!7979, !7980}
!7979 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7977, file: !127, line: 96, baseType: !179, size: 8)
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7977, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7974, file: !127, line: 100, baseType: !183, size: 16)
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7938, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7938, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!7984 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7938, file: !127, line: 131, baseType: !7985, size: 192, offset: 192)
!7985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !7986)
!7986 = !{!7987, !7988, !7994}
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7985, file: !163, line: 245, baseType: !7944, size: 64)
!7988 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7985, file: !163, line: 246, baseType: !7989, size: 32, offset: 64)
!7989 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !7990)
!7990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7991, size: 32)
!7991 = !DISubroutineType(types: !7992)
!7992 = !{null, !7993}
!7993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7985, size: 32)
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7985, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7935, file: !127, line: 250, baseType: !7996, size: 288, offset: 384)
!7996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !7997)
!7997 = !{!7998, !7999, !8000, !8001, !8002, !8003, !8004, !8005, !8006}
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7996, file: !200, line: 26, baseType: !113, size: 32)
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7996, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!8000 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7996, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!8001 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7996, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!8002 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7996, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!8003 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7996, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!8004 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7996, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!8005 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7996, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7996, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!8007 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7935, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7935, file: !127, line: 256, baseType: !7966, size: 64, offset: 704)
!8009 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7935, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7935, file: !127, line: 300, baseType: !8011, size: 96, offset: 800)
!8011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !8012)
!8012 = !{!8013, !8014, !8015}
!8013 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8011, file: !127, line: 153, baseType: !22, size: 32)
!8014 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8011, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!8015 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8011, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!8016 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7935, file: !127, line: 325, baseType: !8017, size: 32, offset: 896)
!8017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8018, size: 32)
!8018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !8019)
!8019 = !{!8020, !8026, !8027}
!8020 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8018, file: !122, line: 5074, baseType: !8021, size: 96)
!8021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !8022)
!8022 = !{!8023, !8024, !8025}
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8021, file: !226, line: 57, baseType: !229, size: 32)
!8024 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8021, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!8025 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8021, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!8026 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8018, file: !122, line: 5075, baseType: !7966, size: 64, offset: 96)
!8027 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8018, file: !122, line: 5076, baseType: !8028, size: 32, offset: 160)
!8028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !8029)
!8029 = !{!8030}
!8030 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8028, file: !236, line: 52, baseType: !22, size: 32)
!8031 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7935, file: !127, line: 343, baseType: !8032, size: 64, offset: 928)
!8032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !8033)
!8033 = !{!8034, !8035}
!8034 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8032, file: !200, line: 63, baseType: !113, size: 32)
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8032, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!8036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8037, size: 32)
!8037 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !8038)
!8038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !8039)
!8039 = !{!8040}
!8040 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8038, file: !249, line: 48, baseType: !103, size: 8)
!8041 = !{!8042, !8043, !8044, !8045, !8046, !8047, !8048, !8049}
!8042 = !DILocalVariable(name: "thread", arg: 1, scope: !7930, file: !7931, line: 56, type: !7934)
!8043 = !DILocalVariable(name: "stack", arg: 2, scope: !7930, file: !7931, line: 56, type: !8036)
!8044 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7930, file: !7931, line: 57, type: !102)
!8045 = !DILocalVariable(name: "entry", arg: 4, scope: !7930, file: !7931, line: 57, type: !254)
!8046 = !DILocalVariable(name: "p1", arg: 5, scope: !7930, file: !7931, line: 58, type: !104)
!8047 = !DILocalVariable(name: "p2", arg: 6, scope: !7930, file: !7931, line: 58, type: !104)
!8048 = !DILocalVariable(name: "p3", arg: 7, scope: !7930, file: !7931, line: 58, type: !104)
!8049 = !DILocalVariable(name: "iframe", scope: !7930, file: !7931, line: 60, type: !2785)
!8050 = !DILocation(line: 0, scope: !7930)
!8051 = !DILocation(line: 85, column: 11, scope: !7930)
!8052 = !DILocation(line: 93, column: 10, scope: !7930)
!8053 = !DILocation(line: 98, column: 13, scope: !7930)
!8054 = !DILocation(line: 100, column: 15, scope: !7930)
!8055 = !DILocation(line: 100, column: 10, scope: !7930)
!8056 = !DILocation(line: 100, column: 13, scope: !7930)
!8057 = !DILocation(line: 101, column: 15, scope: !7930)
!8058 = !DILocation(line: 101, column: 10, scope: !7930)
!8059 = !DILocation(line: 101, column: 13, scope: !7930)
!8060 = !DILocation(line: 102, column: 15, scope: !7930)
!8061 = !DILocation(line: 102, column: 10, scope: !7930)
!8062 = !DILocation(line: 102, column: 13, scope: !7930)
!8063 = !DILocation(line: 103, column: 15, scope: !7930)
!8064 = !DILocation(line: 103, column: 10, scope: !7930)
!8065 = !DILocation(line: 103, column: 13, scope: !7930)
!8066 = !DILocation(line: 106, column: 10, scope: !7930)
!8067 = !DILocation(line: 106, column: 15, scope: !7930)
!8068 = !DILocation(line: 122, column: 29, scope: !7930)
!8069 = !DILocation(line: 122, column: 23, scope: !7930)
!8070 = !DILocation(line: 122, column: 27, scope: !7930)
!8071 = !DILocation(line: 123, column: 15, scope: !7930)
!8072 = !DILocation(line: 123, column: 23, scope: !7930)
!8073 = !DILocation(line: 143, column: 1, scope: !7930)
!8074 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7931, file: !7931, line: 385, type: !8075, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !8077)
!8075 = !DISubroutineType(types: !8076)
!8076 = !{!113, !3764, !3764}
!8077 = !{!8078, !8079, !8080, !8083}
!8078 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !8074, file: !7931, line: 385, type: !3764)
!8079 = !DILocalVariable(name: "psp", arg: 2, scope: !8074, file: !7931, line: 385, type: !3764)
!8080 = !DILocalVariable(name: "thread", scope: !8074, file: !7931, line: 388, type: !8081)
!8081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8082, size: 32)
!8082 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7935)
!8083 = !DILocalVariable(name: "guard_len", scope: !8074, file: !7931, line: 405, type: !113)
!8084 = !DILocation(line: 0, scope: !8074)
!8085 = !DILocation(line: 388, column: 34, scope: !8074)
!8086 = !DILocation(line: 390, column: 13, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8074, file: !7931, line: 390, column: 6)
!8088 = !DILocation(line: 390, column: 6, scope: !8074)
!8089 = !DILocation(line: 438, column: 6, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8074, file: !7931, line: 438, column: 6)
!8091 = !DILocation(line: 438, column: 6, scope: !8074)
!8092 = !DILocation(line: 442, column: 3, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8090, file: !7931, line: 440, column: 22)
!8094 = !DILocation(line: 455, column: 1, scope: !8074)
!8095 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7931, file: !7931, line: 530, type: !8096, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !8098)
!8096 = !DISubroutineType(types: !8097)
!8097 = !{null, !7934, !102, !254}
!8098 = !{!8099, !8100, !8101}
!8099 = !DILocalVariable(name: "main_thread", arg: 1, scope: !8095, file: !7931, line: 530, type: !7934)
!8100 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !8095, file: !7931, line: 530, type: !102)
!8101 = !DILocalVariable(name: "_main", arg: 3, scope: !8095, file: !7931, line: 531, type: !254)
!8102 = !DILocation(line: 0, scope: !8095)
!8103 = !DILocation(line: 535, column: 11, scope: !8095)
!8104 = !DILocation(line: 560, column: 2, scope: !8095)
!8105 = !DILocation(line: 576, column: 2, scope: !8095)
!8106 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!8107 = !DILocation(line: 603, column: 2, scope: !8095)
!8108 = distinct !DISubprogram(name: "z_arm_fault", scope: !8109, file: !8109, line: 1036, type: !8110, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !8125)
!8109 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8110 = !DISubroutineType(types: !8111)
!8111 = !{null, !113, !113, !113, !8112}
!8112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8113, size: 32)
!8113 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !200, line: 37, baseType: !8114)
!8114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !8115)
!8115 = !{!8116, !8117, !8118, !8119, !8120, !8121, !8122, !8123, !8124}
!8116 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8114, file: !200, line: 26, baseType: !113, size: 32)
!8117 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8114, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!8118 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8114, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!8119 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8114, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!8120 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8114, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!8121 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8114, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!8122 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8114, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!8123 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8114, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!8124 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8114, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!8125 = !{!8126, !8127, !8128, !8129, !8130, !8131, !8132, !8133, !8134, !8135}
!8126 = !DILocalVariable(name: "msp", arg: 1, scope: !8108, file: !8109, line: 1036, type: !113)
!8127 = !DILocalVariable(name: "psp", arg: 2, scope: !8108, file: !8109, line: 1036, type: !113)
!8128 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8108, file: !8109, line: 1036, type: !113)
!8129 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !8108, file: !8109, line: 1037, type: !8112)
!8130 = !DILocalVariable(name: "reason", scope: !8108, file: !8109, line: 1039, type: !113)
!8131 = !DILocalVariable(name: "fault", scope: !8108, file: !8109, line: 1040, type: !105)
!8132 = !DILocalVariable(name: "recoverable", scope: !8108, file: !8109, line: 1041, type: !492)
!8133 = !DILocalVariable(name: "nested_exc", scope: !8108, file: !8109, line: 1041, type: !492)
!8134 = !DILocalVariable(name: "esf", scope: !8108, file: !8109, line: 1042, type: !2853)
!8135 = !DILocalVariable(name: "esf_copy", scope: !8108, file: !8109, line: 1047, type: !2854)
!8136 = !DILocation(line: 0, scope: !8108)
!8137 = !DILocation(line: 1040, column: 19, scope: !8108)
!8138 = !DILocation(line: 1041, column: 2, scope: !8108)
!8139 = !DILocation(line: 1047, column: 2, scope: !8108)
!8140 = !DILocation(line: 1047, column: 15, scope: !8108)
!8141 = !DILocalVariable(name: "key", arg: 1, scope: !8142, file: !7485, line: 84, type: !32)
!8142 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7485, file: !7485, line: 84, type: !7496, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !8143)
!8143 = !{!8141}
!8144 = !DILocation(line: 0, scope: !8142, inlinedAt: !8145)
!8145 = distinct !DILocation(line: 1050, column: 2, scope: !8108)
!8146 = !DILocation(line: 95, column: 2, scope: !8142, inlinedAt: !8145)
!8147 = !{i64 2073586}
!8148 = !DILocation(line: 1055, column: 9, scope: !8108)
!8149 = !DILocation(line: 1056, column: 2, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8151, file: !8109, line: 1056, column: 2)
!8151 = distinct !DILexicalBlock(scope: !8108, file: !8109, line: 1056, column: 2)
!8152 = !DILocation(line: 1056, column: 2, scope: !8151)
!8153 = !DILocation(line: 1056, column: 2, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8150, file: !8109, line: 1056, column: 2)
!8155 = !DILocation(line: 1040, column: 24, scope: !8108)
!8156 = !DILocation(line: 1063, column: 11, scope: !8108)
!8157 = !DILocation(line: 1064, column: 6, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8108, file: !8109, line: 1064, column: 6)
!8159 = !{i8 0, i8 2}
!8160 = !DILocation(line: 1064, column: 6, scope: !8108)
!8161 = !DILocation(line: 1070, column: 20, scope: !8108)
!8162 = !DILocation(line: 1070, column: 2, scope: !8108)
!8163 = !DILocation(line: 1089, column: 6, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8108, file: !8109, line: 1089, column: 6)
!8165 = !DILocation(line: 0, scope: !8164)
!8166 = !DILocation(line: 1089, column: 6, scope: !8108)
!8167 = !DILocation(line: 1090, column: 28, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8169, file: !8109, line: 1090, column: 7)
!8169 = distinct !DILexicalBlock(scope: !8164, file: !8109, line: 1089, column: 18)
!8170 = !DILocation(line: 1090, column: 44, scope: !8168)
!8171 = !DILocation(line: 1090, column: 7, scope: !8169)
!8172 = !DILocation(line: 1091, column: 24, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8168, file: !8109, line: 1090, column: 50)
!8174 = !DILocation(line: 1092, column: 3, scope: !8173)
!8175 = !DILocation(line: 1094, column: 23, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8164, file: !8109, line: 1093, column: 9)
!8177 = !DILocation(line: 1097, column: 2, scope: !8108)
!8178 = !DILocation(line: 1098, column: 1, scope: !8108)
!8179 = distinct !DISubprogram(name: "get_esf", scope: !8109, file: !8109, line: 894, type: !8180, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !8183)
!8180 = !DISubroutineType(types: !8181)
!8181 = !{!2853, !113, !113, !113, !8182}
!8182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 32)
!8183 = !{!8184, !8185, !8186, !8187, !8188, !8189}
!8184 = !DILocalVariable(name: "msp", arg: 1, scope: !8179, file: !8109, line: 894, type: !113)
!8185 = !DILocalVariable(name: "psp", arg: 2, scope: !8179, file: !8109, line: 894, type: !113)
!8186 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8179, file: !8109, line: 894, type: !113)
!8187 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !8179, file: !8109, line: 895, type: !8182)
!8188 = !DILocalVariable(name: "alternative_state_exc", scope: !8179, file: !8109, line: 897, type: !492)
!8189 = !DILocalVariable(name: "ptr_esf", scope: !8179, file: !8109, line: 898, type: !2853)
!8190 = !DILocation(line: 0, scope: !8179)
!8191 = !DILocation(line: 900, column: 14, scope: !8179)
!8192 = !DILocation(line: 902, column: 49, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8179, file: !8109, line: 902, column: 6)
!8194 = !DILocation(line: 902, column: 6, scope: !8179)
!8195 = !DILocation(line: 983, column: 44, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8179, file: !8109, line: 983, column: 6)
!8197 = !DILocation(line: 985, column: 3, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8199, file: !8109, line: 985, column: 3)
!8199 = distinct !DILexicalBlock(scope: !8200, file: !8109, line: 985, column: 3)
!8200 = distinct !DILexicalBlock(scope: !8201, file: !8109, line: 985, column: 3)
!8201 = distinct !DILexicalBlock(scope: !8202, file: !8109, line: 985, column: 3)
!8202 = distinct !DILexicalBlock(scope: !8196, file: !8109, line: 984, column: 47)
!8203 = !DILocation(line: 986, column: 3, scope: !8202)
!8204 = !DILocation(line: 983, column: 18, scope: !8196)
!8205 = !DILocation(line: 991, column: 7, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8207, file: !8109, line: 990, column: 30)
!8207 = distinct !DILexicalBlock(scope: !8179, file: !8109, line: 990, column: 6)
!8208 = !DILocation(line: 998, column: 16, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8210, file: !8109, line: 995, column: 10)
!8210 = distinct !DILexicalBlock(scope: !8206, file: !8109, line: 991, column: 7)
!8211 = !DILocation(line: 1002, column: 2, scope: !8179)
!8212 = !DILocation(line: 1003, column: 1, scope: !8179)
!8213 = distinct !DISubprogram(name: "fault_handle", scope: !8109, file: !8109, line: 786, type: !8214, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !8216)
!8214 = !DISubroutineType(types: !8215)
!8215 = !{!113, !2853, !105, !8182}
!8216 = !{!8217, !8218, !8219, !8220}
!8217 = !DILocalVariable(name: "esf", arg: 1, scope: !8213, file: !8109, line: 786, type: !2853)
!8218 = !DILocalVariable(name: "fault", arg: 2, scope: !8213, file: !8109, line: 786, type: !105)
!8219 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8213, file: !8109, line: 786, type: !8182)
!8220 = !DILocalVariable(name: "reason", scope: !8213, file: !8109, line: 788, type: !113)
!8221 = !DILocation(line: 0, scope: !8213)
!8222 = !DILocation(line: 790, column: 15, scope: !8213)
!8223 = !DILocation(line: 792, column: 2, scope: !8213)
!8224 = !DILocation(line: 794, column: 12, scope: !8225)
!8225 = distinct !DILexicalBlock(scope: !8213, file: !8109, line: 792, column: 17)
!8226 = !DILocation(line: 795, column: 3, scope: !8225)
!8227 = !DILocation(line: 800, column: 12, scope: !8225)
!8228 = !DILocation(line: 801, column: 3, scope: !8225)
!8229 = !DILocation(line: 803, column: 12, scope: !8225)
!8230 = !DILocation(line: 804, column: 3, scope: !8225)
!8231 = !DILocation(line: 806, column: 12, scope: !8225)
!8232 = !DILocation(line: 807, column: 3, scope: !8225)
!8233 = !DILocation(line: 814, column: 3, scope: !8225)
!8234 = !DILocation(line: 815, column: 3, scope: !8225)
!8235 = !DILocation(line: 820, column: 3, scope: !8225)
!8236 = !DILocation(line: 821, column: 3, scope: !8225)
!8237 = !DILocation(line: 829, column: 2, scope: !8213)
!8238 = distinct !DISubprogram(name: "hard_fault", scope: !8109, file: !8109, line: 709, type: !8239, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !8241)
!8239 = !DISubroutineType(types: !8240)
!8240 = !{!113, !2853, !8182}
!8241 = !{!8242, !8243, !8244}
!8242 = !DILocalVariable(name: "esf", arg: 1, scope: !8238, file: !8109, line: 709, type: !2853)
!8243 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8238, file: !8109, line: 709, type: !8182)
!8244 = !DILocalVariable(name: "reason", scope: !8238, file: !8109, line: 711, type: !113)
!8245 = !DILocation(line: 0, scope: !8238)
!8246 = !DILocation(line: 713, column: 2, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8248, file: !8109, line: 713, column: 2)
!8248 = distinct !DILexicalBlock(scope: !8249, file: !8109, line: 713, column: 2)
!8249 = distinct !DILexicalBlock(scope: !8250, file: !8109, line: 713, column: 2)
!8250 = distinct !DILexicalBlock(scope: !8238, file: !8109, line: 713, column: 2)
!8251 = !DILocation(line: 732, column: 15, scope: !8238)
!8252 = !DILocation(line: 734, column: 12, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8238, file: !8109, line: 734, column: 6)
!8254 = !DILocation(line: 734, column: 17, scope: !8253)
!8255 = !DILocation(line: 734, column: 41, scope: !8253)
!8256 = !DILocation(line: 734, column: 6, scope: !8238)
!8257 = !DILocation(line: 735, column: 3, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8259, file: !8109, line: 735, column: 3)
!8259 = distinct !DILexicalBlock(scope: !8260, file: !8109, line: 735, column: 3)
!8260 = distinct !DILexicalBlock(scope: !8261, file: !8109, line: 735, column: 3)
!8261 = distinct !DILexicalBlock(scope: !8262, file: !8109, line: 735, column: 3)
!8262 = distinct !DILexicalBlock(scope: !8253, file: !8109, line: 734, column: 47)
!8263 = !DILocation(line: 736, column: 2, scope: !8262)
!8264 = !DILocation(line: 736, column: 19, scope: !8265)
!8265 = distinct !DILexicalBlock(scope: !8253, file: !8109, line: 736, column: 13)
!8266 = !DILocation(line: 736, column: 49, scope: !8265)
!8267 = !DILocation(line: 736, column: 13, scope: !8253)
!8268 = !DILocation(line: 737, column: 3, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8270, file: !8109, line: 737, column: 3)
!8270 = distinct !DILexicalBlock(scope: !8271, file: !8109, line: 737, column: 3)
!8271 = distinct !DILexicalBlock(scope: !8272, file: !8109, line: 737, column: 3)
!8272 = distinct !DILexicalBlock(scope: !8273, file: !8109, line: 737, column: 3)
!8273 = distinct !DILexicalBlock(scope: !8265, file: !8109, line: 736, column: 55)
!8274 = !DILocation(line: 738, column: 2, scope: !8273)
!8275 = !DILocation(line: 738, column: 19, scope: !8276)
!8276 = distinct !DILexicalBlock(scope: !8265, file: !8109, line: 738, column: 13)
!8277 = !DILocation(line: 738, column: 24, scope: !8276)
!8278 = !DILocation(line: 738, column: 47, scope: !8276)
!8279 = !DILocation(line: 738, column: 13, scope: !8265)
!8280 = !DILocation(line: 739, column: 3, scope: !8281)
!8281 = distinct !DILexicalBlock(scope: !8282, file: !8109, line: 739, column: 3)
!8282 = distinct !DILexicalBlock(scope: !8283, file: !8109, line: 739, column: 3)
!8283 = distinct !DILexicalBlock(scope: !8284, file: !8109, line: 739, column: 3)
!8284 = distinct !DILexicalBlock(scope: !8285, file: !8109, line: 739, column: 3)
!8285 = distinct !DILexicalBlock(scope: !8276, file: !8109, line: 738, column: 53)
!8286 = !DILocation(line: 740, column: 7, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8285, file: !8109, line: 740, column: 7)
!8288 = !DILocation(line: 740, column: 7, scope: !8285)
!8289 = !DILocation(line: 741, column: 4, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8291, file: !8109, line: 741, column: 4)
!8291 = distinct !DILexicalBlock(scope: !8292, file: !8109, line: 741, column: 4)
!8292 = distinct !DILexicalBlock(scope: !8293, file: !8109, line: 741, column: 4)
!8293 = distinct !DILexicalBlock(scope: !8294, file: !8109, line: 741, column: 4)
!8294 = distinct !DILexicalBlock(scope: !8287, file: !8109, line: 740, column: 38)
!8295 = !DILocation(line: 742, column: 24, scope: !8294)
!8296 = !DILocation(line: 743, column: 3, scope: !8294)
!8297 = !DILocation(line: 743, column: 20, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8287, file: !8109, line: 743, column: 14)
!8299 = !DILocation(line: 743, column: 25, scope: !8298)
!8300 = !DILocation(line: 743, column: 52, scope: !8298)
!8301 = !DILocation(line: 743, column: 14, scope: !8287)
!8302 = !DILocation(line: 744, column: 13, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8298, file: !8109, line: 743, column: 58)
!8304 = !DILocation(line: 745, column: 3, scope: !8303)
!8305 = !DILocation(line: 745, column: 20, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8298, file: !8109, line: 745, column: 14)
!8307 = !DILocation(line: 745, column: 25, scope: !8306)
!8308 = !DILocation(line: 745, column: 52, scope: !8306)
!8309 = !DILocation(line: 745, column: 14, scope: !8298)
!8310 = !DILocation(line: 746, column: 13, scope: !8311)
!8311 = distinct !DILexicalBlock(scope: !8306, file: !8109, line: 745, column: 58)
!8312 = !DILocation(line: 747, column: 3, scope: !8311)
!8313 = !DILocation(line: 747, column: 20, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8306, file: !8109, line: 747, column: 14)
!8315 = !DILocation(line: 747, column: 52, scope: !8314)
!8316 = !DILocation(line: 747, column: 14, scope: !8306)
!8317 = !DILocation(line: 748, column: 13, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8314, file: !8109, line: 747, column: 58)
!8319 = !DILocation(line: 754, column: 4, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8321, file: !8109, line: 754, column: 4)
!8321 = distinct !DILexicalBlock(scope: !8322, file: !8109, line: 754, column: 4)
!8322 = distinct !DILexicalBlock(scope: !8323, file: !8109, line: 754, column: 4)
!8323 = distinct !DILexicalBlock(scope: !8314, file: !8109, line: 753, column: 10)
!8324 = !DILocation(line: 758, column: 3, scope: !8325)
!8325 = distinct !DILexicalBlock(scope: !8326, file: !8109, line: 758, column: 3)
!8326 = distinct !DILexicalBlock(scope: !8327, file: !8109, line: 758, column: 3)
!8327 = distinct !DILexicalBlock(scope: !8328, file: !8109, line: 758, column: 3)
!8328 = distinct !DILexicalBlock(scope: !8276, file: !8109, line: 757, column: 9)
!8329 = !DILocation(line: 766, column: 2, scope: !8238)
!8330 = distinct !DISubprogram(name: "mem_manage_fault", scope: !8109, file: !8109, line: 229, type: !8214, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !8331)
!8331 = !{!8332, !8333, !8334, !8335, !8336, !8337, !8340}
!8332 = !DILocalVariable(name: "esf", arg: 1, scope: !8330, file: !8109, line: 229, type: !2853)
!8333 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8330, file: !8109, line: 229, type: !105)
!8334 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8330, file: !8109, line: 230, type: !8182)
!8335 = !DILocalVariable(name: "reason", scope: !8330, file: !8109, line: 232, type: !113)
!8336 = !DILocalVariable(name: "mmfar", scope: !8330, file: !8109, line: 233, type: !113)
!8337 = !DILocalVariable(name: "temp", scope: !8338, file: !8109, line: 254, type: !113)
!8338 = distinct !DILexicalBlock(scope: !8339, file: !8109, line: 244, column: 48)
!8339 = distinct !DILexicalBlock(scope: !8330, file: !8109, line: 244, column: 6)
!8340 = !DILocalVariable(name: "min_stack_ptr", scope: !8341, file: !8109, line: 309, type: !113)
!8341 = distinct !DILexicalBlock(scope: !8342, file: !8109, line: 308, column: 43)
!8342 = distinct !DILexicalBlock(scope: !8343, file: !8109, line: 308, column: 7)
!8343 = distinct !DILexicalBlock(scope: !8344, file: !8109, line: 289, column: 40)
!8344 = distinct !DILexicalBlock(scope: !8330, file: !8109, line: 288, column: 6)
!8345 = !DILocation(line: 0, scope: !8330)
!8346 = !DILocation(line: 235, column: 2, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8348, file: !8109, line: 235, column: 2)
!8348 = distinct !DILexicalBlock(scope: !8349, file: !8109, line: 235, column: 2)
!8349 = distinct !DILexicalBlock(scope: !8350, file: !8109, line: 235, column: 2)
!8350 = distinct !DILexicalBlock(scope: !8330, file: !8109, line: 235, column: 2)
!8351 = !DILocation(line: 237, column: 12, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8330, file: !8109, line: 237, column: 6)
!8353 = !DILocation(line: 237, column: 17, scope: !8352)
!8354 = !DILocation(line: 237, column: 41, scope: !8352)
!8355 = !DILocation(line: 237, column: 6, scope: !8330)
!8356 = !DILocation(line: 238, column: 3, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8358, file: !8109, line: 238, column: 3)
!8358 = distinct !DILexicalBlock(scope: !8359, file: !8109, line: 238, column: 3)
!8359 = distinct !DILexicalBlock(scope: !8360, file: !8109, line: 238, column: 3)
!8360 = distinct !DILexicalBlock(scope: !8361, file: !8109, line: 238, column: 3)
!8361 = distinct !DILexicalBlock(scope: !8352, file: !8109, line: 237, column: 47)
!8362 = !DILocation(line: 240, column: 2, scope: !8361)
!8363 = !DILocation(line: 241, column: 12, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8330, file: !8109, line: 241, column: 6)
!8365 = !DILocation(line: 241, column: 17, scope: !8364)
!8366 = !DILocation(line: 241, column: 43, scope: !8364)
!8367 = !DILocation(line: 241, column: 6, scope: !8330)
!8368 = !DILocation(line: 242, column: 3, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8370, file: !8109, line: 242, column: 3)
!8370 = distinct !DILexicalBlock(scope: !8371, file: !8109, line: 242, column: 3)
!8371 = distinct !DILexicalBlock(scope: !8372, file: !8109, line: 242, column: 3)
!8372 = distinct !DILexicalBlock(scope: !8373, file: !8109, line: 242, column: 3)
!8373 = distinct !DILexicalBlock(scope: !8364, file: !8109, line: 241, column: 49)
!8374 = !DILocation(line: 243, column: 2, scope: !8373)
!8375 = !DILocation(line: 244, column: 12, scope: !8339)
!8376 = !DILocation(line: 244, column: 17, scope: !8339)
!8377 = !DILocation(line: 244, column: 42, scope: !8339)
!8378 = !DILocation(line: 244, column: 6, scope: !8330)
!8379 = !DILocation(line: 245, column: 3, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8381, file: !8109, line: 245, column: 3)
!8381 = distinct !DILexicalBlock(scope: !8382, file: !8109, line: 245, column: 3)
!8382 = distinct !DILexicalBlock(scope: !8383, file: !8109, line: 245, column: 3)
!8383 = distinct !DILexicalBlock(scope: !8338, file: !8109, line: 245, column: 3)
!8384 = !DILocation(line: 254, column: 24, scope: !8338)
!8385 = !DILocation(line: 0, scope: !8338)
!8386 = !DILocation(line: 256, column: 13, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8338, file: !8109, line: 256, column: 7)
!8388 = !DILocation(line: 256, column: 18, scope: !8387)
!8389 = !DILocation(line: 256, column: 44, scope: !8387)
!8390 = !DILocation(line: 256, column: 7, scope: !8338)
!8391 = !DILocation(line: 258, column: 4, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8393, file: !8109, line: 258, column: 4)
!8393 = distinct !DILexicalBlock(scope: !8394, file: !8109, line: 258, column: 4)
!8394 = distinct !DILexicalBlock(scope: !8395, file: !8109, line: 258, column: 4)
!8395 = distinct !DILexicalBlock(scope: !8396, file: !8109, line: 258, column: 4)
!8396 = distinct !DILexicalBlock(scope: !8387, file: !8109, line: 256, column: 50)
!8397 = !DILocation(line: 259, column: 24, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8396, file: !8109, line: 259, column: 8)
!8399 = !DILocation(line: 259, column: 8, scope: !8396)
!8400 = !DILocation(line: 261, column: 15, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8398, file: !8109, line: 259, column: 30)
!8402 = !DILocation(line: 262, column: 4, scope: !8401)
!8403 = !DILocation(line: 265, column: 12, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8330, file: !8109, line: 265, column: 6)
!8405 = !DILocation(line: 265, column: 17, scope: !8404)
!8406 = !DILocation(line: 265, column: 42, scope: !8404)
!8407 = !DILocation(line: 265, column: 6, scope: !8330)
!8408 = !DILocation(line: 266, column: 3, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8410, file: !8109, line: 266, column: 3)
!8410 = distinct !DILexicalBlock(scope: !8411, file: !8109, line: 266, column: 3)
!8411 = distinct !DILexicalBlock(scope: !8412, file: !8109, line: 266, column: 3)
!8412 = distinct !DILexicalBlock(scope: !8413, file: !8109, line: 266, column: 3)
!8413 = distinct !DILexicalBlock(scope: !8404, file: !8109, line: 265, column: 48)
!8414 = !DILocation(line: 267, column: 2, scope: !8413)
!8415 = !DILocation(line: 269, column: 12, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8330, file: !8109, line: 269, column: 6)
!8417 = !DILocation(line: 269, column: 17, scope: !8416)
!8418 = !DILocation(line: 269, column: 41, scope: !8416)
!8419 = !DILocation(line: 269, column: 6, scope: !8330)
!8420 = !DILocation(line: 270, column: 3, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8422, file: !8109, line: 270, column: 3)
!8422 = distinct !DILexicalBlock(scope: !8423, file: !8109, line: 270, column: 3)
!8423 = distinct !DILexicalBlock(scope: !8424, file: !8109, line: 270, column: 3)
!8424 = distinct !DILexicalBlock(scope: !8425, file: !8109, line: 270, column: 3)
!8425 = distinct !DILexicalBlock(scope: !8416, file: !8109, line: 269, column: 47)
!8426 = !DILocation(line: 272, column: 2, scope: !8425)
!8427 = !DILocation(line: 288, column: 12, scope: !8344)
!8428 = !DILocation(line: 288, column: 17, scope: !8344)
!8429 = !DILocation(line: 288, column: 41, scope: !8344)
!8430 = !DILocation(line: 289, column: 9, scope: !8344)
!8431 = !DILocation(line: 289, column: 14, scope: !8344)
!8432 = !DILocation(line: 288, column: 6, scope: !8330)
!8433 = !DILocation(line: 308, column: 12, scope: !8342)
!8434 = !DILocation(line: 308, column: 17, scope: !8342)
!8435 = !DILocation(line: 308, column: 7, scope: !8343)
!8436 = !DILocation(line: 310, column: 6, scope: !8341)
!8437 = !DILocation(line: 309, column: 29, scope: !8341)
!8438 = !DILocation(line: 0, scope: !8341)
!8439 = !DILocation(line: 312, column: 8, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8341, file: !8109, line: 312, column: 8)
!8441 = !DILocation(line: 312, column: 8, scope: !8341)
!8442 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !8443, file: !7803, line: 1099, type: !113)
!8443 = distinct !DISubprogram(name: "__set_PSP", scope: !7803, file: !7803, line: 1099, type: !7898, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !8444)
!8444 = !{!8442}
!8445 = !DILocation(line: 0, scope: !8443, inlinedAt: !8446)
!8446 = distinct !DILocation(line: 338, column: 5, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8440, file: !8109, line: 312, column: 23)
!8448 = !DILocation(line: 1101, column: 3, scope: !8443, inlinedAt: !8446)
!8449 = !{i64 2948951}
!8450 = !DILocation(line: 341, column: 4, scope: !8447)
!8451 = !DILocation(line: 342, column: 5, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8453, file: !8109, line: 342, column: 5)
!8453 = distinct !DILexicalBlock(scope: !8454, file: !8109, line: 342, column: 5)
!8454 = distinct !DILexicalBlock(scope: !8440, file: !8109, line: 341, column: 11)
!8455 = !DILocation(line: 342, column: 5, scope: !8453)
!8456 = !DILocation(line: 342, column: 5, scope: !8457)
!8457 = distinct !DILexicalBlock(scope: !8452, file: !8109, line: 342, column: 5)
!8458 = !DILocation(line: 360, column: 12, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8330, file: !8109, line: 360, column: 6)
!8460 = !DILocation(line: 360, column: 17, scope: !8459)
!8461 = !DILocation(line: 360, column: 41, scope: !8459)
!8462 = !DILocation(line: 360, column: 6, scope: !8330)
!8463 = !DILocation(line: 361, column: 14, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8459, file: !8109, line: 360, column: 47)
!8465 = !DILocation(line: 362, column: 2, scope: !8464)
!8466 = !DILocation(line: 366, column: 12, scope: !8330)
!8467 = !DILocation(line: 369, column: 15, scope: !8330)
!8468 = !DILocation(line: 371, column: 2, scope: !8330)
!8469 = distinct !DISubprogram(name: "bus_fault", scope: !8109, file: !8109, line: 383, type: !8470, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !8472)
!8470 = !DISubroutineType(types: !8471)
!8471 = !{!105, !2853, !105, !8182}
!8472 = !{!8473, !8474, !8475, !8476, !8477}
!8473 = !DILocalVariable(name: "esf", arg: 1, scope: !8469, file: !8109, line: 383, type: !2853)
!8474 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8469, file: !8109, line: 383, type: !105)
!8475 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8469, file: !8109, line: 383, type: !8182)
!8476 = !DILocalVariable(name: "reason", scope: !8469, file: !8109, line: 385, type: !113)
!8477 = !DILocalVariable(name: "bfar", scope: !8478, file: !8109, line: 405, type: !113)
!8478 = distinct !DILexicalBlock(scope: !8479, file: !8109, line: 395, column: 42)
!8479 = distinct !DILexicalBlock(scope: !8469, file: !8109, line: 395, column: 6)
!8480 = !DILocation(line: 0, scope: !8469)
!8481 = !DILocation(line: 387, column: 2, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8483, file: !8109, line: 387, column: 2)
!8483 = distinct !DILexicalBlock(scope: !8484, file: !8109, line: 387, column: 2)
!8484 = distinct !DILexicalBlock(scope: !8485, file: !8109, line: 387, column: 2)
!8485 = distinct !DILexicalBlock(scope: !8469, file: !8109, line: 387, column: 2)
!8486 = !DILocation(line: 389, column: 11, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8469, file: !8109, line: 389, column: 6)
!8488 = !DILocation(line: 389, column: 16, scope: !8487)
!8489 = !DILocation(line: 389, column: 6, scope: !8469)
!8490 = !DILocation(line: 390, column: 3, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8492, file: !8109, line: 390, column: 3)
!8492 = distinct !DILexicalBlock(scope: !8493, file: !8109, line: 390, column: 3)
!8493 = distinct !DILexicalBlock(scope: !8494, file: !8109, line: 390, column: 3)
!8494 = distinct !DILexicalBlock(scope: !8495, file: !8109, line: 390, column: 3)
!8495 = distinct !DILexicalBlock(scope: !8487, file: !8109, line: 389, column: 39)
!8496 = !DILocation(line: 391, column: 2, scope: !8495)
!8497 = !DILocation(line: 392, column: 11, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8469, file: !8109, line: 392, column: 6)
!8499 = !DILocation(line: 392, column: 16, scope: !8498)
!8500 = !DILocation(line: 392, column: 6, scope: !8469)
!8501 = !DILocation(line: 393, column: 3, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8503, file: !8109, line: 393, column: 3)
!8503 = distinct !DILexicalBlock(scope: !8504, file: !8109, line: 393, column: 3)
!8504 = distinct !DILexicalBlock(scope: !8505, file: !8109, line: 393, column: 3)
!8505 = distinct !DILexicalBlock(scope: !8506, file: !8109, line: 393, column: 3)
!8506 = distinct !DILexicalBlock(scope: !8498, file: !8109, line: 392, column: 41)
!8507 = !DILocation(line: 394, column: 2, scope: !8506)
!8508 = !DILocation(line: 395, column: 11, scope: !8479)
!8509 = !DILocation(line: 395, column: 16, scope: !8479)
!8510 = !DILocation(line: 395, column: 6, scope: !8469)
!8511 = !DILocation(line: 396, column: 3, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8513, file: !8109, line: 396, column: 3)
!8513 = distinct !DILexicalBlock(scope: !8514, file: !8109, line: 396, column: 3)
!8514 = distinct !DILexicalBlock(scope: !8515, file: !8109, line: 396, column: 3)
!8515 = distinct !DILexicalBlock(scope: !8478, file: !8109, line: 396, column: 3)
!8516 = !DILocation(line: 405, column: 3, scope: !8478)
!8517 = !DILocation(line: 0, scope: !8478)
!8518 = !DILocation(line: 407, column: 13, scope: !8519)
!8519 = distinct !DILexicalBlock(scope: !8478, file: !8109, line: 407, column: 7)
!8520 = !DILocation(line: 407, column: 18, scope: !8519)
!8521 = !DILocation(line: 407, column: 44, scope: !8519)
!8522 = !DILocation(line: 407, column: 7, scope: !8478)
!8523 = !DILocation(line: 408, column: 4, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8525, file: !8109, line: 408, column: 4)
!8525 = distinct !DILexicalBlock(scope: !8526, file: !8109, line: 408, column: 4)
!8526 = distinct !DILexicalBlock(scope: !8527, file: !8109, line: 408, column: 4)
!8527 = distinct !DILexicalBlock(scope: !8528, file: !8109, line: 408, column: 4)
!8528 = distinct !DILexicalBlock(scope: !8519, file: !8109, line: 407, column: 50)
!8529 = !DILocation(line: 409, column: 24, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8528, file: !8109, line: 409, column: 8)
!8531 = !DILocation(line: 409, column: 8, scope: !8528)
!8532 = !DILocation(line: 411, column: 15, scope: !8533)
!8533 = distinct !DILexicalBlock(scope: !8530, file: !8109, line: 409, column: 30)
!8534 = !DILocation(line: 412, column: 4, scope: !8533)
!8535 = !DILocation(line: 415, column: 11, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8469, file: !8109, line: 415, column: 6)
!8537 = !DILocation(line: 415, column: 16, scope: !8536)
!8538 = !DILocation(line: 415, column: 6, scope: !8469)
!8539 = !DILocation(line: 416, column: 3, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8541, file: !8109, line: 416, column: 3)
!8541 = distinct !DILexicalBlock(scope: !8542, file: !8109, line: 416, column: 3)
!8542 = distinct !DILexicalBlock(scope: !8543, file: !8109, line: 416, column: 3)
!8543 = distinct !DILexicalBlock(scope: !8544, file: !8109, line: 416, column: 3)
!8544 = distinct !DILexicalBlock(scope: !8536, file: !8109, line: 415, column: 44)
!8545 = !DILocation(line: 417, column: 2, scope: !8544)
!8546 = !DILocation(line: 418, column: 12, scope: !8547)
!8547 = distinct !DILexicalBlock(scope: !8469, file: !8109, line: 418, column: 6)
!8548 = !DILocation(line: 418, column: 17, scope: !8547)
!8549 = !DILocation(line: 418, column: 41, scope: !8547)
!8550 = !DILocation(line: 418, column: 6, scope: !8469)
!8551 = !DILocation(line: 423, column: 18, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !8547, file: !8109, line: 423, column: 13)
!8553 = !DILocation(line: 423, column: 23, scope: !8552)
!8554 = !DILocation(line: 423, column: 13, scope: !8547)
!8555 = !DILocation(line: 0, scope: !8547)
!8556 = !DILocation(line: 524, column: 12, scope: !8469)
!8557 = !DILocation(line: 526, column: 15, scope: !8469)
!8558 = !DILocation(line: 528, column: 2, scope: !8469)
!8559 = distinct !DISubprogram(name: "usage_fault", scope: !8109, file: !8109, line: 539, type: !8560, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !8564)
!8560 = !DISubroutineType(types: !8561)
!8561 = !{!113, !8562}
!8562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8563, size: 32)
!8563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2854)
!8564 = !{!8565, !8566}
!8565 = !DILocalVariable(name: "esf", arg: 1, scope: !8559, file: !8109, line: 539, type: !8562)
!8566 = !DILocalVariable(name: "reason", scope: !8559, file: !8109, line: 541, type: !113)
!8567 = !DILocation(line: 0, scope: !8559)
!8568 = !DILocation(line: 543, column: 2, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8570, file: !8109, line: 543, column: 2)
!8570 = distinct !DILexicalBlock(scope: !8571, file: !8109, line: 543, column: 2)
!8571 = distinct !DILexicalBlock(scope: !8572, file: !8109, line: 543, column: 2)
!8572 = distinct !DILexicalBlock(scope: !8559, file: !8109, line: 543, column: 2)
!8573 = !DILocation(line: 546, column: 12, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !8559, file: !8109, line: 546, column: 6)
!8575 = !DILocation(line: 546, column: 17, scope: !8574)
!8576 = !DILocation(line: 546, column: 43, scope: !8574)
!8577 = !DILocation(line: 546, column: 6, scope: !8559)
!8578 = !DILocation(line: 547, column: 3, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8580, file: !8109, line: 547, column: 3)
!8580 = distinct !DILexicalBlock(scope: !8581, file: !8109, line: 547, column: 3)
!8581 = distinct !DILexicalBlock(scope: !8582, file: !8109, line: 547, column: 3)
!8582 = distinct !DILexicalBlock(scope: !8583, file: !8109, line: 547, column: 3)
!8583 = distinct !DILexicalBlock(scope: !8574, file: !8109, line: 546, column: 49)
!8584 = !DILocation(line: 548, column: 2, scope: !8583)
!8585 = !DILocation(line: 549, column: 12, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8559, file: !8109, line: 549, column: 6)
!8587 = !DILocation(line: 549, column: 17, scope: !8586)
!8588 = !DILocation(line: 549, column: 43, scope: !8586)
!8589 = !DILocation(line: 549, column: 6, scope: !8559)
!8590 = !DILocation(line: 550, column: 3, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8592, file: !8109, line: 550, column: 3)
!8592 = distinct !DILexicalBlock(scope: !8593, file: !8109, line: 550, column: 3)
!8593 = distinct !DILexicalBlock(scope: !8594, file: !8109, line: 550, column: 3)
!8594 = distinct !DILexicalBlock(scope: !8595, file: !8109, line: 550, column: 3)
!8595 = distinct !DILexicalBlock(scope: !8586, file: !8109, line: 549, column: 49)
!8596 = !DILocation(line: 551, column: 2, scope: !8595)
!8597 = !DILocation(line: 567, column: 12, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !8559, file: !8109, line: 567, column: 6)
!8599 = !DILocation(line: 567, column: 17, scope: !8598)
!8600 = !DILocation(line: 567, column: 38, scope: !8598)
!8601 = !DILocation(line: 567, column: 6, scope: !8559)
!8602 = !DILocation(line: 568, column: 3, scope: !8603)
!8603 = distinct !DILexicalBlock(scope: !8604, file: !8109, line: 568, column: 3)
!8604 = distinct !DILexicalBlock(scope: !8605, file: !8109, line: 568, column: 3)
!8605 = distinct !DILexicalBlock(scope: !8606, file: !8109, line: 568, column: 3)
!8606 = distinct !DILexicalBlock(scope: !8607, file: !8109, line: 568, column: 3)
!8607 = distinct !DILexicalBlock(scope: !8598, file: !8109, line: 567, column: 44)
!8608 = !DILocation(line: 569, column: 2, scope: !8607)
!8609 = !DILocation(line: 570, column: 12, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8559, file: !8109, line: 570, column: 6)
!8611 = !DILocation(line: 570, column: 17, scope: !8610)
!8612 = !DILocation(line: 570, column: 39, scope: !8610)
!8613 = !DILocation(line: 570, column: 6, scope: !8559)
!8614 = !DILocation(line: 571, column: 3, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8616, file: !8109, line: 571, column: 3)
!8616 = distinct !DILexicalBlock(scope: !8617, file: !8109, line: 571, column: 3)
!8617 = distinct !DILexicalBlock(scope: !8618, file: !8109, line: 571, column: 3)
!8618 = distinct !DILexicalBlock(scope: !8619, file: !8109, line: 571, column: 3)
!8619 = distinct !DILexicalBlock(scope: !8610, file: !8109, line: 570, column: 45)
!8620 = !DILocation(line: 572, column: 2, scope: !8619)
!8621 = !DILocation(line: 573, column: 12, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8559, file: !8109, line: 573, column: 6)
!8623 = !DILocation(line: 573, column: 17, scope: !8622)
!8624 = !DILocation(line: 573, column: 42, scope: !8622)
!8625 = !DILocation(line: 573, column: 6, scope: !8559)
!8626 = !DILocation(line: 574, column: 3, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8628, file: !8109, line: 574, column: 3)
!8628 = distinct !DILexicalBlock(scope: !8629, file: !8109, line: 574, column: 3)
!8629 = distinct !DILexicalBlock(scope: !8630, file: !8109, line: 574, column: 3)
!8630 = distinct !DILexicalBlock(scope: !8631, file: !8109, line: 574, column: 3)
!8631 = distinct !DILexicalBlock(scope: !8622, file: !8109, line: 573, column: 48)
!8632 = !DILocation(line: 575, column: 2, scope: !8631)
!8633 = !DILocation(line: 576, column: 12, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8559, file: !8109, line: 576, column: 6)
!8635 = !DILocation(line: 576, column: 17, scope: !8634)
!8636 = !DILocation(line: 576, column: 44, scope: !8634)
!8637 = !DILocation(line: 576, column: 6, scope: !8559)
!8638 = !DILocation(line: 577, column: 3, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8640, file: !8109, line: 577, column: 3)
!8640 = distinct !DILexicalBlock(scope: !8641, file: !8109, line: 577, column: 3)
!8641 = distinct !DILexicalBlock(scope: !8642, file: !8109, line: 577, column: 3)
!8642 = distinct !DILexicalBlock(scope: !8643, file: !8109, line: 577, column: 3)
!8643 = distinct !DILexicalBlock(scope: !8634, file: !8109, line: 576, column: 50)
!8644 = !DILocation(line: 578, column: 2, scope: !8643)
!8645 = !DILocation(line: 581, column: 12, scope: !8559)
!8646 = !DILocation(line: 583, column: 2, scope: !8559)
!8647 = distinct !DISubprogram(name: "debug_monitor", scope: !8109, file: !8109, line: 632, type: !8648, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !8650)
!8648 = !DISubroutineType(types: !8649)
!8649 = !{null, !2853, !8182}
!8650 = !{!8651, !8652}
!8651 = !DILocalVariable(name: "esf", arg: 1, scope: !8647, file: !8109, line: 632, type: !2853)
!8652 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8647, file: !8109, line: 632, type: !8182)
!8653 = !DILocation(line: 0, scope: !8647)
!8654 = !DILocation(line: 634, column: 15, scope: !8647)
!8655 = !DILocation(line: 636, column: 2, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8657, file: !8109, line: 636, column: 2)
!8657 = distinct !DILexicalBlock(scope: !8658, file: !8109, line: 636, column: 2)
!8658 = distinct !DILexicalBlock(scope: !8659, file: !8109, line: 636, column: 2)
!8659 = distinct !DILexicalBlock(scope: !8647, file: !8109, line: 636, column: 2)
!8660 = !DILocation(line: 652, column: 1, scope: !8647)
!8661 = distinct !DISubprogram(name: "reserved_exception", scope: !8109, file: !8109, line: 776, type: !8662, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !8664)
!8662 = !DISubroutineType(types: !8663)
!8663 = !{null, !8562, !105}
!8664 = !{!8665, !8666}
!8665 = !DILocalVariable(name: "esf", arg: 1, scope: !8661, file: !8109, line: 776, type: !8562)
!8666 = !DILocalVariable(name: "fault", arg: 2, scope: !8661, file: !8109, line: 776, type: !105)
!8667 = !DILocation(line: 0, scope: !8661)
!8668 = !DILocation(line: 780, column: 2, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !8670, file: !8109, line: 780, column: 2)
!8670 = distinct !DILexicalBlock(scope: !8671, file: !8109, line: 780, column: 2)
!8671 = distinct !DILexicalBlock(scope: !8672, file: !8109, line: 780, column: 2)
!8672 = distinct !DILexicalBlock(scope: !8661, file: !8109, line: 780, column: 2)
!8673 = !DILocation(line: 783, column: 1, scope: !8661)
!8674 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !8109, file: !8109, line: 658, type: !8675, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !8677)
!8675 = !DISubroutineType(types: !8676)
!8676 = !{!492, !2853}
!8677 = !{!8678, !8679, !8680}
!8678 = !DILocalVariable(name: "esf", arg: 1, scope: !8674, file: !8109, line: 658, type: !2853)
!8679 = !DILocalVariable(name: "ret_addr", scope: !8674, file: !8109, line: 660, type: !2625)
!8680 = !DILocalVariable(name: "fault_insn", scope: !8674, file: !8109, line: 686, type: !183)
!8681 = !DILocation(line: 0, scope: !8674)
!8682 = !DILocation(line: 660, column: 46, scope: !8674)
!8683 = !DILocation(line: 660, column: 23, scope: !8674)
!8684 = !DILocation(line: 682, column: 11, scope: !8674)
!8685 = !DILocation(line: 271, column: 3, scope: !8686, inlinedAt: !8687)
!8686 = distinct !DISubprogram(name: "__DSB", scope: !7803, file: !7803, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !397)
!8687 = distinct !DILocation(line: 683, column: 2, scope: !8674)
!8688 = !{i64 2925086}
!8689 = !DILocation(line: 260, column: 3, scope: !8690, inlinedAt: !8691)
!8690 = distinct !DISubprogram(name: "__ISB", scope: !7803, file: !7803, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !397)
!8691 = distinct !DILocation(line: 684, column: 2, scope: !8674)
!8692 = !{i64 2924803}
!8693 = !DILocation(line: 686, column: 35, scope: !8674)
!8694 = !DILocation(line: 686, column: 24, scope: !8674)
!8695 = !DILocation(line: 688, column: 11, scope: !8674)
!8696 = !DILocation(line: 271, column: 3, scope: !8686, inlinedAt: !8697)
!8697 = distinct !DILocation(line: 689, column: 2, scope: !8674)
!8698 = !DILocation(line: 260, column: 3, scope: !8690, inlinedAt: !8699)
!8699 = distinct !DILocation(line: 690, column: 2, scope: !8674)
!8700 = !DILocation(line: 693, column: 45, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8674, file: !8109, line: 693, column: 6)
!8702 = !DILocation(line: 699, column: 1, scope: !8674)
!8703 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !8109, file: !8109, line: 1107, type: !266, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !397)
!8704 = !DILocation(line: 1111, column: 11, scope: !8703)
!8705 = !DILocation(line: 1136, column: 1, scope: !8703)
!8706 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8707, file: !8707, line: 26, type: !266, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !8708)
!8707 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8708 = !{!8709}
!8709 = !DILocalVariable(name: "irq", scope: !8706, file: !8707, line: 28, type: !105)
!8710 = !DILocation(line: 0, scope: !8706)
!8711 = !DILocation(line: 30, column: 2, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8706, file: !8707, line: 30, column: 2)
!8713 = !DILocation(line: 31, column: 3, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8715, file: !8707, line: 30, column: 39)
!8715 = distinct !DILexicalBlock(scope: !8712, file: !8707, line: 30, column: 2)
!8716 = !DILocation(line: 30, column: 35, scope: !8715)
!8717 = !DILocation(line: 30, column: 13, scope: !8715)
!8718 = distinct !{!8718, !8711, !8719}
!8719 = !DILocation(line: 32, column: 2, scope: !8712)
!8720 = !DILocation(line: 33, column: 1, scope: !8706)
!8721 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !679, file: !679, line: 1814, type: !7843, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !8722)
!8722 = !{!8723, !8724}
!8723 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8721, file: !679, line: 1814, type: !911)
!8724 = !DILocalVariable(name: "priority", arg: 2, scope: !8721, file: !679, line: 1814, type: !113)
!8725 = !DILocation(line: 0, scope: !8721)
!8726 = !DILocation(line: 1816, column: 7, scope: !8721)
!8727 = !DILocation(line: 0, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8721, file: !679, line: 1816, column: 7)
!8729 = !DILocation(line: 1824, column: 1, scope: !8721)
!8730 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8731, file: !8731, line: 27, type: !8732, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !8837)
!8731 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8732 = !DISubroutineType(types: !8733)
!8733 = !{null, !8734}
!8734 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !8735)
!8735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8736, size: 32)
!8736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !8737)
!8737 = !{!8738, !8796, !8808, !8809, !8810, !8811, !8817, !8832}
!8738 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8736, file: !127, line: 247, baseType: !8739, size: 384)
!8739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !8740)
!8740 = !{!8741, !8765, !8772, !8773, !8774, !8783, !8784, !8785}
!8741 = !DIDerivedType(tag: DW_TAG_member, scope: !8739, file: !127, line: 60, baseType: !8742, size: 64)
!8742 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8739, file: !127, line: 60, size: 64, elements: !8743)
!8743 = !{!8744, !8759}
!8744 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8742, file: !127, line: 61, baseType: !8745, size: 64)
!8745 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !8746)
!8746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !8747)
!8747 = !{!8748, !8754}
!8748 = !DIDerivedType(tag: DW_TAG_member, scope: !8746, file: !137, line: 38, baseType: !8749, size: 32)
!8749 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8746, file: !137, line: 38, size: 32, elements: !8750)
!8750 = !{!8751, !8753}
!8751 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8749, file: !137, line: 39, baseType: !8752, size: 32)
!8752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8746, size: 32)
!8753 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8749, file: !137, line: 40, baseType: !8752, size: 32)
!8754 = !DIDerivedType(tag: DW_TAG_member, scope: !8746, file: !137, line: 42, baseType: !8755, size: 32, offset: 32)
!8755 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8746, file: !137, line: 42, size: 32, elements: !8756)
!8756 = !{!8757, !8758}
!8757 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8755, file: !137, line: 43, baseType: !8752, size: 32)
!8758 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8755, file: !137, line: 44, baseType: !8752, size: 32)
!8759 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8742, file: !127, line: 62, baseType: !8760, size: 64)
!8760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !8761)
!8761 = !{!8762}
!8762 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8760, file: !153, line: 50, baseType: !8763, size: 64)
!8763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8764, size: 64, elements: !158)
!8764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8760, size: 32)
!8765 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8739, file: !127, line: 68, baseType: !8766, size: 32, offset: 64)
!8766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8767, size: 32)
!8767 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !8768)
!8768 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !8769)
!8769 = !{!8770}
!8770 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8768, file: !163, line: 232, baseType: !8771, size: 64)
!8771 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !8746)
!8772 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8739, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!8773 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8739, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!8774 = !DIDerivedType(tag: DW_TAG_member, scope: !8739, file: !127, line: 90, baseType: !8775, size: 16, offset: 112)
!8775 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8739, file: !127, line: 90, size: 16, elements: !8776)
!8776 = !{!8777, !8782}
!8777 = !DIDerivedType(tag: DW_TAG_member, scope: !8775, file: !127, line: 91, baseType: !8778, size: 16)
!8778 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8775, file: !127, line: 91, size: 16, elements: !8779)
!8779 = !{!8780, !8781}
!8780 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8778, file: !127, line: 96, baseType: !179, size: 8)
!8781 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8778, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!8782 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8775, file: !127, line: 100, baseType: !183, size: 16)
!8783 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8739, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!8784 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8739, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!8785 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8739, file: !127, line: 131, baseType: !8786, size: 192, offset: 192)
!8786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !8787)
!8787 = !{!8788, !8789, !8795}
!8788 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8786, file: !163, line: 245, baseType: !8745, size: 64)
!8789 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8786, file: !163, line: 246, baseType: !8790, size: 32, offset: 64)
!8790 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !8791)
!8791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8792, size: 32)
!8792 = !DISubroutineType(types: !8793)
!8793 = !{null, !8794}
!8794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8786, size: 32)
!8795 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8786, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!8796 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8736, file: !127, line: 250, baseType: !8797, size: 288, offset: 384)
!8797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !8798)
!8798 = !{!8799, !8800, !8801, !8802, !8803, !8804, !8805, !8806, !8807}
!8799 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8797, file: !200, line: 26, baseType: !113, size: 32)
!8800 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8797, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!8801 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8797, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!8802 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8797, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!8803 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8797, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!8804 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8797, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!8805 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8797, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!8806 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8797, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!8807 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8797, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!8808 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8736, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!8809 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8736, file: !127, line: 256, baseType: !8767, size: 64, offset: 704)
!8810 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8736, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!8811 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8736, file: !127, line: 300, baseType: !8812, size: 96, offset: 800)
!8812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !8813)
!8813 = !{!8814, !8815, !8816}
!8814 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8812, file: !127, line: 153, baseType: !22, size: 32)
!8815 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8812, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!8816 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8812, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!8817 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8736, file: !127, line: 325, baseType: !8818, size: 32, offset: 896)
!8818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8819, size: 32)
!8819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !8820)
!8820 = !{!8821, !8827, !8828}
!8821 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8819, file: !122, line: 5074, baseType: !8822, size: 96)
!8822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !8823)
!8823 = !{!8824, !8825, !8826}
!8824 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8822, file: !226, line: 57, baseType: !229, size: 32)
!8825 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8822, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!8826 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8822, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!8827 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8819, file: !122, line: 5075, baseType: !8767, size: 64, offset: 96)
!8828 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8819, file: !122, line: 5076, baseType: !8829, size: 32, offset: 160)
!8829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !8830)
!8830 = !{!8831}
!8831 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8829, file: !236, line: 52, baseType: !22, size: 32)
!8832 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8736, file: !127, line: 343, baseType: !8833, size: 64, offset: 928)
!8833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !8834)
!8834 = !{!8835, !8836}
!8835 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8833, file: !200, line: 63, baseType: !113, size: 32)
!8836 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8833, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!8837 = !{!8838}
!8838 = !DILocalVariable(name: "thread", arg: 1, scope: !8730, file: !8731, line: 27, type: !8734)
!8839 = !DILocation(line: 0, scope: !8730)
!8840 = !DILocation(line: 29, column: 6, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8730, file: !8731, line: 29, column: 6)
!8842 = !DILocation(line: 29, column: 15, scope: !8841)
!8843 = !DILocation(line: 29, column: 6, scope: !8730)
!8844 = !DILocation(line: 1031, column: 3, scope: !8845, inlinedAt: !8848)
!8845 = distinct !DISubprogram(name: "__get_IPSR", scope: !7803, file: !7803, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !8846)
!8846 = !{!8847}
!8847 = !DILocalVariable(name: "result", scope: !8845, file: !7803, line: 1029, type: !113)
!8848 = distinct !DILocation(line: 48, column: 10, scope: !8849, inlinedAt: !8853)
!8849 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8850, file: !8850, line: 46, type: !8851, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !397)
!8850 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8851 = !DISubroutineType(types: !8852)
!8852 = !{!492}
!8853 = distinct !DILocation(line: 30, column: 7, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !8855, file: !8731, line: 30, column: 7)
!8855 = distinct !DILexicalBlock(scope: !8841, file: !8731, line: 29, column: 26)
!8856 = !{i64 2913934}
!8857 = !DILocation(line: 0, scope: !8845, inlinedAt: !8848)
!8858 = !DILocation(line: 48, column: 9, scope: !8849, inlinedAt: !8853)
!8859 = !DILocation(line: 30, column: 7, scope: !8855)
!8860 = !DILocation(line: 42, column: 14, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8854, file: !8731, line: 30, column: 25)
!8862 = !DILocation(line: 48, column: 15, scope: !8861)
!8863 = !DILocation(line: 49, column: 3, scope: !8861)
!8864 = !DILocation(line: 52, column: 2, scope: !8730)
!8865 = !DILocation(line: 53, column: 1, scope: !8730)
!8866 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !539, file: !539, line: 127, type: !266, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !532, retainedNodes: !397)
!8867 = !DILocation(line: 134, column: 2, scope: !8866)
!8868 = !DILocation(line: 156, column: 1, scope: !8866)
!8869 = !DILocation(line: 0, scope: !538)
!8870 = !DILocation(line: 289, column: 36, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !538, file: !539, line: 285, column: 2)
!8872 = !DILocation(line: 289, column: 42, scope: !8871)
!8873 = !DILocation(line: 300, column: 36, scope: !538)
!8874 = !DILocation(line: 301, column: 35, scope: !538)
!8875 = !DILocation(line: 302, column: 37, scope: !538)
!8876 = !DILocation(line: 311, column: 2, scope: !538)
!8877 = !DILocation(line: 316, column: 1, scope: !538)
!8878 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !707, file: !707, line: 180, type: !266, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !397)
!8879 = !DILocation(line: 188, column: 12, scope: !8878)
!8880 = !DILocation(line: 271, column: 3, scope: !8881, inlinedAt: !8882)
!8881 = distinct !DISubprogram(name: "__DSB", scope: !7803, file: !7803, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !397)
!8882 = distinct !DILocation(line: 192, column: 2, scope: !8878)
!8883 = !{i64 3089949}
!8884 = !DILocation(line: 260, column: 3, scope: !8885, inlinedAt: !8886)
!8885 = distinct !DISubprogram(name: "__ISB", scope: !7803, file: !7803, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !397)
!8886 = distinct !DILocation(line: 193, column: 2, scope: !8878)
!8887 = !{i64 3089666}
!8888 = !DILocation(line: 194, column: 1, scope: !8878)
!8889 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !707, file: !707, line: 199, type: !266, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !397)
!8890 = !DILocation(line: 282, column: 3, scope: !8891, inlinedAt: !8892)
!8891 = distinct !DISubprogram(name: "__DMB", scope: !7803, file: !7803, line: 280, type: !266, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !397)
!8892 = distinct !DILocation(line: 202, column: 2, scope: !8889)
!8893 = !{i64 3090225}
!8894 = !DILocation(line: 205, column: 12, scope: !8889)
!8895 = !DILocation(line: 206, column: 1, scope: !8889)
!8896 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !707, file: !707, line: 275, type: !8897, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !8910)
!8897 = !DISubroutineType(types: !8898)
!8898 = !{null, !8899, !1973, !3764, !3764}
!8899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8900, size: 32)
!8900 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8901)
!8901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !651, line: 52, size: 96, elements: !8902)
!8902 = !{!8903, !8904, !8905}
!8903 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8901, file: !651, line: 53, baseType: !22, size: 32)
!8904 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8901, file: !651, line: 54, baseType: !111, size: 32, offset: 32)
!8905 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8901, file: !651, line: 55, baseType: !8906, size: 32, offset: 64)
!8906 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !657, line: 151, baseType: !8907)
!8907 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !657, line: 149, size: 32, elements: !8908)
!8908 = !{!8909}
!8909 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8907, file: !657, line: 150, baseType: !113, size: 32)
!8910 = !{!8911, !8912, !8913, !8914}
!8911 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8896, file: !707, line: 276, type: !8899)
!8912 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8896, file: !707, line: 276, type: !1973)
!8913 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8896, file: !707, line: 277, type: !3764)
!8914 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8896, file: !707, line: 277, type: !3764)
!8915 = !DILocation(line: 0, scope: !8896)
!8916 = !DILocation(line: 279, column: 6, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8896, file: !707, line: 279, column: 6)
!8918 = !DILocation(line: 280, column: 57, scope: !8917)
!8919 = !DILocation(line: 279, column: 6, scope: !8896)
!8920 = !DILocation(line: 282, column: 3, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !8922, file: !707, line: 282, column: 3)
!8922 = distinct !DILexicalBlock(scope: !8923, file: !707, line: 282, column: 3)
!8923 = distinct !DILexicalBlock(scope: !8924, file: !707, line: 282, column: 3)
!8924 = distinct !DILexicalBlock(scope: !8917, file: !707, line: 280, column: 69)
!8925 = !DILocation(line: 285, column: 1, scope: !8896)
!8926 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8927, file: !8927, line: 220, type: !8928, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !8930)
!8927 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8928 = !DISubroutineType(types: !8929)
!8929 = !{!105, !8899, !1973, !3764, !3764}
!8930 = !{!8931, !8932, !8933, !8934, !8935}
!8931 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8926, file: !8927, line: 221, type: !8899)
!8932 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8926, file: !8927, line: 221, type: !1973)
!8933 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8926, file: !8927, line: 222, type: !3764)
!8934 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8926, file: !8927, line: 223, type: !3764)
!8935 = !DILocalVariable(name: "mpu_reg_index", scope: !8926, file: !8927, line: 225, type: !105)
!8936 = !DILocation(line: 0, scope: !8926)
!8937 = !DILocation(line: 225, column: 22, scope: !8926)
!8938 = !DILocation(line: 233, column: 18, scope: !8926)
!8939 = !DILocation(line: 236, column: 23, scope: !8926)
!8940 = !DILocation(line: 236, column: 21, scope: !8926)
!8941 = !DILocation(line: 238, column: 2, scope: !8926)
!8942 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !707, file: !707, line: 105, type: !8943, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !8945)
!8943 = !DISubroutineType(types: !8944)
!8944 = !{!105, !8899, !169, !169, !492}
!8945 = !{!8946, !8947, !8948, !8949, !8950, !8951}
!8946 = !DILocalVariable(name: "regions", arg: 1, scope: !8942, file: !707, line: 106, type: !8899)
!8947 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8942, file: !707, line: 106, type: !169)
!8948 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !8942, file: !707, line: 106, type: !169)
!8949 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !8942, file: !707, line: 107, type: !492)
!8950 = !DILocalVariable(name: "i", scope: !8942, file: !707, line: 109, type: !105)
!8951 = !DILocalVariable(name: "reg_index", scope: !8942, file: !707, line: 110, type: !105)
!8952 = !DILocation(line: 0, scope: !8942)
!8953 = !DILocation(line: 110, column: 18, scope: !8942)
!8954 = !DILocation(line: 112, column: 16, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8956, file: !707, line: 112, column: 2)
!8956 = distinct !DILexicalBlock(scope: !8942, file: !707, line: 112, column: 2)
!8957 = !DILocation(line: 112, column: 2, scope: !8956)
!8958 = !DILocation(line: 113, column: 7, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8960, file: !707, line: 113, column: 7)
!8960 = distinct !DILexicalBlock(scope: !8955, file: !707, line: 112, column: 36)
!8961 = !DILocation(line: 113, column: 18, scope: !8959)
!8962 = !DILocation(line: 113, column: 23, scope: !8959)
!8963 = !DILocation(line: 113, column: 7, scope: !8960)
!8964 = !DILocation(line: 118, column: 23, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8960, file: !707, line: 118, column: 7)
!8966 = !DILocation(line: 119, column: 7, scope: !8965)
!8967 = !DILocation(line: 118, column: 7, scope: !8960)
!8968 = !DILocation(line: 120, column: 4, scope: !8969)
!8969 = distinct !DILexicalBlock(scope: !8970, file: !707, line: 120, column: 4)
!8970 = distinct !DILexicalBlock(scope: !8971, file: !707, line: 120, column: 4)
!8971 = distinct !DILexicalBlock(scope: !8972, file: !707, line: 120, column: 4)
!8972 = distinct !DILexicalBlock(scope: !8973, file: !707, line: 120, column: 4)
!8973 = distinct !DILexicalBlock(scope: !8965, file: !707, line: 119, column: 45)
!8974 = !DILocation(line: 121, column: 4, scope: !8973)
!8975 = !DILocation(line: 124, column: 36, scope: !8960)
!8976 = !DILocation(line: 124, column: 15, scope: !8960)
!8977 = !DILocation(line: 126, column: 17, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8960, file: !707, line: 126, column: 7)
!8979 = !DILocation(line: 126, column: 7, scope: !8960)
!8980 = !DILocation(line: 131, column: 12, scope: !8960)
!8981 = !DILocation(line: 132, column: 2, scope: !8960)
!8982 = !DILocation(line: 112, column: 32, scope: !8955)
!8983 = distinct !{!8983, !8957, !8984}
!8984 = !DILocation(line: 132, column: 2, scope: !8956)
!8985 = !DILocation(line: 135, column: 1, scope: !8942)
!8986 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8927, file: !8927, line: 63, type: !8987, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !8989)
!8987 = !DISubroutineType(types: !8988)
!8988 = !{!105, !8899}
!8989 = !{!8990, !8991}
!8990 = !DILocalVariable(name: "part", arg: 1, scope: !8986, file: !8927, line: 63, type: !8899)
!8991 = !DILocalVariable(name: "partition_is_valid", scope: !8986, file: !8927, line: 70, type: !105)
!8992 = !DILocation(line: 0, scope: !8986)
!8993 = !DILocation(line: 71, column: 11, scope: !8986)
!8994 = !DILocation(line: 71, column: 37, scope: !8986)
!8995 = !DILocation(line: 72, column: 3, scope: !8986)
!8996 = !DILocation(line: 71, column: 30, scope: !8986)
!8997 = !DILocation(line: 75, column: 11, scope: !8986)
!8998 = !DILocation(line: 75, column: 17, scope: !8986)
!8999 = !DILocation(line: 75, column: 38, scope: !8986)
!9000 = !DILocation(line: 77, column: 2, scope: !8986)
!9001 = distinct !DISubprogram(name: "mpu_configure_region", scope: !707, file: !707, line: 79, type: !9002, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9004)
!9002 = !DISubroutineType(types: !9003)
!9003 = !{!105, !1973, !8899}
!9004 = !{!9005, !9006, !9007}
!9005 = !DILocalVariable(name: "index", arg: 1, scope: !9001, file: !707, line: 79, type: !1973)
!9006 = !DILocalVariable(name: "new_region", arg: 2, scope: !9001, file: !707, line: 80, type: !8899)
!9007 = !DILocalVariable(name: "region_conf", scope: !9001, file: !707, line: 82, type: !696)
!9008 = !DILocation(line: 0, scope: !9001)
!9009 = !DILocation(line: 82, column: 2, scope: !9001)
!9010 = !DILocation(line: 82, column: 24, scope: !9001)
!9011 = !DILocation(line: 87, column: 33, scope: !9001)
!9012 = !DILocation(line: 87, column: 14, scope: !9001)
!9013 = !DILocation(line: 87, column: 19, scope: !9001)
!9014 = !DILocation(line: 91, column: 55, scope: !9001)
!9015 = !DILocation(line: 92, column: 16, scope: !9001)
!9016 = !DILocation(line: 92, column: 53, scope: !9001)
!9017 = !DILocation(line: 91, column: 2, scope: !9001)
!9018 = !DILocation(line: 95, column: 9, scope: !9001)
!9019 = !DILocation(line: 97, column: 1, scope: !9001)
!9020 = !DILocation(line: 95, column: 2, scope: !9001)
!9021 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8927, file: !8927, line: 113, type: !9022, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9027)
!9022 = !DISubroutineType(types: !9023)
!9023 = !{null, !9024, !9025, !113, !113}
!9024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 32)
!9025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9026, size: 32)
!9026 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8906)
!9027 = !{!9028, !9029, !9030, !9031}
!9028 = !DILocalVariable(name: "p_attr", arg: 1, scope: !9021, file: !8927, line: 114, type: !9024)
!9029 = !DILocalVariable(name: "attr", arg: 2, scope: !9021, file: !8927, line: 115, type: !9025)
!9030 = !DILocalVariable(name: "base", arg: 3, scope: !9021, file: !8927, line: 115, type: !113)
!9031 = !DILocalVariable(name: "size", arg: 4, scope: !9021, file: !8927, line: 115, type: !113)
!9032 = !DILocation(line: 0, scope: !9021)
!9033 = !DILocation(line: 127, column: 23, scope: !9021)
!9034 = !DILocation(line: 127, column: 35, scope: !9021)
!9035 = !DILocation(line: 127, column: 33, scope: !9021)
!9036 = !DILocation(line: 127, column: 10, scope: !9021)
!9037 = !DILocation(line: 127, column: 15, scope: !9021)
!9038 = !DILocation(line: 129, column: 1, scope: !9021)
!9039 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !707, file: !707, line: 57, type: !9040, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9042)
!9040 = !DISubroutineType(types: !9041)
!9041 = !{!105, !1973, !694}
!9042 = !{!9043, !9044}
!9043 = !DILocalVariable(name: "index", arg: 1, scope: !9039, file: !707, line: 57, type: !1973)
!9044 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9039, file: !707, line: 58, type: !694)
!9045 = !DILocation(line: 0, scope: !9039)
!9046 = !DILocation(line: 61, column: 6, scope: !9047)
!9047 = distinct !DILexicalBlock(scope: !9039, file: !707, line: 61, column: 6)
!9048 = !DILocation(line: 61, column: 12, scope: !9047)
!9049 = !DILocation(line: 61, column: 6, scope: !9039)
!9050 = !DILocation(line: 64, column: 3, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9052, file: !707, line: 64, column: 3)
!9052 = distinct !DILexicalBlock(scope: !9053, file: !707, line: 64, column: 3)
!9053 = distinct !DILexicalBlock(scope: !9054, file: !707, line: 64, column: 3)
!9054 = distinct !DILexicalBlock(scope: !9055, file: !707, line: 64, column: 3)
!9055 = distinct !DILexicalBlock(scope: !9047, file: !707, line: 61, column: 40)
!9056 = !DILocation(line: 65, column: 3, scope: !9055)
!9057 = !DILocation(line: 71, column: 2, scope: !9039)
!9058 = !DILocation(line: 73, column: 2, scope: !9039)
!9059 = !DILocation(line: 74, column: 1, scope: !9039)
!9060 = distinct !DISubprogram(name: "region_init", scope: !8927, file: !8927, line: 29, type: !9061, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9063)
!9061 = !DISubroutineType(types: !9062)
!9062 = !{null, !3764, !694}
!9063 = !{!9064, !9065}
!9064 = !DILocalVariable(name: "index", arg: 1, scope: !9060, file: !8927, line: 29, type: !3764)
!9065 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9060, file: !8927, line: 30, type: !694)
!9066 = !DILocation(line: 0, scope: !9060)
!9067 = !DILocation(line: 33, column: 2, scope: !9060)
!9068 = !DILocation(line: 47, column: 28, scope: !9060)
!9069 = !DILocation(line: 47, column: 33, scope: !9060)
!9070 = !DILocation(line: 48, column: 26, scope: !9060)
!9071 = !DILocation(line: 47, column: 12, scope: !9060)
!9072 = !DILocation(line: 49, column: 32, scope: !9060)
!9073 = !DILocation(line: 49, column: 37, scope: !9060)
!9074 = !DILocation(line: 49, column: 12, scope: !9060)
!9075 = !DILocation(line: 53, column: 1, scope: !9060)
!9076 = distinct !DISubprogram(name: "set_region_number", scope: !9077, file: !9077, line: 32, type: !7898, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9078)
!9077 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9078 = !{!9079}
!9079 = !DILocalVariable(name: "index", arg: 1, scope: !9076, file: !9077, line: 32, type: !113)
!9080 = !DILocation(line: 0, scope: !9076)
!9081 = !DILocation(line: 34, column: 11, scope: !9076)
!9082 = !DILocation(line: 35, column: 1, scope: !9076)
!9083 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8927, file: !8927, line: 88, type: !9084, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9086)
!9084 = !DISubroutineType(types: !9085)
!9085 = !{!113, !113}
!9086 = !{!9087}
!9087 = !DILocalVariable(name: "size", arg: 1, scope: !9083, file: !8927, line: 88, type: !113)
!9088 = !DILocation(line: 0, scope: !9083)
!9089 = !DILocation(line: 91, column: 11, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9083, file: !8927, line: 91, column: 6)
!9091 = !DILocation(line: 91, column: 6, scope: !9083)
!9092 = !DILocation(line: 100, column: 11, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9083, file: !8927, line: 100, column: 6)
!9094 = !DILocation(line: 100, column: 6, scope: !9083)
!9095 = !DILocation(line: 104, column: 35, scope: !9083)
!9096 = !DILocation(line: 104, column: 16, scope: !9083)
!9097 = !DILocation(line: 104, column: 50, scope: !9083)
!9098 = !DILocation(line: 104, column: 72, scope: !9083)
!9099 = !DILocation(line: 104, column: 2, scope: !9083)
!9100 = !DILocation(line: 106, column: 1, scope: !9083)
!9101 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !707, file: !707, line: 307, type: !9102, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9104)
!9102 = !DISubroutineType(types: !9103)
!9103 = !{null, !8899, !169}
!9104 = !{!9105, !9106}
!9105 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9101, file: !707, line: 308, type: !8899)
!9106 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9101, file: !707, line: 308, type: !169)
!9107 = !DILocation(line: 0, scope: !9101)
!9108 = !DILocation(line: 310, column: 6, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9101, file: !707, line: 310, column: 6)
!9110 = !DILocation(line: 311, column: 3, scope: !9109)
!9111 = !DILocation(line: 310, column: 6, scope: !9101)
!9112 = !DILocation(line: 313, column: 3, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9114, file: !707, line: 313, column: 3)
!9114 = distinct !DILexicalBlock(scope: !9115, file: !707, line: 313, column: 3)
!9115 = distinct !DILexicalBlock(scope: !9116, file: !707, line: 313, column: 3)
!9116 = distinct !DILexicalBlock(scope: !9109, file: !707, line: 311, column: 15)
!9117 = !DILocation(line: 316, column: 1, scope: !9101)
!9118 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8927, file: !8927, line: 249, type: !9119, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9121)
!9119 = !DISubroutineType(types: !9120)
!9120 = !{!105, !8899, !169}
!9121 = !{!9122, !9123, !9124, !9125}
!9122 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9118, file: !8927, line: 250, type: !8899)
!9123 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9118, file: !8927, line: 250, type: !169)
!9124 = !DILocalVariable(name: "mpu_reg_index", scope: !9118, file: !8927, line: 252, type: !105)
!9125 = !DILocalVariable(name: "i", scope: !9126, file: !8927, line: 264, type: !105)
!9126 = distinct !DILexicalBlock(scope: !9127, file: !8927, line: 264, column: 3)
!9127 = distinct !DILexicalBlock(scope: !9128, file: !8927, line: 261, column: 32)
!9128 = distinct !DILexicalBlock(scope: !9118, file: !8927, line: 261, column: 6)
!9129 = !DILocation(line: 0, scope: !9118)
!9130 = !DILocation(line: 252, column: 22, scope: !9118)
!9131 = !DILocation(line: 258, column: 18, scope: !9118)
!9132 = !DILocation(line: 261, column: 20, scope: !9128)
!9133 = !DILocation(line: 261, column: 6, scope: !9118)
!9134 = !DILocation(line: 0, scope: !9126)
!9135 = !DILocation(line: 265, column: 4, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !9137, file: !8927, line: 264, column: 59)
!9137 = distinct !DILexicalBlock(scope: !9126, file: !8927, line: 264, column: 3)
!9138 = !DILocation(line: 264, column: 55, scope: !9137)
!9139 = !DILocation(line: 264, column: 33, scope: !9137)
!9140 = !DILocation(line: 264, column: 3, scope: !9126)
!9141 = distinct !{!9141, !9140, !9142}
!9142 = !DILocation(line: 266, column: 3, scope: !9126)
!9143 = !DILocation(line: 269, column: 2, scope: !9118)
!9144 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !9145, file: !9145, line: 218, type: !7898, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9146)
!9145 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9146 = !{!9147}
!9147 = !DILocalVariable(name: "rnr", arg: 1, scope: !9144, file: !9145, line: 218, type: !113)
!9148 = !DILocation(line: 0, scope: !9144)
!9149 = !DILocation(line: 220, column: 12, scope: !9144)
!9150 = !DILocation(line: 221, column: 13, scope: !9144)
!9151 = !DILocation(line: 222, column: 1, scope: !9144)
!9152 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !707, file: !707, line: 326, type: !9153, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9155)
!9153 = !DISubroutineType(types: !9154)
!9154 = !{!105}
!9155 = !{!9156}
!9156 = !DILocalVariable(name: "r_index", scope: !9152, file: !707, line: 328, type: !113)
!9157 = !DILocation(line: 330, column: 17, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9152, file: !707, line: 330, column: 6)
!9159 = !DILocation(line: 330, column: 29, scope: !9158)
!9160 = !DILocation(line: 330, column: 6, scope: !9152)
!9161 = !DILocation(line: 337, column: 3, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9163, file: !707, line: 337, column: 3)
!9163 = distinct !DILexicalBlock(scope: !9164, file: !707, line: 337, column: 3)
!9164 = distinct !DILexicalBlock(scope: !9165, file: !707, line: 337, column: 3)
!9165 = distinct !DILexicalBlock(scope: !9158, file: !707, line: 330, column: 50)
!9166 = !DILocation(line: 347, column: 2, scope: !9152)
!9167 = !DILocation(line: 0, scope: !9152)
!9168 = !DILocation(line: 364, column: 29, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9170, file: !707, line: 364, column: 2)
!9170 = distinct !DILexicalBlock(scope: !9152, file: !707, line: 364, column: 2)
!9171 = !DILocation(line: 364, column: 2, scope: !9170)
!9172 = !DILocation(line: 365, column: 25, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9169, file: !707, line: 364, column: 66)
!9174 = !DILocation(line: 365, column: 3, scope: !9173)
!9175 = !DILocation(line: 364, column: 62, scope: !9169)
!9176 = distinct !{!9176, !9171, !9177}
!9177 = !DILocation(line: 366, column: 2, scope: !9170)
!9178 = !DILocation(line: 369, column: 23, scope: !9152)
!9179 = !DILocation(line: 369, column: 21, scope: !9152)
!9180 = !DILocation(line: 372, column: 2, scope: !9152)
!9181 = !DILocation(line: 433, column: 2, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9183, file: !707, line: 433, column: 2)
!9183 = distinct !DILexicalBlock(scope: !9152, file: !707, line: 433, column: 2)
!9184 = !DILocation(line: 433, column: 2, scope: !9183)
!9185 = !DILocation(line: 433, column: 2, scope: !9186)
!9186 = distinct !DILexicalBlock(scope: !9182, file: !707, line: 433, column: 2)
!9187 = !DILocation(line: 444, column: 1, scope: !9152)
!9188 = distinct !DISubprogram(name: "strcpy", scope: !9189, file: !9189, line: 20, type: !9190, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !9194)
!9189 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9190 = !DISubroutineType(types: !9191)
!9191 = !{!102, !9192, !9193}
!9192 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!9193 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !269)
!9194 = !{!9195, !9196, !9197}
!9195 = !DILocalVariable(name: "d", arg: 1, scope: !9188, file: !9189, line: 20, type: !9192)
!9196 = !DILocalVariable(name: "s", arg: 2, scope: !9188, file: !9189, line: 20, type: !9193)
!9197 = !DILocalVariable(name: "dest", scope: !9188, file: !9189, line: 22, type: !102)
!9198 = !DILocation(line: 0, scope: !9188)
!9199 = !DILocation(line: 24, column: 9, scope: !9188)
!9200 = !DILocation(line: 24, column: 12, scope: !9188)
!9201 = !DILocation(line: 24, column: 2, scope: !9188)
!9202 = !DILocation(line: 25, column: 6, scope: !9203)
!9203 = distinct !DILexicalBlock(scope: !9188, file: !9189, line: 24, column: 21)
!9204 = !DILocation(line: 26, column: 4, scope: !9203)
!9205 = !DILocation(line: 27, column: 4, scope: !9203)
!9206 = distinct !{!9206, !9201, !9207}
!9207 = !DILocation(line: 28, column: 2, scope: !9188)
!9208 = !DILocation(line: 30, column: 5, scope: !9188)
!9209 = !DILocation(line: 32, column: 2, scope: !9188)
!9210 = distinct !DISubprogram(name: "strncpy", scope: !9189, file: !9189, line: 42, type: !9211, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !9213)
!9211 = !DISubroutineType(types: !9212)
!9212 = !{!102, !9192, !9193, !111}
!9213 = !{!9214, !9215, !9216, !9217}
!9214 = !DILocalVariable(name: "d", arg: 1, scope: !9210, file: !9189, line: 42, type: !9192)
!9215 = !DILocalVariable(name: "s", arg: 2, scope: !9210, file: !9189, line: 42, type: !9193)
!9216 = !DILocalVariable(name: "n", arg: 3, scope: !9210, file: !9189, line: 42, type: !111)
!9217 = !DILocalVariable(name: "dest", scope: !9210, file: !9189, line: 44, type: !102)
!9218 = !DILocation(line: 0, scope: !9210)
!9219 = !DILocation(line: 46, column: 12, scope: !9210)
!9220 = !DILocation(line: 46, column: 17, scope: !9210)
!9221 = !DILocation(line: 46, column: 20, scope: !9210)
!9222 = !DILocation(line: 46, column: 23, scope: !9210)
!9223 = !DILocation(line: 46, column: 2, scope: !9210)
!9224 = !DILocation(line: 47, column: 6, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9210, file: !9189, line: 46, column: 32)
!9226 = !DILocation(line: 48, column: 4, scope: !9225)
!9227 = !DILocation(line: 49, column: 4, scope: !9225)
!9228 = !DILocation(line: 50, column: 4, scope: !9225)
!9229 = distinct !{!9229, !9223, !9230}
!9230 = !DILocation(line: 51, column: 2, scope: !9210)
!9231 = !DILocation(line: 54, column: 6, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9210, file: !9189, line: 53, column: 16)
!9233 = !DILocation(line: 55, column: 4, scope: !9232)
!9234 = !DILocation(line: 56, column: 4, scope: !9232)
!9235 = !DILocation(line: 53, column: 11, scope: !9210)
!9236 = !DILocation(line: 53, column: 2, scope: !9210)
!9237 = distinct !{!9237, !9236, !9238}
!9238 = !DILocation(line: 57, column: 2, scope: !9210)
!9239 = !DILocation(line: 59, column: 2, scope: !9210)
!9240 = distinct !DISubprogram(name: "strchr", scope: !9189, file: !9189, line: 69, type: !9241, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !9243)
!9241 = !DISubroutineType(types: !9242)
!9242 = !{!102, !269, !105}
!9243 = !{!9244, !9245, !9246}
!9244 = !DILocalVariable(name: "s", arg: 1, scope: !9240, file: !9189, line: 69, type: !269)
!9245 = !DILocalVariable(name: "c", arg: 2, scope: !9240, file: !9189, line: 69, type: !105)
!9246 = !DILocalVariable(name: "tmp", scope: !9240, file: !9189, line: 71, type: !103)
!9247 = !DILocation(line: 0, scope: !9240)
!9248 = !DILocation(line: 73, column: 2, scope: !9240)
!9249 = !DILocation(line: 73, column: 10, scope: !9240)
!9250 = !DILocation(line: 73, column: 13, scope: !9240)
!9251 = !DILocation(line: 73, column: 21, scope: !9240)
!9252 = !DILocation(line: 74, column: 4, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !9240, file: !9189, line: 73, column: 38)
!9254 = distinct !{!9254, !9248, !9255}
!9255 = !DILocation(line: 75, column: 2, scope: !9240)
!9256 = !DILocation(line: 77, column: 9, scope: !9240)
!9257 = !DILocation(line: 77, column: 2, scope: !9240)
!9258 = distinct !DISubprogram(name: "strrchr", scope: !9189, file: !9189, line: 87, type: !9241, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !9259)
!9259 = !{!9260, !9261, !9262}
!9260 = !DILocalVariable(name: "s", arg: 1, scope: !9258, file: !9189, line: 87, type: !269)
!9261 = !DILocalVariable(name: "c", arg: 2, scope: !9258, file: !9189, line: 87, type: !105)
!9262 = !DILocalVariable(name: "match", scope: !9258, file: !9189, line: 89, type: !102)
!9263 = !DILocation(line: 0, scope: !9258)
!9264 = !DILocation(line: 91, column: 2, scope: !9258)
!9265 = !DILocation(line: 92, column: 7, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9267, file: !9189, line: 92, column: 7)
!9267 = distinct !DILexicalBlock(scope: !9258, file: !9189, line: 91, column: 5)
!9268 = !DILocation(line: 92, column: 10, scope: !9266)
!9269 = !DILocation(line: 92, column: 7, scope: !9267)
!9270 = !DILocation(line: 95, column: 13, scope: !9258)
!9271 = !DILocation(line: 95, column: 2, scope: !9267)
!9272 = distinct !{!9272, !9264, !9273}
!9273 = !DILocation(line: 95, column: 15, scope: !9258)
!9274 = !DILocation(line: 97, column: 2, scope: !9258)
!9275 = distinct !DISubprogram(name: "strlen", scope: !9189, file: !9189, line: 107, type: !9276, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !9278)
!9276 = !DISubroutineType(types: !9277)
!9277 = !{!111, !269}
!9278 = !{!9279, !9280}
!9279 = !DILocalVariable(name: "s", arg: 1, scope: !9275, file: !9189, line: 107, type: !269)
!9280 = !DILocalVariable(name: "n", scope: !9275, file: !9189, line: 109, type: !111)
!9281 = !DILocation(line: 0, scope: !9275)
!9282 = !DILocation(line: 111, column: 9, scope: !9275)
!9283 = !DILocation(line: 111, column: 12, scope: !9275)
!9284 = !DILocation(line: 111, column: 2, scope: !9275)
!9285 = !DILocation(line: 112, column: 4, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9275, file: !9189, line: 111, column: 21)
!9287 = !DILocation(line: 113, column: 4, scope: !9286)
!9288 = distinct !{!9288, !9284, !9289}
!9289 = !DILocation(line: 114, column: 2, scope: !9275)
!9290 = !DILocation(line: 116, column: 2, scope: !9275)
!9291 = distinct !DISubprogram(name: "strnlen", scope: !9189, file: !9189, line: 126, type: !9292, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !9294)
!9292 = !DISubroutineType(types: !9293)
!9293 = !{!111, !269, !111}
!9294 = !{!9295, !9296, !9297}
!9295 = !DILocalVariable(name: "s", arg: 1, scope: !9291, file: !9189, line: 126, type: !269)
!9296 = !DILocalVariable(name: "maxlen", arg: 2, scope: !9291, file: !9189, line: 126, type: !111)
!9297 = !DILocalVariable(name: "n", scope: !9291, file: !9189, line: 128, type: !111)
!9298 = !DILocation(line: 0, scope: !9291)
!9299 = !DILocation(line: 130, column: 9, scope: !9291)
!9300 = !DILocation(line: 130, column: 12, scope: !9291)
!9301 = !DILocation(line: 130, column: 20, scope: !9291)
!9302 = !DILocation(line: 130, column: 2, scope: !9291)
!9303 = !DILocation(line: 131, column: 4, scope: !9304)
!9304 = distinct !DILexicalBlock(scope: !9291, file: !9189, line: 130, column: 35)
!9305 = !DILocation(line: 132, column: 4, scope: !9304)
!9306 = distinct !{!9306, !9302, !9307}
!9307 = !DILocation(line: 133, column: 2, scope: !9291)
!9308 = !DILocation(line: 135, column: 2, scope: !9291)
!9309 = distinct !DISubprogram(name: "strcmp", scope: !9189, file: !9189, line: 145, type: !9310, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !9312)
!9310 = !DISubroutineType(types: !9311)
!9311 = !{!105, !269, !269}
!9312 = !{!9313, !9314}
!9313 = !DILocalVariable(name: "s1", arg: 1, scope: !9309, file: !9189, line: 145, type: !269)
!9314 = !DILocalVariable(name: "s2", arg: 2, scope: !9309, file: !9189, line: 145, type: !269)
!9315 = !DILocation(line: 0, scope: !9309)
!9316 = !DILocation(line: 147, column: 10, scope: !9309)
!9317 = !DILocation(line: 147, column: 17, scope: !9309)
!9318 = !DILocation(line: 147, column: 14, scope: !9309)
!9319 = !DILocation(line: 147, column: 22, scope: !9309)
!9320 = !DILocation(line: 148, column: 5, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9309, file: !9189, line: 147, column: 40)
!9322 = !DILocation(line: 149, column: 5, scope: !9321)
!9323 = distinct !{!9323, !9324, !9325}
!9324 = !DILocation(line: 147, column: 2, scope: !9309)
!9325 = !DILocation(line: 150, column: 2, scope: !9309)
!9326 = !DILocation(line: 152, column: 9, scope: !9309)
!9327 = !DILocation(line: 152, column: 15, scope: !9309)
!9328 = !DILocation(line: 152, column: 13, scope: !9309)
!9329 = !DILocation(line: 152, column: 2, scope: !9309)
!9330 = distinct !DISubprogram(name: "strncmp", scope: !9189, file: !9189, line: 162, type: !9331, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !9333)
!9331 = !DISubroutineType(types: !9332)
!9332 = !{!105, !269, !269, !111}
!9333 = !{!9334, !9335, !9336}
!9334 = !DILocalVariable(name: "s1", arg: 1, scope: !9330, file: !9189, line: 162, type: !269)
!9335 = !DILocalVariable(name: "s2", arg: 2, scope: !9330, file: !9189, line: 162, type: !269)
!9336 = !DILocalVariable(name: "n", arg: 3, scope: !9330, file: !9189, line: 162, type: !111)
!9337 = !DILocation(line: 0, scope: !9330)
!9338 = !DILocation(line: 164, column: 17, scope: !9330)
!9339 = !DILocation(line: 164, column: 21, scope: !9330)
!9340 = !DILocation(line: 164, column: 28, scope: !9330)
!9341 = !DILocation(line: 164, column: 25, scope: !9330)
!9342 = !DILocation(line: 164, column: 33, scope: !9330)
!9343 = !DILocation(line: 165, column: 5, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9330, file: !9189, line: 164, column: 51)
!9345 = !DILocation(line: 166, column: 5, scope: !9344)
!9346 = !DILocation(line: 167, column: 4, scope: !9344)
!9347 = distinct !{!9347, !9348, !9349}
!9348 = !DILocation(line: 164, column: 2, scope: !9330)
!9349 = !DILocation(line: 168, column: 2, scope: !9330)
!9350 = !DILocation(line: 170, column: 25, scope: !9330)
!9351 = !DILocation(line: 170, column: 31, scope: !9330)
!9352 = !DILocation(line: 170, column: 29, scope: !9330)
!9353 = !DILocation(line: 170, column: 9, scope: !9330)
!9354 = !DILocation(line: 170, column: 2, scope: !9330)
!9355 = distinct !DISubprogram(name: "strtok_r", scope: !9189, file: !9189, line: 180, type: !9356, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !9358)
!9356 = !DISubroutineType(types: !9357)
!9357 = !{!102, !102, !269, !431}
!9358 = !{!9359, !9360, !9361, !9362, !9363}
!9359 = !DILocalVariable(name: "str", arg: 1, scope: !9355, file: !9189, line: 180, type: !102)
!9360 = !DILocalVariable(name: "sep", arg: 2, scope: !9355, file: !9189, line: 180, type: !269)
!9361 = !DILocalVariable(name: "state", arg: 3, scope: !9355, file: !9189, line: 180, type: !431)
!9362 = !DILocalVariable(name: "start", scope: !9355, file: !9189, line: 182, type: !102)
!9363 = !DILocalVariable(name: "end", scope: !9355, file: !9189, line: 182, type: !102)
!9364 = !DILocation(line: 0, scope: !9355)
!9365 = !DILocation(line: 184, column: 10, scope: !9355)
!9366 = !DILocation(line: 184, column: 22, scope: !9355)
!9367 = !DILocation(line: 187, column: 9, scope: !9355)
!9368 = !DILocation(line: 187, column: 16, scope: !9355)
!9369 = !DILocation(line: 187, column: 19, scope: !9355)
!9370 = !DILocation(line: 187, column: 2, scope: !9355)
!9371 = !DILocation(line: 188, column: 8, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9355, file: !9189, line: 187, column: 40)
!9373 = distinct !{!9373, !9370, !9374}
!9374 = !DILocation(line: 189, column: 2, scope: !9355)
!9375 = !DILocation(line: 198, column: 9, scope: !9355)
!9376 = !DILocation(line: 198, column: 18, scope: !9355)
!9377 = !DILocation(line: 198, column: 17, scope: !9355)
!9378 = !DILocation(line: 198, column: 2, scope: !9355)
!9379 = !DILocation(line: 199, column: 6, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9355, file: !9189, line: 198, column: 37)
!9381 = !DILocation(line: 198, column: 14, scope: !9355)
!9382 = distinct !{!9382, !9378, !9383}
!9383 = !DILocation(line: 200, column: 2, scope: !9355)
!9384 = !DILocation(line: 203, column: 8, scope: !9385)
!9385 = distinct !DILexicalBlock(scope: !9386, file: !9189, line: 202, column: 20)
!9386 = distinct !DILexicalBlock(scope: !9355, file: !9189, line: 202, column: 6)
!9387 = !DILocation(line: 204, column: 16, scope: !9385)
!9388 = !DILocation(line: 205, column: 2, scope: !9385)
!9389 = !DILocation(line: 210, column: 1, scope: !9355)
!9390 = distinct !DISubprogram(name: "strcat", scope: !9189, file: !9189, line: 212, type: !9190, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !9391)
!9391 = !{!9392, !9393}
!9392 = !DILocalVariable(name: "dest", arg: 1, scope: !9390, file: !9189, line: 212, type: !9192)
!9393 = !DILocalVariable(name: "src", arg: 2, scope: !9390, file: !9189, line: 212, type: !9193)
!9394 = !DILocation(line: 0, scope: !9390)
!9395 = !DILocation(line: 214, column: 16, scope: !9390)
!9396 = !DILocation(line: 214, column: 14, scope: !9390)
!9397 = !DILocation(line: 214, column: 2, scope: !9390)
!9398 = !DILocation(line: 215, column: 2, scope: !9390)
!9399 = distinct !DISubprogram(name: "strncat", scope: !9189, file: !9189, line: 218, type: !9211, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !9400)
!9400 = !{!9401, !9402, !9403, !9404, !9405}
!9401 = !DILocalVariable(name: "dest", arg: 1, scope: !9399, file: !9189, line: 218, type: !9192)
!9402 = !DILocalVariable(name: "src", arg: 2, scope: !9399, file: !9189, line: 218, type: !9193)
!9403 = !DILocalVariable(name: "n", arg: 3, scope: !9399, file: !9189, line: 219, type: !111)
!9404 = !DILocalVariable(name: "orig_dest", scope: !9399, file: !9189, line: 221, type: !102)
!9405 = !DILocalVariable(name: "len", scope: !9399, file: !9189, line: 222, type: !111)
!9406 = !DILocation(line: 0, scope: !9399)
!9407 = !DILocation(line: 222, column: 15, scope: !9399)
!9408 = !DILocation(line: 224, column: 7, scope: !9399)
!9409 = !DILocation(line: 225, column: 14, scope: !9399)
!9410 = !DILocation(line: 225, column: 19, scope: !9399)
!9411 = !DILocation(line: 225, column: 11, scope: !9399)
!9412 = !DILocation(line: 225, column: 23, scope: !9399)
!9413 = !DILocation(line: 225, column: 28, scope: !9399)
!9414 = !DILocation(line: 225, column: 2, scope: !9399)
!9415 = !DILocation(line: 226, column: 17, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9399, file: !9189, line: 225, column: 38)
!9417 = !DILocation(line: 226, column: 8, scope: !9416)
!9418 = !DILocation(line: 226, column: 11, scope: !9416)
!9419 = distinct !{!9419, !9414, !9420}
!9420 = !DILocation(line: 227, column: 2, scope: !9399)
!9421 = !DILocation(line: 228, column: 8, scope: !9399)
!9422 = !DILocation(line: 230, column: 2, scope: !9399)
!9423 = distinct !DISubprogram(name: "memcmp", scope: !9189, file: !9189, line: 239, type: !9424, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !9426)
!9424 = !DISubroutineType(types: !9425)
!9425 = !{!105, !13, !13, !111}
!9426 = !{!9427, !9428, !9429, !9430, !9431}
!9427 = !DILocalVariable(name: "m1", arg: 1, scope: !9423, file: !9189, line: 239, type: !13)
!9428 = !DILocalVariable(name: "m2", arg: 2, scope: !9423, file: !9189, line: 239, type: !13)
!9429 = !DILocalVariable(name: "n", arg: 3, scope: !9423, file: !9189, line: 239, type: !111)
!9430 = !DILocalVariable(name: "c1", scope: !9423, file: !9189, line: 241, type: !269)
!9431 = !DILocalVariable(name: "c2", scope: !9423, file: !9189, line: 242, type: !269)
!9432 = !DILocation(line: 0, scope: !9423)
!9433 = !DILocation(line: 244, column: 7, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9423, file: !9189, line: 244, column: 6)
!9435 = !DILocation(line: 244, column: 6, scope: !9423)
!9436 = !DILocation(line: 248, column: 10, scope: !9423)
!9437 = !DILocation(line: 248, column: 14, scope: !9423)
!9438 = !DILocation(line: 248, column: 19, scope: !9423)
!9439 = !DILocation(line: 248, column: 2, scope: !9423)
!9440 = !DILocation(line: 248, column: 23, scope: !9423)
!9441 = !DILocation(line: 248, column: 30, scope: !9423)
!9442 = !DILocation(line: 248, column: 27, scope: !9423)
!9443 = !DILocation(line: 249, column: 5, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9423, file: !9189, line: 248, column: 36)
!9445 = !DILocation(line: 250, column: 5, scope: !9444)
!9446 = distinct !{!9446, !9439, !9447}
!9447 = !DILocation(line: 251, column: 2, scope: !9423)
!9448 = !DILocation(line: 253, column: 9, scope: !9423)
!9449 = !DILocation(line: 253, column: 15, scope: !9423)
!9450 = !DILocation(line: 253, column: 13, scope: !9423)
!9451 = !DILocation(line: 253, column: 2, scope: !9423)
!9452 = !DILocation(line: 254, column: 1, scope: !9423)
!9453 = distinct !DISubprogram(name: "memmove", scope: !9189, file: !9189, line: 263, type: !9454, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !9456)
!9454 = !DISubroutineType(types: !9455)
!9455 = !{!104, !104, !13, !111}
!9456 = !{!9457, !9458, !9459, !9460, !9461}
!9457 = !DILocalVariable(name: "d", arg: 1, scope: !9453, file: !9189, line: 263, type: !104)
!9458 = !DILocalVariable(name: "s", arg: 2, scope: !9453, file: !9189, line: 263, type: !13)
!9459 = !DILocalVariable(name: "n", arg: 3, scope: !9453, file: !9189, line: 263, type: !111)
!9460 = !DILocalVariable(name: "dest", scope: !9453, file: !9189, line: 265, type: !102)
!9461 = !DILocalVariable(name: "src", scope: !9453, file: !9189, line: 266, type: !269)
!9462 = !DILocation(line: 0, scope: !9453)
!9463 = !DILocation(line: 268, column: 21, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9453, file: !9189, line: 268, column: 6)
!9465 = !DILocation(line: 268, column: 28, scope: !9464)
!9466 = !DILocation(line: 268, column: 6, scope: !9453)
!9467 = !DILocation(line: 280, column: 12, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9464, file: !9189, line: 278, column: 9)
!9469 = !DILocation(line: 280, column: 3, scope: !9468)
!9470 = !DILocation(line: 275, column: 5, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9472, file: !9189, line: 274, column: 17)
!9472 = distinct !DILexicalBlock(scope: !9464, file: !9189, line: 268, column: 33)
!9473 = !DILocation(line: 276, column: 14, scope: !9471)
!9474 = !DILocation(line: 276, column: 4, scope: !9471)
!9475 = !DILocation(line: 276, column: 12, scope: !9471)
!9476 = !DILocation(line: 274, column: 12, scope: !9472)
!9477 = !DILocation(line: 274, column: 3, scope: !9472)
!9478 = distinct !{!9478, !9477, !9479}
!9479 = !DILocation(line: 277, column: 3, scope: !9472)
!9480 = !DILocation(line: 281, column: 12, scope: !9481)
!9481 = distinct !DILexicalBlock(scope: !9468, file: !9189, line: 280, column: 17)
!9482 = !DILocation(line: 281, column: 10, scope: !9481)
!9483 = !DILocation(line: 282, column: 8, scope: !9481)
!9484 = !DILocation(line: 283, column: 7, scope: !9481)
!9485 = !DILocation(line: 284, column: 5, scope: !9481)
!9486 = distinct !{!9486, !9469, !9487}
!9487 = !DILocation(line: 285, column: 3, scope: !9468)
!9488 = !DILocation(line: 288, column: 2, scope: !9453)
!9489 = distinct !DISubprogram(name: "memcpy", scope: !9189, file: !9189, line: 298, type: !9490, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !9494)
!9490 = !DISubroutineType(types: !9491)
!9491 = !{!104, !9492, !9493, !111}
!9492 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !104)
!9493 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!9494 = !{!9495, !9496, !9497, !9498, !9499}
!9495 = !DILocalVariable(name: "d", arg: 1, scope: !9489, file: !9189, line: 298, type: !9492)
!9496 = !DILocalVariable(name: "s", arg: 2, scope: !9489, file: !9189, line: 298, type: !9493)
!9497 = !DILocalVariable(name: "n", arg: 3, scope: !9489, file: !9189, line: 298, type: !111)
!9498 = !DILocalVariable(name: "d_byte", scope: !9489, file: !9189, line: 302, type: !1113)
!9499 = !DILocalVariable(name: "s_byte", scope: !9489, file: !9189, line: 303, type: !2972)
!9500 = !DILocation(line: 0, scope: !9489)
!9501 = !DILocation(line: 337, column: 11, scope: !9489)
!9502 = !DILocation(line: 337, column: 2, scope: !9489)
!9503 = !DILocation(line: 338, column: 25, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9489, file: !9189, line: 337, column: 16)
!9505 = !DILocation(line: 338, column: 17, scope: !9504)
!9506 = !DILocation(line: 338, column: 11, scope: !9504)
!9507 = !DILocation(line: 338, column: 15, scope: !9504)
!9508 = !DILocation(line: 339, column: 4, scope: !9504)
!9509 = distinct !{!9509, !9502, !9510}
!9510 = !DILocation(line: 340, column: 2, scope: !9489)
!9511 = !DILocation(line: 342, column: 2, scope: !9489)
!9512 = distinct !DISubprogram(name: "memset", scope: !9189, file: !9189, line: 352, type: !9513, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !9515)
!9513 = !DISubroutineType(types: !9514)
!9514 = !{!104, !104, !105, !111}
!9515 = !{!9516, !9517, !9518, !9519, !9520}
!9516 = !DILocalVariable(name: "buf", arg: 1, scope: !9512, file: !9189, line: 352, type: !104)
!9517 = !DILocalVariable(name: "c", arg: 2, scope: !9512, file: !9189, line: 352, type: !105)
!9518 = !DILocalVariable(name: "n", arg: 3, scope: !9512, file: !9189, line: 352, type: !111)
!9519 = !DILocalVariable(name: "d_byte", scope: !9512, file: !9189, line: 356, type: !1113)
!9520 = !DILocalVariable(name: "c_byte", scope: !9512, file: !9189, line: 357, type: !170)
!9521 = !DILocation(line: 0, scope: !9512)
!9522 = !DILocation(line: 357, column: 25, scope: !9512)
!9523 = !DILocation(line: 389, column: 11, scope: !9512)
!9524 = !DILocation(line: 389, column: 2, scope: !9512)
!9525 = !DILocation(line: 390, column: 11, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9512, file: !9189, line: 389, column: 16)
!9527 = !DILocation(line: 390, column: 15, scope: !9526)
!9528 = !DILocation(line: 391, column: 4, scope: !9526)
!9529 = distinct !{!9529, !9524, !9530}
!9530 = !DILocation(line: 392, column: 2, scope: !9512)
!9531 = !DILocation(line: 394, column: 2, scope: !9512)
!9532 = distinct !DISubprogram(name: "memchr", scope: !9189, file: !9189, line: 404, type: !9533, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !9535)
!9533 = !DISubroutineType(types: !9534)
!9534 = !{!104, !13, !105, !111}
!9535 = !{!9536, !9537, !9538, !9539}
!9536 = !DILocalVariable(name: "s", arg: 1, scope: !9532, file: !9189, line: 404, type: !13)
!9537 = !DILocalVariable(name: "c", arg: 2, scope: !9532, file: !9189, line: 404, type: !105)
!9538 = !DILocalVariable(name: "n", arg: 3, scope: !9532, file: !9189, line: 404, type: !111)
!9539 = !DILocalVariable(name: "p", scope: !9540, file: !9189, line: 407, type: !2972)
!9540 = distinct !DILexicalBlock(scope: !9541, file: !9189, line: 406, column: 14)
!9541 = distinct !DILexicalBlock(scope: !9532, file: !9189, line: 406, column: 6)
!9542 = !DILocation(line: 0, scope: !9532)
!9543 = !DILocation(line: 406, column: 8, scope: !9541)
!9544 = !DILocation(line: 406, column: 6, scope: !9532)
!9545 = !DILocation(line: 409, column: 3, scope: !9540)
!9546 = !DILocation(line: 0, scope: !9540)
!9547 = !DILocation(line: 410, column: 8, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9549, file: !9189, line: 410, column: 8)
!9549 = distinct !DILexicalBlock(scope: !9540, file: !9189, line: 409, column: 6)
!9550 = !DILocation(line: 410, column: 13, scope: !9548)
!9551 = !DILocation(line: 410, column: 8, scope: !9549)
!9552 = distinct !{!9552, !9545, !9553}
!9553 = !DILocation(line: 414, column: 20, scope: !9540)
!9554 = !DILocation(line: 417, column: 2, scope: !9532)
!9555 = !DILocation(line: 418, column: 1, scope: !9532)
!9556 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !717, file: !717, line: 23, type: !4928, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9557)
!9557 = !{!9558}
!9558 = !DILocalVariable(name: "hook", arg: 1, scope: !9556, file: !717, line: 23, type: !447)
!9559 = !DILocation(line: 0, scope: !9556)
!9560 = !DILocation(line: 25, column: 15, scope: !9556)
!9561 = !DILocation(line: 26, column: 1, scope: !9556)
!9562 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !717, file: !717, line: 14, type: !448, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9563)
!9563 = !{!9564}
!9564 = !DILocalVariable(name: "c", arg: 1, scope: !9562, file: !717, line: 14, type: !105)
!9565 = !DILocation(line: 0, scope: !9562)
!9566 = !DILocation(line: 18, column: 2, scope: !9562)
!9567 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !717, file: !717, line: 28, type: !9568, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9570)
!9568 = !DISubroutineType(types: !9569)
!9569 = !{!105, !105, !713}
!9570 = !{!9571, !9572}
!9571 = !DILocalVariable(name: "c", arg: 1, scope: !9567, file: !717, line: 28, type: !105)
!9572 = !DILocalVariable(name: "stream", arg: 2, scope: !9567, file: !717, line: 28, type: !713)
!9573 = !DILocation(line: 0, scope: !9567)
!9574 = !DILocation(line: 30, column: 27, scope: !9567)
!9575 = !DILocation(line: 30, column: 50, scope: !9567)
!9576 = !DILocation(line: 30, column: 9, scope: !9567)
!9577 = !DILocation(line: 30, column: 2, scope: !9567)
!9578 = distinct !DISubprogram(name: "fputc", scope: !717, file: !717, line: 41, type: !9568, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9579)
!9579 = !{!9580, !9581}
!9580 = !DILocalVariable(name: "c", arg: 1, scope: !9578, file: !717, line: 41, type: !105)
!9581 = !DILocalVariable(name: "stream", arg: 2, scope: !9578, file: !717, line: 41, type: !713)
!9582 = !DILocation(line: 0, scope: !9578)
!9583 = !DILocation(line: 43, column: 9, scope: !9578)
!9584 = !DILocation(line: 43, column: 2, scope: !9578)
!9585 = distinct !DISubprogram(name: "zephyr_fputc", scope: !9586, file: !9586, line: 72, type: !9568, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9587)
!9586 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!9587 = !{!9588, !9589}
!9588 = !DILocalVariable(name: "c", arg: 1, scope: !9585, file: !9586, line: 72, type: !105)
!9589 = !DILocalVariable(name: "stream", arg: 2, scope: !9585, file: !9586, line: 72, type: !713)
!9590 = !DILocation(line: 0, scope: !9585)
!9591 = !DILocation(line: 81, column: 2, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9585, file: !9586, line: 81, column: 2)
!9593 = !{i64 2154220665}
!9594 = !DILocation(line: 82, column: 9, scope: !9585)
!9595 = !DILocation(line: 82, column: 2, scope: !9585)
!9596 = distinct !DISubprogram(name: "fputs", scope: !717, file: !717, line: 46, type: !9597, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9600)
!9597 = !DISubroutineType(types: !9598)
!9598 = !{!105, !9193, !9599}
!9599 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !713)
!9600 = !{!9601, !9602, !9603, !9604}
!9601 = !DILocalVariable(name: "s", arg: 1, scope: !9596, file: !717, line: 46, type: !9193)
!9602 = !DILocalVariable(name: "stream", arg: 2, scope: !9596, file: !717, line: 46, type: !9599)
!9603 = !DILocalVariable(name: "len", scope: !9596, file: !717, line: 48, type: !105)
!9604 = !DILocalVariable(name: "ret", scope: !9596, file: !717, line: 49, type: !105)
!9605 = !DILocation(line: 0, scope: !9596)
!9606 = !DILocation(line: 48, column: 12, scope: !9596)
!9607 = !DILocation(line: 51, column: 8, scope: !9596)
!9608 = !DILocation(line: 53, column: 13, scope: !9596)
!9609 = !DILocation(line: 53, column: 9, scope: !9596)
!9610 = !DILocation(line: 53, column: 2, scope: !9596)
!9611 = distinct !DISubprogram(name: "fwrite", scope: !717, file: !717, line: 99, type: !9612, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9614)
!9612 = !DISubroutineType(types: !9613)
!9613 = !{!111, !9493, !111, !111, !9599}
!9614 = !{!9615, !9616, !9617, !9618}
!9615 = !DILocalVariable(name: "ptr", arg: 1, scope: !9611, file: !717, line: 99, type: !9493)
!9616 = !DILocalVariable(name: "size", arg: 2, scope: !9611, file: !717, line: 99, type: !111)
!9617 = !DILocalVariable(name: "nitems", arg: 3, scope: !9611, file: !717, line: 99, type: !111)
!9618 = !DILocalVariable(name: "stream", arg: 4, scope: !9611, file: !717, line: 100, type: !9599)
!9619 = !DILocation(line: 0, scope: !9611)
!9620 = !DILocation(line: 102, column: 9, scope: !9611)
!9621 = !DILocation(line: 102, column: 2, scope: !9611)
!9622 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !9586, file: !9586, line: 96, type: !9612, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9623)
!9623 = !{!9624, !9625, !9626, !9627}
!9624 = !DILocalVariable(name: "ptr", arg: 1, scope: !9622, file: !9586, line: 96, type: !9493)
!9625 = !DILocalVariable(name: "size", arg: 2, scope: !9622, file: !9586, line: 96, type: !111)
!9626 = !DILocalVariable(name: "nitems", arg: 3, scope: !9622, file: !9586, line: 96, type: !111)
!9627 = !DILocalVariable(name: "stream", arg: 4, scope: !9622, file: !9586, line: 96, type: !9599)
!9628 = !DILocation(line: 0, scope: !9622)
!9629 = !DILocation(line: 107, column: 2, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !9622, file: !9586, line: 107, column: 2)
!9631 = !{i64 2154220769}
!9632 = !DILocation(line: 108, column: 9, scope: !9622)
!9633 = !DILocation(line: 108, column: 2, scope: !9622)
!9634 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !717, file: !717, line: 56, type: !9612, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9635)
!9635 = !{!9636, !9637, !9638, !9639, !9640, !9641, !9642, !9643}
!9636 = !DILocalVariable(name: "ptr", arg: 1, scope: !9634, file: !717, line: 56, type: !9493)
!9637 = !DILocalVariable(name: "size", arg: 2, scope: !9634, file: !717, line: 56, type: !111)
!9638 = !DILocalVariable(name: "nitems", arg: 3, scope: !9634, file: !717, line: 57, type: !111)
!9639 = !DILocalVariable(name: "stream", arg: 4, scope: !9634, file: !717, line: 57, type: !9599)
!9640 = !DILocalVariable(name: "i", scope: !9634, file: !717, line: 59, type: !111)
!9641 = !DILocalVariable(name: "j", scope: !9634, file: !717, line: 60, type: !111)
!9642 = !DILocalVariable(name: "p", scope: !9634, file: !717, line: 61, type: !2972)
!9643 = !DILabel(scope: !9634, name: "done", file: !717, line: 82)
!9644 = !DILocation(line: 0, scope: !9634)
!9645 = !DILocation(line: 63, column: 14, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9634, file: !717, line: 63, column: 6)
!9647 = !DILocation(line: 63, column: 24, scope: !9646)
!9648 = !DILocation(line: 72, column: 3, scope: !9649)
!9649 = distinct !DILexicalBlock(scope: !9634, file: !717, line: 70, column: 5)
!9650 = !DILocation(line: 0, scope: !9649)
!9651 = !DILocation(line: 73, column: 8, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9653, file: !717, line: 73, column: 8)
!9653 = distinct !DILexicalBlock(scope: !9649, file: !717, line: 72, column: 6)
!9654 = !DILocation(line: 73, column: 29, scope: !9652)
!9655 = !DILocation(line: 73, column: 27, scope: !9652)
!9656 = !DILocation(line: 73, column: 21, scope: !9652)
!9657 = !DILocation(line: 73, column: 33, scope: !9652)
!9658 = !DILocation(line: 73, column: 8, scope: !9653)
!9659 = !DILocation(line: 76, column: 5, scope: !9653)
!9660 = !DILocation(line: 77, column: 14, scope: !9649)
!9661 = !DILocation(line: 77, column: 3, scope: !9653)
!9662 = distinct !{!9662, !9648, !9663}
!9663 = !DILocation(line: 77, column: 17, scope: !9649)
!9664 = !DILocation(line: 79, column: 4, scope: !9649)
!9665 = !DILocation(line: 80, column: 13, scope: !9634)
!9666 = !DILocation(line: 80, column: 2, scope: !9649)
!9667 = distinct !{!9667, !9668, !9669}
!9668 = !DILocation(line: 70, column: 2, scope: !9634)
!9669 = !DILocation(line: 80, column: 16, scope: !9634)
!9670 = !DILocation(line: 82, column: 1, scope: !9634)
!9671 = !DILocation(line: 83, column: 17, scope: !9634)
!9672 = !DILocation(line: 83, column: 2, scope: !9634)
!9673 = !DILocation(line: 84, column: 1, scope: !9634)
!9674 = distinct !DISubprogram(name: "puts", scope: !717, file: !717, line: 106, type: !9675, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9677)
!9675 = !DISubroutineType(types: !9676)
!9676 = !{!105, !269}
!9677 = !{!9678}
!9678 = !DILocalVariable(name: "s", arg: 1, scope: !9674, file: !717, line: 106, type: !269)
!9679 = !DILocation(line: 0, scope: !9674)
!9680 = !DILocation(line: 108, column: 6, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !9674, file: !717, line: 108, column: 6)
!9682 = !DILocation(line: 108, column: 23, scope: !9681)
!9683 = !DILocation(line: 108, column: 6, scope: !9674)
!9684 = !DILocation(line: 112, column: 9, scope: !9674)
!9685 = !DILocation(line: 112, column: 29, scope: !9674)
!9686 = !DILocation(line: 112, column: 2, scope: !9674)
!9687 = !DILocation(line: 113, column: 1, scope: !9674)
!9688 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !828, file: !828, line: 368, type: !879, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9689)
!9689 = !{!9690}
!9690 = !DILocalVariable(name: "dev", arg: 1, scope: !9688, file: !828, line: 368, type: !855)
!9691 = !DILocation(line: 0, scope: !9688)
!9692 = !DILocation(line: 370, column: 2, scope: !9688)
!9693 = !DILocation(line: 371, column: 1, scope: !9688)
!9694 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !828, file: !828, line: 243, type: !9695, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9697)
!9695 = !DISubroutineType(types: !9696)
!9696 = !{null, !105, !105, !855}
!9697 = !{!9698, !9699, !9700, !9701, !9703}
!9698 = !DILocalVariable(name: "min", arg: 1, scope: !9694, file: !828, line: 243, type: !105)
!9699 = !DILocalVariable(name: "max", arg: 2, scope: !9694, file: !828, line: 243, type: !105)
!9700 = !DILocalVariable(name: "dev", arg: 3, scope: !9694, file: !828, line: 243, type: !855)
!9701 = !DILocalVariable(name: "data", scope: !9694, file: !828, line: 245, type: !9702)
!9702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 32)
!9703 = !DILocalVariable(name: "line", scope: !9694, file: !828, line: 246, type: !105)
!9704 = !DILocation(line: 0, scope: !9694)
!9705 = !DILocation(line: 245, column: 38, scope: !9694)
!9706 = !DILocation(line: 249, column: 24, scope: !9707)
!9707 = distinct !DILexicalBlock(scope: !9708, file: !828, line: 249, column: 2)
!9708 = distinct !DILexicalBlock(scope: !9694, file: !828, line: 249, column: 2)
!9709 = !DILocation(line: 249, column: 2, scope: !9708)
!9710 = !DILocation(line: 251, column: 7, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9712, file: !828, line: 251, column: 7)
!9712 = distinct !DILexicalBlock(scope: !9707, file: !828, line: 249, column: 39)
!9713 = !DILocation(line: 251, column: 7, scope: !9712)
!9714 = !DILocation(line: 253, column: 4, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !9711, file: !828, line: 251, column: 36)
!9716 = !DILocation(line: 256, column: 24, scope: !9717)
!9717 = distinct !DILexicalBlock(scope: !9715, file: !828, line: 256, column: 8)
!9718 = !DILocation(line: 256, column: 9, scope: !9717)
!9719 = !DILocation(line: 256, column: 8, scope: !9715)
!9720 = !DILocation(line: 260, column: 43, scope: !9715)
!9721 = !DILocation(line: 260, column: 4, scope: !9715)
!9722 = !DILocation(line: 261, column: 3, scope: !9715)
!9723 = !DILocation(line: 249, column: 35, scope: !9707)
!9724 = distinct !{!9724, !9709, !9725}
!9725 = !DILocation(line: 262, column: 2, scope: !9708)
!9726 = !DILocation(line: 263, column: 1, scope: !9694)
!9727 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !828, file: !828, line: 158, type: !448, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9728)
!9728 = !{!9729}
!9729 = !DILocalVariable(name: "line", arg: 1, scope: !9727, file: !828, line: 158, type: !105)
!9730 = !DILocation(line: 0, scope: !9727)
!9731 = !DILocation(line: 170, column: 38, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9733, file: !828, line: 160, column: 17)
!9733 = distinct !DILexicalBlock(scope: !9727, file: !828, line: 160, column: 6)
!9734 = !DILocation(line: 170, column: 10, scope: !9732)
!9735 = !DILocation(line: 176, column: 1, scope: !9727)
!9736 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !828, file: !828, line: 183, type: !9737, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9739)
!9737 = !DISubroutineType(types: !9738)
!9738 = !{null, !105}
!9739 = !{!9740}
!9740 = !DILocalVariable(name: "line", arg: 1, scope: !9736, file: !828, line: 183, type: !105)
!9741 = !DILocation(line: 0, scope: !9736)
!9742 = !DILocation(line: 195, column: 28, scope: !9743)
!9743 = distinct !DILexicalBlock(scope: !9744, file: !828, line: 185, column: 17)
!9744 = distinct !DILexicalBlock(scope: !9736, file: !828, line: 185, column: 6)
!9745 = !DILocation(line: 195, column: 3, scope: !9743)
!9746 = !DILocation(line: 200, column: 1, scope: !9736)
!9747 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9748, file: !9748, line: 910, type: !7898, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9749)
!9748 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9749 = !{!9750}
!9750 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9747, file: !9748, line: 910, type: !113)
!9751 = !DILocation(line: 0, scope: !9747)
!9752 = !DILocation(line: 912, column: 3, scope: !9747)
!9753 = !DILocation(line: 913, column: 1, scope: !9747)
!9754 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9748, file: !9748, line: 834, type: !9084, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9755)
!9755 = !{!9756}
!9756 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9754, file: !9748, line: 834, type: !113)
!9757 = !DILocation(line: 0, scope: !9754)
!9758 = !DILocation(line: 836, column: 11, scope: !9754)
!9759 = !DILocation(line: 836, column: 40, scope: !9754)
!9760 = !DILocation(line: 836, column: 3, scope: !9754)
!9761 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !828, file: !828, line: 304, type: !879, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9762)
!9762 = !{!9763}
!9763 = !DILocalVariable(name: "dev", arg: 1, scope: !9761, file: !828, line: 304, type: !855)
!9764 = !DILocation(line: 0, scope: !9761)
!9765 = !DILocation(line: 306, column: 2, scope: !9761)
!9766 = !DILocation(line: 307, column: 1, scope: !9761)
!9767 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !828, file: !828, line: 299, type: !879, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9768)
!9768 = !{!9769}
!9769 = !DILocalVariable(name: "dev", arg: 1, scope: !9767, file: !828, line: 299, type: !855)
!9770 = !DILocation(line: 0, scope: !9767)
!9771 = !DILocation(line: 301, column: 2, scope: !9767)
!9772 = !DILocation(line: 302, column: 1, scope: !9767)
!9773 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !828, file: !828, line: 294, type: !879, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9774)
!9774 = !{!9775}
!9775 = !DILocalVariable(name: "dev", arg: 1, scope: !9773, file: !828, line: 294, type: !855)
!9776 = !DILocation(line: 0, scope: !9773)
!9777 = !DILocation(line: 296, column: 2, scope: !9773)
!9778 = !DILocation(line: 297, column: 1, scope: !9773)
!9779 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !828, file: !828, line: 397, type: !879, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9780)
!9780 = !{!9781}
!9781 = !DILocalVariable(name: "dev", arg: 1, scope: !9779, file: !828, line: 397, type: !855)
!9782 = !DILocation(line: 0, scope: !9779)
!9783 = !DILocation(line: 399, column: 2, scope: !9779)
!9784 = !DILocation(line: 400, column: 1, scope: !9779)
!9785 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !828, file: !828, line: 392, type: !879, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9786)
!9786 = !{!9787}
!9787 = !DILocalVariable(name: "dev", arg: 1, scope: !9785, file: !828, line: 392, type: !855)
!9788 = !DILocation(line: 0, scope: !9785)
!9789 = !DILocation(line: 394, column: 2, scope: !9785)
!9790 = !DILocation(line: 395, column: 1, scope: !9785)
!9791 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !828, file: !828, line: 289, type: !879, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9792)
!9792 = !{!9793}
!9793 = !DILocalVariable(name: "dev", arg: 1, scope: !9791, file: !828, line: 289, type: !855)
!9794 = !DILocation(line: 0, scope: !9791)
!9795 = !DILocation(line: 291, column: 2, scope: !9791)
!9796 = !DILocation(line: 292, column: 1, scope: !9791)
!9797 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !828, file: !828, line: 387, type: !879, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9798)
!9798 = !{!9799}
!9799 = !DILocalVariable(name: "dev", arg: 1, scope: !9797, file: !828, line: 387, type: !855)
!9800 = !DILocation(line: 0, scope: !9797)
!9801 = !DILocation(line: 389, column: 2, scope: !9797)
!9802 = !DILocation(line: 390, column: 1, scope: !9797)
!9803 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !828, file: !828, line: 382, type: !879, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9804)
!9804 = !{!9805}
!9805 = !DILocalVariable(name: "dev", arg: 1, scope: !9803, file: !828, line: 382, type: !855)
!9806 = !DILocation(line: 0, scope: !9803)
!9807 = !DILocation(line: 384, column: 2, scope: !9803)
!9808 = !DILocation(line: 385, column: 1, scope: !9803)
!9809 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !828, file: !828, line: 373, type: !879, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9810)
!9810 = !{!9811}
!9811 = !DILocalVariable(name: "dev", arg: 1, scope: !9809, file: !828, line: 373, type: !855)
!9812 = !DILocation(line: 0, scope: !9809)
!9813 = !DILocation(line: 375, column: 2, scope: !9809)
!9814 = !DILocation(line: 376, column: 1, scope: !9809)
!9815 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !828, file: !828, line: 284, type: !879, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9816)
!9816 = !{!9817}
!9817 = !DILocalVariable(name: "dev", arg: 1, scope: !9815, file: !828, line: 284, type: !855)
!9818 = !DILocation(line: 0, scope: !9815)
!9819 = !DILocation(line: 286, column: 2, scope: !9815)
!9820 = !DILocation(line: 287, column: 1, scope: !9815)
!9821 = distinct !DISubprogram(name: "stm32_exti_init", scope: !828, file: !828, line: 416, type: !853, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9822)
!9822 = !{!9823}
!9823 = !DILocalVariable(name: "dev", arg: 1, scope: !9821, file: !828, line: 416, type: !855)
!9824 = !DILocation(line: 0, scope: !9821)
!9825 = !DILocation(line: 418, column: 2, scope: !9821)
!9826 = !DILocation(line: 420, column: 2, scope: !9821)
!9827 = !DILocation(line: 0, scope: !878)
!9828 = !DILocation(line: 493, column: 2, scope: !9829)
!9829 = distinct !DILexicalBlock(scope: !878, file: !828, line: 493, column: 2)
!9830 = !DILocation(line: 497, column: 2, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !878, file: !828, line: 497, column: 2)
!9832 = !DILocation(line: 507, column: 2, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !878, file: !828, line: 507, column: 2)
!9834 = !DILocation(line: 512, column: 2, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !878, file: !828, line: 512, column: 2)
!9836 = !DILocation(line: 516, column: 2, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !878, file: !828, line: 516, column: 2)
!9838 = !DILocation(line: 523, column: 2, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !878, file: !828, line: 523, column: 2)
!9840 = !DILocation(line: 527, column: 2, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !878, file: !828, line: 527, column: 2)
!9842 = !DILocation(line: 581, column: 2, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !878, file: !828, line: 581, column: 2)
!9844 = !DILocation(line: 586, column: 2, scope: !9845)
!9845 = distinct !DILexicalBlock(scope: !878, file: !828, line: 586, column: 2)
!9846 = !DILocation(line: 591, column: 2, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !878, file: !828, line: 591, column: 2)
!9848 = !DILocation(line: 595, column: 2, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !878, file: !828, line: 595, column: 2)
!9850 = !DILocation(line: 607, column: 1, scope: !878)
!9851 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !828, file: !828, line: 112, type: !9737, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9852)
!9852 = !{!9853, !9854}
!9853 = !DILocalVariable(name: "line", arg: 1, scope: !9851, file: !828, line: 112, type: !105)
!9854 = !DILocalVariable(name: "irqnum", scope: !9851, file: !828, line: 114, type: !105)
!9855 = !DILocation(line: 0, scope: !9851)
!9856 = !DILocation(line: 122, column: 13, scope: !9857)
!9857 = distinct !DILexicalBlock(scope: !9851, file: !828, line: 122, column: 6)
!9858 = !DILocation(line: 122, column: 6, scope: !9851)
!9859 = !DILocation(line: 123, column: 3, scope: !9860)
!9860 = distinct !DILexicalBlock(scope: !9861, file: !828, line: 123, column: 3)
!9861 = distinct !DILexicalBlock(scope: !9862, file: !828, line: 123, column: 3)
!9862 = distinct !DILexicalBlock(scope: !9863, file: !828, line: 123, column: 3)
!9863 = distinct !DILexicalBlock(scope: !9857, file: !828, line: 122, column: 22)
!9864 = !DILocation(line: 121, column: 11, scope: !9851)
!9865 = !DILocation(line: 130, column: 26, scope: !9851)
!9866 = !DILocation(line: 130, column: 2, scope: !9851)
!9867 = !DILocation(line: 134, column: 2, scope: !9851)
!9868 = !DILocation(line: 135, column: 1, scope: !9851)
!9869 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9748, file: !9748, line: 268, type: !7898, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9870)
!9870 = !{!9871}
!9871 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9869, file: !9748, line: 268, type: !113)
!9872 = !DILocation(line: 0, scope: !9869)
!9873 = !DILocation(line: 270, column: 3, scope: !9869)
!9874 = !DILocation(line: 271, column: 1, scope: !9869)
!9875 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !828, file: !828, line: 137, type: !9737, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9876)
!9876 = !{!9877}
!9877 = !DILocalVariable(name: "line", arg: 1, scope: !9875, file: !828, line: 137, type: !105)
!9878 = !DILocation(line: 0, scope: !9875)
!9879 = !DILocation(line: 141, column: 11, scope: !9880)
!9880 = distinct !DILexicalBlock(scope: !9875, file: !828, line: 141, column: 6)
!9881 = !DILocation(line: 141, column: 6, scope: !9875)
!9882 = !DILocation(line: 145, column: 28, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9880, file: !828, line: 141, column: 17)
!9884 = !DILocation(line: 145, column: 3, scope: !9883)
!9885 = !DILocation(line: 147, column: 2, scope: !9883)
!9886 = !DILocation(line: 151, column: 1, scope: !9875)
!9887 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9748, file: !9748, line: 309, type: !7898, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9888)
!9888 = !{!9889}
!9889 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9887, file: !9748, line: 309, type: !113)
!9890 = !DILocation(line: 0, scope: !9887)
!9891 = !DILocation(line: 311, column: 3, scope: !9887)
!9892 = !DILocation(line: 312, column: 1, scope: !9887)
!9893 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !828, file: !828, line: 202, type: !9894, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9896)
!9894 = !DISubroutineType(types: !9895)
!9895 = !{null, !105, !105}
!9896 = !{!9897, !9898}
!9897 = !DILocalVariable(name: "line", arg: 1, scope: !9893, file: !828, line: 202, type: !105)
!9898 = !DILocalVariable(name: "trigger", arg: 2, scope: !9893, file: !828, line: 202, type: !105)
!9899 = !DILocation(line: 0, scope: !9893)
!9900 = !DILocation(line: 211, column: 2, scope: !9893)
!9901 = !DILocation(line: 213, column: 36, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9893, file: !828, line: 211, column: 19)
!9903 = !DILocation(line: 213, column: 3, scope: !9902)
!9904 = !DILocation(line: 214, column: 3, scope: !9902)
!9905 = !DILocation(line: 215, column: 3, scope: !9902)
!9906 = !DILocation(line: 217, column: 35, scope: !9902)
!9907 = !DILocation(line: 217, column: 3, scope: !9902)
!9908 = !DILocation(line: 218, column: 3, scope: !9902)
!9909 = !DILocation(line: 219, column: 3, scope: !9902)
!9910 = !DILocation(line: 221, column: 36, scope: !9902)
!9911 = !DILocation(line: 221, column: 3, scope: !9902)
!9912 = !DILocation(line: 222, column: 3, scope: !9902)
!9913 = !DILocation(line: 223, column: 3, scope: !9902)
!9914 = !DILocation(line: 225, column: 35, scope: !9902)
!9915 = !DILocation(line: 225, column: 3, scope: !9902)
!9916 = !DILocation(line: 226, column: 3, scope: !9902)
!9917 = !DILocation(line: 227, column: 3, scope: !9902)
!9918 = !DILocation(line: 232, column: 1, scope: !9893)
!9919 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9748, file: !9748, line: 573, type: !7898, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9920)
!9920 = !{!9921}
!9921 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9919, file: !9748, line: 573, type: !113)
!9922 = !DILocation(line: 0, scope: !9919)
!9923 = !DILocation(line: 575, column: 3, scope: !9919)
!9924 = !DILocation(line: 577, column: 1, scope: !9919)
!9925 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9748, file: !9748, line: 703, type: !7898, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9926)
!9926 = !{!9927}
!9927 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9925, file: !9748, line: 703, type: !113)
!9928 = !DILocation(line: 0, scope: !9925)
!9929 = !DILocation(line: 705, column: 3, scope: !9925)
!9930 = !DILocation(line: 706, column: 1, scope: !9925)
!9931 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9748, file: !9748, line: 529, type: !7898, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9932)
!9932 = !{!9933}
!9933 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9931, file: !9748, line: 529, type: !113)
!9934 = !DILocation(line: 0, scope: !9931)
!9935 = !DILocation(line: 531, column: 3, scope: !9931)
!9936 = !DILocation(line: 533, column: 1, scope: !9931)
!9937 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9748, file: !9748, line: 661, type: !7898, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9938)
!9938 = !{!9939}
!9939 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9937, file: !9748, line: 661, type: !113)
!9940 = !DILocation(line: 0, scope: !9937)
!9941 = !DILocation(line: 663, column: 3, scope: !9937)
!9942 = !DILocation(line: 664, column: 1, scope: !9937)
!9943 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !828, file: !828, line: 433, type: !9944, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9946)
!9944 = !DISubroutineType(types: !9945)
!9945 = !{!105, !105, !866, !104}
!9946 = !{!9947, !9948, !9949, !9950, !9952}
!9947 = !DILocalVariable(name: "line", arg: 1, scope: !9943, file: !828, line: 433, type: !105)
!9948 = !DILocalVariable(name: "cb", arg: 2, scope: !9943, file: !828, line: 433, type: !866)
!9949 = !DILocalVariable(name: "arg", arg: 3, scope: !9943, file: !828, line: 433, type: !104)
!9950 = !DILocalVariable(name: "dev", scope: !9943, file: !828, line: 435, type: !9951)
!9951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !855)
!9952 = !DILocalVariable(name: "data", scope: !9943, file: !828, line: 436, type: !9702)
!9953 = !DILocation(line: 0, scope: !9943)
!9954 = !DILocation(line: 438, column: 21, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9943, file: !828, line: 438, column: 6)
!9956 = !DILocation(line: 438, column: 6, scope: !9955)
!9957 = !DILocation(line: 438, column: 6, scope: !9943)
!9958 = !DILocation(line: 442, column: 20, scope: !9943)
!9959 = !DILocation(line: 443, column: 17, scope: !9943)
!9960 = !DILocation(line: 443, column: 22, scope: !9943)
!9961 = !DILocation(line: 445, column: 2, scope: !9943)
!9962 = !DILocation(line: 446, column: 1, scope: !9943)
!9963 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !828, file: !828, line: 448, type: !9737, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9964)
!9964 = !{!9965, !9966, !9967}
!9965 = !DILocalVariable(name: "line", arg: 1, scope: !9963, file: !828, line: 448, type: !105)
!9966 = !DILocalVariable(name: "dev", scope: !9963, file: !828, line: 450, type: !9951)
!9967 = !DILocalVariable(name: "data", scope: !9963, file: !828, line: 451, type: !9702)
!9968 = !DILocation(line: 0, scope: !9963)
!9969 = !DILocation(line: 453, column: 17, scope: !9963)
!9970 = !DILocation(line: 453, column: 20, scope: !9963)
!9971 = !DILocation(line: 454, column: 17, scope: !9963)
!9972 = !DILocation(line: 454, column: 22, scope: !9963)
!9973 = !DILocation(line: 455, column: 1, scope: !9963)
!9974 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1014, file: !1014, line: 183, type: !1050, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9975)
!9975 = !{!9976, !9977, !9978, !9979, !9980}
!9976 = !DILocalVariable(name: "dev", arg: 1, scope: !9974, file: !1014, line: 183, type: !1041)
!9977 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9974, file: !1014, line: 184, type: !1052)
!9978 = !DILocalVariable(name: "pclken", scope: !9974, file: !1014, line: 186, type: !1004)
!9979 = !DILocalVariable(name: "reg", scope: !9974, file: !1014, line: 187, type: !1593)
!9980 = !DILocalVariable(name: "reg_val", scope: !9974, file: !1014, line: 188, type: !113)
!9981 = !DILocation(line: 0, scope: !9974)
!9982 = !DILocation(line: 192, column: 6, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9974, file: !1014, line: 192, column: 6)
!9984 = !DILocation(line: 192, column: 6, scope: !9974)
!9985 = !DILocation(line: 197, column: 52, scope: !9974)
!9986 = !DILocation(line: 197, column: 8, scope: !9974)
!9987 = !DILocation(line: 198, column: 12, scope: !9974)
!9988 = !DILocation(line: 199, column: 21, scope: !9974)
!9989 = !DILocation(line: 199, column: 10, scope: !9974)
!9990 = !DILocation(line: 200, column: 7, scope: !9974)
!9991 = !DILocation(line: 202, column: 2, scope: !9974)
!9992 = !DILocation(line: 203, column: 1, scope: !9974)
!9993 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1014, file: !1014, line: 205, type: !1050, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9994)
!9994 = !{!9995, !9996, !9997, !9998, !9999}
!9995 = !DILocalVariable(name: "dev", arg: 1, scope: !9993, file: !1014, line: 205, type: !1041)
!9996 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9993, file: !1014, line: 206, type: !1052)
!9997 = !DILocalVariable(name: "pclken", scope: !9993, file: !1014, line: 208, type: !1004)
!9998 = !DILocalVariable(name: "reg", scope: !9993, file: !1014, line: 209, type: !1593)
!9999 = !DILocalVariable(name: "reg_val", scope: !9993, file: !1014, line: 210, type: !113)
!10000 = !DILocation(line: 0, scope: !9993)
!10001 = !DILocation(line: 214, column: 6, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !9993, file: !1014, line: 214, column: 6)
!10003 = !DILocation(line: 214, column: 6, scope: !9993)
!10004 = !DILocation(line: 219, column: 52, scope: !9993)
!10005 = !DILocation(line: 219, column: 8, scope: !9993)
!10006 = !DILocation(line: 220, column: 12, scope: !9993)
!10007 = !DILocation(line: 221, column: 22, scope: !9993)
!10008 = !DILocation(line: 221, column: 13, scope: !9993)
!10009 = !DILocation(line: 221, column: 10, scope: !9993)
!10010 = !DILocation(line: 222, column: 7, scope: !9993)
!10011 = !DILocation(line: 224, column: 2, scope: !9993)
!10012 = !DILocation(line: 225, column: 1, scope: !9993)
!10013 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1014, file: !1014, line: 262, type: !1066, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !10014)
!10014 = !{!10015, !10016, !10017, !10018, !10019, !10020, !10021, !10022}
!10015 = !DILocalVariable(name: "clock", arg: 1, scope: !10013, file: !1014, line: 262, type: !1041)
!10016 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10013, file: !1014, line: 263, type: !1052)
!10017 = !DILocalVariable(name: "rate", arg: 3, scope: !10013, file: !1014, line: 264, type: !1010)
!10018 = !DILocalVariable(name: "pclken", scope: !10013, file: !1014, line: 266, type: !1004)
!10019 = !DILocalVariable(name: "ahb_clock", scope: !10013, file: !1014, line: 273, type: !113)
!10020 = !DILocalVariable(name: "apb1_clock", scope: !10013, file: !1014, line: 274, type: !113)
!10021 = !DILocalVariable(name: "apb2_clock", scope: !10013, file: !1014, line: 276, type: !113)
!10022 = !DILocalVariable(name: "ahb3_clock", scope: !10013, file: !1014, line: 286, type: !113)
!10023 = !DILocation(line: 0, scope: !10013)
!10024 = !DILocation(line: 273, column: 23, scope: !10013)
!10025 = !DILocation(line: 299, column: 18, scope: !10013)
!10026 = !DILocation(line: 299, column: 2, scope: !10013)
!10027 = !DILocation(line: 274, column: 24, scope: !10013)
!10028 = !DILocation(line: 319, column: 3, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10013, file: !1014, line: 299, column: 23)
!10030 = !DILocation(line: 276, column: 24, scope: !10013)
!10031 = !DILocation(line: 323, column: 3, scope: !10029)
!10032 = !DILocation(line: 346, column: 33, scope: !10029)
!10033 = !DILocation(line: 346, column: 11, scope: !10029)
!10034 = !DILocation(line: 350, column: 3, scope: !10029)
!10035 = !DILocation(line: 354, column: 33, scope: !10029)
!10036 = !DILocation(line: 354, column: 11, scope: !10029)
!10037 = !DILocation(line: 358, column: 3, scope: !10029)
!10038 = !DILocation(line: 374, column: 3, scope: !10029)
!10039 = !DILocation(line: 379, column: 3, scope: !10029)
!10040 = !DILocation(line: 0, scope: !10029)
!10041 = !DILocation(line: 396, column: 1, scope: !10013)
!10042 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1014, file: !1014, line: 227, type: !1082, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !10043)
!10043 = !{!10044, !10045, !10046, !10047, !10048, !10049, !10050, !10051}
!10044 = !DILocalVariable(name: "dev", arg: 1, scope: !10042, file: !1014, line: 227, type: !1041)
!10045 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10042, file: !1014, line: 228, type: !1052)
!10046 = !DILocalVariable(name: "data", arg: 3, scope: !10042, file: !1014, line: 229, type: !104)
!10047 = !DILocalVariable(name: "pclken", scope: !10042, file: !1014, line: 233, type: !1004)
!10048 = !DILocalVariable(name: "reg", scope: !10042, file: !1014, line: 234, type: !1593)
!10049 = !DILocalVariable(name: "reg_val", scope: !10042, file: !1014, line: 235, type: !113)
!10050 = !DILocalVariable(name: "dt_val", scope: !10042, file: !1014, line: 235, type: !113)
!10051 = !DILocalVariable(name: "err", scope: !10042, file: !1014, line: 236, type: !105)
!10052 = !DILocation(line: 0, scope: !10042)
!10053 = !DILocation(line: 241, column: 30, scope: !10042)
!10054 = !DILocation(line: 241, column: 8, scope: !10042)
!10055 = !DILocation(line: 242, column: 10, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10042, file: !1014, line: 242, column: 6)
!10057 = !DILocation(line: 242, column: 6, scope: !10042)
!10058 = !DILocation(line: 247, column: 11, scope: !10042)
!10059 = !DILocation(line: 248, column: 6, scope: !10042)
!10060 = !DILocation(line: 247, column: 44, scope: !10042)
!10061 = !DILocation(line: 250, column: 6, scope: !10042)
!10062 = !DILocation(line: 249, column: 52, scope: !10042)
!10063 = !DILocation(line: 249, column: 8, scope: !10042)
!10064 = !DILocation(line: 251, column: 12, scope: !10042)
!10065 = !DILocation(line: 252, column: 10, scope: !10042)
!10066 = !DILocation(line: 253, column: 7, scope: !10042)
!10067 = !DILocation(line: 255, column: 2, scope: !10042)
!10068 = !DILocation(line: 260, column: 1, scope: !10042)
!10069 = distinct !DISubprogram(name: "enabled_clock", scope: !1014, file: !1014, line: 100, type: !10070, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !10072)
!10070 = !DISubroutineType(types: !10071)
!10071 = !{!105, !113}
!10072 = !{!10073, !10074}
!10073 = !DILocalVariable(name: "src_clk", arg: 1, scope: !10069, file: !1014, line: 100, type: !113)
!10074 = !DILocalVariable(name: "r", scope: !10069, file: !1014, line: 102, type: !105)
!10075 = !DILocation(line: 0, scope: !10069)
!10076 = !DILocation(line: 104, column: 2, scope: !10069)
!10077 = !DILocation(line: 180, column: 2, scope: !10069)
!10078 = !DILocation(line: 181, column: 1, scope: !10069)
!10079 = distinct !DISubprogram(name: "get_bus_clock", scope: !1014, file: !1014, line: 79, type: !10080, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !10082)
!10080 = !DISubroutineType(types: !10081)
!10081 = !{!113, !113, !113}
!10082 = !{!10083, !10084}
!10083 = !DILocalVariable(name: "clock", arg: 1, scope: !10079, file: !1014, line: 79, type: !113)
!10084 = !DILocalVariable(name: "prescaler", arg: 2, scope: !10079, file: !1014, line: 79, type: !113)
!10085 = !DILocation(line: 0, scope: !10079)
!10086 = !DILocation(line: 81, column: 15, scope: !10079)
!10087 = !DILocation(line: 81, column: 2, scope: !10079)
!10088 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1014, file: !1014, line: 68, type: !10089, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !10091)
!10089 = !DISubroutineType(types: !10090)
!10090 = !{!113, !113, !105, !105, !105}
!10091 = !{!10092, !10093, !10094, !10095}
!10092 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !10088, file: !1014, line: 68, type: !113)
!10093 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !10088, file: !1014, line: 69, type: !105)
!10094 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !10088, file: !1014, line: 70, type: !105)
!10095 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !10088, file: !1014, line: 71, type: !105)
!10096 = !DILocation(line: 0, scope: !10088)
!10097 = !DILocation(line: 75, column: 22, scope: !10088)
!10098 = !DILocation(line: 76, column: 13, scope: !10088)
!10099 = !DILocation(line: 75, column: 34, scope: !10088)
!10100 = !DILocation(line: 75, column: 2, scope: !10088)
!10101 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1014, file: !1014, line: 641, type: !1039, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !10102)
!10102 = !{!10103, !10104, !10105}
!10103 = !DILocalVariable(name: "dev", arg: 1, scope: !10101, file: !1014, line: 641, type: !1041)
!10104 = !DILocalVariable(name: "old_flash_freq", scope: !10101, file: !1014, line: 664, type: !113)
!10105 = !DILocalVariable(name: "new_flash_freq", scope: !10101, file: !1014, line: 665, type: !113)
!10106 = !DILocation(line: 0, scope: !10101)
!10107 = !DILocation(line: 646, column: 2, scope: !10101)
!10108 = !DILocation(line: 667, column: 19, scope: !10101)
!10109 = !DILocation(line: 674, column: 21, scope: !10110)
!10110 = distinct !DILexicalBlock(scope: !10101, file: !1014, line: 674, column: 6)
!10111 = !DILocation(line: 674, column: 6, scope: !10101)
!10112 = !DILocation(line: 675, column: 3, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10110, file: !1014, line: 674, column: 59)
!10114 = !DILocation(line: 676, column: 2, scope: !10113)
!10115 = !DILocation(line: 680, column: 2, scope: !10101)
!10116 = !DILocation(line: 683, column: 2, scope: !10101)
!10117 = !DILocation(line: 690, column: 3, scope: !10118)
!10118 = distinct !DILexicalBlock(scope: !10119, file: !1014, line: 689, column: 9)
!10119 = distinct !DILexicalBlock(scope: !10101, file: !1014, line: 685, column: 6)
!10120 = !DILocation(line: 695, column: 2, scope: !10101)
!10121 = !DILocation(line: 696, column: 2, scope: !10101)
!10122 = !DILocation(line: 696, column: 9, scope: !10101)
!10123 = !DILocation(line: 696, column: 34, scope: !10101)
!10124 = distinct !{!10124, !10121, !10125}
!10125 = !DILocation(line: 697, column: 2, scope: !10101)
!10126 = !DILocation(line: 720, column: 21, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !10101, file: !1014, line: 720, column: 6)
!10128 = !DILocation(line: 720, column: 6, scope: !10101)
!10129 = !DILocation(line: 721, column: 3, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10127, file: !1014, line: 720, column: 60)
!10131 = !DILocation(line: 722, column: 2, scope: !10130)
!10132 = !DILocation(line: 725, column: 18, scope: !10101)
!10133 = !DILocation(line: 728, column: 2, scope: !10101)
!10134 = !DILocation(line: 730, column: 2, scope: !10101)
!10135 = !DILocation(line: 745, column: 2, scope: !10101)
!10136 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10137, file: !10137, line: 3275, type: !395, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !397)
!10137 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10138 = !DILocation(line: 3277, column: 21, scope: !10136)
!10139 = !DILocation(line: 3277, column: 3, scope: !10136)
!10140 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1014, file: !1014, line: 507, type: !266, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !397)
!10141 = !DILocation(line: 516, column: 4, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10143, file: !1014, line: 515, column: 10)
!10143 = distinct !DILexicalBlock(scope: !10144, file: !1014, line: 513, column: 7)
!10144 = distinct !DILexicalBlock(scope: !10145, file: !1014, line: 510, column: 37)
!10145 = distinct !DILexicalBlock(scope: !10140, file: !1014, line: 510, column: 6)
!10146 = !DILocation(line: 526, column: 3, scope: !10144)
!10147 = !DILocation(line: 527, column: 3, scope: !10144)
!10148 = !DILocation(line: 527, column: 10, scope: !10144)
!10149 = !DILocation(line: 527, column: 31, scope: !10144)
!10150 = distinct !{!10150, !10147, !10151}
!10151 = !DILocation(line: 529, column: 3, scope: !10144)
!10152 = !DILocation(line: 583, column: 3, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10154, file: !1014, line: 577, column: 37)
!10154 = distinct !DILexicalBlock(scope: !10140, file: !1014, line: 577, column: 6)
!10155 = !DILocation(line: 584, column: 3, scope: !10153)
!10156 = !DILocation(line: 584, column: 10, scope: !10153)
!10157 = !DILocation(line: 584, column: 31, scope: !10153)
!10158 = distinct !{!10158, !10155, !10159}
!10159 = !DILocation(line: 585, column: 3, scope: !10153)
!10160 = !DILocation(line: 627, column: 1, scope: !10140)
!10161 = distinct !DISubprogram(name: "set_up_plls", scope: !1014, file: !1014, line: 448, type: !266, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !397)
!10162 = !DILocation(line: 460, column: 6, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10161, file: !1014, line: 460, column: 6)
!10164 = !DILocation(line: 460, column: 31, scope: !10163)
!10165 = !DILocation(line: 460, column: 6, scope: !10161)
!10166 = !DILocation(line: 461, column: 3, scope: !10167)
!10167 = distinct !DILexicalBlock(scope: !10163, file: !1014, line: 460, column: 67)
!10168 = !DILocation(line: 462, column: 3, scope: !10167)
!10169 = !DILocation(line: 463, column: 2, scope: !10167)
!10170 = !DILocation(line: 464, column: 2, scope: !10161)
!10171 = !DILocation(line: 488, column: 2, scope: !10161)
!10172 = !DILocation(line: 492, column: 2, scope: !10161)
!10173 = !DILocation(line: 496, column: 2, scope: !10161)
!10174 = !DILocation(line: 499, column: 2, scope: !10161)
!10175 = !DILocation(line: 500, column: 2, scope: !10161)
!10176 = !DILocation(line: 500, column: 9, scope: !10161)
!10177 = !DILocation(line: 500, column: 30, scope: !10161)
!10178 = distinct !{!10178, !10175, !10179}
!10179 = !DILocation(line: 502, column: 2, scope: !10161)
!10180 = !DILocation(line: 505, column: 1, scope: !10161)
!10181 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10137, file: !10137, line: 3224, type: !7898, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !10182)
!10182 = !{!10183}
!10183 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10181, file: !10137, line: 3224, type: !113)
!10184 = !DILocation(line: 0, scope: !10181)
!10185 = !DILocation(line: 3226, column: 3, scope: !10181)
!10186 = !DILocation(line: 3227, column: 1, scope: !10181)
!10187 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10137, file: !10137, line: 3188, type: !7898, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !10188)
!10188 = !{!10189}
!10189 = !DILocalVariable(name: "Source", arg: 1, scope: !10187, file: !10137, line: 3188, type: !113)
!10190 = !DILocation(line: 0, scope: !10187)
!10191 = !DILocation(line: 3190, column: 3, scope: !10187)
!10192 = !DILocation(line: 3191, column: 1, scope: !10187)
!10193 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10137, file: !10137, line: 3204, type: !395, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !397)
!10194 = !DILocation(line: 3206, column: 21, scope: !10193)
!10195 = !DILocation(line: 3206, column: 3, scope: !10193)
!10196 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10137, file: !10137, line: 3240, type: !7898, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !10197)
!10197 = !{!10198}
!10198 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10196, file: !10137, line: 3240, type: !113)
!10199 = !DILocation(line: 0, scope: !10196)
!10200 = !DILocation(line: 3242, column: 3, scope: !10196)
!10201 = !DILocation(line: 3243, column: 1, scope: !10196)
!10202 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10137, file: !10137, line: 3256, type: !7898, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !10203)
!10203 = !{!10204}
!10204 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10202, file: !10137, line: 3256, type: !113)
!10205 = !DILocation(line: 0, scope: !10202)
!10206 = !DILocation(line: 3258, column: 3, scope: !10202)
!10207 = !DILocation(line: 3259, column: 1, scope: !10202)
!10208 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1014, file: !1014, line: 409, type: !266, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !397)
!10209 = !DILocation(line: 412, column: 6, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !10208, file: !1014, line: 412, column: 6)
!10211 = !DILocation(line: 412, column: 27, scope: !10210)
!10212 = !DILocation(line: 412, column: 6, scope: !10208)
!10213 = !DILocation(line: 414, column: 3, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10210, file: !1014, line: 412, column: 33)
!10215 = !DILocation(line: 415, column: 3, scope: !10214)
!10216 = !DILocation(line: 415, column: 10, scope: !10214)
!10217 = !DILocation(line: 415, column: 31, scope: !10214)
!10218 = distinct !{!10218, !10215, !10219}
!10219 = !DILocation(line: 417, column: 3, scope: !10214)
!10220 = !DILocation(line: 421, column: 2, scope: !10208)
!10221 = !DILocation(line: 422, column: 2, scope: !10208)
!10222 = !DILocation(line: 422, column: 9, scope: !10208)
!10223 = !DILocation(line: 422, column: 34, scope: !10208)
!10224 = distinct !{!10224, !10221, !10225}
!10225 = !DILocation(line: 423, column: 2, scope: !10208)
!10226 = !DILocation(line: 424, column: 1, scope: !10208)
!10227 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10137, file: !10137, line: 4195, type: !266, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !397)
!10228 = !DILocation(line: 4197, column: 3, scope: !10227)
!10229 = !DILocation(line: 4198, column: 1, scope: !10227)
!10230 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10137, file: !10137, line: 4184, type: !266, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !397)
!10231 = !DILocation(line: 4186, column: 3, scope: !10230)
!10232 = !DILocation(line: 4187, column: 1, scope: !10230)
!10233 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10137, file: !10137, line: 4205, type: !395, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !397)
!10234 = !DILocation(line: 4207, column: 11, scope: !10233)
!10235 = !DILocation(line: 4207, column: 44, scope: !10233)
!10236 = !DILocation(line: 4207, column: 3, scope: !10233)
!10237 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10137, file: !10137, line: 3007, type: !395, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !397)
!10238 = !DILocation(line: 3009, column: 11, scope: !10237)
!10239 = !DILocation(line: 3009, column: 44, scope: !10237)
!10240 = !DILocation(line: 3009, column: 3, scope: !10237)
!10241 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10137, file: !10137, line: 2987, type: !266, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !397)
!10242 = !DILocation(line: 2989, column: 3, scope: !10241)
!10243 = !DILocation(line: 2990, column: 1, scope: !10241)
!10244 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10137, file: !10137, line: 2939, type: !266, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !397)
!10245 = !DILocation(line: 2941, column: 3, scope: !10244)
!10246 = !DILocation(line: 2942, column: 1, scope: !10244)
!10247 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10137, file: !10137, line: 2949, type: !266, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !397)
!10248 = !DILocation(line: 2951, column: 3, scope: !10247)
!10249 = !DILocation(line: 2952, column: 1, scope: !10247)
!10250 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10137, file: !10137, line: 2969, type: !395, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !397)
!10251 = !DILocation(line: 2971, column: 11, scope: !10250)
!10252 = !DILocation(line: 2971, column: 44, scope: !10250)
!10253 = !DILocation(line: 2971, column: 3, scope: !10250)
!10254 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !10137, file: !10137, line: 3143, type: !266, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !397)
!10255 = !DILocation(line: 3145, column: 3, scope: !10254)
!10256 = !DILocation(line: 3146, column: 1, scope: !10254)
!10257 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !10137, file: !10137, line: 3163, type: !395, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !397)
!10258 = !DILocation(line: 3165, column: 11, scope: !10257)
!10259 = !DILocation(line: 3165, column: 46, scope: !10257)
!10260 = !DILocation(line: 3165, column: 3, scope: !10257)
!10261 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10262, file: !10262, line: 40, type: !395, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2974, retainedNodes: !397)
!10262 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10263 = !DILocation(line: 45, column: 3, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10265, file: !10262, line: 44, column: 44)
!10265 = distinct !DILexicalBlock(scope: !10266, file: !10262, line: 44, column: 13)
!10266 = distinct !DILexicalBlock(scope: !10261, file: !10262, line: 42, column: 6)
!10267 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10262, file: !10262, line: 56, type: !266, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2974, retainedNodes: !397)
!10268 = !DILocation(line: 58, column: 2, scope: !10267)
!10269 = !DILocation(line: 62, column: 1, scope: !10267)
!10270 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10137, file: !10137, line: 4304, type: !10271, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2974, retainedNodes: !10273)
!10271 = !DISubroutineType(types: !10272)
!10272 = !{null, !113, !113, !113, !113}
!10273 = !{!10274, !10275, !10276, !10277}
!10274 = !DILocalVariable(name: "Source", arg: 1, scope: !10270, file: !10137, line: 4304, type: !113)
!10275 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10270, file: !10137, line: 4304, type: !113)
!10276 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10270, file: !10137, line: 4304, type: !113)
!10277 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10270, file: !10137, line: 4304, type: !113)
!10278 = !DILocation(line: 0, scope: !10270)
!10279 = !DILocation(line: 4306, column: 3, scope: !10270)
!10280 = !DILocation(line: 4308, column: 3, scope: !10270)
!10281 = !DILocation(line: 4312, column: 1, scope: !10270)
!10282 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10262, file: !10262, line: 69, type: !266, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2974, retainedNodes: !397)
!10283 = !DILocation(line: 72, column: 2, scope: !10282)
!10284 = !DILocation(line: 73, column: 1, scope: !10282)
!10285 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10286, file: !10286, line: 1185, type: !7898, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2974, retainedNodes: !10287)
!10286 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10287 = !{!10288, !10289}
!10288 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10285, file: !10286, line: 1185, type: !113)
!10289 = !DILocalVariable(name: "tmpreg", scope: !10285, file: !10286, line: 1187, type: !461)
!10290 = !DILocation(line: 0, scope: !10285)
!10291 = !DILocation(line: 1187, column: 3, scope: !10285)
!10292 = !DILocation(line: 1187, column: 17, scope: !10285)
!10293 = !DILocation(line: 1188, column: 3, scope: !10285)
!10294 = !DILocation(line: 1190, column: 12, scope: !10285)
!10295 = !DILocation(line: 1190, column: 10, scope: !10285)
!10296 = !DILocation(line: 1191, column: 9, scope: !10285)
!10297 = !DILocation(line: 1192, column: 1, scope: !10285)
!10298 = distinct !DISubprogram(name: "uart_console_init", scope: !1143, file: !1143, line: 588, type: !1120, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1086, retainedNodes: !10299)
!10299 = !{!10300}
!10300 = !DILocalVariable(name: "arg", arg: 1, scope: !10298, file: !1143, line: 588, type: !1098)
!10301 = !DILocation(line: 0, scope: !10298)
!10302 = !DILocation(line: 593, column: 7, scope: !10303)
!10303 = distinct !DILexicalBlock(scope: !10298, file: !1143, line: 593, column: 6)
!10304 = !DILocation(line: 593, column: 6, scope: !10298)
!10305 = !DILocation(line: 597, column: 2, scope: !10298)
!10306 = !DILocation(line: 599, column: 2, scope: !10298)
!10307 = !DILocation(line: 600, column: 1, scope: !10298)
!10308 = distinct !DISubprogram(name: "device_is_ready", scope: !10309, file: !10309, line: 47, type: !10310, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1086, retainedNodes: !10312)
!10309 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!10310 = !DISubroutineType(types: !10311)
!10311 = !{!492, !1098}
!10312 = !{!10313}
!10313 = !DILocalVariable(name: "dev", arg: 1, scope: !10308, file: !10309, line: 47, type: !1098)
!10314 = !DILocation(line: 0, scope: !10308)
!10315 = !DILocation(line: 55, column: 2, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10308, file: !10309, line: 55, column: 2)
!10317 = !{i64 2154375932}
!10318 = !DILocation(line: 56, column: 9, scope: !10308)
!10319 = !DILocation(line: 56, column: 2, scope: !10308)
!10320 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1143, file: !1143, line: 573, type: !266, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1086, retainedNodes: !397)
!10321 = !DILocation(line: 576, column: 2, scope: !10320)
!10322 = !DILocation(line: 579, column: 2, scope: !10320)
!10323 = !DILocation(line: 581, column: 1, scope: !10320)
!10324 = distinct !DISubprogram(name: "console_out", scope: !1143, file: !1143, line: 77, type: !448, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1086, retainedNodes: !10325)
!10325 = !{!10326}
!10326 = !DILocalVariable(name: "c", arg: 1, scope: !10324, file: !1143, line: 77, type: !105)
!10327 = !DILocation(line: 0, scope: !10324)
!10328 = !DILocation(line: 89, column: 11, scope: !10329)
!10329 = distinct !DILexicalBlock(scope: !10324, file: !1143, line: 89, column: 6)
!10330 = !DILocation(line: 89, column: 6, scope: !10324)
!10331 = !DILocation(line: 90, column: 3, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10329, file: !1143, line: 89, column: 17)
!10333 = !DILocation(line: 91, column: 2, scope: !10332)
!10334 = !DILocation(line: 92, column: 34, scope: !10324)
!10335 = !DILocation(line: 92, column: 2, scope: !10324)
!10336 = !DILocation(line: 94, column: 2, scope: !10324)
!10337 = distinct !DISubprogram(name: "uart_poll_out", scope: !10338, file: !10338, line: 95, type: !1116, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1086, retainedNodes: !10339)
!10338 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!10339 = !{!10340, !10341}
!10340 = !DILocalVariable(name: "dev", arg: 1, scope: !10337, file: !10338, line: 95, type: !1098)
!10341 = !DILocalVariable(name: "out_char", arg: 2, scope: !10337, file: !10338, line: 95, type: !170)
!10342 = !DILocation(line: 0, scope: !10337)
!10343 = !DILocation(line: 105, column: 2, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !10337, file: !10338, line: 105, column: 2)
!10345 = !{i64 2154459323}
!10346 = !DILocation(line: 106, column: 2, scope: !10337)
!10347 = !DILocation(line: 107, column: 1, scope: !10337)
!10348 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1092, file: !1092, line: 574, type: !1116, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1086, retainedNodes: !10349)
!10349 = !{!10350, !10351, !10352}
!10350 = !DILocalVariable(name: "dev", arg: 1, scope: !10348, file: !1092, line: 574, type: !1098)
!10351 = !DILocalVariable(name: "out_char", arg: 2, scope: !10348, file: !1092, line: 575, type: !170)
!10352 = !DILocalVariable(name: "api", scope: !10348, file: !1092, line: 577, type: !1089)
!10353 = !DILocation(line: 0, scope: !10348)
!10354 = !DILocation(line: 578, column: 40, scope: !10348)
!10355 = !DILocation(line: 580, column: 7, scope: !10348)
!10356 = !DILocation(line: 580, column: 2, scope: !10348)
!10357 = !DILocation(line: 581, column: 1, scope: !10348)
!10358 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !481, file: !481, line: 730, type: !10310, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1086, retainedNodes: !10359)
!10359 = !{!10360}
!10360 = !DILocalVariable(name: "dev", arg: 1, scope: !10358, file: !481, line: 730, type: !1098)
!10361 = !DILocation(line: 0, scope: !10358)
!10362 = !DILocation(line: 732, column: 9, scope: !10358)
!10363 = !DILocation(line: 732, column: 2, scope: !10358)
!10364 = distinct !DISubprogram(name: "uart_register_input", scope: !1143, file: !1143, line: 560, type: !10365, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1086, retainedNodes: !10412)
!10365 = !DISubroutineType(types: !10366)
!10366 = !{null, !10367, !10367, !10409}
!10367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10368, size: 32)
!10368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !122, line: 2208, size: 160, elements: !10369)
!10369 = !{!10370}
!10370 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10368, file: !122, line: 2209, baseType: !10371, size: 160)
!10371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !122, line: 1709, size: 160, elements: !10372)
!10372 = !{!10373, !10386, !10390}
!10373 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10371, file: !122, line: 1710, baseType: !10374, size: 64)
!10374 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10375, line: 46, baseType: !10376)
!10375 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10375, line: 41, size: 64, elements: !10377)
!10377 = !{!10378, !10385}
!10378 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10376, file: !10375, line: 42, baseType: !10379, size: 32)
!10379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10380, size: 32)
!10380 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10375, line: 39, baseType: !10381)
!10381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10375, line: 35, size: 32, elements: !10382)
!10382 = !{!10383}
!10383 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10381, file: !10375, line: 36, baseType: !10384, size: 32)
!10384 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10375, line: 32, baseType: !113)
!10385 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10376, file: !10375, line: 43, baseType: !10379, size: 32, offset: 32)
!10386 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10371, file: !122, line: 1711, baseType: !10387, size: 32, offset: 64)
!10387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !10388)
!10388 = !{!10389}
!10389 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !10387, file: !236, line: 52, baseType: !22, size: 32)
!10390 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10371, file: !122, line: 1712, baseType: !10391, size: 64, offset: 96)
!10391 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !10392)
!10392 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !10393)
!10393 = !{!10394}
!10394 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10392, file: !163, line: 232, baseType: !10395, size: 64)
!10395 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !10396)
!10396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !10397)
!10397 = !{!10398, !10404}
!10398 = !DIDerivedType(tag: DW_TAG_member, scope: !10396, file: !137, line: 38, baseType: !10399, size: 32)
!10399 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10396, file: !137, line: 38, size: 32, elements: !10400)
!10400 = !{!10401, !10403}
!10401 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10399, file: !137, line: 39, baseType: !10402, size: 32)
!10402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10396, size: 32)
!10403 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10399, file: !137, line: 40, baseType: !10402, size: 32)
!10404 = !DIDerivedType(tag: DW_TAG_member, scope: !10396, file: !137, line: 42, baseType: !10405, size: 32, offset: 32)
!10405 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10396, file: !137, line: 42, size: 32, elements: !10406)
!10406 = !{!10407, !10408}
!10407 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10405, file: !137, line: 43, baseType: !10402, size: 32)
!10408 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10405, file: !137, line: 44, baseType: !10402, size: 32)
!10409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10410, size: 32)
!10410 = !DISubroutineType(types: !10411)
!10411 = !{!169, !102, !169}
!10412 = !{!10413, !10414, !10415}
!10413 = !DILocalVariable(name: "avail", arg: 1, scope: !10364, file: !1143, line: 560, type: !10367)
!10414 = !DILocalVariable(name: "lines", arg: 2, scope: !10364, file: !1143, line: 560, type: !10367)
!10415 = !DILocalVariable(name: "completion", arg: 3, scope: !10364, file: !1143, line: 561, type: !10409)
!10416 = !DILocation(line: 0, scope: !10364)
!10417 = !DILocation(line: 566, column: 1, scope: !10364)
!10418 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1321, file: !1321, line: 523, type: !1179, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10419)
!10419 = !{!10420, !10421, !10422, !10423, !10424}
!10420 = !DILocalVariable(name: "dev", arg: 1, scope: !10418, file: !1321, line: 523, type: !1181)
!10421 = !DILocalVariable(name: "pin", arg: 2, scope: !10418, file: !1321, line: 524, type: !1196)
!10422 = !DILocalVariable(name: "flags", arg: 3, scope: !10418, file: !1321, line: 524, type: !1197)
!10423 = !DILocalVariable(name: "err", scope: !10418, file: !1321, line: 526, type: !105)
!10424 = !DILocalVariable(name: "pincfg", scope: !10418, file: !1321, line: 527, type: !105)
!10425 = !DILocation(line: 0, scope: !10418)
!10426 = !DILocation(line: 527, column: 2, scope: !10418)
!10427 = !DILocation(line: 532, column: 8, scope: !10418)
!10428 = !DILocation(line: 533, column: 10, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10418, file: !1321, line: 533, column: 6)
!10430 = !DILocation(line: 533, column: 6, scope: !10418)
!10431 = !DILocation(line: 543, column: 13, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10418, file: !1321, line: 543, column: 6)
!10433 = !DILocation(line: 543, column: 28, scope: !10432)
!10434 = !DILocation(line: 543, column: 6, scope: !10418)
!10435 = !DILocation(line: 544, column: 14, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10437, file: !1321, line: 544, column: 7)
!10437 = distinct !DILexicalBlock(scope: !10432, file: !1321, line: 543, column: 34)
!10438 = !DILocation(line: 544, column: 39, scope: !10436)
!10439 = !DILocation(line: 544, column: 7, scope: !10437)
!10440 = !DILocation(line: 545, column: 38, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !10436, file: !1321, line: 544, column: 45)
!10442 = !DILocation(line: 545, column: 4, scope: !10441)
!10443 = !DILocation(line: 546, column: 3, scope: !10441)
!10444 = !DILocation(line: 546, column: 21, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10436, file: !1321, line: 546, column: 14)
!10446 = !DILocation(line: 546, column: 45, scope: !10445)
!10447 = !DILocation(line: 546, column: 14, scope: !10436)
!10448 = !DILocation(line: 547, column: 40, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10445, file: !1321, line: 546, column: 51)
!10450 = !DILocation(line: 547, column: 4, scope: !10449)
!10451 = !DILocation(line: 548, column: 3, scope: !10449)
!10452 = !DILocation(line: 551, column: 32, scope: !10418)
!10453 = !DILocation(line: 551, column: 37, scope: !10418)
!10454 = !DILocation(line: 551, column: 2, scope: !10418)
!10455 = !DILocation(line: 554, column: 6, scope: !10418)
!10456 = !DILocation(line: 562, column: 1, scope: !10418)
!10457 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1321, file: !1321, line: 410, type: !10458, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10460)
!10458 = !DISubroutineType(types: !10459)
!10459 = !{!105, !1181, !1010}
!10460 = !{!10461, !10462, !10463, !10465}
!10461 = !DILocalVariable(name: "dev", arg: 1, scope: !10457, file: !1321, line: 410, type: !1181)
!10462 = !DILocalVariable(name: "value", arg: 2, scope: !10457, file: !1321, line: 410, type: !1010)
!10463 = !DILocalVariable(name: "cfg", scope: !10457, file: !1321, line: 412, type: !10464)
!10464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 32)
!10465 = !DILocalVariable(name: "gpio", scope: !10457, file: !1321, line: 413, type: !1254)
!10466 = !DILocation(line: 0, scope: !10457)
!10467 = !DILocation(line: 412, column: 45, scope: !10457)
!10468 = !DILocation(line: 413, column: 44, scope: !10457)
!10469 = !DILocation(line: 415, column: 11, scope: !10457)
!10470 = !DILocation(line: 415, column: 9, scope: !10457)
!10471 = !DILocation(line: 417, column: 2, scope: !10457)
!10472 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1321, file: !1321, line: 420, type: !1206, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10473)
!10473 = !{!10474, !10475, !10476, !10477, !10478, !10479}
!10474 = !DILocalVariable(name: "dev", arg: 1, scope: !10472, file: !1321, line: 420, type: !1181)
!10475 = !DILocalVariable(name: "mask", arg: 2, scope: !10472, file: !1321, line: 421, type: !1208)
!10476 = !DILocalVariable(name: "value", arg: 3, scope: !10472, file: !1321, line: 422, type: !1203)
!10477 = !DILocalVariable(name: "cfg", scope: !10472, file: !1321, line: 424, type: !10464)
!10478 = !DILocalVariable(name: "gpio", scope: !10472, file: !1321, line: 425, type: !1254)
!10479 = !DILocalVariable(name: "port_value", scope: !10472, file: !1321, line: 426, type: !113)
!10480 = !DILocation(line: 0, scope: !10472)
!10481 = !DILocation(line: 424, column: 45, scope: !10472)
!10482 = !DILocation(line: 425, column: 44, scope: !10472)
!10483 = !DILocation(line: 430, column: 15, scope: !10472)
!10484 = !DILocation(line: 431, column: 46, scope: !10472)
!10485 = !DILocation(line: 431, column: 44, scope: !10472)
!10486 = !DILocation(line: 431, column: 61, scope: !10472)
!10487 = !DILocation(line: 431, column: 53, scope: !10472)
!10488 = !DILocation(line: 431, column: 2, scope: !10472)
!10489 = !DILocation(line: 435, column: 2, scope: !10472)
!10490 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1321, file: !1321, line: 438, type: !1211, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10491)
!10491 = !{!10492, !10493, !10494, !10495}
!10492 = !DILocalVariable(name: "dev", arg: 1, scope: !10490, file: !1321, line: 438, type: !1181)
!10493 = !DILocalVariable(name: "pins", arg: 2, scope: !10490, file: !1321, line: 439, type: !1208)
!10494 = !DILocalVariable(name: "cfg", scope: !10490, file: !1321, line: 441, type: !10464)
!10495 = !DILocalVariable(name: "gpio", scope: !10490, file: !1321, line: 442, type: !1254)
!10496 = !DILocation(line: 0, scope: !10490)
!10497 = !DILocation(line: 441, column: 45, scope: !10490)
!10498 = !DILocation(line: 442, column: 44, scope: !10490)
!10499 = !DILocation(line: 448, column: 2, scope: !10490)
!10500 = !DILocation(line: 450, column: 2, scope: !10490)
!10501 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1321, file: !1321, line: 453, type: !1211, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10502)
!10502 = !{!10503, !10504, !10505, !10506}
!10503 = !DILocalVariable(name: "dev", arg: 1, scope: !10501, file: !1321, line: 453, type: !1181)
!10504 = !DILocalVariable(name: "pins", arg: 2, scope: !10501, file: !1321, line: 454, type: !1208)
!10505 = !DILocalVariable(name: "cfg", scope: !10501, file: !1321, line: 456, type: !10464)
!10506 = !DILocalVariable(name: "gpio", scope: !10501, file: !1321, line: 457, type: !1254)
!10507 = !DILocation(line: 0, scope: !10501)
!10508 = !DILocation(line: 456, column: 45, scope: !10501)
!10509 = !DILocation(line: 457, column: 44, scope: !10501)
!10510 = !DILocation(line: 467, column: 2, scope: !10501)
!10511 = !DILocation(line: 470, column: 2, scope: !10501)
!10512 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1321, file: !1321, line: 473, type: !1211, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10513)
!10513 = !{!10514, !10515, !10516, !10517}
!10514 = !DILocalVariable(name: "dev", arg: 1, scope: !10512, file: !1321, line: 473, type: !1181)
!10515 = !DILocalVariable(name: "pins", arg: 2, scope: !10512, file: !1321, line: 474, type: !1208)
!10516 = !DILocalVariable(name: "cfg", scope: !10512, file: !1321, line: 476, type: !10464)
!10517 = !DILocalVariable(name: "gpio", scope: !10512, file: !1321, line: 477, type: !1254)
!10518 = !DILocation(line: 0, scope: !10512)
!10519 = !DILocation(line: 476, column: 45, scope: !10512)
!10520 = !DILocation(line: 477, column: 44, scope: !10512)
!10521 = !DILocation(line: 484, column: 2, scope: !10512)
!10522 = !DILocation(line: 487, column: 2, scope: !10512)
!10523 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1321, file: !1321, line: 594, type: !1217, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10524)
!10524 = !{!10525, !10526, !10527, !10528, !10529, !10530, !10532, !10533, !10534}
!10525 = !DILocalVariable(name: "dev", arg: 1, scope: !10523, file: !1321, line: 594, type: !1181)
!10526 = !DILocalVariable(name: "pin", arg: 2, scope: !10523, file: !1321, line: 595, type: !1196)
!10527 = !DILocalVariable(name: "mode", arg: 3, scope: !10523, file: !1321, line: 596, type: !1155)
!10528 = !DILocalVariable(name: "trig", arg: 4, scope: !10523, file: !1321, line: 597, type: !1161)
!10529 = !DILocalVariable(name: "cfg", scope: !10523, file: !1321, line: 599, type: !10464)
!10530 = !DILocalVariable(name: "data", scope: !10523, file: !1321, line: 600, type: !10531)
!10531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 32)
!10532 = !DILocalVariable(name: "edge", scope: !10523, file: !1321, line: 601, type: !105)
!10533 = !DILocalVariable(name: "err", scope: !10523, file: !1321, line: 602, type: !105)
!10534 = !DILabel(scope: !10523, name: "exit", file: !1321, line: 643)
!10535 = !DILocation(line: 0, scope: !10523)
!10536 = !DILocation(line: 599, column: 45, scope: !10523)
!10537 = !DILocation(line: 604, column: 6, scope: !10523)
!10538 = !DILocation(line: 605, column: 34, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10540, file: !1321, line: 605, column: 7)
!10540 = distinct !DILexicalBlock(scope: !10541, file: !1321, line: 604, column: 38)
!10541 = distinct !DILexicalBlock(scope: !10523, file: !1321, line: 604, column: 6)
!10542 = !DILocation(line: 605, column: 7, scope: !10539)
!10543 = !DILocation(line: 605, column: 47, scope: !10539)
!10544 = !DILocation(line: 605, column: 39, scope: !10539)
!10545 = !DILocation(line: 605, column: 7, scope: !10540)
!10546 = !DILocation(line: 606, column: 4, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10539, file: !1321, line: 605, column: 53)
!10548 = !DILocation(line: 607, column: 4, scope: !10547)
!10549 = !DILocation(line: 608, column: 4, scope: !10547)
!10550 = !DILocation(line: 609, column: 3, scope: !10547)
!10551 = !DILocation(line: 600, column: 38, scope: !10523)
!10552 = !DILocation(line: 620, column: 30, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10523, file: !1321, line: 620, column: 6)
!10554 = !DILocation(line: 620, column: 6, scope: !10553)
!10555 = !DILocation(line: 620, column: 57, scope: !10553)
!10556 = !DILocation(line: 620, column: 6, scope: !10523)
!10557 = !DILocation(line: 625, column: 29, scope: !10523)
!10558 = !DILocation(line: 625, column: 2, scope: !10523)
!10559 = !DILocation(line: 627, column: 2, scope: !10523)
!10560 = !DILocation(line: 630, column: 3, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10523, file: !1321, line: 627, column: 16)
!10562 = !DILocation(line: 633, column: 3, scope: !10561)
!10563 = !DILocation(line: 636, column: 3, scope: !10561)
!10564 = !DILocation(line: 639, column: 2, scope: !10523)
!10565 = !DILocation(line: 641, column: 2, scope: !10523)
!10566 = !DILocation(line: 643, column: 1, scope: !10523)
!10567 = !DILocation(line: 644, column: 2, scope: !10523)
!10568 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1321, file: !1321, line: 647, type: !1221, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10569)
!10569 = !{!10570, !10571, !10572, !10573}
!10570 = !DILocalVariable(name: "dev", arg: 1, scope: !10568, file: !1321, line: 647, type: !1181)
!10571 = !DILocalVariable(name: "callback", arg: 2, scope: !10568, file: !1321, line: 648, type: !1223)
!10572 = !DILocalVariable(name: "set", arg: 3, scope: !10568, file: !1321, line: 649, type: !492)
!10573 = !DILocalVariable(name: "data", scope: !10568, file: !1321, line: 651, type: !10531)
!10574 = !DILocation(line: 0, scope: !10568)
!10575 = !DILocation(line: 651, column: 38, scope: !10568)
!10576 = !DILocation(line: 653, column: 37, scope: !10568)
!10577 = !DILocation(line: 653, column: 9, scope: !10568)
!10578 = !DILocation(line: 653, column: 2, scope: !10568)
!10579 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10580, file: !10580, line: 38, type: !10581, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10584)
!10580 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10581 = !DISubroutineType(types: !10582)
!10582 = !{!105, !10583, !1223, !492}
!10583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 32)
!10584 = !{!10585, !10586, !10587}
!10585 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10579, file: !10580, line: 38, type: !10583)
!10586 = !DILocalVariable(name: "callback", arg: 2, scope: !10579, file: !10580, line: 39, type: !1223)
!10587 = !DILocalVariable(name: "set", arg: 3, scope: !10579, file: !10580, line: 40, type: !492)
!10588 = !DILocation(line: 0, scope: !10579)
!10589 = !DILocation(line: 42, column: 2, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10591, file: !10580, line: 42, column: 2)
!10591 = distinct !DILexicalBlock(scope: !10579, file: !10580, line: 42, column: 2)
!10592 = !DILocation(line: 42, column: 2, scope: !10591)
!10593 = !DILocation(line: 42, column: 2, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10590, file: !10580, line: 42, column: 2)
!10595 = !DILocation(line: 43, column: 2, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !10597, file: !10580, line: 43, column: 2)
!10597 = distinct !DILexicalBlock(scope: !10579, file: !10580, line: 43, column: 2)
!10598 = !DILocation(line: 43, column: 2, scope: !10597)
!10599 = !DILocation(line: 43, column: 2, scope: !10600)
!10600 = distinct !DILexicalBlock(scope: !10596, file: !10580, line: 43, column: 2)
!10601 = !DILocation(line: 45, column: 7, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10579, file: !10580, line: 45, column: 6)
!10603 = !DILocation(line: 45, column: 6, scope: !10579)
!10604 = !DILocation(line: 46, column: 56, scope: !10605)
!10605 = distinct !DILexicalBlock(scope: !10606, file: !10580, line: 46, column: 7)
!10606 = distinct !DILexicalBlock(scope: !10602, file: !10580, line: 45, column: 38)
!10607 = !DILocation(line: 46, column: 8, scope: !10605)
!10608 = !DILocation(line: 46, column: 7, scope: !10606)
!10609 = !DILocation(line: 51, column: 13, scope: !10602)
!10610 = !DILocation(line: 56, column: 43, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10612, file: !10580, line: 55, column: 11)
!10612 = distinct !DILexicalBlock(scope: !10579, file: !10580, line: 55, column: 6)
!10613 = !DILocation(line: 56, column: 3, scope: !10611)
!10614 = !DILocation(line: 57, column: 2, scope: !10611)
!10615 = !DILocation(line: 60, column: 1, scope: !10579)
!10616 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1228, file: !1228, line: 261, type: !10617, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10619)
!10617 = !DISubroutineType(types: !10618)
!10618 = !{!492, !10583}
!10619 = !{!10620}
!10620 = !DILocalVariable(name: "list", arg: 1, scope: !10616, file: !1228, line: 261, type: !10583)
!10621 = !DILocation(line: 0, scope: !10616)
!10622 = !DILocation(line: 261, column: 1, scope: !10616)
!10623 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1228, file: !1228, line: 417, type: !10624, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10626)
!10624 = !DISubroutineType(types: !10625)
!10625 = !{!492, !10583, !1397}
!10626 = !{!10627, !10628, !10629, !10630}
!10627 = !DILocalVariable(name: "list", arg: 1, scope: !10623, file: !1228, line: 417, type: !10583)
!10628 = !DILocalVariable(name: "node", arg: 2, scope: !10623, file: !1228, line: 417, type: !1397)
!10629 = !DILocalVariable(name: "prev", scope: !10623, file: !1228, line: 417, type: !1397)
!10630 = !DILocalVariable(name: "test", scope: !10623, file: !1228, line: 417, type: !1397)
!10631 = !DILocation(line: 0, scope: !10623)
!10632 = !DILocation(line: 417, column: 1, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10623, file: !1228, line: 417, column: 1)
!10634 = !DILocation(line: 417, column: 1, scope: !10635)
!10635 = distinct !DILexicalBlock(scope: !10633, file: !1228, line: 417, column: 1)
!10636 = !DILocation(line: 417, column: 1, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10638, file: !1228, line: 417, column: 1)
!10638 = distinct !DILexicalBlock(scope: !10635, file: !1228, line: 417, column: 1)
!10639 = !DILocation(line: 417, column: 1, scope: !10638)
!10640 = distinct !{!10640, !10632, !10632}
!10641 = !DILocation(line: 417, column: 1, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !10637, file: !1228, line: 417, column: 1)
!10643 = !DILocation(line: 417, column: 1, scope: !10623)
!10644 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1228, file: !1228, line: 298, type: !10645, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10647)
!10645 = !DISubroutineType(types: !10646)
!10646 = !{null, !10583, !1397}
!10647 = !{!10648, !10649}
!10648 = !DILocalVariable(name: "list", arg: 1, scope: !10644, file: !1228, line: 298, type: !10583)
!10649 = !DILocalVariable(name: "node", arg: 2, scope: !10644, file: !1228, line: 298, type: !1397)
!10650 = !DILocation(line: 0, scope: !10644)
!10651 = !DILocation(line: 298, column: 1, scope: !10644)
!10652 = !DILocation(line: 298, column: 1, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10644, file: !1228, line: 298, column: 1)
!10654 = !DILocation(line: 298, column: 1, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10653, file: !1228, line: 298, column: 1)
!10656 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1228, file: !1228, line: 231, type: !10657, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10659)
!10657 = !DISubroutineType(types: !10658)
!10658 = !{!1397, !10583}
!10659 = !{!10660}
!10660 = !DILocalVariable(name: "list", arg: 1, scope: !10656, file: !1228, line: 231, type: !10583)
!10661 = !DILocation(line: 0, scope: !10656)
!10662 = !DILocation(line: 233, column: 15, scope: !10656)
!10663 = !DILocation(line: 233, column: 2, scope: !10656)
!10664 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1228, file: !1228, line: 209, type: !10665, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10667)
!10665 = !DISubroutineType(types: !10666)
!10666 = !{null, !1397, !1397}
!10667 = !{!10668, !10669}
!10668 = !DILocalVariable(name: "parent", arg: 1, scope: !10664, file: !1228, line: 209, type: !1397)
!10669 = !DILocalVariable(name: "child", arg: 2, scope: !10664, file: !1228, line: 209, type: !1397)
!10670 = !DILocation(line: 0, scope: !10664)
!10671 = !DILocation(line: 211, column: 10, scope: !10664)
!10672 = !DILocation(line: 211, column: 15, scope: !10664)
!10673 = !DILocation(line: 212, column: 1, scope: !10664)
!10674 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1228, file: !1228, line: 214, type: !10645, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10675)
!10675 = !{!10676, !10677}
!10676 = !DILocalVariable(name: "list", arg: 1, scope: !10674, file: !1228, line: 214, type: !10583)
!10677 = !DILocalVariable(name: "node", arg: 2, scope: !10674, file: !1228, line: 214, type: !1397)
!10678 = !DILocation(line: 0, scope: !10674)
!10679 = !DILocation(line: 216, column: 8, scope: !10674)
!10680 = !DILocation(line: 216, column: 13, scope: !10674)
!10681 = !DILocation(line: 217, column: 1, scope: !10674)
!10682 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1228, file: !1228, line: 243, type: !10657, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10683)
!10683 = !{!10684}
!10684 = !DILocalVariable(name: "list", arg: 1, scope: !10682, file: !1228, line: 243, type: !10583)
!10685 = !DILocation(line: 0, scope: !10682)
!10686 = !DILocation(line: 245, column: 15, scope: !10682)
!10687 = !DILocation(line: 245, column: 2, scope: !10682)
!10688 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1228, file: !1228, line: 219, type: !10645, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10689)
!10689 = !{!10690, !10691}
!10690 = !DILocalVariable(name: "list", arg: 1, scope: !10688, file: !1228, line: 219, type: !10583)
!10691 = !DILocalVariable(name: "node", arg: 2, scope: !10688, file: !1228, line: 219, type: !1397)
!10692 = !DILocation(line: 0, scope: !10688)
!10693 = !DILocation(line: 221, column: 8, scope: !10688)
!10694 = !DILocation(line: 221, column: 13, scope: !10688)
!10695 = !DILocation(line: 222, column: 1, scope: !10688)
!10696 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1228, file: !1228, line: 401, type: !10697, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10699)
!10697 = !DISubroutineType(types: !10698)
!10698 = !{null, !10583, !1397, !1397}
!10699 = !{!10700, !10701, !10702}
!10700 = !DILocalVariable(name: "list", arg: 1, scope: !10696, file: !1228, line: 401, type: !10583)
!10701 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10696, file: !1228, line: 401, type: !1397)
!10702 = !DILocalVariable(name: "node", arg: 3, scope: !10696, file: !1228, line: 401, type: !1397)
!10703 = !DILocation(line: 0, scope: !10696)
!10704 = !DILocation(line: 401, column: 1, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10696, file: !1228, line: 401, column: 1)
!10706 = !DILocation(line: 0, scope: !10705)
!10707 = !DILocation(line: 401, column: 1, scope: !10696)
!10708 = !DILocation(line: 401, column: 1, scope: !10709)
!10709 = distinct !DILexicalBlock(scope: !10705, file: !1228, line: 401, column: 1)
!10710 = !DILocation(line: 401, column: 1, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10709, file: !1228, line: 401, column: 1)
!10712 = !DILocation(line: 401, column: 1, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10711, file: !1228, line: 401, column: 1)
!10714 = !DILocation(line: 401, column: 1, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10705, file: !1228, line: 401, column: 1)
!10716 = !DILocation(line: 401, column: 1, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10715, file: !1228, line: 401, column: 1)
!10718 = !DILocation(line: 401, column: 1, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10717, file: !1228, line: 401, column: 1)
!10720 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1228, file: !1228, line: 285, type: !10721, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10723)
!10721 = !DISubroutineType(types: !10722)
!10722 = !{!1397, !1397}
!10723 = !{!10724}
!10724 = !DILocalVariable(name: "node", arg: 1, scope: !10720, file: !1228, line: 285, type: !1397)
!10725 = !DILocation(line: 0, scope: !10720)
!10726 = !DILocation(line: 285, column: 1, scope: !10720)
!10727 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1228, file: !1228, line: 274, type: !10721, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10728)
!10728 = !{!10729}
!10729 = !DILocalVariable(name: "node", arg: 1, scope: !10727, file: !1228, line: 274, type: !1397)
!10730 = !DILocation(line: 0, scope: !10727)
!10731 = !DILocation(line: 274, column: 1, scope: !10727)
!10732 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1228, file: !1228, line: 204, type: !10721, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10733)
!10733 = !{!10734}
!10734 = !DILocalVariable(name: "node", arg: 1, scope: !10732, file: !1228, line: 204, type: !1397)
!10735 = !DILocation(line: 0, scope: !10732)
!10736 = !DILocation(line: 206, column: 15, scope: !10732)
!10737 = !DILocation(line: 206, column: 2, scope: !10732)
!10738 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1321, file: !1321, line: 342, type: !448, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10739)
!10739 = !{!10740, !10741, !10742}
!10740 = !DILocalVariable(name: "pin", arg: 1, scope: !10738, file: !1321, line: 342, type: !105)
!10741 = !DILocalVariable(name: "line", scope: !10738, file: !1321, line: 344, type: !113)
!10742 = !DILocalVariable(name: "port", scope: !10738, file: !1321, line: 345, type: !105)
!10743 = !DILocation(line: 0, scope: !10738)
!10744 = !DILocation(line: 344, column: 18, scope: !10738)
!10745 = !{i32 983040, i32 0}
!10746 = !DILocation(line: 356, column: 9, scope: !10738)
!10747 = !DILocation(line: 370, column: 2, scope: !10738)
!10748 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1321, file: !1321, line: 37, type: !869, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10749)
!10749 = !{!10750, !10751, !10752}
!10750 = !DILocalVariable(name: "line", arg: 1, scope: !10748, file: !1321, line: 37, type: !105)
!10751 = !DILocalVariable(name: "arg", arg: 2, scope: !10748, file: !1321, line: 37, type: !104)
!10752 = !DILocalVariable(name: "data", scope: !10748, file: !1321, line: 39, type: !10531)
!10753 = !DILocation(line: 0, scope: !10748)
!10754 = !DILocation(line: 41, column: 29, scope: !10748)
!10755 = !DILocation(line: 41, column: 39, scope: !10748)
!10756 = !DILocation(line: 41, column: 44, scope: !10748)
!10757 = !DILocation(line: 41, column: 2, scope: !10748)
!10758 = !DILocation(line: 42, column: 1, scope: !10748)
!10759 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1321, file: !1321, line: 376, type: !10760, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10762)
!10760 = !DISubroutineType(types: !10761)
!10761 = !{!105, !105, !105}
!10762 = !{!10763, !10764, !10765, !10767, !10768}
!10763 = !DILocalVariable(name: "port", arg: 1, scope: !10759, file: !1321, line: 376, type: !105)
!10764 = !DILocalVariable(name: "pin", arg: 2, scope: !10759, file: !1321, line: 376, type: !105)
!10765 = !DILocalVariable(name: "clk", scope: !10759, file: !1321, line: 386, type: !10766)
!10766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1181)
!10767 = !DILocalVariable(name: "pclken", scope: !10759, file: !1321, line: 387, type: !1440)
!10768 = !DILocalVariable(name: "ret", scope: !10759, file: !1321, line: 396, type: !105)
!10769 = !DILocation(line: 0, scope: !10759)
!10770 = !DILocation(line: 387, column: 2, scope: !10759)
!10771 = !DILocation(line: 387, column: 22, scope: !10759)
!10772 = !DILocation(line: 399, column: 8, scope: !10759)
!10773 = !DILocation(line: 400, column: 10, scope: !10774)
!10774 = distinct !DILexicalBlock(scope: !10759, file: !1321, line: 400, column: 6)
!10775 = !DILocation(line: 400, column: 6, scope: !10759)
!10776 = !DILocation(line: 405, column: 2, scope: !10759)
!10777 = !DILocation(line: 407, column: 2, scope: !10759)
!10778 = !DILocation(line: 408, column: 1, scope: !10759)
!10779 = distinct !DISubprogram(name: "clock_control_on", scope: !959, file: !959, line: 123, type: !1286, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10780)
!10780 = !{!10781, !10782, !10783}
!10781 = !DILocalVariable(name: "dev", arg: 1, scope: !10779, file: !959, line: 123, type: !1181)
!10782 = !DILocalVariable(name: "sys", arg: 2, scope: !10779, file: !959, line: 124, type: !1052)
!10783 = !DILocalVariable(name: "api", scope: !10779, file: !959, line: 126, type: !1279)
!10784 = !DILocation(line: 0, scope: !10779)
!10785 = !DILocation(line: 127, column: 49, scope: !10779)
!10786 = !DILocation(line: 129, column: 14, scope: !10779)
!10787 = !DILocation(line: 129, column: 9, scope: !10779)
!10788 = !DILocation(line: 129, column: 2, scope: !10779)
!10789 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1321, file: !1321, line: 311, type: !9894, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10790)
!10790 = !{!10791, !10792, !10793}
!10791 = !DILocalVariable(name: "port", arg: 1, scope: !10789, file: !1321, line: 311, type: !105)
!10792 = !DILocalVariable(name: "pin", arg: 2, scope: !10789, file: !1321, line: 311, type: !105)
!10793 = !DILocalVariable(name: "line", scope: !10789, file: !1321, line: 313, type: !113)
!10794 = !DILocation(line: 0, scope: !10789)
!10795 = !DILocation(line: 313, column: 18, scope: !10789)
!10796 = !DILocation(line: 337, column: 2, scope: !10789)
!10797 = !DILocation(line: 340, column: 1, scope: !10789)
!10798 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1321, file: !1321, line: 295, type: !10799, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10801)
!10799 = !DISubroutineType(types: !10800)
!10800 = !{!113, !105}
!10801 = !{!10802}
!10802 = !DILocalVariable(name: "pin", arg: 1, scope: !10798, file: !1321, line: 295, type: !105)
!10803 = !DILocation(line: 0, scope: !10798)
!10804 = !DILocation(line: 307, column: 46, scope: !10798)
!10805 = !DILocation(line: 307, column: 27, scope: !10798)
!10806 = !DILocation(line: 307, column: 32, scope: !10798)
!10807 = !DILocation(line: 307, column: 14, scope: !10798)
!10808 = !DILocation(line: 307, column: 39, scope: !10798)
!10809 = !DILocation(line: 307, column: 2, scope: !10798)
!10810 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !7506, file: !7506, line: 671, type: !10811, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10813)
!10811 = !DISubroutineType(types: !10812)
!10812 = !{null, !113, !113}
!10813 = !{!10814, !10815}
!10814 = !DILocalVariable(name: "Port", arg: 1, scope: !10810, file: !7506, line: 671, type: !113)
!10815 = !DILocalVariable(name: "Line", arg: 2, scope: !10810, file: !7506, line: 671, type: !113)
!10816 = !DILocation(line: 0, scope: !10810)
!10817 = !DILocation(line: 673, column: 3, scope: !10810)
!10818 = !DILocalVariable(name: "value", arg: 1, scope: !10819, file: !7803, line: 373, type: !113)
!10819 = distinct !DISubprogram(name: "__RBIT", scope: !7803, file: !7803, line: 373, type: !9084, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10820)
!10820 = !{!10818, !10821}
!10821 = !DILocalVariable(name: "result", scope: !10819, file: !7803, line: 375, type: !113)
!10822 = !DILocation(line: 0, scope: !10819, inlinedAt: !10823)
!10823 = distinct !DILocation(line: 673, column: 3, scope: !10810)
!10824 = !DILocation(line: 380, column: 4, scope: !10819, inlinedAt: !10823)
!10825 = !{i64 2921234}
!10826 = !DILocalVariable(name: "value", arg: 1, scope: !10827, file: !7803, line: 403, type: !113)
!10827 = distinct !DISubprogram(name: "__CLZ", scope: !7803, file: !7803, line: 403, type: !10828, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10830)
!10828 = !DISubroutineType(types: !10829)
!10829 = !{!169, !113}
!10830 = !{!10826}
!10831 = !DILocation(line: 0, scope: !10827, inlinedAt: !10832)
!10832 = distinct !DILocation(line: 673, column: 3, scope: !10810)
!10833 = !DILocation(line: 414, column: 7, scope: !10827, inlinedAt: !10832)
!10834 = !DILocation(line: 674, column: 1, scope: !10810)
!10835 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10580, file: !10580, line: 69, type: !10836, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10838)
!10836 = !DISubroutineType(types: !10837)
!10837 = !{null, !10583, !1181, !113}
!10838 = !{!10839, !10840, !10841, !10842, !10843}
!10839 = !DILocalVariable(name: "list", arg: 1, scope: !10835, file: !10580, line: 69, type: !10583)
!10840 = !DILocalVariable(name: "port", arg: 2, scope: !10835, file: !10580, line: 70, type: !1181)
!10841 = !DILocalVariable(name: "pins", arg: 3, scope: !10835, file: !10580, line: 71, type: !113)
!10842 = !DILocalVariable(name: "cb", scope: !10835, file: !10580, line: 73, type: !1223)
!10843 = !DILocalVariable(name: "tmp", scope: !10835, file: !10580, line: 73, type: !1223)
!10844 = !DILocation(line: 0, scope: !10835)
!10845 = !DILocation(line: 75, column: 2, scope: !10846)
!10846 = distinct !DILexicalBlock(scope: !10835, file: !10580, line: 75, column: 2)
!10847 = !DILocation(line: 0, scope: !10846)
!10848 = !DILocation(line: 76, column: 11, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10850, file: !10580, line: 76, column: 7)
!10850 = distinct !DILexicalBlock(scope: !10851, file: !10580, line: 75, column: 57)
!10851 = distinct !DILexicalBlock(scope: !10846, file: !10580, line: 75, column: 2)
!10852 = !DILocation(line: 76, column: 20, scope: !10849)
!10853 = !DILocation(line: 76, column: 7, scope: !10850)
!10854 = !DILocation(line: 77, column: 4, scope: !10855)
!10855 = distinct !DILexicalBlock(scope: !10856, file: !10580, line: 77, column: 4)
!10856 = distinct !DILexicalBlock(scope: !10857, file: !10580, line: 77, column: 4)
!10857 = distinct !DILexicalBlock(scope: !10849, file: !10580, line: 76, column: 28)
!10858 = !DILocation(line: 77, column: 4, scope: !10856)
!10859 = !DILocation(line: 77, column: 4, scope: !10860)
!10860 = distinct !DILexicalBlock(scope: !10855, file: !10580, line: 77, column: 4)
!10861 = !DILocation(line: 78, column: 4, scope: !10857)
!10862 = !DILocation(line: 79, column: 3, scope: !10857)
!10863 = !DILocation(line: 75, column: 2, scope: !10851)
!10864 = !DILocation(line: 81, column: 1, scope: !10835)
!10865 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !7506, file: !7506, line: 710, type: !9084, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10866)
!10866 = !{!10867}
!10867 = !DILocalVariable(name: "Line", arg: 1, scope: !10865, file: !7506, line: 710, type: !113)
!10868 = !DILocation(line: 0, scope: !10865)
!10869 = !DILocation(line: 712, column: 21, scope: !10865)
!10870 = !DILocation(line: 0, scope: !10819, inlinedAt: !10871)
!10871 = distinct !DILocation(line: 712, column: 76, scope: !10865)
!10872 = !DILocation(line: 380, column: 4, scope: !10819, inlinedAt: !10871)
!10873 = !DILocation(line: 0, scope: !10827, inlinedAt: !10874)
!10874 = distinct !DILocation(line: 712, column: 76, scope: !10865)
!10875 = !DILocation(line: 414, column: 7, scope: !10827, inlinedAt: !10874)
!10876 = !DILocation(line: 712, column: 73, scope: !10865)
!10877 = !DILocation(line: 712, column: 3, scope: !10865)
!10878 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10879, file: !10879, line: 910, type: !10880, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10882)
!10879 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10880 = !DISubroutineType(types: !10881)
!10881 = !{null, !1254, !113}
!10882 = !{!10883, !10884}
!10883 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10878, file: !10879, line: 910, type: !1254)
!10884 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10878, file: !10879, line: 910, type: !113)
!10885 = !DILocation(line: 0, scope: !10878)
!10886 = !DILocation(line: 912, column: 3, scope: !10878)
!10887 = !DILocation(line: 913, column: 1, scope: !10878)
!10888 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10879, file: !10879, line: 823, type: !10889, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10891)
!10889 = !DISubroutineType(types: !10890)
!10890 = !{!113, !1254}
!10891 = !{!10892}
!10892 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10888, file: !10879, line: 823, type: !1254)
!10893 = !DILocation(line: 0, scope: !10888)
!10894 = !DILocation(line: 825, column: 21, scope: !10888)
!10895 = !DILocation(line: 825, column: 3, scope: !10888)
!10896 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10879, file: !10879, line: 812, type: !10880, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10897)
!10897 = !{!10898, !10899}
!10898 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10896, file: !10879, line: 812, type: !1254)
!10899 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10896, file: !10879, line: 812, type: !113)
!10900 = !DILocation(line: 0, scope: !10896)
!10901 = !DILocation(line: 814, column: 3, scope: !10896)
!10902 = !DILocation(line: 815, column: 1, scope: !10896)
!10903 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10879, file: !10879, line: 771, type: !10889, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10904)
!10904 = !{!10905}
!10905 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10903, file: !10879, line: 771, type: !1254)
!10906 = !DILocation(line: 0, scope: !10903)
!10907 = !DILocation(line: 773, column: 21, scope: !10903)
!10908 = !DILocation(line: 773, column: 3, scope: !10903)
!10909 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1321, file: !1321, line: 47, type: !10910, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10912)
!10910 = !DISubroutineType(types: !10911)
!10911 = !{!105, !1197, !428}
!10912 = !{!10913, !10914}
!10913 = !DILocalVariable(name: "flags", arg: 1, scope: !10909, file: !1321, line: 47, type: !1197)
!10914 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10909, file: !1321, line: 47, type: !428)
!10915 = !DILocation(line: 0, scope: !10909)
!10916 = !DILocation(line: 50, column: 13, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10909, file: !1321, line: 50, column: 6)
!10918 = !DILocation(line: 50, column: 28, scope: !10917)
!10919 = !DILocation(line: 50, column: 6, scope: !10909)
!10920 = !DILocation(line: 53, column: 11, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10917, file: !1321, line: 50, column: 34)
!10922 = !DILocation(line: 55, column: 14, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10921, file: !1321, line: 55, column: 7)
!10924 = !DILocation(line: 55, column: 35, scope: !10923)
!10925 = !DILocation(line: 55, column: 7, scope: !10921)
!10926 = !DILocation(line: 56, column: 14, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10928, file: !1321, line: 56, column: 8)
!10928 = distinct !DILexicalBlock(scope: !10923, file: !1321, line: 55, column: 41)
!10929 = !DILocation(line: 56, column: 8, scope: !10928)
!10930 = !DILocation(line: 0, scope: !10923)
!10931 = !DILocation(line: 66, column: 14, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10921, file: !1321, line: 66, column: 7)
!10933 = !DILocation(line: 66, column: 30, scope: !10932)
!10934 = !DILocation(line: 66, column: 7, scope: !10921)
!10935 = !DILocation(line: 67, column: 12, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10932, file: !1321, line: 66, column: 36)
!10937 = !DILocation(line: 68, column: 3, scope: !10936)
!10938 = !DILocation(line: 68, column: 21, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10932, file: !1321, line: 68, column: 14)
!10940 = !DILocation(line: 68, column: 39, scope: !10939)
!10941 = !DILocation(line: 68, column: 14, scope: !10932)
!10942 = !DILocation(line: 69, column: 12, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !10939, file: !1321, line: 68, column: 45)
!10944 = !DILocation(line: 70, column: 3, scope: !10943)
!10945 = !DILocation(line: 72, column: 21, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10917, file: !1321, line: 72, column: 14)
!10947 = !DILocation(line: 72, column: 35, scope: !10946)
!10948 = !DILocation(line: 72, column: 14, scope: !10917)
!10949 = !DILocation(line: 77, column: 14, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10951, file: !1321, line: 77, column: 7)
!10951 = distinct !DILexicalBlock(scope: !10946, file: !1321, line: 72, column: 41)
!10952 = !DILocation(line: 77, column: 30, scope: !10950)
!10953 = !DILocation(line: 77, column: 7, scope: !10951)
!10954 = !DILocation(line: 0, scope: !10917)
!10955 = !DILocation(line: 90, column: 1, scope: !10909)
!10956 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1321, file: !1321, line: 157, type: !10957, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10959)
!10957 = !DISubroutineType(types: !10958)
!10958 = !{null, !1181, !105, !105, !105}
!10959 = !{!10960, !10961, !10962, !10963, !10964, !10965, !10966, !10967, !10968, !10969, !10970}
!10960 = !DILocalVariable(name: "dev", arg: 1, scope: !10956, file: !1321, line: 157, type: !1181)
!10961 = !DILocalVariable(name: "pin", arg: 2, scope: !10956, file: !1321, line: 157, type: !105)
!10962 = !DILocalVariable(name: "conf", arg: 3, scope: !10956, file: !1321, line: 158, type: !105)
!10963 = !DILocalVariable(name: "func", arg: 4, scope: !10956, file: !1321, line: 158, type: !105)
!10964 = !DILocalVariable(name: "cfg", scope: !10956, file: !1321, line: 160, type: !10464)
!10965 = !DILocalVariable(name: "gpio", scope: !10956, file: !1321, line: 161, type: !1254)
!10966 = !DILocalVariable(name: "pin_ll", scope: !10956, file: !1321, line: 163, type: !105)
!10967 = !DILocalVariable(name: "mode", scope: !10956, file: !1321, line: 227, type: !32)
!10968 = !DILocalVariable(name: "otype", scope: !10956, file: !1321, line: 227, type: !32)
!10969 = !DILocalVariable(name: "ospeed", scope: !10956, file: !1321, line: 227, type: !32)
!10970 = !DILocalVariable(name: "pupd", scope: !10956, file: !1321, line: 227, type: !32)
!10971 = !DILocation(line: 0, scope: !10956)
!10972 = !DILocation(line: 160, column: 45, scope: !10956)
!10973 = !DILocation(line: 161, column: 44, scope: !10956)
!10974 = !DILocation(line: 163, column: 15, scope: !10956)
!10975 = !DILocation(line: 229, column: 14, scope: !10956)
!10976 = !DILocation(line: 246, column: 47, scope: !10956)
!10977 = !DILocation(line: 246, column: 2, scope: !10956)
!10978 = !DILocation(line: 248, column: 43, scope: !10956)
!10979 = !DILocation(line: 248, column: 2, scope: !10956)
!10980 = !DILocation(line: 250, column: 40, scope: !10956)
!10981 = !DILocation(line: 250, column: 2, scope: !10956)
!10982 = !DILocation(line: 252, column: 11, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !10956, file: !1321, line: 252, column: 6)
!10984 = !DILocation(line: 252, column: 6, scope: !10956)
!10985 = !DILocation(line: 253, column: 11, scope: !10986)
!10986 = distinct !DILexicalBlock(scope: !10987, file: !1321, line: 253, column: 7)
!10987 = distinct !DILexicalBlock(scope: !10983, file: !1321, line: 252, column: 36)
!10988 = !DILocation(line: 253, column: 7, scope: !10987)
!10989 = !DILocation(line: 254, column: 4, scope: !10990)
!10990 = distinct !DILexicalBlock(scope: !10986, file: !1321, line: 253, column: 16)
!10991 = !DILocation(line: 255, column: 3, scope: !10990)
!10992 = !DILocation(line: 256, column: 4, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10986, file: !1321, line: 255, column: 10)
!10994 = !DILocation(line: 260, column: 40, scope: !10956)
!10995 = !DILocation(line: 260, column: 2, scope: !10956)
!10996 = !DILocation(line: 265, column: 1, scope: !10956)
!10997 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1321, file: !1321, line: 137, type: !10799, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !10998)
!10998 = !{!10999, !11000}
!10999 = !DILocalVariable(name: "pin", arg: 1, scope: !10997, file: !1321, line: 137, type: !105)
!11000 = !DILocalVariable(name: "pinval", scope: !10997, file: !1321, line: 139, type: !113)
!11001 = !DILocation(line: 0, scope: !10997)
!11002 = !DILocation(line: 149, column: 13, scope: !10997)
!11003 = !DILocation(line: 151, column: 2, scope: !10997)
!11004 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10879, file: !10879, line: 342, type: !11005, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !11007)
!11005 = !DISubroutineType(types: !11006)
!11006 = !{null, !1254, !113, !113}
!11007 = !{!11008, !11009, !11010}
!11008 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11004, file: !10879, line: 342, type: !1254)
!11009 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11004, file: !10879, line: 342, type: !113)
!11010 = !DILocalVariable(name: "OutputType", arg: 3, scope: !11004, file: !10879, line: 342, type: !113)
!11011 = !DILocation(line: 0, scope: !11004)
!11012 = !DILocation(line: 344, column: 3, scope: !11004)
!11013 = !DILocation(line: 345, column: 1, scope: !11004)
!11014 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10879, file: !10879, line: 413, type: !11005, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !11015)
!11015 = !{!11016, !11017, !11018}
!11016 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11014, file: !10879, line: 413, type: !1254)
!11017 = !DILocalVariable(name: "Pin", arg: 2, scope: !11014, file: !10879, line: 413, type: !113)
!11018 = !DILocalVariable(name: "Speed", arg: 3, scope: !11014, file: !10879, line: 413, type: !113)
!11019 = !DILocation(line: 0, scope: !11014)
!11020 = !DILocation(line: 415, column: 3, scope: !11014)
!11021 = !DILocation(line: 0, scope: !10819, inlinedAt: !11022)
!11022 = distinct !DILocation(line: 415, column: 3, scope: !11014)
!11023 = !DILocation(line: 380, column: 4, scope: !10819, inlinedAt: !11022)
!11024 = !DILocation(line: 0, scope: !10827, inlinedAt: !11025)
!11025 = distinct !DILocation(line: 415, column: 3, scope: !11014)
!11026 = !DILocation(line: 414, column: 7, scope: !10827, inlinedAt: !11025)
!11027 = !DILocation(line: 0, scope: !10819, inlinedAt: !11028)
!11028 = distinct !DILocation(line: 415, column: 3, scope: !11014)
!11029 = !DILocation(line: 0, scope: !10827, inlinedAt: !11030)
!11030 = distinct !DILocation(line: 415, column: 3, scope: !11014)
!11031 = !DILocation(line: 417, column: 1, scope: !11014)
!11032 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10879, file: !10879, line: 484, type: !11005, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !11033)
!11033 = !{!11034, !11035, !11036}
!11034 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11032, file: !10879, line: 484, type: !1254)
!11035 = !DILocalVariable(name: "Pin", arg: 2, scope: !11032, file: !10879, line: 484, type: !113)
!11036 = !DILocalVariable(name: "Pull", arg: 3, scope: !11032, file: !10879, line: 484, type: !113)
!11037 = !DILocation(line: 0, scope: !11032)
!11038 = !DILocation(line: 486, column: 3, scope: !11032)
!11039 = !DILocation(line: 0, scope: !10819, inlinedAt: !11040)
!11040 = distinct !DILocation(line: 486, column: 3, scope: !11032)
!11041 = !DILocation(line: 380, column: 4, scope: !10819, inlinedAt: !11040)
!11042 = !DILocation(line: 0, scope: !10827, inlinedAt: !11043)
!11043 = distinct !DILocation(line: 486, column: 3, scope: !11032)
!11044 = !DILocation(line: 414, column: 7, scope: !10827, inlinedAt: !11043)
!11045 = !DILocation(line: 0, scope: !10819, inlinedAt: !11046)
!11046 = distinct !DILocation(line: 486, column: 3, scope: !11032)
!11047 = !DILocation(line: 0, scope: !10827, inlinedAt: !11048)
!11048 = distinct !DILocation(line: 486, column: 3, scope: !11032)
!11049 = !DILocation(line: 487, column: 1, scope: !11032)
!11050 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10879, file: !10879, line: 556, type: !11005, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !11051)
!11051 = !{!11052, !11053, !11054}
!11052 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11050, file: !10879, line: 556, type: !1254)
!11053 = !DILocalVariable(name: "Pin", arg: 2, scope: !11050, file: !10879, line: 556, type: !113)
!11054 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11050, file: !10879, line: 556, type: !113)
!11055 = !DILocation(line: 0, scope: !11050)
!11056 = !DILocation(line: 558, column: 3, scope: !11050)
!11057 = !DILocation(line: 0, scope: !10819, inlinedAt: !11058)
!11058 = distinct !DILocation(line: 558, column: 3, scope: !11050)
!11059 = !DILocation(line: 380, column: 4, scope: !10819, inlinedAt: !11058)
!11060 = !DILocation(line: 0, scope: !10827, inlinedAt: !11061)
!11061 = distinct !DILocation(line: 558, column: 3, scope: !11050)
!11062 = !DILocation(line: 414, column: 7, scope: !10827, inlinedAt: !11061)
!11063 = !DILocation(line: 0, scope: !10819, inlinedAt: !11064)
!11064 = distinct !DILocation(line: 558, column: 3, scope: !11050)
!11065 = !DILocation(line: 0, scope: !10827, inlinedAt: !11066)
!11066 = distinct !DILocation(line: 558, column: 3, scope: !11050)
!11067 = !DILocation(line: 560, column: 1, scope: !11050)
!11068 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10879, file: !10879, line: 633, type: !11005, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !11069)
!11069 = !{!11070, !11071, !11072}
!11070 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11068, file: !10879, line: 633, type: !1254)
!11071 = !DILocalVariable(name: "Pin", arg: 2, scope: !11068, file: !10879, line: 633, type: !113)
!11072 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11068, file: !10879, line: 633, type: !113)
!11073 = !DILocation(line: 0, scope: !11068)
!11074 = !DILocation(line: 635, column: 3, scope: !11068)
!11075 = !DILocation(line: 0, scope: !10819, inlinedAt: !11076)
!11076 = distinct !DILocation(line: 635, column: 3, scope: !11068)
!11077 = !DILocation(line: 380, column: 4, scope: !10819, inlinedAt: !11076)
!11078 = !DILocation(line: 0, scope: !10827, inlinedAt: !11079)
!11079 = distinct !DILocation(line: 635, column: 3, scope: !11068)
!11080 = !DILocation(line: 414, column: 7, scope: !10827, inlinedAt: !11079)
!11081 = !DILocation(line: 0, scope: !10819, inlinedAt: !11082)
!11082 = distinct !DILocation(line: 635, column: 3, scope: !11068)
!11083 = !DILocation(line: 0, scope: !10827, inlinedAt: !11084)
!11084 = distinct !DILocation(line: 635, column: 3, scope: !11068)
!11085 = !DILocation(line: 637, column: 1, scope: !11068)
!11086 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10879, file: !10879, line: 273, type: !11005, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !11087)
!11087 = !{!11088, !11089, !11090}
!11088 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11086, file: !10879, line: 273, type: !1254)
!11089 = !DILocalVariable(name: "Pin", arg: 2, scope: !11086, file: !10879, line: 273, type: !113)
!11090 = !DILocalVariable(name: "Mode", arg: 3, scope: !11086, file: !10879, line: 273, type: !113)
!11091 = !DILocation(line: 0, scope: !11086)
!11092 = !DILocation(line: 275, column: 3, scope: !11086)
!11093 = !DILocation(line: 0, scope: !10819, inlinedAt: !11094)
!11094 = distinct !DILocation(line: 275, column: 3, scope: !11086)
!11095 = !DILocation(line: 380, column: 4, scope: !10819, inlinedAt: !11094)
!11096 = !DILocation(line: 0, scope: !10827, inlinedAt: !11097)
!11097 = distinct !DILocation(line: 275, column: 3, scope: !11086)
!11098 = !DILocation(line: 414, column: 7, scope: !10827, inlinedAt: !11097)
!11099 = !DILocation(line: 0, scope: !10819, inlinedAt: !11100)
!11100 = distinct !DILocation(line: 275, column: 3, scope: !11086)
!11101 = !DILocation(line: 0, scope: !10827, inlinedAt: !11102)
!11102 = distinct !DILocation(line: 275, column: 3, scope: !11086)
!11103 = !DILocation(line: 276, column: 1, scope: !11086)
!11104 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1321, file: !1321, line: 698, type: !1334, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !11105)
!11105 = !{!11106, !11107, !11108}
!11106 = !DILocalVariable(name: "dev", arg: 1, scope: !11104, file: !1321, line: 698, type: !1181)
!11107 = !DILocalVariable(name: "data", scope: !11104, file: !1321, line: 700, type: !10531)
!11108 = !DILocalVariable(name: "ret", scope: !11104, file: !1321, line: 701, type: !105)
!11109 = !DILocation(line: 0, scope: !11104)
!11110 = !DILocation(line: 700, column: 38, scope: !11104)
!11111 = !DILocation(line: 703, column: 8, scope: !11104)
!11112 = !DILocation(line: 703, column: 12, scope: !11104)
!11113 = !DILocation(line: 705, column: 7, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11104, file: !1321, line: 705, column: 6)
!11115 = !DILocation(line: 705, column: 6, scope: !11104)
!11116 = !DILocation(line: 722, column: 8, scope: !11104)
!11117 = !DILocation(line: 723, column: 10, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !11104, file: !1321, line: 723, column: 6)
!11119 = !DILocation(line: 723, column: 6, scope: !11104)
!11120 = !DILocation(line: 731, column: 1, scope: !11104)
!11121 = distinct !DISubprogram(name: "device_is_ready", scope: !10309, file: !10309, line: 47, type: !11122, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !11124)
!11122 = !DISubroutineType(types: !11123)
!11123 = !{!492, !1181}
!11124 = !{!11125}
!11125 = !DILocalVariable(name: "dev", arg: 1, scope: !11121, file: !10309, line: 47, type: !1181)
!11126 = !DILocation(line: 0, scope: !11121)
!11127 = !DILocation(line: 55, column: 2, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11121, file: !10309, line: 55, column: 2)
!11129 = !{i64 2154367139}
!11130 = !DILocation(line: 56, column: 9, scope: !11121)
!11131 = !DILocation(line: 56, column: 2, scope: !11121)
!11132 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1321, file: !1321, line: 270, type: !11133, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !11135)
!11133 = !DISubroutineType(types: !11134)
!11134 = !{!105, !1181, !492}
!11135 = !{!11136, !11137, !11138, !11139, !11140}
!11136 = !DILocalVariable(name: "dev", arg: 1, scope: !11132, file: !1321, line: 270, type: !1181)
!11137 = !DILocalVariable(name: "on", arg: 2, scope: !11132, file: !1321, line: 270, type: !492)
!11138 = !DILocalVariable(name: "cfg", scope: !11132, file: !1321, line: 272, type: !10464)
!11139 = !DILocalVariable(name: "ret", scope: !11132, file: !1321, line: 273, type: !105)
!11140 = !DILocalVariable(name: "clk", scope: !11132, file: !1321, line: 278, type: !10766)
!11141 = !DILocation(line: 0, scope: !11132)
!11142 = !DILocation(line: 272, column: 45, scope: !11132)
!11143 = !DILocation(line: 282, column: 38, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !11145, file: !1321, line: 280, column: 10)
!11145 = distinct !DILexicalBlock(scope: !11132, file: !1321, line: 280, column: 6)
!11146 = !DILocation(line: 282, column: 6, scope: !11144)
!11147 = !DILocation(line: 281, column: 9, scope: !11144)
!11148 = !DILocation(line: 293, column: 1, scope: !11132)
!11149 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !481, file: !481, line: 730, type: !11122, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !11150)
!11150 = !{!11151}
!11151 = !DILocalVariable(name: "dev", arg: 1, scope: !11149, file: !481, line: 730, type: !1181)
!11152 = !DILocation(line: 0, scope: !11149)
!11153 = !DILocation(line: 732, column: 9, scope: !11149)
!11154 = !DILocation(line: 732, column: 2, scope: !11149)
!11155 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1321, file: !1321, line: 496, type: !11156, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1152, retainedNodes: !11158)
!11156 = !DISubroutineType(types: !11157)
!11157 = !{!105, !1181, !105, !105, !105}
!11158 = !{!11159, !11160, !11161, !11162, !11163, !11164}
!11159 = !DILocalVariable(name: "dev", arg: 1, scope: !11155, file: !1321, line: 496, type: !1181)
!11160 = !DILocalVariable(name: "pin", arg: 2, scope: !11155, file: !1321, line: 496, type: !105)
!11161 = !DILocalVariable(name: "conf", arg: 3, scope: !11155, file: !1321, line: 496, type: !105)
!11162 = !DILocalVariable(name: "func", arg: 4, scope: !11155, file: !1321, line: 496, type: !105)
!11163 = !DILocalVariable(name: "ret", scope: !11155, file: !1321, line: 498, type: !105)
!11164 = !DILocalVariable(name: "gpio_out", scope: !11165, file: !1321, line: 508, type: !113)
!11165 = distinct !DILexicalBlock(scope: !11166, file: !1321, line: 507, column: 27)
!11166 = distinct !DILexicalBlock(scope: !11155, file: !1321, line: 507, column: 6)
!11167 = !DILocation(line: 0, scope: !11155)
!11168 = !DILocation(line: 505, column: 2, scope: !11155)
!11169 = !DILocation(line: 507, column: 11, scope: !11166)
!11170 = !DILocation(line: 507, column: 6, scope: !11155)
!11171 = !DILocation(line: 508, column: 28, scope: !11165)
!11172 = !DILocation(line: 0, scope: !11165)
!11173 = !DILocation(line: 510, column: 16, scope: !11174)
!11174 = distinct !DILexicalBlock(scope: !11165, file: !1321, line: 510, column: 7)
!11175 = !DILocation(line: 0, scope: !11174)
!11176 = !DILocation(line: 510, column: 7, scope: !11165)
!11177 = !DILocation(line: 511, column: 4, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11174, file: !1321, line: 510, column: 32)
!11179 = !DILocation(line: 512, column: 3, scope: !11178)
!11180 = !DILocation(line: 513, column: 4, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11182, file: !1321, line: 512, column: 39)
!11182 = distinct !DILexicalBlock(scope: !11174, file: !1321, line: 512, column: 14)
!11183 = !DILocation(line: 514, column: 3, scope: !11181)
!11184 = !DILocation(line: 518, column: 1, scope: !11155)
!11185 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1597, file: !1597, line: 526, type: !1500, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11186)
!11186 = !{!11187, !11188, !11189}
!11187 = !DILocalVariable(name: "dev", arg: 1, scope: !11185, file: !1597, line: 526, type: !1502)
!11188 = !DILocalVariable(name: "c", arg: 2, scope: !11185, file: !1597, line: 526, type: !1113)
!11189 = !DILocalVariable(name: "config", scope: !11185, file: !1597, line: 528, type: !11190)
!11190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 32)
!11191 = !DILocation(line: 0, scope: !11185)
!11192 = !DILocation(line: 528, column: 48, scope: !11185)
!11193 = !DILocation(line: 531, column: 40, scope: !11194)
!11194 = distinct !DILexicalBlock(scope: !11185, file: !1597, line: 531, column: 6)
!11195 = !DILocation(line: 531, column: 6, scope: !11194)
!11196 = !DILocation(line: 531, column: 6, scope: !11185)
!11197 = !DILocation(line: 532, column: 34, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !11194, file: !1597, line: 531, column: 48)
!11199 = !DILocation(line: 532, column: 3, scope: !11198)
!11200 = !DILocation(line: 533, column: 2, scope: !11198)
!11201 = !DILocation(line: 539, column: 42, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11185, file: !1597, line: 539, column: 6)
!11203 = !DILocation(line: 539, column: 7, scope: !11202)
!11204 = !DILocation(line: 539, column: 6, scope: !11185)
!11205 = !DILocation(line: 543, column: 52, scope: !11185)
!11206 = !DILocation(line: 543, column: 22, scope: !11185)
!11207 = !DILocation(line: 543, column: 5, scope: !11185)
!11208 = !DILocation(line: 545, column: 2, scope: !11185)
!11209 = !DILocation(line: 546, column: 1, scope: !11185)
!11210 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1597, file: !1597, line: 548, type: !1519, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11211)
!11211 = !{!11212, !11213, !11214, !11215}
!11212 = !DILocalVariable(name: "dev", arg: 1, scope: !11210, file: !1597, line: 548, type: !1502)
!11213 = !DILocalVariable(name: "c", arg: 2, scope: !11210, file: !1597, line: 549, type: !170)
!11214 = !DILocalVariable(name: "config", scope: !11210, file: !1597, line: 551, type: !11190)
!11215 = !DILocalVariable(name: "key", scope: !11210, file: !1597, line: 555, type: !32)
!11216 = !DILocation(line: 0, scope: !11210)
!11217 = !DILocation(line: 551, column: 48, scope: !11210)
!11218 = !DILocation(line: 562, column: 2, scope: !11210)
!11219 = !DILocation(line: 563, column: 41, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11221, file: !1597, line: 563, column: 7)
!11221 = distinct !DILexicalBlock(scope: !11210, file: !1597, line: 562, column: 12)
!11222 = !DILocation(line: 563, column: 7, scope: !11220)
!11223 = !DILocation(line: 563, column: 7, scope: !11221)
!11224 = !DILocation(line: 55, column: 2, scope: !11225, inlinedAt: !11229)
!11225 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7485, file: !7485, line: 42, type: !7486, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11226)
!11226 = !{!11227, !11228}
!11227 = !DILocalVariable(name: "key", scope: !11225, file: !7485, line: 44, type: !32)
!11228 = !DILocalVariable(name: "tmp", scope: !11225, file: !7485, line: 53, type: !32)
!11229 = distinct !DILocation(line: 564, column: 10, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11220, file: !1597, line: 563, column: 49)
!11231 = !{i64 2089943}
!11232 = !DILocation(line: 0, scope: !11225, inlinedAt: !11229)
!11233 = !DILocation(line: 565, column: 42, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11230, file: !1597, line: 565, column: 8)
!11235 = !DILocation(line: 565, column: 8, scope: !11234)
!11236 = !DILocation(line: 565, column: 8, scope: !11230)
!11237 = !DILocalVariable(name: "key", arg: 1, scope: !11238, file: !7485, line: 84, type: !32)
!11238 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7485, file: !7485, line: 84, type: !7496, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11239)
!11239 = !{!11237}
!11240 = !DILocation(line: 0, scope: !11238, inlinedAt: !11241)
!11241 = distinct !DILocation(line: 568, column: 4, scope: !11230)
!11242 = !DILocation(line: 95, column: 2, scope: !11238, inlinedAt: !11241)
!11243 = !{i64 2090760}
!11244 = !DILocation(line: 569, column: 3, scope: !11230)
!11245 = distinct !{!11245, !11218, !11246}
!11246 = !DILocation(line: 570, column: 2, scope: !11210)
!11247 = !DILocation(line: 592, column: 33, scope: !11210)
!11248 = !DILocation(line: 592, column: 2, scope: !11210)
!11249 = !DILocation(line: 0, scope: !11238, inlinedAt: !11250)
!11250 = distinct !DILocation(line: 593, column: 2, scope: !11210)
!11251 = !DILocation(line: 95, column: 2, scope: !11238, inlinedAt: !11250)
!11252 = !DILocation(line: 594, column: 1, scope: !11210)
!11253 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1597, file: !1597, line: 596, type: !1523, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11254)
!11254 = !{!11255, !11256, !11257}
!11255 = !DILocalVariable(name: "dev", arg: 1, scope: !11253, file: !1597, line: 596, type: !1502)
!11256 = !DILocalVariable(name: "config", scope: !11253, file: !1597, line: 598, type: !11190)
!11257 = !DILocalVariable(name: "err", scope: !11253, file: !1597, line: 599, type: !113)
!11258 = !DILocation(line: 0, scope: !11253)
!11259 = !DILocation(line: 598, column: 48, scope: !11253)
!11260 = !DILocation(line: 606, column: 40, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11253, file: !1597, line: 606, column: 6)
!11262 = !DILocation(line: 606, column: 6, scope: !11261)
!11263 = !DILocation(line: 606, column: 6, scope: !11253)
!11264 = !DILocation(line: 610, column: 39, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !11253, file: !1597, line: 610, column: 6)
!11266 = !DILocation(line: 610, column: 6, scope: !11265)
!11267 = !DILocation(line: 610, column: 6, scope: !11253)
!11268 = !DILocation(line: 614, column: 39, scope: !11269)
!11269 = distinct !DILexicalBlock(scope: !11253, file: !1597, line: 614, column: 6)
!11270 = !DILocation(line: 614, column: 6, scope: !11269)
!11271 = !DILocation(line: 614, column: 6, scope: !11253)
!11272 = !DILocation(line: 619, column: 40, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11253, file: !1597, line: 619, column: 6)
!11274 = !DILocation(line: 619, column: 6, scope: !11273)
!11275 = !DILocation(line: 619, column: 6, scope: !11253)
!11276 = !DILocation(line: 623, column: 10, scope: !11277)
!11277 = distinct !DILexicalBlock(scope: !11253, file: !1597, line: 623, column: 6)
!11278 = !DILocation(line: 623, column: 6, scope: !11253)
!11279 = !DILocation(line: 624, column: 34, scope: !11280)
!11280 = distinct !DILexicalBlock(scope: !11277, file: !1597, line: 623, column: 24)
!11281 = !DILocation(line: 624, column: 3, scope: !11280)
!11282 = !DILocation(line: 625, column: 2, scope: !11280)
!11283 = !DILocation(line: 632, column: 10, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11253, file: !1597, line: 632, column: 6)
!11285 = !DILocation(line: 632, column: 6, scope: !11253)
!11286 = !DILocation(line: 633, column: 34, scope: !11287)
!11287 = distinct !DILexicalBlock(scope: !11284, file: !1597, line: 632, column: 32)
!11288 = !DILocation(line: 633, column: 3, scope: !11287)
!11289 = !DILocation(line: 634, column: 2, scope: !11287)
!11290 = !DILocation(line: 636, column: 10, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11253, file: !1597, line: 636, column: 6)
!11292 = !DILocation(line: 636, column: 6, scope: !11253)
!11293 = !DILocation(line: 637, column: 33, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11291, file: !1597, line: 636, column: 31)
!11295 = !DILocation(line: 637, column: 3, scope: !11294)
!11296 = !DILocation(line: 638, column: 2, scope: !11294)
!11297 = !DILocation(line: 640, column: 10, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11253, file: !1597, line: 640, column: 6)
!11299 = !DILocation(line: 640, column: 6, scope: !11253)
!11300 = !DILocation(line: 641, column: 33, scope: !11301)
!11301 = distinct !DILexicalBlock(scope: !11298, file: !1597, line: 640, column: 32)
!11302 = !DILocation(line: 641, column: 3, scope: !11301)
!11303 = !DILocation(line: 642, column: 2, scope: !11301)
!11304 = !DILocation(line: 646, column: 32, scope: !11253)
!11305 = !DILocation(line: 646, column: 2, scope: !11253)
!11306 = !DILocation(line: 648, column: 2, scope: !11253)
!11307 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1597, file: !1597, line: 419, type: !1527, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11308)
!11308 = !{!11309, !11310, !11311, !11312, !11314, !11315, !11316, !11317}
!11309 = !DILocalVariable(name: "dev", arg: 1, scope: !11307, file: !1597, line: 419, type: !1502)
!11310 = !DILocalVariable(name: "cfg", arg: 2, scope: !11307, file: !1597, line: 420, type: !1529)
!11311 = !DILocalVariable(name: "config", scope: !11307, file: !1597, line: 422, type: !11190)
!11312 = !DILocalVariable(name: "data", scope: !11307, file: !1597, line: 423, type: !11313)
!11313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 32)
!11314 = !DILocalVariable(name: "parity", scope: !11307, file: !1597, line: 424, type: !3764)
!11315 = !DILocalVariable(name: "stopbits", scope: !11307, file: !1597, line: 425, type: !3764)
!11316 = !DILocalVariable(name: "databits", scope: !11307, file: !1597, line: 426, type: !3764)
!11317 = !DILocalVariable(name: "flowctrl", scope: !11307, file: !1597, line: 428, type: !3764)
!11318 = !DILocation(line: 0, scope: !11307)
!11319 = !DILocation(line: 422, column: 48, scope: !11307)
!11320 = !DILocation(line: 423, column: 38, scope: !11307)
!11321 = !DILocation(line: 424, column: 56, scope: !11307)
!11322 = !DILocation(line: 424, column: 51, scope: !11307)
!11323 = !DILocation(line: 424, column: 26, scope: !11307)
!11324 = !DILocation(line: 425, column: 60, scope: !11307)
!11325 = !DILocation(line: 425, column: 55, scope: !11307)
!11326 = !DILocation(line: 425, column: 28, scope: !11307)
!11327 = !DILocation(line: 426, column: 60, scope: !11307)
!11328 = !DILocation(line: 426, column: 55, scope: !11307)
!11329 = !DILocation(line: 426, column: 28, scope: !11307)
!11330 = !DILocation(line: 428, column: 58, scope: !11307)
!11331 = !DILocation(line: 428, column: 53, scope: !11307)
!11332 = !DILocation(line: 428, column: 28, scope: !11307)
!11333 = !DILocation(line: 431, column: 44, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11307, file: !1597, line: 431, column: 6)
!11335 = !DILocation(line: 438, column: 22, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11307, file: !1597, line: 437, column: 6)
!11337 = !DILocation(line: 437, column: 6, scope: !11307)
!11338 = !DILocation(line: 448, column: 6, scope: !11307)
!11339 = !DILocation(line: 465, column: 47, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11307, file: !1597, line: 465, column: 6)
!11341 = !DILocation(line: 475, column: 21, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11307, file: !1597, line: 475, column: 6)
!11343 = !DILocation(line: 475, column: 6, scope: !11307)
!11344 = !DILocation(line: 476, column: 8, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11346, file: !1597, line: 476, column: 7)
!11346 = distinct !DILexicalBlock(scope: !11342, file: !1597, line: 475, column: 49)
!11347 = !DILocation(line: 477, column: 34, scope: !11345)
!11348 = !DILocation(line: 476, column: 7, scope: !11346)
!11349 = !DILocation(line: 482, column: 27, scope: !11307)
!11350 = !DILocation(line: 482, column: 2, scope: !11307)
!11351 = !DILocation(line: 484, column: 16, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11307, file: !1597, line: 484, column: 6)
!11353 = !DILocation(line: 484, column: 13, scope: !11352)
!11354 = !DILocation(line: 484, column: 6, scope: !11307)
!11355 = !DILocation(line: 485, column: 3, scope: !11356)
!11356 = distinct !DILexicalBlock(scope: !11352, file: !1597, line: 484, column: 44)
!11357 = !DILocation(line: 486, column: 2, scope: !11356)
!11358 = !DILocation(line: 488, column: 18, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11307, file: !1597, line: 488, column: 6)
!11360 = !DILocation(line: 488, column: 15, scope: !11359)
!11361 = !DILocation(line: 488, column: 6, scope: !11307)
!11362 = !DILocation(line: 489, column: 3, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11359, file: !1597, line: 488, column: 48)
!11364 = !DILocation(line: 490, column: 2, scope: !11363)
!11365 = !DILocation(line: 492, column: 18, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11307, file: !1597, line: 492, column: 6)
!11367 = !DILocation(line: 492, column: 15, scope: !11366)
!11368 = !DILocation(line: 492, column: 6, scope: !11307)
!11369 = !DILocation(line: 493, column: 3, scope: !11370)
!11370 = distinct !DILexicalBlock(scope: !11366, file: !1597, line: 492, column: 48)
!11371 = !DILocation(line: 494, column: 2, scope: !11370)
!11372 = !DILocation(line: 496, column: 18, scope: !11373)
!11373 = distinct !DILexicalBlock(scope: !11307, file: !1597, line: 496, column: 6)
!11374 = !DILocation(line: 496, column: 15, scope: !11373)
!11375 = !DILocation(line: 496, column: 6, scope: !11307)
!11376 = !DILocation(line: 497, column: 3, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11373, file: !1597, line: 496, column: 46)
!11378 = !DILocation(line: 498, column: 2, scope: !11377)
!11379 = !DILocation(line: 500, column: 11, scope: !11380)
!11380 = distinct !DILexicalBlock(scope: !11307, file: !1597, line: 500, column: 6)
!11381 = !DILocation(line: 500, column: 29, scope: !11380)
!11382 = !DILocation(line: 500, column: 20, scope: !11380)
!11383 = !DILocation(line: 500, column: 6, scope: !11307)
!11384 = !DILocation(line: 501, column: 3, scope: !11385)
!11385 = distinct !DILexicalBlock(scope: !11380, file: !1597, line: 500, column: 40)
!11386 = !DILocation(line: 502, column: 26, scope: !11385)
!11387 = !DILocation(line: 502, column: 19, scope: !11385)
!11388 = !DILocation(line: 503, column: 2, scope: !11385)
!11389 = !DILocation(line: 505, column: 26, scope: !11307)
!11390 = !DILocation(line: 505, column: 2, scope: !11307)
!11391 = !DILocation(line: 506, column: 2, scope: !11307)
!11392 = !DILocation(line: 507, column: 1, scope: !11307)
!11393 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1597, file: !1597, line: 509, type: !1540, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11394)
!11394 = !{!11395, !11396, !11397}
!11395 = !DILocalVariable(name: "dev", arg: 1, scope: !11393, file: !1597, line: 509, type: !1502)
!11396 = !DILocalVariable(name: "cfg", arg: 2, scope: !11393, file: !1597, line: 510, type: !1542)
!11397 = !DILocalVariable(name: "data", scope: !11393, file: !1597, line: 512, type: !11313)
!11398 = !DILocation(line: 0, scope: !11393)
!11399 = !DILocation(line: 512, column: 38, scope: !11393)
!11400 = !DILocation(line: 514, column: 24, scope: !11393)
!11401 = !DILocation(line: 514, column: 7, scope: !11393)
!11402 = !DILocation(line: 514, column: 16, scope: !11393)
!11403 = !DILocation(line: 515, column: 41, scope: !11393)
!11404 = !{i32 0, i32 1537}
!11405 = !DILocation(line: 515, column: 16, scope: !11393)
!11406 = !DILocation(line: 515, column: 7, scope: !11393)
!11407 = !DILocation(line: 515, column: 14, scope: !11393)
!11408 = !DILocation(line: 517, column: 3, scope: !11393)
!11409 = !{i32 0, i32 12289}
!11410 = !DILocation(line: 516, column: 19, scope: !11393)
!11411 = !DILocation(line: 516, column: 7, scope: !11393)
!11412 = !DILocation(line: 516, column: 17, scope: !11393)
!11413 = !DILocation(line: 519, column: 3, scope: !11393)
!11414 = !DILocation(line: 519, column: 33, scope: !11393)
!11415 = !DILocation(line: 518, column: 19, scope: !11393)
!11416 = !DILocation(line: 518, column: 7, scope: !11393)
!11417 = !DILocation(line: 518, column: 17, scope: !11393)
!11418 = !DILocation(line: 521, column: 3, scope: !11393)
!11419 = !{i32 0, i32 769}
!11420 = !DILocation(line: 520, column: 19, scope: !11393)
!11421 = !DILocation(line: 520, column: 7, scope: !11393)
!11422 = !DILocation(line: 520, column: 17, scope: !11393)
!11423 = !DILocation(line: 522, column: 2, scope: !11393)
!11424 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1597, file: !1597, line: 205, type: !11425, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11427)
!11425 = !DISubroutineType(types: !11426)
!11426 = !{!113, !1502}
!11427 = !{!11428, !11429}
!11428 = !DILocalVariable(name: "dev", arg: 1, scope: !11424, file: !1597, line: 205, type: !1502)
!11429 = !DILocalVariable(name: "config", scope: !11424, file: !1597, line: 207, type: !11190)
!11430 = !DILocation(line: 0, scope: !11424)
!11431 = !DILocation(line: 207, column: 48, scope: !11424)
!11432 = !DILocation(line: 209, column: 36, scope: !11424)
!11433 = !DILocation(line: 209, column: 9, scope: !11424)
!11434 = !DILocation(line: 209, column: 2, scope: !11424)
!11435 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1597, file: !1597, line: 270, type: !11436, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11438)
!11436 = !DISubroutineType(types: !11437)
!11437 = !{!1468, !113}
!11438 = !{!11439}
!11439 = !DILocalVariable(name: "parity", arg: 1, scope: !11435, file: !1597, line: 270, type: !113)
!11440 = !DILocation(line: 0, scope: !11435)
!11441 = !DILocation(line: 272, column: 2, scope: !11435)
!11442 = !DILocation(line: 281, column: 1, scope: !11435)
!11443 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1597, file: !1597, line: 220, type: !11425, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11444)
!11444 = !{!11445, !11446}
!11445 = !DILocalVariable(name: "dev", arg: 1, scope: !11443, file: !1597, line: 220, type: !1502)
!11446 = !DILocalVariable(name: "config", scope: !11443, file: !1597, line: 222, type: !11190)
!11447 = !DILocation(line: 0, scope: !11443)
!11448 = !DILocation(line: 222, column: 48, scope: !11443)
!11449 = !DILocation(line: 224, column: 44, scope: !11443)
!11450 = !DILocation(line: 224, column: 9, scope: !11443)
!11451 = !DILocation(line: 224, column: 2, scope: !11443)
!11452 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1597, file: !1597, line: 304, type: !11453, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11455)
!11453 = !DISubroutineType(types: !11454)
!11454 = !{!1482, !113}
!11455 = !{!11456}
!11456 = !DILocalVariable(name: "sb", arg: 1, scope: !11452, file: !1597, line: 304, type: !113)
!11457 = !DILocation(line: 0, scope: !11452)
!11458 = !DILocation(line: 306, column: 2, scope: !11452)
!11459 = !DILocation(line: 0, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11452, file: !1597, line: 306, column: 14)
!11461 = !DILocation(line: 323, column: 1, scope: !11452)
!11462 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1597, file: !1597, line: 235, type: !11425, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11463)
!11463 = !{!11464, !11465}
!11464 = !DILocalVariable(name: "dev", arg: 1, scope: !11462, file: !1597, line: 235, type: !1502)
!11465 = !DILocalVariable(name: "config", scope: !11462, file: !1597, line: 237, type: !11190)
!11466 = !DILocation(line: 0, scope: !11462)
!11467 = !DILocation(line: 237, column: 48, scope: !11462)
!11468 = !DILocation(line: 239, column: 39, scope: !11462)
!11469 = !DILocation(line: 239, column: 9, scope: !11462)
!11470 = !DILocation(line: 239, column: 2, scope: !11462)
!11471 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1597, file: !1597, line: 355, type: !11472, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11474)
!11472 = !DISubroutineType(types: !11473)
!11473 = !{!1475, !113, !113}
!11474 = !{!11475, !11476}
!11475 = !DILocalVariable(name: "db", arg: 1, scope: !11471, file: !1597, line: 355, type: !113)
!11476 = !DILocalVariable(name: "p", arg: 2, scope: !11471, file: !1597, line: 356, type: !113)
!11477 = !DILocation(line: 0, scope: !11471)
!11478 = !DILocation(line: 358, column: 2, scope: !11471)
!11479 = !DILocation(line: 384, column: 1, scope: !11471)
!11480 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1597, file: !1597, line: 250, type: !11425, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11481)
!11481 = !{!11482, !11483}
!11482 = !DILocalVariable(name: "dev", arg: 1, scope: !11480, file: !1597, line: 250, type: !1502)
!11483 = !DILocalVariable(name: "config", scope: !11480, file: !1597, line: 252, type: !11190)
!11484 = !DILocation(line: 0, scope: !11480)
!11485 = !DILocation(line: 252, column: 48, scope: !11480)
!11486 = !DILocation(line: 254, column: 40, scope: !11480)
!11487 = !DILocation(line: 254, column: 9, scope: !11480)
!11488 = !DILocation(line: 254, column: 2, scope: !11480)
!11489 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1597, file: !1597, line: 409, type: !11490, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11492)
!11490 = !DISubroutineType(types: !11491)
!11491 = !{!1488, !113}
!11492 = !{!11493}
!11493 = !DILocalVariable(name: "fc", arg: 1, scope: !11489, file: !1597, line: 409, type: !113)
!11494 = !DILocation(line: 0, scope: !11489)
!11495 = !DILocation(line: 411, column: 9, scope: !11496)
!11496 = distinct !DILexicalBlock(scope: !11489, file: !1597, line: 411, column: 6)
!11497 = !DILocation(line: 416, column: 1, scope: !11489)
!11498 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !11499, file: !11499, line: 967, type: !11500, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11502)
!11499 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11500 = !DISubroutineType(types: !11501)
!11501 = !{!113, !1543}
!11502 = !{!11503}
!11503 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11498, file: !11499, line: 967, type: !1543)
!11504 = !DILocation(line: 0, scope: !11498)
!11505 = !DILocation(line: 969, column: 21, scope: !11498)
!11506 = !DILocation(line: 969, column: 3, scope: !11498)
!11507 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !11499, file: !11499, line: 601, type: !11500, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11508)
!11508 = !{!11509}
!11509 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11507, file: !11499, line: 601, type: !1543)
!11510 = !DILocation(line: 0, scope: !11507)
!11511 = !DILocation(line: 603, column: 21, scope: !11507)
!11512 = !DILocation(line: 603, column: 3, scope: !11507)
!11513 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !11499, file: !11499, line: 820, type: !11500, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11514)
!11514 = !{!11515}
!11515 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11513, file: !11499, line: 820, type: !1543)
!11516 = !DILocation(line: 0, scope: !11513)
!11517 = !DILocation(line: 822, column: 21, scope: !11513)
!11518 = !DILocation(line: 822, column: 3, scope: !11513)
!11519 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !11499, file: !11499, line: 547, type: !11500, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11520)
!11520 = !{!11521}
!11521 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11519, file: !11499, line: 547, type: !1543)
!11522 = !DILocation(line: 0, scope: !11519)
!11523 = !DILocation(line: 549, column: 21, scope: !11519)
!11524 = !DILocation(line: 549, column: 3, scope: !11519)
!11525 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1597, file: !1597, line: 257, type: !11526, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11528)
!11526 = !DISubroutineType(types: !11527)
!11527 = !{!113, !1468}
!11528 = !{!11529}
!11529 = !DILocalVariable(name: "parity", arg: 1, scope: !11525, file: !1597, line: 257, type: !1468)
!11530 = !DILocation(line: 0, scope: !11525)
!11531 = !DILocation(line: 259, column: 2, scope: !11525)
!11532 = !DILocation(line: 268, column: 1, scope: !11525)
!11533 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1597, file: !1597, line: 283, type: !11534, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11536)
!11534 = !DISubroutineType(types: !11535)
!11535 = !{!113, !1482}
!11536 = !{!11537}
!11537 = !DILocalVariable(name: "sb", arg: 1, scope: !11533, file: !1597, line: 283, type: !1482)
!11538 = !DILocation(line: 0, scope: !11533)
!11539 = !DILocation(line: 285, column: 2, scope: !11533)
!11540 = !DILocation(line: 0, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11533, file: !1597, line: 285, column: 14)
!11542 = !DILocation(line: 302, column: 1, scope: !11533)
!11543 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1597, file: !1597, line: 325, type: !11544, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11546)
!11544 = !DISubroutineType(types: !11545)
!11545 = !{!113, !1475, !1468}
!11546 = !{!11547, !11548}
!11547 = !DILocalVariable(name: "db", arg: 1, scope: !11543, file: !1597, line: 325, type: !1475)
!11548 = !DILocalVariable(name: "p", arg: 2, scope: !11543, file: !1597, line: 326, type: !1468)
!11549 = !DILocation(line: 0, scope: !11543)
!11550 = !DILocation(line: 328, column: 2, scope: !11543)
!11551 = !DILocation(line: 353, column: 1, scope: !11543)
!11552 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1597, file: !1597, line: 393, type: !11553, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11555)
!11553 = !DISubroutineType(types: !11554)
!11554 = !{!113, !1488}
!11555 = !{!11556}
!11556 = !DILocalVariable(name: "fc", arg: 1, scope: !11552, file: !1597, line: 393, type: !1488)
!11557 = !DILocation(line: 0, scope: !11552)
!11558 = !DILocation(line: 395, column: 9, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11552, file: !1597, line: 395, column: 6)
!11560 = !DILocation(line: 400, column: 1, scope: !11552)
!11561 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !11499, file: !11499, line: 424, type: !11562, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11564)
!11562 = !DISubroutineType(types: !11563)
!11563 = !{null, !1543}
!11564 = !{!11565}
!11565 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11561, file: !11499, line: 424, type: !1543)
!11566 = !DILocation(line: 0, scope: !11561)
!11567 = !DILocation(line: 426, column: 3, scope: !11561)
!11568 = !DILocation(line: 427, column: 1, scope: !11561)
!11569 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1597, file: !1597, line: 197, type: !11570, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11572)
!11570 = !DISubroutineType(types: !11571)
!11571 = !{null, !1502, !113}
!11572 = !{!11573, !11574, !11575}
!11573 = !DILocalVariable(name: "dev", arg: 1, scope: !11569, file: !1597, line: 197, type: !1502)
!11574 = !DILocalVariable(name: "parity", arg: 2, scope: !11569, file: !1597, line: 198, type: !113)
!11575 = !DILocalVariable(name: "config", scope: !11569, file: !1597, line: 200, type: !11190)
!11576 = !DILocation(line: 0, scope: !11569)
!11577 = !DILocation(line: 200, column: 48, scope: !11569)
!11578 = !DILocation(line: 202, column: 29, scope: !11569)
!11579 = !DILocation(line: 202, column: 2, scope: !11569)
!11580 = !DILocation(line: 203, column: 1, scope: !11569)
!11581 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1597, file: !1597, line: 212, type: !11570, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11582)
!11582 = !{!11583, !11584, !11585}
!11583 = !DILocalVariable(name: "dev", arg: 1, scope: !11581, file: !1597, line: 212, type: !1502)
!11584 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11581, file: !1597, line: 213, type: !113)
!11585 = !DILocalVariable(name: "config", scope: !11581, file: !1597, line: 215, type: !11190)
!11586 = !DILocation(line: 0, scope: !11581)
!11587 = !DILocation(line: 215, column: 48, scope: !11581)
!11588 = !DILocation(line: 217, column: 37, scope: !11581)
!11589 = !DILocation(line: 217, column: 2, scope: !11581)
!11590 = !DILocation(line: 218, column: 1, scope: !11581)
!11591 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1597, file: !1597, line: 227, type: !11570, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11592)
!11592 = !{!11593, !11594, !11595}
!11593 = !DILocalVariable(name: "dev", arg: 1, scope: !11591, file: !1597, line: 227, type: !1502)
!11594 = !DILocalVariable(name: "databits", arg: 2, scope: !11591, file: !1597, line: 228, type: !113)
!11595 = !DILocalVariable(name: "config", scope: !11591, file: !1597, line: 230, type: !11190)
!11596 = !DILocation(line: 0, scope: !11591)
!11597 = !DILocation(line: 230, column: 48, scope: !11591)
!11598 = !DILocation(line: 232, column: 32, scope: !11591)
!11599 = !DILocation(line: 232, column: 2, scope: !11591)
!11600 = !DILocation(line: 233, column: 1, scope: !11591)
!11601 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1597, file: !1597, line: 242, type: !11570, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11602)
!11602 = !{!11603, !11604, !11605}
!11603 = !DILocalVariable(name: "dev", arg: 1, scope: !11601, file: !1597, line: 242, type: !1502)
!11604 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11601, file: !1597, line: 243, type: !113)
!11605 = !DILocalVariable(name: "config", scope: !11601, file: !1597, line: 245, type: !11190)
!11606 = !DILocation(line: 0, scope: !11601)
!11607 = !DILocation(line: 245, column: 48, scope: !11601)
!11608 = !DILocation(line: 247, column: 33, scope: !11601)
!11609 = !DILocation(line: 247, column: 2, scope: !11601)
!11610 = !DILocation(line: 248, column: 1, scope: !11601)
!11611 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1597, file: !1597, line: 107, type: !11570, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11612)
!11612 = !{!11613, !11614, !11615, !11616, !11617}
!11613 = !DILocalVariable(name: "dev", arg: 1, scope: !11611, file: !1597, line: 107, type: !1502)
!11614 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11611, file: !1597, line: 107, type: !113)
!11615 = !DILocalVariable(name: "config", scope: !11611, file: !1597, line: 109, type: !11190)
!11616 = !DILocalVariable(name: "data", scope: !11611, file: !1597, line: 110, type: !11313)
!11617 = !DILocalVariable(name: "clock_rate", scope: !11611, file: !1597, line: 112, type: !113)
!11618 = !DILocation(line: 0, scope: !11611)
!11619 = !DILocation(line: 109, column: 48, scope: !11611)
!11620 = !DILocation(line: 110, column: 38, scope: !11611)
!11621 = !DILocation(line: 112, column: 2, scope: !11611)
!11622 = !DILocation(line: 123, column: 36, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !11624, file: !1597, line: 123, column: 7)
!11624 = distinct !DILexicalBlock(scope: !11625, file: !1597, line: 122, column: 9)
!11625 = distinct !DILexicalBlock(scope: !11611, file: !1597, line: 115, column: 6)
!11626 = !DILocation(line: 124, column: 42, scope: !11623)
!11627 = !DILocation(line: 123, column: 7, scope: !11623)
!11628 = !DILocation(line: 125, column: 22, scope: !11623)
!11629 = !DILocation(line: 123, column: 7, scope: !11624)
!11630 = !DILocation(line: 126, column: 4, scope: !11631)
!11631 = distinct !DILexicalBlock(scope: !11632, file: !1597, line: 126, column: 4)
!11632 = distinct !DILexicalBlock(scope: !11633, file: !1597, line: 126, column: 4)
!11633 = distinct !DILexicalBlock(scope: !11634, file: !1597, line: 126, column: 4)
!11634 = distinct !DILexicalBlock(scope: !11635, file: !1597, line: 126, column: 4)
!11635 = distinct !DILexicalBlock(scope: !11623, file: !1597, line: 125, column: 27)
!11636 = !DILocation(line: 127, column: 4, scope: !11635)
!11637 = !DILocation(line: 176, column: 36, scope: !11611)
!11638 = !DILocation(line: 176, column: 3, scope: !11611)
!11639 = !DILocation(line: 179, column: 32, scope: !11611)
!11640 = !DILocation(line: 180, column: 10, scope: !11611)
!11641 = !DILocation(line: 179, column: 3, scope: !11611)
!11642 = !DILocation(line: 189, column: 3, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11644, file: !1597, line: 189, column: 3)
!11644 = distinct !DILexicalBlock(scope: !11611, file: !1597, line: 189, column: 3)
!11645 = !DILocation(line: 189, column: 3, scope: !11644)
!11646 = !DILocation(line: 189, column: 3, scope: !11647)
!11647 = distinct !DILexicalBlock(scope: !11643, file: !1597, line: 189, column: 3)
!11648 = !DILocation(line: 195, column: 1, scope: !11611)
!11649 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !11499, file: !11499, line: 410, type: !11562, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11650)
!11650 = !{!11651}
!11651 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11649, file: !11499, line: 410, type: !1543)
!11652 = !DILocation(line: 0, scope: !11649)
!11653 = !DILocation(line: 412, column: 3, scope: !11649)
!11654 = !DILocation(line: 413, column: 1, scope: !11649)
!11655 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !959, file: !959, line: 216, type: !1576, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11656)
!11656 = !{!11657, !11658, !11659, !11660}
!11657 = !DILocalVariable(name: "dev", arg: 1, scope: !11655, file: !959, line: 216, type: !1502)
!11658 = !DILocalVariable(name: "sys", arg: 2, scope: !11655, file: !959, line: 217, type: !1052)
!11659 = !DILocalVariable(name: "rate", arg: 3, scope: !11655, file: !959, line: 218, type: !1010)
!11660 = !DILocalVariable(name: "api", scope: !11655, file: !959, line: 220, type: !1554)
!11661 = !DILocation(line: 0, scope: !11655)
!11662 = !DILocation(line: 221, column: 49, scope: !11655)
!11663 = !DILocation(line: 223, column: 11, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11655, file: !959, line: 223, column: 6)
!11665 = !DILocation(line: 223, column: 20, scope: !11664)
!11666 = !DILocation(line: 223, column: 6, scope: !11655)
!11667 = !DILocation(line: 227, column: 9, scope: !11655)
!11668 = !DILocation(line: 227, column: 2, scope: !11655)
!11669 = !DILocation(line: 228, column: 1, scope: !11655)
!11670 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3477, file: !3477, line: 175, type: !3478, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11671)
!11671 = !{!11672}
!11672 = !DILocalVariable(name: "level", arg: 1, scope: !11670, file: !3477, line: 175, type: !105)
!11673 = !DILocation(line: 0, scope: !11670)
!11674 = !DILocation(line: 177, column: 2, scope: !11670)
!11675 = !DILocation(line: 189, column: 1, scope: !11670)
!11676 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !11499, file: !11499, line: 615, type: !11677, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11679)
!11677 = !DISubroutineType(types: !11678)
!11678 = !{null, !1543, !113}
!11679 = !{!11680, !11681}
!11680 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11676, file: !11499, line: 615, type: !1543)
!11681 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11676, file: !11499, line: 615, type: !113)
!11682 = !DILocation(line: 0, scope: !11676)
!11683 = !DILocation(line: 617, column: 3, scope: !11676)
!11684 = !DILocation(line: 618, column: 1, scope: !11676)
!11685 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !11499, file: !11499, line: 1020, type: !11686, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11688)
!11686 = !DISubroutineType(types: !11687)
!11687 = !{null, !1543, !113, !113, !113}
!11688 = !{!11689, !11690, !11691, !11692}
!11689 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11685, file: !11499, line: 1020, type: !1543)
!11690 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11685, file: !11499, line: 1020, type: !113)
!11691 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11685, file: !11499, line: 1020, type: !113)
!11692 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11685, file: !11499, line: 1021, type: !113)
!11693 = !DILocation(line: 0, scope: !11685)
!11694 = !DILocation(line: 1029, column: 30, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !11696, file: !11499, line: 1028, column: 3)
!11696 = distinct !DILexicalBlock(scope: !11685, file: !11499, line: 1023, column: 7)
!11697 = !DILocation(line: 1029, column: 19, scope: !11695)
!11698 = !DILocation(line: 1029, column: 13, scope: !11695)
!11699 = !DILocation(line: 1029, column: 17, scope: !11695)
!11700 = !DILocation(line: 1031, column: 1, scope: !11685)
!11701 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !11499, file: !11499, line: 949, type: !11677, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11702)
!11702 = !{!11703, !11704}
!11703 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11701, file: !11499, line: 949, type: !1543)
!11704 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11701, file: !11499, line: 949, type: !113)
!11705 = !DILocation(line: 0, scope: !11701)
!11706 = !DILocation(line: 951, column: 3, scope: !11701)
!11707 = !DILocation(line: 952, column: 1, scope: !11701)
!11708 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !11499, file: !11499, line: 588, type: !11677, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11709)
!11709 = !{!11710, !11711}
!11710 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11708, file: !11499, line: 588, type: !1543)
!11711 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11708, file: !11499, line: 588, type: !113)
!11712 = !DILocation(line: 0, scope: !11708)
!11713 = !DILocation(line: 590, column: 3, scope: !11708)
!11714 = !DILocation(line: 591, column: 1, scope: !11708)
!11715 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !11499, file: !11499, line: 805, type: !11677, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11716)
!11716 = !{!11717, !11718}
!11717 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11715, file: !11499, line: 805, type: !1543)
!11718 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11715, file: !11499, line: 805, type: !113)
!11719 = !DILocation(line: 0, scope: !11715)
!11720 = !DILocation(line: 807, column: 3, scope: !11715)
!11721 = !DILocation(line: 808, column: 1, scope: !11715)
!11722 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !11499, file: !11499, line: 532, type: !11677, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11723)
!11723 = !{!11724, !11725}
!11724 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11722, file: !11499, line: 532, type: !1543)
!11725 = !DILocalVariable(name: "Parity", arg: 2, scope: !11722, file: !11499, line: 532, type: !113)
!11726 = !DILocation(line: 0, scope: !11722)
!11727 = !DILocation(line: 534, column: 3, scope: !11722)
!11728 = !DILocation(line: 535, column: 1, scope: !11722)
!11729 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !11499, file: !11499, line: 1770, type: !11500, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11730)
!11730 = !{!11731}
!11731 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11729, file: !11499, line: 1770, type: !1543)
!11732 = !DILocation(line: 0, scope: !11729)
!11733 = !DILocation(line: 1772, column: 11, scope: !11729)
!11734 = !DILocation(line: 1772, column: 46, scope: !11729)
!11735 = !DILocation(line: 1772, column: 3, scope: !11729)
!11736 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !11499, file: !11499, line: 1737, type: !11500, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11737)
!11737 = !{!11738}
!11738 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11736, file: !11499, line: 1737, type: !1543)
!11739 = !DILocation(line: 0, scope: !11736)
!11740 = !DILocation(line: 1739, column: 11, scope: !11736)
!11741 = !DILocation(line: 1739, column: 3, scope: !11736)
!11742 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !11499, file: !11499, line: 1748, type: !11500, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11743)
!11743 = !{!11744}
!11744 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11742, file: !11499, line: 1748, type: !1543)
!11745 = !DILocation(line: 0, scope: !11742)
!11746 = !DILocation(line: 1750, column: 11, scope: !11742)
!11747 = !DILocation(line: 1750, column: 45, scope: !11742)
!11748 = !DILocation(line: 1750, column: 3, scope: !11742)
!11749 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !11499, file: !11499, line: 1827, type: !11500, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11750)
!11750 = !{!11751}
!11751 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11749, file: !11499, line: 1827, type: !1543)
!11752 = !DILocation(line: 0, scope: !11749)
!11753 = !DILocation(line: 1829, column: 11, scope: !11749)
!11754 = !DILocation(line: 1829, column: 46, scope: !11749)
!11755 = !DILocation(line: 1829, column: 3, scope: !11749)
!11756 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !11499, file: !11499, line: 1992, type: !11562, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11757)
!11757 = !{!11758}
!11758 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11756, file: !11499, line: 1992, type: !1543)
!11759 = !DILocation(line: 0, scope: !11756)
!11760 = !DILocation(line: 1994, column: 3, scope: !11756)
!11761 = !DILocation(line: 1995, column: 1, scope: !11756)
!11762 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !11499, file: !11499, line: 1934, type: !11562, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11763)
!11763 = !{!11764, !11765}
!11764 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11762, file: !11499, line: 1934, type: !1543)
!11765 = !DILocalVariable(name: "tmpreg", scope: !11762, file: !11499, line: 1936, type: !461)
!11766 = !DILocation(line: 0, scope: !11762)
!11767 = !DILocation(line: 1936, column: 3, scope: !11762)
!11768 = !DILocation(line: 1936, column: 17, scope: !11762)
!11769 = !DILocation(line: 1937, column: 20, scope: !11762)
!11770 = !DILocation(line: 1937, column: 10, scope: !11762)
!11771 = !DILocation(line: 1938, column: 10, scope: !11762)
!11772 = !DILocation(line: 1939, column: 20, scope: !11762)
!11773 = !DILocation(line: 1939, column: 10, scope: !11762)
!11774 = !DILocation(line: 1940, column: 10, scope: !11762)
!11775 = !DILocation(line: 1941, column: 1, scope: !11762)
!11776 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !11499, file: !11499, line: 1877, type: !11562, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11777)
!11777 = !{!11778, !11779}
!11778 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11776, file: !11499, line: 1877, type: !1543)
!11779 = !DILocalVariable(name: "tmpreg", scope: !11776, file: !11499, line: 1879, type: !461)
!11780 = !DILocation(line: 0, scope: !11776)
!11781 = !DILocation(line: 1879, column: 3, scope: !11776)
!11782 = !DILocation(line: 1879, column: 17, scope: !11776)
!11783 = !DILocation(line: 1880, column: 20, scope: !11776)
!11784 = !DILocation(line: 1880, column: 10, scope: !11776)
!11785 = !DILocation(line: 1881, column: 10, scope: !11776)
!11786 = !DILocation(line: 1882, column: 20, scope: !11776)
!11787 = !DILocation(line: 1882, column: 10, scope: !11776)
!11788 = !DILocation(line: 1883, column: 10, scope: !11776)
!11789 = !DILocation(line: 1884, column: 1, scope: !11776)
!11790 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !11499, file: !11499, line: 1896, type: !11562, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11791)
!11791 = !{!11792, !11793}
!11792 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11790, file: !11499, line: 1896, type: !1543)
!11793 = !DILocalVariable(name: "tmpreg", scope: !11790, file: !11499, line: 1898, type: !461)
!11794 = !DILocation(line: 0, scope: !11790)
!11795 = !DILocation(line: 1898, column: 3, scope: !11790)
!11796 = !DILocation(line: 1898, column: 17, scope: !11790)
!11797 = !DILocation(line: 1899, column: 20, scope: !11790)
!11798 = !DILocation(line: 1899, column: 10, scope: !11790)
!11799 = !DILocation(line: 1900, column: 10, scope: !11790)
!11800 = !DILocation(line: 1901, column: 20, scope: !11790)
!11801 = !DILocation(line: 1901, column: 10, scope: !11790)
!11802 = !DILocation(line: 1902, column: 10, scope: !11790)
!11803 = !DILocation(line: 1903, column: 1, scope: !11790)
!11804 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !11499, file: !11499, line: 1915, type: !11562, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11805)
!11805 = !{!11806, !11807}
!11806 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11804, file: !11499, line: 1915, type: !1543)
!11807 = !DILocalVariable(name: "tmpreg", scope: !11804, file: !11499, line: 1917, type: !461)
!11808 = !DILocation(line: 0, scope: !11804)
!11809 = !DILocation(line: 1917, column: 3, scope: !11804)
!11810 = !DILocation(line: 1917, column: 17, scope: !11804)
!11811 = !DILocation(line: 1918, column: 20, scope: !11804)
!11812 = !DILocation(line: 1918, column: 10, scope: !11804)
!11813 = !DILocation(line: 1919, column: 10, scope: !11804)
!11814 = !DILocation(line: 1920, column: 20, scope: !11804)
!11815 = !DILocation(line: 1920, column: 10, scope: !11804)
!11816 = !DILocation(line: 1921, column: 10, scope: !11804)
!11817 = !DILocation(line: 1922, column: 1, scope: !11804)
!11818 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !11499, file: !11499, line: 1814, type: !11500, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11819)
!11819 = !{!11820}
!11820 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11818, file: !11499, line: 1814, type: !1543)
!11821 = !DILocation(line: 0, scope: !11818)
!11822 = !DILocation(line: 1816, column: 11, scope: !11818)
!11823 = !DILocation(line: 1816, column: 46, scope: !11818)
!11824 = !DILocation(line: 1816, column: 3, scope: !11818)
!11825 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !11499, file: !11499, line: 2426, type: !11826, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11828)
!11826 = !DISubroutineType(types: !11827)
!11827 = !{null, !1543, !169}
!11828 = !{!11829, !11830}
!11829 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11825, file: !11499, line: 2426, type: !1543)
!11830 = !DILocalVariable(name: "Value", arg: 2, scope: !11825, file: !11499, line: 2426, type: !169)
!11831 = !DILocation(line: 0, scope: !11825)
!11832 = !DILocation(line: 2428, column: 16, scope: !11825)
!11833 = !DILocation(line: 2428, column: 11, scope: !11825)
!11834 = !DILocation(line: 2428, column: 14, scope: !11825)
!11835 = !DILocation(line: 2429, column: 1, scope: !11825)
!11836 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !11499, file: !11499, line: 1792, type: !11500, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11837)
!11837 = !{!11838}
!11838 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11836, file: !11499, line: 1792, type: !1543)
!11839 = !DILocation(line: 0, scope: !11836)
!11840 = !DILocation(line: 1794, column: 11, scope: !11836)
!11841 = !DILocation(line: 1794, column: 47, scope: !11836)
!11842 = !DILocation(line: 1794, column: 3, scope: !11836)
!11843 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !11499, file: !11499, line: 2403, type: !11844, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11846)
!11844 = !DISubroutineType(types: !11845)
!11845 = !{!169, !1543}
!11846 = !{!11847}
!11847 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11843, file: !11499, line: 2403, type: !1543)
!11848 = !DILocation(line: 0, scope: !11843)
!11849 = !DILocation(line: 2405, column: 20, scope: !11843)
!11850 = !DILocation(line: 2405, column: 10, scope: !11843)
!11851 = !DILocation(line: 2405, column: 3, scope: !11843)
!11852 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1597, file: !1597, line: 1583, type: !1523, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11853)
!11853 = !{!11854, !11855, !11856, !11857, !11858, !11859}
!11854 = !DILocalVariable(name: "dev", arg: 1, scope: !11852, file: !1597, line: 1583, type: !1502)
!11855 = !DILocalVariable(name: "config", scope: !11852, file: !1597, line: 1585, type: !11190)
!11856 = !DILocalVariable(name: "data", scope: !11852, file: !1597, line: 1586, type: !11313)
!11857 = !DILocalVariable(name: "ll_parity", scope: !11852, file: !1597, line: 1587, type: !113)
!11858 = !DILocalVariable(name: "ll_datawidth", scope: !11852, file: !1597, line: 1588, type: !113)
!11859 = !DILocalVariable(name: "err", scope: !11852, file: !1597, line: 1589, type: !105)
!11860 = !DILocation(line: 0, scope: !11852)
!11861 = !DILocation(line: 1585, column: 48, scope: !11852)
!11862 = !DILocation(line: 1586, column: 38, scope: !11852)
!11863 = !DILocation(line: 1591, column: 2, scope: !11852)
!11864 = !DILocation(line: 1593, column: 29, scope: !11865)
!11865 = distinct !DILexicalBlock(scope: !11852, file: !1597, line: 1593, column: 6)
!11866 = !DILocation(line: 1593, column: 7, scope: !11865)
!11867 = !DILocation(line: 1593, column: 6, scope: !11852)
!11868 = !DILocation(line: 1594, column: 3, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11870, file: !1597, line: 1594, column: 3)
!11870 = distinct !DILexicalBlock(scope: !11871, file: !1597, line: 1594, column: 3)
!11871 = distinct !DILexicalBlock(scope: !11872, file: !1597, line: 1594, column: 3)
!11872 = distinct !DILexicalBlock(scope: !11873, file: !1597, line: 1594, column: 3)
!11873 = distinct !DILexicalBlock(scope: !11865, file: !1597, line: 1593, column: 37)
!11874 = !DILocation(line: 1595, column: 3, scope: !11873)
!11875 = !DILocation(line: 1599, column: 31, scope: !11852)
!11876 = !DILocation(line: 1599, column: 71, scope: !11852)
!11877 = !DILocation(line: 1599, column: 8, scope: !11852)
!11878 = !DILocation(line: 1600, column: 10, scope: !11879)
!11879 = distinct !DILexicalBlock(scope: !11852, file: !1597, line: 1600, column: 6)
!11880 = !DILocation(line: 1600, column: 6, scope: !11852)
!11881 = !DILocation(line: 1601, column: 3, scope: !11882)
!11882 = distinct !DILexicalBlock(scope: !11883, file: !1597, line: 1601, column: 3)
!11883 = distinct !DILexicalBlock(scope: !11884, file: !1597, line: 1601, column: 3)
!11884 = distinct !DILexicalBlock(scope: !11885, file: !1597, line: 1601, column: 3)
!11885 = distinct !DILexicalBlock(scope: !11886, file: !1597, line: 1601, column: 3)
!11886 = distinct !DILexicalBlock(scope: !11879, file: !1597, line: 1600, column: 16)
!11887 = !DILocation(line: 1602, column: 3, scope: !11886)
!11888 = !DILocation(line: 1616, column: 36, scope: !11852)
!11889 = !DILocation(line: 1616, column: 8, scope: !11852)
!11890 = !DILocation(line: 1617, column: 10, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11852, file: !1597, line: 1617, column: 6)
!11892 = !DILocation(line: 1617, column: 6, scope: !11852)
!11893 = !DILocation(line: 1621, column: 27, scope: !11852)
!11894 = !DILocation(line: 1621, column: 2, scope: !11852)
!11895 = !DILocation(line: 1624, column: 40, scope: !11852)
!11896 = !DILocation(line: 1624, column: 2, scope: !11852)
!11897 = !DILocation(line: 1630, column: 14, scope: !11898)
!11898 = distinct !DILexicalBlock(scope: !11852, file: !1597, line: 1630, column: 6)
!11899 = !DILocation(line: 1630, column: 6, scope: !11852)
!11900 = !DILocation(line: 1640, column: 4, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11902, file: !1597, line: 1640, column: 4)
!11902 = distinct !DILexicalBlock(scope: !11903, file: !1597, line: 1640, column: 4)
!11903 = distinct !DILexicalBlock(scope: !11904, file: !1597, line: 1640, column: 4)
!11904 = distinct !DILexicalBlock(scope: !11905, file: !1597, line: 1640, column: 4)
!11905 = distinct !DILexicalBlock(scope: !11906, file: !1597, line: 1639, column: 28)
!11906 = distinct !DILexicalBlock(scope: !11907, file: !1597, line: 1639, column: 7)
!11907 = distinct !DILexicalBlock(scope: !11908, file: !1597, line: 1638, column: 9)
!11908 = distinct !DILexicalBlock(scope: !11898, file: !1597, line: 1634, column: 13)
!11909 = !DILocation(line: 0, scope: !11898)
!11910 = !DILocation(line: 1649, column: 35, scope: !11852)
!11911 = !DILocation(line: 1649, column: 2, scope: !11852)
!11912 = !DILocation(line: 1654, column: 14, scope: !11913)
!11913 = distinct !DILexicalBlock(scope: !11852, file: !1597, line: 1654, column: 6)
!11914 = !DILocation(line: 1654, column: 6, scope: !11852)
!11915 = !DILocation(line: 1655, column: 3, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11913, file: !1597, line: 1654, column: 31)
!11917 = !DILocation(line: 1656, column: 2, scope: !11916)
!11918 = !DILocation(line: 1659, column: 37, scope: !11852)
!11919 = !DILocation(line: 1659, column: 2, scope: !11852)
!11920 = !DILocation(line: 1662, column: 14, scope: !11921)
!11921 = distinct !DILexicalBlock(scope: !11852, file: !1597, line: 1662, column: 6)
!11922 = !DILocation(line: 1662, column: 6, scope: !11852)
!11923 = !DILocation(line: 1663, column: 37, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !11921, file: !1597, line: 1662, column: 27)
!11925 = !DILocation(line: 1663, column: 3, scope: !11924)
!11926 = !DILocation(line: 1664, column: 2, scope: !11924)
!11927 = !DILocation(line: 1684, column: 26, scope: !11852)
!11928 = !DILocation(line: 1684, column: 2, scope: !11852)
!11929 = !DILocation(line: 1722, column: 2, scope: !11852)
!11930 = !DILocation(line: 1724, column: 1, scope: !11852)
!11931 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1597, file: !1597, line: 651, type: !11932, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11934)
!11932 = !DISubroutineType(types: !11933)
!11933 = !{null, !1502}
!11934 = !{!11935, !11936, !11937}
!11935 = !DILocalVariable(name: "dev", arg: 1, scope: !11931, file: !1597, line: 651, type: !1502)
!11936 = !DILocalVariable(name: "data", scope: !11931, file: !1597, line: 653, type: !11313)
!11937 = !DILocalVariable(name: "clk", scope: !11931, file: !1597, line: 654, type: !11938)
!11938 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1502)
!11939 = !DILocation(line: 0, scope: !11931)
!11940 = !DILocation(line: 653, column: 38, scope: !11931)
!11941 = !DILocation(line: 656, column: 8, scope: !11931)
!11942 = !DILocation(line: 656, column: 14, scope: !11931)
!11943 = !DILocation(line: 657, column: 1, scope: !11931)
!11944 = distinct !DISubprogram(name: "device_is_ready", scope: !10309, file: !10309, line: 47, type: !11945, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11947)
!11945 = !DISubroutineType(types: !11946)
!11946 = !{!492, !1502}
!11947 = !{!11948}
!11948 = !DILocalVariable(name: "dev", arg: 1, scope: !11944, file: !10309, line: 47, type: !1502)
!11949 = !DILocation(line: 0, scope: !11944)
!11950 = !DILocation(line: 55, column: 2, scope: !11951)
!11951 = distinct !DILexicalBlock(scope: !11944, file: !10309, line: 55, column: 2)
!11952 = !{i64 2154458302}
!11953 = !DILocation(line: 56, column: 9, scope: !11944)
!11954 = !DILocation(line: 56, column: 2, scope: !11944)
!11955 = distinct !DISubprogram(name: "clock_control_on", scope: !959, file: !959, line: 123, type: !1561, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11956)
!11956 = !{!11957, !11958, !11959}
!11957 = !DILocalVariable(name: "dev", arg: 1, scope: !11955, file: !959, line: 123, type: !1502)
!11958 = !DILocalVariable(name: "sys", arg: 2, scope: !11955, file: !959, line: 124, type: !1052)
!11959 = !DILocalVariable(name: "api", scope: !11955, file: !959, line: 126, type: !1554)
!11960 = !DILocation(line: 0, scope: !11955)
!11961 = !DILocation(line: 127, column: 49, scope: !11955)
!11962 = !DILocation(line: 129, column: 14, scope: !11955)
!11963 = !DILocation(line: 129, column: 9, scope: !11955)
!11964 = !DILocation(line: 129, column: 2, scope: !11955)
!11965 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1653, file: !1653, line: 342, type: !11966, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11968)
!11966 = !DISubroutineType(types: !11967)
!11967 = !{!105, !1650, !169}
!11968 = !{!11969, !11970, !11971, !11972}
!11969 = !DILocalVariable(name: "config", arg: 1, scope: !11965, file: !1653, line: 342, type: !1650)
!11970 = !DILocalVariable(name: "id", arg: 2, scope: !11965, file: !1653, line: 343, type: !169)
!11971 = !DILocalVariable(name: "ret", scope: !11965, file: !1653, line: 345, type: !105)
!11972 = !DILocalVariable(name: "state", scope: !11965, file: !1653, line: 346, type: !1656)
!11973 = !DILocation(line: 0, scope: !11965)
!11974 = !DILocation(line: 346, column: 2, scope: !11965)
!11975 = !DILocation(line: 348, column: 8, scope: !11965)
!11976 = !DILocation(line: 349, column: 10, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11965, file: !1653, line: 349, column: 6)
!11978 = !DILocation(line: 349, column: 6, scope: !11965)
!11979 = !DILocation(line: 353, column: 44, scope: !11965)
!11980 = !DILocation(line: 353, column: 9, scope: !11965)
!11981 = !DILocation(line: 353, column: 2, scope: !11965)
!11982 = !DILocation(line: 354, column: 1, scope: !11965)
!11983 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !11499, file: !11499, line: 497, type: !11677, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11984)
!11984 = !{!11985, !11986, !11987}
!11985 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11983, file: !11499, line: 497, type: !1543)
!11986 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11983, file: !11499, line: 497, type: !113)
!11987 = !DILocalVariable(name: "val", scope: !11988, file: !11499, line: 499, type: !113)
!11988 = distinct !DILexicalBlock(scope: !11983, file: !11499, line: 499, column: 3)
!11989 = !DILocation(line: 0, scope: !11983)
!11990 = !DILocation(line: 499, column: 3, scope: !11988)
!11991 = !DILocalVariable(name: "addr", arg: 1, scope: !11992, file: !7803, line: 476, type: !1593)
!11992 = distinct !DISubprogram(name: "__LDREXW", scope: !7803, file: !7803, line: 476, type: !11993, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !11995)
!11993 = !DISubroutineType(types: !11994)
!11994 = !{!113, !1593}
!11995 = !{!11991, !11996}
!11996 = !DILocalVariable(name: "result", scope: !11992, file: !7803, line: 478, type: !113)
!11997 = !DILocation(line: 0, scope: !11992, inlinedAt: !11998)
!11998 = distinct !DILocation(line: 499, column: 3, scope: !11999)
!11999 = distinct !DILexicalBlock(scope: !11988, file: !11499, line: 499, column: 3)
!12000 = !DILocation(line: 480, column: 4, scope: !11992, inlinedAt: !11998)
!12001 = !{i64 2948841}
!12002 = !DILocation(line: 499, column: 3, scope: !11999)
!12003 = !DILocation(line: 0, scope: !11988)
!12004 = !DILocalVariable(name: "value", arg: 1, scope: !12005, file: !7803, line: 527, type: !113)
!12005 = distinct !DISubprogram(name: "__STREXW", scope: !7803, file: !7803, line: 527, type: !12006, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !12008)
!12006 = !DISubroutineType(types: !12007)
!12007 = !{!113, !113, !1593}
!12008 = !{!12004, !12009, !12010}
!12009 = !DILocalVariable(name: "addr", arg: 2, scope: !12005, file: !7803, line: 527, type: !1593)
!12010 = !DILocalVariable(name: "result", scope: !12005, file: !7803, line: 529, type: !113)
!12011 = !DILocation(line: 0, scope: !12005, inlinedAt: !12012)
!12012 = distinct !DILocation(line: 499, column: 3, scope: !11988)
!12013 = !DILocation(line: 531, column: 4, scope: !12005, inlinedAt: !12012)
!12014 = !{i64 2950277}
!12015 = distinct !{!12015, !11990, !11990}
!12016 = !DILocation(line: 500, column: 1, scope: !11983)
!12017 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !11499, file: !11499, line: 850, type: !11686, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !12018)
!12018 = !{!12019, !12020, !12021, !12022}
!12019 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12017, file: !11499, line: 850, type: !1543)
!12020 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12017, file: !11499, line: 850, type: !113)
!12021 = !DILocalVariable(name: "Parity", arg: 3, scope: !12017, file: !11499, line: 850, type: !113)
!12022 = !DILocalVariable(name: "StopBits", arg: 4, scope: !12017, file: !11499, line: 851, type: !113)
!12023 = !DILocation(line: 0, scope: !12017)
!12024 = !DILocation(line: 853, column: 3, scope: !12017)
!12025 = !DILocation(line: 854, column: 3, scope: !12017)
!12026 = !DILocation(line: 855, column: 1, scope: !12017)
!12027 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !11499, file: !11499, line: 1337, type: !11562, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !12028)
!12028 = !{!12029}
!12029 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12027, file: !11499, line: 1337, type: !1543)
!12030 = !DILocation(line: 0, scope: !12027)
!12031 = !DILocation(line: 1339, column: 3, scope: !12027)
!12032 = !DILocation(line: 1340, column: 1, scope: !12027)
!12033 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1653, file: !1653, line: 316, type: !12034, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !12036)
!12034 = !DISubroutineType(types: !12035)
!12035 = !{!105, !1650, !1656}
!12036 = !{!12037, !12038, !12039}
!12037 = !DILocalVariable(name: "config", arg: 1, scope: !12033, file: !1653, line: 317, type: !1650)
!12038 = !DILocalVariable(name: "state", arg: 2, scope: !12033, file: !1653, line: 318, type: !1656)
!12039 = !DILocalVariable(name: "reg", scope: !12033, file: !1653, line: 320, type: !22)
!12040 = !DILocation(line: 0, scope: !12033)
!12041 = !DILocation(line: 329, column: 39, scope: !12033)
!12042 = !DILocation(line: 329, column: 52, scope: !12033)
!12043 = !DILocation(line: 329, column: 9, scope: !12033)
!12044 = !DILocation(line: 329, column: 2, scope: !12033)
!12045 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !481, file: !481, line: 730, type: !11945, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !12046)
!12046 = !{!12047}
!12047 = !DILocalVariable(name: "dev", arg: 1, scope: !12045, file: !481, line: 730, type: !1502)
!12048 = !DILocation(line: 0, scope: !12045)
!12049 = !DILocation(line: 732, column: 9, scope: !12045)
!12050 = !DILocation(line: 732, column: 2, scope: !12045)
!12051 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1800, file: !1800, line: 270, type: !1806, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1722, retainedNodes: !12052)
!12052 = !{!12053}
!12053 = !DILocalVariable(name: "dev", arg: 1, scope: !12051, file: !1800, line: 270, type: !1808)
!12054 = !DILocation(line: 0, scope: !12051)
!12055 = !DILocation(line: 274, column: 2, scope: !12051)
!12056 = !DILocation(line: 275, column: 12, scope: !12051)
!12057 = !DILocation(line: 276, column: 15, scope: !12051)
!12058 = !DILocation(line: 277, column: 16, scope: !12051)
!12059 = !DILocation(line: 278, column: 15, scope: !12051)
!12060 = !DILocation(line: 279, column: 16, scope: !12051)
!12061 = !DILocation(line: 282, column: 2, scope: !12051)
!12062 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !679, file: !679, line: 1814, type: !7843, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1722, retainedNodes: !12063)
!12063 = !{!12064, !12065}
!12064 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12062, file: !679, line: 1814, type: !911)
!12065 = !DILocalVariable(name: "priority", arg: 2, scope: !12062, file: !679, line: 1814, type: !113)
!12066 = !DILocation(line: 0, scope: !12062)
!12067 = !DILocation(line: 1822, column: 46, scope: !12068)
!12068 = distinct !DILexicalBlock(scope: !12069, file: !679, line: 1821, column: 3)
!12069 = distinct !DILexicalBlock(scope: !12062, file: !679, line: 1816, column: 7)
!12070 = !DILocation(line: 1824, column: 1, scope: !12062)
!12071 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1800, file: !1800, line: 118, type: !7740, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1722, retainedNodes: !12072)
!12072 = !{!12073, !12074}
!12073 = !DILocalVariable(name: "arg", arg: 1, scope: !12071, file: !1800, line: 118, type: !104)
!12074 = !DILocalVariable(name: "dticks", scope: !12071, file: !1800, line: 121, type: !113)
!12075 = !DILocation(line: 0, scope: !12071)
!12076 = !DILocation(line: 124, column: 2, scope: !12071)
!12077 = !DILocation(line: 129, column: 17, scope: !12071)
!12078 = !DILocation(line: 129, column: 14, scope: !12071)
!12079 = !DILocation(line: 130, column: 15, scope: !12071)
!12080 = !DILocation(line: 145, column: 27, scope: !12081)
!12081 = distinct !DILexicalBlock(scope: !12082, file: !1800, line: 132, column: 16)
!12082 = distinct !DILexicalBlock(scope: !12071, file: !1800, line: 132, column: 6)
!12083 = !DILocation(line: 145, column: 25, scope: !12081)
!12084 = !DILocation(line: 145, column: 45, scope: !12081)
!12085 = !DILocation(line: 146, column: 30, scope: !12081)
!12086 = !DILocation(line: 146, column: 20, scope: !12081)
!12087 = !DILocation(line: 147, column: 3, scope: !12081)
!12088 = !DILocation(line: 151, column: 2, scope: !12071)
!12089 = !DILocation(line: 152, column: 1, scope: !12071)
!12090 = distinct !DISubprogram(name: "elapsed", scope: !1800, file: !1800, line: 85, type: !395, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1722, retainedNodes: !12091)
!12091 = !{!12092, !12093, !12094}
!12092 = !DILocalVariable(name: "val1", scope: !12090, file: !1800, line: 87, type: !113)
!12093 = !DILocalVariable(name: "ctrl", scope: !12090, file: !1800, line: 88, type: !113)
!12094 = !DILocalVariable(name: "val2", scope: !12090, file: !1800, line: 89, type: !113)
!12095 = !DILocation(line: 87, column: 27, scope: !12090)
!12096 = !DILocation(line: 0, scope: !12090)
!12097 = !DILocation(line: 88, column: 27, scope: !12090)
!12098 = !DILocation(line: 89, column: 27, scope: !12090)
!12099 = !DILocation(line: 105, column: 12, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12090, file: !1800, line: 105, column: 6)
!12101 = !DILocation(line: 106, column: 6, scope: !12100)
!12102 = !DILocation(line: 107, column: 16, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12100, file: !1800, line: 106, column: 24)
!12104 = !DILocation(line: 111, column: 18, scope: !12103)
!12105 = !DILocation(line: 112, column: 2, scope: !12103)
!12106 = !DILocation(line: 114, column: 20, scope: !12090)
!12107 = !DILocation(line: 114, column: 30, scope: !12090)
!12108 = !DILocation(line: 114, column: 28, scope: !12090)
!12109 = !DILocation(line: 114, column: 2, scope: !12090)
!12110 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1800, file: !1800, line: 154, type: !12111, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1722, retainedNodes: !12113)
!12111 = !DISubroutineType(types: !12112)
!12112 = !{null, !116, !492}
!12113 = !{!12114, !12115, !12116, !12117, !12118, !12119, !12120, !12125, !12126}
!12114 = !DILocalVariable(name: "ticks", arg: 1, scope: !12110, file: !1800, line: 154, type: !116)
!12115 = !DILocalVariable(name: "idle", arg: 2, scope: !12110, file: !1800, line: 154, type: !492)
!12116 = !DILocalVariable(name: "delay", scope: !12110, file: !1800, line: 169, type: !113)
!12117 = !DILocalVariable(name: "val1", scope: !12110, file: !1800, line: 170, type: !113)
!12118 = !DILocalVariable(name: "val2", scope: !12110, file: !1800, line: 170, type: !113)
!12119 = !DILocalVariable(name: "last_load_", scope: !12110, file: !1800, line: 171, type: !113)
!12120 = !DILocalVariable(name: "key", scope: !12110, file: !1800, line: 176, type: !12121)
!12121 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !12122)
!12122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !12123)
!12123 = !{!12124}
!12124 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12122, file: !236, line: 33, baseType: !105, size: 32)
!12125 = !DILocalVariable(name: "pending", scope: !12110, file: !1800, line: 178, type: !113)
!12126 = !DILocalVariable(name: "unannounced", scope: !12110, file: !1800, line: 185, type: !113)
!12127 = !DILocation(line: 0, scope: !12110)
!12128 = !DILocation(line: 162, column: 49, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12110, file: !1800, line: 162, column: 6)
!12130 = !DILocation(line: 163, column: 17, scope: !12131)
!12131 = distinct !DILexicalBlock(scope: !12129, file: !1800, line: 162, column: 78)
!12132 = !DILocation(line: 164, column: 13, scope: !12131)
!12133 = !DILocation(line: 165, column: 3, scope: !12131)
!12134 = !DILocation(line: 171, column: 24, scope: !12110)
!12135 = !DILocation(line: 173, column: 10, scope: !12110)
!12136 = !DILocation(line: 174, column: 10, scope: !12110)
!12137 = !DILocalVariable(name: "l", arg: 1, scope: !12138, file: !236, line: 136, type: !12141)
!12138 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !12139, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1722, retainedNodes: !12142)
!12139 = !DISubroutineType(types: !12140)
!12140 = !{!12121, !12141}
!12141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 32)
!12142 = !{!12137, !12143}
!12143 = !DILocalVariable(name: "k", scope: !12138, file: !236, line: 139, type: !12121)
!12144 = !DILocation(line: 0, scope: !12138, inlinedAt: !12145)
!12145 = distinct !DILocation(line: 176, column: 25, scope: !12110)
!12146 = !DILocation(line: 55, column: 2, scope: !12147, inlinedAt: !12151)
!12147 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7485, file: !7485, line: 42, type: !7486, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1722, retainedNodes: !12148)
!12148 = !{!12149, !12150}
!12149 = !DILocalVariable(name: "key", scope: !12147, file: !7485, line: 44, type: !32)
!12150 = !DILocalVariable(name: "tmp", scope: !12147, file: !7485, line: 53, type: !32)
!12151 = distinct !DILocation(line: 145, column: 10, scope: !12138, inlinedAt: !12145)
!12152 = !{i64 2031484}
!12153 = !DILocation(line: 0, scope: !12147, inlinedAt: !12151)
!12154 = !DILocation(line: 148, column: 2, scope: !12155, inlinedAt: !12145)
!12155 = distinct !DILexicalBlock(scope: !12156, file: !236, line: 148, column: 2)
!12156 = distinct !DILexicalBlock(scope: !12138, file: !236, line: 148, column: 2)
!12157 = !DILocation(line: 148, column: 2, scope: !12156, inlinedAt: !12145)
!12158 = !DILocation(line: 148, column: 2, scope: !12159, inlinedAt: !12145)
!12159 = distinct !DILexicalBlock(scope: !12155, file: !236, line: 148, column: 2)
!12160 = !DILocation(line: 160, column: 2, scope: !12138, inlinedAt: !12145)
!12161 = !DILocation(line: 178, column: 21, scope: !12110)
!12162 = !DILocation(line: 180, column: 18, scope: !12110)
!12163 = !DILocation(line: 182, column: 14, scope: !12110)
!12164 = !DILocation(line: 183, column: 15, scope: !12110)
!12165 = !DILocation(line: 185, column: 39, scope: !12110)
!12166 = !DILocation(line: 185, column: 37, scope: !12110)
!12167 = !DILocation(line: 187, column: 27, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12110, file: !1800, line: 187, column: 6)
!12169 = !DILocation(line: 187, column: 6, scope: !12110)
!12170 = !DILocation(line: 202, column: 27, scope: !12171)
!12171 = distinct !DILexicalBlock(scope: !12168, file: !1800, line: 195, column: 9)
!12172 = !DILocation(line: 202, column: 48, scope: !12171)
!12173 = !DILocation(line: 203, column: 9, scope: !12171)
!12174 = !DILocation(line: 204, column: 11, scope: !12171)
!12175 = !DILocation(line: 205, column: 13, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12171, file: !1800, line: 205, column: 7)
!12177 = !DILocation(line: 205, column: 7, scope: !12171)
!12178 = !DILocation(line: 0, scope: !12168)
!12179 = !DILocation(line: 212, column: 18, scope: !12110)
!12180 = !DILocation(line: 214, column: 28, scope: !12110)
!12181 = !DILocation(line: 214, column: 16, scope: !12110)
!12182 = !DILocation(line: 215, column: 15, scope: !12110)
!12183 = !DILocation(line: 227, column: 11, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12110, file: !1800, line: 227, column: 6)
!12185 = !DILocation(line: 227, column: 6, scope: !12110)
!12186 = !DILocation(line: 228, column: 15, scope: !12187)
!12187 = distinct !DILexicalBlock(scope: !12184, file: !1800, line: 227, column: 19)
!12188 = !DILocation(line: 228, column: 38, scope: !12187)
!12189 = !DILocation(line: 228, column: 24, scope: !12187)
!12190 = !DILocation(line: 229, column: 2, scope: !12187)
!12191 = !DILocation(line: 230, column: 24, scope: !12192)
!12192 = distinct !DILexicalBlock(scope: !12184, file: !1800, line: 229, column: 9)
!12193 = !DILocation(line: 230, column: 15, scope: !12192)
!12194 = !DILocation(line: 0, scope: !12184)
!12195 = !DILocalVariable(name: "key", arg: 2, scope: !12196, file: !236, line: 190, type: !12121)
!12196 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !12197, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1722, retainedNodes: !12199)
!12197 = !DISubroutineType(types: !12198)
!12198 = !{null, !12141, !12121}
!12199 = !{!12200, !12195}
!12200 = !DILocalVariable(name: "l", arg: 1, scope: !12196, file: !236, line: 189, type: !12141)
!12201 = !DILocation(line: 0, scope: !12196, inlinedAt: !12202)
!12202 = distinct !DILocation(line: 232, column: 2, scope: !12110)
!12203 = !DILocation(line: 194, column: 2, scope: !12204, inlinedAt: !12202)
!12204 = distinct !DILexicalBlock(scope: !12205, file: !236, line: 194, column: 2)
!12205 = distinct !DILexicalBlock(scope: !12196, file: !236, line: 194, column: 2)
!12206 = !DILocation(line: 194, column: 2, scope: !12205, inlinedAt: !12202)
!12207 = !DILocation(line: 194, column: 2, scope: !12208, inlinedAt: !12202)
!12208 = distinct !DILexicalBlock(scope: !12204, file: !236, line: 194, column: 2)
!12209 = !DILocalVariable(name: "key", arg: 1, scope: !12210, file: !7485, line: 84, type: !32)
!12210 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7485, file: !7485, line: 84, type: !7496, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1722, retainedNodes: !12211)
!12211 = !{!12209}
!12212 = !DILocation(line: 0, scope: !12210, inlinedAt: !12213)
!12213 = distinct !DILocation(line: 215, column: 2, scope: !12196, inlinedAt: !12202)
!12214 = !DILocation(line: 95, column: 2, scope: !12210, inlinedAt: !12213)
!12215 = !{i64 2032301}
!12216 = !DILocation(line: 234, column: 1, scope: !12110)
!12217 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1800, file: !1800, line: 236, type: !395, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1722, retainedNodes: !12218)
!12218 = !{!12219, !12220}
!12219 = !DILocalVariable(name: "key", scope: !12217, file: !1800, line: 242, type: !12121)
!12220 = !DILocalVariable(name: "cyc", scope: !12217, file: !1800, line: 243, type: !113)
!12221 = !DILocation(line: 0, scope: !12138, inlinedAt: !12222)
!12222 = distinct !DILocation(line: 242, column: 25, scope: !12217)
!12223 = !DILocation(line: 55, column: 2, scope: !12147, inlinedAt: !12224)
!12224 = distinct !DILocation(line: 145, column: 10, scope: !12138, inlinedAt: !12222)
!12225 = !DILocation(line: 0, scope: !12147, inlinedAt: !12224)
!12226 = !DILocation(line: 148, column: 2, scope: !12155, inlinedAt: !12222)
!12227 = !DILocation(line: 148, column: 2, scope: !12156, inlinedAt: !12222)
!12228 = !DILocation(line: 148, column: 2, scope: !12159, inlinedAt: !12222)
!12229 = !DILocation(line: 160, column: 2, scope: !12138, inlinedAt: !12222)
!12230 = !DILocation(line: 0, scope: !12217)
!12231 = !DILocation(line: 243, column: 17, scope: !12217)
!12232 = !DILocation(line: 243, column: 29, scope: !12217)
!12233 = !DILocation(line: 243, column: 43, scope: !12217)
!12234 = !DILocation(line: 0, scope: !12196, inlinedAt: !12235)
!12235 = distinct !DILocation(line: 245, column: 2, scope: !12217)
!12236 = !DILocation(line: 194, column: 2, scope: !12204, inlinedAt: !12235)
!12237 = !DILocation(line: 194, column: 2, scope: !12205, inlinedAt: !12235)
!12238 = !DILocation(line: 194, column: 2, scope: !12208, inlinedAt: !12235)
!12239 = !DILocation(line: 243, column: 27, scope: !12217)
!12240 = !DILocation(line: 243, column: 41, scope: !12217)
!12241 = !DILocation(line: 0, scope: !12210, inlinedAt: !12242)
!12242 = distinct !DILocation(line: 215, column: 2, scope: !12196, inlinedAt: !12235)
!12243 = !DILocation(line: 95, column: 2, scope: !12210, inlinedAt: !12242)
!12244 = !DILocation(line: 246, column: 13, scope: !12217)
!12245 = !DILocation(line: 246, column: 2, scope: !12217)
!12246 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1800, file: !1800, line: 249, type: !395, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1722, retainedNodes: !12247)
!12247 = !{!12248, !12249}
!12248 = !DILocalVariable(name: "key", scope: !12246, file: !1800, line: 251, type: !12121)
!12249 = !DILocalVariable(name: "ret", scope: !12246, file: !1800, line: 252, type: !113)
!12250 = !DILocation(line: 0, scope: !12138, inlinedAt: !12251)
!12251 = distinct !DILocation(line: 251, column: 25, scope: !12246)
!12252 = !DILocation(line: 55, column: 2, scope: !12147, inlinedAt: !12253)
!12253 = distinct !DILocation(line: 145, column: 10, scope: !12138, inlinedAt: !12251)
!12254 = !DILocation(line: 0, scope: !12147, inlinedAt: !12253)
!12255 = !DILocation(line: 148, column: 2, scope: !12155, inlinedAt: !12251)
!12256 = !DILocation(line: 148, column: 2, scope: !12156, inlinedAt: !12251)
!12257 = !DILocation(line: 148, column: 2, scope: !12159, inlinedAt: !12251)
!12258 = !DILocation(line: 160, column: 2, scope: !12138, inlinedAt: !12251)
!12259 = !DILocation(line: 0, scope: !12246)
!12260 = !DILocation(line: 252, column: 17, scope: !12246)
!12261 = !DILocation(line: 252, column: 29, scope: !12246)
!12262 = !DILocation(line: 0, scope: !12196, inlinedAt: !12263)
!12263 = distinct !DILocation(line: 254, column: 2, scope: !12246)
!12264 = !DILocation(line: 194, column: 2, scope: !12204, inlinedAt: !12263)
!12265 = !DILocation(line: 194, column: 2, scope: !12205, inlinedAt: !12263)
!12266 = !DILocation(line: 194, column: 2, scope: !12208, inlinedAt: !12263)
!12267 = !DILocation(line: 252, column: 27, scope: !12246)
!12268 = !DILocation(line: 0, scope: !12210, inlinedAt: !12269)
!12269 = distinct !DILocation(line: 215, column: 2, scope: !12196, inlinedAt: !12263)
!12270 = !DILocation(line: 95, column: 2, scope: !12210, inlinedAt: !12269)
!12271 = !DILocation(line: 255, column: 2, scope: !12246)
!12272 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1800, file: !1800, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1722, retainedNodes: !397)
!12273 = !DILocation(line: 260, column: 6, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12272, file: !1800, line: 260, column: 6)
!12275 = !DILocation(line: 260, column: 16, scope: !12274)
!12276 = !DILocation(line: 260, column: 6, scope: !12272)
!12277 = !DILocation(line: 261, column: 17, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !12274, file: !1800, line: 260, column: 34)
!12279 = !DILocation(line: 262, column: 2, scope: !12278)
!12280 = !DILocation(line: 263, column: 1, scope: !12272)
!12281 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1800, file: !1800, line: 265, type: !266, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1722, retainedNodes: !397)
!12282 = !DILocation(line: 267, column: 16, scope: !12281)
!12283 = !DILocation(line: 268, column: 1, scope: !12281)
!12284 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12285, file: !12285, line: 9, type: !12286, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !12309)
!12285 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12286 = !DISubroutineType(types: !12287)
!12287 = !{!105, !12288, !169, !12308}
!12288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12289, size: 32)
!12289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12290)
!12290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1653, line: 60, size: 64, elements: !12291)
!12291 = !{!12292, !12307}
!12292 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12290, file: !1653, line: 69, baseType: !12293, size: 32)
!12293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12294, size: 32)
!12294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12295)
!12295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1653, line: 50, size: 64, elements: !12296)
!12296 = !{!12297, !12305, !12306}
!12297 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12295, file: !1653, line: 52, baseType: !12298, size: 32)
!12298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12299, size: 32)
!12299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12300)
!12300 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1664, line: 37, baseType: !12301)
!12301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1664, line: 32, size: 64, elements: !12302)
!12302 = !{!12303, !12304}
!12303 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12301, file: !1664, line: 34, baseType: !113, size: 32)
!12304 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12301, file: !1664, line: 36, baseType: !113, size: 32, offset: 32)
!12305 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12295, file: !1653, line: 54, baseType: !169, size: 8, offset: 32)
!12306 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12295, file: !1653, line: 56, baseType: !169, size: 8, offset: 40)
!12307 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12290, file: !1653, line: 71, baseType: !169, size: 8, offset: 32)
!12308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12293, size: 32)
!12309 = !{!12310, !12311, !12312}
!12310 = !DILocalVariable(name: "config", arg: 1, scope: !12284, file: !12285, line: 9, type: !12288)
!12311 = !DILocalVariable(name: "id", arg: 2, scope: !12284, file: !12285, line: 9, type: !169)
!12312 = !DILocalVariable(name: "state", arg: 3, scope: !12284, file: !12285, line: 10, type: !12308)
!12313 = !DILocation(line: 0, scope: !12284)
!12314 = !DILocation(line: 12, column: 20, scope: !12284)
!12315 = !DILocation(line: 13, column: 27, scope: !12284)
!12316 = !DILocation(line: 13, column: 42, scope: !12284)
!12317 = !DILocation(line: 13, column: 19, scope: !12284)
!12318 = !DILocation(line: 13, column: 16, scope: !12284)
!12319 = !DILocation(line: 13, column: 2, scope: !12284)
!12320 = distinct !{!12320, !12319, !12321}
!12321 = !DILocation(line: 19, column: 2, scope: !12284)
!12322 = !DILocation(line: 14, column: 23, scope: !12323)
!12323 = distinct !DILexicalBlock(scope: !12324, file: !12285, line: 14, column: 7)
!12324 = distinct !DILexicalBlock(scope: !12284, file: !12285, line: 13, column: 54)
!12325 = !DILocation(line: 14, column: 10, scope: !12323)
!12326 = !DILocation(line: 18, column: 11, scope: !12324)
!12327 = !DILocation(line: 14, column: 7, scope: !12324)
!12328 = !DILocation(line: 22, column: 1, scope: !12284)
!12329 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1919, file: !1919, line: 193, type: !12330, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1837, retainedNodes: !12339)
!12330 = !DISubroutineType(types: !12331)
!12331 = !{!105, !12332, !169, !22}
!12332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12333, size: 32)
!12333 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12334)
!12334 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1664, line: 37, baseType: !12335)
!12335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1664, line: 32, size: 64, elements: !12336)
!12336 = !{!12337, !12338}
!12337 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12335, file: !1664, line: 34, baseType: !113, size: 32)
!12338 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12335, file: !1664, line: 36, baseType: !113, size: 32, offset: 32)
!12339 = !{!12340, !12341, !12342, !12343, !12344, !12345, !12346, !12347, !12349}
!12340 = !DILocalVariable(name: "pins", arg: 1, scope: !12329, file: !1919, line: 193, type: !12332)
!12341 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12329, file: !1919, line: 193, type: !169)
!12342 = !DILocalVariable(name: "reg", arg: 3, scope: !12329, file: !1919, line: 194, type: !22)
!12343 = !DILocalVariable(name: "pin", scope: !12329, file: !1919, line: 196, type: !113)
!12344 = !DILocalVariable(name: "mux", scope: !12329, file: !1919, line: 196, type: !113)
!12345 = !DILocalVariable(name: "pin_cgf", scope: !12329, file: !1919, line: 197, type: !113)
!12346 = !DILocalVariable(name: "ret", scope: !12329, file: !1919, line: 198, type: !105)
!12347 = !DILocalVariable(name: "i", scope: !12348, file: !1919, line: 209, type: !169)
!12348 = distinct !DILexicalBlock(scope: !12329, file: !1919, line: 209, column: 2)
!12349 = !DILocalVariable(name: "gpio_out", scope: !12350, file: !1919, line: 239, type: !113)
!12350 = distinct !DILexicalBlock(scope: !12351, file: !1919, line: 238, column: 55)
!12351 = distinct !DILexicalBlock(scope: !12352, file: !1919, line: 238, column: 14)
!12352 = distinct !DILexicalBlock(scope: !12353, file: !1919, line: 236, column: 14)
!12353 = distinct !DILexicalBlock(scope: !12354, file: !1919, line: 234, column: 7)
!12354 = distinct !DILexicalBlock(scope: !12355, file: !1919, line: 209, column: 41)
!12355 = distinct !DILexicalBlock(scope: !12348, file: !1919, line: 209, column: 2)
!12356 = !DILocation(line: 0, scope: !12329)
!12357 = !DILocation(line: 0, scope: !12348)
!12358 = !DILocation(line: 209, column: 25, scope: !12355)
!12359 = !DILocation(line: 209, column: 2, scope: !12348)
!12360 = distinct !{!12360, !12359, !12361}
!12361 = !DILocation(line: 259, column: 2, scope: !12348)
!12362 = !DILocation(line: 210, column: 17, scope: !12354)
!12363 = !DILocation(line: 234, column: 7, scope: !12353)
!12364 = !DILocation(line: 234, column: 33, scope: !12353)
!12365 = !DILocation(line: 234, column: 7, scope: !12354)
!12366 = !DILocation(line: 235, column: 22, scope: !12367)
!12367 = distinct !DILexicalBlock(scope: !12353, file: !1919, line: 234, column: 49)
!12368 = !DILocation(line: 235, column: 29, scope: !12367)
!12369 = !DILocation(line: 236, column: 3, scope: !12367)
!12370 = !DILocation(line: 236, column: 14, scope: !12353)
!12371 = !DILocation(line: 239, column: 32, scope: !12350)
!12372 = !DILocation(line: 0, scope: !12350)
!12373 = !DILocation(line: 241, column: 8, scope: !12350)
!12374 = !DILocation(line: 246, column: 3, scope: !12350)
!12375 = !DILocation(line: 252, column: 9, scope: !12354)
!12376 = !DILocation(line: 255, column: 9, scope: !12354)
!12377 = !DILocation(line: 256, column: 11, scope: !12378)
!12378 = distinct !DILexicalBlock(scope: !12354, file: !1919, line: 256, column: 7)
!12379 = !DILocation(line: 209, column: 37, scope: !12355)
!12380 = !DILocation(line: 256, column: 7, scope: !12354)
!12381 = !DILocation(line: 262, column: 1, scope: !12329)
!12382 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1919, file: !1919, line: 176, type: !12383, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1837, retainedNodes: !12385)
!12383 = !DISubroutineType(types: !12384)
!12384 = !{!105, !113, !113, !113}
!12385 = !{!12386, !12387, !12388, !12389}
!12386 = !DILocalVariable(name: "pin", arg: 1, scope: !12382, file: !1919, line: 176, type: !113)
!12387 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12382, file: !1919, line: 176, type: !113)
!12388 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12382, file: !1919, line: 176, type: !113)
!12389 = !DILocalVariable(name: "port_device", scope: !12382, file: !1919, line: 178, type: !1849)
!12390 = !DILocation(line: 0, scope: !12382)
!12391 = !DILocation(line: 180, column: 22, scope: !12392)
!12392 = distinct !DILexicalBlock(scope: !12382, file: !1919, line: 180, column: 6)
!12393 = !DILocation(line: 180, column: 6, scope: !12382)
!12394 = !DILocation(line: 180, column: 6, scope: !12392)
!12395 = !DILocation(line: 184, column: 16, scope: !12382)
!12396 = !DILocation(line: 186, column: 19, scope: !12397)
!12397 = distinct !DILexicalBlock(scope: !12382, file: !1919, line: 186, column: 6)
!12398 = !DILocation(line: 186, column: 28, scope: !12397)
!12399 = !DILocation(line: 186, column: 33, scope: !12397)
!12400 = !DILocation(line: 186, column: 6, scope: !12382)
!12401 = !DILocation(line: 190, column: 43, scope: !12382)
!12402 = !DILocation(line: 190, column: 9, scope: !12382)
!12403 = !DILocation(line: 190, column: 2, scope: !12382)
!12404 = !DILocation(line: 191, column: 1, scope: !12382)
!12405 = distinct !DISubprogram(name: "device_is_ready", scope: !10309, file: !10309, line: 47, type: !12406, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1837, retainedNodes: !12408)
!12406 = !DISubroutineType(types: !12407)
!12407 = !{!492, !1849}
!12408 = !{!12409}
!12409 = !DILocalVariable(name: "dev", arg: 1, scope: !12405, file: !10309, line: 47, type: !1849)
!12410 = !DILocation(line: 0, scope: !12405)
!12411 = !DILocation(line: 55, column: 2, scope: !12412)
!12412 = distinct !DILexicalBlock(scope: !12405, file: !10309, line: 55, column: 2)
!12413 = !{i64 2149265493}
!12414 = !DILocation(line: 56, column: 9, scope: !12405)
!12415 = !DILocation(line: 56, column: 2, scope: !12405)
!12416 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !481, file: !481, line: 730, type: !12406, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1837, retainedNodes: !12417)
!12417 = !{!12418}
!12418 = !DILocalVariable(name: "dev", arg: 1, scope: !12416, file: !481, line: 730, type: !1849)
!12419 = !DILocation(line: 0, scope: !12416)
!12420 = !DILocation(line: 732, column: 9, scope: !12416)
!12421 = !DILocation(line: 732, column: 2, scope: !12416)
!12422 = distinct !DISubprogram(name: "SystemInit", scope: !1969, file: !1969, line: 167, type: !266, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1927, retainedNodes: !397)
!12423 = !DILocation(line: 182, column: 1, scope: !12422)
!12424 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1969, file: !1969, line: 220, type: !266, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1927, retainedNodes: !12425)
!12425 = !{!12426, !12427, !12428, !12429, !12430}
!12426 = !DILocalVariable(name: "tmp", scope: !12424, file: !1969, line: 222, type: !113)
!12427 = !DILocalVariable(name: "pllvco", scope: !12424, file: !1969, line: 222, type: !113)
!12428 = !DILocalVariable(name: "pllp", scope: !12424, file: !1969, line: 222, type: !113)
!12429 = !DILocalVariable(name: "pllsource", scope: !12424, file: !1969, line: 222, type: !113)
!12430 = !DILocalVariable(name: "pllm", scope: !12424, file: !1969, line: 222, type: !113)
!12431 = !DILocation(line: 0, scope: !12424)
!12432 = !DILocation(line: 225, column: 14, scope: !12424)
!12433 = !DILocation(line: 225, column: 19, scope: !12424)
!12434 = !DILocation(line: 227, column: 3, scope: !12424)
!12435 = !DILocation(line: 240, column: 25, scope: !12436)
!12436 = distinct !DILexicalBlock(scope: !12424, file: !1969, line: 228, column: 3)
!12437 = !DILocation(line: 241, column: 19, scope: !12436)
!12438 = !DILocation(line: 241, column: 27, scope: !12436)
!12439 = !DILocation(line: 0, scope: !12440)
!12440 = distinct !DILexicalBlock(scope: !12436, file: !1969, line: 243, column: 11)
!12441 = !DILocation(line: 254, column: 22, scope: !12436)
!12442 = !DILocation(line: 254, column: 62, scope: !12436)
!12443 = !DILocation(line: 255, column: 31, scope: !12436)
!12444 = !DILocation(line: 256, column: 7, scope: !12436)
!12445 = !DILocation(line: 0, scope: !12436)
!12446 = !DILocation(line: 263, column: 30, scope: !12424)
!12447 = !DILocation(line: 263, column: 52, scope: !12424)
!12448 = !DILocation(line: 263, column: 9, scope: !12424)
!12449 = !DILocation(line: 265, column: 19, scope: !12424)
!12450 = !DILocation(line: 266, column: 1, scope: !12424)
!12451 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12452, file: !12452, line: 200, type: !12453, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !397)
!12452 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12453 = !DISubroutineType(types: !12454)
!12454 = !{!12455}
!12455 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3019, line: 44, baseType: !3018)
!12456 = !DILocation(line: 202, column: 3, scope: !12451)
!12457 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12452, file: !12452, line: 219, type: !12458, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !12482)
!12458 = !DISubroutineType(types: !12459)
!12459 = !{!12455, !12460}
!12460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12461, size: 32)
!12461 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12462, line: 70, baseType: !12463)
!12462 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12463 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12462, line: 49, size: 384, elements: !12464)
!12464 = !{!12465, !12466, !12467, !12468, !12469, !12470, !12471}
!12465 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12463, file: !12462, line: 51, baseType: !113, size: 32)
!12466 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12463, file: !12462, line: 54, baseType: !113, size: 32, offset: 32)
!12467 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12463, file: !12462, line: 57, baseType: !113, size: 32, offset: 64)
!12468 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12463, file: !12462, line: 60, baseType: !113, size: 32, offset: 96)
!12469 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12463, file: !12462, line: 63, baseType: !113, size: 32, offset: 128)
!12470 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12463, file: !12462, line: 66, baseType: !113, size: 32, offset: 160)
!12471 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12463, file: !12462, line: 69, baseType: !12472, size: 192, offset: 192)
!12472 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12473, line: 73, baseType: !12474)
!12473 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12474 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12473, line: 45, size: 192, elements: !12475)
!12475 = !{!12476, !12477, !12478, !12479, !12480, !12481}
!12476 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12474, file: !12473, line: 47, baseType: !113, size: 32)
!12477 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12474, file: !12473, line: 50, baseType: !113, size: 32, offset: 32)
!12478 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12474, file: !12473, line: 53, baseType: !113, size: 32, offset: 64)
!12479 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12474, file: !12473, line: 56, baseType: !113, size: 32, offset: 96)
!12480 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12474, file: !12473, line: 60, baseType: !113, size: 32, offset: 128)
!12481 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12474, file: !12473, line: 63, baseType: !113, size: 32, offset: 160)
!12482 = !{!12483, !12484, !12485, !12486, !12490}
!12483 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12457, file: !12452, line: 219, type: !12460)
!12484 = !DILocalVariable(name: "tickstart", scope: !12457, file: !12452, line: 221, type: !113)
!12485 = !DILocalVariable(name: "pll_config", scope: !12457, file: !12452, line: 221, type: !113)
!12486 = !DILocalVariable(name: "pwrclkchanged", scope: !12487, file: !12452, line: 391, type: !12489)
!12487 = distinct !DILexicalBlock(scope: !12488, file: !12452, line: 390, column: 3)
!12488 = distinct !DILexicalBlock(scope: !12457, file: !12452, line: 389, column: 6)
!12489 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !954, line: 188, baseType: !3025)
!12490 = !DILocalVariable(name: "tmpreg", scope: !12491, file: !12452, line: 400, type: !461)
!12491 = distinct !DILexicalBlock(scope: !12492, file: !12452, line: 400, column: 7)
!12492 = distinct !DILexicalBlock(scope: !12493, file: !12452, line: 399, column: 5)
!12493 = distinct !DILexicalBlock(scope: !12487, file: !12452, line: 398, column: 8)
!12494 = !DILocation(line: 0, scope: !12457)
!12495 = !DILocation(line: 224, column: 24, scope: !12496)
!12496 = distinct !DILexicalBlock(scope: !12457, file: !12452, line: 224, column: 6)
!12497 = !DILocation(line: 224, column: 6, scope: !12457)
!12498 = !DILocation(line: 232, column: 27, scope: !12499)
!12499 = distinct !DILexicalBlock(scope: !12457, file: !12452, line: 232, column: 6)
!12500 = !DILocation(line: 232, column: 43, scope: !12499)
!12501 = !DILocation(line: 232, column: 69, scope: !12499)
!12502 = !DILocation(line: 232, column: 6, scope: !12457)
!12503 = !DILocation(line: 237, column: 9, scope: !12504)
!12504 = distinct !DILexicalBlock(scope: !12505, file: !12452, line: 237, column: 8)
!12505 = distinct !DILexicalBlock(scope: !12499, file: !12452, line: 233, column: 3)
!12506 = !DILocation(line: 237, column: 39, scope: !12504)
!12507 = !DILocation(line: 237, column: 60, scope: !12504)
!12508 = !DILocation(line: 238, column: 9, scope: !12504)
!12509 = !DILocation(line: 238, column: 39, scope: !12504)
!12510 = !DILocation(line: 238, column: 60, scope: !12504)
!12511 = !DILocation(line: 238, column: 70, scope: !12504)
!12512 = !DILocation(line: 238, column: 78, scope: !12504)
!12513 = !DILocation(line: 238, column: 100, scope: !12504)
!12514 = !DILocation(line: 237, column: 8, scope: !12505)
!12515 = !DILocation(line: 240, column: 11, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12517, file: !12452, line: 240, column: 10)
!12517 = distinct !DILexicalBlock(scope: !12504, file: !12452, line: 239, column: 5)
!12518 = !DILocation(line: 240, column: 57, scope: !12516)
!12519 = !DILocation(line: 240, column: 80, scope: !12516)
!12520 = !DILocation(line: 240, column: 89, scope: !12516)
!12521 = !DILocation(line: 240, column: 10, scope: !12517)
!12522 = !DILocation(line: 248, column: 7, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12524, file: !12452, line: 248, column: 7)
!12524 = distinct !DILexicalBlock(scope: !12525, file: !12452, line: 248, column: 7)
!12525 = distinct !DILexicalBlock(scope: !12504, file: !12452, line: 246, column: 5)
!12526 = !DILocation(line: 248, column: 7, scope: !12524)
!12527 = !DILocation(line: 248, column: 7, scope: !12528)
!12528 = distinct !DILexicalBlock(scope: !12523, file: !12452, line: 248, column: 7)
!12529 = !DILocation(line: 248, column: 7, scope: !12530)
!12530 = distinct !DILexicalBlock(scope: !12531, file: !12452, line: 248, column: 7)
!12531 = distinct !DILexicalBlock(scope: !12523, file: !12452, line: 248, column: 7)
!12532 = !DILocation(line: 248, column: 7, scope: !12533)
!12533 = distinct !DILexicalBlock(scope: !12531, file: !12452, line: 248, column: 7)
!12534 = !DILocation(line: 0, scope: !12523)
!12535 = !DILocation(line: 251, column: 30, scope: !12536)
!12536 = distinct !DILexicalBlock(scope: !12525, file: !12452, line: 251, column: 10)
!12537 = !DILocation(line: 251, column: 40, scope: !12536)
!12538 = !DILocation(line: 0, scope: !12536)
!12539 = !DILocation(line: 251, column: 10, scope: !12525)
!12540 = !DILocation(line: 257, column: 15, scope: !12541)
!12541 = distinct !DILexicalBlock(scope: !12536, file: !12452, line: 252, column: 7)
!12542 = !DILocation(line: 257, column: 51, scope: !12541)
!12543 = !DILocation(line: 257, column: 9, scope: !12541)
!12544 = !DILocation(line: 259, column: 15, scope: !12545)
!12545 = distinct !DILexicalBlock(scope: !12546, file: !12452, line: 259, column: 14)
!12546 = distinct !DILexicalBlock(scope: !12541, file: !12452, line: 258, column: 9)
!12547 = !DILocation(line: 259, column: 29, scope: !12545)
!12548 = !DILocation(line: 259, column: 43, scope: !12545)
!12549 = !DILocation(line: 259, column: 14, scope: !12546)
!12550 = distinct !{!12550, !12543, !12551}
!12551 = !DILocation(line: 263, column: 9, scope: !12541)
!12552 = !DILocation(line: 271, column: 15, scope: !12553)
!12553 = distinct !DILexicalBlock(scope: !12536, file: !12452, line: 266, column: 7)
!12554 = !DILocation(line: 271, column: 9, scope: !12553)
!12555 = !DILocation(line: 273, column: 15, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12557, file: !12452, line: 273, column: 14)
!12557 = distinct !DILexicalBlock(scope: !12553, file: !12452, line: 272, column: 9)
!12558 = !DILocation(line: 273, column: 29, scope: !12556)
!12559 = !DILocation(line: 273, column: 43, scope: !12556)
!12560 = !DILocation(line: 273, column: 14, scope: !12557)
!12561 = distinct !{!12561, !12554, !12562}
!12562 = !DILocation(line: 277, column: 9, scope: !12553)
!12563 = !DILocation(line: 282, column: 27, scope: !12564)
!12564 = distinct !DILexicalBlock(scope: !12457, file: !12452, line: 282, column: 6)
!12565 = !DILocation(line: 282, column: 43, scope: !12564)
!12566 = !DILocation(line: 282, column: 69, scope: !12564)
!12567 = !DILocation(line: 282, column: 6, scope: !12457)
!12568 = !DILocation(line: 289, column: 9, scope: !12569)
!12569 = distinct !DILexicalBlock(scope: !12570, file: !12452, line: 289, column: 8)
!12570 = distinct !DILexicalBlock(scope: !12564, file: !12452, line: 283, column: 3)
!12571 = !DILocation(line: 289, column: 39, scope: !12569)
!12572 = !DILocation(line: 289, column: 60, scope: !12569)
!12573 = !DILocation(line: 290, column: 9, scope: !12569)
!12574 = !DILocation(line: 290, column: 39, scope: !12569)
!12575 = !DILocation(line: 290, column: 60, scope: !12569)
!12576 = !DILocation(line: 290, column: 70, scope: !12569)
!12577 = !DILocation(line: 290, column: 78, scope: !12569)
!12578 = !DILocation(line: 290, column: 100, scope: !12569)
!12579 = !DILocation(line: 289, column: 8, scope: !12570)
!12580 = !DILocation(line: 293, column: 11, scope: !12581)
!12581 = distinct !DILexicalBlock(scope: !12582, file: !12452, line: 293, column: 10)
!12582 = distinct !DILexicalBlock(scope: !12569, file: !12452, line: 291, column: 5)
!12583 = !DILocation(line: 293, column: 57, scope: !12581)
!12584 = !DILocation(line: 293, column: 80, scope: !12581)
!12585 = !DILocation(line: 293, column: 89, scope: !12581)
!12586 = !DILocation(line: 293, column: 10, scope: !12582)
!12587 = !DILocation(line: 307, column: 30, scope: !12588)
!12588 = distinct !DILexicalBlock(scope: !12589, file: !12452, line: 307, column: 10)
!12589 = distinct !DILexicalBlock(scope: !12569, file: !12452, line: 305, column: 5)
!12590 = !DILocation(line: 307, column: 39, scope: !12588)
!12591 = !DILocation(line: 307, column: 10, scope: !12589)
!12592 = !DILocation(line: 310, column: 9, scope: !12593)
!12593 = distinct !DILexicalBlock(scope: !12588, file: !12452, line: 308, column: 7)
!12594 = !DILocation(line: 313, column: 21, scope: !12593)
!12595 = !DILocation(line: 316, column: 9, scope: !12593)
!12596 = !DILocation(line: 316, column: 15, scope: !12593)
!12597 = !DILocation(line: 316, column: 51, scope: !12593)
!12598 = !DILocation(line: 318, column: 15, scope: !12599)
!12599 = distinct !DILexicalBlock(scope: !12600, file: !12452, line: 318, column: 14)
!12600 = distinct !DILexicalBlock(scope: !12593, file: !12452, line: 317, column: 9)
!12601 = !DILocation(line: 318, column: 29, scope: !12599)
!12602 = !DILocation(line: 318, column: 43, scope: !12599)
!12603 = !DILocation(line: 318, column: 14, scope: !12600)
!12604 = distinct !{!12604, !12595, !12605}
!12605 = !DILocation(line: 322, column: 9, scope: !12593)
!12606 = !DILocation(line: 330, column: 9, scope: !12607)
!12607 = distinct !DILexicalBlock(scope: !12588, file: !12452, line: 328, column: 7)
!12608 = !DILocation(line: 333, column: 21, scope: !12607)
!12609 = !DILocation(line: 336, column: 9, scope: !12607)
!12610 = !DILocation(line: 336, column: 15, scope: !12607)
!12611 = !DILocation(line: 338, column: 15, scope: !12612)
!12612 = distinct !DILexicalBlock(scope: !12613, file: !12452, line: 338, column: 14)
!12613 = distinct !DILexicalBlock(scope: !12607, file: !12452, line: 337, column: 9)
!12614 = !DILocation(line: 338, column: 29, scope: !12612)
!12615 = !DILocation(line: 338, column: 43, scope: !12612)
!12616 = !DILocation(line: 338, column: 14, scope: !12613)
!12617 = distinct !{!12617, !12609, !12618}
!12618 = !DILocation(line: 342, column: 9, scope: !12607)
!12619 = !DILocation(line: 0, scope: !12569)
!12620 = !DILocation(line: 347, column: 27, scope: !12621)
!12621 = distinct !DILexicalBlock(scope: !12457, file: !12452, line: 347, column: 6)
!12622 = !DILocation(line: 347, column: 43, scope: !12621)
!12623 = !DILocation(line: 347, column: 69, scope: !12621)
!12624 = !DILocation(line: 347, column: 6, scope: !12457)
!12625 = !DILocation(line: 353, column: 28, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12627, file: !12452, line: 353, column: 8)
!12627 = distinct !DILexicalBlock(scope: !12621, file: !12452, line: 348, column: 3)
!12628 = !DILocation(line: 353, column: 37, scope: !12626)
!12629 = !DILocation(line: 353, column: 8, scope: !12627)
!12630 = !DILocation(line: 356, column: 7, scope: !12631)
!12631 = distinct !DILexicalBlock(scope: !12626, file: !12452, line: 354, column: 5)
!12632 = !DILocation(line: 359, column: 19, scope: !12631)
!12633 = !DILocation(line: 362, column: 7, scope: !12631)
!12634 = !DILocation(line: 362, column: 13, scope: !12631)
!12635 = !DILocation(line: 362, column: 49, scope: !12631)
!12636 = !DILocation(line: 364, column: 13, scope: !12637)
!12637 = distinct !DILexicalBlock(scope: !12638, file: !12452, line: 364, column: 12)
!12638 = distinct !DILexicalBlock(scope: !12631, file: !12452, line: 363, column: 7)
!12639 = !DILocation(line: 364, column: 27, scope: !12637)
!12640 = !DILocation(line: 364, column: 41, scope: !12637)
!12641 = !DILocation(line: 364, column: 12, scope: !12638)
!12642 = distinct !{!12642, !12633, !12643}
!12643 = !DILocation(line: 368, column: 7, scope: !12631)
!12644 = !DILocation(line: 373, column: 7, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12626, file: !12452, line: 371, column: 5)
!12646 = !DILocation(line: 376, column: 19, scope: !12645)
!12647 = !DILocation(line: 379, column: 7, scope: !12645)
!12648 = !DILocation(line: 379, column: 13, scope: !12645)
!12649 = !DILocation(line: 381, column: 13, scope: !12650)
!12650 = distinct !DILexicalBlock(scope: !12651, file: !12452, line: 381, column: 12)
!12651 = distinct !DILexicalBlock(scope: !12645, file: !12452, line: 380, column: 7)
!12652 = !DILocation(line: 381, column: 27, scope: !12650)
!12653 = !DILocation(line: 381, column: 41, scope: !12650)
!12654 = !DILocation(line: 381, column: 12, scope: !12651)
!12655 = distinct !{!12655, !12647, !12656}
!12656 = !DILocation(line: 385, column: 7, scope: !12645)
!12657 = !DILocation(line: 389, column: 27, scope: !12488)
!12658 = !DILocation(line: 389, column: 43, scope: !12488)
!12659 = !DILocation(line: 389, column: 69, scope: !12488)
!12660 = !DILocation(line: 389, column: 6, scope: !12457)
!12661 = !DILocation(line: 0, scope: !12487)
!12662 = !DILocation(line: 398, column: 8, scope: !12493)
!12663 = !DILocation(line: 398, column: 8, scope: !12487)
!12664 = !DILocation(line: 400, column: 7, scope: !12491)
!12665 = !DILocation(line: 400, column: 7, scope: !12492)
!12666 = !DILocation(line: 402, column: 5, scope: !12492)
!12667 = !DILocation(line: 404, column: 8, scope: !12668)
!12668 = distinct !DILexicalBlock(scope: !12487, file: !12452, line: 404, column: 8)
!12669 = !DILocation(line: 404, column: 8, scope: !12487)
!12670 = !DILocation(line: 407, column: 7, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12668, file: !12452, line: 405, column: 5)
!12672 = !DILocation(line: 410, column: 19, scope: !12671)
!12673 = !DILocation(line: 412, column: 7, scope: !12671)
!12674 = !DILocation(line: 412, column: 13, scope: !12671)
!12675 = !DILocation(line: 414, column: 13, scope: !12676)
!12676 = distinct !DILexicalBlock(scope: !12677, file: !12452, line: 414, column: 12)
!12677 = distinct !DILexicalBlock(scope: !12671, file: !12452, line: 413, column: 7)
!12678 = !DILocation(line: 414, column: 27, scope: !12676)
!12679 = !DILocation(line: 414, column: 40, scope: !12676)
!12680 = !DILocation(line: 414, column: 12, scope: !12677)
!12681 = distinct !{!12681, !12673, !12682}
!12682 = !DILocation(line: 418, column: 7, scope: !12671)
!12683 = !DILocation(line: 422, column: 5, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12685, file: !12452, line: 422, column: 5)
!12685 = distinct !DILexicalBlock(scope: !12487, file: !12452, line: 422, column: 5)
!12686 = !DILocation(line: 422, column: 5, scope: !12685)
!12687 = !DILocation(line: 422, column: 5, scope: !12688)
!12688 = distinct !DILexicalBlock(scope: !12684, file: !12452, line: 422, column: 5)
!12689 = !DILocation(line: 422, column: 5, scope: !12690)
!12690 = distinct !DILexicalBlock(scope: !12691, file: !12452, line: 422, column: 5)
!12691 = distinct !DILexicalBlock(scope: !12684, file: !12452, line: 422, column: 5)
!12692 = !DILocation(line: 422, column: 5, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12691, file: !12452, line: 422, column: 5)
!12694 = !DILocation(line: 0, scope: !12684)
!12695 = !DILocation(line: 424, column: 28, scope: !12696)
!12696 = distinct !DILexicalBlock(scope: !12487, file: !12452, line: 424, column: 8)
!12697 = !DILocation(line: 424, column: 38, scope: !12696)
!12698 = !DILocation(line: 0, scope: !12696)
!12699 = !DILocation(line: 424, column: 8, scope: !12487)
!12700 = !DILocation(line: 430, column: 13, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !12696, file: !12452, line: 425, column: 5)
!12702 = !DILocation(line: 430, column: 49, scope: !12701)
!12703 = !DILocation(line: 430, column: 7, scope: !12701)
!12704 = !DILocation(line: 432, column: 13, scope: !12705)
!12705 = distinct !DILexicalBlock(scope: !12706, file: !12452, line: 432, column: 12)
!12706 = distinct !DILexicalBlock(scope: !12701, file: !12452, line: 431, column: 7)
!12707 = !DILocation(line: 432, column: 27, scope: !12705)
!12708 = !DILocation(line: 432, column: 41, scope: !12705)
!12709 = !DILocation(line: 432, column: 12, scope: !12706)
!12710 = distinct !{!12710, !12703, !12711}
!12711 = !DILocation(line: 436, column: 7, scope: !12701)
!12712 = !DILocation(line: 444, column: 13, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12696, file: !12452, line: 439, column: 5)
!12714 = !DILocation(line: 444, column: 7, scope: !12713)
!12715 = !DILocation(line: 446, column: 13, scope: !12716)
!12716 = distinct !DILexicalBlock(scope: !12717, file: !12452, line: 446, column: 12)
!12717 = distinct !DILexicalBlock(scope: !12713, file: !12452, line: 445, column: 7)
!12718 = !DILocation(line: 446, column: 27, scope: !12716)
!12719 = !DILocation(line: 446, column: 41, scope: !12716)
!12720 = !DILocation(line: 446, column: 12, scope: !12717)
!12721 = distinct !{!12721, !12714, !12722}
!12722 = !DILocation(line: 450, column: 7, scope: !12713)
!12723 = !DILocation(line: 454, column: 8, scope: !12487)
!12724 = !DILocation(line: 456, column: 7, scope: !12725)
!12725 = distinct !DILexicalBlock(scope: !12726, file: !12452, line: 455, column: 5)
!12726 = distinct !DILexicalBlock(scope: !12487, file: !12452, line: 454, column: 8)
!12727 = !DILocation(line: 457, column: 5, scope: !12725)
!12728 = !DILocation(line: 462, column: 31, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12457, file: !12452, line: 462, column: 7)
!12730 = !DILocation(line: 462, column: 41, scope: !12729)
!12731 = !DILocation(line: 462, column: 7, scope: !12457)
!12732 = !DILocation(line: 465, column: 8, scope: !12733)
!12733 = distinct !DILexicalBlock(scope: !12734, file: !12452, line: 465, column: 8)
!12734 = distinct !DILexicalBlock(scope: !12729, file: !12452, line: 463, column: 3)
!12735 = !DILocation(line: 465, column: 38, scope: !12733)
!12736 = !DILocation(line: 465, column: 8, scope: !12734)
!12737 = !DILocation(line: 467, column: 44, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12739, file: !12452, line: 467, column: 10)
!12739 = distinct !DILexicalBlock(scope: !12733, file: !12452, line: 466, column: 5)
!12740 = !DILocation(line: 0, scope: !12738)
!12741 = !DILocation(line: 467, column: 10, scope: !12739)
!12742 = !DILocation(line: 483, column: 15, scope: !12743)
!12743 = distinct !DILexicalBlock(scope: !12738, file: !12452, line: 468, column: 7)
!12744 = !DILocation(line: 483, column: 9, scope: !12743)
!12745 = !DILocation(line: 485, column: 15, scope: !12746)
!12746 = distinct !DILexicalBlock(scope: !12747, file: !12452, line: 485, column: 14)
!12747 = distinct !DILexicalBlock(scope: !12743, file: !12452, line: 484, column: 9)
!12748 = !DILocation(line: 485, column: 29, scope: !12746)
!12749 = !DILocation(line: 485, column: 43, scope: !12746)
!12750 = !DILocation(line: 485, column: 14, scope: !12747)
!12751 = distinct !{!12751, !12744, !12752}
!12752 = !DILocation(line: 489, column: 9, scope: !12743)
!12753 = !DILocation(line: 492, column: 9, scope: !12743)
!12754 = !DILocation(line: 498, column: 9, scope: !12743)
!12755 = !DILocation(line: 501, column: 21, scope: !12743)
!12756 = !DILocation(line: 504, column: 9, scope: !12743)
!12757 = !DILocation(line: 504, column: 15, scope: !12743)
!12758 = !DILocation(line: 504, column: 51, scope: !12743)
!12759 = !DILocation(line: 506, column: 15, scope: !12760)
!12760 = distinct !DILexicalBlock(scope: !12761, file: !12452, line: 506, column: 14)
!12761 = distinct !DILexicalBlock(scope: !12743, file: !12452, line: 505, column: 9)
!12762 = !DILocation(line: 506, column: 29, scope: !12760)
!12763 = !DILocation(line: 506, column: 43, scope: !12760)
!12764 = !DILocation(line: 506, column: 14, scope: !12761)
!12765 = distinct !{!12765, !12756, !12766}
!12766 = !DILocation(line: 510, column: 9, scope: !12743)
!12767 = !DILocation(line: 521, column: 15, scope: !12768)
!12768 = distinct !DILexicalBlock(scope: !12738, file: !12452, line: 513, column: 7)
!12769 = !DILocation(line: 521, column: 9, scope: !12768)
!12770 = !DILocation(line: 523, column: 15, scope: !12771)
!12771 = distinct !DILexicalBlock(scope: !12772, file: !12452, line: 523, column: 14)
!12772 = distinct !DILexicalBlock(scope: !12768, file: !12452, line: 522, column: 9)
!12773 = !DILocation(line: 523, column: 29, scope: !12771)
!12774 = !DILocation(line: 523, column: 43, scope: !12771)
!12775 = !DILocation(line: 523, column: 14, scope: !12772)
!12776 = distinct !{!12776, !12769, !12777}
!12777 = !DILocation(line: 527, column: 9, scope: !12768)
!12778 = !DILocation(line: 533, column: 44, scope: !12779)
!12779 = distinct !DILexicalBlock(scope: !12780, file: !12452, line: 533, column: 10)
!12780 = distinct !DILexicalBlock(scope: !12733, file: !12452, line: 531, column: 5)
!12781 = !DILocation(line: 533, column: 10, scope: !12780)
!12782 = !DILocation(line: 540, column: 27, scope: !12783)
!12783 = distinct !DILexicalBlock(scope: !12779, file: !12452, line: 538, column: 7)
!12784 = !DILocation(line: 551, column: 14, scope: !12785)
!12785 = distinct !DILexicalBlock(scope: !12783, file: !12452, line: 550, column: 13)
!12786 = !DILocation(line: 551, column: 81, scope: !12785)
!12787 = !DILocation(line: 551, column: 55, scope: !12785)
!12788 = !DILocation(line: 551, column: 92, scope: !12785)
!12789 = !DILocation(line: 552, column: 14, scope: !12785)
!12790 = !DILocation(line: 552, column: 80, scope: !12785)
!12791 = !DILocation(line: 552, column: 53, scope: !12785)
!12792 = !DILocation(line: 552, column: 111, scope: !12785)
!12793 = !DILocation(line: 553, column: 14, scope: !12785)
!12794 = !DILocation(line: 553, column: 80, scope: !12785)
!12795 = !DILocation(line: 553, column: 86, scope: !12785)
!12796 = !DILocation(line: 553, column: 53, scope: !12785)
!12797 = !DILocation(line: 553, column: 111, scope: !12785)
!12798 = !DILocation(line: 554, column: 14, scope: !12785)
!12799 = !DILocation(line: 554, column: 82, scope: !12785)
!12800 = !DILocation(line: 554, column: 101, scope: !12785)
!12801 = !DILocation(line: 554, column: 53, scope: !12785)
!12802 = !DILocation(line: 554, column: 126, scope: !12785)
!12803 = !DILocation(line: 555, column: 14, scope: !12785)
!12804 = !DILocation(line: 555, column: 80, scope: !12785)
!12805 = !DILocation(line: 555, column: 85, scope: !12785)
!12806 = !DILocation(line: 555, column: 53, scope: !12785)
!12807 = !DILocation(line: 550, column: 13, scope: !12783)
!12808 = !DILocation(line: 563, column: 3, scope: !12457)
!12809 = !DILocation(line: 564, column: 1, scope: !12457)
!12810 = !DISubprogram(name: "HAL_GetTick", scope: !12811, file: !12811, line: 234, type: !395, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!12811 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12812 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12452, file: !12452, line: 591, type: !12813, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !12824)
!12813 = !DISubroutineType(types: !12814)
!12814 = !{!12455, !12815, !113}
!12815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12816, size: 32)
!12816 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12462, line: 92, baseType: !12817)
!12817 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12462, line: 75, size: 160, elements: !12818)
!12818 = !{!12819, !12820, !12821, !12822, !12823}
!12819 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12817, file: !12462, line: 77, baseType: !113, size: 32)
!12820 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12817, file: !12462, line: 80, baseType: !113, size: 32, offset: 32)
!12821 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12817, file: !12462, line: 83, baseType: !113, size: 32, offset: 64)
!12822 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12817, file: !12462, line: 86, baseType: !113, size: 32, offset: 96)
!12823 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12817, file: !12462, line: 89, baseType: !113, size: 32, offset: 128)
!12824 = !{!12825, !12826, !12827}
!12825 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12812, file: !12452, line: 591, type: !12815)
!12826 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12812, file: !12452, line: 591, type: !113)
!12827 = !DILocalVariable(name: "tickstart", scope: !12812, file: !12452, line: 593, type: !113)
!12828 = !DILocation(line: 0, scope: !12812)
!12829 = !DILocation(line: 596, column: 24, scope: !12830)
!12830 = distinct !DILexicalBlock(scope: !12812, file: !12452, line: 596, column: 6)
!12831 = !DILocation(line: 596, column: 6, scope: !12812)
!12832 = !DILocation(line: 610, column: 17, scope: !12833)
!12833 = distinct !DILexicalBlock(scope: !12812, file: !12452, line: 610, column: 6)
!12834 = !DILocation(line: 610, column: 15, scope: !12833)
!12835 = !DILocation(line: 610, column: 6, scope: !12812)
!12836 = !DILocation(line: 613, column: 5, scope: !12837)
!12837 = distinct !DILexicalBlock(scope: !12833, file: !12452, line: 611, column: 3)
!12838 = !DILocation(line: 617, column: 8, scope: !12839)
!12839 = distinct !DILexicalBlock(scope: !12837, file: !12452, line: 617, column: 8)
!12840 = !DILocation(line: 617, column: 34, scope: !12839)
!12841 = !DILocation(line: 617, column: 8, scope: !12837)
!12842 = !DILocation(line: 624, column: 27, scope: !12843)
!12843 = distinct !DILexicalBlock(scope: !12812, file: !12452, line: 624, column: 6)
!12844 = !DILocation(line: 624, column: 38, scope: !12843)
!12845 = !DILocation(line: 624, column: 60, scope: !12843)
!12846 = !DILocation(line: 624, column: 6, scope: !12812)
!12847 = !DILocation(line: 628, column: 40, scope: !12848)
!12848 = distinct !DILexicalBlock(scope: !12849, file: !12452, line: 628, column: 8)
!12849 = distinct !DILexicalBlock(scope: !12843, file: !12452, line: 625, column: 3)
!12850 = !DILocation(line: 628, column: 63, scope: !12848)
!12851 = !DILocation(line: 628, column: 8, scope: !12849)
!12852 = !DILocation(line: 630, column: 7, scope: !12853)
!12853 = distinct !DILexicalBlock(scope: !12848, file: !12452, line: 629, column: 5)
!12854 = !DILocation(line: 633, column: 29, scope: !12855)
!12855 = distinct !DILexicalBlock(scope: !12849, file: !12452, line: 633, column: 8)
!12856 = !DILocation(line: 631, column: 5, scope: !12853)
!12857 = !DILocation(line: 633, column: 40, scope: !12855)
!12858 = !DILocation(line: 633, column: 63, scope: !12855)
!12859 = !DILocation(line: 633, column: 8, scope: !12849)
!12860 = !DILocation(line: 635, column: 7, scope: !12861)
!12861 = distinct !DILexicalBlock(scope: !12855, file: !12452, line: 634, column: 5)
!12862 = !DILocation(line: 636, column: 5, scope: !12861)
!12863 = !DILocation(line: 639, column: 5, scope: !12849)
!12864 = !DILocation(line: 643, column: 27, scope: !12865)
!12865 = distinct !DILexicalBlock(scope: !12812, file: !12452, line: 643, column: 6)
!12866 = !DILocation(line: 640, column: 3, scope: !12849)
!12867 = !DILocation(line: 643, column: 38, scope: !12865)
!12868 = !DILocation(line: 643, column: 62, scope: !12865)
!12869 = !DILocation(line: 643, column: 6, scope: !12812)
!12870 = !DILocation(line: 648, column: 27, scope: !12871)
!12871 = distinct !DILexicalBlock(scope: !12872, file: !12452, line: 648, column: 8)
!12872 = distinct !DILexicalBlock(scope: !12865, file: !12452, line: 644, column: 3)
!12873 = !DILocation(line: 648, column: 8, scope: !12872)
!12874 = !DILocation(line: 651, column: 10, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !12876, file: !12452, line: 651, column: 10)
!12876 = distinct !DILexicalBlock(scope: !12871, file: !12452, line: 649, column: 5)
!12877 = !DILocation(line: 651, column: 46, scope: !12875)
!12878 = !DILocation(line: 651, column: 10, scope: !12876)
!12879 = !DILocation(line: 661, column: 10, scope: !12880)
!12880 = distinct !DILexicalBlock(scope: !12881, file: !12452, line: 661, column: 10)
!12881 = distinct !DILexicalBlock(scope: !12882, file: !12452, line: 659, column: 5)
!12882 = distinct !DILexicalBlock(scope: !12871, file: !12452, line: 657, column: 13)
!12883 = !DILocation(line: 661, column: 46, scope: !12880)
!12884 = !DILocation(line: 661, column: 10, scope: !12881)
!12885 = !DILocation(line: 670, column: 10, scope: !12886)
!12886 = distinct !DILexicalBlock(scope: !12887, file: !12452, line: 670, column: 10)
!12887 = distinct !DILexicalBlock(scope: !12882, file: !12452, line: 668, column: 5)
!12888 = !DILocation(line: 670, column: 46, scope: !12886)
!12889 = !DILocation(line: 670, column: 10, scope: !12887)
!12890 = !DILocation(line: 676, column: 5, scope: !12872)
!12891 = !DILocation(line: 679, column: 17, scope: !12872)
!12892 = !DILocation(line: 681, column: 5, scope: !12872)
!12893 = !DILocation(line: 681, column: 12, scope: !12872)
!12894 = !DILocation(line: 681, column: 65, scope: !12872)
!12895 = !DILocation(line: 681, column: 78, scope: !12872)
!12896 = !DILocation(line: 681, column: 42, scope: !12872)
!12897 = !DILocation(line: 683, column: 12, scope: !12898)
!12898 = distinct !DILexicalBlock(scope: !12899, file: !12452, line: 683, column: 11)
!12899 = distinct !DILexicalBlock(scope: !12872, file: !12452, line: 682, column: 5)
!12900 = !DILocation(line: 683, column: 26, scope: !12898)
!12901 = !DILocation(line: 683, column: 39, scope: !12898)
!12902 = !DILocation(line: 683, column: 11, scope: !12899)
!12903 = distinct !{!12903, !12892, !12904}
!12904 = !DILocation(line: 687, column: 5, scope: !12872)
!12905 = !DILocation(line: 691, column: 17, scope: !12906)
!12906 = distinct !DILexicalBlock(scope: !12812, file: !12452, line: 691, column: 6)
!12907 = !DILocation(line: 691, column: 15, scope: !12906)
!12908 = !DILocation(line: 691, column: 6, scope: !12812)
!12909 = !DILocation(line: 694, column: 5, scope: !12910)
!12910 = distinct !DILexicalBlock(scope: !12906, file: !12452, line: 692, column: 3)
!12911 = !DILocation(line: 698, column: 8, scope: !12912)
!12912 = distinct !DILexicalBlock(scope: !12910, file: !12452, line: 698, column: 8)
!12913 = !DILocation(line: 698, column: 34, scope: !12912)
!12914 = !DILocation(line: 698, column: 8, scope: !12910)
!12915 = !DILocation(line: 705, column: 27, scope: !12916)
!12916 = distinct !DILexicalBlock(scope: !12812, file: !12452, line: 705, column: 6)
!12917 = !DILocation(line: 705, column: 38, scope: !12916)
!12918 = !DILocation(line: 705, column: 61, scope: !12916)
!12919 = !DILocation(line: 705, column: 6, scope: !12812)
!12920 = !DILocation(line: 708, column: 5, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !12916, file: !12452, line: 706, column: 3)
!12922 = !DILocation(line: 712, column: 27, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12812, file: !12452, line: 712, column: 6)
!12924 = !DILocation(line: 709, column: 3, scope: !12921)
!12925 = !DILocation(line: 712, column: 38, scope: !12923)
!12926 = !DILocation(line: 712, column: 61, scope: !12923)
!12927 = !DILocation(line: 712, column: 6, scope: !12812)
!12928 = !DILocation(line: 715, column: 5, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12923, file: !12452, line: 713, column: 3)
!12930 = !DILocation(line: 716, column: 3, scope: !12929)
!12931 = !DILocation(line: 719, column: 21, scope: !12812)
!12932 = !DILocation(line: 719, column: 70, scope: !12812)
!12933 = !DILocation(line: 719, column: 91, scope: !12812)
!12934 = !DILocation(line: 719, column: 50, scope: !12812)
!12935 = !DILocation(line: 719, column: 47, scope: !12812)
!12936 = !DILocation(line: 719, column: 19, scope: !12812)
!12937 = !DILocation(line: 722, column: 17, scope: !12812)
!12938 = !DILocation(line: 722, column: 3, scope: !12812)
!12939 = !DILocation(line: 724, column: 3, scope: !12812)
!12940 = !DILocation(line: 725, column: 1, scope: !12812)
!12941 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12452, file: !12452, line: 885, type: !395, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !12942)
!12942 = !{!12943, !12944, !12945, !12946}
!12943 = !DILocalVariable(name: "pllm", scope: !12941, file: !12452, line: 887, type: !113)
!12944 = !DILocalVariable(name: "pllvco", scope: !12941, file: !12452, line: 887, type: !113)
!12945 = !DILocalVariable(name: "pllp", scope: !12941, file: !12452, line: 887, type: !113)
!12946 = !DILocalVariable(name: "sysclockfreq", scope: !12941, file: !12452, line: 888, type: !113)
!12947 = !DILocation(line: 0, scope: !12941)
!12948 = !DILocation(line: 891, column: 16, scope: !12941)
!12949 = !DILocation(line: 891, column: 21, scope: !12941)
!12950 = !DILocation(line: 891, column: 3, scope: !12941)
!12951 = !DILocation(line: 907, column: 19, scope: !12952)
!12952 = distinct !DILexicalBlock(scope: !12953, file: !12452, line: 904, column: 5)
!12953 = distinct !DILexicalBlock(scope: !12941, file: !12452, line: 892, column: 3)
!12954 = !DILocation(line: 907, column: 27, scope: !12952)
!12955 = !DILocation(line: 908, column: 10, scope: !12956)
!12956 = distinct !DILexicalBlock(scope: !12952, file: !12452, line: 908, column: 10)
!12957 = !DILocation(line: 0, scope: !12956)
!12958 = !DILocation(line: 918, column: 23, scope: !12952)
!12959 = !DILocation(line: 918, column: 82, scope: !12952)
!12960 = !DILocation(line: 920, column: 28, scope: !12952)
!12961 = !DILocation(line: 921, column: 7, scope: !12952)
!12962 = !DILocation(line: 0, scope: !12953)
!12963 = !DILocation(line: 929, column: 3, scope: !12941)
!12964 = !DISubprogram(name: "HAL_InitTick", scope: !12811, file: !12811, line: 223, type: !12965, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!12965 = !DISubroutineType(types: !12966)
!12966 = !{!12455, !113}
!12967 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12452, file: !12452, line: 775, type: !12968, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !12970)
!12968 = !DISubroutineType(types: !12969)
!12969 = !{null, !113, !113, !113}
!12970 = !{!12971, !12972, !12973, !12974, !12984, !12988}
!12971 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12967, file: !12452, line: 775, type: !113)
!12972 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12967, file: !12452, line: 775, type: !113)
!12973 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12967, file: !12452, line: 775, type: !113)
!12974 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12967, file: !12452, line: 777, type: !12975)
!12975 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12976, line: 62, baseType: !12977)
!12976 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12977 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12976, line: 46, size: 160, elements: !12978)
!12978 = !{!12979, !12980, !12981, !12982, !12983}
!12979 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12977, file: !12976, line: 48, baseType: !113, size: 32)
!12980 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12977, file: !12976, line: 51, baseType: !113, size: 32, offset: 32)
!12981 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12977, file: !12976, line: 54, baseType: !113, size: 32, offset: 64)
!12982 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12977, file: !12976, line: 57, baseType: !113, size: 32, offset: 96)
!12983 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12977, file: !12976, line: 60, baseType: !113, size: 32, offset: 128)
!12984 = !DILocalVariable(name: "tmpreg", scope: !12985, file: !12452, line: 787, type: !461)
!12985 = distinct !DILexicalBlock(scope: !12986, file: !12452, line: 787, column: 5)
!12986 = distinct !DILexicalBlock(scope: !12987, file: !12452, line: 783, column: 3)
!12987 = distinct !DILexicalBlock(scope: !12967, file: !12452, line: 782, column: 6)
!12988 = !DILocalVariable(name: "tmpreg", scope: !12989, file: !12452, line: 811, type: !461)
!12989 = distinct !DILexicalBlock(scope: !12990, file: !12452, line: 811, column: 5)
!12990 = distinct !DILexicalBlock(scope: !12987, file: !12452, line: 807, column: 3)
!12991 = !DILocation(line: 0, scope: !12967)
!12992 = !DILocation(line: 777, column: 3, scope: !12967)
!12993 = !DILocation(line: 777, column: 20, scope: !12967)
!12994 = !DILocation(line: 782, column: 15, scope: !12987)
!12995 = !DILocation(line: 782, column: 6, scope: !12967)
!12996 = !DILocation(line: 787, column: 5, scope: !12985)
!12997 = !DILocation(line: 787, column: 5, scope: !12986)
!12998 = !DILocation(line: 790, column: 21, scope: !12986)
!12999 = !DILocation(line: 790, column: 25, scope: !12986)
!13000 = !DILocation(line: 791, column: 21, scope: !12986)
!13001 = !DILocation(line: 791, column: 26, scope: !12986)
!13002 = !DILocation(line: 792, column: 21, scope: !12986)
!13003 = !DILocation(line: 792, column: 27, scope: !12986)
!13004 = !DILocation(line: 793, column: 21, scope: !12986)
!13005 = !DILocation(line: 793, column: 26, scope: !12986)
!13006 = !DILocation(line: 794, column: 21, scope: !12986)
!13007 = !DILocation(line: 794, column: 31, scope: !12986)
!13008 = !DILocation(line: 795, column: 5, scope: !12986)
!13009 = !DILocation(line: 798, column: 5, scope: !12986)
!13010 = !DILocation(line: 804, column: 3, scope: !12986)
!13011 = !DILocation(line: 811, column: 5, scope: !12989)
!13012 = !DILocation(line: 811, column: 5, scope: !12990)
!13013 = !DILocation(line: 814, column: 21, scope: !12990)
!13014 = !DILocation(line: 814, column: 25, scope: !12990)
!13015 = !DILocation(line: 815, column: 21, scope: !12990)
!13016 = !DILocation(line: 815, column: 26, scope: !12990)
!13017 = !DILocation(line: 816, column: 21, scope: !12990)
!13018 = !DILocation(line: 816, column: 27, scope: !12990)
!13019 = !DILocation(line: 817, column: 21, scope: !12990)
!13020 = !DILocation(line: 817, column: 26, scope: !12990)
!13021 = !DILocation(line: 818, column: 21, scope: !12990)
!13022 = !DILocation(line: 818, column: 31, scope: !12990)
!13023 = !DILocation(line: 819, column: 5, scope: !12990)
!13024 = !DILocation(line: 822, column: 5, scope: !12990)
!13025 = !DILocation(line: 0, scope: !12987)
!13026 = !DILocation(line: 830, column: 1, scope: !12967)
!13027 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12976, file: !12976, line: 224, type: !13028, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!13028 = !DISubroutineType(types: !13029)
!13029 = !{null, !3088, !13030}
!13030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12975, size: 32)
!13031 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12452, file: !12452, line: 841, type: !266, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !397)
!13032 = !DILocation(line: 843, column: 38, scope: !13031)
!13033 = !DILocation(line: 844, column: 1, scope: !13031)
!13034 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12452, file: !12452, line: 850, type: !266, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !397)
!13035 = !DILocation(line: 852, column: 38, scope: !13034)
!13036 = !DILocation(line: 853, column: 1, scope: !13034)
!13037 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12452, file: !12452, line: 941, type: !395, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !397)
!13038 = !DILocation(line: 943, column: 10, scope: !13037)
!13039 = !DILocation(line: 943, column: 3, scope: !13037)
!13040 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12452, file: !12452, line: 952, type: !395, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !397)
!13041 = !DILocation(line: 955, column: 11, scope: !13040)
!13042 = !DILocation(line: 955, column: 56, scope: !13040)
!13043 = !DILocation(line: 955, column: 78, scope: !13040)
!13044 = !DILocation(line: 955, column: 36, scope: !13040)
!13045 = !DILocation(line: 955, column: 33, scope: !13040)
!13046 = !DILocation(line: 955, column: 3, scope: !13040)
!13047 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12452, file: !12452, line: 964, type: !395, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !397)
!13048 = !DILocation(line: 967, column: 11, scope: !13047)
!13049 = !DILocation(line: 967, column: 55, scope: !13047)
!13050 = !DILocation(line: 967, column: 77, scope: !13047)
!13051 = !DILocation(line: 967, column: 35, scope: !13047)
!13052 = !DILocation(line: 967, column: 32, scope: !13047)
!13053 = !DILocation(line: 967, column: 3, scope: !13047)
!13054 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12452, file: !12452, line: 977, type: !13055, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !13057)
!13055 = !DISubroutineType(types: !13056)
!13056 = !{null, !12460}
!13057 = !{!13058}
!13058 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13054, file: !12452, line: 977, type: !12460)
!13059 = !DILocation(line: 0, scope: !13054)
!13060 = !DILocation(line: 980, column: 22, scope: !13054)
!13061 = !DILocation(line: 980, column: 37, scope: !13054)
!13062 = !DILocation(line: 983, column: 12, scope: !13063)
!13063 = distinct !DILexicalBlock(scope: !13054, file: !12452, line: 983, column: 6)
!13064 = !DILocation(line: 983, column: 15, scope: !13063)
!13065 = !DILocation(line: 983, column: 31, scope: !13063)
!13066 = !DILocation(line: 983, column: 6, scope: !13054)
!13067 = !DILocation(line: 985, column: 24, scope: !13068)
!13068 = distinct !DILexicalBlock(scope: !13063, file: !12452, line: 984, column: 3)
!13069 = !DILocation(line: 985, column: 33, scope: !13068)
!13070 = !DILocation(line: 986, column: 3, scope: !13068)
!13071 = !DILocation(line: 987, column: 17, scope: !13072)
!13072 = distinct !DILexicalBlock(scope: !13063, file: !12452, line: 987, column: 11)
!13073 = !DILocation(line: 987, column: 20, scope: !13072)
!13074 = !DILocation(line: 987, column: 35, scope: !13072)
!13075 = !DILocation(line: 0, scope: !13072)
!13076 = !DILocation(line: 987, column: 11, scope: !13063)
!13077 = !DILocation(line: 989, column: 33, scope: !13078)
!13078 = distinct !DILexicalBlock(scope: !13072, file: !12452, line: 988, column: 3)
!13079 = !DILocation(line: 990, column: 3, scope: !13078)
!13080 = !DILocation(line: 993, column: 33, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13072, file: !12452, line: 992, column: 3)
!13082 = !DILocation(line: 997, column: 12, scope: !13083)
!13083 = distinct !DILexicalBlock(scope: !13054, file: !12452, line: 997, column: 6)
!13084 = !DILocation(line: 997, column: 15, scope: !13083)
!13085 = !DILocation(line: 1003, column: 24, scope: !13086)
!13086 = distinct !DILexicalBlock(scope: !13083, file: !12452, line: 1002, column: 3)
!13087 = !DILocation(line: 1003, column: 33, scope: !13086)
!13088 = !DILocation(line: 1006, column: 61, scope: !13054)
!13089 = !DILocation(line: 1006, column: 81, scope: !13054)
!13090 = !DILocation(line: 1006, column: 22, scope: !13054)
!13091 = !DILocation(line: 1006, column: 42, scope: !13054)
!13092 = !DILocation(line: 1009, column: 12, scope: !13093)
!13093 = distinct !DILexicalBlock(scope: !13054, file: !12452, line: 1009, column: 6)
!13094 = !DILocation(line: 1009, column: 17, scope: !13093)
!13095 = !DILocation(line: 1009, column: 35, scope: !13093)
!13096 = !DILocation(line: 1009, column: 6, scope: !13054)
!13097 = !DILocation(line: 1011, column: 24, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13093, file: !12452, line: 1010, column: 3)
!13099 = !DILocation(line: 1011, column: 33, scope: !13098)
!13100 = !DILocation(line: 1012, column: 3, scope: !13098)
!13101 = !DILocation(line: 1013, column: 17, scope: !13102)
!13102 = distinct !DILexicalBlock(scope: !13093, file: !12452, line: 1013, column: 11)
!13103 = !DILocation(line: 1013, column: 22, scope: !13102)
!13104 = !DILocation(line: 1013, column: 39, scope: !13102)
!13105 = !DILocation(line: 0, scope: !13102)
!13106 = !DILocation(line: 1013, column: 11, scope: !13093)
!13107 = !DILocation(line: 1015, column: 33, scope: !13108)
!13108 = distinct !DILexicalBlock(scope: !13102, file: !12452, line: 1014, column: 3)
!13109 = !DILocation(line: 1016, column: 3, scope: !13108)
!13110 = !DILocation(line: 1019, column: 33, scope: !13111)
!13111 = distinct !DILexicalBlock(scope: !13102, file: !12452, line: 1018, column: 3)
!13112 = !DILocation(line: 1023, column: 12, scope: !13113)
!13113 = distinct !DILexicalBlock(scope: !13054, file: !12452, line: 1023, column: 6)
!13114 = !DILocation(line: 1023, column: 16, scope: !13113)
!13115 = !DILocation(line: 1029, column: 24, scope: !13116)
!13116 = distinct !DILexicalBlock(scope: !13113, file: !12452, line: 1028, column: 3)
!13117 = !DILocation(line: 1029, column: 33, scope: !13116)
!13118 = !DILocation(line: 1033, column: 12, scope: !13119)
!13119 = distinct !DILexicalBlock(scope: !13054, file: !12452, line: 1033, column: 6)
!13120 = !DILocation(line: 1033, column: 15, scope: !13119)
!13121 = !DILocation(line: 1033, column: 30, scope: !13119)
!13122 = !DILocation(line: 1033, column: 6, scope: !13054)
!13123 = !DILocation(line: 1039, column: 28, scope: !13124)
!13124 = distinct !DILexicalBlock(scope: !13119, file: !12452, line: 1038, column: 3)
!13125 = !DILocation(line: 1039, column: 37, scope: !13124)
!13126 = !DILocation(line: 1041, column: 54, scope: !13054)
!13127 = !DILocation(line: 1041, column: 62, scope: !13054)
!13128 = !DILocation(line: 1041, column: 26, scope: !13054)
!13129 = !DILocation(line: 1041, column: 36, scope: !13054)
!13130 = !DILocation(line: 1042, column: 49, scope: !13054)
!13131 = !DILocation(line: 1042, column: 57, scope: !13054)
!13132 = !DILocation(line: 1042, column: 26, scope: !13054)
!13133 = !DILocation(line: 1042, column: 31, scope: !13054)
!13134 = !DILocation(line: 1043, column: 50, scope: !13054)
!13135 = !DILocation(line: 1043, column: 78, scope: !13054)
!13136 = !DILocation(line: 1043, column: 26, scope: !13054)
!13137 = !DILocation(line: 1043, column: 31, scope: !13054)
!13138 = !DILocation(line: 1044, column: 52, scope: !13054)
!13139 = !DILocation(line: 1044, column: 102, scope: !13054)
!13140 = !DILocation(line: 1044, column: 109, scope: !13054)
!13141 = !DILocation(line: 1044, column: 26, scope: !13054)
!13142 = !DILocation(line: 1044, column: 31, scope: !13054)
!13143 = !DILocation(line: 1045, column: 50, scope: !13054)
!13144 = !DILocation(line: 1045, column: 78, scope: !13054)
!13145 = !DILocation(line: 1045, column: 26, scope: !13054)
!13146 = !DILocation(line: 1045, column: 31, scope: !13054)
!13147 = !DILocation(line: 1046, column: 1, scope: !13054)
!13148 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12452, file: !12452, line: 1056, type: !13149, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !13151)
!13149 = !DISubroutineType(types: !13150)
!13150 = !{null, !12815, !1010}
!13151 = !{!13152, !13153}
!13152 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !13148, file: !12452, line: 1056, type: !12815)
!13153 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !13148, file: !12452, line: 1056, type: !1010)
!13154 = !DILocation(line: 0, scope: !13148)
!13155 = !DILocation(line: 1059, column: 22, scope: !13148)
!13156 = !DILocation(line: 1059, column: 32, scope: !13148)
!13157 = !DILocation(line: 1062, column: 53, scope: !13148)
!13158 = !DILocation(line: 1062, column: 58, scope: !13148)
!13159 = !DILocation(line: 1062, column: 22, scope: !13148)
!13160 = !DILocation(line: 1062, column: 35, scope: !13148)
!13161 = !DILocation(line: 1065, column: 54, scope: !13148)
!13162 = !DILocation(line: 1065, column: 59, scope: !13148)
!13163 = !DILocation(line: 1065, column: 22, scope: !13148)
!13164 = !DILocation(line: 1065, column: 36, scope: !13148)
!13165 = !DILocation(line: 1068, column: 55, scope: !13148)
!13166 = !DILocation(line: 1068, column: 60, scope: !13148)
!13167 = !DILocation(line: 1068, column: 22, scope: !13148)
!13168 = !DILocation(line: 1068, column: 37, scope: !13148)
!13169 = !DILocation(line: 1071, column: 56, scope: !13148)
!13170 = !DILocation(line: 1071, column: 79, scope: !13148)
!13171 = !DILocation(line: 1071, column: 22, scope: !13148)
!13172 = !DILocation(line: 1071, column: 37, scope: !13148)
!13173 = !DILocation(line: 1074, column: 34, scope: !13148)
!13174 = !DILocation(line: 1074, column: 38, scope: !13148)
!13175 = !DILocation(line: 1074, column: 14, scope: !13148)
!13176 = !DILocation(line: 1075, column: 1, scope: !13148)
!13177 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12452, file: !12452, line: 1082, type: !266, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !397)
!13178 = !DILocation(line: 1085, column: 6, scope: !13179)
!13179 = distinct !DILexicalBlock(scope: !13177, file: !12452, line: 1085, column: 6)
!13180 = !DILocation(line: 1085, column: 6, scope: !13177)
!13181 = !DILocation(line: 1088, column: 5, scope: !13182)
!13182 = distinct !DILexicalBlock(scope: !13179, file: !12452, line: 1086, column: 3)
!13183 = !DILocation(line: 1091, column: 5, scope: !13182)
!13184 = !DILocation(line: 1092, column: 3, scope: !13182)
!13185 = !DILocation(line: 1093, column: 1, scope: !13177)
!13186 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12452, file: !12452, line: 1099, type: !266, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !397)
!13187 = !DILocation(line: 1104, column: 1, scope: !13186)
!13188 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !13189, file: !13189, line: 257, type: !7898, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !13190)
!13189 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13190 = !{!13191}
!13191 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13188, file: !13189, line: 257, type: !113)
!13192 = !DILocation(line: 0, scope: !13188)
!13193 = !DILocation(line: 260, column: 3, scope: !13188)
!13194 = !DILocation(line: 261, column: 1, scope: !13188)
!13195 = distinct !DISubprogram(name: "LL_InitTick", scope: !13196, file: !13196, line: 260, type: !10811, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !13197)
!13196 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13197 = !{!13198, !13199}
!13198 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13195, file: !13196, line: 260, type: !113)
!13199 = !DILocalVariable(name: "Ticks", arg: 2, scope: !13195, file: !13196, line: 260, type: !113)
!13200 = !DILocation(line: 0, scope: !13195)
!13201 = !DILocation(line: 263, column: 46, scope: !13195)
!13202 = !DILocation(line: 263, column: 55, scope: !13195)
!13203 = !DILocation(line: 263, column: 18, scope: !13195)
!13204 = !DILocation(line: 264, column: 18, scope: !13195)
!13205 = !DILocation(line: 265, column: 18, scope: !13195)
!13206 = !DILocation(line: 267, column: 1, scope: !13195)
!13207 = distinct !DISubprogram(name: "LL_mDelay", scope: !13189, file: !13189, line: 273, type: !7898, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !13208)
!13208 = !{!13209, !13210}
!13209 = !DILocalVariable(name: "Delay", arg: 1, scope: !13207, file: !13189, line: 273, type: !113)
!13210 = !DILocalVariable(name: "tmp", scope: !13207, file: !13189, line: 275, type: !461)
!13211 = !DILocation(line: 0, scope: !13207)
!13212 = !DILocation(line: 275, column: 3, scope: !13207)
!13213 = !DILocation(line: 275, column: 18, scope: !13207)
!13214 = !DILocation(line: 275, column: 33, scope: !13207)
!13215 = !DILocation(line: 277, column: 10, scope: !13207)
!13216 = !DILocation(line: 280, column: 12, scope: !13217)
!13217 = distinct !DILexicalBlock(scope: !13207, file: !13189, line: 280, column: 6)
!13218 = !DILocation(line: 285, column: 3, scope: !13207)
!13219 = !DILocation(line: 287, column: 18, scope: !13220)
!13220 = distinct !DILexicalBlock(scope: !13221, file: !13189, line: 287, column: 8)
!13221 = distinct !DILexicalBlock(scope: !13207, file: !13189, line: 286, column: 3)
!13222 = !DILocation(line: 292, column: 1, scope: !13207)
!13223 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !13189, file: !13189, line: 323, type: !7898, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !13224)
!13224 = !{!13225}
!13225 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13223, file: !13189, line: 323, type: !113)
!13226 = !DILocation(line: 0, scope: !13223)
!13227 = !DILocation(line: 326, column: 19, scope: !13223)
!13228 = !DILocation(line: 327, column: 1, scope: !13223)
!13229 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !13189, file: !13189, line: 338, type: !13230, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !13233)
!13230 = !DISubroutineType(types: !13231)
!13231 = !{!13232, !113}
!13232 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !954, line: 201, baseType: !953)
!13233 = !{!13234, !13235, !13236, !13237, !13238}
!13234 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !13229, file: !13189, line: 338, type: !113)
!13235 = !DILocalVariable(name: "timeout", scope: !13229, file: !13189, line: 340, type: !113)
!13236 = !DILocalVariable(name: "getlatency", scope: !13229, file: !13189, line: 341, type: !113)
!13237 = !DILocalVariable(name: "latency", scope: !13229, file: !13189, line: 342, type: !113)
!13238 = !DILocalVariable(name: "status", scope: !13229, file: !13189, line: 343, type: !13232)
!13239 = !DILocation(line: 0, scope: !13229)
!13240 = !DILocation(line: 347, column: 21, scope: !13241)
!13241 = distinct !DILexicalBlock(scope: !13229, file: !13189, line: 347, column: 6)
!13242 = !DILocation(line: 347, column: 6, scope: !13229)
!13243 = !DILocation(line: 353, column: 8, scope: !13244)
!13244 = distinct !DILexicalBlock(scope: !13245, file: !13189, line: 353, column: 8)
!13245 = distinct !DILexicalBlock(scope: !13241, file: !13189, line: 352, column: 3)
!13246 = !DILocation(line: 387, column: 8, scope: !13247)
!13247 = distinct !DILexicalBlock(scope: !13245, file: !13189, line: 387, column: 8)
!13248 = !DILocation(line: 387, column: 40, scope: !13247)
!13249 = !DILocation(line: 387, column: 8, scope: !13245)
!13250 = !DILocation(line: 407, column: 26, scope: !13251)
!13251 = distinct !DILexicalBlock(scope: !13252, file: !13189, line: 407, column: 10)
!13252 = distinct !DILexicalBlock(scope: !13247, file: !13189, line: 388, column: 5)
!13253 = !DILocation(line: 407, column: 55, scope: !13251)
!13254 = !DILocation(line: 413, column: 28, scope: !13255)
!13255 = distinct !DILexicalBlock(scope: !13256, file: !13189, line: 413, column: 12)
!13256 = distinct !DILexicalBlock(scope: !13251, file: !13189, line: 412, column: 7)
!13257 = !DILocation(line: 413, column: 57, scope: !13255)
!13258 = !DILocation(line: 420, column: 8, scope: !13259)
!13259 = distinct !DILexicalBlock(scope: !13245, file: !13189, line: 420, column: 8)
!13260 = !DILocation(line: 420, column: 40, scope: !13259)
!13261 = !DILocation(line: 420, column: 8, scope: !13245)
!13262 = !DILocation(line: 429, column: 26, scope: !13263)
!13263 = distinct !DILexicalBlock(scope: !13264, file: !13189, line: 429, column: 10)
!13264 = distinct !DILexicalBlock(scope: !13259, file: !13189, line: 421, column: 5)
!13265 = !DILocation(line: 429, column: 55, scope: !13263)
!13266 = !DILocation(line: 435, column: 28, scope: !13267)
!13267 = distinct !DILexicalBlock(scope: !13268, file: !13189, line: 435, column: 12)
!13268 = distinct !DILexicalBlock(scope: !13263, file: !13189, line: 434, column: 7)
!13269 = !DILocation(line: 435, column: 57, scope: !13267)
!13270 = !DILocation(line: 0, scope: !13245)
!13271 = !DILocation(line: 444, column: 5, scope: !13245)
!13272 = !DILocation(line: 448, column: 5, scope: !13245)
!13273 = !DILocation(line: 451, column: 18, scope: !13274)
!13274 = distinct !DILexicalBlock(scope: !13245, file: !13189, line: 449, column: 5)
!13275 = !DILocation(line: 452, column: 12, scope: !13274)
!13276 = !DILocation(line: 453, column: 26, scope: !13245)
!13277 = !DILocation(line: 453, column: 38, scope: !13245)
!13278 = !DILocation(line: 453, column: 5, scope: !13274)
!13279 = distinct !{!13279, !13272, !13280}
!13280 = !DILocation(line: 453, column: 54, scope: !13245)
!13281 = !DILocation(line: 0, scope: !13241)
!13282 = !DILocation(line: 464, column: 3, scope: !13229)
!13283 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !13284, file: !13284, line: 519, type: !395, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !397)
!13284 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13285 = !DILocation(line: 521, column: 21, scope: !13283)
!13286 = !DILocation(line: 521, column: 3, scope: !13283)
!13287 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !7506, file: !7506, line: 1543, type: !7898, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !13288)
!13288 = !{!13289}
!13289 = !DILocalVariable(name: "Latency", arg: 1, scope: !13287, file: !7506, line: 1543, type: !113)
!13290 = !DILocation(line: 0, scope: !13287)
!13291 = !DILocation(line: 1545, column: 3, scope: !13287)
!13292 = !DILocation(line: 1546, column: 1, scope: !13287)
!13293 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !7506, file: !7506, line: 1569, type: !395, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !397)
!13294 = !DILocation(line: 1571, column: 21, scope: !13293)
!13295 = !DILocation(line: 1571, column: 3, scope: !13293)
!13296 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !13189, file: !13189, line: 483, type: !13297, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !13313)
!13297 = !DISubroutineType(types: !13298)
!13298 = !{!13232, !13299, !13306}
!13299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13300, size: 32)
!13300 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !13196, line: 114, baseType: !13301)
!13301 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13196, line: 94, size: 96, elements: !13302)
!13302 = !{!13303, !13304, !13305}
!13303 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13301, file: !13196, line: 96, baseType: !113, size: 32)
!13304 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13301, file: !13196, line: 102, baseType: !113, size: 32, offset: 32)
!13305 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13301, file: !13196, line: 109, baseType: !113, size: 32, offset: 64)
!13306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13307, size: 32)
!13307 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !13196, line: 139, baseType: !13308)
!13308 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13196, line: 119, size: 96, elements: !13309)
!13309 = !{!13310, !13311, !13312}
!13310 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13308, file: !13196, line: 121, baseType: !113, size: 32)
!13311 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13308, file: !13196, line: 127, baseType: !113, size: 32, offset: 32)
!13312 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13308, file: !13196, line: 133, baseType: !113, size: 32, offset: 64)
!13313 = !{!13314, !13315, !13316, !13317}
!13314 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13296, file: !13189, line: 483, type: !13299)
!13315 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13296, file: !13189, line: 484, type: !13306)
!13316 = !DILocalVariable(name: "status", scope: !13296, file: !13189, line: 486, type: !13232)
!13317 = !DILocalVariable(name: "pllfreq", scope: !13296, file: !13189, line: 487, type: !113)
!13318 = !DILocation(line: 0, scope: !13296)
!13319 = !DILocation(line: 490, column: 6, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !13296, file: !13189, line: 490, column: 6)
!13321 = !DILocation(line: 490, column: 25, scope: !13320)
!13322 = !DILocation(line: 490, column: 6, scope: !13296)
!13323 = !DILocation(line: 493, column: 15, scope: !13324)
!13324 = distinct !DILexicalBlock(scope: !13320, file: !13189, line: 491, column: 3)
!13325 = !DILocation(line: 496, column: 8, scope: !13326)
!13326 = distinct !DILexicalBlock(scope: !13324, file: !13189, line: 496, column: 8)
!13327 = !DILocation(line: 496, column: 29, scope: !13326)
!13328 = !DILocation(line: 496, column: 8, scope: !13324)
!13329 = !DILocation(line: 498, column: 7, scope: !13330)
!13330 = distinct !DILexicalBlock(scope: !13326, file: !13189, line: 497, column: 5)
!13331 = !DILocation(line: 499, column: 7, scope: !13330)
!13332 = !DILocation(line: 499, column: 14, scope: !13330)
!13333 = !DILocation(line: 499, column: 35, scope: !13330)
!13334 = distinct !{!13334, !13331, !13335}
!13335 = !DILocation(line: 502, column: 7, scope: !13330)
!13336 = !DILocation(line: 506, column: 76, scope: !13324)
!13337 = !DILocation(line: 506, column: 103, scope: !13324)
!13338 = !DILocation(line: 507, column: 54, scope: !13324)
!13339 = !DILocation(line: 506, column: 5, scope: !13324)
!13340 = !DILocation(line: 510, column: 14, scope: !13324)
!13341 = !DILocation(line: 511, column: 3, scope: !13324)
!13342 = !DILocation(line: 0, scope: !13320)
!13343 = !DILocation(line: 518, column: 3, scope: !13296)
!13344 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !13189, file: !13189, line: 642, type: !13345, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !13347)
!13345 = !DISubroutineType(types: !13346)
!13346 = !{!13232}
!13347 = !{!13348}
!13348 = !DILocalVariable(name: "status", scope: !13344, file: !13189, line: 644, type: !13232)
!13349 = !DILocation(line: 0, scope: !13344)
!13350 = !DILocation(line: 647, column: 6, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13344, file: !13189, line: 647, column: 6)
!13352 = !DILocation(line: 647, column: 27, scope: !13351)
!13353 = !DILocation(line: 663, column: 6, scope: !13354)
!13354 = distinct !DILexicalBlock(scope: !13344, file: !13189, line: 663, column: 6)
!13355 = !DILocation(line: 663, column: 30, scope: !13354)
!13356 = !DILocation(line: 663, column: 6, scope: !13344)
!13357 = !DILocation(line: 669, column: 3, scope: !13344)
!13358 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !13189, file: !13189, line: 611, type: !13359, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !13361)
!13359 = !DISubroutineType(types: !13360)
!13360 = !{!113, !113, !13299}
!13361 = !{!13362, !13363, !13364}
!13362 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13358, file: !13189, line: 611, type: !113)
!13363 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13358, file: !13189, line: 611, type: !13299)
!13364 = !DILocalVariable(name: "pllfreq", scope: !13358, file: !13189, line: 613, type: !113)
!13365 = !DILocation(line: 0, scope: !13358)
!13366 = !DILocation(line: 622, column: 56, scope: !13358)
!13367 = !DILocation(line: 622, column: 61, scope: !13358)
!13368 = !DILocation(line: 622, column: 32, scope: !13358)
!13369 = !DILocation(line: 626, column: 45, scope: !13358)
!13370 = !DILocation(line: 626, column: 50, scope: !13358)
!13371 = !DILocation(line: 626, column: 21, scope: !13358)
!13372 = !DILocation(line: 630, column: 47, scope: !13358)
!13373 = !DILocation(line: 630, column: 82, scope: !13358)
!13374 = !DILocation(line: 630, column: 21, scope: !13358)
!13375 = !DILocation(line: 633, column: 3, scope: !13358)
!13376 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10137, file: !10137, line: 3007, type: !395, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !397)
!13377 = !DILocation(line: 3009, column: 11, scope: !13376)
!13378 = !DILocation(line: 3009, column: 44, scope: !13376)
!13379 = !DILocation(line: 3009, column: 3, scope: !13376)
!13380 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10137, file: !10137, line: 2987, type: !266, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !397)
!13381 = !DILocation(line: 2989, column: 3, scope: !13380)
!13382 = !DILocation(line: 2990, column: 1, scope: !13380)
!13383 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10137, file: !10137, line: 4304, type: !10271, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !13384)
!13384 = !{!13385, !13386, !13387, !13388}
!13385 = !DILocalVariable(name: "Source", arg: 1, scope: !13383, file: !10137, line: 4304, type: !113)
!13386 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13383, file: !10137, line: 4304, type: !113)
!13387 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13383, file: !10137, line: 4304, type: !113)
!13388 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13383, file: !10137, line: 4304, type: !113)
!13389 = !DILocation(line: 0, scope: !13383)
!13390 = !DILocation(line: 4306, column: 3, scope: !13383)
!13391 = !DILocation(line: 4308, column: 3, scope: !13383)
!13392 = !DILocation(line: 4312, column: 1, scope: !13383)
!13393 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !13189, file: !13189, line: 681, type: !13394, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !13396)
!13394 = !DISubroutineType(types: !13395)
!13395 = !{!13232, !113, !13306}
!13396 = !{!13397, !13398, !13399, !13400}
!13397 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13393, file: !13189, line: 681, type: !113)
!13398 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13393, file: !13189, line: 681, type: !13306)
!13399 = !DILocalVariable(name: "status", scope: !13393, file: !13189, line: 683, type: !13232)
!13400 = !DILocalVariable(name: "hclk_frequency", scope: !13393, file: !13189, line: 684, type: !113)
!13401 = !DILocation(line: 0, scope: !13393)
!13402 = !DILocation(line: 691, column: 20, scope: !13393)
!13403 = !DILocation(line: 694, column: 6, scope: !13404)
!13404 = distinct !DILexicalBlock(scope: !13393, file: !13189, line: 694, column: 6)
!13405 = !DILocation(line: 694, column: 22, scope: !13404)
!13406 = !DILocation(line: 694, column: 6, scope: !13393)
!13407 = !DILocation(line: 697, column: 14, scope: !13408)
!13408 = distinct !DILexicalBlock(scope: !13404, file: !13189, line: 695, column: 3)
!13409 = !DILocation(line: 701, column: 13, scope: !13410)
!13410 = distinct !DILexicalBlock(scope: !13393, file: !13189, line: 701, column: 6)
!13411 = !DILocation(line: 701, column: 6, scope: !13393)
!13412 = !DILocation(line: 704, column: 5, scope: !13413)
!13413 = distinct !DILexicalBlock(scope: !13410, file: !13189, line: 702, column: 3)
!13414 = !DILocation(line: 705, column: 5, scope: !13413)
!13415 = !DILocation(line: 705, column: 12, scope: !13413)
!13416 = !DILocation(line: 705, column: 33, scope: !13413)
!13417 = distinct !{!13417, !13414, !13418}
!13418 = !DILocation(line: 708, column: 5, scope: !13413)
!13419 = !DILocation(line: 711, column: 49, scope: !13413)
!13420 = !DILocation(line: 711, column: 5, scope: !13413)
!13421 = !DILocation(line: 712, column: 5, scope: !13413)
!13422 = !DILocation(line: 713, column: 5, scope: !13413)
!13423 = !DILocation(line: 713, column: 12, scope: !13413)
!13424 = !DILocation(line: 713, column: 37, scope: !13413)
!13425 = distinct !{!13425, !13422, !13426}
!13426 = !DILocation(line: 716, column: 5, scope: !13413)
!13427 = !DILocation(line: 719, column: 50, scope: !13413)
!13428 = !DILocation(line: 719, column: 5, scope: !13413)
!13429 = !DILocation(line: 720, column: 50, scope: !13413)
!13430 = !DILocation(line: 720, column: 5, scope: !13413)
!13431 = !DILocation(line: 721, column: 3, scope: !13413)
!13432 = !DILocation(line: 724, column: 6, scope: !13433)
!13433 = distinct !DILexicalBlock(scope: !13393, file: !13189, line: 724, column: 6)
!13434 = !DILocation(line: 724, column: 22, scope: !13433)
!13435 = !DILocation(line: 724, column: 6, scope: !13393)
!13436 = !DILocation(line: 727, column: 14, scope: !13437)
!13437 = distinct !DILexicalBlock(scope: !13433, file: !13189, line: 725, column: 3)
!13438 = !DILocation(line: 728, column: 3, scope: !13437)
!13439 = !DILocation(line: 731, column: 13, scope: !13440)
!13440 = distinct !DILexicalBlock(scope: !13393, file: !13189, line: 731, column: 6)
!13441 = !DILocation(line: 731, column: 6, scope: !13393)
!13442 = !DILocation(line: 733, column: 5, scope: !13443)
!13443 = distinct !DILexicalBlock(scope: !13440, file: !13189, line: 732, column: 3)
!13444 = !DILocation(line: 734, column: 3, scope: !13443)
!13445 = !DILocation(line: 736, column: 3, scope: !13393)
!13446 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10137, file: !10137, line: 4184, type: !266, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !397)
!13447 = !DILocation(line: 4186, column: 3, scope: !13446)
!13448 = !DILocation(line: 4187, column: 1, scope: !13446)
!13449 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10137, file: !10137, line: 4205, type: !395, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !397)
!13450 = !DILocation(line: 4207, column: 11, scope: !13449)
!13451 = !DILocation(line: 4207, column: 44, scope: !13449)
!13452 = !DILocation(line: 4207, column: 3, scope: !13449)
!13453 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10137, file: !10137, line: 3224, type: !7898, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !13454)
!13454 = !{!13455}
!13455 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13453, file: !10137, line: 3224, type: !113)
!13456 = !DILocation(line: 0, scope: !13453)
!13457 = !DILocation(line: 3226, column: 3, scope: !13453)
!13458 = !DILocation(line: 3227, column: 1, scope: !13453)
!13459 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10137, file: !10137, line: 3188, type: !7898, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !13460)
!13460 = !{!13461}
!13461 = !DILocalVariable(name: "Source", arg: 1, scope: !13459, file: !10137, line: 3188, type: !113)
!13462 = !DILocation(line: 0, scope: !13459)
!13463 = !DILocation(line: 3190, column: 3, scope: !13459)
!13464 = !DILocation(line: 3191, column: 1, scope: !13459)
!13465 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10137, file: !10137, line: 3204, type: !395, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !397)
!13466 = !DILocation(line: 3206, column: 21, scope: !13465)
!13467 = !DILocation(line: 3206, column: 3, scope: !13465)
!13468 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10137, file: !10137, line: 3240, type: !7898, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !13469)
!13469 = !{!13470}
!13470 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13468, file: !10137, line: 3240, type: !113)
!13471 = !DILocation(line: 0, scope: !13468)
!13472 = !DILocation(line: 3242, column: 3, scope: !13468)
!13473 = !DILocation(line: 3243, column: 1, scope: !13468)
!13474 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10137, file: !10137, line: 3256, type: !7898, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !13475)
!13475 = !{!13476}
!13476 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13474, file: !10137, line: 3256, type: !113)
!13477 = !DILocation(line: 0, scope: !13474)
!13478 = !DILocation(line: 3258, column: 3, scope: !13474)
!13479 = !DILocation(line: 3259, column: 1, scope: !13474)
!13480 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !10137, file: !10137, line: 5153, type: !395, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !397)
!13481 = !DILocation(line: 5155, column: 11, scope: !13480)
!13482 = !DILocation(line: 5155, column: 47, scope: !13480)
!13483 = !DILocation(line: 5155, column: 3, scope: !13480)
!13484 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !13189, file: !13189, line: 540, type: !13485, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !13487)
!13485 = !DISubroutineType(types: !13486)
!13486 = !{!13232, !113, !113, !13299, !13306}
!13487 = !{!13488, !13489, !13490, !13491, !13492, !13493}
!13488 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13484, file: !13189, line: 540, type: !113)
!13489 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13484, file: !13189, line: 540, type: !113)
!13490 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13484, file: !13189, line: 541, type: !13299)
!13491 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13484, file: !13189, line: 541, type: !13306)
!13492 = !DILocalVariable(name: "status", scope: !13484, file: !13189, line: 543, type: !13232)
!13493 = !DILocalVariable(name: "pllfreq", scope: !13484, file: !13189, line: 544, type: !113)
!13494 = !DILocation(line: 0, scope: !13484)
!13495 = !DILocation(line: 551, column: 6, scope: !13496)
!13496 = distinct !DILexicalBlock(scope: !13484, file: !13189, line: 551, column: 6)
!13497 = !DILocation(line: 551, column: 25, scope: !13496)
!13498 = !DILocation(line: 551, column: 6, scope: !13484)
!13499 = !DILocation(line: 554, column: 15, scope: !13500)
!13500 = distinct !DILexicalBlock(scope: !13496, file: !13189, line: 552, column: 3)
!13501 = !DILocation(line: 557, column: 8, scope: !13502)
!13502 = distinct !DILexicalBlock(scope: !13500, file: !13189, line: 557, column: 8)
!13503 = !DILocation(line: 557, column: 29, scope: !13502)
!13504 = !DILocation(line: 557, column: 8, scope: !13500)
!13505 = !DILocation(line: 560, column: 20, scope: !13506)
!13506 = distinct !DILexicalBlock(scope: !13507, file: !13189, line: 560, column: 10)
!13507 = distinct !DILexicalBlock(scope: !13502, file: !13189, line: 558, column: 5)
!13508 = !DILocation(line: 560, column: 10, scope: !13507)
!13509 = !DILocation(line: 562, column: 9, scope: !13510)
!13510 = distinct !DILexicalBlock(scope: !13506, file: !13189, line: 561, column: 7)
!13511 = !DILocation(line: 563, column: 7, scope: !13510)
!13512 = !DILocation(line: 566, column: 9, scope: !13513)
!13513 = distinct !DILexicalBlock(scope: !13506, file: !13189, line: 565, column: 7)
!13514 = !DILocation(line: 570, column: 7, scope: !13507)
!13515 = !DILocation(line: 571, column: 7, scope: !13507)
!13516 = !DILocation(line: 571, column: 14, scope: !13507)
!13517 = !DILocation(line: 571, column: 35, scope: !13507)
!13518 = distinct !{!13518, !13515, !13519}
!13519 = !DILocation(line: 574, column: 7, scope: !13507)
!13520 = !DILocation(line: 578, column: 76, scope: !13500)
!13521 = !DILocation(line: 578, column: 103, scope: !13500)
!13522 = !DILocation(line: 579, column: 54, scope: !13500)
!13523 = !DILocation(line: 578, column: 5, scope: !13500)
!13524 = !DILocation(line: 582, column: 14, scope: !13500)
!13525 = !DILocation(line: 583, column: 3, scope: !13500)
!13526 = !DILocation(line: 0, scope: !13496)
!13527 = !DILocation(line: 590, column: 3, scope: !13484)
!13528 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10137, file: !10137, line: 2969, type: !395, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !397)
!13529 = !DILocation(line: 2971, column: 11, scope: !13528)
!13530 = !DILocation(line: 2971, column: 44, scope: !13528)
!13531 = !DILocation(line: 2971, column: 3, scope: !13528)
!13532 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10137, file: !10137, line: 2929, type: !266, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !397)
!13533 = !DILocation(line: 2931, column: 3, scope: !13532)
!13534 = !DILocation(line: 2932, column: 1, scope: !13532)
!13535 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10137, file: !10137, line: 2939, type: !266, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !397)
!13536 = !DILocation(line: 2941, column: 3, scope: !13535)
!13537 = !DILocation(line: 2942, column: 1, scope: !13535)
!13538 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10137, file: !10137, line: 2949, type: !266, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !397)
!13539 = !DILocation(line: 2951, column: 3, scope: !13538)
!13540 = !DILocation(line: 2952, column: 1, scope: !13538)
!13541 = distinct !DISubprogram(name: "z_device_state_init", scope: !13542, file: !13542, line: 23, type: !266, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3166, retainedNodes: !13543)
!13542 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13543 = !{!13544}
!13544 = !DILocalVariable(name: "dev", scope: !13541, file: !13542, line: 25, type: !13545)
!13545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13546, size: 32)
!13546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13547)
!13547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !13548)
!13548 = !{!13549, !13550, !13551, !13552, !13558, !13559}
!13549 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13547, file: !481, line: 380, baseType: !269, size: 32)
!13550 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13547, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!13551 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13547, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!13552 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13547, file: !481, line: 386, baseType: !13553, size: 32, offset: 96)
!13553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13554, size: 32)
!13554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !13555)
!13555 = !{!13556, !13557}
!13556 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13554, file: !481, line: 359, baseType: !169, size: 8)
!13557 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13554, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13558 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13547, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!13559 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13547, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!13560 = !DILocation(line: 0, scope: !13541)
!13561 = !DILocation(line: 31, column: 1, scope: !13541)
!13562 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13542, file: !13542, line: 33, type: !13563, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3166, retainedNodes: !13565)
!13563 = !DISubroutineType(types: !13564)
!13564 = !{!13545, !269}
!13565 = !{!13566, !13567}
!13566 = !DILocalVariable(name: "name", arg: 1, scope: !13562, file: !13542, line: 33, type: !269)
!13567 = !DILocalVariable(name: "dev", scope: !13562, file: !13542, line: 35, type: !13545)
!13568 = !DILocation(line: 0, scope: !13562)
!13569 = !DILocation(line: 40, column: 12, scope: !13570)
!13570 = distinct !DILexicalBlock(scope: !13562, file: !13542, line: 40, column: 6)
!13571 = !DILocation(line: 40, column: 21, scope: !13570)
!13572 = !DILocation(line: 40, column: 25, scope: !13570)
!13573 = !DILocation(line: 40, column: 33, scope: !13570)
!13574 = !DILocation(line: 40, column: 6, scope: !13562)
!13575 = !DILocation(line: 55, column: 2, scope: !13576)
!13576 = distinct !DILexicalBlock(scope: !13562, file: !13542, line: 55, column: 2)
!13577 = !DILocation(line: 50, column: 7, scope: !13578)
!13578 = distinct !DILexicalBlock(scope: !13579, file: !13542, line: 50, column: 7)
!13579 = distinct !DILexicalBlock(scope: !13580, file: !13542, line: 49, column: 57)
!13580 = distinct !DILexicalBlock(scope: !13581, file: !13542, line: 49, column: 2)
!13581 = distinct !DILexicalBlock(scope: !13562, file: !13542, line: 49, column: 2)
!13582 = !DILocation(line: 50, column: 30, scope: !13578)
!13583 = !DILocation(line: 50, column: 39, scope: !13578)
!13584 = !DILocation(line: 50, column: 44, scope: !13578)
!13585 = !DILocation(line: 50, column: 7, scope: !13579)
!13586 = !DILocation(line: 49, column: 53, scope: !13580)
!13587 = !DILocation(line: 49, column: 33, scope: !13580)
!13588 = !DILocation(line: 49, column: 2, scope: !13581)
!13589 = distinct !{!13589, !13588, !13590}
!13590 = !DILocation(line: 53, column: 2, scope: !13581)
!13591 = !DILocation(line: 56, column: 7, scope: !13592)
!13592 = distinct !DILexicalBlock(scope: !13593, file: !13542, line: 56, column: 7)
!13593 = distinct !DILexicalBlock(scope: !13594, file: !13542, line: 55, column: 57)
!13594 = distinct !DILexicalBlock(scope: !13576, file: !13542, line: 55, column: 2)
!13595 = !DILocation(line: 56, column: 30, scope: !13592)
!13596 = !DILocation(line: 56, column: 52, scope: !13592)
!13597 = !DILocation(line: 56, column: 34, scope: !13592)
!13598 = !DILocation(line: 56, column: 58, scope: !13592)
!13599 = !DILocation(line: 56, column: 7, scope: !13593)
!13600 = !DILocation(line: 55, column: 53, scope: !13594)
!13601 = !DILocation(line: 55, column: 33, scope: !13594)
!13602 = distinct !{!13602, !13575, !13603}
!13603 = !DILocation(line: 59, column: 2, scope: !13576)
!13604 = !DILocation(line: 62, column: 1, scope: !13562)
!13605 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13542, file: !13542, line: 93, type: !13606, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3166, retainedNodes: !13608)
!13606 = !DISubroutineType(types: !13607)
!13607 = !{!492, !13545}
!13608 = !{!13609}
!13609 = !DILocalVariable(name: "dev", arg: 1, scope: !13605, file: !13542, line: 93, type: !13545)
!13610 = !DILocation(line: 0, scope: !13605)
!13611 = !DILocation(line: 99, column: 10, scope: !13612)
!13612 = distinct !DILexicalBlock(scope: !13605, file: !13542, line: 99, column: 6)
!13613 = !DILocation(line: 99, column: 6, scope: !13605)
!13614 = !DILocation(line: 103, column: 14, scope: !13605)
!13615 = !DILocation(line: 103, column: 21, scope: !13605)
!13616 = !DILocation(line: 103, column: 33, scope: !13605)
!13617 = !DILocation(line: 103, column: 49, scope: !13605)
!13618 = !DILocation(line: 103, column: 58, scope: !13605)
!13619 = !DILocation(line: 104, column: 1, scope: !13605)
!13620 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13542, file: !13542, line: 87, type: !13621, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3166, retainedNodes: !13624)
!13621 = !DISubroutineType(types: !13622)
!13622 = !{!111, !13623}
!13623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13545, size: 32)
!13624 = !{!13625}
!13625 = !DILocalVariable(name: "devices", arg: 1, scope: !13620, file: !13542, line: 87, type: !13623)
!13626 = !DILocation(line: 0, scope: !13620)
!13627 = !DILocation(line: 89, column: 11, scope: !13620)
!13628 = !DILocation(line: 90, column: 2, scope: !13620)
!13629 = distinct !DISubprogram(name: "device_required_foreach", scope: !13542, file: !13542, line: 125, type: !13630, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3166, retainedNodes: !13636)
!13630 = !DISubroutineType(types: !13631)
!13631 = !{!105, !13545, !13632, !104}
!13632 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !481, line: 471, baseType: !13633)
!13633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13634, size: 32)
!13634 = !DISubroutineType(types: !13635)
!13635 = !{!105, !13545, !104}
!13636 = !{!13637, !13638, !13639, !13640, !13641}
!13637 = !DILocalVariable(name: "dev", arg: 1, scope: !13629, file: !13542, line: 125, type: !13545)
!13638 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13629, file: !13542, line: 126, type: !13632)
!13639 = !DILocalVariable(name: "context", arg: 3, scope: !13629, file: !13542, line: 127, type: !104)
!13640 = !DILocalVariable(name: "handle_count", scope: !13629, file: !13542, line: 129, type: !111)
!13641 = !DILocalVariable(name: "handles", scope: !13629, file: !13542, line: 130, type: !495)
!13642 = !DILocation(line: 0, scope: !13629)
!13643 = !DILocation(line: 129, column: 2, scope: !13629)
!13644 = !DILocation(line: 129, column: 9, scope: !13629)
!13645 = !DILocation(line: 130, column: 35, scope: !13629)
!13646 = !DILocation(line: 132, column: 33, scope: !13629)
!13647 = !DILocation(line: 132, column: 9, scope: !13629)
!13648 = !DILocation(line: 133, column: 1, scope: !13629)
!13649 = !DILocation(line: 132, column: 2, scope: !13629)
!13650 = distinct !DISubprogram(name: "device_required_handles_get", scope: !481, file: !481, line: 493, type: !13651, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3166, retainedNodes: !13653)
!13651 = !DISubroutineType(types: !13652)
!13652 = !{!495, !13545, !2657}
!13653 = !{!13654, !13655, !13656, !13657}
!13654 = !DILocalVariable(name: "dev", arg: 1, scope: !13650, file: !481, line: 493, type: !13545)
!13655 = !DILocalVariable(name: "count", arg: 2, scope: !13650, file: !481, line: 493, type: !2657)
!13656 = !DILocalVariable(name: "rv", scope: !13650, file: !481, line: 495, type: !495)
!13657 = !DILocalVariable(name: "i", scope: !13658, file: !481, line: 498, type: !111)
!13658 = distinct !DILexicalBlock(scope: !13659, file: !481, line: 497, column: 18)
!13659 = distinct !DILexicalBlock(scope: !13650, file: !481, line: 497, column: 6)
!13660 = !DILocation(line: 0, scope: !13650)
!13661 = !DILocation(line: 495, column: 35, scope: !13650)
!13662 = !DILocation(line: 497, column: 9, scope: !13659)
!13663 = !DILocation(line: 497, column: 6, scope: !13650)
!13664 = !DILocation(line: 0, scope: !13658)
!13665 = !DILocation(line: 500, column: 11, scope: !13658)
!13666 = !DILocation(line: 500, column: 40, scope: !13658)
!13667 = !DILocation(line: 502, column: 4, scope: !13668)
!13668 = distinct !DILexicalBlock(scope: !13658, file: !481, line: 501, column: 40)
!13669 = distinct !{!13669, !13670, !13671}
!13670 = !DILocation(line: 500, column: 3, scope: !13658)
!13671 = !DILocation(line: 503, column: 3, scope: !13658)
!13672 = !DILocation(line: 504, column: 10, scope: !13658)
!13673 = !DILocation(line: 505, column: 2, scope: !13658)
!13674 = !DILocation(line: 507, column: 2, scope: !13650)
!13675 = distinct !DISubprogram(name: "device_visitor", scope: !13542, file: !13542, line: 106, type: !13676, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3166, retainedNodes: !13678)
!13676 = !DISubroutineType(types: !13677)
!13677 = !{!105, !495, !111, !13632, !104}
!13678 = !{!13679, !13680, !13681, !13682, !13683, !13685, !13688, !13689}
!13679 = !DILocalVariable(name: "handles", arg: 1, scope: !13675, file: !13542, line: 106, type: !495)
!13680 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13675, file: !13542, line: 107, type: !111)
!13681 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13675, file: !13542, line: 108, type: !13632)
!13682 = !DILocalVariable(name: "context", arg: 4, scope: !13675, file: !13542, line: 109, type: !104)
!13683 = !DILocalVariable(name: "i", scope: !13684, file: !13542, line: 112, type: !111)
!13684 = distinct !DILexicalBlock(scope: !13675, file: !13542, line: 112, column: 2)
!13685 = !DILocalVariable(name: "dh", scope: !13686, file: !13542, line: 113, type: !497)
!13686 = distinct !DILexicalBlock(scope: !13687, file: !13542, line: 112, column: 44)
!13687 = distinct !DILexicalBlock(scope: !13684, file: !13542, line: 112, column: 2)
!13688 = !DILocalVariable(name: "rdev", scope: !13686, file: !13542, line: 114, type: !13545)
!13689 = !DILocalVariable(name: "rc", scope: !13686, file: !13542, line: 115, type: !105)
!13690 = !DILocation(line: 0, scope: !13675)
!13691 = !DILocation(line: 0, scope: !13684)
!13692 = !DILocation(line: 112, column: 23, scope: !13687)
!13693 = !DILocation(line: 112, column: 2, scope: !13684)
!13694 = distinct !{!13694, !13693, !13695}
!13695 = !DILocation(line: 120, column: 2, scope: !13684)
!13696 = !DILocation(line: 113, column: 24, scope: !13686)
!13697 = !DILocation(line: 0, scope: !13686)
!13698 = !DILocation(line: 114, column: 31, scope: !13686)
!13699 = !DILocation(line: 115, column: 12, scope: !13686)
!13700 = !DILocation(line: 117, column: 10, scope: !13701)
!13701 = distinct !DILexicalBlock(scope: !13686, file: !13542, line: 117, column: 7)
!13702 = !DILocation(line: 112, column: 39, scope: !13687)
!13703 = !DILocation(line: 123, column: 1, scope: !13675)
!13704 = distinct !DISubprogram(name: "device_from_handle", scope: !481, file: !481, line: 439, type: !13705, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3166, retainedNodes: !13707)
!13705 = !DISubroutineType(types: !13706)
!13706 = !{!13545, !497}
!13707 = !{!13708, !13709, !13710}
!13708 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13704, file: !481, line: 439, type: !497)
!13709 = !DILocalVariable(name: "dev", scope: !13704, file: !481, line: 443, type: !13545)
!13710 = !DILocalVariable(name: "numdev", scope: !13704, file: !481, line: 444, type: !111)
!13711 = !DILocation(line: 0, scope: !13704)
!13712 = !DILocation(line: 446, column: 7, scope: !13713)
!13713 = distinct !DILexicalBlock(scope: !13704, file: !481, line: 446, column: 6)
!13714 = !DILocation(line: 446, column: 18, scope: !13713)
!13715 = !DILocation(line: 446, column: 23, scope: !13713)
!13716 = !DILocation(line: 450, column: 2, scope: !13704)
!13717 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13542, file: !13542, line: 135, type: !13630, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3166, retainedNodes: !13718)
!13718 = !{!13719, !13720, !13721, !13722, !13723}
!13719 = !DILocalVariable(name: "dev", arg: 1, scope: !13717, file: !13542, line: 135, type: !13545)
!13720 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13717, file: !13542, line: 136, type: !13632)
!13721 = !DILocalVariable(name: "context", arg: 3, scope: !13717, file: !13542, line: 137, type: !104)
!13722 = !DILocalVariable(name: "handle_count", scope: !13717, file: !13542, line: 139, type: !111)
!13723 = !DILocalVariable(name: "handles", scope: !13717, file: !13542, line: 140, type: !495)
!13724 = !DILocation(line: 0, scope: !13717)
!13725 = !DILocation(line: 139, column: 2, scope: !13717)
!13726 = !DILocation(line: 139, column: 9, scope: !13717)
!13727 = !DILocation(line: 140, column: 35, scope: !13717)
!13728 = !DILocation(line: 142, column: 33, scope: !13717)
!13729 = !DILocation(line: 142, column: 9, scope: !13717)
!13730 = !DILocation(line: 143, column: 1, scope: !13717)
!13731 = !DILocation(line: 142, column: 2, scope: !13717)
!13732 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !481, file: !481, line: 573, type: !13651, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3166, retainedNodes: !13733)
!13733 = !{!13734, !13735, !13736, !13737, !13738}
!13734 = !DILocalVariable(name: "dev", arg: 1, scope: !13732, file: !481, line: 573, type: !13545)
!13735 = !DILocalVariable(name: "count", arg: 2, scope: !13732, file: !481, line: 573, type: !2657)
!13736 = !DILocalVariable(name: "rv", scope: !13732, file: !481, line: 575, type: !495)
!13737 = !DILocalVariable(name: "region", scope: !13732, file: !481, line: 576, type: !111)
!13738 = !DILocalVariable(name: "i", scope: !13732, file: !481, line: 577, type: !111)
!13739 = !DILocation(line: 0, scope: !13732)
!13740 = !DILocation(line: 575, column: 35, scope: !13732)
!13741 = !DILocation(line: 579, column: 9, scope: !13742)
!13742 = distinct !DILexicalBlock(scope: !13732, file: !481, line: 579, column: 6)
!13743 = !DILocation(line: 579, column: 6, scope: !13732)
!13744 = !DILocation(line: 582, column: 8, scope: !13745)
!13745 = distinct !DILexicalBlock(scope: !13746, file: !481, line: 582, column: 8)
!13746 = distinct !DILexicalBlock(scope: !13747, file: !481, line: 581, column: 23)
!13747 = distinct !DILexicalBlock(scope: !13742, file: !481, line: 579, column: 18)
!13748 = !DILocation(line: 582, column: 12, scope: !13745)
!13749 = !DILocation(line: 585, column: 6, scope: !13746)
!13750 = !DILocation(line: 0, scope: !13747)
!13751 = !DILocation(line: 581, column: 17, scope: !13747)
!13752 = !DILocation(line: 581, column: 3, scope: !13747)
!13753 = !DILocation(line: 588, column: 10, scope: !13747)
!13754 = !DILocation(line: 588, column: 16, scope: !13747)
!13755 = !DILocation(line: 589, column: 4, scope: !13756)
!13756 = distinct !DILexicalBlock(scope: !13747, file: !481, line: 588, column: 39)
!13757 = !DILocation(line: 588, column: 3, scope: !13747)
!13758 = distinct !{!13758, !13757, !13759}
!13759 = !DILocation(line: 590, column: 3, scope: !13747)
!13760 = !DILocation(line: 591, column: 10, scope: !13747)
!13761 = !DILocation(line: 592, column: 2, scope: !13747)
!13762 = !DILocation(line: 575, column: 25, scope: !13732)
!13763 = !DILocation(line: 594, column: 2, scope: !13732)
!13764 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1980, file: !1980, line: 49, type: !13765, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !397)
!13765 = !DISubroutineType(types: !13766)
!13766 = !{!428}
!13767 = !DILocation(line: 51, column: 10, scope: !13764)
!13768 = !DILocation(line: 51, column: 20, scope: !13764)
!13769 = !DILocation(line: 51, column: 2, scope: !13764)
!13770 = distinct !DISubprogram(name: "coredump", scope: !3173, file: !3173, line: 209, type: !13771, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !13919)
!13771 = !DISubroutineType(types: !13772)
!13772 = !{null, !32, !13773, !13817}
!13773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13774, size: 32)
!13774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13775)
!13775 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2787, line: 141, baseType: !13776)
!13776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2787, line: 97, size: 256, elements: !13777)
!13777 = !{!13778}
!13778 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13776, file: !2787, line: 107, baseType: !13779, size: 256)
!13779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2787, line: 98, size: 256, elements: !13780)
!13780 = !{!13781, !13786, !13791, !13796, !13801, !13806, !13811, !13816}
!13781 = !DIDerivedType(tag: DW_TAG_member, scope: !13779, file: !2787, line: 99, baseType: !13782, size: 32)
!13782 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13779, file: !2787, line: 99, size: 32, elements: !13783)
!13783 = !{!13784, !13785}
!13784 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13782, file: !2787, line: 99, baseType: !113, size: 32)
!13785 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13782, file: !2787, line: 99, baseType: !113, size: 32)
!13786 = !DIDerivedType(tag: DW_TAG_member, scope: !13779, file: !2787, line: 100, baseType: !13787, size: 32, offset: 32)
!13787 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13779, file: !2787, line: 100, size: 32, elements: !13788)
!13788 = !{!13789, !13790}
!13789 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13787, file: !2787, line: 100, baseType: !113, size: 32)
!13790 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13787, file: !2787, line: 100, baseType: !113, size: 32)
!13791 = !DIDerivedType(tag: DW_TAG_member, scope: !13779, file: !2787, line: 101, baseType: !13792, size: 32, offset: 64)
!13792 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13779, file: !2787, line: 101, size: 32, elements: !13793)
!13793 = !{!13794, !13795}
!13794 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13792, file: !2787, line: 101, baseType: !113, size: 32)
!13795 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13792, file: !2787, line: 101, baseType: !113, size: 32)
!13796 = !DIDerivedType(tag: DW_TAG_member, scope: !13779, file: !2787, line: 102, baseType: !13797, size: 32, offset: 96)
!13797 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13779, file: !2787, line: 102, size: 32, elements: !13798)
!13798 = !{!13799, !13800}
!13799 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13797, file: !2787, line: 102, baseType: !113, size: 32)
!13800 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13797, file: !2787, line: 102, baseType: !113, size: 32)
!13801 = !DIDerivedType(tag: DW_TAG_member, scope: !13779, file: !2787, line: 103, baseType: !13802, size: 32, offset: 128)
!13802 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13779, file: !2787, line: 103, size: 32, elements: !13803)
!13803 = !{!13804, !13805}
!13804 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13802, file: !2787, line: 103, baseType: !113, size: 32)
!13805 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13802, file: !2787, line: 103, baseType: !113, size: 32)
!13806 = !DIDerivedType(tag: DW_TAG_member, scope: !13779, file: !2787, line: 104, baseType: !13807, size: 32, offset: 160)
!13807 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13779, file: !2787, line: 104, size: 32, elements: !13808)
!13808 = !{!13809, !13810}
!13809 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13807, file: !2787, line: 104, baseType: !113, size: 32)
!13810 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13807, file: !2787, line: 104, baseType: !113, size: 32)
!13811 = !DIDerivedType(tag: DW_TAG_member, scope: !13779, file: !2787, line: 105, baseType: !13812, size: 32, offset: 192)
!13812 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13779, file: !2787, line: 105, size: 32, elements: !13813)
!13813 = !{!13814, !13815}
!13814 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13812, file: !2787, line: 105, baseType: !113, size: 32)
!13815 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13812, file: !2787, line: 105, baseType: !113, size: 32)
!13816 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13779, file: !2787, line: 106, baseType: !113, size: 32, offset: 224)
!13817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13818, size: 32)
!13818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !13819)
!13819 = !{!13820, !13878, !13890, !13891, !13892, !13893, !13899, !13914}
!13820 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13818, file: !127, line: 247, baseType: !13821, size: 384)
!13821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !13822)
!13822 = !{!13823, !13847, !13854, !13855, !13856, !13865, !13866, !13867}
!13823 = !DIDerivedType(tag: DW_TAG_member, scope: !13821, file: !127, line: 60, baseType: !13824, size: 64)
!13824 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13821, file: !127, line: 60, size: 64, elements: !13825)
!13825 = !{!13826, !13841}
!13826 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13824, file: !127, line: 61, baseType: !13827, size: 64)
!13827 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !13828)
!13828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !13829)
!13829 = !{!13830, !13836}
!13830 = !DIDerivedType(tag: DW_TAG_member, scope: !13828, file: !137, line: 38, baseType: !13831, size: 32)
!13831 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13828, file: !137, line: 38, size: 32, elements: !13832)
!13832 = !{!13833, !13835}
!13833 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13831, file: !137, line: 39, baseType: !13834, size: 32)
!13834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13828, size: 32)
!13835 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13831, file: !137, line: 40, baseType: !13834, size: 32)
!13836 = !DIDerivedType(tag: DW_TAG_member, scope: !13828, file: !137, line: 42, baseType: !13837, size: 32, offset: 32)
!13837 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13828, file: !137, line: 42, size: 32, elements: !13838)
!13838 = !{!13839, !13840}
!13839 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13837, file: !137, line: 43, baseType: !13834, size: 32)
!13840 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13837, file: !137, line: 44, baseType: !13834, size: 32)
!13841 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13824, file: !127, line: 62, baseType: !13842, size: 64)
!13842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !13843)
!13843 = !{!13844}
!13844 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13842, file: !153, line: 50, baseType: !13845, size: 64)
!13845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13846, size: 64, elements: !158)
!13846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13842, size: 32)
!13847 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13821, file: !127, line: 68, baseType: !13848, size: 32, offset: 64)
!13848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13849, size: 32)
!13849 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !13850)
!13850 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !13851)
!13851 = !{!13852}
!13852 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13850, file: !163, line: 232, baseType: !13853, size: 64)
!13853 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !13828)
!13854 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13821, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!13855 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13821, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!13856 = !DIDerivedType(tag: DW_TAG_member, scope: !13821, file: !127, line: 90, baseType: !13857, size: 16, offset: 112)
!13857 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13821, file: !127, line: 90, size: 16, elements: !13858)
!13858 = !{!13859, !13864}
!13859 = !DIDerivedType(tag: DW_TAG_member, scope: !13857, file: !127, line: 91, baseType: !13860, size: 16)
!13860 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13857, file: !127, line: 91, size: 16, elements: !13861)
!13861 = !{!13862, !13863}
!13862 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13860, file: !127, line: 96, baseType: !179, size: 8)
!13863 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13860, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!13864 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13857, file: !127, line: 100, baseType: !183, size: 16)
!13865 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13821, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!13866 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13821, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!13867 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13821, file: !127, line: 131, baseType: !13868, size: 192, offset: 192)
!13868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !13869)
!13869 = !{!13870, !13871, !13877}
!13870 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13868, file: !163, line: 245, baseType: !13827, size: 64)
!13871 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13868, file: !163, line: 246, baseType: !13872, size: 32, offset: 64)
!13872 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !13873)
!13873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13874, size: 32)
!13874 = !DISubroutineType(types: !13875)
!13875 = !{null, !13876}
!13876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13868, size: 32)
!13877 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13868, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!13878 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13818, file: !127, line: 250, baseType: !13879, size: 288, offset: 384)
!13879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !13880)
!13880 = !{!13881, !13882, !13883, !13884, !13885, !13886, !13887, !13888, !13889}
!13881 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13879, file: !200, line: 26, baseType: !113, size: 32)
!13882 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13879, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!13883 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13879, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!13884 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13879, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!13885 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13879, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!13886 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13879, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!13887 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13879, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!13888 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13879, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!13889 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13879, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!13890 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13818, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!13891 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13818, file: !127, line: 256, baseType: !13849, size: 64, offset: 704)
!13892 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13818, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!13893 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13818, file: !127, line: 300, baseType: !13894, size: 96, offset: 800)
!13894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !13895)
!13895 = !{!13896, !13897, !13898}
!13896 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13894, file: !127, line: 153, baseType: !22, size: 32)
!13897 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13894, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!13898 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13894, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!13899 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13818, file: !127, line: 325, baseType: !13900, size: 32, offset: 896)
!13900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13901, size: 32)
!13901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !13902)
!13902 = !{!13903, !13909, !13910}
!13903 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13901, file: !122, line: 5074, baseType: !13904, size: 96)
!13904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !13905)
!13905 = !{!13906, !13907, !13908}
!13906 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13904, file: !226, line: 57, baseType: !229, size: 32)
!13907 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13904, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!13908 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13904, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!13909 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13901, file: !122, line: 5075, baseType: !13849, size: 64, offset: 96)
!13910 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13901, file: !122, line: 5076, baseType: !13911, size: 32, offset: 160)
!13911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !13912)
!13912 = !{!13913}
!13913 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !13911, file: !236, line: 52, baseType: !22, size: 32)
!13914 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13818, file: !127, line: 343, baseType: !13915, size: 64, offset: 928)
!13915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !13916)
!13916 = !{!13917, !13918}
!13917 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13915, file: !200, line: 63, baseType: !113, size: 32)
!13918 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13915, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!13919 = !{!13920, !13921, !13922}
!13920 = !DILocalVariable(name: "reason", arg: 1, scope: !13770, file: !3173, line: 209, type: !32)
!13921 = !DILocalVariable(name: "esf", arg: 2, scope: !13770, file: !3173, line: 209, type: !13773)
!13922 = !DILocalVariable(name: "thread", arg: 3, scope: !13770, file: !3173, line: 210, type: !13817)
!13923 = !DILocation(line: 0, scope: !13770)
!13924 = !DILocation(line: 212, column: 1, scope: !13770)
!13925 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3173, file: !3173, line: 214, type: !13926, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !13928)
!13926 = !DISubroutineType(types: !13927)
!13927 = !{null, !22, !22}
!13928 = !{!13929, !13930}
!13929 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13925, file: !3173, line: 214, type: !22)
!13930 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13925, file: !3173, line: 214, type: !22)
!13931 = !DILocation(line: 0, scope: !13925)
!13932 = !DILocation(line: 216, column: 1, scope: !13925)
!13933 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3173, file: !3173, line: 218, type: !13934, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !13936)
!13934 = !DISubroutineType(types: !13935)
!13935 = !{null, !432, !111}
!13936 = !{!13937, !13938}
!13937 = !DILocalVariable(name: "buf", arg: 1, scope: !13933, file: !3173, line: 218, type: !432)
!13938 = !DILocalVariable(name: "buflen", arg: 2, scope: !13933, file: !3173, line: 218, type: !111)
!13939 = !DILocation(line: 0, scope: !13933)
!13940 = !DILocation(line: 220, column: 1, scope: !13933)
!13941 = distinct !DISubprogram(name: "coredump_query", scope: !3173, file: !3173, line: 222, type: !13942, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !13944)
!13942 = !DISubroutineType(types: !13943)
!13943 = !{!105, !3172, !104}
!13944 = !{!13945, !13946}
!13945 = !DILocalVariable(name: "query_id", arg: 1, scope: !13941, file: !3173, line: 222, type: !3172)
!13946 = !DILocalVariable(name: "arg", arg: 2, scope: !13941, file: !3173, line: 222, type: !104)
!13947 = !DILocation(line: 0, scope: !13941)
!13948 = !DILocation(line: 224, column: 2, scope: !13941)
!13949 = distinct !DISubprogram(name: "coredump_cmd", scope: !3173, file: !3173, line: 227, type: !13950, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !13952)
!13950 = !DISubroutineType(types: !13951)
!13951 = !{!105, !3179, !104}
!13952 = !{!13953, !13954}
!13953 = !DILocalVariable(name: "query_id", arg: 1, scope: !13949, file: !3173, line: 227, type: !3179)
!13954 = !DILocalVariable(name: "arg", arg: 2, scope: !13949, file: !3173, line: 227, type: !104)
!13955 = !DILocation(line: 0, scope: !13949)
!13956 = !DILocation(line: 229, column: 2, scope: !13949)
!13957 = distinct !DISubprogram(name: "arch_system_halt", scope: !13958, file: !13958, line: 23, type: !7496, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !13959)
!13958 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13959 = !{!13960}
!13960 = !DILocalVariable(name: "reason", arg: 1, scope: !13957, file: !13958, line: 23, type: !32)
!13961 = !DILocation(line: 0, scope: !13957)
!13962 = !DILocation(line: 55, column: 2, scope: !13963, inlinedAt: !13967)
!13963 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7485, file: !7485, line: 42, type: !7486, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !13964)
!13964 = !{!13965, !13966}
!13965 = !DILocalVariable(name: "key", scope: !13963, file: !7485, line: 44, type: !32)
!13966 = !DILocalVariable(name: "tmp", scope: !13963, file: !7485, line: 53, type: !32)
!13967 = distinct !DILocation(line: 31, column: 8, scope: !13957)
!13968 = !{i64 2042503}
!13969 = !DILocation(line: 0, scope: !13963, inlinedAt: !13967)
!13970 = !DILocation(line: 32, column: 2, scope: !13957)
!13971 = !DILocation(line: 32, column: 2, scope: !13972)
!13972 = distinct !DILexicalBlock(scope: !13973, file: !13958, line: 32, column: 2)
!13973 = distinct !DILexicalBlock(scope: !13957, file: !13958, line: 32, column: 2)
!13974 = distinct !{!13974, !13975, !13976}
!13975 = !DILocation(line: 32, column: 2, scope: !13973)
!13976 = !DILocation(line: 34, column: 2, scope: !13973)
!13977 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13958, file: !13958, line: 39, type: !13978, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !13980)
!13978 = !DISubroutineType(types: !13979)
!13979 = !{null, !32, !13773}
!13980 = !{!13981, !13982}
!13981 = !DILocalVariable(name: "reason", arg: 1, scope: !13977, file: !13958, line: 39, type: !32)
!13982 = !DILocalVariable(name: "esf", arg: 2, scope: !13977, file: !13958, line: 40, type: !13773)
!13983 = !DILocation(line: 0, scope: !13977)
!13984 = !DILocation(line: 45, column: 2, scope: !13985)
!13985 = distinct !DILexicalBlock(scope: !13986, file: !13958, line: 45, column: 2)
!13986 = distinct !DILexicalBlock(scope: !13987, file: !13958, line: 45, column: 2)
!13987 = distinct !DILexicalBlock(scope: !13988, file: !13958, line: 45, column: 2)
!13988 = distinct !DILexicalBlock(scope: !13977, file: !13958, line: 45, column: 2)
!13989 = !DILocation(line: 46, column: 2, scope: !13977)
!13990 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13958, file: !13958, line: 81, type: !7496, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !13991)
!13991 = !{!13992}
!13992 = !DILocalVariable(name: "reason", arg: 1, scope: !13990, file: !13958, line: 81, type: !32)
!13993 = !DILocation(line: 0, scope: !13990)
!13994 = !DILocation(line: 83, column: 2, scope: !13990)
!13995 = distinct !DISubprogram(name: "z_fatal_error", scope: !13958, file: !13958, line: 96, type: !13978, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !13996)
!13996 = !{!13997, !13998, !13999, !14000}
!13997 = !DILocalVariable(name: "reason", arg: 1, scope: !13995, file: !13958, line: 96, type: !32)
!13998 = !DILocalVariable(name: "esf", arg: 2, scope: !13995, file: !13958, line: 96, type: !13773)
!13999 = !DILocalVariable(name: "key", scope: !13995, file: !13958, line: 102, type: !32)
!14000 = !DILocalVariable(name: "thread", scope: !13995, file: !13958, line: 103, type: !13817)
!14001 = !DILocation(line: 0, scope: !13995)
!14002 = !DILocation(line: 55, column: 2, scope: !13963, inlinedAt: !14003)
!14003 = distinct !DILocation(line: 102, column: 21, scope: !13995)
!14004 = !DILocation(line: 0, scope: !13963, inlinedAt: !14003)
!14005 = !DILocation(line: 104, column: 4, scope: !13995)
!14006 = !DILocation(line: 109, column: 2, scope: !14007)
!14007 = distinct !DILexicalBlock(scope: !14008, file: !13958, line: 109, column: 2)
!14008 = distinct !DILexicalBlock(scope: !14009, file: !13958, line: 109, column: 2)
!14009 = distinct !DILexicalBlock(scope: !14010, file: !13958, line: 109, column: 2)
!14010 = distinct !DILexicalBlock(scope: !13995, file: !13958, line: 109, column: 2)
!14011 = !DILocation(line: 119, column: 11, scope: !14012)
!14012 = distinct !DILexicalBlock(scope: !13995, file: !13958, line: 119, column: 6)
!14013 = !DILocation(line: 119, column: 20, scope: !14012)
!14014 = !DILocalVariable(name: "esf", arg: 1, scope: !14015, file: !8850, line: 71, type: !13773)
!14015 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8850, file: !8850, line: 71, type: !14016, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !14018)
!14016 = !DISubroutineType(types: !14017)
!14017 = !{!492, !13773}
!14018 = !{!14014}
!14019 = !DILocation(line: 0, scope: !14015, inlinedAt: !14020)
!14020 = distinct !DILocation(line: 119, column: 23, scope: !14012)
!14021 = !DILocation(line: 73, column: 21, scope: !14015, inlinedAt: !14020)
!14022 = !DILocation(line: 73, column: 26, scope: !14015, inlinedAt: !14020)
!14023 = !DILocation(line: 73, column: 9, scope: !14015, inlinedAt: !14020)
!14024 = !DILocation(line: 119, column: 6, scope: !13995)
!14025 = !DILocation(line: 120, column: 3, scope: !14026)
!14026 = distinct !DILexicalBlock(scope: !14027, file: !13958, line: 120, column: 3)
!14027 = distinct !DILexicalBlock(scope: !14028, file: !13958, line: 120, column: 3)
!14028 = distinct !DILexicalBlock(scope: !14029, file: !13958, line: 120, column: 3)
!14029 = distinct !DILexicalBlock(scope: !14030, file: !13958, line: 120, column: 3)
!14030 = distinct !DILexicalBlock(scope: !14012, file: !13958, line: 119, column: 57)
!14031 = !DILocation(line: 121, column: 2, scope: !14030)
!14032 = !DILocation(line: 124, column: 2, scope: !14033)
!14033 = distinct !DILexicalBlock(scope: !14034, file: !13958, line: 124, column: 2)
!14034 = distinct !DILexicalBlock(scope: !14035, file: !13958, line: 124, column: 2)
!14035 = distinct !DILexicalBlock(scope: !14036, file: !13958, line: 124, column: 2)
!14036 = distinct !DILexicalBlock(scope: !13995, file: !13958, line: 124, column: 2)
!14037 = !DILocation(line: 131, column: 2, scope: !13995)
!14038 = !DILocation(line: 147, column: 3, scope: !14039)
!14039 = distinct !DILexicalBlock(scope: !14040, file: !13958, line: 147, column: 3)
!14040 = distinct !DILexicalBlock(scope: !14041, file: !13958, line: 147, column: 3)
!14041 = distinct !DILexicalBlock(scope: !14042, file: !13958, line: 146, column: 32)
!14042 = distinct !DILexicalBlock(scope: !13995, file: !13958, line: 146, column: 6)
!14043 = !DILocation(line: 147, column: 3, scope: !14040)
!14044 = !DILocation(line: 147, column: 3, scope: !14045)
!14045 = distinct !DILexicalBlock(scope: !14039, file: !13958, line: 147, column: 3)
!14046 = !DILocalVariable(name: "key", arg: 1, scope: !14047, file: !7485, line: 84, type: !32)
!14047 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7485, file: !7485, line: 84, type: !7496, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !14048)
!14048 = !{!14046}
!14049 = !DILocation(line: 0, scope: !14047, inlinedAt: !14050)
!14050 = distinct !DILocation(line: 186, column: 2, scope: !13995)
!14051 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !14050)
!14052 = !{i64 2043320}
!14053 = !DILocation(line: 189, column: 3, scope: !14054)
!14054 = distinct !DILexicalBlock(scope: !14055, file: !13958, line: 188, column: 41)
!14055 = distinct !DILexicalBlock(scope: !13995, file: !13958, line: 188, column: 6)
!14056 = !DILocation(line: 191, column: 1, scope: !13995)
!14057 = distinct !DISubprogram(name: "k_current_get", scope: !122, file: !122, line: 530, type: !14058, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !397)
!14058 = !DISubroutineType(types: !14059)
!14059 = !{!14060}
!14060 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !13817)
!14061 = !DILocation(line: 535, column: 9, scope: !14057)
!14062 = !DILocation(line: 535, column: 2, scope: !14057)
!14063 = distinct !DISubprogram(name: "reason_to_str", scope: !13958, file: !13958, line: 62, type: !14064, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !14066)
!14064 = !DISubroutineType(types: !14065)
!14065 = !{!269, !32}
!14066 = !{!14067}
!14067 = !DILocalVariable(name: "reason", arg: 1, scope: !14063, file: !13958, line: 62, type: !32)
!14068 = !DILocation(line: 0, scope: !14063)
!14069 = !DILocation(line: 64, column: 2, scope: !14063)
!14070 = !DILocation(line: 0, scope: !14071)
!14071 = distinct !DILexicalBlock(scope: !14063, file: !13958, line: 64, column: 18)
!14072 = !DILocation(line: 78, column: 1, scope: !14063)
!14073 = distinct !DISubprogram(name: "thread_name_get", scope: !13958, file: !13958, line: 51, type: !14074, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !14076)
!14074 = !DISubroutineType(types: !14075)
!14075 = !{!269, !13817}
!14076 = !{!14077, !14078}
!14077 = !DILocalVariable(name: "thread", arg: 1, scope: !14073, file: !13958, line: 51, type: !13817)
!14078 = !DILocalVariable(name: "thread_name", scope: !14073, file: !13958, line: 53, type: !269)
!14079 = !DILocation(line: 0, scope: !14073)
!14080 = !DILocation(line: 53, column: 36, scope: !14073)
!14081 = !DILocation(line: 53, column: 28, scope: !14073)
!14082 = !DILocation(line: 53, column: 47, scope: !14073)
!14083 = !DILocation(line: 55, column: 19, scope: !14084)
!14084 = distinct !DILexicalBlock(scope: !14073, file: !13958, line: 55, column: 6)
!14085 = !DILocation(line: 55, column: 28, scope: !14084)
!14086 = !DILocation(line: 55, column: 32, scope: !14084)
!14087 = !DILocation(line: 55, column: 47, scope: !14084)
!14088 = !DILocation(line: 55, column: 6, scope: !14073)
!14089 = !DILocation(line: 57, column: 2, scope: !14090)
!14090 = distinct !DILexicalBlock(scope: !14084, file: !13958, line: 55, column: 57)
!14091 = !DILocation(line: 59, column: 2, scope: !14073)
!14092 = distinct !DISubprogram(name: "k_thread_abort", scope: !3458, file: !3458, line: 188, type: !14093, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !14095)
!14093 = !DISubroutineType(types: !14094)
!14094 = !{null, !14060}
!14095 = !{!14096}
!14096 = !DILocalVariable(name: "thread", arg: 1, scope: !14092, file: !3458, line: 188, type: !14060)
!14097 = !DILocation(line: 0, scope: !14092)
!14098 = !DILocation(line: 197, column: 2, scope: !14099)
!14099 = distinct !DILexicalBlock(scope: !14092, file: !3458, line: 197, column: 2)
!14100 = !{i64 2154158821}
!14101 = !DILocation(line: 198, column: 2, scope: !14092)
!14102 = !DILocation(line: 199, column: 1, scope: !14092)
!14103 = distinct !DISubprogram(name: "z_current_get", scope: !3458, file: !3458, line: 173, type: !14058, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3169, retainedNodes: !397)
!14104 = !DILocation(line: 180, column: 2, scope: !14105)
!14105 = distinct !DILexicalBlock(scope: !14103, file: !3458, line: 180, column: 2)
!14106 = !{i64 2154158753}
!14107 = !DILocation(line: 181, column: 9, scope: !14103)
!14108 = !DILocation(line: 181, column: 2, scope: !14103)
!14109 = distinct !DISubprogram(name: "z_early_memset", scope: !1988, file: !1988, line: 108, type: !14110, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1984, retainedNodes: !14112)
!14110 = !DISubroutineType(types: !14111)
!14111 = !{null, !104, !105, !111}
!14112 = !{!14113, !14114, !14115}
!14113 = !DILocalVariable(name: "dst", arg: 1, scope: !14109, file: !1988, line: 108, type: !104)
!14114 = !DILocalVariable(name: "c", arg: 2, scope: !14109, file: !1988, line: 108, type: !105)
!14115 = !DILocalVariable(name: "n", arg: 3, scope: !14109, file: !1988, line: 108, type: !111)
!14116 = !DILocation(line: 0, scope: !14109)
!14117 = !DILocation(line: 110, column: 9, scope: !14109)
!14118 = !DILocation(line: 111, column: 1, scope: !14109)
!14119 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1988, file: !1988, line: 121, type: !14120, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1984, retainedNodes: !14122)
!14120 = !DISubroutineType(types: !14121)
!14121 = !{null, !104, !13, !111}
!14122 = !{!14123, !14124, !14125}
!14123 = !DILocalVariable(name: "dst", arg: 1, scope: !14119, file: !1988, line: 121, type: !104)
!14124 = !DILocalVariable(name: "src", arg: 2, scope: !14119, file: !1988, line: 121, type: !13)
!14125 = !DILocalVariable(name: "n", arg: 3, scope: !14119, file: !1988, line: 121, type: !111)
!14126 = !DILocation(line: 0, scope: !14119)
!14127 = !DILocation(line: 123, column: 9, scope: !14119)
!14128 = !DILocation(line: 124, column: 1, scope: !14119)
!14129 = distinct !DISubprogram(name: "z_bss_zero", scope: !1988, file: !1988, line: 132, type: !266, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1984, retainedNodes: !397)
!14130 = !DILocation(line: 143, column: 2, scope: !14129)
!14131 = !DILocation(line: 168, column: 1, scope: !14129)
!14132 = distinct !DISubprogram(name: "z_init_cpu", scope: !1988, file: !1988, line: 372, type: !9737, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1984, retainedNodes: !14133)
!14133 = !{!14134}
!14134 = !DILocalVariable(name: "id", arg: 1, scope: !14132, file: !1988, line: 372, type: !105)
!14135 = !DILocation(line: 0, scope: !14132)
!14136 = !DILocation(line: 374, column: 2, scope: !14132)
!14137 = !DILocation(line: 375, column: 34, scope: !14132)
!14138 = !DILocation(line: 375, column: 19, scope: !14132)
!14139 = !DILocation(line: 375, column: 31, scope: !14132)
!14140 = !DILocation(line: 376, column: 24, scope: !14132)
!14141 = !DILocation(line: 376, column: 19, scope: !14132)
!14142 = !DILocation(line: 376, column: 22, scope: !14132)
!14143 = !DILocation(line: 378, column: 26, scope: !14132)
!14144 = !DILocation(line: 378, column: 4, scope: !14132)
!14145 = !DILocation(line: 378, column: 50, scope: !14132)
!14146 = !DILocation(line: 377, column: 19, scope: !14132)
!14147 = !DILocation(line: 377, column: 29, scope: !14132)
!14148 = !DILocation(line: 384, column: 1, scope: !14132)
!14149 = distinct !DISubprogram(name: "init_idle_thread", scope: !1988, file: !1988, line: 343, type: !9737, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1984, retainedNodes: !14150)
!14150 = !{!14151, !14152, !14153, !14156}
!14151 = !DILocalVariable(name: "i", arg: 1, scope: !14149, file: !1988, line: 343, type: !105)
!14152 = !DILocalVariable(name: "thread", scope: !14149, file: !1988, line: 345, type: !2080)
!14153 = !DILocalVariable(name: "stack", scope: !14149, file: !1988, line: 346, type: !14154)
!14154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14155, size: 32)
!14155 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !2197)
!14156 = !DILocalVariable(name: "tname", scope: !14149, file: !1988, line: 358, type: !102)
!14157 = !DILocation(line: 0, scope: !14149)
!14158 = !DILocation(line: 345, column: 29, scope: !14149)
!14159 = !DILocation(line: 346, column: 28, scope: !14149)
!14160 = !DILocation(line: 362, column: 37, scope: !14149)
!14161 = !DILocation(line: 362, column: 36, scope: !14149)
!14162 = !DILocation(line: 361, column: 2, scope: !14149)
!14163 = !DILocation(line: 365, column: 2, scope: !14149)
!14164 = !DILocation(line: 370, column: 1, scope: !14149)
!14165 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !249, file: !249, line: 331, type: !14166, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1984, retainedNodes: !14168)
!14166 = !DISubroutineType(types: !14167)
!14167 = !{!102, !14154}
!14168 = !{!14169}
!14169 = !DILocalVariable(name: "sym", arg: 1, scope: !14165, file: !249, line: 331, type: !14154)
!14170 = !DILocation(line: 0, scope: !14165)
!14171 = !DILocation(line: 333, column: 21, scope: !14165)
!14172 = !DILocation(line: 333, column: 2, scope: !14165)
!14173 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14174, file: !14174, line: 155, type: !14175, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1984, retainedNodes: !14177)
!14174 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14175 = !DISubroutineType(types: !14176)
!14176 = !{null, !2080}
!14177 = !{!14178}
!14178 = !DILocalVariable(name: "thread", arg: 1, scope: !14173, file: !14174, line: 155, type: !2080)
!14179 = !DILocation(line: 0, scope: !14173)
!14180 = !DILocation(line: 157, column: 15, scope: !14173)
!14181 = !DILocation(line: 157, column: 28, scope: !14173)
!14182 = !DILocation(line: 158, column: 1, scope: !14173)
!14183 = distinct !DISubprogram(name: "z_early_boot_rand_get", scope: !1988, file: !1988, line: 451, type: !13934, scopeLine: 452, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1984, retainedNodes: !14184)
!14184 = !{!14185, !14186}
!14185 = !DILocalVariable(name: "buf", arg: 1, scope: !14183, file: !1988, line: 451, type: !432)
!14186 = !DILocalVariable(name: "length", arg: 2, scope: !14183, file: !1988, line: 451, type: !111)
!14187 = !DILocation(line: 0, scope: !14183)
!14188 = !DILocation(line: 485, column: 2, scope: !14183)
!14189 = !DILocation(line: 486, column: 1, scope: !14183)
!14190 = distinct !DISubprogram(name: "sys_rand_get", scope: !14191, file: !14191, line: 46, type: !14192, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1984, retainedNodes: !14194)
!14191 = !DIFile(filename: "zephyr/include/generated/syscalls/rand32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/metairq_dispatch")
!14192 = !DISubroutineType(types: !14193)
!14193 = !{null, !104, !111}
!14194 = !{!14195, !14196}
!14195 = !DILocalVariable(name: "dst", arg: 1, scope: !14190, file: !14191, line: 46, type: !104)
!14196 = !DILocalVariable(name: "len", arg: 2, scope: !14190, file: !14191, line: 46, type: !111)
!14197 = !DILocation(line: 0, scope: !14190)
!14198 = !DILocation(line: 56, column: 2, scope: !14199)
!14199 = distinct !DILexicalBlock(scope: !14190, file: !14191, line: 56, column: 2)
!14200 = !{i64 2154376550}
!14201 = !DILocation(line: 57, column: 2, scope: !14190)
!14202 = !DILocation(line: 58, column: 1, scope: !14190)
!14203 = !DISubprogram(name: "z_impl_sys_rand_get", scope: !14191, file: !14191, line: 43, type: !14192, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!14204 = distinct !DISubprogram(name: "z_cstart", scope: !1988, file: !1988, line: 501, type: !266, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1984, retainedNodes: !14205)
!14205 = !{!14206}
!14206 = !DILocalVariable(name: "dummy_thread", scope: !14204, file: !1988, line: 518, type: !2081)
!14207 = !DILocation(line: 507, column: 2, scope: !14204)
!14208 = !DILocation(line: 43, column: 14, scope: !14209, inlinedAt: !14213)
!14209 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !14210, file: !14210, line: 40, type: !266, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1984, retainedNodes: !14211)
!14210 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14211 = !{!14212}
!14212 = !DILocalVariable(name: "msp", scope: !14209, file: !14210, line: 42, type: !113)
!14213 = distinct !DILocation(line: 44, column: 2, scope: !14214, inlinedAt: !14216)
!14214 = distinct !DISubprogram(name: "arch_kernel_init", scope: !14215, file: !14215, line: 42, type: !266, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1984, retainedNodes: !397)
!14215 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14216 = distinct !DILocation(line: 510, column: 2, scope: !14204)
!14217 = !DILocation(line: 43, column: 3, scope: !14209, inlinedAt: !14213)
!14218 = !DILocation(line: 43, column: 60, scope: !14209, inlinedAt: !14213)
!14219 = !DILocation(line: 0, scope: !14209, inlinedAt: !14213)
!14220 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !14221, file: !7803, line: 1153, type: !113)
!14221 = distinct !DISubprogram(name: "__set_MSP", scope: !7803, file: !7803, line: 1153, type: !7898, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1984, retainedNodes: !14222)
!14222 = !{!14220}
!14223 = !DILocation(line: 0, scope: !14221, inlinedAt: !14224)
!14224 = distinct !DILocation(line: 46, column: 2, scope: !14209, inlinedAt: !14213)
!14225 = !DILocation(line: 1155, column: 3, scope: !14221, inlinedAt: !14224)
!14226 = !{i64 2936583}
!14227 = !DILocation(line: 62, column: 11, scope: !14209, inlinedAt: !14213)
!14228 = !DILocation(line: 102, column: 2, scope: !14229, inlinedAt: !14230)
!14229 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8850, file: !8850, line: 97, type: !266, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1984, retainedNodes: !397)
!14230 = distinct !DILocation(line: 45, column: 2, scope: !14214, inlinedAt: !14216)
!14231 = !DILocation(line: 108, column: 2, scope: !14229, inlinedAt: !14230)
!14232 = !DILocation(line: 112, column: 2, scope: !14229, inlinedAt: !14230)
!14233 = !DILocation(line: 113, column: 2, scope: !14229, inlinedAt: !14230)
!14234 = !DILocation(line: 114, column: 2, scope: !14229, inlinedAt: !14230)
!14235 = !DILocation(line: 116, column: 2, scope: !14229, inlinedAt: !14230)
!14236 = !DILocation(line: 123, column: 13, scope: !14229, inlinedAt: !14230)
!14237 = !DILocation(line: 46, column: 2, scope: !14214, inlinedAt: !14216)
!14238 = !DILocation(line: 47, column: 2, scope: !14214, inlinedAt: !14216)
!14239 = !DILocation(line: 174, column: 12, scope: !14240, inlinedAt: !14241)
!14240 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8850, file: !8850, line: 169, type: !266, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1984, retainedNodes: !397)
!14241 = distinct !DILocation(line: 48, column: 2, scope: !14214, inlinedAt: !14216)
!14242 = !DILocation(line: 179, column: 12, scope: !14240, inlinedAt: !14241)
!14243 = !DILocation(line: 50, column: 2, scope: !14214, inlinedAt: !14216)
!14244 = !DILocation(line: 57, column: 2, scope: !14214, inlinedAt: !14216)
!14245 = !DILocation(line: 518, column: 2, scope: !14204)
!14246 = !DILocation(line: 518, column: 18, scope: !14204)
!14247 = !DILocation(line: 520, column: 2, scope: !14204)
!14248 = !DILocation(line: 523, column: 2, scope: !14204)
!14249 = !DILocation(line: 526, column: 2, scope: !14204)
!14250 = !DILocation(line: 527, column: 2, scope: !14204)
!14251 = !DILocation(line: 543, column: 24, scope: !14204)
!14252 = !DILocation(line: 543, column: 2, scope: !14204)
!14253 = !DILocation(line: 0, scope: !2220)
!14254 = !DILocation(line: 246, column: 15, scope: !2238)
!14255 = !DILocation(line: 246, column: 36, scope: !2237)
!14256 = !DILocation(line: 246, column: 2, scope: !2238)
!14257 = !DILocation(line: 247, column: 37, scope: !2236)
!14258 = !DILocation(line: 0, scope: !2236)
!14259 = !DILocation(line: 248, column: 19, scope: !2236)
!14260 = !DILocation(line: 248, column: 12, scope: !2236)
!14261 = !DILocation(line: 250, column: 11, scope: !14262)
!14262 = distinct !DILexicalBlock(scope: !2236, file: !1988, line: 250, column: 7)
!14263 = !DILocation(line: 250, column: 7, scope: !2236)
!14264 = !DILocation(line: 254, column: 11, scope: !14265)
!14265 = distinct !DILexicalBlock(scope: !14266, file: !1988, line: 254, column: 8)
!14266 = distinct !DILexicalBlock(scope: !14262, file: !1988, line: 250, column: 20)
!14267 = !DILocation(line: 254, column: 8, scope: !14266)
!14268 = !DILocation(line: 255, column: 9, scope: !14269)
!14269 = distinct !DILexicalBlock(scope: !14265, file: !1988, line: 254, column: 17)
!14270 = !DILocation(line: 258, column: 9, scope: !14269)
!14271 = !DILocation(line: 261, column: 28, scope: !14269)
!14272 = !DILocation(line: 261, column: 10, scope: !14269)
!14273 = !DILocation(line: 261, column: 17, scope: !14269)
!14274 = !DILocation(line: 261, column: 26, scope: !14269)
!14275 = !DILocation(line: 262, column: 4, scope: !14269)
!14276 = !DILocation(line: 263, column: 9, scope: !14266)
!14277 = !DILocation(line: 263, column: 16, scope: !14266)
!14278 = !DILocation(line: 263, column: 28, scope: !14266)
!14279 = !DILocation(line: 264, column: 3, scope: !14266)
!14280 = !DILocation(line: 246, column: 60, scope: !2237)
!14281 = distinct !{!14281, !14256, !14282}
!14282 = !DILocation(line: 265, column: 2, scope: !2238)
!14283 = !DILocation(line: 266, column: 1, scope: !2220)
!14284 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !679, file: !679, line: 1814, type: !7843, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1984, retainedNodes: !14285)
!14285 = !{!14286, !14287}
!14286 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14284, file: !679, line: 1814, type: !911)
!14287 = !DILocalVariable(name: "priority", arg: 2, scope: !14284, file: !679, line: 1814, type: !113)
!14288 = !DILocation(line: 0, scope: !14284)
!14289 = !DILocation(line: 1822, column: 48, scope: !14290)
!14290 = distinct !DILexicalBlock(scope: !14291, file: !679, line: 1821, column: 3)
!14291 = distinct !DILexicalBlock(scope: !14284, file: !679, line: 1816, column: 7)
!14292 = !DILocation(line: 1822, column: 32, scope: !14290)
!14293 = !DILocation(line: 1822, column: 40, scope: !14290)
!14294 = !DILocation(line: 1822, column: 5, scope: !14290)
!14295 = !DILocation(line: 1822, column: 46, scope: !14290)
!14296 = !DILocation(line: 1824, column: 1, scope: !14284)
!14297 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !14215, file: !14215, line: 32, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!14298 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14299, file: !14299, line: 215, type: !14175, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1984, retainedNodes: !14300)
!14299 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14300 = !{!14301}
!14301 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14298, file: !14299, line: 215, type: !2080)
!14302 = !DILocation(line: 0, scope: !14298)
!14303 = !DILocation(line: 217, column: 21, scope: !14298)
!14304 = !DILocation(line: 217, column: 34, scope: !14298)
!14305 = !DILocation(line: 221, column: 21, scope: !14298)
!14306 = !DILocation(line: 221, column: 34, scope: !14298)
!14307 = !DILocation(line: 223, column: 27, scope: !14298)
!14308 = !DILocation(line: 223, column: 33, scope: !14298)
!14309 = !DILocation(line: 224, column: 27, scope: !14298)
!14310 = !DILocation(line: 224, column: 32, scope: !14298)
!14311 = !DILocation(line: 232, column: 16, scope: !14298)
!14312 = !DILocation(line: 232, column: 30, scope: !14298)
!14313 = !DILocation(line: 239, column: 24, scope: !14298)
!14314 = !DILocation(line: 240, column: 1, scope: !14298)
!14315 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1988, file: !1988, line: 399, type: !14316, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1984, retainedNodes: !14318)
!14316 = !DISubroutineType(types: !14317)
!14317 = !{!102}
!14318 = !{!14319}
!14319 = !DILocalVariable(name: "stack_ptr", scope: !14315, file: !1988, line: 401, type: !102)
!14320 = !DILocation(line: 404, column: 2, scope: !14315)
!14321 = !DILocation(line: 416, column: 24, scope: !14315)
!14322 = !DILocation(line: 418, column: 14, scope: !14315)
!14323 = !DILocation(line: 0, scope: !14315)
!14324 = !DILocation(line: 423, column: 2, scope: !14315)
!14325 = !DILocation(line: 424, column: 2, scope: !14315)
!14326 = !DILocation(line: 426, column: 2, scope: !14315)
!14327 = !DILocation(line: 428, column: 2, scope: !14315)
!14328 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1988, file: !1988, line: 432, type: !14329, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1984, retainedNodes: !14331)
!14329 = !DISubroutineType(types: !14330)
!14330 = !{null, !102}
!14331 = !{!14332}
!14332 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14328, file: !1988, line: 432, type: !102)
!14333 = !DILocation(line: 0, scope: !14328)
!14334 = !DILocation(line: 435, column: 2, scope: !14328)
!14335 = !DILocation(line: 445, column: 2, scope: !14328)
!14336 = distinct !DISubprogram(name: "bg_thread_main", scope: !1988, file: !1988, line: 277, type: !256, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1984, retainedNodes: !14337)
!14337 = !{!14338, !14339, !14340}
!14338 = !DILocalVariable(name: "unused1", arg: 1, scope: !14336, file: !1988, line: 277, type: !104)
!14339 = !DILocalVariable(name: "unused2", arg: 2, scope: !14336, file: !1988, line: 277, type: !104)
!14340 = !DILocalVariable(name: "unused3", arg: 3, scope: !14336, file: !1988, line: 277, type: !104)
!14341 = !DILocation(line: 0, scope: !14336)
!14342 = !DILocation(line: 291, column: 20, scope: !14336)
!14343 = !DILocation(line: 293, column: 2, scope: !14336)
!14344 = !DILocation(line: 297, column: 2, scope: !14336)
!14345 = !DILocation(line: 305, column: 2, scope: !14336)
!14346 = !DILocation(line: 307, column: 2, scope: !14336)
!14347 = !DILocation(line: 330, column: 8, scope: !14336)
!14348 = !DILocation(line: 333, column: 34, scope: !14336)
!14349 = !DILocation(line: 339, column: 1, scope: !14336)
!14350 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2249, file: !2249, line: 45, type: !14351, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14359)
!14351 = !DISubroutineType(types: !14352)
!14352 = !{null, !14353, !104}
!14353 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !122, line: 103, baseType: !14354)
!14354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14355, size: 32)
!14355 = !DISubroutineType(types: !14356)
!14356 = !{null, !14357, !104}
!14357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14358, size: 32)
!14358 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2254)
!14359 = !{!14360, !14361}
!14360 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14350, file: !2249, line: 45, type: !14353)
!14361 = !DILocalVariable(name: "user_data", arg: 2, scope: !14350, file: !2249, line: 45, type: !104)
!14362 = !DILocation(line: 0, scope: !14350)
!14363 = !DILocation(line: 71, column: 1, scope: !14350)
!14364 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2249, file: !2249, line: 73, type: !14351, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14365)
!14365 = !{!14366, !14367}
!14366 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14364, file: !2249, line: 73, type: !14353)
!14367 = !DILocalVariable(name: "user_data", arg: 2, scope: !14364, file: !2249, line: 73, type: !104)
!14368 = !DILocation(line: 0, scope: !14364)
!14369 = !DILocation(line: 95, column: 1, scope: !14364)
!14370 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2249, file: !2249, line: 97, type: !8851, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !397)
!14371 = !DILocation(line: 1031, column: 3, scope: !14372, inlinedAt: !14375)
!14372 = distinct !DISubprogram(name: "__get_IPSR", scope: !7803, file: !7803, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14373)
!14373 = !{!14374}
!14374 = !DILocalVariable(name: "result", scope: !14372, file: !7803, line: 1029, type: !113)
!14375 = distinct !DILocation(line: 48, column: 10, scope: !14376, inlinedAt: !14377)
!14376 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8850, file: !8850, line: 46, type: !8851, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !397)
!14377 = distinct !DILocation(line: 99, column: 9, scope: !14370)
!14378 = !{i64 2942234}
!14379 = !DILocation(line: 0, scope: !14372, inlinedAt: !14375)
!14380 = !DILocation(line: 48, column: 9, scope: !14376, inlinedAt: !14377)
!14381 = !DILocation(line: 99, column: 2, scope: !14370)
!14382 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2249, file: !2249, line: 106, type: !266, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !397)
!14383 = !DILocation(line: 108, column: 2, scope: !14382)
!14384 = !DILocation(line: 108, column: 17, scope: !14382)
!14385 = !DILocation(line: 108, column: 30, scope: !14382)
!14386 = !DILocation(line: 109, column: 1, scope: !14382)
!14387 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2249, file: !2249, line: 116, type: !266, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !397)
!14388 = !DILocation(line: 118, column: 2, scope: !14387)
!14389 = !DILocation(line: 118, column: 17, scope: !14387)
!14390 = !DILocation(line: 118, column: 30, scope: !14387)
!14391 = !DILocation(line: 119, column: 1, scope: !14387)
!14392 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2249, file: !2249, line: 126, type: !8851, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !397)
!14393 = !DILocation(line: 128, column: 10, scope: !14392)
!14394 = !DILocation(line: 128, column: 25, scope: !14392)
!14395 = !DILocation(line: 128, column: 38, scope: !14392)
!14396 = !DILocation(line: 128, column: 53, scope: !14392)
!14397 = !DILocation(line: 128, column: 2, scope: !14392)
!14398 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2249, file: !2249, line: 187, type: !14399, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14401)
!14399 = !DISubroutineType(types: !14400)
!14400 = !{!105, !2253, !269}
!14401 = !{!14402, !14403}
!14402 = !DILocalVariable(name: "thread", arg: 1, scope: !14398, file: !2249, line: 187, type: !2253)
!14403 = !DILocalVariable(name: "value", arg: 2, scope: !14398, file: !2249, line: 187, type: !269)
!14404 = !DILocation(line: 0, scope: !14398)
!14405 = !DILocation(line: 206, column: 2, scope: !14398)
!14406 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2249, file: !2249, line: 238, type: !14407, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14409)
!14407 = !DISubroutineType(types: !14408)
!14408 = !{!269, !2253}
!14409 = !{!14410}
!14410 = !DILocalVariable(name: "thread", arg: 1, scope: !14406, file: !2249, line: 238, type: !2253)
!14411 = !DILocation(line: 0, scope: !14406)
!14412 = !DILocation(line: 244, column: 2, scope: !14406)
!14413 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2249, file: !2249, line: 248, type: !14414, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14416)
!14414 = !DISubroutineType(types: !14415)
!14415 = !{!105, !2252, !102, !111}
!14416 = !{!14417, !14418, !14419}
!14417 = !DILocalVariable(name: "thread", arg: 1, scope: !14413, file: !2249, line: 248, type: !2252)
!14418 = !DILocalVariable(name: "buf", arg: 2, scope: !14413, file: !2249, line: 248, type: !102)
!14419 = !DILocalVariable(name: "size", arg: 3, scope: !14413, file: !2249, line: 248, type: !111)
!14420 = !DILocation(line: 0, scope: !14413)
!14421 = !DILocation(line: 257, column: 2, scope: !14413)
!14422 = !DILocation(line: 0, scope: !2248)
!14423 = !DILocation(line: 281, column: 11, scope: !14424)
!14424 = distinct !DILexicalBlock(scope: !2248, file: !2249, line: 281, column: 6)
!14425 = !DILocation(line: 281, column: 20, scope: !14424)
!14426 = !DILocation(line: 275, column: 45, scope: !2248)
!14427 = !DILocation(line: 285, column: 10, scope: !2248)
!14428 = !DILocation(line: 0, scope: !2371)
!14429 = !DILocation(line: 293, column: 39, scope: !14430)
!14430 = distinct !DILexicalBlock(scope: !2371, file: !2249, line: 293, column: 2)
!14431 = !DILocation(line: 293, column: 2, scope: !2371)
!14432 = !DILocation(line: 273, column: 14, scope: !2248)
!14433 = !DILocation(line: 309, column: 2, scope: !2248)
!14434 = !DILocation(line: 309, column: 11, scope: !2248)
!14435 = !DILocation(line: 311, column: 2, scope: !2248)
!14436 = !DILocation(line: 293, column: 26, scope: !14430)
!14437 = !DILocation(line: 294, column: 9, scope: !14438)
!14438 = distinct !DILexicalBlock(scope: !14430, file: !2249, line: 293, column: 54)
!14439 = !DILocation(line: 295, column: 21, scope: !14440)
!14440 = distinct !DILexicalBlock(scope: !14438, file: !2249, line: 295, column: 7)
!14441 = !DILocation(line: 295, column: 28, scope: !14440)
!14442 = !DILocation(line: 295, column: 7, scope: !14438)
!14443 = !DILocation(line: 299, column: 25, scope: !14438)
!14444 = !DILocation(line: 299, column: 41, scope: !14438)
!14445 = !DILocation(line: 300, column: 7, scope: !14438)
!14446 = !DILocation(line: 300, column: 26, scope: !14438)
!14447 = !DILocation(line: 299, column: 10, scope: !14438)
!14448 = !DILocation(line: 299, column: 7, scope: !14438)
!14449 = !DILocation(line: 302, column: 16, scope: !14438)
!14450 = !DILocation(line: 304, column: 20, scope: !14451)
!14451 = distinct !DILexicalBlock(scope: !14438, file: !2249, line: 304, column: 7)
!14452 = !DILocation(line: 304, column: 7, scope: !14438)
!14453 = !DILocation(line: 305, column: 26, scope: !14454)
!14454 = distinct !DILexicalBlock(scope: !14451, file: !2249, line: 304, column: 26)
!14455 = !DILocation(line: 305, column: 42, scope: !14454)
!14456 = !DILocation(line: 305, column: 11, scope: !14454)
!14457 = !DILocation(line: 305, column: 8, scope: !14454)
!14458 = !DILocation(line: 306, column: 3, scope: !14454)
!14459 = !DILocation(line: 293, column: 50, scope: !14430)
!14460 = !DILocation(line: 312, column: 1, scope: !2248)
!14461 = distinct !DISubprogram(name: "copy_bytes", scope: !2249, file: !2249, line: 261, type: !14462, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14464)
!14462 = !DISubroutineType(types: !14463)
!14463 = !{!111, !102, !111, !269, !111}
!14464 = !{!14465, !14466, !14467, !14468, !14469}
!14465 = !DILocalVariable(name: "dest", arg: 1, scope: !14461, file: !2249, line: 261, type: !102)
!14466 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14461, file: !2249, line: 261, type: !111)
!14467 = !DILocalVariable(name: "src", arg: 3, scope: !14461, file: !2249, line: 261, type: !269)
!14468 = !DILocalVariable(name: "src_size", arg: 4, scope: !14461, file: !2249, line: 261, type: !111)
!14469 = !DILocalVariable(name: "bytes_to_copy", scope: !14461, file: !2249, line: 263, type: !111)
!14470 = !DILocation(line: 0, scope: !14461)
!14471 = !DILocation(line: 265, column: 18, scope: !14461)
!14472 = !DILocation(line: 266, column: 2, scope: !14461)
!14473 = !DILocation(line: 268, column: 2, scope: !14461)
!14474 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2249, file: !2249, line: 383, type: !14475, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14477)
!14475 = !DISubroutineType(types: !14476)
!14476 = !{null, !2253}
!14477 = !{!14478}
!14478 = !DILocalVariable(name: "thread", arg: 1, scope: !14474, file: !2249, line: 383, type: !2253)
!14479 = !DILocation(line: 0, scope: !14474)
!14480 = !DILocation(line: 387, column: 2, scope: !14474)
!14481 = !DILocation(line: 388, column: 1, scope: !14474)
!14482 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2249, file: !2249, line: 528, type: !14483, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14490)
!14483 = !DISubroutineType(types: !14484)
!14484 = !{!102, !2253, !14485, !111, !254, !104, !104, !104, !105, !113, !269}
!14485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14486, size: 32)
!14486 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !14487)
!14487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !14488)
!14488 = !{!14489}
!14489 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14487, file: !249, line: 48, baseType: !103, size: 8)
!14490 = !{!14491, !14492, !14493, !14494, !14495, !14496, !14497, !14498, !14499, !14500, !14501}
!14491 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14482, file: !2249, line: 528, type: !2253)
!14492 = !DILocalVariable(name: "stack", arg: 2, scope: !14482, file: !2249, line: 529, type: !14485)
!14493 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14482, file: !2249, line: 529, type: !111)
!14494 = !DILocalVariable(name: "entry", arg: 4, scope: !14482, file: !2249, line: 530, type: !254)
!14495 = !DILocalVariable(name: "p1", arg: 5, scope: !14482, file: !2249, line: 531, type: !104)
!14496 = !DILocalVariable(name: "p2", arg: 6, scope: !14482, file: !2249, line: 531, type: !104)
!14497 = !DILocalVariable(name: "p3", arg: 7, scope: !14482, file: !2249, line: 531, type: !104)
!14498 = !DILocalVariable(name: "prio", arg: 8, scope: !14482, file: !2249, line: 532, type: !105)
!14499 = !DILocalVariable(name: "options", arg: 9, scope: !14482, file: !2249, line: 532, type: !113)
!14500 = !DILocalVariable(name: "name", arg: 10, scope: !14482, file: !2249, line: 532, type: !269)
!14501 = !DILocalVariable(name: "stack_ptr", scope: !14482, file: !2249, line: 534, type: !102)
!14502 = !DILocation(line: 0, scope: !14482)
!14503 = !DILocation(line: 536, column: 2, scope: !14504)
!14504 = distinct !DILexicalBlock(scope: !14505, file: !2249, line: 536, column: 2)
!14505 = distinct !DILexicalBlock(scope: !14506, file: !2249, line: 536, column: 2)
!14506 = distinct !DILexicalBlock(scope: !14482, file: !2249, line: 536, column: 2)
!14507 = !DILocation(line: 536, column: 2, scope: !14508)
!14508 = distinct !DILexicalBlock(scope: !14504, file: !2249, line: 536, column: 2)
!14509 = !DILocation(line: 550, column: 28, scope: !14482)
!14510 = !DILocation(line: 550, column: 2, scope: !14482)
!14511 = !DILocation(line: 553, column: 34, scope: !14482)
!14512 = !DILocation(line: 553, column: 2, scope: !14482)
!14513 = !DILocation(line: 554, column: 14, scope: !14482)
!14514 = !DILocation(line: 564, column: 2, scope: !14482)
!14515 = !DILocation(line: 567, column: 14, scope: !14482)
!14516 = !DILocation(line: 567, column: 24, scope: !14482)
!14517 = !DILocation(line: 612, column: 7, scope: !14518)
!14518 = distinct !DILexicalBlock(scope: !14482, file: !2249, line: 612, column: 6)
!14519 = !DILocation(line: 612, column: 6, scope: !14482)
!14520 = !DILocation(line: 627, column: 40, scope: !14482)
!14521 = !DILocation(line: 637, column: 2, scope: !14482)
!14522 = !DILocation(line: 613, column: 15, scope: !14523)
!14523 = distinct !DILexicalBlock(scope: !14518, file: !2249, line: 612, column: 17)
!14524 = !DILocation(line: 613, column: 29, scope: !14523)
!14525 = !DILocation(line: 638, column: 1, scope: !14482)
!14526 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !14174, file: !14174, line: 78, type: !14527, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14529)
!14527 = !DISubroutineType(types: !14528)
!14528 = !{!492, !104}
!14529 = !{!14530}
!14530 = !DILocalVariable(name: "entry_point", arg: 1, scope: !14526, file: !14174, line: 78, type: !104)
!14531 = !DILocation(line: 0, scope: !14526)
!14532 = !DILocation(line: 80, column: 21, scope: !14526)
!14533 = !DILocation(line: 80, column: 2, scope: !14526)
!14534 = distinct !DISubprogram(name: "z_waitq_init", scope: !14535, file: !14535, line: 47, type: !14536, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14538)
!14535 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14536 = !DISubroutineType(types: !14537)
!14537 = !{null, !2284}
!14538 = !{!14539}
!14539 = !DILocalVariable(name: "w", arg: 1, scope: !14534, file: !14535, line: 47, type: !2284)
!14540 = !DILocation(line: 0, scope: !14534)
!14541 = !DILocation(line: 49, column: 21, scope: !14534)
!14542 = !DILocation(line: 49, column: 2, scope: !14534)
!14543 = !DILocation(line: 50, column: 1, scope: !14534)
!14544 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2249, file: !2249, line: 791, type: !14545, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14548)
!14545 = !DISubroutineType(types: !14546)
!14546 = !{null, !14547, !105, !113, !32}
!14547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 32)
!14548 = !{!14549, !14550, !14551, !14552}
!14549 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14544, file: !2249, line: 791, type: !14547)
!14550 = !DILocalVariable(name: "priority", arg: 2, scope: !14544, file: !2249, line: 791, type: !105)
!14551 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14544, file: !2249, line: 792, type: !113)
!14552 = !DILocalVariable(name: "options", arg: 4, scope: !14544, file: !2249, line: 792, type: !32)
!14553 = !DILocation(line: 0, scope: !14544)
!14554 = !DILocation(line: 795, column: 15, scope: !14544)
!14555 = !DILocation(line: 795, column: 25, scope: !14544)
!14556 = !DILocation(line: 796, column: 30, scope: !14544)
!14557 = !DILocation(line: 796, column: 15, scope: !14544)
!14558 = !DILocation(line: 796, column: 28, scope: !14544)
!14559 = !DILocation(line: 797, column: 30, scope: !14544)
!14560 = !DILocation(line: 797, column: 15, scope: !14544)
!14561 = !DILocation(line: 797, column: 28, scope: !14544)
!14562 = !DILocation(line: 799, column: 22, scope: !14544)
!14563 = !DILocation(line: 799, column: 15, scope: !14544)
!14564 = !DILocation(line: 799, column: 20, scope: !14544)
!14565 = !DILocation(line: 801, column: 15, scope: !14544)
!14566 = !DILocation(line: 801, column: 28, scope: !14544)
!14567 = !DILocation(line: 814, column: 2, scope: !14544)
!14568 = !DILocation(line: 815, column: 1, scope: !14544)
!14569 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2249, file: !2249, line: 449, type: !14570, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14572)
!14570 = !DISubroutineType(types: !14571)
!14571 = !{!102, !2253, !14485, !111}
!14572 = !{!14573, !14574, !14575, !14576, !14577, !14578, !14579, !14580}
!14573 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14569, file: !2249, line: 449, type: !2253)
!14574 = !DILocalVariable(name: "stack", arg: 2, scope: !14569, file: !2249, line: 450, type: !14485)
!14575 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14569, file: !2249, line: 450, type: !111)
!14576 = !DILocalVariable(name: "stack_obj_size", scope: !14569, file: !2249, line: 452, type: !111)
!14577 = !DILocalVariable(name: "stack_buf_size", scope: !14569, file: !2249, line: 452, type: !111)
!14578 = !DILocalVariable(name: "stack_ptr", scope: !14569, file: !2249, line: 453, type: !102)
!14579 = !DILocalVariable(name: "stack_buf_start", scope: !14569, file: !2249, line: 453, type: !102)
!14580 = !DILocalVariable(name: "delta", scope: !14569, file: !2249, line: 454, type: !111)
!14581 = !DILocation(line: 0, scope: !14569)
!14582 = !DILocation(line: 465, column: 20, scope: !14583)
!14583 = distinct !DILexicalBlock(scope: !14569, file: !2249, line: 463, column: 2)
!14584 = !DILocation(line: 466, column: 21, scope: !14583)
!14585 = !DILocation(line: 473, column: 28, scope: !14569)
!14586 = !DILocation(line: 514, column: 33, scope: !14569)
!14587 = !DILocation(line: 514, column: 25, scope: !14569)
!14588 = !DILocation(line: 514, column: 31, scope: !14569)
!14589 = !DILocation(line: 515, column: 25, scope: !14569)
!14590 = !DILocation(line: 515, column: 30, scope: !14569)
!14591 = !DILocation(line: 516, column: 25, scope: !14569)
!14592 = !DILocation(line: 516, column: 31, scope: !14569)
!14593 = !DILocation(line: 520, column: 2, scope: !14569)
!14594 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !249, file: !249, line: 331, type: !14595, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14597)
!14595 = !DISubroutineType(types: !14596)
!14596 = !{!102, !14485}
!14597 = !{!14598}
!14598 = !DILocalVariable(name: "sym", arg: 1, scope: !14594, file: !249, line: 331, type: !14485)
!14599 = !DILocation(line: 0, scope: !14594)
!14600 = !DILocation(line: 333, column: 21, scope: !14594)
!14601 = !DILocation(line: 333, column: 2, scope: !14594)
!14602 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14603, file: !14603, line: 40, type: !14604, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14606)
!14603 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14604 = !DISubroutineType(types: !14605)
!14605 = !{null, !14547}
!14606 = !{!14607}
!14607 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14602, file: !14603, line: 40, type: !14547)
!14608 = !DILocation(line: 0, scope: !14602)
!14609 = !DILocation(line: 42, column: 31, scope: !14602)
!14610 = !DILocation(line: 42, column: 2, scope: !14602)
!14611 = !DILocation(line: 43, column: 1, scope: !14602)
!14612 = distinct !DISubprogram(name: "z_init_timeout", scope: !14603, file: !14603, line: 25, type: !2310, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14613)
!14613 = !{!14614}
!14614 = !DILocalVariable(name: "to", arg: 1, scope: !14612, file: !14603, line: 25, type: !2312)
!14615 = !DILocation(line: 0, scope: !14612)
!14616 = !DILocation(line: 27, column: 22, scope: !14612)
!14617 = !DILocation(line: 27, column: 2, scope: !14612)
!14618 = !DILocation(line: 28, column: 1, scope: !14612)
!14619 = distinct !DISubprogram(name: "sys_dnode_init", scope: !137, file: !137, line: 211, type: !14620, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14622)
!14620 = !DISubroutineType(types: !14621)
!14621 = !{null, !2358}
!14622 = !{!14623}
!14623 = !DILocalVariable(name: "node", arg: 1, scope: !14619, file: !137, line: 211, type: !2358)
!14624 = !DILocation(line: 0, scope: !14619)
!14625 = !DILocation(line: 213, column: 8, scope: !14619)
!14626 = !DILocation(line: 213, column: 13, scope: !14619)
!14627 = !DILocation(line: 214, column: 8, scope: !14619)
!14628 = !DILocation(line: 214, column: 13, scope: !14619)
!14629 = !DILocation(line: 215, column: 1, scope: !14619)
!14630 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !14631, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14634)
!14631 = !DISubroutineType(types: !14632)
!14632 = !{null, !14633}
!14633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 32)
!14634 = !{!14635}
!14635 = !DILocalVariable(name: "list", arg: 1, scope: !14630, file: !137, line: 197, type: !14633)
!14636 = !DILocation(line: 0, scope: !14630)
!14637 = !DILocation(line: 199, column: 8, scope: !14630)
!14638 = !DILocation(line: 199, column: 13, scope: !14630)
!14639 = !DILocation(line: 200, column: 8, scope: !14630)
!14640 = !DILocation(line: 200, column: 13, scope: !14630)
!14641 = !DILocation(line: 201, column: 1, scope: !14630)
!14642 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2249, file: !2249, line: 641, type: !14643, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14649)
!14643 = !DISubroutineType(types: !14644)
!14644 = !{!2252, !2253, !14485, !111, !254, !104, !104, !104, !105, !113, !14645}
!14645 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !14646)
!14646 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !14647)
!14647 = !{!14648}
!14648 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14646, file: !108, line: 66, baseType: !107, size: 64)
!14649 = !{!14650, !14651, !14652, !14653, !14654, !14655, !14656, !14657, !14658, !14659}
!14650 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14642, file: !2249, line: 641, type: !2253)
!14651 = !DILocalVariable(name: "stack", arg: 2, scope: !14642, file: !2249, line: 642, type: !14485)
!14652 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14642, file: !2249, line: 643, type: !111)
!14653 = !DILocalVariable(name: "entry", arg: 4, scope: !14642, file: !2249, line: 643, type: !254)
!14654 = !DILocalVariable(name: "p1", arg: 5, scope: !14642, file: !2249, line: 644, type: !104)
!14655 = !DILocalVariable(name: "p2", arg: 6, scope: !14642, file: !2249, line: 644, type: !104)
!14656 = !DILocalVariable(name: "p3", arg: 7, scope: !14642, file: !2249, line: 644, type: !104)
!14657 = !DILocalVariable(name: "prio", arg: 8, scope: !14642, file: !2249, line: 645, type: !105)
!14658 = !DILocalVariable(name: "options", arg: 9, scope: !14642, file: !2249, line: 645, type: !113)
!14659 = !DILocalVariable(name: "delay", arg: 10, scope: !14642, file: !2249, line: 645, type: !14645)
!14660 = !DILocation(line: 0, scope: !14642)
!14661 = !DILocation(line: 1031, column: 3, scope: !14372, inlinedAt: !14662)
!14662 = distinct !DILocation(line: 48, column: 10, scope: !14376, inlinedAt: !14663)
!14663 = distinct !DILocation(line: 647, column: 2, scope: !14664)
!14664 = distinct !DILexicalBlock(scope: !14665, file: !2249, line: 647, column: 2)
!14665 = distinct !DILexicalBlock(scope: !14642, file: !2249, line: 647, column: 2)
!14666 = !DILocation(line: 0, scope: !14372, inlinedAt: !14662)
!14667 = !DILocation(line: 48, column: 9, scope: !14376, inlinedAt: !14663)
!14668 = !DILocation(line: 647, column: 2, scope: !14665)
!14669 = !DILocation(line: 647, column: 2, scope: !14670)
!14670 = distinct !DILexicalBlock(scope: !14664, file: !2249, line: 647, column: 2)
!14671 = !DILocation(line: 649, column: 2, scope: !14642)
!14672 = !DILocation(line: 652, column: 7, scope: !14673)
!14673 = distinct !DILexicalBlock(scope: !14642, file: !2249, line: 652, column: 6)
!14674 = !DILocation(line: 652, column: 6, scope: !14642)
!14675 = !DILocation(line: 653, column: 3, scope: !14676)
!14676 = distinct !DILexicalBlock(scope: !14673, file: !2249, line: 652, column: 39)
!14677 = !DILocation(line: 654, column: 2, scope: !14676)
!14678 = !DILocation(line: 656, column: 2, scope: !14642)
!14679 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2249, file: !2249, line: 401, type: !14680, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14682)
!14680 = !DISubroutineType(types: !14681)
!14681 = !{null, !2253, !14645}
!14682 = !{!14683, !14684}
!14683 = !DILocalVariable(name: "thread", arg: 1, scope: !14679, file: !2249, line: 401, type: !2253)
!14684 = !DILocalVariable(name: "delay", arg: 2, scope: !14679, file: !2249, line: 401, type: !14645)
!14685 = !DILocation(line: 0, scope: !14679)
!14686 = !DILocation(line: 404, column: 6, scope: !14687)
!14687 = distinct !DILexicalBlock(scope: !14679, file: !2249, line: 404, column: 6)
!14688 = !DILocation(line: 404, column: 6, scope: !14679)
!14689 = !DILocation(line: 405, column: 3, scope: !14690)
!14690 = distinct !DILexicalBlock(scope: !14687, file: !2249, line: 404, column: 38)
!14691 = !DILocation(line: 406, column: 2, scope: !14690)
!14692 = !DILocation(line: 407, column: 3, scope: !14693)
!14693 = distinct !DILexicalBlock(scope: !14687, file: !2249, line: 406, column: 9)
!14694 = !DILocation(line: 413, column: 1, scope: !14679)
!14695 = distinct !DISubprogram(name: "k_thread_start", scope: !3458, file: !3458, line: 205, type: !14696, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14698)
!14696 = !DISubroutineType(types: !14697)
!14697 = !{null, !2252}
!14698 = !{!14699}
!14699 = !DILocalVariable(name: "thread", arg: 1, scope: !14695, file: !3458, line: 205, type: !2252)
!14700 = !DILocation(line: 0, scope: !14695)
!14701 = !DILocation(line: 214, column: 2, scope: !14702)
!14702 = distinct !DILexicalBlock(scope: !14695, file: !3458, line: 214, column: 2)
!14703 = !{i64 2154184045}
!14704 = !DILocation(line: 215, column: 2, scope: !14695)
!14705 = !DILocation(line: 216, column: 1, scope: !14695)
!14706 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14603, file: !14603, line: 47, type: !14680, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14707)
!14707 = !{!14708, !14709}
!14708 = !DILocalVariable(name: "thread", arg: 1, scope: !14706, file: !14603, line: 47, type: !2253)
!14709 = !DILocalVariable(name: "ticks", arg: 2, scope: !14706, file: !14603, line: 47, type: !14645)
!14710 = !DILocation(line: 0, scope: !14706)
!14711 = !DILocation(line: 49, column: 30, scope: !14706)
!14712 = !DILocation(line: 49, column: 2, scope: !14706)
!14713 = !DILocation(line: 50, column: 1, scope: !14706)
!14714 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2249, file: !2249, line: 748, type: !266, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14715)
!14715 = !{!14716, !14733}
!14716 = !DILocalVariable(name: "thread_data", scope: !14717, file: !2249, line: 750, type: !14718)
!14717 = distinct !DILexicalBlock(scope: !14714, file: !2249, line: 750, column: 2)
!14718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14719, size: 32)
!14719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !122, line: 620, size: 384, elements: !14720)
!14720 = !{!14721, !14722, !14723, !14724, !14725, !14726, !14727, !14728, !14729, !14730, !14731, !14732}
!14721 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14719, file: !122, line: 621, baseType: !2253, size: 32)
!14722 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14719, file: !122, line: 622, baseType: !14485, size: 32, offset: 32)
!14723 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14719, file: !122, line: 623, baseType: !32, size: 32, offset: 64)
!14724 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14719, file: !122, line: 624, baseType: !254, size: 32, offset: 96)
!14725 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14719, file: !122, line: 625, baseType: !104, size: 32, offset: 128)
!14726 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14719, file: !122, line: 626, baseType: !104, size: 32, offset: 160)
!14727 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14719, file: !122, line: 627, baseType: !104, size: 32, offset: 192)
!14728 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14719, file: !122, line: 628, baseType: !105, size: 32, offset: 224)
!14729 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14719, file: !122, line: 629, baseType: !113, size: 32, offset: 256)
!14730 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14719, file: !122, line: 630, baseType: !116, size: 32, offset: 288)
!14731 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14719, file: !122, line: 631, baseType: !265, size: 32, offset: 320)
!14732 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14719, file: !122, line: 632, baseType: !269, size: 32, offset: 352)
!14733 = !DILocalVariable(name: "thread_data", scope: !14734, file: !2249, line: 781, type: !14718)
!14734 = distinct !DILexicalBlock(scope: !14714, file: !2249, line: 781, column: 2)
!14735 = !DILocation(line: 0, scope: !14717)
!14736 = !DILocation(line: 750, column: 2, scope: !14737)
!14737 = distinct !DILexicalBlock(scope: !14738, file: !2249, line: 750, column: 2)
!14738 = distinct !DILexicalBlock(scope: !14739, file: !2249, line: 750, column: 2)
!14739 = distinct !DILexicalBlock(scope: !14717, file: !2249, line: 750, column: 2)
!14740 = !DILocation(line: 750, column: 2, scope: !14741)
!14741 = distinct !DILexicalBlock(scope: !14742, file: !2249, line: 750, column: 2)
!14742 = distinct !DILexicalBlock(scope: !14737, file: !2249, line: 750, column: 2)
!14743 = !DILocation(line: 750, column: 2, scope: !14738)
!14744 = !DILocation(line: 750, column: 2, scope: !14717)
!14745 = !DILocation(line: 780, column: 2, scope: !14714)
!14746 = !DILocation(line: 0, scope: !14734)
!14747 = !DILocation(line: 781, column: 2, scope: !14748)
!14748 = distinct !DILexicalBlock(scope: !14749, file: !2249, line: 781, column: 2)
!14749 = distinct !DILexicalBlock(scope: !14750, file: !2249, line: 781, column: 2)
!14750 = distinct !DILexicalBlock(scope: !14734, file: !2249, line: 781, column: 2)
!14751 = !DILocation(line: 752, column: 17, scope: !14752)
!14752 = distinct !DILexicalBlock(scope: !14739, file: !2249, line: 750, column: 38)
!14753 = !DILocation(line: 753, column: 17, scope: !14752)
!14754 = !DILocation(line: 754, column: 17, scope: !14752)
!14755 = !DILocation(line: 755, column: 17, scope: !14752)
!14756 = !DILocation(line: 756, column: 17, scope: !14752)
!14757 = !DILocation(line: 757, column: 17, scope: !14752)
!14758 = !DILocation(line: 758, column: 17, scope: !14752)
!14759 = !DILocation(line: 759, column: 17, scope: !14752)
!14760 = !DILocation(line: 760, column: 17, scope: !14752)
!14761 = !DILocation(line: 751, column: 3, scope: !14752)
!14762 = !DILocation(line: 763, column: 16, scope: !14752)
!14763 = !DILocation(line: 763, column: 29, scope: !14752)
!14764 = !DILocation(line: 763, column: 39, scope: !14752)
!14765 = !DILocation(line: 750, column: 2, scope: !14739)
!14766 = !DILocation(line: 750, column: 2, scope: !14742)
!14767 = distinct !{!14767, !14744, !14768}
!14768 = !DILocation(line: 764, column: 2, scope: !14717)
!14769 = !DILocation(line: 781, column: 2, scope: !14770)
!14770 = distinct !DILexicalBlock(scope: !14771, file: !2249, line: 781, column: 2)
!14771 = distinct !DILexicalBlock(scope: !14748, file: !2249, line: 781, column: 2)
!14772 = !DILocation(line: 781, column: 2, scope: !14749)
!14773 = !DILocation(line: 781, column: 2, scope: !14734)
!14774 = !DILocation(line: 787, column: 2, scope: !14714)
!14775 = !DILocation(line: 788, column: 1, scope: !14714)
!14776 = !DILocation(line: 782, column: 20, scope: !14777)
!14777 = distinct !DILexicalBlock(scope: !14778, file: !2249, line: 782, column: 7)
!14778 = distinct !DILexicalBlock(scope: !14750, file: !2249, line: 781, column: 38)
!14779 = !DILocation(line: 782, column: 31, scope: !14777)
!14780 = !DILocation(line: 782, column: 7, scope: !14778)
!14781 = !DILocation(line: 783, column: 37, scope: !14782)
!14782 = distinct !DILexicalBlock(scope: !14777, file: !2249, line: 782, column: 51)
!14783 = !DILocation(line: 784, column: 10, scope: !14782)
!14784 = !DILocation(line: 783, column: 4, scope: !14782)
!14785 = !DILocation(line: 785, column: 3, scope: !14782)
!14786 = !DILocation(line: 781, column: 2, scope: !14750)
!14787 = !DILocation(line: 781, column: 2, scope: !14771)
!14788 = distinct !{!14788, !14773, !14789}
!14789 = !DILocation(line: 786, column: 2, scope: !14734)
!14790 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !14791, file: !14791, line: 403, type: !14792, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14794)
!14791 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14792 = !DISubroutineType(types: !14793)
!14793 = !{!114, !114}
!14794 = !{!14795}
!14795 = !DILocalVariable(name: "t", arg: 1, scope: !14790, file: !14791, line: 403, type: !114)
!14796 = !DILocation(line: 0, scope: !14790)
!14797 = !DILocalVariable(name: "t", arg: 1, scope: !14798, file: !14791, line: 102, type: !114)
!14798 = distinct !DISubprogram(name: "z_tmcvt", scope: !14791, file: !14791, line: 102, type: !14799, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14801)
!14799 = !DISubroutineType(types: !14800)
!14800 = !{!114, !114, !113, !113, !492, !492, !492, !492}
!14801 = !{!14797, !14802, !14803, !14804, !14805, !14806, !14807, !14808, !14809, !14810, !14811}
!14802 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14798, file: !14791, line: 102, type: !113)
!14803 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14798, file: !14791, line: 103, type: !113)
!14804 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14798, file: !14791, line: 103, type: !492)
!14805 = !DILocalVariable(name: "result32", arg: 5, scope: !14798, file: !14791, line: 104, type: !492)
!14806 = !DILocalVariable(name: "round_up", arg: 6, scope: !14798, file: !14791, line: 104, type: !492)
!14807 = !DILocalVariable(name: "round_off", arg: 7, scope: !14798, file: !14791, line: 105, type: !492)
!14808 = !DILocalVariable(name: "mul_ratio", scope: !14798, file: !14791, line: 107, type: !492)
!14809 = !DILocalVariable(name: "div_ratio", scope: !14798, file: !14791, line: 109, type: !492)
!14810 = !DILocalVariable(name: "off", scope: !14798, file: !14791, line: 116, type: !114)
!14811 = !DILocalVariable(name: "rdivisor", scope: !14812, file: !14791, line: 119, type: !113)
!14812 = distinct !DILexicalBlock(scope: !14813, file: !14791, line: 118, column: 18)
!14813 = distinct !DILexicalBlock(scope: !14798, file: !14791, line: 118, column: 6)
!14814 = !DILocation(line: 0, scope: !14798, inlinedAt: !14815)
!14815 = distinct !DILocation(line: 406, column: 9, scope: !14790)
!14816 = !DILocation(line: 145, column: 13, scope: !14817, inlinedAt: !14815)
!14817 = distinct !DILexicalBlock(scope: !14818, file: !14791, line: 144, column: 10)
!14818 = distinct !DILexicalBlock(scope: !14819, file: !14791, line: 142, column: 7)
!14819 = distinct !DILexicalBlock(scope: !14820, file: !14791, line: 141, column: 24)
!14820 = distinct !DILexicalBlock(scope: !14821, file: !14791, line: 141, column: 13)
!14821 = distinct !DILexicalBlock(scope: !14798, file: !14791, line: 134, column: 6)
!14822 = !DILocation(line: 406, column: 2, scope: !14790)
!14823 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2249, file: !2249, line: 817, type: !5100, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14824)
!14824 = !{!14825, !14826, !14827, !14828}
!14825 = !DILocalVariable(name: "entry", arg: 1, scope: !14823, file: !2249, line: 817, type: !254)
!14826 = !DILocalVariable(name: "p1", arg: 2, scope: !14823, file: !2249, line: 818, type: !104)
!14827 = !DILocalVariable(name: "p2", arg: 3, scope: !14823, file: !2249, line: 818, type: !104)
!14828 = !DILocalVariable(name: "p3", arg: 4, scope: !14823, file: !2249, line: 818, type: !104)
!14829 = !DILocation(line: 0, scope: !14823)
!14830 = !DILocation(line: 822, column: 2, scope: !14823)
!14831 = !DILocation(line: 822, column: 17, scope: !14823)
!14832 = !DILocation(line: 822, column: 30, scope: !14823)
!14833 = !DILocation(line: 823, column: 2, scope: !14823)
!14834 = !DILocation(line: 845, column: 2, scope: !14823)
!14835 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2249, file: !2249, line: 853, type: !14836, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14839)
!14836 = !DISubroutineType(types: !14837)
!14837 = !{!492, !14838}
!14838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 32)
!14839 = !{!14840, !14841}
!14840 = !DILocalVariable(name: "l", arg: 1, scope: !14835, file: !2249, line: 853, type: !14838)
!14841 = !DILocalVariable(name: "thread_cpu", scope: !14835, file: !2249, line: 855, type: !22)
!14842 = !DILocation(line: 0, scope: !14835)
!14843 = !DILocation(line: 855, column: 28, scope: !14835)
!14844 = !DILocation(line: 857, column: 17, scope: !14845)
!14845 = distinct !DILexicalBlock(scope: !14835, file: !2249, line: 857, column: 6)
!14846 = !DILocation(line: 857, column: 6, scope: !14835)
!14847 = !DILocation(line: 858, column: 19, scope: !14848)
!14848 = distinct !DILexicalBlock(scope: !14849, file: !2249, line: 858, column: 7)
!14849 = distinct !DILexicalBlock(scope: !14845, file: !2249, line: 857, column: 24)
!14850 = !DILocation(line: 858, column: 42, scope: !14848)
!14851 = !DILocation(line: 858, column: 28, scope: !14848)
!14852 = !DILocation(line: 858, column: 25, scope: !14848)
!14853 = !DILocation(line: 858, column: 7, scope: !14849)
!14854 = !DILocation(line: 862, column: 2, scope: !14835)
!14855 = !DILocation(line: 863, column: 1, scope: !14835)
!14856 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2249, file: !2249, line: 865, type: !14836, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14857)
!14857 = !{!14858}
!14858 = !DILocalVariable(name: "l", arg: 1, scope: !14856, file: !2249, line: 865, type: !14838)
!14859 = !DILocation(line: 0, scope: !14856)
!14860 = !DILocation(line: 867, column: 9, scope: !14861)
!14861 = distinct !DILexicalBlock(scope: !14856, file: !2249, line: 867, column: 6)
!14862 = !DILocation(line: 867, column: 38, scope: !14861)
!14863 = !DILocation(line: 867, column: 24, scope: !14861)
!14864 = !DILocation(line: 867, column: 54, scope: !14861)
!14865 = !DILocation(line: 867, column: 43, scope: !14861)
!14866 = !DILocation(line: 867, column: 41, scope: !14861)
!14867 = !DILocation(line: 867, column: 20, scope: !14861)
!14868 = !DILocation(line: 867, column: 6, scope: !14856)
!14869 = !DILocation(line: 870, column: 16, scope: !14856)
!14870 = !DILocation(line: 871, column: 2, scope: !14856)
!14871 = !DILocation(line: 872, column: 1, scope: !14856)
!14872 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2249, file: !2249, line: 874, type: !14873, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14875)
!14873 = !DISubroutineType(types: !14874)
!14874 = !{null, !14838}
!14875 = !{!14876}
!14876 = !DILocalVariable(name: "l", arg: 1, scope: !14872, file: !2249, line: 874, type: !14838)
!14877 = !DILocation(line: 0, scope: !14872)
!14878 = !DILocation(line: 876, column: 32, scope: !14872)
!14879 = !DILocation(line: 876, column: 18, scope: !14872)
!14880 = !DILocation(line: 876, column: 48, scope: !14872)
!14881 = !DILocation(line: 876, column: 37, scope: !14872)
!14882 = !DILocation(line: 876, column: 35, scope: !14872)
!14883 = !DILocation(line: 876, column: 5, scope: !14872)
!14884 = !DILocation(line: 876, column: 16, scope: !14872)
!14885 = !DILocation(line: 877, column: 1, scope: !14872)
!14886 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2249, file: !2249, line: 888, type: !14887, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14889)
!14887 = !DISubroutineType(types: !14888)
!14888 = !{!105, !2253}
!14889 = !{!14890}
!14890 = !DILocalVariable(name: "thread", arg: 1, scope: !14886, file: !2249, line: 888, type: !2253)
!14891 = !DILocation(line: 0, scope: !14886)
!14892 = !DILocation(line: 893, column: 2, scope: !14886)
!14893 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2249, file: !2249, line: 897, type: !14894, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14896)
!14894 = !DISubroutineType(types: !14895)
!14895 = !{!105, !2253, !32}
!14896 = !{!14897, !14898}
!14897 = !DILocalVariable(name: "thread", arg: 1, scope: !14893, file: !2249, line: 897, type: !2253)
!14898 = !DILocalVariable(name: "options", arg: 2, scope: !14893, file: !2249, line: 897, type: !32)
!14899 = !DILocation(line: 0, scope: !14893)
!14900 = !DILocation(line: 902, column: 2, scope: !14893)
!14901 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2249, file: !2249, line: 1072, type: !14902, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14907)
!14902 = !DISubroutineType(types: !14903)
!14903 = !{!105, !2252, !14904}
!14904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14905, size: 32)
!14905 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !127, line: 234, baseType: !14906)
!14906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !127, line: 192, elements: !397)
!14907 = !{!14908, !14909}
!14908 = !DILocalVariable(name: "thread", arg: 1, scope: !14901, file: !2249, line: 1072, type: !2252)
!14909 = !DILocalVariable(name: "stats", arg: 2, scope: !14901, file: !2249, line: 1073, type: !14904)
!14910 = !DILocation(line: 0, scope: !14901)
!14911 = !DILocation(line: 1075, column: 14, scope: !14912)
!14912 = distinct !DILexicalBlock(scope: !14901, file: !2249, line: 1075, column: 6)
!14913 = !DILocation(line: 1075, column: 23, scope: !14912)
!14914 = !DILocation(line: 1086, column: 1, scope: !14901)
!14915 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2249, file: !2249, line: 1088, type: !14916, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !14918)
!14916 = !DISubroutineType(types: !14917)
!14917 = !{!105, !14904}
!14918 = !{!14919}
!14919 = !DILocalVariable(name: "stats", arg: 1, scope: !14915, file: !2249, line: 1088, type: !14904)
!14920 = !DILocation(line: 0, scope: !14915)
!14921 = !DILocation(line: 1094, column: 12, scope: !14922)
!14922 = distinct !DILexicalBlock(scope: !14915, file: !2249, line: 1094, column: 6)
!14923 = !DILocation(line: 1120, column: 1, scope: !14915)
!14924 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14925, file: !14925, line: 20, type: !266, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3187, retainedNodes: !397)
!14925 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14926 = !DILocation(line: 30, column: 2, scope: !14924)
!14927 = !DILocation(line: 31, column: 1, scope: !14924)
!14928 = distinct !DISubprogram(name: "idle", scope: !14925, file: !14925, line: 33, type: !256, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3187, retainedNodes: !14929)
!14929 = !{!14930, !14931, !14932}
!14930 = !DILocalVariable(name: "unused1", arg: 1, scope: !14928, file: !14925, line: 33, type: !104)
!14931 = !DILocalVariable(name: "unused2", arg: 2, scope: !14928, file: !14925, line: 33, type: !104)
!14932 = !DILocalVariable(name: "unused3", arg: 3, scope: !14928, file: !14925, line: 33, type: !104)
!14933 = !DILocation(line: 0, scope: !14928)
!14934 = !DILocation(line: 39, column: 2, scope: !14935)
!14935 = distinct !DILexicalBlock(scope: !14936, file: !14925, line: 39, column: 2)
!14936 = distinct !DILexicalBlock(scope: !14928, file: !14925, line: 39, column: 2)
!14937 = !DILocation(line: 39, column: 2, scope: !14936)
!14938 = !DILocation(line: 39, column: 2, scope: !14939)
!14939 = distinct !DILexicalBlock(scope: !14935, file: !14925, line: 39, column: 2)
!14940 = !DILocation(line: 55, column: 2, scope: !14941, inlinedAt: !14945)
!14941 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7485, file: !7485, line: 42, type: !7486, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3187, retainedNodes: !14942)
!14942 = !{!14943, !14944}
!14943 = !DILocalVariable(name: "key", scope: !14941, file: !7485, line: 44, type: !32)
!14944 = !DILocalVariable(name: "tmp", scope: !14941, file: !7485, line: 53, type: !32)
!14945 = distinct !DILocation(line: 62, column: 10, scope: !14946)
!14946 = distinct !DILexicalBlock(scope: !14928, file: !14925, line: 41, column: 15)
!14947 = !{i64 2040845}
!14948 = !DILocation(line: 0, scope: !14941, inlinedAt: !14945)
!14949 = !DILocation(line: 86, column: 3, scope: !14946)
!14950 = !DILocation(line: 41, column: 2, scope: !14928)
!14951 = distinct !{!14951, !14950, !14952}
!14952 = !DILocation(line: 105, column: 2, scope: !14928)
!14953 = distinct !DISubprogram(name: "k_cpu_idle", scope: !122, file: !122, line: 5627, type: !266, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3187, retainedNodes: !397)
!14954 = !DILocation(line: 5629, column: 2, scope: !14953)
!14955 = !DILocation(line: 5630, column: 1, scope: !14953)
!14956 = !DISubprogram(name: "arch_cpu_idle", scope: !247, file: !247, line: 167, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!14957 = distinct !DISubprogram(name: "k_msgq_init", scope: !14958, file: !14958, line: 35, type: !14959, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !14974)
!14958 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14959 = !DISubroutineType(types: !14960)
!14960 = !{null, !14961, !102, !111, !113}
!14961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14962, size: 32)
!14962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !122, line: 4204, size: 352, elements: !14963)
!14963 = !{!14964, !14965, !14966, !14967, !14968, !14969, !14970, !14971, !14972, !14973}
!14964 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14962, file: !122, line: 4206, baseType: !3225, size: 64)
!14965 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14962, file: !122, line: 4208, baseType: !3287, size: 32, offset: 64)
!14966 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !14962, file: !122, line: 4210, baseType: !111, size: 32, offset: 96)
!14967 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !14962, file: !122, line: 4212, baseType: !113, size: 32, offset: 128)
!14968 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !14962, file: !122, line: 4214, baseType: !102, size: 32, offset: 160)
!14969 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !14962, file: !122, line: 4216, baseType: !102, size: 32, offset: 192)
!14970 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !14962, file: !122, line: 4218, baseType: !102, size: 32, offset: 224)
!14971 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !14962, file: !122, line: 4220, baseType: !102, size: 32, offset: 256)
!14972 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !14962, file: !122, line: 4222, baseType: !113, size: 32, offset: 288)
!14973 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !14962, file: !122, line: 4227, baseType: !169, size: 8, offset: 320)
!14974 = !{!14975, !14976, !14977, !14978}
!14975 = !DILocalVariable(name: "msgq", arg: 1, scope: !14957, file: !14958, line: 35, type: !14961)
!14976 = !DILocalVariable(name: "buffer", arg: 2, scope: !14957, file: !14958, line: 35, type: !102)
!14977 = !DILocalVariable(name: "msg_size", arg: 3, scope: !14957, file: !14958, line: 35, type: !111)
!14978 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !14957, file: !14958, line: 36, type: !113)
!14979 = !DILocation(line: 0, scope: !14957)
!14980 = !DILocation(line: 38, column: 8, scope: !14957)
!14981 = !DILocation(line: 38, column: 17, scope: !14957)
!14982 = !DILocation(line: 39, column: 8, scope: !14957)
!14983 = !DILocation(line: 39, column: 17, scope: !14957)
!14984 = !DILocation(line: 40, column: 8, scope: !14957)
!14985 = !DILocation(line: 40, column: 21, scope: !14957)
!14986 = !DILocation(line: 41, column: 40, scope: !14957)
!14987 = !DILocation(line: 41, column: 28, scope: !14957)
!14988 = !DILocation(line: 41, column: 8, scope: !14957)
!14989 = !DILocation(line: 41, column: 19, scope: !14957)
!14990 = !DILocation(line: 42, column: 8, scope: !14957)
!14991 = !DILocation(line: 42, column: 17, scope: !14957)
!14992 = !DILocation(line: 43, column: 8, scope: !14957)
!14993 = !DILocation(line: 43, column: 18, scope: !14957)
!14994 = !DILocation(line: 44, column: 8, scope: !14957)
!14995 = !DILocation(line: 44, column: 18, scope: !14957)
!14996 = !DILocation(line: 45, column: 8, scope: !14957)
!14997 = !DILocation(line: 45, column: 14, scope: !14957)
!14998 = !DILocation(line: 46, column: 22, scope: !14957)
!14999 = !DILocation(line: 46, column: 2, scope: !14957)
!15000 = !DILocation(line: 47, column: 15, scope: !14957)
!15001 = !DILocation(line: 55, column: 1, scope: !14957)
!15002 = distinct !DISubprogram(name: "z_waitq_init", scope: !14535, file: !14535, line: 47, type: !15003, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !15005)
!15003 = !DISubroutineType(types: !15004)
!15004 = !{null, !3224}
!15005 = !{!15006}
!15006 = !DILocalVariable(name: "w", arg: 1, scope: !15002, file: !14535, line: 47, type: !3224)
!15007 = !DILocation(line: 0, scope: !15002)
!15008 = !DILocation(line: 49, column: 21, scope: !15002)
!15009 = !DILocation(line: 49, column: 2, scope: !15002)
!15010 = !DILocation(line: 50, column: 1, scope: !15002)
!15011 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !15012, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !15015)
!15012 = !DISubroutineType(types: !15013)
!15013 = !{null, !15014}
!15014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3229, size: 32)
!15015 = !{!15016}
!15016 = !DILocalVariable(name: "list", arg: 1, scope: !15011, file: !137, line: 197, type: !15014)
!15017 = !DILocation(line: 0, scope: !15011)
!15018 = !DILocation(line: 199, column: 8, scope: !15011)
!15019 = !DILocation(line: 199, column: 13, scope: !15011)
!15020 = !DILocation(line: 200, column: 8, scope: !15011)
!15021 = !DILocation(line: 200, column: 13, scope: !15011)
!15022 = !DILocation(line: 201, column: 1, scope: !15011)
!15023 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !14958, file: !14958, line: 57, type: !15024, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !15026)
!15024 = !DISubroutineType(types: !15025)
!15025 = !{!105, !14961, !111, !113}
!15026 = !{!15027, !15028, !15029, !15030, !15031, !15032}
!15027 = !DILocalVariable(name: "msgq", arg: 1, scope: !15023, file: !14958, line: 57, type: !14961)
!15028 = !DILocalVariable(name: "msg_size", arg: 2, scope: !15023, file: !14958, line: 57, type: !111)
!15029 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !15023, file: !14958, line: 58, type: !113)
!15030 = !DILocalVariable(name: "buffer", scope: !15023, file: !14958, line: 60, type: !104)
!15031 = !DILocalVariable(name: "ret", scope: !15023, file: !14958, line: 61, type: !105)
!15032 = !DILocalVariable(name: "total_size", scope: !15023, file: !14958, line: 62, type: !111)
!15033 = !DILocation(line: 0, scope: !15023)
!15034 = !DILocation(line: 62, column: 2, scope: !15023)
!15035 = !DILocation(line: 66, column: 6, scope: !15036)
!15036 = distinct !DILexicalBlock(scope: !15023, file: !14958, line: 66, column: 6)
!15037 = !DILocation(line: 66, column: 6, scope: !15023)
!15038 = !DILocation(line: 69, column: 28, scope: !15039)
!15039 = distinct !DILexicalBlock(scope: !15036, file: !14958, line: 68, column: 9)
!15040 = !DILocation(line: 69, column: 12, scope: !15039)
!15041 = !DILocation(line: 70, column: 14, scope: !15042)
!15042 = distinct !DILexicalBlock(scope: !15039, file: !14958, line: 70, column: 7)
!15043 = !DILocation(line: 70, column: 7, scope: !15039)
!15044 = !DILocation(line: 71, column: 4, scope: !15045)
!15045 = distinct !DILexicalBlock(scope: !15042, file: !14958, line: 70, column: 23)
!15046 = !DILocation(line: 72, column: 10, scope: !15045)
!15047 = !DILocation(line: 72, column: 16, scope: !15045)
!15048 = !DILocation(line: 74, column: 3, scope: !15045)
!15049 = !DILocation(line: 0, scope: !15036)
!15050 = !DILocation(line: 82, column: 1, scope: !15023)
!15051 = !DILocation(line: 81, column: 2, scope: !15023)
!15052 = distinct !DISubprogram(name: "size_mul_overflow", scope: !15053, file: !15053, line: 105, type: !15054, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !15056)
!15053 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15054 = !DISubroutineType(types: !15055)
!15055 = !{!492, !111, !111, !2657}
!15056 = !{!15057, !15058, !15059}
!15057 = !DILocalVariable(name: "a", arg: 1, scope: !15052, file: !15053, line: 105, type: !111)
!15058 = !DILocalVariable(name: "b", arg: 2, scope: !15052, file: !15053, line: 105, type: !111)
!15059 = !DILocalVariable(name: "result", arg: 3, scope: !15052, file: !15053, line: 105, type: !2657)
!15060 = !DILocation(line: 0, scope: !15052)
!15061 = !DILocation(line: 107, column: 9, scope: !15052)
!15062 = !DILocation(line: 107, column: 2, scope: !15052)
!15063 = distinct !DISubprogram(name: "z_thread_malloc", scope: !15064, file: !15064, line: 102, type: !15065, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !15066)
!15064 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15065 = !DISubroutineType(types: !3168)
!15066 = !{!15067}
!15067 = !DILocalVariable(name: "size", arg: 1, scope: !15063, file: !15064, line: 102, type: !111)
!15068 = !DILocation(line: 0, scope: !15063)
!15069 = !DILocation(line: 104, column: 9, scope: !15063)
!15070 = !DILocation(line: 104, column: 2, scope: !15063)
!15071 = !DISubprogram(name: "z_thread_aligned_alloc", scope: !15064, file: !15064, line: 87, type: !15072, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!15072 = !DISubroutineType(types: !15073)
!15073 = !{!104, !111, !111}
!15074 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !14958, file: !14958, line: 95, type: !15075, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !15077)
!15075 = !DISubroutineType(types: !15076)
!15076 = !{!105, !14961}
!15077 = !{!15078}
!15078 = !DILocalVariable(name: "msgq", arg: 1, scope: !15074, file: !14958, line: 95, type: !14961)
!15079 = !DILocation(line: 0, scope: !15074)
!15080 = !DILocation(line: 99, column: 2, scope: !15081)
!15081 = distinct !DILexicalBlock(scope: !15074, file: !14958, line: 99, column: 2)
!15082 = !DILocation(line: 99, column: 2, scope: !15074)
!15083 = !DILocation(line: 105, column: 13, scope: !15084)
!15084 = distinct !DILexicalBlock(scope: !15074, file: !14958, line: 105, column: 6)
!15085 = !DILocation(line: 105, column: 19, scope: !15084)
!15086 = !DILocation(line: 105, column: 40, scope: !15084)
!15087 = !DILocation(line: 105, column: 6, scope: !15074)
!15088 = !DILocation(line: 106, column: 16, scope: !15089)
!15089 = distinct !DILexicalBlock(scope: !15084, file: !14958, line: 105, column: 47)
!15090 = !DILocation(line: 106, column: 3, scope: !15089)
!15091 = !DILocation(line: 107, column: 15, scope: !15089)
!15092 = !DILocation(line: 108, column: 2, scope: !15089)
!15093 = !DILocation(line: 113, column: 1, scope: !15074)
!15094 = distinct !DISubprogram(name: "z_waitq_head", scope: !14535, file: !14535, line: 52, type: !15095, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !15097)
!15095 = !DISubroutineType(types: !15096)
!15096 = !{!3207, !3224}
!15097 = !{!15098}
!15098 = !DILocalVariable(name: "w", arg: 1, scope: !15094, file: !14535, line: 52, type: !3224)
!15099 = !DILocation(line: 0, scope: !15094)
!15100 = !DILocation(line: 54, column: 52, scope: !15094)
!15101 = !DILocation(line: 54, column: 28, scope: !15094)
!15102 = !DILocation(line: 54, column: 9, scope: !15094)
!15103 = !DILocation(line: 54, column: 2, scope: !15094)
!15104 = !DISubprogram(name: "k_free", scope: !122, file: !122, line: 5272, type: !7740, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!15105 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !137, file: !137, line: 294, type: !15106, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !15108)
!15106 = !DISubroutineType(types: !15107)
!15107 = !{!3192, !15014}
!15108 = !{!15109}
!15109 = !DILocalVariable(name: "list", arg: 1, scope: !15105, file: !137, line: 294, type: !15014)
!15110 = !DILocation(line: 0, scope: !15105)
!15111 = !DILocation(line: 296, column: 9, scope: !15105)
!15112 = !DILocation(line: 296, column: 49, scope: !15105)
!15113 = !DILocation(line: 296, column: 2, scope: !15105)
!15114 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !137, file: !137, line: 266, type: !15115, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !15117)
!15115 = !DISubroutineType(types: !15116)
!15116 = !{!492, !15014}
!15117 = !{!15118}
!15118 = !DILocalVariable(name: "list", arg: 1, scope: !15114, file: !137, line: 266, type: !15014)
!15119 = !DILocation(line: 0, scope: !15114)
!15120 = !DILocation(line: 268, column: 15, scope: !15114)
!15121 = !DILocation(line: 268, column: 20, scope: !15114)
!15122 = !DILocation(line: 268, column: 2, scope: !15114)
!15123 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !14958, file: !14958, line: 116, type: !15124, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !15130)
!15124 = !DISubroutineType(types: !15125)
!15125 = !{!105, !14961, !13, !15126}
!15126 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !15127)
!15127 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !15128)
!15128 = !{!15129}
!15129 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15127, file: !108, line: 66, baseType: !107, size: 64)
!15130 = !{!15131, !15132, !15133, !15134, !15135, !15140}
!15131 = !DILocalVariable(name: "msgq", arg: 1, scope: !15123, file: !14958, line: 116, type: !14961)
!15132 = !DILocalVariable(name: "data", arg: 2, scope: !15123, file: !14958, line: 116, type: !13)
!15133 = !DILocalVariable(name: "timeout", arg: 3, scope: !15123, file: !14958, line: 116, type: !15126)
!15134 = !DILocalVariable(name: "pending_thread", scope: !15123, file: !14958, line: 120, type: !3207)
!15135 = !DILocalVariable(name: "key", scope: !15123, file: !14958, line: 121, type: !15136)
!15136 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !15137)
!15137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !15138)
!15138 = !{!15139}
!15139 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15137, file: !236, line: 33, baseType: !105, size: 32)
!15140 = !DILocalVariable(name: "result", scope: !15123, file: !14958, line: 122, type: !105)
!15141 = !DILocation(line: 0, scope: !15123)
!15142 = !DILocation(line: 1031, column: 3, scope: !15143, inlinedAt: !15146)
!15143 = distinct !DISubprogram(name: "__get_IPSR", scope: !7803, file: !7803, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !15144)
!15144 = !{!15145}
!15145 = !DILocalVariable(name: "result", scope: !15143, file: !7803, line: 1029, type: !113)
!15146 = distinct !DILocation(line: 48, column: 10, scope: !15147, inlinedAt: !15148)
!15147 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8850, file: !8850, line: 46, type: !8851, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !397)
!15148 = distinct !DILocation(line: 118, column: 2, scope: !15149)
!15149 = distinct !DILexicalBlock(scope: !15150, file: !14958, line: 118, column: 2)
!15150 = distinct !DILexicalBlock(scope: !15123, file: !14958, line: 118, column: 2)
!15151 = !{i64 2921557}
!15152 = !DILocation(line: 0, scope: !15143, inlinedAt: !15146)
!15153 = !DILocation(line: 48, column: 9, scope: !15147, inlinedAt: !15148)
!15154 = !DILocation(line: 118, column: 2, scope: !15149)
!15155 = !DILocation(line: 118, column: 2, scope: !15156)
!15156 = distinct !DILexicalBlock(scope: !15149, file: !14958, line: 118, column: 2)
!15157 = !DILocation(line: 124, column: 27, scope: !15123)
!15158 = !DILocalVariable(name: "l", arg: 1, scope: !15159, file: !236, line: 136, type: !15162)
!15159 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !15160, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !15163)
!15160 = !DISubroutineType(types: !15161)
!15161 = !{!15136, !15162}
!15162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3287, size: 32)
!15163 = !{!15158, !15164}
!15164 = !DILocalVariable(name: "k", scope: !15159, file: !236, line: 139, type: !15136)
!15165 = !DILocation(line: 0, scope: !15159, inlinedAt: !15166)
!15166 = distinct !DILocation(line: 124, column: 8, scope: !15123)
!15167 = !DILocation(line: 55, column: 2, scope: !15168, inlinedAt: !15172)
!15168 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7485, file: !7485, line: 42, type: !7486, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !15169)
!15169 = !{!15170, !15171}
!15170 = !DILocalVariable(name: "key", scope: !15168, file: !7485, line: 44, type: !32)
!15171 = !DILocalVariable(name: "tmp", scope: !15168, file: !7485, line: 53, type: !32)
!15172 = distinct !DILocation(line: 145, column: 10, scope: !15159, inlinedAt: !15166)
!15173 = !{i64 2046982}
!15174 = !DILocation(line: 0, scope: !15168, inlinedAt: !15172)
!15175 = !DILocation(line: 148, column: 2, scope: !15176, inlinedAt: !15166)
!15176 = distinct !DILexicalBlock(scope: !15177, file: !236, line: 148, column: 2)
!15177 = distinct !DILexicalBlock(scope: !15159, file: !236, line: 148, column: 2)
!15178 = !DILocation(line: 148, column: 2, scope: !15177, inlinedAt: !15166)
!15179 = !DILocation(line: 148, column: 2, scope: !15180, inlinedAt: !15166)
!15180 = distinct !DILexicalBlock(scope: !15176, file: !236, line: 148, column: 2)
!15181 = !DILocation(line: 160, column: 2, scope: !15159, inlinedAt: !15166)
!15182 = !DILocation(line: 128, column: 12, scope: !15183)
!15183 = distinct !DILexicalBlock(scope: !15123, file: !14958, line: 128, column: 6)
!15184 = !DILocation(line: 128, column: 30, scope: !15183)
!15185 = !DILocation(line: 128, column: 22, scope: !15183)
!15186 = !DILocation(line: 128, column: 6, scope: !15123)
!15187 = !DILocation(line: 130, column: 49, scope: !15188)
!15188 = distinct !DILexicalBlock(scope: !15183, file: !14958, line: 128, column: 40)
!15189 = !DILocation(line: 130, column: 20, scope: !15188)
!15190 = !DILocation(line: 131, column: 22, scope: !15191)
!15191 = distinct !DILexicalBlock(scope: !15188, file: !14958, line: 131, column: 7)
!15192 = !DILocation(line: 131, column: 7, scope: !15188)
!15193 = !DILocation(line: 135, column: 38, scope: !15194)
!15194 = distinct !DILexicalBlock(scope: !15191, file: !14958, line: 131, column: 31)
!15195 = !DILocation(line: 136, column: 17, scope: !15194)
!15196 = !DILocation(line: 135, column: 10, scope: !15194)
!15197 = !DILocalVariable(name: "thread", arg: 1, scope: !15198, file: !14215, line: 65, type: !3207)
!15198 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14215, file: !14215, line: 65, type: !15199, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !15201)
!15199 = !DISubroutineType(types: !15200)
!15200 = !{null, !3207, !32}
!15201 = !{!15197, !15202}
!15202 = !DILocalVariable(name: "value", arg: 2, scope: !15198, file: !14215, line: 65, type: !32)
!15203 = !DILocation(line: 0, scope: !15198, inlinedAt: !15204)
!15204 = distinct !DILocation(line: 138, column: 4, scope: !15194)
!15205 = !DILocation(line: 67, column: 15, scope: !15198, inlinedAt: !15204)
!15206 = !DILocation(line: 67, column: 33, scope: !15198, inlinedAt: !15204)
!15207 = !DILocation(line: 139, column: 4, scope: !15194)
!15208 = !DILocation(line: 140, column: 4, scope: !15194)
!15209 = !DILocation(line: 141, column: 4, scope: !15194)
!15210 = !DILocation(line: 144, column: 23, scope: !15211)
!15211 = distinct !DILexicalBlock(scope: !15191, file: !14958, line: 142, column: 10)
!15212 = !DILocation(line: 144, column: 46, scope: !15211)
!15213 = !DILocation(line: 144, column: 10, scope: !15211)
!15214 = !DILocation(line: 145, column: 29, scope: !15211)
!15215 = !DILocation(line: 145, column: 20, scope: !15211)
!15216 = !DILocation(line: 146, column: 33, scope: !15217)
!15217 = distinct !DILexicalBlock(scope: !15211, file: !14958, line: 146, column: 8)
!15218 = !DILocation(line: 146, column: 24, scope: !15217)
!15219 = !DILocation(line: 146, column: 8, scope: !15211)
!15220 = !DILocation(line: 147, column: 29, scope: !15221)
!15221 = distinct !DILexicalBlock(scope: !15217, file: !14958, line: 146, column: 45)
!15222 = !DILocation(line: 147, column: 21, scope: !15221)
!15223 = !DILocation(line: 148, column: 4, scope: !15221)
!15224 = !DILocation(line: 149, column: 19, scope: !15211)
!15225 = !DILocation(line: 155, column: 2, scope: !15188)
!15226 = !DILocation(line: 155, column: 13, scope: !15183)
!15227 = !DILocation(line: 162, column: 3, scope: !15228)
!15228 = distinct !DILexicalBlock(scope: !15229, file: !14958, line: 158, column: 9)
!15229 = distinct !DILexicalBlock(scope: !15183, file: !14958, line: 155, column: 13)
!15230 = !DILocation(line: 162, column: 18, scope: !15228)
!15231 = !DILocation(line: 162, column: 28, scope: !15228)
!15232 = !DILocation(line: 164, column: 49, scope: !15228)
!15233 = !DILocation(line: 164, column: 12, scope: !15228)
!15234 = !DILocation(line: 166, column: 3, scope: !15228)
!15235 = !DILocation(line: 0, scope: !15183)
!15236 = !DILocalVariable(name: "key", arg: 2, scope: !15237, file: !236, line: 190, type: !15136)
!15237 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !15238, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !15240)
!15238 = !DISubroutineType(types: !15239)
!15239 = !{null, !15162, !15136}
!15240 = !{!15241, !15236}
!15241 = !DILocalVariable(name: "l", arg: 1, scope: !15237, file: !236, line: 189, type: !15162)
!15242 = !DILocation(line: 0, scope: !15237, inlinedAt: !15243)
!15243 = distinct !DILocation(line: 171, column: 2, scope: !15123)
!15244 = !DILocation(line: 194, column: 2, scope: !15245, inlinedAt: !15243)
!15245 = distinct !DILexicalBlock(scope: !15246, file: !236, line: 194, column: 2)
!15246 = distinct !DILexicalBlock(scope: !15237, file: !236, line: 194, column: 2)
!15247 = !DILocation(line: 194, column: 2, scope: !15246, inlinedAt: !15243)
!15248 = !DILocation(line: 194, column: 2, scope: !15249, inlinedAt: !15243)
!15249 = distinct !DILexicalBlock(scope: !15245, file: !236, line: 194, column: 2)
!15250 = !DILocalVariable(name: "key", arg: 1, scope: !15251, file: !7485, line: 84, type: !32)
!15251 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7485, file: !7485, line: 84, type: !7496, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !15252)
!15252 = !{!15250}
!15253 = !DILocation(line: 0, scope: !15251, inlinedAt: !15254)
!15254 = distinct !DILocation(line: 215, column: 2, scope: !15237, inlinedAt: !15243)
!15255 = !DILocation(line: 95, column: 2, scope: !15251, inlinedAt: !15254)
!15256 = !{i64 2047799}
!15257 = !DILocation(line: 173, column: 2, scope: !15123)
!15258 = !DILocation(line: 174, column: 1, scope: !15123)
!15259 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !14958, file: !14958, line: 188, type: !15260, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !15268)
!15260 = !DISubroutineType(types: !15261)
!15261 = !{null, !14961, !15262}
!15262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15263, size: 32)
!15263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !122, line: 4259, size: 96, elements: !15264)
!15264 = !{!15265, !15266, !15267}
!15265 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !15263, file: !122, line: 4261, baseType: !111, size: 32)
!15266 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !15263, file: !122, line: 4263, baseType: !113, size: 32, offset: 32)
!15267 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !15263, file: !122, line: 4265, baseType: !113, size: 32, offset: 64)
!15268 = !{!15269, !15270}
!15269 = !DILocalVariable(name: "msgq", arg: 1, scope: !15259, file: !14958, line: 188, type: !14961)
!15270 = !DILocalVariable(name: "attrs", arg: 2, scope: !15259, file: !14958, line: 188, type: !15262)
!15271 = !DILocation(line: 0, scope: !15259)
!15272 = !DILocation(line: 190, column: 26, scope: !15259)
!15273 = !DILocation(line: 190, column: 9, scope: !15259)
!15274 = !DILocation(line: 190, column: 18, scope: !15259)
!15275 = !DILocation(line: 191, column: 26, scope: !15259)
!15276 = !DILocation(line: 191, column: 9, scope: !15259)
!15277 = !DILocation(line: 191, column: 18, scope: !15259)
!15278 = !DILocation(line: 192, column: 27, scope: !15259)
!15279 = !DILocation(line: 192, column: 9, scope: !15259)
!15280 = !DILocation(line: 192, column: 19, scope: !15259)
!15281 = !DILocation(line: 193, column: 1, scope: !15259)
!15282 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !14958, file: !14958, line: 206, type: !15283, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !15285)
!15283 = !DISubroutineType(types: !15284)
!15284 = !{!105, !14961, !104, !15126}
!15285 = !{!15286, !15287, !15288, !15289, !15290, !15291}
!15286 = !DILocalVariable(name: "msgq", arg: 1, scope: !15282, file: !14958, line: 206, type: !14961)
!15287 = !DILocalVariable(name: "data", arg: 2, scope: !15282, file: !14958, line: 206, type: !104)
!15288 = !DILocalVariable(name: "timeout", arg: 3, scope: !15282, file: !14958, line: 206, type: !15126)
!15289 = !DILocalVariable(name: "key", scope: !15282, file: !14958, line: 210, type: !15136)
!15290 = !DILocalVariable(name: "pending_thread", scope: !15282, file: !14958, line: 211, type: !3207)
!15291 = !DILocalVariable(name: "result", scope: !15282, file: !14958, line: 212, type: !105)
!15292 = !DILocation(line: 0, scope: !15282)
!15293 = !DILocation(line: 1031, column: 3, scope: !15143, inlinedAt: !15294)
!15294 = distinct !DILocation(line: 48, column: 10, scope: !15147, inlinedAt: !15295)
!15295 = distinct !DILocation(line: 208, column: 2, scope: !15296)
!15296 = distinct !DILexicalBlock(scope: !15297, file: !14958, line: 208, column: 2)
!15297 = distinct !DILexicalBlock(scope: !15282, file: !14958, line: 208, column: 2)
!15298 = !DILocation(line: 0, scope: !15143, inlinedAt: !15294)
!15299 = !DILocation(line: 48, column: 9, scope: !15147, inlinedAt: !15295)
!15300 = !DILocation(line: 208, column: 2, scope: !15296)
!15301 = !DILocation(line: 208, column: 2, scope: !15302)
!15302 = distinct !DILexicalBlock(scope: !15296, file: !14958, line: 208, column: 2)
!15303 = !DILocation(line: 214, column: 27, scope: !15282)
!15304 = !DILocation(line: 0, scope: !15159, inlinedAt: !15305)
!15305 = distinct !DILocation(line: 214, column: 8, scope: !15282)
!15306 = !DILocation(line: 55, column: 2, scope: !15168, inlinedAt: !15307)
!15307 = distinct !DILocation(line: 145, column: 10, scope: !15159, inlinedAt: !15305)
!15308 = !DILocation(line: 0, scope: !15168, inlinedAt: !15307)
!15309 = !DILocation(line: 148, column: 2, scope: !15176, inlinedAt: !15305)
!15310 = !DILocation(line: 148, column: 2, scope: !15177, inlinedAt: !15305)
!15311 = !DILocation(line: 148, column: 2, scope: !15180, inlinedAt: !15305)
!15312 = !DILocation(line: 160, column: 2, scope: !15159, inlinedAt: !15305)
!15313 = !DILocation(line: 218, column: 12, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !15282, file: !14958, line: 218, column: 6)
!15315 = !DILocation(line: 218, column: 22, scope: !15314)
!15316 = !DILocation(line: 218, column: 6, scope: !15282)
!15317 = !DILocation(line: 220, column: 28, scope: !15318)
!15318 = distinct !DILexicalBlock(scope: !15314, file: !14958, line: 218, column: 28)
!15319 = !DILocation(line: 220, column: 44, scope: !15318)
!15320 = !DILocation(line: 220, column: 9, scope: !15318)
!15321 = !DILocation(line: 221, column: 27, scope: !15318)
!15322 = !DILocation(line: 221, column: 18, scope: !15318)
!15323 = !DILocation(line: 222, column: 31, scope: !15324)
!15324 = distinct !DILexicalBlock(scope: !15318, file: !14958, line: 222, column: 7)
!15325 = !DILocation(line: 222, column: 22, scope: !15324)
!15326 = !DILocation(line: 222, column: 7, scope: !15318)
!15327 = !DILocation(line: 223, column: 27, scope: !15328)
!15328 = distinct !DILexicalBlock(scope: !15324, file: !14958, line: 222, column: 43)
!15329 = !DILocation(line: 223, column: 19, scope: !15328)
!15330 = !DILocation(line: 224, column: 3, scope: !15328)
!15331 = !DILocation(line: 225, column: 18, scope: !15318)
!15332 = !DILocation(line: 228, column: 49, scope: !15318)
!15333 = !DILocation(line: 228, column: 20, scope: !15318)
!15334 = !DILocation(line: 229, column: 22, scope: !15335)
!15335 = distinct !DILexicalBlock(scope: !15318, file: !14958, line: 229, column: 7)
!15336 = !DILocation(line: 229, column: 7, scope: !15318)
!15337 = !DILocation(line: 233, column: 23, scope: !15338)
!15338 = distinct !DILexicalBlock(scope: !15335, file: !14958, line: 229, column: 31)
!15339 = !DILocation(line: 233, column: 55, scope: !15338)
!15340 = !DILocation(line: 234, column: 17, scope: !15338)
!15341 = !DILocation(line: 233, column: 10, scope: !15338)
!15342 = !DILocation(line: 235, column: 29, scope: !15338)
!15343 = !DILocation(line: 235, column: 20, scope: !15338)
!15344 = !DILocation(line: 236, column: 33, scope: !15345)
!15345 = distinct !DILexicalBlock(scope: !15338, file: !14958, line: 236, column: 8)
!15346 = !DILocation(line: 236, column: 24, scope: !15345)
!15347 = !DILocation(line: 236, column: 8, scope: !15338)
!15348 = !DILocation(line: 237, column: 29, scope: !15349)
!15349 = distinct !DILexicalBlock(scope: !15345, file: !14958, line: 236, column: 45)
!15350 = !DILocation(line: 237, column: 21, scope: !15349)
!15351 = !DILocation(line: 238, column: 4, scope: !15349)
!15352 = !DILocation(line: 239, column: 19, scope: !15338)
!15353 = !DILocation(line: 0, scope: !15198, inlinedAt: !15354)
!15354 = distinct !DILocation(line: 242, column: 4, scope: !15338)
!15355 = !DILocation(line: 67, column: 15, scope: !15198, inlinedAt: !15354)
!15356 = !DILocation(line: 67, column: 33, scope: !15198, inlinedAt: !15354)
!15357 = !DILocation(line: 243, column: 4, scope: !15338)
!15358 = !DILocation(line: 244, column: 4, scope: !15338)
!15359 = !DILocation(line: 248, column: 4, scope: !15338)
!15360 = !DILocation(line: 251, column: 13, scope: !15314)
!15361 = !DILocation(line: 258, column: 3, scope: !15362)
!15362 = distinct !DILexicalBlock(scope: !15363, file: !14958, line: 254, column: 9)
!15363 = distinct !DILexicalBlock(scope: !15314, file: !14958, line: 251, column: 13)
!15364 = !DILocation(line: 258, column: 18, scope: !15362)
!15365 = !DILocation(line: 258, column: 28, scope: !15362)
!15366 = !DILocation(line: 260, column: 49, scope: !15362)
!15367 = !DILocation(line: 260, column: 12, scope: !15362)
!15368 = !DILocation(line: 262, column: 3, scope: !15362)
!15369 = !DILocation(line: 0, scope: !15314)
!15370 = !DILocation(line: 0, scope: !15237, inlinedAt: !15371)
!15371 = distinct !DILocation(line: 267, column: 2, scope: !15282)
!15372 = !DILocation(line: 194, column: 2, scope: !15245, inlinedAt: !15371)
!15373 = !DILocation(line: 194, column: 2, scope: !15246, inlinedAt: !15371)
!15374 = !DILocation(line: 194, column: 2, scope: !15249, inlinedAt: !15371)
!15375 = !DILocation(line: 0, scope: !15251, inlinedAt: !15376)
!15376 = distinct !DILocation(line: 215, column: 2, scope: !15237, inlinedAt: !15371)
!15377 = !DILocation(line: 95, column: 2, scope: !15251, inlinedAt: !15376)
!15378 = !DILocation(line: 269, column: 2, scope: !15282)
!15379 = !DILocation(line: 270, column: 1, scope: !15282)
!15380 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !14958, file: !14958, line: 284, type: !15381, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !15383)
!15381 = !DISubroutineType(types: !15382)
!15382 = !{!105, !14961, !104}
!15383 = !{!15384, !15385, !15386, !15387}
!15384 = !DILocalVariable(name: "msgq", arg: 1, scope: !15380, file: !14958, line: 284, type: !14961)
!15385 = !DILocalVariable(name: "data", arg: 2, scope: !15380, file: !14958, line: 284, type: !104)
!15386 = !DILocalVariable(name: "key", scope: !15380, file: !14958, line: 286, type: !15136)
!15387 = !DILocalVariable(name: "result", scope: !15380, file: !14958, line: 287, type: !105)
!15388 = !DILocation(line: 0, scope: !15380)
!15389 = !DILocation(line: 289, column: 27, scope: !15380)
!15390 = !DILocation(line: 0, scope: !15159, inlinedAt: !15391)
!15391 = distinct !DILocation(line: 289, column: 8, scope: !15380)
!15392 = !DILocation(line: 55, column: 2, scope: !15168, inlinedAt: !15393)
!15393 = distinct !DILocation(line: 145, column: 10, scope: !15159, inlinedAt: !15391)
!15394 = !DILocation(line: 0, scope: !15168, inlinedAt: !15393)
!15395 = !DILocation(line: 148, column: 2, scope: !15176, inlinedAt: !15391)
!15396 = !DILocation(line: 148, column: 2, scope: !15177, inlinedAt: !15391)
!15397 = !DILocation(line: 148, column: 2, scope: !15180, inlinedAt: !15391)
!15398 = !DILocation(line: 160, column: 2, scope: !15159, inlinedAt: !15391)
!15399 = !DILocation(line: 291, column: 12, scope: !15400)
!15400 = distinct !DILexicalBlock(scope: !15380, file: !14958, line: 291, column: 6)
!15401 = !DILocation(line: 291, column: 22, scope: !15400)
!15402 = !DILocation(line: 291, column: 6, scope: !15380)
!15403 = !DILocation(line: 293, column: 28, scope: !15404)
!15404 = distinct !DILexicalBlock(scope: !15400, file: !14958, line: 291, column: 28)
!15405 = !DILocation(line: 293, column: 44, scope: !15404)
!15406 = !DILocation(line: 293, column: 9, scope: !15404)
!15407 = !DILocation(line: 295, column: 2, scope: !15404)
!15408 = !DILocation(line: 0, scope: !15400)
!15409 = !DILocation(line: 0, scope: !15237, inlinedAt: !15410)
!15410 = distinct !DILocation(line: 302, column: 2, scope: !15380)
!15411 = !DILocation(line: 194, column: 2, scope: !15245, inlinedAt: !15410)
!15412 = !DILocation(line: 194, column: 2, scope: !15246, inlinedAt: !15410)
!15413 = !DILocation(line: 194, column: 2, scope: !15249, inlinedAt: !15410)
!15414 = !DILocation(line: 0, scope: !15251, inlinedAt: !15415)
!15415 = distinct !DILocation(line: 215, column: 2, scope: !15237, inlinedAt: !15410)
!15416 = !DILocation(line: 95, column: 2, scope: !15251, inlinedAt: !15415)
!15417 = !DILocation(line: 304, column: 2, scope: !15380)
!15418 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !14958, file: !14958, line: 318, type: !15419, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3189, retainedNodes: !15421)
!15419 = !DISubroutineType(types: !15420)
!15420 = !{null, !14961}
!15421 = !{!15422, !15423, !15424}
!15422 = !DILocalVariable(name: "msgq", arg: 1, scope: !15418, file: !14958, line: 318, type: !14961)
!15423 = !DILocalVariable(name: "key", scope: !15418, file: !14958, line: 320, type: !15136)
!15424 = !DILocalVariable(name: "pending_thread", scope: !15418, file: !14958, line: 321, type: !3207)
!15425 = !DILocation(line: 0, scope: !15418)
!15426 = !DILocation(line: 323, column: 27, scope: !15418)
!15427 = !DILocation(line: 0, scope: !15159, inlinedAt: !15428)
!15428 = distinct !DILocation(line: 323, column: 8, scope: !15418)
!15429 = !DILocation(line: 55, column: 2, scope: !15168, inlinedAt: !15430)
!15430 = distinct !DILocation(line: 145, column: 10, scope: !15159, inlinedAt: !15428)
!15431 = !DILocation(line: 0, scope: !15168, inlinedAt: !15430)
!15432 = !DILocation(line: 148, column: 2, scope: !15176, inlinedAt: !15428)
!15433 = !DILocation(line: 148, column: 2, scope: !15177, inlinedAt: !15428)
!15434 = !DILocation(line: 148, column: 2, scope: !15180, inlinedAt: !15428)
!15435 = !DILocation(line: 160, column: 2, scope: !15159, inlinedAt: !15428)
!15436 = !DILocation(line: 328, column: 27, scope: !15418)
!15437 = !DILocation(line: 328, column: 65, scope: !15418)
!15438 = !DILocation(line: 328, column: 2, scope: !15418)
!15439 = !DILocation(line: 0, scope: !15198, inlinedAt: !15440)
!15440 = distinct !DILocation(line: 329, column: 3, scope: !15441)
!15441 = distinct !DILexicalBlock(scope: !15418, file: !14958, line: 328, column: 74)
!15442 = !DILocation(line: 67, column: 15, scope: !15198, inlinedAt: !15440)
!15443 = !DILocation(line: 67, column: 33, scope: !15198, inlinedAt: !15440)
!15444 = !DILocation(line: 330, column: 3, scope: !15441)
!15445 = distinct !{!15445, !15438, !15446}
!15446 = !DILocation(line: 331, column: 2, scope: !15418)
!15447 = !DILocation(line: 333, column: 8, scope: !15418)
!15448 = !DILocation(line: 333, column: 18, scope: !15418)
!15449 = !DILocation(line: 334, column: 25, scope: !15418)
!15450 = !DILocation(line: 334, column: 8, scope: !15418)
!15451 = !DILocation(line: 334, column: 17, scope: !15418)
!15452 = !DILocation(line: 336, column: 2, scope: !15418)
!15453 = !DILocation(line: 337, column: 1, scope: !15418)
!15454 = distinct !DISubprogram(name: "z_impl_k_sem_init", scope: !2394, file: !2394, line: 41, type: !15455, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !15468)
!15455 = !DISubroutineType(types: !15456)
!15456 = !{!105, !15457, !32, !32}
!15457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15458, size: 32)
!15458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !122, line: 2909, size: 128, elements: !15459)
!15459 = !{!15460, !15466, !15467}
!15460 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15458, file: !122, line: 2910, baseType: !15461, size: 64)
!15461 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !15462)
!15462 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !15463)
!15463 = !{!15464}
!15464 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !15462, file: !163, line: 232, baseType: !15465, size: 64)
!15465 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2380)
!15466 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !15458, file: !122, line: 2911, baseType: !32, size: 32, offset: 64)
!15467 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !15458, file: !122, line: 2912, baseType: !32, size: 32, offset: 96)
!15468 = !{!15469, !15470, !15471}
!15469 = !DILocalVariable(name: "sem", arg: 1, scope: !15454, file: !2394, line: 41, type: !15457)
!15470 = !DILocalVariable(name: "initial_count", arg: 2, scope: !15454, file: !2394, line: 41, type: !32)
!15471 = !DILocalVariable(name: "limit", arg: 3, scope: !15454, file: !2394, line: 42, type: !32)
!15472 = !DILocation(line: 0, scope: !15454)
!15473 = !DILocation(line: 47, column: 2, scope: !15474)
!15474 = distinct !DILexicalBlock(scope: !15454, file: !2394, line: 47, column: 2)
!15475 = !DILocation(line: 53, column: 7, scope: !15454)
!15476 = !DILocation(line: 53, column: 13, scope: !15454)
!15477 = !DILocation(line: 54, column: 7, scope: !15454)
!15478 = !DILocation(line: 54, column: 13, scope: !15454)
!15479 = !DILocation(line: 58, column: 21, scope: !15454)
!15480 = !DILocation(line: 58, column: 2, scope: !15454)
!15481 = !DILocation(line: 64, column: 2, scope: !15454)
!15482 = !DILocation(line: 65, column: 1, scope: !15454)
!15483 = distinct !DISubprogram(name: "z_waitq_init", scope: !14535, file: !14535, line: 47, type: !15484, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !15487)
!15484 = !DISubroutineType(types: !15485)
!15485 = !{null, !15486}
!15486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15461, size: 32)
!15487 = !{!15488}
!15488 = !DILocalVariable(name: "w", arg: 1, scope: !15483, file: !14535, line: 47, type: !15486)
!15489 = !DILocation(line: 0, scope: !15483)
!15490 = !DILocation(line: 49, column: 21, scope: !15483)
!15491 = !DILocation(line: 49, column: 2, scope: !15483)
!15492 = !DILocation(line: 50, column: 1, scope: !15483)
!15493 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !15494, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !15497)
!15494 = !DISubroutineType(types: !15495)
!15495 = !{null, !15496}
!15496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15465, size: 32)
!15497 = !{!15498}
!15498 = !DILocalVariable(name: "list", arg: 1, scope: !15493, file: !137, line: 197, type: !15496)
!15499 = !DILocation(line: 0, scope: !15493)
!15500 = !DILocation(line: 199, column: 8, scope: !15493)
!15501 = !DILocation(line: 199, column: 13, scope: !15493)
!15502 = !DILocation(line: 200, column: 8, scope: !15493)
!15503 = !DILocation(line: 200, column: 13, scope: !15493)
!15504 = !DILocation(line: 201, column: 1, scope: !15493)
!15505 = distinct !DISubprogram(name: "z_impl_k_sem_give", scope: !2394, file: !2394, line: 86, type: !15506, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !15508)
!15506 = !DISubroutineType(types: !15507)
!15507 = !{null, !15457}
!15508 = !{!15509, !15510, !15515}
!15509 = !DILocalVariable(name: "sem", arg: 1, scope: !15505, file: !2394, line: 86, type: !15457)
!15510 = !DILocalVariable(name: "key", scope: !15505, file: !2394, line: 88, type: !15511)
!15511 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !15512)
!15512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !15513)
!15513 = !{!15514}
!15514 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15512, file: !236, line: 33, baseType: !105, size: 32)
!15515 = !DILocalVariable(name: "thread", scope: !15505, file: !2394, line: 89, type: !15516)
!15516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15517, size: 32)
!15517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !15518)
!15518 = !{!15519, !15557, !15569, !15570, !15571, !15572, !15578, !15590}
!15519 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !15517, file: !127, line: 247, baseType: !15520, size: 384)
!15520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !15521)
!15521 = !{!15522, !15532, !15533, !15534, !15535, !15544, !15545, !15546}
!15522 = !DIDerivedType(tag: DW_TAG_member, scope: !15520, file: !127, line: 60, baseType: !15523, size: 64)
!15523 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15520, file: !127, line: 60, size: 64, elements: !15524)
!15524 = !{!15525, !15526}
!15525 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !15523, file: !127, line: 61, baseType: !2379, size: 64)
!15526 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !15523, file: !127, line: 62, baseType: !15527, size: 64)
!15527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !15528)
!15528 = !{!15529}
!15529 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !15527, file: !153, line: 50, baseType: !15530, size: 64)
!15530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15531, size: 64, elements: !158)
!15531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15527, size: 32)
!15532 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !15520, file: !127, line: 68, baseType: !15486, size: 32, offset: 64)
!15533 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !15520, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!15534 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !15520, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!15535 = !DIDerivedType(tag: DW_TAG_member, scope: !15520, file: !127, line: 90, baseType: !15536, size: 16, offset: 112)
!15536 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15520, file: !127, line: 90, size: 16, elements: !15537)
!15537 = !{!15538, !15543}
!15538 = !DIDerivedType(tag: DW_TAG_member, scope: !15536, file: !127, line: 91, baseType: !15539, size: 16)
!15539 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15536, file: !127, line: 91, size: 16, elements: !15540)
!15540 = !{!15541, !15542}
!15541 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !15539, file: !127, line: 96, baseType: !179, size: 8)
!15542 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !15539, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!15543 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !15536, file: !127, line: 100, baseType: !183, size: 16)
!15544 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !15520, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!15545 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !15520, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!15546 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !15520, file: !127, line: 131, baseType: !15547, size: 192, offset: 192)
!15547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !15548)
!15548 = !{!15549, !15550, !15556}
!15549 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !15547, file: !163, line: 245, baseType: !2379, size: 64)
!15550 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !15547, file: !163, line: 246, baseType: !15551, size: 32, offset: 64)
!15551 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !15552)
!15552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15553, size: 32)
!15553 = !DISubroutineType(types: !15554)
!15554 = !{null, !15555}
!15555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15547, size: 32)
!15556 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !15547, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!15557 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !15517, file: !127, line: 250, baseType: !15558, size: 288, offset: 384)
!15558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !15559)
!15559 = !{!15560, !15561, !15562, !15563, !15564, !15565, !15566, !15567, !15568}
!15560 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !15558, file: !200, line: 26, baseType: !113, size: 32)
!15561 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !15558, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!15562 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !15558, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!15563 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !15558, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!15564 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !15558, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!15565 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !15558, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!15566 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !15558, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!15567 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !15558, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!15568 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !15558, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!15569 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !15517, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!15570 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !15517, file: !127, line: 256, baseType: !15461, size: 64, offset: 704)
!15571 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !15517, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!15572 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !15517, file: !127, line: 300, baseType: !15573, size: 96, offset: 800)
!15573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !15574)
!15574 = !{!15575, !15576, !15577}
!15575 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !15573, file: !127, line: 153, baseType: !22, size: 32)
!15576 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !15573, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!15577 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !15573, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!15578 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !15517, file: !127, line: 325, baseType: !15579, size: 32, offset: 896)
!15579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15580, size: 32)
!15580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !15581)
!15581 = !{!15582, !15588, !15589}
!15582 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15580, file: !122, line: 5074, baseType: !15583, size: 96)
!15583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !15584)
!15584 = !{!15585, !15586, !15587}
!15585 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15583, file: !226, line: 57, baseType: !229, size: 32)
!15586 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !15583, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!15587 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !15583, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!15588 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15580, file: !122, line: 5075, baseType: !15461, size: 64, offset: 96)
!15589 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !15580, file: !122, line: 5076, baseType: !2395, size: 32, offset: 160)
!15590 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !15517, file: !127, line: 343, baseType: !15591, size: 64, offset: 928)
!15591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !15592)
!15592 = !{!15593, !15594}
!15593 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !15591, file: !200, line: 63, baseType: !113, size: 32)
!15594 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !15591, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!15595 = !DILocation(line: 0, scope: !15505)
!15596 = !DILocalVariable(name: "l", arg: 1, scope: !15597, file: !236, line: 136, type: !15600)
!15597 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !15598, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !15601)
!15598 = !DISubroutineType(types: !15599)
!15599 = !{!15511, !15600}
!15600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 32)
!15601 = !{!15596, !15602}
!15602 = !DILocalVariable(name: "k", scope: !15597, file: !236, line: 139, type: !15511)
!15603 = !DILocation(line: 0, scope: !15597, inlinedAt: !15604)
!15604 = distinct !DILocation(line: 88, column: 25, scope: !15505)
!15605 = !DILocation(line: 55, column: 2, scope: !15606, inlinedAt: !15610)
!15606 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7485, file: !7485, line: 42, type: !7486, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !15607)
!15607 = !{!15608, !15609}
!15608 = !DILocalVariable(name: "key", scope: !15606, file: !7485, line: 44, type: !32)
!15609 = !DILocalVariable(name: "tmp", scope: !15606, file: !7485, line: 53, type: !32)
!15610 = distinct !DILocation(line: 145, column: 10, scope: !15597, inlinedAt: !15604)
!15611 = !{i64 2042407}
!15612 = !DILocation(line: 0, scope: !15606, inlinedAt: !15610)
!15613 = !DILocation(line: 148, column: 2, scope: !15614, inlinedAt: !15604)
!15614 = distinct !DILexicalBlock(scope: !15615, file: !236, line: 148, column: 2)
!15615 = distinct !DILexicalBlock(scope: !15597, file: !236, line: 148, column: 2)
!15616 = !DILocation(line: 148, column: 2, scope: !15615, inlinedAt: !15604)
!15617 = !DILocation(line: 148, column: 2, scope: !15618, inlinedAt: !15604)
!15618 = distinct !DILexicalBlock(scope: !15614, file: !236, line: 148, column: 2)
!15619 = !DILocation(line: 160, column: 2, scope: !15597, inlinedAt: !15604)
!15620 = !DILocation(line: 93, column: 39, scope: !15505)
!15621 = !DILocation(line: 93, column: 11, scope: !15505)
!15622 = !DILocation(line: 95, column: 13, scope: !15623)
!15623 = distinct !DILexicalBlock(scope: !15505, file: !2394, line: 95, column: 6)
!15624 = !DILocation(line: 95, column: 6, scope: !15505)
!15625 = !DILocalVariable(name: "thread", arg: 1, scope: !15626, file: !14215, line: 65, type: !15516)
!15626 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14215, file: !14215, line: 65, type: !15627, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !15629)
!15627 = !DISubroutineType(types: !15628)
!15628 = !{null, !15516, !32}
!15629 = !{!15625, !15630}
!15630 = !DILocalVariable(name: "value", arg: 2, scope: !15626, file: !14215, line: 65, type: !32)
!15631 = !DILocation(line: 0, scope: !15626, inlinedAt: !15632)
!15632 = distinct !DILocation(line: 96, column: 3, scope: !15633)
!15633 = distinct !DILexicalBlock(scope: !15623, file: !2394, line: 95, column: 22)
!15634 = !DILocation(line: 67, column: 15, scope: !15626, inlinedAt: !15632)
!15635 = !DILocation(line: 67, column: 33, scope: !15626, inlinedAt: !15632)
!15636 = !DILocation(line: 97, column: 3, scope: !15633)
!15637 = !DILocation(line: 98, column: 2, scope: !15633)
!15638 = !DILocation(line: 99, column: 23, scope: !15639)
!15639 = distinct !DILexicalBlock(scope: !15623, file: !2394, line: 98, column: 9)
!15640 = !DILocation(line: 99, column: 37, scope: !15639)
!15641 = !DILocation(line: 99, column: 29, scope: !15639)
!15642 = !DILocation(line: 99, column: 17, scope: !15639)
!15643 = !DILocation(line: 99, column: 14, scope: !15639)
!15644 = !DILocation(line: 103, column: 2, scope: !15505)
!15645 = !DILocation(line: 106, column: 1, scope: !15505)
!15646 = distinct !DISubprogram(name: "z_impl_k_sem_take", scope: !2394, file: !2394, line: 117, type: !15647, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !15653)
!15647 = !DISubroutineType(types: !15648)
!15648 = !{!105, !15457, !15649}
!15649 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !15650)
!15650 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !15651)
!15651 = !{!15652}
!15652 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15650, file: !108, line: 66, baseType: !107, size: 64)
!15653 = !{!15654, !15655, !15656, !15657, !15658}
!15654 = !DILocalVariable(name: "sem", arg: 1, scope: !15646, file: !2394, line: 117, type: !15457)
!15655 = !DILocalVariable(name: "timeout", arg: 2, scope: !15646, file: !2394, line: 117, type: !15649)
!15656 = !DILocalVariable(name: "ret", scope: !15646, file: !2394, line: 119, type: !105)
!15657 = !DILocalVariable(name: "key", scope: !15646, file: !2394, line: 124, type: !15511)
!15658 = !DILabel(scope: !15646, name: "out", file: !2394, line: 145)
!15659 = !DILocation(line: 0, scope: !15646)
!15660 = !DILocation(line: 1031, column: 3, scope: !15661, inlinedAt: !15664)
!15661 = distinct !DISubprogram(name: "__get_IPSR", scope: !7803, file: !7803, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !15662)
!15662 = !{!15663}
!15663 = !DILocalVariable(name: "result", scope: !15661, file: !7803, line: 1029, type: !113)
!15664 = distinct !DILocation(line: 48, column: 10, scope: !15665, inlinedAt: !15666)
!15665 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8850, file: !8850, line: 46, type: !8851, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !397)
!15666 = distinct !DILocation(line: 121, column: 2, scope: !15667)
!15667 = distinct !DILexicalBlock(scope: !15668, file: !2394, line: 121, column: 2)
!15668 = distinct !DILexicalBlock(scope: !15646, file: !2394, line: 121, column: 2)
!15669 = !{i64 2916982}
!15670 = !DILocation(line: 0, scope: !15661, inlinedAt: !15664)
!15671 = !DILocation(line: 48, column: 9, scope: !15665, inlinedAt: !15666)
!15672 = !DILocation(line: 121, column: 2, scope: !15667)
!15673 = !DILocation(line: 121, column: 2, scope: !15674)
!15674 = distinct !DILexicalBlock(scope: !15667, file: !2394, line: 121, column: 2)
!15675 = !DILocation(line: 0, scope: !15597, inlinedAt: !15676)
!15676 = distinct !DILocation(line: 124, column: 25, scope: !15646)
!15677 = !DILocation(line: 55, column: 2, scope: !15606, inlinedAt: !15678)
!15678 = distinct !DILocation(line: 145, column: 10, scope: !15597, inlinedAt: !15676)
!15679 = !DILocation(line: 0, scope: !15606, inlinedAt: !15678)
!15680 = !DILocation(line: 148, column: 2, scope: !15614, inlinedAt: !15676)
!15681 = !DILocation(line: 148, column: 2, scope: !15615, inlinedAt: !15676)
!15682 = !DILocation(line: 148, column: 2, scope: !15618, inlinedAt: !15676)
!15683 = !DILocation(line: 160, column: 2, scope: !15597, inlinedAt: !15676)
!15684 = !DILocation(line: 128, column: 6, scope: !15685)
!15685 = distinct !DILexicalBlock(scope: !15646, file: !2394, line: 128, column: 6)
!15686 = !DILocation(line: 128, column: 6, scope: !15646)
!15687 = !{!"branch_weights", i32 1, i32 2000}
!15688 = !DILocation(line: 129, column: 13, scope: !15689)
!15689 = distinct !DILexicalBlock(scope: !15685, file: !2394, line: 128, column: 31)
!15690 = !DILocalVariable(name: "key", arg: 2, scope: !15691, file: !236, line: 190, type: !15511)
!15691 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !15692, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !15694)
!15692 = !DISubroutineType(types: !15693)
!15693 = !{null, !15600, !15511}
!15694 = !{!15695, !15690}
!15695 = !DILocalVariable(name: "l", arg: 1, scope: !15691, file: !236, line: 189, type: !15600)
!15696 = !DILocation(line: 0, scope: !15691, inlinedAt: !15697)
!15697 = distinct !DILocation(line: 130, column: 3, scope: !15689)
!15698 = !DILocation(line: 194, column: 2, scope: !15699, inlinedAt: !15697)
!15699 = distinct !DILexicalBlock(scope: !15700, file: !236, line: 194, column: 2)
!15700 = distinct !DILexicalBlock(scope: !15691, file: !236, line: 194, column: 2)
!15701 = !DILocation(line: 194, column: 2, scope: !15700, inlinedAt: !15697)
!15702 = !DILocation(line: 194, column: 2, scope: !15703, inlinedAt: !15697)
!15703 = distinct !DILexicalBlock(scope: !15699, file: !236, line: 194, column: 2)
!15704 = !DILocalVariable(name: "key", arg: 1, scope: !15705, file: !7485, line: 84, type: !32)
!15705 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7485, file: !7485, line: 84, type: !7496, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !15706)
!15706 = !{!15704}
!15707 = !DILocation(line: 0, scope: !15705, inlinedAt: !15708)
!15708 = distinct !DILocation(line: 215, column: 2, scope: !15691, inlinedAt: !15697)
!15709 = !DILocation(line: 95, column: 2, scope: !15705, inlinedAt: !15708)
!15710 = !{i64 2043224}
!15711 = !DILocation(line: 132, column: 3, scope: !15689)
!15712 = !DILocation(line: 135, column: 6, scope: !15646)
!15713 = !DILocation(line: 0, scope: !15691, inlinedAt: !15714)
!15714 = distinct !DILocation(line: 136, column: 3, scope: !15715)
!15715 = distinct !DILexicalBlock(scope: !15716, file: !2394, line: 135, column: 40)
!15716 = distinct !DILexicalBlock(scope: !15646, file: !2394, line: 135, column: 6)
!15717 = !DILocation(line: 194, column: 2, scope: !15699, inlinedAt: !15714)
!15718 = !DILocation(line: 194, column: 2, scope: !15700, inlinedAt: !15714)
!15719 = !DILocation(line: 194, column: 2, scope: !15703, inlinedAt: !15714)
!15720 = !DILocation(line: 0, scope: !15705, inlinedAt: !15721)
!15721 = distinct !DILocation(line: 215, column: 2, scope: !15691, inlinedAt: !15714)
!15722 = !DILocation(line: 95, column: 2, scope: !15705, inlinedAt: !15721)
!15723 = !DILocation(line: 138, column: 3, scope: !15715)
!15724 = !DILocation(line: 143, column: 38, scope: !15646)
!15725 = !DILocation(line: 143, column: 8, scope: !15646)
!15726 = !DILocation(line: 143, column: 2, scope: !15646)
!15727 = !DILocation(line: 145, column: 1, scope: !15646)
!15728 = !DILocation(line: 148, column: 2, scope: !15646)
!15729 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !2394, file: !2394, line: 151, type: !15506, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !15730)
!15730 = !{!15731, !15732, !15733}
!15731 = !DILocalVariable(name: "sem", arg: 1, scope: !15729, file: !2394, line: 151, type: !15457)
!15732 = !DILocalVariable(name: "thread", scope: !15729, file: !2394, line: 153, type: !15516)
!15733 = !DILocalVariable(name: "key", scope: !15729, file: !2394, line: 154, type: !15511)
!15734 = !DILocation(line: 0, scope: !15729)
!15735 = !DILocation(line: 0, scope: !15597, inlinedAt: !15736)
!15736 = distinct !DILocation(line: 154, column: 25, scope: !15729)
!15737 = !DILocation(line: 55, column: 2, scope: !15606, inlinedAt: !15738)
!15738 = distinct !DILocation(line: 145, column: 10, scope: !15597, inlinedAt: !15736)
!15739 = !DILocation(line: 0, scope: !15606, inlinedAt: !15738)
!15740 = !DILocation(line: 148, column: 2, scope: !15614, inlinedAt: !15736)
!15741 = !DILocation(line: 148, column: 2, scope: !15615, inlinedAt: !15736)
!15742 = !DILocation(line: 148, column: 2, scope: !15618, inlinedAt: !15736)
!15743 = !DILocation(line: 160, column: 2, scope: !15597, inlinedAt: !15736)
!15744 = !DILocation(line: 157, column: 12, scope: !15745)
!15745 = distinct !DILexicalBlock(scope: !15729, file: !2394, line: 156, column: 15)
!15746 = !DILocation(line: 158, column: 14, scope: !15747)
!15747 = distinct !DILexicalBlock(scope: !15745, file: !2394, line: 158, column: 7)
!15748 = !DILocation(line: 158, column: 7, scope: !15745)
!15749 = !DILocation(line: 0, scope: !15626, inlinedAt: !15750)
!15750 = distinct !DILocation(line: 161, column: 3, scope: !15745)
!15751 = !DILocation(line: 67, column: 15, scope: !15626, inlinedAt: !15750)
!15752 = !DILocation(line: 67, column: 33, scope: !15626, inlinedAt: !15750)
!15753 = !DILocation(line: 162, column: 3, scope: !15745)
!15754 = distinct !{!15754, !15755, !15756}
!15755 = !DILocation(line: 156, column: 2, scope: !15729)
!15756 = !DILocation(line: 163, column: 2, scope: !15729)
!15757 = !DILocation(line: 164, column: 7, scope: !15729)
!15758 = !DILocation(line: 164, column: 13, scope: !15729)
!15759 = !DILocation(line: 170, column: 2, scope: !15729)
!15760 = !DILocation(line: 171, column: 1, scope: !15729)
!15761 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2510, file: !2510, line: 93, type: !15762, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !15764)
!15762 = !DISubroutineType(types: !15763)
!15763 = !{!116, !2403, !2403}
!15764 = !{!15765, !15766, !15767, !15768}
!15765 = !DILocalVariable(name: "thread_1", arg: 1, scope: !15761, file: !2510, line: 93, type: !2403)
!15766 = !DILocalVariable(name: "thread_2", arg: 2, scope: !15761, file: !2510, line: 94, type: !2403)
!15767 = !DILocalVariable(name: "b1", scope: !15761, file: !2510, line: 97, type: !116)
!15768 = !DILocalVariable(name: "b2", scope: !15761, file: !2510, line: 98, type: !116)
!15769 = !DILocation(line: 0, scope: !15761)
!15770 = !DILocation(line: 97, column: 30, scope: !15761)
!15771 = !DILocation(line: 98, column: 30, scope: !15761)
!15772 = !DILocation(line: 100, column: 9, scope: !15773)
!15773 = distinct !DILexicalBlock(scope: !15761, file: !2510, line: 100, column: 6)
!15774 = !DILocation(line: 100, column: 6, scope: !15761)
!15775 = !DILocation(line: 125, column: 1, scope: !15761)
!15776 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2510, file: !2510, line: 428, type: !15777, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !15779)
!15777 = !DISubroutineType(types: !15778)
!15778 = !{null, !2403}
!15779 = !{!15780}
!15780 = !DILocalVariable(name: "curr", arg: 1, scope: !15776, file: !2510, line: 428, type: !2403)
!15781 = !DILocation(line: 0, scope: !15776)
!15782 = !DILocation(line: 434, column: 6, scope: !15783)
!15783 = distinct !DILexicalBlock(scope: !15776, file: !2510, line: 434, column: 6)
!15784 = !DILocation(line: 434, column: 23, scope: !15783)
!15785 = !DILocation(line: 434, column: 6, scope: !15776)
!15786 = !DILocation(line: 435, column: 50, scope: !15787)
!15787 = distinct !DILexicalBlock(scope: !15783, file: !2510, line: 434, column: 29)
!15788 = !DILocation(line: 435, column: 48, scope: !15787)
!15789 = !DILocation(line: 435, column: 29, scope: !15787)
!15790 = !DILocation(line: 436, column: 24, scope: !15787)
!15791 = !DILocation(line: 436, column: 3, scope: !15787)
!15792 = !DILocation(line: 437, column: 2, scope: !15787)
!15793 = !DILocation(line: 438, column: 1, scope: !15776)
!15794 = distinct !DISubprogram(name: "slice_time", scope: !2510, file: !2510, line: 407, type: !15795, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !15797)
!15795 = !DISubroutineType(types: !15796)
!15796 = !{!105, !2403}
!15797 = !{!15798, !15799}
!15798 = !DILocalVariable(name: "curr", arg: 1, scope: !15794, file: !2510, line: 407, type: !2403)
!15799 = !DILocalVariable(name: "ret", scope: !15794, file: !2510, line: 409, type: !105)
!15800 = !DILocation(line: 0, scope: !15794)
!15801 = !DILocation(line: 409, column: 12, scope: !15794)
!15802 = !DILocation(line: 416, column: 2, scope: !15794)
!15803 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2510, file: !2510, line: 440, type: !15804, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !15806)
!15804 = !DISubroutineType(types: !15805)
!15805 = !{null, !116, !105}
!15806 = !{!15807, !15808, !15809, !15815}
!15807 = !DILocalVariable(name: "slice", arg: 1, scope: !15803, file: !2510, line: 440, type: !116)
!15808 = !DILocalVariable(name: "prio", arg: 2, scope: !15803, file: !2510, line: 440, type: !105)
!15809 = !DILocalVariable(name: "__i", scope: !15810, file: !2510, line: 442, type: !15811)
!15810 = distinct !DILexicalBlock(scope: !15803, file: !2510, line: 442, column: 2)
!15811 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !15812)
!15812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !15813)
!15813 = !{!15814}
!15814 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15812, file: !236, line: 33, baseType: !105, size: 32)
!15815 = !DILocalVariable(name: "__key", scope: !15810, file: !2510, line: 442, type: !15811)
!15816 = !DILocation(line: 0, scope: !15803)
!15817 = !DILocation(line: 0, scope: !15810)
!15818 = !DILocalVariable(name: "l", arg: 1, scope: !15819, file: !236, line: 136, type: !15822)
!15819 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !15820, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !15823)
!15820 = !DISubroutineType(types: !15821)
!15821 = !{!15811, !15822}
!15822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 32)
!15823 = !{!15818, !15824}
!15824 = !DILocalVariable(name: "k", scope: !15819, file: !236, line: 139, type: !15811)
!15825 = !DILocation(line: 0, scope: !15819, inlinedAt: !15826)
!15826 = distinct !DILocation(line: 442, column: 2, scope: !15810)
!15827 = !DILocation(line: 55, column: 2, scope: !15828, inlinedAt: !15832)
!15828 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7485, file: !7485, line: 42, type: !7486, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !15829)
!15829 = !{!15830, !15831}
!15830 = !DILocalVariable(name: "key", scope: !15828, file: !7485, line: 44, type: !32)
!15831 = !DILocalVariable(name: "tmp", scope: !15828, file: !7485, line: 53, type: !32)
!15832 = distinct !DILocation(line: 145, column: 10, scope: !15819, inlinedAt: !15826)
!15833 = !{i64 2084816}
!15834 = !DILocation(line: 0, scope: !15828, inlinedAt: !15832)
!15835 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !15826)
!15836 = distinct !DILexicalBlock(scope: !15837, file: !236, line: 148, column: 2)
!15837 = distinct !DILexicalBlock(scope: !15819, file: !236, line: 148, column: 2)
!15838 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !15826)
!15839 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !15826)
!15840 = distinct !DILexicalBlock(scope: !15836, file: !236, line: 148, column: 2)
!15841 = !DILocation(line: 160, column: 2, scope: !15819, inlinedAt: !15826)
!15842 = !DILocation(line: 443, column: 29, scope: !15843)
!15843 = distinct !DILexicalBlock(scope: !15844, file: !2510, line: 442, column: 26)
!15844 = distinct !DILexicalBlock(scope: !15810, file: !2510, line: 442, column: 2)
!15845 = !DILocation(line: 444, column: 17, scope: !15843)
!15846 = !DILocation(line: 445, column: 51, scope: !15847)
!15847 = distinct !DILexicalBlock(scope: !15843, file: !2510, line: 445, column: 7)
!15848 = !DILocation(line: 445, column: 7, scope: !15843)
!15849 = !DILocation(line: 0, scope: !15843)
!15850 = !DILocation(line: 451, column: 18, scope: !15843)
!15851 = !DILocation(line: 452, column: 3, scope: !15843)
!15852 = !DILocalVariable(name: "key", arg: 2, scope: !15853, file: !236, line: 190, type: !15811)
!15853 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !15854, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !15856)
!15854 = !DISubroutineType(types: !15855)
!15855 = !{null, !15822, !15811}
!15856 = !{!15857, !15852}
!15857 = !DILocalVariable(name: "l", arg: 1, scope: !15853, file: !236, line: 189, type: !15822)
!15858 = !DILocation(line: 0, scope: !15853, inlinedAt: !15859)
!15859 = distinct !DILocation(line: 442, column: 2, scope: !15844)
!15860 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !15859)
!15861 = distinct !DILexicalBlock(scope: !15862, file: !236, line: 194, column: 2)
!15862 = distinct !DILexicalBlock(scope: !15853, file: !236, line: 194, column: 2)
!15863 = !DILocation(line: 194, column: 2, scope: !15862, inlinedAt: !15859)
!15864 = !DILocation(line: 194, column: 2, scope: !15865, inlinedAt: !15859)
!15865 = distinct !DILexicalBlock(scope: !15861, file: !236, line: 194, column: 2)
!15866 = !DILocalVariable(name: "key", arg: 1, scope: !15867, file: !7485, line: 84, type: !32)
!15867 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7485, file: !7485, line: 84, type: !7496, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !15868)
!15868 = !{!15866}
!15869 = !DILocation(line: 0, scope: !15867, inlinedAt: !15870)
!15870 = distinct !DILocation(line: 215, column: 2, scope: !15853, inlinedAt: !15859)
!15871 = !DILocation(line: 95, column: 2, scope: !15867, inlinedAt: !15870)
!15872 = !{i64 2085633}
!15873 = !DILocation(line: 454, column: 1, scope: !15803)
!15874 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !14791, file: !14791, line: 389, type: !9084, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !15875)
!15875 = !{!15876}
!15876 = !DILocalVariable(name: "t", arg: 1, scope: !15874, file: !14791, line: 389, type: !113)
!15877 = !DILocation(line: 0, scope: !15874)
!15878 = !DILocalVariable(name: "t", arg: 1, scope: !15879, file: !14791, line: 102, type: !114)
!15879 = distinct !DISubprogram(name: "z_tmcvt", scope: !14791, file: !14791, line: 102, type: !14799, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !15880)
!15880 = !{!15878, !15881, !15882, !15883, !15884, !15885, !15886, !15887, !15888, !15889, !15890}
!15881 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15879, file: !14791, line: 102, type: !113)
!15882 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15879, file: !14791, line: 103, type: !113)
!15883 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15879, file: !14791, line: 103, type: !492)
!15884 = !DILocalVariable(name: "result32", arg: 5, scope: !15879, file: !14791, line: 104, type: !492)
!15885 = !DILocalVariable(name: "round_up", arg: 6, scope: !15879, file: !14791, line: 104, type: !492)
!15886 = !DILocalVariable(name: "round_off", arg: 7, scope: !15879, file: !14791, line: 105, type: !492)
!15887 = !DILocalVariable(name: "mul_ratio", scope: !15879, file: !14791, line: 107, type: !492)
!15888 = !DILocalVariable(name: "div_ratio", scope: !15879, file: !14791, line: 109, type: !492)
!15889 = !DILocalVariable(name: "off", scope: !15879, file: !14791, line: 116, type: !114)
!15890 = !DILocalVariable(name: "rdivisor", scope: !15891, file: !14791, line: 119, type: !113)
!15891 = distinct !DILexicalBlock(scope: !15892, file: !14791, line: 118, column: 18)
!15892 = distinct !DILexicalBlock(scope: !15879, file: !14791, line: 118, column: 6)
!15893 = !DILocation(line: 0, scope: !15879, inlinedAt: !15894)
!15894 = distinct !DILocation(line: 392, column: 9, scope: !15874)
!15895 = !DILocation(line: 143, column: 25, scope: !15896, inlinedAt: !15894)
!15896 = distinct !DILexicalBlock(scope: !15897, file: !14791, line: 142, column: 17)
!15897 = distinct !DILexicalBlock(scope: !15898, file: !14791, line: 142, column: 7)
!15898 = distinct !DILexicalBlock(scope: !15899, file: !14791, line: 141, column: 24)
!15899 = distinct !DILexicalBlock(scope: !15900, file: !14791, line: 141, column: 13)
!15900 = distinct !DILexicalBlock(scope: !15879, file: !14791, line: 134, column: 6)
!15901 = !DILocation(line: 392, column: 2, scope: !15874)
!15902 = distinct !DISubprogram(name: "z_time_slice", scope: !2510, file: !2510, line: 502, type: !9737, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !15903)
!15903 = !{!15904, !15905}
!15904 = !DILocalVariable(name: "ticks", arg: 1, scope: !15902, file: !2510, line: 502, type: !105)
!15905 = !DILocalVariable(name: "key", scope: !15902, file: !2510, line: 511, type: !15811)
!15906 = !DILocation(line: 0, scope: !15902)
!15907 = !DILocation(line: 0, scope: !15819, inlinedAt: !15908)
!15908 = distinct !DILocation(line: 511, column: 25, scope: !15902)
!15909 = !DILocation(line: 55, column: 2, scope: !15828, inlinedAt: !15910)
!15910 = distinct !DILocation(line: 145, column: 10, scope: !15819, inlinedAt: !15908)
!15911 = !DILocation(line: 0, scope: !15828, inlinedAt: !15910)
!15912 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !15908)
!15913 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !15908)
!15914 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !15908)
!15915 = !DILocation(line: 160, column: 2, scope: !15819, inlinedAt: !15908)
!15916 = !DILocation(line: 514, column: 6, scope: !15917)
!15917 = distinct !DILexicalBlock(scope: !15902, file: !2510, line: 514, column: 6)
!15918 = !DILocation(line: 514, column: 25, scope: !15917)
!15919 = !DILocation(line: 514, column: 22, scope: !15917)
!15920 = !DILocation(line: 514, column: 6, scope: !15902)
!15921 = !DILocation(line: 515, column: 3, scope: !15922)
!15922 = distinct !DILexicalBlock(scope: !15917, file: !2510, line: 514, column: 35)
!15923 = !DILocation(line: 0, scope: !15853, inlinedAt: !15924)
!15924 = distinct !DILocation(line: 516, column: 3, scope: !15922)
!15925 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !15924)
!15926 = !DILocation(line: 194, column: 2, scope: !15862, inlinedAt: !15924)
!15927 = !DILocation(line: 194, column: 2, scope: !15865, inlinedAt: !15924)
!15928 = !DILocation(line: 0, scope: !15867, inlinedAt: !15929)
!15929 = distinct !DILocation(line: 215, column: 2, scope: !15853, inlinedAt: !15924)
!15930 = !DILocation(line: 95, column: 2, scope: !15867, inlinedAt: !15929)
!15931 = !DILocation(line: 517, column: 3, scope: !15922)
!15932 = !DILocation(line: 519, column: 18, scope: !15902)
!15933 = !DILocation(line: 522, column: 6, scope: !15934)
!15934 = distinct !DILexicalBlock(scope: !15902, file: !2510, line: 522, column: 6)
!15935 = !DILocation(line: 522, column: 27, scope: !15934)
!15936 = !DILocation(line: 522, column: 30, scope: !15934)
!15937 = !DILocation(line: 522, column: 6, scope: !15902)
!15938 = !DILocation(line: 523, column: 30, scope: !15939)
!15939 = distinct !DILexicalBlock(scope: !15940, file: !2510, line: 523, column: 7)
!15940 = distinct !DILexicalBlock(scope: !15934, file: !2510, line: 522, column: 51)
!15941 = !DILocation(line: 523, column: 13, scope: !15939)
!15942 = !DILocation(line: 523, column: 7, scope: !15940)
!15943 = !DILocation(line: 530, column: 10, scope: !15944)
!15944 = distinct !DILexicalBlock(scope: !15939, file: !2510, line: 523, column: 43)
!15945 = !DILocation(line: 531, column: 3, scope: !15944)
!15946 = !DILocation(line: 532, column: 30, scope: !15947)
!15947 = distinct !DILexicalBlock(scope: !15939, file: !2510, line: 531, column: 10)
!15948 = !DILocation(line: 535, column: 29, scope: !15949)
!15949 = distinct !DILexicalBlock(scope: !15934, file: !2510, line: 534, column: 9)
!15950 = !DILocation(line: 0, scope: !15853, inlinedAt: !15951)
!15951 = distinct !DILocation(line: 537, column: 2, scope: !15902)
!15952 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !15951)
!15953 = !DILocation(line: 194, column: 2, scope: !15862, inlinedAt: !15951)
!15954 = !DILocation(line: 194, column: 2, scope: !15865, inlinedAt: !15951)
!15955 = !DILocation(line: 0, scope: !15867, inlinedAt: !15956)
!15956 = distinct !DILocation(line: 215, column: 2, scope: !15853, inlinedAt: !15951)
!15957 = !DILocation(line: 95, column: 2, scope: !15867, inlinedAt: !15956)
!15958 = !DILocation(line: 538, column: 1, scope: !15902)
!15959 = distinct !DISubprogram(name: "sliceable", scope: !2510, file: !2510, line: 468, type: !15960, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !15962)
!15960 = !DISubroutineType(types: !15961)
!15961 = !{!492, !2403}
!15962 = !{!15963, !15964}
!15963 = !DILocalVariable(name: "thread", arg: 1, scope: !15959, file: !2510, line: 468, type: !2403)
!15964 = !DILocalVariable(name: "ret", scope: !15959, file: !2510, line: 470, type: !492)
!15965 = !DILocation(line: 0, scope: !15959)
!15966 = !DILocation(line: 470, column: 13, scope: !15959)
!15967 = !DILocation(line: 471, column: 3, scope: !15959)
!15968 = !DILocation(line: 471, column: 7, scope: !15959)
!15969 = !DILocation(line: 472, column: 3, scope: !15959)
!15970 = !DILocation(line: 472, column: 37, scope: !15959)
!15971 = !DILocation(line: 472, column: 24, scope: !15959)
!15972 = !DILocation(line: 472, column: 43, scope: !15959)
!15973 = !DILocation(line: 472, column: 7, scope: !15959)
!15974 = !DILocation(line: 473, column: 3, scope: !15959)
!15975 = !DILocation(line: 473, column: 7, scope: !15959)
!15976 = !DILocation(line: 473, column: 6, scope: !15959)
!15977 = !DILocation(line: 479, column: 2, scope: !15959)
!15978 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2510, file: !2510, line: 482, type: !15979, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !15981)
!15979 = !DISubroutineType(types: !15980)
!15980 = !{!15811, !15811}
!15981 = !{!15982, !15983}
!15982 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !15978, file: !2510, line: 482, type: !15811)
!15983 = !DILocalVariable(name: "curr", scope: !15978, file: !2510, line: 484, type: !2403)
!15984 = !DILocation(line: 0, scope: !15978)
!15985 = !DILocation(line: 484, column: 26, scope: !15978)
!15986 = !DILocation(line: 493, column: 7, scope: !15987)
!15987 = distinct !DILexicalBlock(scope: !15978, file: !2510, line: 493, column: 6)
!15988 = !DILocation(line: 493, column: 6, scope: !15978)
!15989 = !DILocation(line: 494, column: 3, scope: !15990)
!15990 = distinct !DILexicalBlock(scope: !15987, file: !2510, line: 493, column: 49)
!15991 = !DILocation(line: 495, column: 2, scope: !15990)
!15992 = !DILocation(line: 496, column: 2, scope: !15978)
!15993 = !DILocation(line: 499, column: 1, scope: !15978)
!15994 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !14174, file: !14174, line: 106, type: !15960, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !15995)
!15995 = !{!15996, !15997}
!15996 = !DILocalVariable(name: "thread", arg: 1, scope: !15994, file: !14174, line: 106, type: !2403)
!15997 = !DILocalVariable(name: "state", scope: !15994, file: !14174, line: 108, type: !169)
!15998 = !DILocation(line: 0, scope: !15994)
!15999 = !DILocation(line: 108, column: 31, scope: !15994)
!16000 = !DILocation(line: 110, column: 16, scope: !15994)
!16001 = !DILocation(line: 111, column: 41, scope: !15994)
!16002 = !DILocation(line: 110, column: 2, scope: !15994)
!16003 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2510, file: !2510, line: 393, type: !15777, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16004)
!16004 = !{!16005}
!16005 = !DILocalVariable(name: "thread", arg: 1, scope: !16003, file: !2510, line: 393, type: !2403)
!16006 = !DILocation(line: 0, scope: !16003)
!16007 = !DILocation(line: 395, column: 6, scope: !16008)
!16008 = distinct !DILexicalBlock(scope: !16003, file: !2510, line: 395, column: 6)
!16009 = !DILocation(line: 395, column: 6, scope: !16003)
!16010 = !DILocalVariable(name: "thread", arg: 1, scope: !16011, file: !2510, line: 264, type: !2403)
!16011 = distinct !DISubprogram(name: "dequeue_thread", scope: !2510, file: !2510, line: 264, type: !15777, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16012)
!16012 = !{!16010}
!16013 = !DILocation(line: 0, scope: !16011, inlinedAt: !16014)
!16014 = distinct !DILocation(line: 396, column: 3, scope: !16015)
!16015 = distinct !DILexicalBlock(scope: !16008, file: !2510, line: 395, column: 34)
!16016 = !DILocation(line: 266, column: 15, scope: !16011, inlinedAt: !16014)
!16017 = !DILocation(line: 266, column: 28, scope: !16011, inlinedAt: !16014)
!16018 = !DILocalVariable(name: "thread", arg: 1, scope: !16019, file: !2510, line: 232, type: !2403)
!16019 = distinct !DISubprogram(name: "runq_remove", scope: !2510, file: !2510, line: 232, type: !15777, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16020)
!16020 = !{!16018}
!16021 = !DILocation(line: 0, scope: !16019, inlinedAt: !16022)
!16022 = distinct !DILocation(line: 268, column: 3, scope: !16023, inlinedAt: !16014)
!16023 = distinct !DILexicalBlock(scope: !16024, file: !2510, line: 267, column: 35)
!16024 = distinct !DILexicalBlock(scope: !16011, file: !2510, line: 267, column: 6)
!16025 = !DILocation(line: 234, column: 2, scope: !16019, inlinedAt: !16022)
!16026 = !DILocation(line: 397, column: 2, scope: !16015)
!16027 = !DILocalVariable(name: "thread", arg: 1, scope: !16028, file: !2510, line: 250, type: !2403)
!16028 = distinct !DISubprogram(name: "queue_thread", scope: !2510, file: !2510, line: 250, type: !15777, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16029)
!16029 = !{!16027}
!16030 = !DILocation(line: 0, scope: !16028, inlinedAt: !16031)
!16031 = distinct !DILocation(line: 398, column: 2, scope: !16003)
!16032 = !DILocation(line: 252, column: 15, scope: !16028, inlinedAt: !16031)
!16033 = !DILocation(line: 252, column: 28, scope: !16028, inlinedAt: !16031)
!16034 = !DILocalVariable(name: "thread", arg: 1, scope: !16035, file: !2510, line: 227, type: !2403)
!16035 = distinct !DISubprogram(name: "runq_add", scope: !2510, file: !2510, line: 227, type: !15777, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16036)
!16036 = !{!16034}
!16037 = !DILocation(line: 0, scope: !16035, inlinedAt: !16038)
!16038 = distinct !DILocation(line: 254, column: 3, scope: !16039, inlinedAt: !16031)
!16039 = distinct !DILexicalBlock(scope: !16040, file: !2510, line: 253, column: 35)
!16040 = distinct !DILexicalBlock(scope: !16028, file: !2510, line: 253, column: 6)
!16041 = !DILocalVariable(name: "pq", arg: 1, scope: !16042, file: !2510, line: 181, type: !16045)
!16042 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2510, file: !2510, line: 181, type: !16043, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16046)
!16043 = !DISubroutineType(types: !16044)
!16044 = !{null, !16045, !2403}
!16045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2439, size: 32)
!16046 = !{!16041, !16047, !16048}
!16047 = !DILocalVariable(name: "thread", arg: 2, scope: !16042, file: !2510, line: 182, type: !2403)
!16048 = !DILocalVariable(name: "t", scope: !16042, file: !2510, line: 184, type: !2403)
!16049 = !DILocation(line: 0, scope: !16042, inlinedAt: !16050)
!16050 = distinct !DILocation(line: 229, column: 2, scope: !16035, inlinedAt: !16038)
!16051 = !DILocation(line: 186, column: 2, scope: !16052, inlinedAt: !16050)
!16052 = distinct !DILexicalBlock(scope: !16053, file: !2510, line: 186, column: 2)
!16053 = distinct !DILexicalBlock(scope: !16042, file: !2510, line: 186, column: 2)
!16054 = !DILocation(line: 186, column: 2, scope: !16053, inlinedAt: !16050)
!16055 = !DILocation(line: 186, column: 2, scope: !16056, inlinedAt: !16050)
!16056 = distinct !DILexicalBlock(scope: !16052, file: !2510, line: 186, column: 2)
!16057 = !DILocation(line: 188, column: 2, scope: !16058, inlinedAt: !16050)
!16058 = distinct !DILexicalBlock(scope: !16042, file: !2510, line: 188, column: 2)
!16059 = !DILocation(line: 188, column: 2, scope: !16060, inlinedAt: !16050)
!16060 = distinct !DILexicalBlock(scope: !16058, file: !2510, line: 188, column: 2)
!16061 = !DILocation(line: 0, scope: !16058, inlinedAt: !16050)
!16062 = !DILocation(line: 189, column: 7, scope: !16063, inlinedAt: !16050)
!16063 = distinct !DILexicalBlock(scope: !16064, file: !2510, line: 189, column: 7)
!16064 = distinct !DILexicalBlock(scope: !16060, file: !2510, line: 188, column: 56)
!16065 = !DILocation(line: 189, column: 35, scope: !16063, inlinedAt: !16050)
!16066 = !DILocation(line: 189, column: 7, scope: !16064, inlinedAt: !16050)
!16067 = !DILocation(line: 191, column: 21, scope: !16068, inlinedAt: !16050)
!16068 = distinct !DILexicalBlock(scope: !16063, file: !2510, line: 189, column: 40)
!16069 = !DILocation(line: 190, column: 4, scope: !16068, inlinedAt: !16050)
!16070 = !DILocation(line: 192, column: 4, scope: !16068, inlinedAt: !16050)
!16071 = distinct !{!16071, !16057, !16072}
!16072 = !DILocation(line: 194, column: 2, scope: !16058, inlinedAt: !16050)
!16073 = !DILocation(line: 196, column: 37, scope: !16042, inlinedAt: !16050)
!16074 = !DILocation(line: 196, column: 2, scope: !16042, inlinedAt: !16050)
!16075 = !DILocation(line: 197, column: 1, scope: !16042, inlinedAt: !16050)
!16076 = !DILocation(line: 399, column: 25, scope: !16003)
!16077 = !DILocation(line: 399, column: 22, scope: !16003)
!16078 = !DILocation(line: 399, column: 2, scope: !16003)
!16079 = !DILocation(line: 400, column: 1, scope: !16003)
!16080 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !14174, file: !14174, line: 136, type: !15960, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16081)
!16081 = !{!16082}
!16082 = !DILocalVariable(name: "thread", arg: 1, scope: !16080, file: !14174, line: 136, type: !2403)
!16083 = !DILocation(line: 0, scope: !16080)
!16084 = !DILocation(line: 138, column: 9, scope: !16080)
!16085 = !DILocation(line: 138, column: 2, scope: !16080)
!16086 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2510, file: !2510, line: 1137, type: !16043, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16087)
!16087 = !{!16088, !16089}
!16088 = !DILocalVariable(name: "pq", arg: 1, scope: !16086, file: !2510, line: 1137, type: !16045)
!16089 = !DILocalVariable(name: "thread", arg: 2, scope: !16086, file: !2510, line: 1137, type: !2403)
!16090 = !DILocation(line: 0, scope: !16086)
!16091 = !DILocation(line: 1139, column: 2, scope: !16092)
!16092 = distinct !DILexicalBlock(scope: !16093, file: !2510, line: 1139, column: 2)
!16093 = distinct !DILexicalBlock(scope: !16086, file: !2510, line: 1139, column: 2)
!16094 = !DILocation(line: 1139, column: 2, scope: !16093)
!16095 = !DILocation(line: 1139, column: 2, scope: !16096)
!16096 = distinct !DILexicalBlock(scope: !16092, file: !2510, line: 1139, column: 2)
!16097 = !DILocation(line: 1141, column: 33, scope: !16086)
!16098 = !DILocation(line: 1141, column: 2, scope: !16086)
!16099 = !DILocation(line: 1142, column: 1, scope: !16086)
!16100 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !14174, file: !14174, line: 83, type: !15960, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16101)
!16101 = !{!16102}
!16102 = !DILocalVariable(name: "thread", arg: 1, scope: !16100, file: !14174, line: 83, type: !2403)
!16103 = !DILocation(line: 0, scope: !16100)
!16104 = !DILocation(line: 89, column: 16, scope: !16100)
!16105 = !DILocation(line: 89, column: 2, scope: !16100)
!16106 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !137, file: !137, line: 294, type: !16107, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16109)
!16107 = !DISubroutineType(types: !16108)
!16108 = !{!2506, !16045}
!16109 = !{!16110}
!16110 = !DILocalVariable(name: "list", arg: 1, scope: !16106, file: !137, line: 294, type: !16045)
!16111 = !DILocation(line: 0, scope: !16106)
!16112 = !DILocation(line: 296, column: 9, scope: !16106)
!16113 = !DILocation(line: 296, column: 49, scope: !16106)
!16114 = !DILocation(line: 296, column: 2, scope: !16106)
!16115 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !137, file: !137, line: 443, type: !16116, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16118)
!16116 = !DISubroutineType(types: !16117)
!16117 = !{null, !2506, !2506}
!16118 = !{!16119, !16120, !16121}
!16119 = !DILocalVariable(name: "successor", arg: 1, scope: !16115, file: !137, line: 443, type: !2506)
!16120 = !DILocalVariable(name: "node", arg: 2, scope: !16115, file: !137, line: 443, type: !2506)
!16121 = !DILocalVariable(name: "prev", scope: !16115, file: !137, line: 445, type: !16122)
!16122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2506)
!16123 = !DILocation(line: 0, scope: !16115)
!16124 = !DILocation(line: 445, column: 39, scope: !16115)
!16125 = !DILocation(line: 447, column: 8, scope: !16115)
!16126 = !DILocation(line: 447, column: 13, scope: !16115)
!16127 = !DILocation(line: 448, column: 8, scope: !16115)
!16128 = !DILocation(line: 448, column: 13, scope: !16115)
!16129 = !DILocation(line: 449, column: 8, scope: !16115)
!16130 = !DILocation(line: 449, column: 13, scope: !16115)
!16131 = !DILocation(line: 450, column: 18, scope: !16115)
!16132 = !DILocation(line: 451, column: 1, scope: !16115)
!16133 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !137, file: !137, line: 341, type: !16134, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16136)
!16134 = !DISubroutineType(types: !16135)
!16135 = !{!2506, !16045, !2506}
!16136 = !{!16137, !16138}
!16137 = !DILocalVariable(name: "list", arg: 1, scope: !16133, file: !137, line: 341, type: !16045)
!16138 = !DILocalVariable(name: "node", arg: 2, scope: !16133, file: !137, line: 342, type: !2506)
!16139 = !DILocation(line: 0, scope: !16133)
!16140 = !DILocation(line: 344, column: 15, scope: !16133)
!16141 = !DILocation(line: 344, column: 9, scope: !16133)
!16142 = !DILocation(line: 344, column: 26, scope: !16133)
!16143 = !DILocation(line: 344, column: 2, scope: !16133)
!16144 = distinct !DISubprogram(name: "sys_dlist_append", scope: !137, file: !137, line: 404, type: !16145, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16147)
!16145 = !DISubroutineType(types: !16146)
!16146 = !{null, !16045, !2506}
!16147 = !{!16148, !16149, !16150}
!16148 = !DILocalVariable(name: "list", arg: 1, scope: !16144, file: !137, line: 404, type: !16045)
!16149 = !DILocalVariable(name: "node", arg: 2, scope: !16144, file: !137, line: 404, type: !2506)
!16150 = !DILocalVariable(name: "tail", scope: !16144, file: !137, line: 406, type: !16122)
!16151 = !DILocation(line: 0, scope: !16144)
!16152 = !DILocation(line: 406, column: 34, scope: !16144)
!16153 = !DILocation(line: 408, column: 8, scope: !16144)
!16154 = !DILocation(line: 408, column: 13, scope: !16144)
!16155 = !DILocation(line: 409, column: 8, scope: !16144)
!16156 = !DILocation(line: 409, column: 13, scope: !16144)
!16157 = !DILocation(line: 411, column: 8, scope: !16144)
!16158 = !DILocation(line: 411, column: 13, scope: !16144)
!16159 = !DILocation(line: 412, column: 13, scope: !16144)
!16160 = !DILocation(line: 413, column: 1, scope: !16144)
!16161 = distinct !DISubprogram(name: "update_cache", scope: !2510, file: !2510, line: 559, type: !9737, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16162)
!16162 = !{!16163, !16164}
!16163 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !16161, file: !2510, line: 559, type: !105)
!16164 = !DILocalVariable(name: "thread", scope: !16161, file: !2510, line: 562, type: !2403)
!16165 = !DILocation(line: 0, scope: !16161)
!16166 = !DILocation(line: 239, column: 9, scope: !16167, inlinedAt: !16170)
!16167 = distinct !DISubprogram(name: "runq_best", scope: !2510, file: !2510, line: 237, type: !16168, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !397)
!16168 = !DISubroutineType(types: !16169)
!16169 = !{!2403}
!16170 = distinct !DILocation(line: 314, column: 28, scope: !16171, inlinedAt: !16175)
!16171 = distinct !DISubprogram(name: "next_up", scope: !2510, file: !2510, line: 312, type: !16168, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16172)
!16172 = !{!16173, !16174}
!16173 = !DILocalVariable(name: "thread", scope: !16171, file: !2510, line: 314, type: !2403)
!16174 = !DILocalVariable(name: "mirqp", scope: !16171, file: !2510, line: 322, type: !2403)
!16175 = distinct !DILocation(line: 562, column: 28, scope: !16161)
!16176 = !DILocation(line: 0, scope: !16171, inlinedAt: !16175)
!16177 = !DILocation(line: 322, column: 41, scope: !16171, inlinedAt: !16175)
!16178 = !DILocation(line: 324, column: 12, scope: !16179, inlinedAt: !16175)
!16179 = distinct !DILexicalBlock(scope: !16171, file: !2510, line: 324, column: 6)
!16180 = !DILocation(line: 324, column: 20, scope: !16179, inlinedAt: !16175)
!16181 = !DILocation(line: 324, column: 31, scope: !16179, inlinedAt: !16175)
!16182 = !DILocation(line: 324, column: 39, scope: !16179, inlinedAt: !16175)
!16183 = !DILocation(line: 324, column: 43, scope: !16179, inlinedAt: !16175)
!16184 = !DILocation(line: 324, column: 6, scope: !16171, inlinedAt: !16175)
!16185 = !DILocation(line: 325, column: 8, scope: !16186, inlinedAt: !16175)
!16186 = distinct !DILexicalBlock(scope: !16187, file: !2510, line: 325, column: 7)
!16187 = distinct !DILexicalBlock(scope: !16179, file: !2510, line: 324, column: 64)
!16188 = !DILocation(line: 325, column: 7, scope: !16187, inlinedAt: !16175)
!16189 = !DILocation(line: 328, column: 36, scope: !16190, inlinedAt: !16175)
!16190 = distinct !DILexicalBlock(scope: !16186, file: !2510, line: 327, column: 10)
!16191 = !DILocation(line: 340, column: 17, scope: !16171, inlinedAt: !16175)
!16192 = !DILocation(line: 340, column: 9, scope: !16171, inlinedAt: !16175)
!16193 = !DILocalVariable(name: "thread", arg: 1, scope: !16194, file: !2510, line: 127, type: !2403)
!16194 = distinct !DISubprogram(name: "should_preempt", scope: !2510, file: !2510, line: 127, type: !16195, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16197)
!16195 = !DISubroutineType(types: !16196)
!16196 = !{!492, !2403, !105}
!16197 = !{!16193, !16198}
!16198 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !16194, file: !2510, line: 128, type: !105)
!16199 = !DILocation(line: 0, scope: !16194, inlinedAt: !16200)
!16200 = distinct !DILocation(line: 564, column: 6, scope: !16201)
!16201 = distinct !DILexicalBlock(scope: !16161, file: !2510, line: 564, column: 6)
!16202 = !DILocation(line: 133, column: 17, scope: !16203, inlinedAt: !16200)
!16203 = distinct !DILexicalBlock(scope: !16194, file: !2510, line: 133, column: 6)
!16204 = !DILocation(line: 0, scope: !16201)
!16205 = !DILocation(line: 133, column: 6, scope: !16194, inlinedAt: !16200)
!16206 = !DILocation(line: 137, column: 2, scope: !16207, inlinedAt: !16200)
!16207 = distinct !DILexicalBlock(scope: !16208, file: !2510, line: 137, column: 2)
!16208 = distinct !DILexicalBlock(scope: !16194, file: !2510, line: 137, column: 2)
!16209 = !DILocation(line: 137, column: 2, scope: !16208, inlinedAt: !16200)
!16210 = !DILocation(line: 137, column: 2, scope: !16211, inlinedAt: !16200)
!16211 = distinct !DILexicalBlock(scope: !16207, file: !2510, line: 137, column: 2)
!16212 = !DILocation(line: 140, column: 6, scope: !16213, inlinedAt: !16200)
!16213 = distinct !DILexicalBlock(scope: !16194, file: !2510, line: 140, column: 6)
!16214 = !DILocation(line: 140, column: 6, scope: !16194, inlinedAt: !16200)
!16215 = !DILocation(line: 150, column: 9, scope: !16216, inlinedAt: !16200)
!16216 = distinct !DILexicalBlock(scope: !16194, file: !2510, line: 149, column: 6)
!16217 = !DILocation(line: 149, column: 6, scope: !16194, inlinedAt: !16200)
!16218 = !DILocation(line: 157, column: 6, scope: !16219, inlinedAt: !16200)
!16219 = distinct !DILexicalBlock(scope: !16194, file: !2510, line: 157, column: 6)
!16220 = !DILocation(line: 157, column: 27, scope: !16219, inlinedAt: !16200)
!16221 = !DILocation(line: 157, column: 30, scope: !16219, inlinedAt: !16200)
!16222 = !DILocation(line: 564, column: 6, scope: !16161)
!16223 = !DILocation(line: 566, column: 14, scope: !16224)
!16224 = distinct !DILexicalBlock(scope: !16225, file: !2510, line: 566, column: 7)
!16225 = distinct !DILexicalBlock(scope: !16201, file: !2510, line: 564, column: 42)
!16226 = !DILocation(line: 566, column: 7, scope: !16225)
!16227 = !DILocation(line: 567, column: 4, scope: !16228)
!16228 = distinct !DILexicalBlock(scope: !16224, file: !2510, line: 566, column: 27)
!16229 = !DILocation(line: 568, column: 3, scope: !16228)
!16230 = !DILocation(line: 570, column: 3, scope: !16225)
!16231 = !DILocation(line: 572, column: 2, scope: !16225)
!16232 = !DILocation(line: 585, column: 1, scope: !16161)
!16233 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2510, file: !2510, line: 1144, type: !16234, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16236)
!16234 = !DISubroutineType(types: !16235)
!16235 = !{!2403, !16045}
!16236 = !{!16237, !16238, !16239}
!16237 = !DILocalVariable(name: "pq", arg: 1, scope: !16233, file: !2510, line: 1144, type: !16045)
!16238 = !DILocalVariable(name: "thread", scope: !16233, file: !2510, line: 1146, type: !2403)
!16239 = !DILocalVariable(name: "n", scope: !16233, file: !2510, line: 1147, type: !2506)
!16240 = !DILocation(line: 0, scope: !16233)
!16241 = !DILocation(line: 1147, column: 19, scope: !16233)
!16242 = !DILocation(line: 1152, column: 2, scope: !16233)
!16243 = distinct !DISubprogram(name: "is_metairq", scope: !2510, file: !2510, line: 68, type: !15795, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16244)
!16244 = !{!16245}
!16245 = !DILocalVariable(name: "thread", arg: 1, scope: !16243, file: !2510, line: 68, type: !2403)
!16246 = !DILocation(line: 0, scope: !16243)
!16247 = !DILocation(line: 71, column: 23, scope: !16243)
!16248 = !DILocation(line: 72, column: 3, scope: !16243)
!16249 = !DILocation(line: 71, column: 2, scope: !16243)
!16250 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !14174, file: !14174, line: 115, type: !15960, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16251)
!16251 = !{!16252}
!16252 = !DILocalVariable(name: "thread", arg: 1, scope: !16250, file: !14174, line: 115, type: !2403)
!16253 = !DILocation(line: 0, scope: !16250)
!16254 = !DILocation(line: 117, column: 46, scope: !16250)
!16255 = !DILocation(line: 117, column: 10, scope: !16250)
!16256 = !DILocation(line: 117, column: 9, scope: !16250)
!16257 = !DILocation(line: 117, column: 2, scope: !16250)
!16258 = distinct !DISubprogram(name: "is_preempt", scope: !2510, file: !2510, line: 62, type: !15795, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16259)
!16259 = !{!16260}
!16260 = !DILocalVariable(name: "thread", arg: 1, scope: !16258, file: !2510, line: 62, type: !2403)
!16261 = !DILocation(line: 0, scope: !16258)
!16262 = !DILocation(line: 65, column: 22, scope: !16258)
!16263 = !DILocation(line: 65, column: 30, scope: !16258)
!16264 = !DILocation(line: 65, column: 2, scope: !16258)
!16265 = distinct !DISubprogram(name: "update_metairq_preempt", scope: !2510, file: !2510, line: 545, type: !15777, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16266)
!16266 = !{!16267}
!16267 = !DILocalVariable(name: "thread", arg: 1, scope: !16265, file: !2510, line: 545, type: !2403)
!16268 = !DILocation(line: 0, scope: !16265)
!16269 = !DILocation(line: 548, column: 6, scope: !16270)
!16270 = distinct !DILexicalBlock(scope: !16265, file: !2510, line: 548, column: 6)
!16271 = !DILocation(line: 548, column: 25, scope: !16270)
!16272 = !DILocation(line: 548, column: 40, scope: !16270)
!16273 = !DILocation(line: 548, column: 29, scope: !16270)
!16274 = !DILocation(line: 548, column: 50, scope: !16270)
!16275 = !DILocation(line: 549, column: 7, scope: !16270)
!16276 = !DILocation(line: 548, column: 6, scope: !16265)
!16277 = !DILocation(line: 552, column: 37, scope: !16278)
!16278 = distinct !DILexicalBlock(scope: !16270, file: !2510, line: 552, column: 13)
!16279 = !DILocation(line: 552, column: 13, scope: !16270)
!16280 = !DILocation(line: 0, scope: !16270)
!16281 = !DILocation(line: 557, column: 1, scope: !16265)
!16282 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14603, file: !14603, line: 35, type: !16283, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16287)
!16283 = !DISubroutineType(types: !16284)
!16284 = !{!492, !16285}
!16285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16286, size: 32)
!16286 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2454)
!16287 = !{!16288}
!16288 = !DILocalVariable(name: "to", arg: 1, scope: !16282, file: !14603, line: 35, type: !16285)
!16289 = !DILocation(line: 0, scope: !16282)
!16290 = !DILocation(line: 37, column: 35, scope: !16282)
!16291 = !DILocation(line: 37, column: 10, scope: !16282)
!16292 = !DILocation(line: 37, column: 9, scope: !16282)
!16293 = !DILocation(line: 37, column: 2, scope: !16282)
!16294 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !137, file: !137, line: 225, type: !16295, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16299)
!16295 = !DISubroutineType(types: !16296)
!16296 = !{!492, !16297}
!16297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16298, size: 32)
!16298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2413)
!16299 = !{!16300}
!16300 = !DILocalVariable(name: "node", arg: 1, scope: !16294, file: !137, line: 225, type: !16297)
!16301 = !DILocation(line: 0, scope: !16294)
!16302 = !DILocation(line: 227, column: 15, scope: !16294)
!16303 = !DILocation(line: 227, column: 20, scope: !16294)
!16304 = !DILocation(line: 227, column: 2, scope: !16294)
!16305 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !137, file: !137, line: 325, type: !16134, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16306)
!16306 = !{!16307, !16308}
!16307 = !DILocalVariable(name: "list", arg: 1, scope: !16305, file: !137, line: 325, type: !16045)
!16308 = !DILocalVariable(name: "node", arg: 2, scope: !16305, file: !137, line: 326, type: !2506)
!16309 = !DILocation(line: 0, scope: !16305)
!16310 = !DILocation(line: 328, column: 24, scope: !16305)
!16311 = !DILocation(line: 328, column: 15, scope: !16305)
!16312 = !DILocation(line: 328, column: 9, scope: !16305)
!16313 = !DILocation(line: 328, column: 45, scope: !16305)
!16314 = !DILocation(line: 328, column: 2, scope: !16305)
!16315 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !137, file: !137, line: 266, type: !16316, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16318)
!16316 = !DISubroutineType(types: !16317)
!16317 = !{!492, !16045}
!16318 = !{!16319}
!16319 = !DILocalVariable(name: "list", arg: 1, scope: !16315, file: !137, line: 266, type: !16045)
!16320 = !DILocation(line: 0, scope: !16315)
!16321 = !DILocation(line: 268, column: 15, scope: !16315)
!16322 = !DILocation(line: 268, column: 20, scope: !16315)
!16323 = !DILocation(line: 268, column: 2, scope: !16315)
!16324 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !137, file: !137, line: 496, type: !16325, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16327)
!16325 = !DISubroutineType(types: !16326)
!16326 = !{null, !2506}
!16327 = !{!16328, !16329, !16330}
!16328 = !DILocalVariable(name: "node", arg: 1, scope: !16324, file: !137, line: 496, type: !2506)
!16329 = !DILocalVariable(name: "prev", scope: !16324, file: !137, line: 498, type: !16122)
!16330 = !DILocalVariable(name: "next", scope: !16324, file: !137, line: 499, type: !16122)
!16331 = !DILocation(line: 0, scope: !16324)
!16332 = !DILocation(line: 498, column: 34, scope: !16324)
!16333 = !DILocation(line: 499, column: 34, scope: !16324)
!16334 = !DILocation(line: 501, column: 8, scope: !16324)
!16335 = !DILocation(line: 501, column: 13, scope: !16324)
!16336 = !DILocation(line: 502, column: 8, scope: !16324)
!16337 = !DILocation(line: 502, column: 13, scope: !16324)
!16338 = !DILocation(line: 503, column: 2, scope: !16324)
!16339 = !DILocation(line: 504, column: 1, scope: !16324)
!16340 = distinct !DISubprogram(name: "sys_dnode_init", scope: !137, file: !137, line: 211, type: !16325, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16341)
!16341 = !{!16342}
!16342 = !DILocalVariable(name: "node", arg: 1, scope: !16340, file: !137, line: 211, type: !2506)
!16343 = !DILocation(line: 0, scope: !16340)
!16344 = !DILocation(line: 213, column: 8, scope: !16340)
!16345 = !DILocation(line: 213, column: 13, scope: !16340)
!16346 = !DILocation(line: 214, column: 8, scope: !16340)
!16347 = !DILocation(line: 214, column: 13, scope: !16340)
!16348 = !DILocation(line: 215, column: 1, scope: !16340)
!16349 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !14174, file: !14174, line: 131, type: !16350, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16352)
!16350 = !DISubroutineType(types: !16351)
!16351 = !{!492, !2403, !113}
!16352 = !{!16353, !16354}
!16353 = !DILocalVariable(name: "thread", arg: 1, scope: !16349, file: !14174, line: 131, type: !2403)
!16354 = !DILocalVariable(name: "state", arg: 2, scope: !16349, file: !14174, line: 131, type: !113)
!16355 = !DILocation(line: 0, scope: !16349)
!16356 = !DILocation(line: 133, column: 23, scope: !16349)
!16357 = !DILocation(line: 133, column: 10, scope: !16349)
!16358 = !DILocation(line: 133, column: 36, scope: !16349)
!16359 = !DILocation(line: 133, column: 45, scope: !16349)
!16360 = !DILocation(line: 133, column: 2, scope: !16349)
!16361 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14174, file: !14174, line: 211, type: !16362, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16364)
!16362 = !DISubroutineType(types: !16363)
!16363 = !{!492, !105, !105}
!16364 = !{!16365, !16366}
!16365 = !DILocalVariable(name: "prio", arg: 1, scope: !16361, file: !14174, line: 211, type: !105)
!16366 = !DILocalVariable(name: "test_prio", arg: 2, scope: !16361, file: !14174, line: 211, type: !105)
!16367 = !DILocation(line: 0, scope: !16361)
!16368 = !DILocation(line: 213, column: 9, scope: !16361)
!16369 = !DILocation(line: 213, column: 2, scope: !16361)
!16370 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14174, file: !14174, line: 206, type: !16362, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16371)
!16371 = !{!16372, !16373}
!16372 = !DILocalVariable(name: "prio1", arg: 1, scope: !16370, file: !14174, line: 206, type: !105)
!16373 = !DILocalVariable(name: "prio2", arg: 2, scope: !16370, file: !14174, line: 206, type: !105)
!16374 = !DILocation(line: 0, scope: !16370)
!16375 = !DILocation(line: 208, column: 15, scope: !16370)
!16376 = !DILocation(line: 208, column: 2, scope: !16370)
!16377 = distinct !DISubprogram(name: "z_ready_thread", scope: !2510, file: !2510, line: 635, type: !15777, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16378)
!16378 = !{!16379, !16380, !16382}
!16379 = !DILocalVariable(name: "thread", arg: 1, scope: !16377, file: !2510, line: 635, type: !2403)
!16380 = !DILocalVariable(name: "__i", scope: !16381, file: !2510, line: 637, type: !15811)
!16381 = distinct !DILexicalBlock(scope: !16377, file: !2510, line: 637, column: 2)
!16382 = !DILocalVariable(name: "__key", scope: !16381, file: !2510, line: 637, type: !15811)
!16383 = !DILocation(line: 0, scope: !16377)
!16384 = !DILocation(line: 0, scope: !16381)
!16385 = !DILocation(line: 0, scope: !15819, inlinedAt: !16386)
!16386 = distinct !DILocation(line: 637, column: 2, scope: !16381)
!16387 = !DILocation(line: 55, column: 2, scope: !15828, inlinedAt: !16388)
!16388 = distinct !DILocation(line: 145, column: 10, scope: !15819, inlinedAt: !16386)
!16389 = !DILocation(line: 0, scope: !15828, inlinedAt: !16388)
!16390 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !16386)
!16391 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !16386)
!16392 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !16386)
!16393 = !DILocation(line: 160, column: 2, scope: !15819, inlinedAt: !16386)
!16394 = !DILocation(line: 639, column: 4, scope: !16395)
!16395 = distinct !DILexicalBlock(scope: !16396, file: !2510, line: 638, column: 41)
!16396 = distinct !DILexicalBlock(scope: !16397, file: !2510, line: 638, column: 7)
!16397 = distinct !DILexicalBlock(scope: !16398, file: !2510, line: 637, column: 26)
!16398 = distinct !DILexicalBlock(scope: !16381, file: !2510, line: 637, column: 2)
!16399 = !DILocation(line: 0, scope: !15853, inlinedAt: !16400)
!16400 = distinct !DILocation(line: 637, column: 2, scope: !16398)
!16401 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !16400)
!16402 = !DILocation(line: 194, column: 2, scope: !15862, inlinedAt: !16400)
!16403 = !DILocation(line: 194, column: 2, scope: !15865, inlinedAt: !16400)
!16404 = !DILocation(line: 0, scope: !15867, inlinedAt: !16405)
!16405 = distinct !DILocation(line: 215, column: 2, scope: !15853, inlinedAt: !16400)
!16406 = !DILocation(line: 95, column: 2, scope: !15867, inlinedAt: !16405)
!16407 = !DILocation(line: 642, column: 1, scope: !16377)
!16408 = distinct !DISubprogram(name: "ready_thread", scope: !2510, file: !2510, line: 617, type: !15777, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16409)
!16409 = !{!16410}
!16410 = !DILocalVariable(name: "thread", arg: 1, scope: !16408, file: !2510, line: 617, type: !2403)
!16411 = !DILocation(line: 0, scope: !16408)
!16412 = !DILocation(line: 626, column: 7, scope: !16413)
!16413 = distinct !DILexicalBlock(scope: !16408, file: !2510, line: 626, column: 6)
!16414 = !DILocation(line: 626, column: 34, scope: !16413)
!16415 = !DILocation(line: 626, column: 37, scope: !16413)
!16416 = !DILocation(line: 626, column: 6, scope: !16408)
!16417 = !DILocation(line: 0, scope: !16028, inlinedAt: !16418)
!16418 = distinct !DILocation(line: 629, column: 3, scope: !16419)
!16419 = distinct !DILexicalBlock(scope: !16413, file: !2510, line: 626, column: 64)
!16420 = !DILocation(line: 252, column: 15, scope: !16028, inlinedAt: !16418)
!16421 = !DILocation(line: 252, column: 28, scope: !16028, inlinedAt: !16418)
!16422 = !DILocation(line: 0, scope: !16035, inlinedAt: !16423)
!16423 = distinct !DILocation(line: 254, column: 3, scope: !16039, inlinedAt: !16418)
!16424 = !DILocation(line: 0, scope: !16042, inlinedAt: !16425)
!16425 = distinct !DILocation(line: 229, column: 2, scope: !16035, inlinedAt: !16423)
!16426 = !DILocation(line: 186, column: 2, scope: !16052, inlinedAt: !16425)
!16427 = !DILocation(line: 186, column: 2, scope: !16053, inlinedAt: !16425)
!16428 = !DILocation(line: 186, column: 2, scope: !16056, inlinedAt: !16425)
!16429 = !DILocation(line: 188, column: 2, scope: !16058, inlinedAt: !16425)
!16430 = !DILocation(line: 188, column: 2, scope: !16060, inlinedAt: !16425)
!16431 = !DILocation(line: 0, scope: !16058, inlinedAt: !16425)
!16432 = !DILocation(line: 189, column: 7, scope: !16063, inlinedAt: !16425)
!16433 = !DILocation(line: 189, column: 35, scope: !16063, inlinedAt: !16425)
!16434 = !DILocation(line: 189, column: 7, scope: !16064, inlinedAt: !16425)
!16435 = !DILocation(line: 191, column: 21, scope: !16068, inlinedAt: !16425)
!16436 = !DILocation(line: 190, column: 4, scope: !16068, inlinedAt: !16425)
!16437 = !DILocation(line: 192, column: 4, scope: !16068, inlinedAt: !16425)
!16438 = distinct !{!16438, !16429, !16439}
!16439 = !DILocation(line: 194, column: 2, scope: !16058, inlinedAt: !16425)
!16440 = !DILocation(line: 196, column: 37, scope: !16042, inlinedAt: !16425)
!16441 = !DILocation(line: 196, column: 2, scope: !16042, inlinedAt: !16425)
!16442 = !DILocation(line: 197, column: 1, scope: !16042, inlinedAt: !16425)
!16443 = !DILocation(line: 630, column: 3, scope: !16419)
!16444 = !DILocation(line: 632, column: 2, scope: !16419)
!16445 = !DILocation(line: 633, column: 1, scope: !16408)
!16446 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !14174, file: !14174, line: 120, type: !15960, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16447)
!16447 = !{!16448}
!16448 = !DILocalVariable(name: "thread", arg: 1, scope: !16446, file: !14174, line: 120, type: !2403)
!16449 = !DILocation(line: 0, scope: !16446)
!16450 = !DILocation(line: 122, column: 12, scope: !16446)
!16451 = !DILocation(line: 122, column: 62, scope: !16446)
!16452 = !DILocation(line: 123, column: 4, scope: !16446)
!16453 = !DILocation(line: 122, column: 2, scope: !16446)
!16454 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2510, file: !2510, line: 644, type: !15777, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16455)
!16455 = !{!16456, !16457, !16459}
!16456 = !DILocalVariable(name: "thread", arg: 1, scope: !16454, file: !2510, line: 644, type: !2403)
!16457 = !DILocalVariable(name: "__i", scope: !16458, file: !2510, line: 646, type: !15811)
!16458 = distinct !DILexicalBlock(scope: !16454, file: !2510, line: 646, column: 2)
!16459 = !DILocalVariable(name: "__key", scope: !16458, file: !2510, line: 646, type: !15811)
!16460 = !DILocation(line: 0, scope: !16454)
!16461 = !DILocation(line: 0, scope: !16458)
!16462 = !DILocation(line: 0, scope: !15819, inlinedAt: !16463)
!16463 = distinct !DILocation(line: 646, column: 2, scope: !16458)
!16464 = !DILocation(line: 55, column: 2, scope: !15828, inlinedAt: !16465)
!16465 = distinct !DILocation(line: 145, column: 10, scope: !15819, inlinedAt: !16463)
!16466 = !DILocation(line: 0, scope: !15828, inlinedAt: !16465)
!16467 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !16463)
!16468 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !16463)
!16469 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !16463)
!16470 = !DILocation(line: 160, column: 2, scope: !15819, inlinedAt: !16463)
!16471 = !DILocation(line: 647, column: 3, scope: !16472)
!16472 = distinct !DILexicalBlock(scope: !16473, file: !2510, line: 646, column: 26)
!16473 = distinct !DILexicalBlock(scope: !16458, file: !2510, line: 646, column: 2)
!16474 = !DILocation(line: 0, scope: !15853, inlinedAt: !16475)
!16475 = distinct !DILocation(line: 646, column: 2, scope: !16473)
!16476 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !16475)
!16477 = !DILocation(line: 194, column: 2, scope: !15862, inlinedAt: !16475)
!16478 = !DILocation(line: 194, column: 2, scope: !15865, inlinedAt: !16475)
!16479 = !DILocation(line: 0, scope: !15867, inlinedAt: !16480)
!16480 = distinct !DILocation(line: 215, column: 2, scope: !15853, inlinedAt: !16475)
!16481 = !DILocation(line: 95, column: 2, scope: !15867, inlinedAt: !16480)
!16482 = !DILocation(line: 649, column: 1, scope: !16454)
!16483 = distinct !DISubprogram(name: "z_sched_start", scope: !2510, file: !2510, line: 651, type: !15777, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16484)
!16484 = !{!16485, !16486}
!16485 = !DILocalVariable(name: "thread", arg: 1, scope: !16483, file: !2510, line: 651, type: !2403)
!16486 = !DILocalVariable(name: "key", scope: !16483, file: !2510, line: 653, type: !15811)
!16487 = !DILocation(line: 0, scope: !16483)
!16488 = !DILocation(line: 0, scope: !15819, inlinedAt: !16489)
!16489 = distinct !DILocation(line: 653, column: 25, scope: !16483)
!16490 = !DILocation(line: 55, column: 2, scope: !15828, inlinedAt: !16491)
!16491 = distinct !DILocation(line: 145, column: 10, scope: !15819, inlinedAt: !16489)
!16492 = !DILocation(line: 0, scope: !15828, inlinedAt: !16491)
!16493 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !16489)
!16494 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !16489)
!16495 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !16489)
!16496 = !DILocation(line: 160, column: 2, scope: !15819, inlinedAt: !16489)
!16497 = !DILocation(line: 655, column: 6, scope: !16498)
!16498 = distinct !DILexicalBlock(scope: !16483, file: !2510, line: 655, column: 6)
!16499 = !DILocation(line: 655, column: 6, scope: !16483)
!16500 = !DILocation(line: 0, scope: !15853, inlinedAt: !16501)
!16501 = distinct !DILocation(line: 656, column: 3, scope: !16502)
!16502 = distinct !DILexicalBlock(scope: !16498, file: !2510, line: 655, column: 36)
!16503 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !16501)
!16504 = !DILocation(line: 194, column: 2, scope: !15862, inlinedAt: !16501)
!16505 = !DILocation(line: 194, column: 2, scope: !15865, inlinedAt: !16501)
!16506 = !DILocation(line: 0, scope: !15867, inlinedAt: !16507)
!16507 = distinct !DILocation(line: 215, column: 2, scope: !15853, inlinedAt: !16501)
!16508 = !DILocation(line: 95, column: 2, scope: !15867, inlinedAt: !16507)
!16509 = !DILocation(line: 657, column: 3, scope: !16502)
!16510 = !DILocation(line: 660, column: 2, scope: !16483)
!16511 = !DILocation(line: 661, column: 2, scope: !16483)
!16512 = !DILocation(line: 662, column: 2, scope: !16483)
!16513 = !DILocation(line: 663, column: 1, scope: !16483)
!16514 = distinct !DISubprogram(name: "z_has_thread_started", scope: !14174, file: !14174, line: 126, type: !15960, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16515)
!16515 = !{!16516}
!16516 = !DILocalVariable(name: "thread", arg: 1, scope: !16514, file: !14174, line: 126, type: !2403)
!16517 = !DILocation(line: 0, scope: !16514)
!16518 = !DILocation(line: 128, column: 23, scope: !16514)
!16519 = !DILocation(line: 128, column: 36, scope: !16514)
!16520 = !DILocation(line: 128, column: 56, scope: !16514)
!16521 = !DILocation(line: 128, column: 2, scope: !16514)
!16522 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14174, file: !14174, line: 155, type: !15777, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16523)
!16523 = !{!16524}
!16524 = !DILocalVariable(name: "thread", arg: 1, scope: !16522, file: !14174, line: 155, type: !2403)
!16525 = !DILocation(line: 0, scope: !16522)
!16526 = !DILocation(line: 157, column: 15, scope: !16522)
!16527 = !DILocation(line: 157, column: 28, scope: !16522)
!16528 = !DILocation(line: 158, column: 1, scope: !16522)
!16529 = distinct !DISubprogram(name: "z_reschedule", scope: !2510, file: !2510, line: 967, type: !15854, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16530)
!16530 = !{!16531, !16532}
!16531 = !DILocalVariable(name: "lock", arg: 1, scope: !16529, file: !2510, line: 967, type: !15822)
!16532 = !DILocalVariable(name: "key", arg: 2, scope: !16529, file: !2510, line: 967, type: !15811)
!16533 = !DILocation(line: 0, scope: !16529)
!16534 = !DILocation(line: 969, column: 6, scope: !16535)
!16535 = distinct !DILexicalBlock(scope: !16529, file: !2510, line: 969, column: 6)
!16536 = !DILocation(line: 969, column: 23, scope: !16535)
!16537 = !DILocation(line: 969, column: 26, scope: !16535)
!16538 = !DILocation(line: 969, column: 6, scope: !16529)
!16539 = !DILocalVariable(name: "key", arg: 2, scope: !16540, file: !14299, line: 193, type: !15811)
!16540 = distinct !DISubprogram(name: "z_swap", scope: !14299, file: !14299, line: 193, type: !16541, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16543)
!16541 = !DISubroutineType(types: !16542)
!16542 = !{!105, !15822, !15811}
!16543 = !{!16544, !16539}
!16544 = !DILocalVariable(name: "lock", arg: 1, scope: !16540, file: !14299, line: 193, type: !15822)
!16545 = !DILocation(line: 0, scope: !16540, inlinedAt: !16546)
!16546 = distinct !DILocation(line: 970, column: 3, scope: !16547)
!16547 = distinct !DILexicalBlock(scope: !16535, file: !2510, line: 969, column: 39)
!16548 = !DILocalVariable(name: "l", arg: 1, scope: !16549, file: !236, line: 221, type: !15822)
!16549 = distinct !DISubprogram(name: "k_spin_release", scope: !236, file: !236, line: 221, type: !16550, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16552)
!16550 = !DISubroutineType(types: !16551)
!16551 = !{null, !15822}
!16552 = !{!16548}
!16553 = !DILocation(line: 0, scope: !16549, inlinedAt: !16554)
!16554 = distinct !DILocation(line: 195, column: 2, scope: !16540, inlinedAt: !16546)
!16555 = !DILocation(line: 225, column: 2, scope: !16556, inlinedAt: !16554)
!16556 = distinct !DILexicalBlock(scope: !16557, file: !236, line: 225, column: 2)
!16557 = distinct !DILexicalBlock(scope: !16549, file: !236, line: 225, column: 2)
!16558 = !DILocation(line: 225, column: 2, scope: !16557, inlinedAt: !16554)
!16559 = !DILocation(line: 225, column: 2, scope: !16560, inlinedAt: !16554)
!16560 = distinct !DILexicalBlock(scope: !16556, file: !236, line: 225, column: 2)
!16561 = !DILocation(line: 196, column: 9, scope: !16540, inlinedAt: !16546)
!16562 = !DILocation(line: 971, column: 2, scope: !16547)
!16563 = !DILocation(line: 0, scope: !15853, inlinedAt: !16564)
!16564 = distinct !DILocation(line: 972, column: 3, scope: !16565)
!16565 = distinct !DILexicalBlock(scope: !16535, file: !2510, line: 971, column: 9)
!16566 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !16564)
!16567 = !DILocation(line: 194, column: 2, scope: !15862, inlinedAt: !16564)
!16568 = !DILocation(line: 194, column: 2, scope: !15865, inlinedAt: !16564)
!16569 = !DILocation(line: 0, scope: !15867, inlinedAt: !16570)
!16570 = distinct !DILocation(line: 215, column: 2, scope: !15853, inlinedAt: !16564)
!16571 = !DILocation(line: 95, column: 2, scope: !15867, inlinedAt: !16570)
!16572 = !DILocation(line: 975, column: 1, scope: !16529)
!16573 = distinct !DISubprogram(name: "resched", scope: !2510, file: !2510, line: 940, type: !16574, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16576)
!16574 = !DISubroutineType(types: !16575)
!16575 = !{!492, !113}
!16576 = !{!16577}
!16577 = !DILocalVariable(name: "key", arg: 1, scope: !16573, file: !2510, line: 940, type: !113)
!16578 = !DILocation(line: 0, scope: !16573)
!16579 = !DILocalVariable(name: "key", arg: 1, scope: !16580, file: !7485, line: 112, type: !32)
!16580 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !7485, file: !7485, line: 112, type: !16581, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16583)
!16581 = !DISubroutineType(types: !16582)
!16582 = !{!492, !32}
!16583 = !{!16579}
!16584 = !DILocation(line: 0, scope: !16580, inlinedAt: !16585)
!16585 = distinct !DILocation(line: 946, column: 9, scope: !16573)
!16586 = !DILocation(line: 115, column: 13, scope: !16580, inlinedAt: !16585)
!16587 = !DILocation(line: 946, column: 32, scope: !16573)
!16588 = !DILocation(line: 1031, column: 3, scope: !16589, inlinedAt: !16592)
!16589 = distinct !DISubprogram(name: "__get_IPSR", scope: !7803, file: !7803, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16590)
!16590 = !{!16591}
!16591 = !DILocalVariable(name: "result", scope: !16589, file: !7803, line: 1029, type: !113)
!16592 = distinct !DILocation(line: 48, column: 10, scope: !16593, inlinedAt: !16594)
!16593 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8850, file: !8850, line: 46, type: !8851, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !397)
!16594 = distinct !DILocation(line: 946, column: 36, scope: !16573)
!16595 = !{i64 2959391}
!16596 = !DILocation(line: 0, scope: !16589, inlinedAt: !16592)
!16597 = !DILocation(line: 48, column: 9, scope: !16593, inlinedAt: !16594)
!16598 = !DILocation(line: 946, column: 2, scope: !16573)
!16599 = distinct !DISubprogram(name: "need_swap", scope: !2510, file: !2510, line: 953, type: !8851, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16600)
!16600 = !{!16601}
!16601 = !DILocalVariable(name: "new_thread", scope: !16599, file: !2510, line: 959, type: !2403)
!16602 = !DILocation(line: 962, column: 31, scope: !16599)
!16603 = !DILocation(line: 0, scope: !16599)
!16604 = !DILocation(line: 963, column: 23, scope: !16599)
!16605 = !DILocation(line: 963, column: 20, scope: !16599)
!16606 = !DILocation(line: 963, column: 2, scope: !16599)
!16607 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14299, file: !14299, line: 181, type: !7813, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16608)
!16608 = !{!16609, !16610}
!16609 = !DILocalVariable(name: "key", arg: 1, scope: !16607, file: !14299, line: 181, type: !32)
!16610 = !DILocalVariable(name: "ret", scope: !16607, file: !14299, line: 183, type: !105)
!16611 = !DILocation(line: 0, scope: !16607)
!16612 = !DILocation(line: 185, column: 8, scope: !16607)
!16613 = !DILocation(line: 186, column: 2, scope: !16607)
!16614 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2510, file: !2510, line: 665, type: !15777, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16615)
!16615 = !{!16616, !16617, !16619}
!16616 = !DILocalVariable(name: "thread", arg: 1, scope: !16614, file: !2510, line: 665, type: !2403)
!16617 = !DILocalVariable(name: "__i", scope: !16618, file: !2510, line: 671, type: !15811)
!16618 = distinct !DILexicalBlock(scope: !16614, file: !2510, line: 671, column: 2)
!16619 = !DILocalVariable(name: "__key", scope: !16618, file: !2510, line: 671, type: !15811)
!16620 = !DILocation(line: 0, scope: !16614)
!16621 = !DILocation(line: 669, column: 8, scope: !16614)
!16622 = !DILocation(line: 0, scope: !16618)
!16623 = !DILocation(line: 0, scope: !15819, inlinedAt: !16624)
!16624 = distinct !DILocation(line: 671, column: 2, scope: !16618)
!16625 = !DILocation(line: 55, column: 2, scope: !15828, inlinedAt: !16626)
!16626 = distinct !DILocation(line: 145, column: 10, scope: !15819, inlinedAt: !16624)
!16627 = !DILocation(line: 0, scope: !15828, inlinedAt: !16626)
!16628 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !16624)
!16629 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !16624)
!16630 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !16624)
!16631 = !DILocation(line: 160, column: 2, scope: !15819, inlinedAt: !16624)
!16632 = !DILocation(line: 672, column: 7, scope: !16633)
!16633 = distinct !DILexicalBlock(scope: !16634, file: !2510, line: 672, column: 7)
!16634 = distinct !DILexicalBlock(scope: !16635, file: !2510, line: 671, column: 26)
!16635 = distinct !DILexicalBlock(scope: !16618, file: !2510, line: 671, column: 2)
!16636 = !DILocation(line: 672, column: 7, scope: !16634)
!16637 = !DILocation(line: 0, scope: !16011, inlinedAt: !16638)
!16638 = distinct !DILocation(line: 673, column: 4, scope: !16639)
!16639 = distinct !DILexicalBlock(scope: !16633, file: !2510, line: 672, column: 35)
!16640 = !DILocation(line: 266, column: 15, scope: !16011, inlinedAt: !16638)
!16641 = !DILocation(line: 266, column: 28, scope: !16011, inlinedAt: !16638)
!16642 = !DILocation(line: 0, scope: !16019, inlinedAt: !16643)
!16643 = distinct !DILocation(line: 268, column: 3, scope: !16023, inlinedAt: !16638)
!16644 = !DILocation(line: 234, column: 2, scope: !16019, inlinedAt: !16643)
!16645 = !DILocation(line: 674, column: 3, scope: !16639)
!16646 = !DILocation(line: 675, column: 3, scope: !16634)
!16647 = !DILocation(line: 676, column: 26, scope: !16634)
!16648 = !DILocation(line: 676, column: 23, scope: !16634)
!16649 = !DILocation(line: 676, column: 3, scope: !16634)
!16650 = !DILocation(line: 0, scope: !15853, inlinedAt: !16651)
!16651 = distinct !DILocation(line: 671, column: 2, scope: !16635)
!16652 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !16651)
!16653 = !DILocation(line: 194, column: 2, scope: !15862, inlinedAt: !16651)
!16654 = !DILocation(line: 194, column: 2, scope: !15865, inlinedAt: !16651)
!16655 = !DILocation(line: 0, scope: !15867, inlinedAt: !16656)
!16656 = distinct !DILocation(line: 215, column: 2, scope: !15853, inlinedAt: !16651)
!16657 = !DILocation(line: 95, column: 2, scope: !15867, inlinedAt: !16656)
!16658 = !DILocation(line: 679, column: 16, scope: !16659)
!16659 = distinct !DILexicalBlock(scope: !16614, file: !2510, line: 679, column: 6)
!16660 = !DILocation(line: 679, column: 13, scope: !16659)
!16661 = !DILocation(line: 679, column: 6, scope: !16614)
!16662 = !DILocation(line: 680, column: 3, scope: !16663)
!16663 = distinct !DILexicalBlock(scope: !16659, file: !2510, line: 679, column: 26)
!16664 = !DILocation(line: 681, column: 2, scope: !16663)
!16665 = !DILocation(line: 684, column: 1, scope: !16614)
!16666 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14603, file: !14603, line: 52, type: !15795, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16667)
!16667 = !{!16668}
!16668 = !DILocalVariable(name: "thread", arg: 1, scope: !16666, file: !14603, line: 52, type: !2403)
!16669 = !DILocation(line: 0, scope: !16666)
!16670 = !DILocation(line: 54, column: 39, scope: !16666)
!16671 = !DILocation(line: 54, column: 9, scope: !16666)
!16672 = !DILocation(line: 54, column: 2, scope: !16666)
!16673 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !14174, file: !14174, line: 141, type: !15777, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16674)
!16674 = !{!16675}
!16675 = !DILocalVariable(name: "thread", arg: 1, scope: !16673, file: !14174, line: 141, type: !2403)
!16676 = !DILocation(line: 0, scope: !16673)
!16677 = !DILocation(line: 143, column: 15, scope: !16673)
!16678 = !DILocation(line: 143, column: 28, scope: !16673)
!16679 = !DILocation(line: 146, column: 1, scope: !16673)
!16680 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14174, file: !14174, line: 73, type: !266, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !397)
!16681 = !DILocation(line: 55, column: 2, scope: !15828, inlinedAt: !16682)
!16682 = distinct !DILocation(line: 75, column: 30, scope: !16680)
!16683 = !DILocation(line: 0, scope: !15828, inlinedAt: !16682)
!16684 = !DILocation(line: 75, column: 9, scope: !16680)
!16685 = !DILocation(line: 76, column: 1, scope: !16680)
!16686 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2510, file: !2510, line: 977, type: !7898, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16687)
!16687 = !{!16688}
!16688 = !DILocalVariable(name: "key", arg: 1, scope: !16686, file: !2510, line: 977, type: !113)
!16689 = !DILocation(line: 0, scope: !16686)
!16690 = !DILocation(line: 979, column: 6, scope: !16691)
!16691 = distinct !DILexicalBlock(scope: !16686, file: !2510, line: 979, column: 6)
!16692 = !DILocation(line: 979, column: 6, scope: !16686)
!16693 = !DILocation(line: 980, column: 3, scope: !16694)
!16694 = distinct !DILexicalBlock(scope: !16691, file: !2510, line: 979, column: 20)
!16695 = !DILocation(line: 981, column: 2, scope: !16694)
!16696 = !DILocation(line: 0, scope: !15867, inlinedAt: !16697)
!16697 = distinct !DILocation(line: 982, column: 3, scope: !16698)
!16698 = distinct !DILexicalBlock(scope: !16691, file: !2510, line: 981, column: 9)
!16699 = !DILocation(line: 95, column: 2, scope: !15867, inlinedAt: !16697)
!16700 = !DILocation(line: 985, column: 1, scope: !16686)
!16701 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2510, file: !2510, line: 695, type: !15777, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16702)
!16702 = !{!16703, !16704}
!16703 = !DILocalVariable(name: "thread", arg: 1, scope: !16701, file: !2510, line: 695, type: !2403)
!16704 = !DILocalVariable(name: "key", scope: !16701, file: !2510, line: 699, type: !15811)
!16705 = !DILocation(line: 0, scope: !16701)
!16706 = !DILocation(line: 0, scope: !15819, inlinedAt: !16707)
!16707 = distinct !DILocation(line: 699, column: 25, scope: !16701)
!16708 = !DILocation(line: 55, column: 2, scope: !15828, inlinedAt: !16709)
!16709 = distinct !DILocation(line: 145, column: 10, scope: !15819, inlinedAt: !16707)
!16710 = !DILocation(line: 0, scope: !15828, inlinedAt: !16709)
!16711 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !16707)
!16712 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !16707)
!16713 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !16707)
!16714 = !DILocation(line: 160, column: 2, scope: !15819, inlinedAt: !16707)
!16715 = !DILocation(line: 702, column: 7, scope: !16716)
!16716 = distinct !DILexicalBlock(scope: !16701, file: !2510, line: 702, column: 6)
!16717 = !DILocation(line: 702, column: 6, scope: !16701)
!16718 = !DILocation(line: 0, scope: !15853, inlinedAt: !16719)
!16719 = distinct !DILocation(line: 703, column: 3, scope: !16720)
!16720 = distinct !DILexicalBlock(scope: !16716, file: !2510, line: 702, column: 38)
!16721 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !16719)
!16722 = !DILocation(line: 194, column: 2, scope: !15862, inlinedAt: !16719)
!16723 = !DILocation(line: 194, column: 2, scope: !15865, inlinedAt: !16719)
!16724 = !DILocation(line: 0, scope: !15867, inlinedAt: !16725)
!16725 = distinct !DILocation(line: 215, column: 2, scope: !15853, inlinedAt: !16719)
!16726 = !DILocation(line: 95, column: 2, scope: !15867, inlinedAt: !16725)
!16727 = !DILocation(line: 704, column: 3, scope: !16720)
!16728 = !DILocation(line: 707, column: 2, scope: !16701)
!16729 = !DILocation(line: 708, column: 2, scope: !16701)
!16730 = !DILocation(line: 710, column: 2, scope: !16701)
!16731 = !DILocation(line: 713, column: 1, scope: !16701)
!16732 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !14174, file: !14174, line: 96, type: !15960, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16733)
!16733 = !{!16734}
!16734 = !DILocalVariable(name: "thread", arg: 1, scope: !16732, file: !14174, line: 96, type: !2403)
!16735 = !DILocation(line: 0, scope: !16732)
!16736 = !DILocation(line: 98, column: 23, scope: !16732)
!16737 = !DILocation(line: 98, column: 36, scope: !16732)
!16738 = !DILocation(line: 98, column: 57, scope: !16732)
!16739 = !DILocation(line: 98, column: 2, scope: !16732)
!16740 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !14174, file: !14174, line: 148, type: !15777, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16741)
!16741 = !{!16742}
!16742 = !DILocalVariable(name: "thread", arg: 1, scope: !16740, file: !14174, line: 148, type: !2403)
!16743 = !DILocation(line: 0, scope: !16740)
!16744 = !DILocation(line: 150, column: 15, scope: !16740)
!16745 = !DILocation(line: 150, column: 28, scope: !16740)
!16746 = !DILocation(line: 153, column: 1, scope: !16740)
!16747 = distinct !DISubprogram(name: "z_pend_thread", scope: !2510, file: !2510, line: 770, type: !16748, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16754)
!16748 = !DISubroutineType(types: !16749)
!16749 = !{null, !2403, !2434, !16750}
!16750 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !16751)
!16751 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !16752)
!16752 = !{!16753}
!16753 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16751, file: !108, line: 66, baseType: !107, size: 64)
!16754 = !{!16755, !16756, !16757, !16758, !16760}
!16755 = !DILocalVariable(name: "thread", arg: 1, scope: !16747, file: !2510, line: 770, type: !2403)
!16756 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16747, file: !2510, line: 770, type: !2434)
!16757 = !DILocalVariable(name: "timeout", arg: 3, scope: !16747, file: !2510, line: 771, type: !16750)
!16758 = !DILocalVariable(name: "__i", scope: !16759, file: !2510, line: 774, type: !15811)
!16759 = distinct !DILexicalBlock(scope: !16747, file: !2510, line: 774, column: 2)
!16760 = !DILocalVariable(name: "__key", scope: !16759, file: !2510, line: 774, type: !15811)
!16761 = !DILocation(line: 0, scope: !16747)
!16762 = !DILocation(line: 773, column: 2, scope: !16763)
!16763 = distinct !DILexicalBlock(scope: !16764, file: !2510, line: 773, column: 2)
!16764 = distinct !DILexicalBlock(scope: !16747, file: !2510, line: 773, column: 2)
!16765 = !DILocation(line: 773, column: 2, scope: !16764)
!16766 = !DILocation(line: 773, column: 2, scope: !16767)
!16767 = distinct !DILexicalBlock(scope: !16763, file: !2510, line: 773, column: 2)
!16768 = !DILocation(line: 0, scope: !16759)
!16769 = !DILocation(line: 0, scope: !15819, inlinedAt: !16770)
!16770 = distinct !DILocation(line: 774, column: 2, scope: !16759)
!16771 = !DILocation(line: 55, column: 2, scope: !15828, inlinedAt: !16772)
!16772 = distinct !DILocation(line: 145, column: 10, scope: !15819, inlinedAt: !16770)
!16773 = !DILocation(line: 0, scope: !15828, inlinedAt: !16772)
!16774 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !16770)
!16775 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !16770)
!16776 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !16770)
!16777 = !DILocation(line: 160, column: 2, scope: !15819, inlinedAt: !16770)
!16778 = !DILocation(line: 775, column: 3, scope: !16779)
!16779 = distinct !DILexicalBlock(scope: !16780, file: !2510, line: 774, column: 26)
!16780 = distinct !DILexicalBlock(scope: !16759, file: !2510, line: 774, column: 2)
!16781 = !DILocation(line: 0, scope: !15853, inlinedAt: !16782)
!16782 = distinct !DILocation(line: 774, column: 2, scope: !16780)
!16783 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !16782)
!16784 = !DILocation(line: 194, column: 2, scope: !15862, inlinedAt: !16782)
!16785 = !DILocation(line: 194, column: 2, scope: !15865, inlinedAt: !16782)
!16786 = !DILocation(line: 0, scope: !15867, inlinedAt: !16787)
!16787 = distinct !DILocation(line: 215, column: 2, scope: !15853, inlinedAt: !16782)
!16788 = !DILocation(line: 95, column: 2, scope: !15867, inlinedAt: !16787)
!16789 = !DILocation(line: 777, column: 1, scope: !16747)
!16790 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2510, file: !2510, line: 79, type: !15960, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16791)
!16791 = !{!16792}
!16792 = !DILocalVariable(name: "thread", arg: 1, scope: !16790, file: !2510, line: 79, type: !2403)
!16793 = !DILocation(line: 0, scope: !16790)
!16794 = !DILocation(line: 81, column: 23, scope: !16790)
!16795 = !DILocation(line: 81, column: 36, scope: !16790)
!16796 = !DILocation(line: 81, column: 53, scope: !16790)
!16797 = !DILocation(line: 81, column: 2, scope: !16790)
!16798 = distinct !DISubprogram(name: "pend_locked", scope: !2510, file: !2510, line: 760, type: !16748, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16799)
!16799 = !{!16800, !16801, !16802}
!16800 = !DILocalVariable(name: "thread", arg: 1, scope: !16798, file: !2510, line: 760, type: !2403)
!16801 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16798, file: !2510, line: 760, type: !2434)
!16802 = !DILocalVariable(name: "timeout", arg: 3, scope: !16798, file: !2510, line: 761, type: !16750)
!16803 = !DILocation(line: 0, scope: !16798)
!16804 = !DILocation(line: 766, column: 2, scope: !16798)
!16805 = !DILocation(line: 767, column: 2, scope: !16798)
!16806 = !DILocation(line: 768, column: 1, scope: !16798)
!16807 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2510, file: !2510, line: 740, type: !16808, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16810)
!16808 = !DISubroutineType(types: !16809)
!16809 = !{null, !2403, !2434}
!16810 = !{!16811, !16812}
!16811 = !DILocalVariable(name: "thread", arg: 1, scope: !16807, file: !2510, line: 740, type: !2403)
!16812 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16807, file: !2510, line: 740, type: !2434)
!16813 = !DILocation(line: 0, scope: !16807)
!16814 = !DILocation(line: 742, column: 2, scope: !16807)
!16815 = !DILocation(line: 743, column: 2, scope: !16807)
!16816 = !DILocation(line: 747, column: 13, scope: !16817)
!16817 = distinct !DILexicalBlock(scope: !16807, file: !2510, line: 747, column: 6)
!16818 = !DILocation(line: 747, column: 6, scope: !16807)
!16819 = !DILocation(line: 748, column: 16, scope: !16820)
!16820 = distinct !DILexicalBlock(scope: !16817, file: !2510, line: 747, column: 22)
!16821 = !DILocation(line: 748, column: 26, scope: !16820)
!16822 = !DILocation(line: 749, column: 28, scope: !16820)
!16823 = !DILocation(line: 0, scope: !16042, inlinedAt: !16824)
!16824 = distinct !DILocation(line: 749, column: 3, scope: !16820)
!16825 = !DILocation(line: 186, column: 2, scope: !16052, inlinedAt: !16824)
!16826 = !DILocation(line: 186, column: 2, scope: !16053, inlinedAt: !16824)
!16827 = !DILocation(line: 186, column: 2, scope: !16056, inlinedAt: !16824)
!16828 = !DILocation(line: 188, column: 2, scope: !16058, inlinedAt: !16824)
!16829 = !DILocation(line: 188, column: 2, scope: !16060, inlinedAt: !16824)
!16830 = !DILocation(line: 0, scope: !16058, inlinedAt: !16824)
!16831 = !DILocation(line: 189, column: 7, scope: !16063, inlinedAt: !16824)
!16832 = !DILocation(line: 189, column: 35, scope: !16063, inlinedAt: !16824)
!16833 = !DILocation(line: 189, column: 7, scope: !16064, inlinedAt: !16824)
!16834 = !DILocation(line: 191, column: 21, scope: !16068, inlinedAt: !16824)
!16835 = !DILocation(line: 190, column: 4, scope: !16068, inlinedAt: !16824)
!16836 = !DILocation(line: 192, column: 4, scope: !16068, inlinedAt: !16824)
!16837 = distinct !{!16837, !16828, !16838}
!16838 = !DILocation(line: 194, column: 2, scope: !16058, inlinedAt: !16824)
!16839 = !DILocation(line: 196, column: 37, scope: !16042, inlinedAt: !16824)
!16840 = !DILocation(line: 196, column: 2, scope: !16042, inlinedAt: !16824)
!16841 = !DILocation(line: 197, column: 1, scope: !16042, inlinedAt: !16824)
!16842 = !DILocation(line: 751, column: 1, scope: !16807)
!16843 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2510, file: !2510, line: 753, type: !16844, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16846)
!16844 = !DISubroutineType(types: !16845)
!16845 = !{null, !2403, !16750}
!16846 = !{!16847, !16848}
!16847 = !DILocalVariable(name: "thread", arg: 1, scope: !16843, file: !2510, line: 753, type: !2403)
!16848 = !DILocalVariable(name: "timeout", arg: 2, scope: !16843, file: !2510, line: 753, type: !16750)
!16849 = !DILocation(line: 0, scope: !16843)
!16850 = !DILocation(line: 755, column: 7, scope: !16851)
!16851 = distinct !DILexicalBlock(scope: !16843, file: !2510, line: 755, column: 6)
!16852 = !DILocation(line: 755, column: 6, scope: !16843)
!16853 = !DILocation(line: 756, column: 3, scope: !16854)
!16854 = distinct !DILexicalBlock(scope: !16851, file: !2510, line: 755, column: 41)
!16855 = !DILocation(line: 757, column: 2, scope: !16854)
!16856 = !DILocation(line: 758, column: 1, scope: !16843)
!16857 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14603, file: !14603, line: 47, type: !16844, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16858)
!16858 = !{!16859, !16860}
!16859 = !DILocalVariable(name: "thread", arg: 1, scope: !16857, file: !14603, line: 47, type: !2403)
!16860 = !DILocalVariable(name: "ticks", arg: 2, scope: !16857, file: !14603, line: 47, type: !16750)
!16861 = !DILocation(line: 0, scope: !16857)
!16862 = !DILocation(line: 49, column: 30, scope: !16857)
!16863 = !DILocation(line: 49, column: 2, scope: !16857)
!16864 = !DILocation(line: 50, column: 1, scope: !16857)
!16865 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2510, file: !2510, line: 795, type: !2460, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16866)
!16866 = !{!16867, !16868, !16869, !16871, !16872}
!16867 = !DILocalVariable(name: "timeout", arg: 1, scope: !16865, file: !2510, line: 795, type: !2462)
!16868 = !DILocalVariable(name: "thread", scope: !16865, file: !2510, line: 797, type: !2403)
!16869 = !DILocalVariable(name: "__i", scope: !16870, file: !2510, line: 800, type: !15811)
!16870 = distinct !DILexicalBlock(scope: !16865, file: !2510, line: 800, column: 2)
!16871 = !DILocalVariable(name: "__key", scope: !16870, file: !2510, line: 800, type: !15811)
!16872 = !DILocalVariable(name: "killed", scope: !16873, file: !2510, line: 801, type: !492)
!16873 = distinct !DILexicalBlock(scope: !16874, file: !2510, line: 800, column: 26)
!16874 = distinct !DILexicalBlock(scope: !16870, file: !2510, line: 800, column: 2)
!16875 = !DILocation(line: 0, scope: !16865)
!16876 = !DILocation(line: 797, column: 28, scope: !16865)
!16877 = !DILocation(line: 0, scope: !16870)
!16878 = !DILocation(line: 0, scope: !15819, inlinedAt: !16879)
!16879 = distinct !DILocation(line: 800, column: 2, scope: !16870)
!16880 = !DILocation(line: 55, column: 2, scope: !15828, inlinedAt: !16881)
!16881 = distinct !DILocation(line: 145, column: 10, scope: !15819, inlinedAt: !16879)
!16882 = !DILocation(line: 0, scope: !15828, inlinedAt: !16881)
!16883 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !16879)
!16884 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !16879)
!16885 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !16879)
!16886 = !DILocation(line: 160, column: 2, scope: !15819, inlinedAt: !16879)
!16887 = !DILocation(line: 801, column: 27, scope: !16873)
!16888 = !DILocation(line: 801, column: 32, scope: !16873)
!16889 = !DILocation(line: 801, column: 61, scope: !16873)
!16890 = !DILocation(line: 0, scope: !16873)
!16891 = !DILocation(line: 804, column: 7, scope: !16873)
!16892 = !DILocation(line: 805, column: 21, scope: !16893)
!16893 = distinct !DILexicalBlock(scope: !16894, file: !2510, line: 805, column: 8)
!16894 = distinct !DILexicalBlock(scope: !16895, file: !2510, line: 804, column: 16)
!16895 = distinct !DILexicalBlock(scope: !16873, file: !2510, line: 804, column: 7)
!16896 = !DILocation(line: 805, column: 31, scope: !16893)
!16897 = !DILocation(line: 805, column: 8, scope: !16894)
!16898 = !DILocation(line: 806, column: 5, scope: !16899)
!16899 = distinct !DILexicalBlock(scope: !16893, file: !2510, line: 805, column: 40)
!16900 = !DILocation(line: 807, column: 4, scope: !16899)
!16901 = !DILocation(line: 808, column: 4, scope: !16894)
!16902 = !DILocation(line: 809, column: 4, scope: !16894)
!16903 = !DILocation(line: 810, column: 4, scope: !16894)
!16904 = !DILocation(line: 811, column: 3, scope: !16894)
!16905 = !DILocation(line: 0, scope: !15853, inlinedAt: !16906)
!16906 = distinct !DILocation(line: 800, column: 2, scope: !16874)
!16907 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !16906)
!16908 = !DILocation(line: 194, column: 2, scope: !15862, inlinedAt: !16906)
!16909 = !DILocation(line: 194, column: 2, scope: !15865, inlinedAt: !16906)
!16910 = !DILocation(line: 0, scope: !15867, inlinedAt: !16911)
!16911 = distinct !DILocation(line: 215, column: 2, scope: !15853, inlinedAt: !16906)
!16912 = !DILocation(line: 95, column: 2, scope: !15867, inlinedAt: !16911)
!16913 = !DILocation(line: 813, column: 1, scope: !16865)
!16914 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2510, file: !2510, line: 779, type: !15777, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16915)
!16915 = !{!16916}
!16916 = !DILocalVariable(name: "thread", arg: 1, scope: !16914, file: !2510, line: 779, type: !2403)
!16917 = !DILocation(line: 0, scope: !16914)
!16918 = !DILocation(line: 781, column: 21, scope: !16914)
!16919 = !DILocation(line: 781, column: 2, scope: !16914)
!16920 = !DILocation(line: 782, column: 2, scope: !16914)
!16921 = !DILocation(line: 783, column: 15, scope: !16914)
!16922 = !DILocation(line: 783, column: 25, scope: !16914)
!16923 = !DILocation(line: 784, column: 1, scope: !16914)
!16924 = distinct !DISubprogram(name: "pended_on_thread", scope: !2510, file: !2510, line: 724, type: !16925, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16927)
!16925 = !DISubroutineType(types: !16926)
!16926 = !{!2434, !2403}
!16927 = !{!16928}
!16928 = !DILocalVariable(name: "thread", arg: 1, scope: !16924, file: !2510, line: 724, type: !2403)
!16929 = !DILocation(line: 0, scope: !16924)
!16930 = !DILocation(line: 726, column: 2, scope: !16931)
!16931 = distinct !DILexicalBlock(scope: !16932, file: !2510, line: 726, column: 2)
!16932 = distinct !DILexicalBlock(scope: !16924, file: !2510, line: 726, column: 2)
!16933 = !DILocation(line: 726, column: 2, scope: !16932)
!16934 = !DILocation(line: 726, column: 2, scope: !16935)
!16935 = distinct !DILexicalBlock(scope: !16931, file: !2510, line: 726, column: 2)
!16936 = !DILocation(line: 728, column: 2, scope: !16924)
!16937 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !14174, file: !14174, line: 165, type: !15777, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16938)
!16938 = !{!16939}
!16939 = !DILocalVariable(name: "thread", arg: 1, scope: !16937, file: !14174, line: 165, type: !2403)
!16940 = !DILocation(line: 0, scope: !16937)
!16941 = !DILocation(line: 167, column: 15, scope: !16937)
!16942 = !DILocation(line: 167, column: 28, scope: !16937)
!16943 = !DILocation(line: 168, column: 1, scope: !16937)
!16944 = distinct !DISubprogram(name: "unready_thread", scope: !2510, file: !2510, line: 731, type: !15777, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16945)
!16945 = !{!16946}
!16946 = !DILocalVariable(name: "thread", arg: 1, scope: !16944, file: !2510, line: 731, type: !2403)
!16947 = !DILocation(line: 0, scope: !16944)
!16948 = !DILocation(line: 733, column: 6, scope: !16949)
!16949 = distinct !DILexicalBlock(scope: !16944, file: !2510, line: 733, column: 6)
!16950 = !DILocation(line: 733, column: 6, scope: !16944)
!16951 = !DILocation(line: 0, scope: !16011, inlinedAt: !16952)
!16952 = distinct !DILocation(line: 734, column: 3, scope: !16953)
!16953 = distinct !DILexicalBlock(scope: !16949, file: !2510, line: 733, column: 34)
!16954 = !DILocation(line: 266, column: 15, scope: !16011, inlinedAt: !16952)
!16955 = !DILocation(line: 266, column: 28, scope: !16011, inlinedAt: !16952)
!16956 = !DILocation(line: 0, scope: !16019, inlinedAt: !16957)
!16957 = distinct !DILocation(line: 268, column: 3, scope: !16023, inlinedAt: !16952)
!16958 = !DILocation(line: 234, column: 2, scope: !16019, inlinedAt: !16957)
!16959 = !DILocation(line: 735, column: 2, scope: !16953)
!16960 = !DILocation(line: 736, column: 25, scope: !16944)
!16961 = !DILocation(line: 736, column: 22, scope: !16944)
!16962 = !DILocation(line: 736, column: 2, scope: !16944)
!16963 = !DILocation(line: 737, column: 1, scope: !16944)
!16964 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !14174, file: !14174, line: 160, type: !15777, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16965)
!16965 = !{!16966}
!16966 = !DILocalVariable(name: "thread", arg: 1, scope: !16964, file: !14174, line: 160, type: !2403)
!16967 = !DILocation(line: 0, scope: !16964)
!16968 = !DILocation(line: 162, column: 15, scope: !16964)
!16969 = !DILocation(line: 162, column: 28, scope: !16964)
!16970 = !DILocation(line: 163, column: 1, scope: !16964)
!16971 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2510, file: !2510, line: 786, type: !15777, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !16972)
!16972 = !{!16973, !16974, !16976}
!16973 = !DILocalVariable(name: "thread", arg: 1, scope: !16971, file: !2510, line: 786, type: !2403)
!16974 = !DILocalVariable(name: "__i", scope: !16975, file: !2510, line: 788, type: !15811)
!16975 = distinct !DILexicalBlock(scope: !16971, file: !2510, line: 788, column: 2)
!16976 = !DILocalVariable(name: "__key", scope: !16975, file: !2510, line: 788, type: !15811)
!16977 = !DILocation(line: 0, scope: !16971)
!16978 = !DILocation(line: 0, scope: !16975)
!16979 = !DILocation(line: 0, scope: !15819, inlinedAt: !16980)
!16980 = distinct !DILocation(line: 788, column: 2, scope: !16975)
!16981 = !DILocation(line: 55, column: 2, scope: !15828, inlinedAt: !16982)
!16982 = distinct !DILocation(line: 145, column: 10, scope: !15819, inlinedAt: !16980)
!16983 = !DILocation(line: 0, scope: !15828, inlinedAt: !16982)
!16984 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !16980)
!16985 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !16980)
!16986 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !16980)
!16987 = !DILocation(line: 160, column: 2, scope: !15819, inlinedAt: !16980)
!16988 = !DILocation(line: 789, column: 3, scope: !16989)
!16989 = distinct !DILexicalBlock(scope: !16990, file: !2510, line: 788, column: 26)
!16990 = distinct !DILexicalBlock(scope: !16975, file: !2510, line: 788, column: 2)
!16991 = !DILocation(line: 0, scope: !15853, inlinedAt: !16992)
!16992 = distinct !DILocation(line: 788, column: 2, scope: !16990)
!16993 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !16992)
!16994 = !DILocation(line: 194, column: 2, scope: !15862, inlinedAt: !16992)
!16995 = !DILocation(line: 194, column: 2, scope: !15865, inlinedAt: !16992)
!16996 = !DILocation(line: 0, scope: !15867, inlinedAt: !16997)
!16997 = distinct !DILocation(line: 215, column: 2, scope: !15853, inlinedAt: !16992)
!16998 = !DILocation(line: 95, column: 2, scope: !15867, inlinedAt: !16997)
!16999 = !DILocation(line: 791, column: 1, scope: !16971)
!17000 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2510, file: !2510, line: 816, type: !17001, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17003)
!17001 = !DISubroutineType(types: !17002)
!17002 = !{!105, !113, !2434, !16750}
!17003 = !{!17004, !17005, !17006, !17007, !17008, !17010}
!17004 = !DILocalVariable(name: "key", arg: 1, scope: !17000, file: !2510, line: 816, type: !113)
!17005 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17000, file: !2510, line: 816, type: !2434)
!17006 = !DILocalVariable(name: "timeout", arg: 3, scope: !17000, file: !2510, line: 816, type: !16750)
!17007 = !DILocalVariable(name: "ret", scope: !17000, file: !2510, line: 828, type: !105)
!17008 = !DILocalVariable(name: "__i", scope: !17009, file: !2510, line: 829, type: !15811)
!17009 = distinct !DILexicalBlock(scope: !17000, file: !2510, line: 829, column: 2)
!17010 = !DILocalVariable(name: "__key", scope: !17009, file: !2510, line: 829, type: !15811)
!17011 = !DILocation(line: 0, scope: !17000)
!17012 = !DILocation(line: 823, column: 14, scope: !17000)
!17013 = !DILocation(line: 823, column: 2, scope: !17000)
!17014 = !DILocation(line: 826, column: 20, scope: !17000)
!17015 = !DILocation(line: 826, column: 18, scope: !17000)
!17016 = !DILocation(line: 828, column: 12, scope: !17000)
!17017 = !DILocation(line: 0, scope: !17009)
!17018 = !DILocation(line: 0, scope: !15819, inlinedAt: !17019)
!17019 = distinct !DILocation(line: 829, column: 2, scope: !17009)
!17020 = !DILocation(line: 55, column: 2, scope: !15828, inlinedAt: !17021)
!17021 = distinct !DILocation(line: 145, column: 10, scope: !15819, inlinedAt: !17019)
!17022 = !DILocation(line: 0, scope: !15828, inlinedAt: !17021)
!17023 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !17019)
!17024 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !17019)
!17025 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !17019)
!17026 = !DILocation(line: 160, column: 2, scope: !15819, inlinedAt: !17019)
!17027 = !DILocation(line: 830, column: 7, scope: !17028)
!17028 = distinct !DILexicalBlock(scope: !17029, file: !2510, line: 830, column: 7)
!17029 = distinct !DILexicalBlock(scope: !17030, file: !2510, line: 829, column: 26)
!17030 = distinct !DILexicalBlock(scope: !17009, file: !2510, line: 829, column: 2)
!17031 = !DILocation(line: 830, column: 26, scope: !17028)
!17032 = !DILocation(line: 830, column: 23, scope: !17028)
!17033 = !DILocation(line: 830, column: 7, scope: !17029)
!17034 = !DILocation(line: 831, column: 20, scope: !17035)
!17035 = distinct !DILexicalBlock(scope: !17028, file: !2510, line: 830, column: 36)
!17036 = !DILocation(line: 832, column: 3, scope: !17035)
!17037 = !DILocation(line: 0, scope: !15853, inlinedAt: !17038)
!17038 = distinct !DILocation(line: 829, column: 2, scope: !17030)
!17039 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !17038)
!17040 = !DILocation(line: 194, column: 2, scope: !15862, inlinedAt: !17038)
!17041 = !DILocation(line: 194, column: 2, scope: !15865, inlinedAt: !17038)
!17042 = !DILocation(line: 0, scope: !15867, inlinedAt: !17043)
!17043 = distinct !DILocation(line: 215, column: 2, scope: !15853, inlinedAt: !17038)
!17044 = !DILocation(line: 95, column: 2, scope: !15867, inlinedAt: !17043)
!17045 = !DILocation(line: 834, column: 2, scope: !17000)
!17046 = distinct !DISubprogram(name: "z_pend_curr", scope: !2510, file: !2510, line: 840, type: !17047, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17049)
!17047 = !DISubroutineType(types: !17048)
!17048 = !{!105, !15822, !15811, !2434, !16750}
!17049 = !{!17050, !17051, !17052, !17053}
!17050 = !DILocalVariable(name: "lock", arg: 1, scope: !17046, file: !2510, line: 840, type: !15822)
!17051 = !DILocalVariable(name: "key", arg: 2, scope: !17046, file: !2510, line: 840, type: !15811)
!17052 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17046, file: !2510, line: 841, type: !2434)
!17053 = !DILocalVariable(name: "timeout", arg: 4, scope: !17046, file: !2510, line: 841, type: !16750)
!17054 = !DILocation(line: 0, scope: !17046)
!17055 = !DILocation(line: 844, column: 20, scope: !17046)
!17056 = !DILocation(line: 844, column: 18, scope: !17046)
!17057 = !DILocation(line: 846, column: 2, scope: !17058)
!17058 = distinct !DILexicalBlock(scope: !17059, file: !2510, line: 846, column: 2)
!17059 = distinct !DILexicalBlock(scope: !17046, file: !2510, line: 846, column: 2)
!17060 = !DILocation(line: 846, column: 2, scope: !17059)
!17061 = !DILocation(line: 846, column: 2, scope: !17062)
!17062 = distinct !DILexicalBlock(scope: !17058, file: !2510, line: 846, column: 2)
!17063 = !DILocation(line: 0, scope: !15819, inlinedAt: !17064)
!17064 = distinct !DILocation(line: 856, column: 9, scope: !17046)
!17065 = !DILocation(line: 55, column: 2, scope: !15828, inlinedAt: !17066)
!17066 = distinct !DILocation(line: 145, column: 10, scope: !15819, inlinedAt: !17064)
!17067 = !DILocation(line: 0, scope: !15828, inlinedAt: !17066)
!17068 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !17064)
!17069 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !17064)
!17070 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !17064)
!17071 = !DILocation(line: 160, column: 2, scope: !15819, inlinedAt: !17064)
!17072 = !DILocation(line: 857, column: 14, scope: !17046)
!17073 = !DILocation(line: 857, column: 2, scope: !17046)
!17074 = !DILocation(line: 0, scope: !16549, inlinedAt: !17075)
!17075 = distinct !DILocation(line: 858, column: 2, scope: !17046)
!17076 = !DILocation(line: 225, column: 2, scope: !16556, inlinedAt: !17075)
!17077 = !DILocation(line: 225, column: 2, scope: !16557, inlinedAt: !17075)
!17078 = !DILocation(line: 225, column: 2, scope: !16560, inlinedAt: !17075)
!17079 = !DILocation(line: 0, scope: !16540, inlinedAt: !17080)
!17080 = distinct !DILocation(line: 859, column: 9, scope: !17046)
!17081 = !DILocation(line: 0, scope: !16549, inlinedAt: !17082)
!17082 = distinct !DILocation(line: 195, column: 2, scope: !16540, inlinedAt: !17080)
!17083 = !DILocation(line: 225, column: 2, scope: !16556, inlinedAt: !17082)
!17084 = !DILocation(line: 225, column: 2, scope: !16557, inlinedAt: !17082)
!17085 = !DILocation(line: 225, column: 2, scope: !16560, inlinedAt: !17082)
!17086 = !DILocation(line: 196, column: 9, scope: !16540, inlinedAt: !17080)
!17087 = !DILocation(line: 859, column: 2, scope: !17046)
!17088 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2510, file: !2510, line: 862, type: !17089, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17091)
!17089 = !DISubroutineType(types: !17090)
!17090 = !{!2403, !2434}
!17091 = !{!17092, !17093, !17094, !17096}
!17092 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17088, file: !2510, line: 862, type: !2434)
!17093 = !DILocalVariable(name: "thread", scope: !17088, file: !2510, line: 864, type: !2403)
!17094 = !DILocalVariable(name: "__i", scope: !17095, file: !2510, line: 866, type: !15811)
!17095 = distinct !DILexicalBlock(scope: !17088, file: !2510, line: 866, column: 2)
!17096 = !DILocalVariable(name: "__key", scope: !17095, file: !2510, line: 866, type: !15811)
!17097 = !DILocation(line: 0, scope: !17088)
!17098 = !DILocation(line: 0, scope: !17095)
!17099 = !DILocation(line: 0, scope: !15819, inlinedAt: !17100)
!17100 = distinct !DILocation(line: 866, column: 2, scope: !17095)
!17101 = !DILocation(line: 55, column: 2, scope: !15828, inlinedAt: !17102)
!17102 = distinct !DILocation(line: 145, column: 10, scope: !15819, inlinedAt: !17100)
!17103 = !DILocation(line: 0, scope: !15828, inlinedAt: !17102)
!17104 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !17100)
!17105 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !17100)
!17106 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !17100)
!17107 = !DILocation(line: 160, column: 2, scope: !15819, inlinedAt: !17100)
!17108 = !DILocation(line: 867, column: 12, scope: !17109)
!17109 = distinct !DILexicalBlock(scope: !17110, file: !2510, line: 866, column: 26)
!17110 = distinct !DILexicalBlock(scope: !17095, file: !2510, line: 866, column: 2)
!17111 = !DILocation(line: 869, column: 14, scope: !17112)
!17112 = distinct !DILexicalBlock(scope: !17109, file: !2510, line: 869, column: 7)
!17113 = !DILocation(line: 869, column: 7, scope: !17109)
!17114 = !DILocation(line: 870, column: 4, scope: !17115)
!17115 = distinct !DILexicalBlock(scope: !17112, file: !2510, line: 869, column: 23)
!17116 = !DILocation(line: 871, column: 3, scope: !17115)
!17117 = !DILocation(line: 0, scope: !15853, inlinedAt: !17118)
!17118 = distinct !DILocation(line: 866, column: 2, scope: !17110)
!17119 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !17118)
!17120 = !DILocation(line: 194, column: 2, scope: !15862, inlinedAt: !17118)
!17121 = !DILocation(line: 194, column: 2, scope: !15865, inlinedAt: !17118)
!17122 = !DILocation(line: 0, scope: !15867, inlinedAt: !17123)
!17123 = distinct !DILocation(line: 215, column: 2, scope: !15853, inlinedAt: !17118)
!17124 = !DILocation(line: 95, column: 2, scope: !15867, inlinedAt: !17123)
!17125 = !DILocation(line: 874, column: 2, scope: !17088)
!17126 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2510, file: !2510, line: 877, type: !17089, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17127)
!17127 = !{!17128, !17129, !17130, !17132}
!17128 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17126, file: !2510, line: 877, type: !2434)
!17129 = !DILocalVariable(name: "thread", scope: !17126, file: !2510, line: 879, type: !2403)
!17130 = !DILocalVariable(name: "__i", scope: !17131, file: !2510, line: 881, type: !15811)
!17131 = distinct !DILexicalBlock(scope: !17126, file: !2510, line: 881, column: 2)
!17132 = !DILocalVariable(name: "__key", scope: !17131, file: !2510, line: 881, type: !15811)
!17133 = !DILocation(line: 0, scope: !17126)
!17134 = !DILocation(line: 0, scope: !17131)
!17135 = !DILocation(line: 0, scope: !15819, inlinedAt: !17136)
!17136 = distinct !DILocation(line: 881, column: 2, scope: !17131)
!17137 = !DILocation(line: 55, column: 2, scope: !15828, inlinedAt: !17138)
!17138 = distinct !DILocation(line: 145, column: 10, scope: !15819, inlinedAt: !17136)
!17139 = !DILocation(line: 0, scope: !15828, inlinedAt: !17138)
!17140 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !17136)
!17141 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !17136)
!17142 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !17136)
!17143 = !DILocation(line: 160, column: 2, scope: !15819, inlinedAt: !17136)
!17144 = !DILocation(line: 882, column: 12, scope: !17145)
!17145 = distinct !DILexicalBlock(scope: !17146, file: !2510, line: 881, column: 26)
!17146 = distinct !DILexicalBlock(scope: !17131, file: !2510, line: 881, column: 2)
!17147 = !DILocation(line: 884, column: 14, scope: !17148)
!17148 = distinct !DILexicalBlock(scope: !17145, file: !2510, line: 884, column: 7)
!17149 = !DILocation(line: 884, column: 7, scope: !17145)
!17150 = !DILocation(line: 885, column: 4, scope: !17151)
!17151 = distinct !DILexicalBlock(scope: !17148, file: !2510, line: 884, column: 23)
!17152 = !DILocation(line: 886, column: 10, scope: !17151)
!17153 = !DILocation(line: 887, column: 3, scope: !17151)
!17154 = !DILocation(line: 0, scope: !15853, inlinedAt: !17155)
!17155 = distinct !DILocation(line: 881, column: 2, scope: !17146)
!17156 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !17155)
!17157 = !DILocation(line: 194, column: 2, scope: !15862, inlinedAt: !17155)
!17158 = !DILocation(line: 194, column: 2, scope: !15865, inlinedAt: !17155)
!17159 = !DILocation(line: 0, scope: !15867, inlinedAt: !17160)
!17160 = distinct !DILocation(line: 215, column: 2, scope: !15853, inlinedAt: !17155)
!17161 = !DILocation(line: 95, column: 2, scope: !15867, inlinedAt: !17160)
!17162 = !DILocation(line: 890, column: 2, scope: !17126)
!17163 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2510, file: !2510, line: 893, type: !15777, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17164)
!17164 = !{!17165}
!17165 = !DILocalVariable(name: "thread", arg: 1, scope: !17163, file: !2510, line: 893, type: !2403)
!17166 = !DILocation(line: 0, scope: !17163)
!17167 = !DILocation(line: 0, scope: !16971, inlinedAt: !17168)
!17168 = distinct !DILocation(line: 895, column: 2, scope: !17163)
!17169 = !DILocation(line: 0, scope: !16975, inlinedAt: !17168)
!17170 = !DILocation(line: 0, scope: !15819, inlinedAt: !17171)
!17171 = distinct !DILocation(line: 788, column: 2, scope: !16975, inlinedAt: !17168)
!17172 = !DILocation(line: 55, column: 2, scope: !15828, inlinedAt: !17173)
!17173 = distinct !DILocation(line: 145, column: 10, scope: !15819, inlinedAt: !17171)
!17174 = !DILocation(line: 0, scope: !15828, inlinedAt: !17173)
!17175 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !17171)
!17176 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !17171)
!17177 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !17171)
!17178 = !DILocation(line: 160, column: 2, scope: !15819, inlinedAt: !17171)
!17179 = !DILocation(line: 789, column: 3, scope: !16989, inlinedAt: !17168)
!17180 = !DILocation(line: 0, scope: !15853, inlinedAt: !17181)
!17181 = distinct !DILocation(line: 788, column: 2, scope: !16990, inlinedAt: !17168)
!17182 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !17181)
!17183 = !DILocation(line: 194, column: 2, scope: !15862, inlinedAt: !17181)
!17184 = !DILocation(line: 194, column: 2, scope: !15865, inlinedAt: !17181)
!17185 = !DILocation(line: 0, scope: !15867, inlinedAt: !17186)
!17186 = distinct !DILocation(line: 215, column: 2, scope: !15853, inlinedAt: !17181)
!17187 = !DILocation(line: 95, column: 2, scope: !15867, inlinedAt: !17186)
!17188 = !DILocation(line: 896, column: 8, scope: !17163)
!17189 = !DILocation(line: 897, column: 1, scope: !17163)
!17190 = distinct !DISubprogram(name: "z_set_prio", scope: !2510, file: !2510, line: 902, type: !16195, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17191)
!17191 = !{!17192, !17193, !17194, !17195, !17197}
!17192 = !DILocalVariable(name: "thread", arg: 1, scope: !17190, file: !2510, line: 902, type: !2403)
!17193 = !DILocalVariable(name: "prio", arg: 2, scope: !17190, file: !2510, line: 902, type: !105)
!17194 = !DILocalVariable(name: "need_sched", scope: !17190, file: !2510, line: 904, type: !492)
!17195 = !DILocalVariable(name: "__i", scope: !17196, file: !2510, line: 906, type: !15811)
!17196 = distinct !DILexicalBlock(scope: !17190, file: !2510, line: 906, column: 2)
!17197 = !DILocalVariable(name: "__key", scope: !17196, file: !2510, line: 906, type: !15811)
!17198 = !DILocation(line: 0, scope: !17190)
!17199 = !DILocation(line: 0, scope: !17196)
!17200 = !DILocation(line: 0, scope: !15819, inlinedAt: !17201)
!17201 = distinct !DILocation(line: 906, column: 2, scope: !17196)
!17202 = !DILocation(line: 55, column: 2, scope: !15828, inlinedAt: !17203)
!17203 = distinct !DILocation(line: 145, column: 10, scope: !15819, inlinedAt: !17201)
!17204 = !DILocation(line: 0, scope: !15828, inlinedAt: !17203)
!17205 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !17201)
!17206 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !17201)
!17207 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !17201)
!17208 = !DILocation(line: 160, column: 2, scope: !15819, inlinedAt: !17201)
!17209 = !DILocation(line: 907, column: 16, scope: !17210)
!17210 = distinct !DILexicalBlock(scope: !17211, file: !2510, line: 906, column: 26)
!17211 = distinct !DILexicalBlock(scope: !17196, file: !2510, line: 906, column: 2)
!17212 = !DILocation(line: 909, column: 7, scope: !17210)
!17213 = !DILocation(line: 0, scope: !16011, inlinedAt: !17214)
!17214 = distinct !DILocation(line: 912, column: 5, scope: !17215)
!17215 = distinct !DILexicalBlock(scope: !17216, file: !2510, line: 911, column: 63)
!17216 = distinct !DILexicalBlock(scope: !17217, file: !2510, line: 911, column: 8)
!17217 = distinct !DILexicalBlock(scope: !17218, file: !2510, line: 909, column: 19)
!17218 = distinct !DILexicalBlock(scope: !17210, file: !2510, line: 909, column: 7)
!17219 = !DILocation(line: 266, column: 28, scope: !16011, inlinedAt: !17214)
!17220 = !DILocation(line: 0, scope: !16019, inlinedAt: !17221)
!17221 = distinct !DILocation(line: 268, column: 3, scope: !16023, inlinedAt: !17214)
!17222 = !DILocation(line: 234, column: 2, scope: !16019, inlinedAt: !17221)
!17223 = !DILocation(line: 913, column: 23, scope: !17215)
!17224 = !DILocation(line: 0, scope: !16028, inlinedAt: !17225)
!17225 = distinct !DILocation(line: 914, column: 5, scope: !17215)
!17226 = !DILocation(line: 252, column: 28, scope: !16028, inlinedAt: !17225)
!17227 = !DILocation(line: 0, scope: !16035, inlinedAt: !17228)
!17228 = distinct !DILocation(line: 254, column: 3, scope: !16039, inlinedAt: !17225)
!17229 = !DILocation(line: 0, scope: !16042, inlinedAt: !17230)
!17230 = distinct !DILocation(line: 229, column: 2, scope: !16035, inlinedAt: !17228)
!17231 = !DILocation(line: 186, column: 2, scope: !16052, inlinedAt: !17230)
!17232 = !DILocation(line: 186, column: 2, scope: !16053, inlinedAt: !17230)
!17233 = !DILocation(line: 186, column: 2, scope: !16056, inlinedAt: !17230)
!17234 = !DILocation(line: 188, column: 2, scope: !16058, inlinedAt: !17230)
!17235 = !DILocation(line: 188, column: 2, scope: !16060, inlinedAt: !17230)
!17236 = !DILocation(line: 0, scope: !16058, inlinedAt: !17230)
!17237 = !DILocation(line: 189, column: 7, scope: !16063, inlinedAt: !17230)
!17238 = !DILocation(line: 189, column: 35, scope: !16063, inlinedAt: !17230)
!17239 = !DILocation(line: 189, column: 7, scope: !16064, inlinedAt: !17230)
!17240 = !DILocation(line: 190, column: 4, scope: !16068, inlinedAt: !17230)
!17241 = !DILocation(line: 192, column: 4, scope: !16068, inlinedAt: !17230)
!17242 = distinct !{!17242, !17234, !17243}
!17243 = !DILocation(line: 194, column: 2, scope: !16058, inlinedAt: !17230)
!17244 = !DILocation(line: 196, column: 2, scope: !16042, inlinedAt: !17230)
!17245 = !DILocation(line: 197, column: 1, scope: !16042, inlinedAt: !17230)
!17246 = !DILocation(line: 918, column: 4, scope: !17217)
!17247 = !DILocation(line: 919, column: 3, scope: !17217)
!17248 = !DILocation(line: 920, column: 22, scope: !17249)
!17249 = distinct !DILexicalBlock(scope: !17218, file: !2510, line: 919, column: 10)
!17250 = !DILocation(line: 0, scope: !15853, inlinedAt: !17251)
!17251 = distinct !DILocation(line: 906, column: 2, scope: !17211)
!17252 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !17251)
!17253 = !DILocation(line: 194, column: 2, scope: !15862, inlinedAt: !17251)
!17254 = !DILocation(line: 194, column: 2, scope: !15865, inlinedAt: !17251)
!17255 = !DILocation(line: 0, scope: !15867, inlinedAt: !17256)
!17256 = distinct !DILocation(line: 215, column: 2, scope: !15853, inlinedAt: !17251)
!17257 = !DILocation(line: 95, column: 2, scope: !15867, inlinedAt: !17256)
!17258 = !DILocation(line: 926, column: 2, scope: !17190)
!17259 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2510, file: !2510, line: 929, type: !17260, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17262)
!17260 = !DISubroutineType(types: !17261)
!17261 = !{null, !2403, !105}
!17262 = !{!17263, !17264, !17265}
!17263 = !DILocalVariable(name: "thread", arg: 1, scope: !17259, file: !2510, line: 929, type: !2403)
!17264 = !DILocalVariable(name: "prio", arg: 2, scope: !17259, file: !2510, line: 929, type: !105)
!17265 = !DILocalVariable(name: "need_sched", scope: !17259, file: !2510, line: 931, type: !492)
!17266 = !DILocation(line: 0, scope: !17259)
!17267 = !DILocation(line: 931, column: 20, scope: !17259)
!17268 = !DILocation(line: 935, column: 17, scope: !17269)
!17269 = distinct !DILexicalBlock(scope: !17259, file: !2510, line: 935, column: 6)
!17270 = !DILocation(line: 935, column: 20, scope: !17269)
!17271 = !DILocation(line: 935, column: 35, scope: !17269)
!17272 = !DILocation(line: 935, column: 48, scope: !17269)
!17273 = !DILocation(line: 935, column: 6, scope: !17259)
!17274 = !DILocation(line: 936, column: 3, scope: !17275)
!17275 = distinct !DILexicalBlock(scope: !17269, file: !2510, line: 935, column: 55)
!17276 = !DILocation(line: 937, column: 2, scope: !17275)
!17277 = !DILocation(line: 938, column: 1, scope: !17259)
!17278 = distinct !DISubprogram(name: "k_sched_lock", scope: !2510, file: !2510, line: 987, type: !266, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17279)
!17279 = !{!17280, !17282}
!17280 = !DILocalVariable(name: "__i", scope: !17281, file: !2510, line: 989, type: !15811)
!17281 = distinct !DILexicalBlock(scope: !17278, file: !2510, line: 989, column: 2)
!17282 = !DILocalVariable(name: "__key", scope: !17281, file: !2510, line: 989, type: !15811)
!17283 = !DILocation(line: 0, scope: !17281)
!17284 = !DILocation(line: 0, scope: !15819, inlinedAt: !17285)
!17285 = distinct !DILocation(line: 989, column: 2, scope: !17281)
!17286 = !DILocation(line: 55, column: 2, scope: !15828, inlinedAt: !17287)
!17287 = distinct !DILocation(line: 145, column: 10, scope: !15819, inlinedAt: !17285)
!17288 = !DILocation(line: 0, scope: !15828, inlinedAt: !17287)
!17289 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !17285)
!17290 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !17285)
!17291 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !17285)
!17292 = !DILocation(line: 160, column: 2, scope: !15819, inlinedAt: !17285)
!17293 = !DILocation(line: 992, column: 3, scope: !17294)
!17294 = distinct !DILexicalBlock(scope: !17295, file: !2510, line: 989, column: 26)
!17295 = distinct !DILexicalBlock(scope: !17281, file: !2510, line: 989, column: 2)
!17296 = !DILocation(line: 0, scope: !15853, inlinedAt: !17297)
!17297 = distinct !DILocation(line: 989, column: 2, scope: !17295)
!17298 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !17297)
!17299 = !DILocation(line: 194, column: 2, scope: !15862, inlinedAt: !17297)
!17300 = !DILocation(line: 194, column: 2, scope: !15865, inlinedAt: !17297)
!17301 = !DILocation(line: 0, scope: !15867, inlinedAt: !17302)
!17302 = distinct !DILocation(line: 215, column: 2, scope: !15853, inlinedAt: !17297)
!17303 = !DILocation(line: 95, column: 2, scope: !15867, inlinedAt: !17302)
!17304 = !DILocation(line: 994, column: 1, scope: !17278)
!17305 = distinct !DISubprogram(name: "z_sched_lock", scope: !14174, file: !14174, line: 251, type: !266, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !397)
!17306 = !DILocation(line: 1031, column: 3, scope: !16589, inlinedAt: !17307)
!17307 = distinct !DILocation(line: 48, column: 10, scope: !16593, inlinedAt: !17308)
!17308 = distinct !DILocation(line: 253, column: 2, scope: !17309)
!17309 = distinct !DILexicalBlock(scope: !17310, file: !14174, line: 253, column: 2)
!17310 = distinct !DILexicalBlock(scope: !17305, file: !14174, line: 253, column: 2)
!17311 = !DILocation(line: 0, scope: !16589, inlinedAt: !17307)
!17312 = !DILocation(line: 48, column: 9, scope: !16593, inlinedAt: !17308)
!17313 = !DILocation(line: 253, column: 2, scope: !17310)
!17314 = !DILocation(line: 253, column: 2, scope: !17315)
!17315 = distinct !DILexicalBlock(scope: !17309, file: !14174, line: 253, column: 2)
!17316 = !DILocation(line: 254, column: 2, scope: !17317)
!17317 = distinct !DILexicalBlock(scope: !17318, file: !14174, line: 254, column: 2)
!17318 = distinct !DILexicalBlock(scope: !17305, file: !14174, line: 254, column: 2)
!17319 = !DILocation(line: 254, column: 2, scope: !17318)
!17320 = !DILocation(line: 254, column: 2, scope: !17321)
!17321 = distinct !DILexicalBlock(scope: !17317, file: !14174, line: 254, column: 2)
!17322 = !DILocation(line: 256, column: 2, scope: !17305)
!17323 = !DILocation(line: 258, column: 2, scope: !17324)
!17324 = distinct !DILexicalBlock(scope: !17305, file: !14174, line: 258, column: 2)
!17325 = !{i64 2154285454}
!17326 = !DILocation(line: 259, column: 1, scope: !17305)
!17327 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2510, file: !2510, line: 996, type: !266, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17328)
!17328 = !{!17329, !17331}
!17329 = !DILocalVariable(name: "__i", scope: !17330, file: !2510, line: 998, type: !15811)
!17330 = distinct !DILexicalBlock(scope: !17327, file: !2510, line: 998, column: 2)
!17331 = !DILocalVariable(name: "__key", scope: !17330, file: !2510, line: 998, type: !15811)
!17332 = !DILocation(line: 0, scope: !17330)
!17333 = !DILocation(line: 0, scope: !15819, inlinedAt: !17334)
!17334 = distinct !DILocation(line: 998, column: 2, scope: !17330)
!17335 = !DILocation(line: 55, column: 2, scope: !15828, inlinedAt: !17336)
!17336 = distinct !DILocation(line: 145, column: 10, scope: !15819, inlinedAt: !17334)
!17337 = !DILocation(line: 0, scope: !15828, inlinedAt: !17336)
!17338 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !17334)
!17339 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !17334)
!17340 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !17334)
!17341 = !DILocation(line: 160, column: 2, scope: !15819, inlinedAt: !17334)
!17342 = !DILocation(line: 999, column: 3, scope: !17343)
!17343 = distinct !DILexicalBlock(scope: !17344, file: !2510, line: 999, column: 3)
!17344 = distinct !DILexicalBlock(scope: !17345, file: !2510, line: 999, column: 3)
!17345 = distinct !DILexicalBlock(scope: !17346, file: !2510, line: 998, column: 26)
!17346 = distinct !DILexicalBlock(scope: !17330, file: !2510, line: 998, column: 2)
!17347 = !DILocation(line: 999, column: 3, scope: !17344)
!17348 = !DILocation(line: 999, column: 3, scope: !17349)
!17349 = distinct !DILexicalBlock(scope: !17343, file: !2510, line: 999, column: 3)
!17350 = !DILocation(line: 1031, column: 3, scope: !16589, inlinedAt: !17351)
!17351 = distinct !DILocation(line: 48, column: 10, scope: !16593, inlinedAt: !17352)
!17352 = distinct !DILocation(line: 1000, column: 3, scope: !17353)
!17353 = distinct !DILexicalBlock(scope: !17354, file: !2510, line: 1000, column: 3)
!17354 = distinct !DILexicalBlock(scope: !17345, file: !2510, line: 1000, column: 3)
!17355 = !DILocation(line: 0, scope: !16589, inlinedAt: !17351)
!17356 = !DILocation(line: 48, column: 9, scope: !16593, inlinedAt: !17352)
!17357 = !DILocation(line: 1000, column: 3, scope: !17354)
!17358 = !DILocation(line: 1000, column: 3, scope: !17359)
!17359 = distinct !DILexicalBlock(scope: !17353, file: !2510, line: 1000, column: 3)
!17360 = !DILocation(line: 1002, column: 5, scope: !17345)
!17361 = !DILocation(line: 1002, column: 20, scope: !17345)
!17362 = !DILocation(line: 1002, column: 3, scope: !17345)
!17363 = !DILocation(line: 1003, column: 3, scope: !17345)
!17364 = !DILocation(line: 0, scope: !15853, inlinedAt: !17365)
!17365 = distinct !DILocation(line: 998, column: 2, scope: !17346)
!17366 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !17365)
!17367 = !DILocation(line: 194, column: 2, scope: !15862, inlinedAt: !17365)
!17368 = !DILocation(line: 194, column: 2, scope: !15865, inlinedAt: !17365)
!17369 = !DILocation(line: 0, scope: !15867, inlinedAt: !17370)
!17370 = distinct !DILocation(line: 215, column: 2, scope: !15853, inlinedAt: !17365)
!17371 = !DILocation(line: 95, column: 2, scope: !15867, inlinedAt: !17370)
!17372 = !DILocation(line: 1011, column: 2, scope: !17327)
!17373 = !DILocation(line: 1012, column: 1, scope: !17327)
!17374 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2510, file: !2510, line: 1014, type: !16168, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !397)
!17375 = !DILocation(line: 1028, column: 25, scope: !17374)
!17376 = !DILocation(line: 1028, column: 2, scope: !17374)
!17377 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2510, file: !2510, line: 1155, type: !17378, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17380)
!17378 = !DISubroutineType(types: !17379)
!17379 = !{!492, !2432, !2432}
!17380 = !{!17381, !17382, !17383, !17384, !17385}
!17381 = !DILocalVariable(name: "a", arg: 1, scope: !17377, file: !2510, line: 1155, type: !2432)
!17382 = !DILocalVariable(name: "b", arg: 2, scope: !17377, file: !2510, line: 1155, type: !2432)
!17383 = !DILocalVariable(name: "thread_a", scope: !17377, file: !2510, line: 1157, type: !2403)
!17384 = !DILocalVariable(name: "thread_b", scope: !17377, file: !2510, line: 1157, type: !2403)
!17385 = !DILocalVariable(name: "cmp", scope: !17377, file: !2510, line: 1158, type: !116)
!17386 = !DILocation(line: 0, scope: !17377)
!17387 = !DILocation(line: 1160, column: 13, scope: !17377)
!17388 = !DILocation(line: 1161, column: 13, scope: !17377)
!17389 = !DILocation(line: 1163, column: 8, scope: !17377)
!17390 = !DILocation(line: 1165, column: 10, scope: !17391)
!17391 = distinct !DILexicalBlock(scope: !17377, file: !2510, line: 1165, column: 6)
!17392 = !DILocation(line: 1165, column: 6, scope: !17377)
!17393 = !DILocation(line: 1167, column: 17, scope: !17394)
!17394 = distinct !DILexicalBlock(scope: !17391, file: !2510, line: 1167, column: 13)
!17395 = !DILocation(line: 1167, column: 13, scope: !17391)
!17396 = !DILocation(line: 1170, column: 25, scope: !17397)
!17397 = distinct !DILexicalBlock(scope: !17394, file: !2510, line: 1169, column: 9)
!17398 = !DILocation(line: 1170, column: 52, scope: !17397)
!17399 = !DILocation(line: 1170, column: 35, scope: !17397)
!17400 = !DILocation(line: 1170, column: 3, scope: !17397)
!17401 = !DILocation(line: 0, scope: !17391)
!17402 = !DILocation(line: 1173, column: 1, scope: !17377)
!17403 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2510, file: !2510, line: 1175, type: !17404, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17419)
!17404 = !DISubroutineType(types: !17405)
!17405 = !{null, !17406, !2403}
!17406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17407, size: 32)
!17407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !17408, line: 37, size: 128, elements: !17409)
!17408 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17409 = !{!17410, !17418}
!17410 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !17407, file: !17408, line: 38, baseType: !17411, size: 96)
!17411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !153, line: 83, size: 96, elements: !17412)
!17412 = !{!17413, !17414, !17417}
!17413 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !17411, file: !153, line: 84, baseType: !2432, size: 32)
!17414 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !17411, file: !153, line: 85, baseType: !17415, size: 32, offset: 32)
!17415 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !153, line: 81, baseType: !17416)
!17416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17378, size: 32)
!17417 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !17411, file: !153, line: 86, baseType: !105, size: 32, offset: 64)
!17418 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !17407, file: !17408, line: 39, baseType: !105, size: 32, offset: 96)
!17419 = !{!17420, !17421, !17422, !17423, !17432}
!17420 = !DILocalVariable(name: "pq", arg: 1, scope: !17403, file: !2510, line: 1175, type: !17406)
!17421 = !DILocalVariable(name: "thread", arg: 2, scope: !17403, file: !2510, line: 1175, type: !2403)
!17422 = !DILocalVariable(name: "t", scope: !17403, file: !2510, line: 1177, type: !2403)
!17423 = !DILocalVariable(name: "__f", scope: !17424, file: !2510, line: 1190, type: !17427)
!17424 = distinct !DILexicalBlock(scope: !17425, file: !2510, line: 1190, column: 3)
!17425 = distinct !DILexicalBlock(scope: !17426, file: !2510, line: 1189, column: 27)
!17426 = distinct !DILexicalBlock(scope: !17403, file: !2510, line: 1189, column: 6)
!17427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !153, line: 155, size: 96, elements: !17428)
!17428 = !{!17429, !17430, !17431}
!17429 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !17427, file: !153, line: 156, baseType: !2505, size: 32)
!17430 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !17427, file: !153, line: 157, baseType: !432, size: 32, offset: 32)
!17431 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !17427, file: !153, line: 158, baseType: !116, size: 32, offset: 64)
!17432 = !DILocalVariable(name: "n", scope: !17433, file: !2510, line: 1190, type: !2432)
!17433 = distinct !DILexicalBlock(scope: !17434, file: !2510, line: 1190, column: 3)
!17434 = distinct !DILexicalBlock(scope: !17424, file: !2510, line: 1190, column: 3)
!17435 = !DILocation(line: 0, scope: !17403)
!17436 = !DILocation(line: 1179, column: 2, scope: !17437)
!17437 = distinct !DILexicalBlock(scope: !17438, file: !2510, line: 1179, column: 2)
!17438 = distinct !DILexicalBlock(scope: !17403, file: !2510, line: 1179, column: 2)
!17439 = !DILocation(line: 1179, column: 2, scope: !17438)
!17440 = !DILocation(line: 1179, column: 2, scope: !17441)
!17441 = distinct !DILexicalBlock(scope: !17437, file: !2510, line: 1179, column: 2)
!17442 = !DILocation(line: 1181, column: 31, scope: !17403)
!17443 = !DILocation(line: 1181, column: 45, scope: !17403)
!17444 = !DILocation(line: 1181, column: 15, scope: !17403)
!17445 = !DILocation(line: 1181, column: 25, scope: !17403)
!17446 = !DILocation(line: 1189, column: 11, scope: !17426)
!17447 = !DILocation(line: 1189, column: 7, scope: !17426)
!17448 = !DILocation(line: 1189, column: 6, scope: !17403)
!17449 = !DILocation(line: 1190, column: 3, scope: !17424)
!17450 = !DILocation(line: 1190, column: 3, scope: !17433)
!17451 = !DILocation(line: 0, scope: !17433)
!17452 = !DILocation(line: 1190, column: 3, scope: !17434)
!17453 = !DILocation(line: 1193, column: 2, scope: !17425)
!17454 = !DILocation(line: 1191, column: 42, scope: !17455)
!17455 = distinct !DILexicalBlock(scope: !17434, file: !2510, line: 1190, column: 54)
!17456 = !DILocation(line: 1191, column: 12, scope: !17455)
!17457 = !DILocation(line: 1191, column: 22, scope: !17455)
!17458 = distinct !{!17458, !17449, !17459}
!17459 = !DILocation(line: 1192, column: 3, scope: !17424)
!17460 = !DILocation(line: 1195, column: 17, scope: !17403)
!17461 = !DILocation(line: 1195, column: 37, scope: !17403)
!17462 = !DILocation(line: 1195, column: 2, scope: !17403)
!17463 = !DILocation(line: 1196, column: 1, scope: !17403)
!17464 = !DISubprogram(name: "z_rb_foreach_next", scope: !153, file: !153, line: 176, type: !17465, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!17465 = !DISubroutineType(types: !17466)
!17466 = !{!2432, !17467, !17468}
!17467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17411, size: 32)
!17468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17427, size: 32)
!17469 = !DISubprogram(name: "rb_insert", scope: !153, file: !153, line: 105, type: !17470, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!17470 = !DISubroutineType(types: !17471)
!17471 = !{null, !17467, !2432}
!17472 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2510, file: !2510, line: 1198, type: !17404, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17473)
!17473 = !{!17474, !17475}
!17474 = !DILocalVariable(name: "pq", arg: 1, scope: !17472, file: !2510, line: 1198, type: !17406)
!17475 = !DILocalVariable(name: "thread", arg: 2, scope: !17472, file: !2510, line: 1198, type: !2403)
!17476 = !DILocation(line: 0, scope: !17472)
!17477 = !DILocation(line: 1200, column: 2, scope: !17478)
!17478 = distinct !DILexicalBlock(scope: !17479, file: !2510, line: 1200, column: 2)
!17479 = distinct !DILexicalBlock(scope: !17472, file: !2510, line: 1200, column: 2)
!17480 = !DILocation(line: 1200, column: 2, scope: !17479)
!17481 = !DILocation(line: 1200, column: 2, scope: !17482)
!17482 = distinct !DILexicalBlock(scope: !17478, file: !2510, line: 1200, column: 2)
!17483 = !DILocation(line: 1202, column: 17, scope: !17472)
!17484 = !DILocation(line: 1202, column: 37, scope: !17472)
!17485 = !DILocation(line: 1202, column: 2, scope: !17472)
!17486 = !DILocation(line: 1204, column: 16, scope: !17487)
!17487 = distinct !DILexicalBlock(scope: !17472, file: !2510, line: 1204, column: 6)
!17488 = !DILocation(line: 1204, column: 7, scope: !17487)
!17489 = !DILocation(line: 1204, column: 6, scope: !17472)
!17490 = !DILocation(line: 1205, column: 7, scope: !17491)
!17491 = distinct !DILexicalBlock(scope: !17487, file: !2510, line: 1204, column: 22)
!17492 = !DILocation(line: 1205, column: 22, scope: !17491)
!17493 = !DILocation(line: 1206, column: 2, scope: !17491)
!17494 = !DILocation(line: 1207, column: 1, scope: !17472)
!17495 = !DISubprogram(name: "rb_remove", scope: !153, file: !153, line: 110, type: !17470, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!17496 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2510, file: !2510, line: 1209, type: !17497, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17499)
!17497 = !DISubroutineType(types: !17498)
!17498 = !{!2403, !17406}
!17499 = !{!17500, !17501, !17502}
!17500 = !DILocalVariable(name: "pq", arg: 1, scope: !17496, file: !2510, line: 1209, type: !17406)
!17501 = !DILocalVariable(name: "thread", scope: !17496, file: !2510, line: 1211, type: !2403)
!17502 = !DILocalVariable(name: "n", scope: !17496, file: !2510, line: 1212, type: !2432)
!17503 = !DILocation(line: 0, scope: !17496)
!17504 = !DILocation(line: 1212, column: 37, scope: !17496)
!17505 = !DILocation(line: 1212, column: 21, scope: !17496)
!17506 = !DILocation(line: 1217, column: 2, scope: !17496)
!17507 = distinct !DISubprogram(name: "rb_get_min", scope: !153, file: !153, line: 115, type: !17508, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17510)
!17508 = !DISubroutineType(types: !17509)
!17509 = !{!2432, !17467}
!17510 = !{!17511}
!17511 = !DILocalVariable(name: "tree", arg: 1, scope: !17507, file: !153, line: 115, type: !17467)
!17512 = !DILocation(line: 0, scope: !17507)
!17513 = !DILocation(line: 117, column: 9, scope: !17507)
!17514 = !DILocation(line: 117, column: 2, scope: !17507)
!17515 = !DISubprogram(name: "z_rb_get_minmax", scope: !153, file: !153, line: 100, type: !17516, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!17516 = !DISubroutineType(types: !17517)
!17517 = !{!2432, !17467, !169}
!17518 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2510, file: !2510, line: 1246, type: !17519, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17529)
!17519 = !DISubroutineType(types: !17520)
!17520 = !{!2403, !17521}
!17521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17522, size: 32)
!17522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !17408, line: 53, size: 2080, elements: !17523)
!17523 = !{!17524, !17528}
!17524 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !17522, file: !17408, line: 54, baseType: !17525, size: 2048)
!17525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2439, size: 2048, elements: !17526)
!17526 = !{!17527}
!17527 = !DISubrange(count: 32)
!17528 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !17522, file: !17408, line: 55, baseType: !32, size: 32, offset: 2048)
!17529 = !{!17530, !17531, !17532, !17533}
!17530 = !DILocalVariable(name: "pq", arg: 1, scope: !17518, file: !2510, line: 1246, type: !17521)
!17531 = !DILocalVariable(name: "thread", scope: !17518, file: !2510, line: 1252, type: !2403)
!17532 = !DILocalVariable(name: "l", scope: !17518, file: !2510, line: 1253, type: !16045)
!17533 = !DILocalVariable(name: "n", scope: !17518, file: !2510, line: 1254, type: !2506)
!17534 = !DILocation(line: 0, scope: !17518)
!17535 = !DILocation(line: 1248, column: 11, scope: !17536)
!17536 = distinct !DILexicalBlock(scope: !17518, file: !2510, line: 1248, column: 6)
!17537 = !DILocation(line: 1248, column: 7, scope: !17536)
!17538 = !DILocation(line: 1248, column: 6, scope: !17518)
!17539 = !DILocation(line: 1253, column: 31, scope: !17518)
!17540 = !DILocation(line: 1253, column: 20, scope: !17518)
!17541 = !DILocation(line: 1254, column: 19, scope: !17518)
!17542 = !DILocation(line: 1260, column: 1, scope: !17518)
!17543 = distinct !DISubprogram(name: "z_unpend_all", scope: !2510, file: !2510, line: 1262, type: !17544, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17546)
!17544 = !DISubroutineType(types: !17545)
!17545 = !{!105, !2434}
!17546 = !{!17547, !17548, !17549}
!17547 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17543, file: !2510, line: 1262, type: !2434)
!17548 = !DILocalVariable(name: "need_sched", scope: !17543, file: !2510, line: 1264, type: !105)
!17549 = !DILocalVariable(name: "thread", scope: !17543, file: !2510, line: 1265, type: !2403)
!17550 = !DILocation(line: 0, scope: !17543)
!17551 = !DILocation(line: 1267, column: 19, scope: !17543)
!17552 = !DILocation(line: 1267, column: 41, scope: !17543)
!17553 = !DILocation(line: 1267, column: 2, scope: !17543)
!17554 = !DILocation(line: 1268, column: 3, scope: !17555)
!17555 = distinct !DILexicalBlock(scope: !17543, file: !2510, line: 1267, column: 50)
!17556 = !DILocation(line: 1269, column: 3, scope: !17555)
!17557 = distinct !{!17557, !17553, !17558}
!17558 = !DILocation(line: 1271, column: 2, scope: !17543)
!17559 = !DILocation(line: 1273, column: 2, scope: !17543)
!17560 = distinct !DISubprogram(name: "z_waitq_head", scope: !14535, file: !14535, line: 52, type: !17089, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17561)
!17561 = !{!17562}
!17562 = !DILocalVariable(name: "w", arg: 1, scope: !17560, file: !14535, line: 52, type: !2434)
!17563 = !DILocation(line: 0, scope: !17560)
!17564 = !DILocation(line: 54, column: 52, scope: !17560)
!17565 = !DILocation(line: 54, column: 28, scope: !17560)
!17566 = !DILocation(line: 54, column: 9, scope: !17560)
!17567 = !DILocation(line: 54, column: 2, scope: !17560)
!17568 = distinct !DISubprogram(name: "init_ready_q", scope: !2510, file: !2510, line: 1276, type: !17569, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17576)
!17569 = !DISubroutineType(types: !17570)
!17570 = !{null, !17571}
!17571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17572, size: 32)
!17572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !163, line: 83, size: 96, elements: !17573)
!17573 = !{!17574, !17575}
!17574 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !17572, file: !163, line: 86, baseType: !2403, size: 32)
!17575 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !17572, file: !163, line: 90, baseType: !2439, size: 64, offset: 32)
!17576 = !{!17577}
!17577 = !DILocalVariable(name: "rq", arg: 1, scope: !17568, file: !2510, line: 1276, type: !17571)
!17578 = !DILocation(line: 0, scope: !17568)
!17579 = !DILocation(line: 1289, column: 22, scope: !17568)
!17580 = !DILocation(line: 1289, column: 2, scope: !17568)
!17581 = !DILocation(line: 1291, column: 1, scope: !17568)
!17582 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !17583, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17585)
!17583 = !DISubroutineType(types: !17584)
!17584 = !{null, !16045}
!17585 = !{!17586}
!17586 = !DILocalVariable(name: "list", arg: 1, scope: !17582, file: !137, line: 197, type: !16045)
!17587 = !DILocation(line: 0, scope: !17582)
!17588 = !DILocation(line: 199, column: 8, scope: !17582)
!17589 = !DILocation(line: 199, column: 13, scope: !17582)
!17590 = !DILocation(line: 200, column: 8, scope: !17582)
!17591 = !DILocation(line: 200, column: 13, scope: !17582)
!17592 = !DILocation(line: 201, column: 1, scope: !17582)
!17593 = distinct !DISubprogram(name: "z_sched_init", scope: !2510, file: !2510, line: 1293, type: !266, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !397)
!17594 = !DILocation(line: 1302, column: 2, scope: !17593)
!17595 = !DILocation(line: 1306, column: 2, scope: !17593)
!17596 = !DILocation(line: 1309, column: 1, scope: !17593)
!17597 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2510, file: !2510, line: 1311, type: !17598, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17601)
!17598 = !DISubroutineType(types: !17599)
!17599 = !{!105, !17600}
!17600 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !2403)
!17601 = !{!17602}
!17602 = !DILocalVariable(name: "thread", arg: 1, scope: !17597, file: !2510, line: 1311, type: !17600)
!17603 = !DILocation(line: 0, scope: !17597)
!17604 = !DILocation(line: 1313, column: 22, scope: !17597)
!17605 = !DILocation(line: 1313, column: 9, scope: !17597)
!17606 = !DILocation(line: 1313, column: 2, scope: !17597)
!17607 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2510, file: !2510, line: 1325, type: !17608, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17610)
!17608 = !DISubroutineType(types: !17609)
!17609 = !{null, !17600, !105}
!17610 = !{!17611, !17612, !17613}
!17611 = !DILocalVariable(name: "thread", arg: 1, scope: !17607, file: !2510, line: 1325, type: !17600)
!17612 = !DILocalVariable(name: "prio", arg: 2, scope: !17607, file: !2510, line: 1325, type: !105)
!17613 = !DILocalVariable(name: "th", scope: !17607, file: !2510, line: 1334, type: !2403)
!17614 = !DILocation(line: 0, scope: !17607)
!17615 = !DILocation(line: 1331, column: 2, scope: !17616)
!17616 = distinct !DILexicalBlock(scope: !17617, file: !2510, line: 1331, column: 2)
!17617 = distinct !DILexicalBlock(scope: !17618, file: !2510, line: 1331, column: 2)
!17618 = distinct !DILexicalBlock(scope: !17607, file: !2510, line: 1331, column: 2)
!17619 = !DILocation(line: 1331, column: 2, scope: !17620)
!17620 = distinct !DILexicalBlock(scope: !17616, file: !2510, line: 1331, column: 2)
!17621 = !DILocation(line: 1031, column: 3, scope: !16589, inlinedAt: !17622)
!17622 = distinct !DILocation(line: 48, column: 10, scope: !16593, inlinedAt: !17623)
!17623 = distinct !DILocation(line: 1332, column: 2, scope: !17624)
!17624 = distinct !DILexicalBlock(scope: !17625, file: !2510, line: 1332, column: 2)
!17625 = distinct !DILexicalBlock(scope: !17607, file: !2510, line: 1332, column: 2)
!17626 = !DILocation(line: 0, scope: !16589, inlinedAt: !17622)
!17627 = !DILocation(line: 48, column: 9, scope: !16593, inlinedAt: !17623)
!17628 = !DILocation(line: 1332, column: 2, scope: !17625)
!17629 = !DILocation(line: 1332, column: 2, scope: !17630)
!17630 = distinct !DILexicalBlock(scope: !17624, file: !2510, line: 1332, column: 2)
!17631 = !DILocation(line: 1336, column: 2, scope: !17607)
!17632 = !DILocation(line: 1337, column: 1, scope: !17607)
!17633 = distinct !DISubprogram(name: "k_can_yield", scope: !2510, file: !2510, line: 1384, type: !8851, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !397)
!17634 = !DILocation(line: 1386, column: 11, scope: !17633)
!17635 = !DILocation(line: 1386, column: 29, scope: !17633)
!17636 = !DILocation(line: 1386, column: 32, scope: !17633)
!17637 = !DILocation(line: 1386, column: 46, scope: !17633)
!17638 = !DILocation(line: 1387, column: 28, scope: !17633)
!17639 = !DILocation(line: 1387, column: 4, scope: !17633)
!17640 = !DILocation(line: 1386, column: 2, scope: !17633)
!17641 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !122, file: !122, line: 989, type: !8851, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !397)
!17642 = !DILocation(line: 993, column: 10, scope: !17641)
!17643 = !DILocation(line: 993, column: 2, scope: !17641)
!17644 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2510, file: !2510, line: 1390, type: !266, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17645)
!17645 = !{!17646}
!17646 = !DILocalVariable(name: "key", scope: !17644, file: !2510, line: 1396, type: !15811)
!17647 = !DILocation(line: 1031, column: 3, scope: !16589, inlinedAt: !17648)
!17648 = distinct !DILocation(line: 48, column: 10, scope: !16593, inlinedAt: !17649)
!17649 = distinct !DILocation(line: 1392, column: 2, scope: !17650)
!17650 = distinct !DILexicalBlock(scope: !17651, file: !2510, line: 1392, column: 2)
!17651 = distinct !DILexicalBlock(scope: !17644, file: !2510, line: 1392, column: 2)
!17652 = !DILocation(line: 0, scope: !16589, inlinedAt: !17648)
!17653 = !DILocation(line: 48, column: 9, scope: !16593, inlinedAt: !17649)
!17654 = !DILocation(line: 1392, column: 2, scope: !17651)
!17655 = !DILocation(line: 1392, column: 2, scope: !17656)
!17656 = distinct !DILexicalBlock(scope: !17650, file: !2510, line: 1392, column: 2)
!17657 = !DILocation(line: 0, scope: !15819, inlinedAt: !17658)
!17658 = distinct !DILocation(line: 1396, column: 25, scope: !17644)
!17659 = !DILocation(line: 55, column: 2, scope: !15828, inlinedAt: !17660)
!17660 = distinct !DILocation(line: 145, column: 10, scope: !15819, inlinedAt: !17658)
!17661 = !DILocation(line: 0, scope: !15828, inlinedAt: !17660)
!17662 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !17658)
!17663 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !17658)
!17664 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !17658)
!17665 = !DILocation(line: 160, column: 2, scope: !15819, inlinedAt: !17658)
!17666 = !DILocation(line: 0, scope: !17644)
!17667 = !DILocation(line: 1400, column: 18, scope: !17668)
!17668 = distinct !DILexicalBlock(scope: !17669, file: !2510, line: 1399, column: 36)
!17669 = distinct !DILexicalBlock(scope: !17644, file: !2510, line: 1398, column: 6)
!17670 = !DILocation(line: 0, scope: !16011, inlinedAt: !17671)
!17671 = distinct !DILocation(line: 1400, column: 3, scope: !17668)
!17672 = !DILocation(line: 266, column: 15, scope: !16011, inlinedAt: !17671)
!17673 = !DILocation(line: 266, column: 28, scope: !16011, inlinedAt: !17671)
!17674 = !DILocation(line: 0, scope: !16019, inlinedAt: !17675)
!17675 = distinct !DILocation(line: 268, column: 3, scope: !16023, inlinedAt: !17671)
!17676 = !DILocation(line: 234, column: 2, scope: !16019, inlinedAt: !17675)
!17677 = !DILocation(line: 1402, column: 15, scope: !17644)
!17678 = !DILocation(line: 0, scope: !16028, inlinedAt: !17679)
!17679 = distinct !DILocation(line: 1402, column: 2, scope: !17644)
!17680 = !DILocation(line: 252, column: 15, scope: !16028, inlinedAt: !17679)
!17681 = !DILocation(line: 252, column: 28, scope: !16028, inlinedAt: !17679)
!17682 = !DILocation(line: 0, scope: !16035, inlinedAt: !17683)
!17683 = distinct !DILocation(line: 254, column: 3, scope: !16039, inlinedAt: !17679)
!17684 = !DILocation(line: 0, scope: !16042, inlinedAt: !17685)
!17685 = distinct !DILocation(line: 229, column: 2, scope: !16035, inlinedAt: !17683)
!17686 = !DILocation(line: 186, column: 2, scope: !16052, inlinedAt: !17685)
!17687 = !DILocation(line: 186, column: 2, scope: !16053, inlinedAt: !17685)
!17688 = !DILocation(line: 186, column: 2, scope: !16056, inlinedAt: !17685)
!17689 = !DILocation(line: 188, column: 2, scope: !16058, inlinedAt: !17685)
!17690 = !DILocation(line: 188, column: 2, scope: !16060, inlinedAt: !17685)
!17691 = !DILocation(line: 0, scope: !16058, inlinedAt: !17685)
!17692 = !DILocation(line: 189, column: 7, scope: !16063, inlinedAt: !17685)
!17693 = !DILocation(line: 189, column: 35, scope: !16063, inlinedAt: !17685)
!17694 = !DILocation(line: 189, column: 7, scope: !16064, inlinedAt: !17685)
!17695 = !DILocation(line: 191, column: 21, scope: !16068, inlinedAt: !17685)
!17696 = !DILocation(line: 190, column: 4, scope: !16068, inlinedAt: !17685)
!17697 = !DILocation(line: 192, column: 4, scope: !16068, inlinedAt: !17685)
!17698 = distinct !{!17698, !17689, !17699}
!17699 = !DILocation(line: 194, column: 2, scope: !16058, inlinedAt: !17685)
!17700 = !DILocation(line: 196, column: 37, scope: !16042, inlinedAt: !17685)
!17701 = !DILocation(line: 196, column: 2, scope: !16042, inlinedAt: !17685)
!17702 = !DILocation(line: 197, column: 1, scope: !16042, inlinedAt: !17685)
!17703 = !DILocation(line: 1403, column: 2, scope: !17644)
!17704 = !DILocation(line: 0, scope: !16540, inlinedAt: !17705)
!17705 = distinct !DILocation(line: 1404, column: 2, scope: !17644)
!17706 = !DILocation(line: 0, scope: !16549, inlinedAt: !17707)
!17707 = distinct !DILocation(line: 195, column: 2, scope: !16540, inlinedAt: !17705)
!17708 = !DILocation(line: 225, column: 2, scope: !16556, inlinedAt: !17707)
!17709 = !DILocation(line: 225, column: 2, scope: !16557, inlinedAt: !17707)
!17710 = !DILocation(line: 225, column: 2, scope: !16560, inlinedAt: !17707)
!17711 = !DILocation(line: 196, column: 9, scope: !16540, inlinedAt: !17705)
!17712 = !DILocation(line: 1405, column: 1, scope: !17644)
!17713 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2510, file: !2510, line: 1459, type: !17714, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17716)
!17714 = !DISubroutineType(types: !17715)
!17715 = !{!116, !16750}
!17716 = !{!17717, !17718, !17719}
!17717 = !DILocalVariable(name: "timeout", arg: 1, scope: !17713, file: !2510, line: 1459, type: !16750)
!17718 = !DILocalVariable(name: "ticks", scope: !17713, file: !2510, line: 1461, type: !107)
!17719 = !DILocalVariable(name: "ret", scope: !17713, file: !2510, line: 1480, type: !116)
!17720 = !DILocation(line: 0, scope: !17713)
!17721 = !DILocation(line: 1031, column: 3, scope: !16589, inlinedAt: !17722)
!17722 = distinct !DILocation(line: 48, column: 10, scope: !16593, inlinedAt: !17723)
!17723 = distinct !DILocation(line: 1463, column: 2, scope: !17724)
!17724 = distinct !DILexicalBlock(scope: !17725, file: !2510, line: 1463, column: 2)
!17725 = distinct !DILexicalBlock(scope: !17713, file: !2510, line: 1463, column: 2)
!17726 = !DILocation(line: 0, scope: !16589, inlinedAt: !17722)
!17727 = !DILocation(line: 48, column: 9, scope: !16593, inlinedAt: !17723)
!17728 = !DILocation(line: 1463, column: 2, scope: !17725)
!17729 = !DILocation(line: 1463, column: 2, scope: !17730)
!17730 = distinct !DILexicalBlock(scope: !17724, file: !2510, line: 1463, column: 2)
!17731 = !DILocation(line: 1468, column: 6, scope: !17732)
!17732 = distinct !DILexicalBlock(scope: !17713, file: !2510, line: 1468, column: 6)
!17733 = !DILocation(line: 1468, column: 6, scope: !17713)
!17734 = !DILocation(line: 1469, column: 20, scope: !17735)
!17735 = distinct !DILexicalBlock(scope: !17732, file: !2510, line: 1468, column: 40)
!17736 = !DILocation(line: 1469, column: 3, scope: !17735)
!17737 = !DILocation(line: 1473, column: 3, scope: !17735)
!17738 = !DILocation(line: 1478, column: 10, scope: !17713)
!17739 = !DILocation(line: 1480, column: 16, scope: !17713)
!17740 = !DILocation(line: 1485, column: 1, scope: !17713)
!17741 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3458, file: !3458, line: 310, type: !17742, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17744)
!17742 = !DISubroutineType(types: !17743)
!17743 = !{null, !17600}
!17744 = !{!17745}
!17745 = !DILocalVariable(name: "thread", arg: 1, scope: !17741, file: !3458, line: 310, type: !17600)
!17746 = !DILocation(line: 0, scope: !17741)
!17747 = !DILocation(line: 319, column: 2, scope: !17748)
!17748 = distinct !DILexicalBlock(scope: !17741, file: !3458, line: 319, column: 2)
!17749 = !{i64 2154201610}
!17750 = !DILocation(line: 320, column: 2, scope: !17741)
!17751 = !DILocation(line: 321, column: 1, scope: !17741)
!17752 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2510, file: !2510, line: 1415, type: !17753, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17755)
!17753 = !DISubroutineType(types: !17754)
!17754 = !{!116, !107}
!17755 = !{!17756, !17757, !17758, !17759}
!17756 = !DILocalVariable(name: "ticks", arg: 1, scope: !17752, file: !2510, line: 1415, type: !107)
!17757 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !17752, file: !2510, line: 1418, type: !113)
!17758 = !DILocalVariable(name: "timeout", scope: !17752, file: !2510, line: 1430, type: !16750)
!17759 = !DILocalVariable(name: "key", scope: !17752, file: !2510, line: 1437, type: !15811)
!17760 = !DILocation(line: 0, scope: !17752)
!17761 = !DILocation(line: 1031, column: 3, scope: !16589, inlinedAt: !17762)
!17762 = distinct !DILocation(line: 48, column: 10, scope: !16593, inlinedAt: !17763)
!17763 = distinct !DILocation(line: 1420, column: 2, scope: !17764)
!17764 = distinct !DILexicalBlock(scope: !17765, file: !2510, line: 1420, column: 2)
!17765 = distinct !DILexicalBlock(scope: !17752, file: !2510, line: 1420, column: 2)
!17766 = !DILocation(line: 0, scope: !16589, inlinedAt: !17762)
!17767 = !DILocation(line: 48, column: 9, scope: !16593, inlinedAt: !17763)
!17768 = !DILocation(line: 1420, column: 2, scope: !17765)
!17769 = !DILocation(line: 1420, column: 2, scope: !17770)
!17770 = distinct !DILexicalBlock(scope: !17764, file: !2510, line: 1420, column: 2)
!17771 = !DILocation(line: 1425, column: 12, scope: !17772)
!17772 = distinct !DILexicalBlock(scope: !17752, file: !2510, line: 1425, column: 6)
!17773 = !DILocation(line: 1425, column: 6, scope: !17752)
!17774 = !DILocation(line: 1426, column: 3, scope: !17775)
!17775 = distinct !DILexicalBlock(scope: !17772, file: !2510, line: 1425, column: 18)
!17776 = !DILocation(line: 1427, column: 3, scope: !17775)
!17777 = !DILocation(line: 1431, column: 24, scope: !17778)
!17778 = distinct !DILexicalBlock(scope: !17752, file: !2510, line: 1431, column: 6)
!17779 = !DILocation(line: 1431, column: 6, scope: !17752)
!17780 = !DILocation(line: 1432, column: 35, scope: !17781)
!17781 = distinct !DILexicalBlock(scope: !17778, file: !2510, line: 1431, column: 30)
!17782 = !DILocation(line: 1432, column: 27, scope: !17781)
!17783 = !DILocation(line: 1433, column: 2, scope: !17781)
!17784 = !DILocation(line: 1434, column: 27, scope: !17785)
!17785 = distinct !DILexicalBlock(scope: !17778, file: !2510, line: 1433, column: 9)
!17786 = !DILocation(line: 0, scope: !17778)
!17787 = !DILocation(line: 0, scope: !15819, inlinedAt: !17788)
!17788 = distinct !DILocation(line: 1437, column: 25, scope: !17752)
!17789 = !DILocation(line: 55, column: 2, scope: !15828, inlinedAt: !17790)
!17790 = distinct !DILocation(line: 145, column: 10, scope: !15819, inlinedAt: !17788)
!17791 = !DILocation(line: 0, scope: !15828, inlinedAt: !17790)
!17792 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !17788)
!17793 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !17788)
!17794 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !17788)
!17795 = !DILocation(line: 160, column: 2, scope: !15819, inlinedAt: !17788)
!17796 = !DILocation(line: 1440, column: 20, scope: !17752)
!17797 = !DILocation(line: 1440, column: 18, scope: !17752)
!17798 = !DILocation(line: 1442, column: 2, scope: !17752)
!17799 = !DILocation(line: 1443, column: 23, scope: !17752)
!17800 = !DILocation(line: 1443, column: 2, scope: !17752)
!17801 = !DILocation(line: 1444, column: 29, scope: !17752)
!17802 = !DILocation(line: 1444, column: 2, scope: !17752)
!17803 = !DILocation(line: 0, scope: !16540, inlinedAt: !17804)
!17804 = distinct !DILocation(line: 1446, column: 8, scope: !17752)
!17805 = !DILocation(line: 0, scope: !16549, inlinedAt: !17806)
!17806 = distinct !DILocation(line: 195, column: 2, scope: !16540, inlinedAt: !17804)
!17807 = !DILocation(line: 225, column: 2, scope: !16556, inlinedAt: !17806)
!17808 = !DILocation(line: 225, column: 2, scope: !16557, inlinedAt: !17806)
!17809 = !DILocation(line: 225, column: 2, scope: !16560, inlinedAt: !17806)
!17810 = !DILocation(line: 196, column: 9, scope: !16540, inlinedAt: !17804)
!17811 = !DILocation(line: 1448, column: 2, scope: !17812)
!17812 = distinct !DILexicalBlock(scope: !17813, file: !2510, line: 1448, column: 2)
!17813 = distinct !DILexicalBlock(scope: !17752, file: !2510, line: 1448, column: 2)
!17814 = !DILocation(line: 1448, column: 2, scope: !17813)
!17815 = !DILocation(line: 1448, column: 2, scope: !17816)
!17816 = distinct !DILexicalBlock(scope: !17812, file: !2510, line: 1448, column: 2)
!17817 = !DILocation(line: 1450, column: 10, scope: !17752)
!17818 = !DILocation(line: 1450, column: 45, scope: !17752)
!17819 = !DILocation(line: 1450, column: 43, scope: !17752)
!17820 = !DILocation(line: 1451, column: 6, scope: !17752)
!17821 = !DILocation(line: 1457, column: 1, scope: !17752)
!17822 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !14791, file: !14791, line: 1103, type: !14792, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17823)
!17823 = !{!17824}
!17824 = !DILocalVariable(name: "t", arg: 1, scope: !17822, file: !14791, line: 1103, type: !114)
!17825 = !DILocation(line: 0, scope: !17822)
!17826 = !DILocation(line: 0, scope: !15879, inlinedAt: !17827)
!17827 = distinct !DILocation(line: 1106, column: 9, scope: !17822)
!17828 = !DILocation(line: 139, column: 13, scope: !17829, inlinedAt: !17827)
!17829 = distinct !DILexicalBlock(scope: !17830, file: !14791, line: 138, column: 10)
!17830 = distinct !DILexicalBlock(scope: !17831, file: !14791, line: 136, column: 7)
!17831 = distinct !DILexicalBlock(scope: !15900, file: !14791, line: 134, column: 17)
!17832 = !DILocation(line: 1106, column: 2, scope: !17822)
!17833 = distinct !DISubprogram(name: "k_yield", scope: !3458, file: !3458, line: 140, type: !266, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !397)
!17834 = !DILocation(line: 148, column: 2, scope: !17835)
!17835 = distinct !DILexicalBlock(scope: !17833, file: !3458, line: 148, column: 2)
!17836 = !{i64 2154200930}
!17837 = !DILocation(line: 149, column: 2, scope: !17833)
!17838 = !DILocation(line: 150, column: 1, scope: !17833)
!17839 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2510, file: !2510, line: 1495, type: !17840, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17842)
!17840 = !DISubroutineType(types: !17841)
!17841 = !{!116, !105}
!17842 = !{!17843, !17844}
!17843 = !DILocalVariable(name: "us", arg: 1, scope: !17839, file: !2510, line: 1495, type: !105)
!17844 = !DILocalVariable(name: "ticks", scope: !17839, file: !2510, line: 1497, type: !116)
!17845 = !DILocation(line: 0, scope: !17839)
!17846 = !DILocation(line: 1501, column: 31, scope: !17839)
!17847 = !DILocation(line: 1501, column: 10, scope: !17839)
!17848 = !DILocation(line: 1502, column: 23, scope: !17839)
!17849 = !DILocation(line: 1502, column: 10, scope: !17839)
!17850 = !DILocation(line: 1506, column: 31, scope: !17839)
!17851 = !DILocation(line: 1506, column: 9, scope: !17839)
!17852 = !DILocation(line: 1506, column: 2, scope: !17839)
!17853 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !14791, file: !14791, line: 571, type: !14792, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17854)
!17854 = !{!17855}
!17855 = !DILocalVariable(name: "t", arg: 1, scope: !17853, file: !14791, line: 571, type: !114)
!17856 = !DILocation(line: 0, scope: !17853)
!17857 = !DILocation(line: 0, scope: !15879, inlinedAt: !17858)
!17858 = distinct !DILocation(line: 574, column: 9, scope: !17853)
!17859 = !DILocation(line: 135, column: 5, scope: !17831, inlinedAt: !17858)
!17860 = !DILocation(line: 139, column: 13, scope: !17829, inlinedAt: !17858)
!17861 = !DILocation(line: 574, column: 2, scope: !17853)
!17862 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !14791, file: !14791, line: 1187, type: !14792, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17863)
!17863 = !{!17864}
!17864 = !DILocalVariable(name: "t", arg: 1, scope: !17862, file: !14791, line: 1187, type: !114)
!17865 = !DILocation(line: 0, scope: !17862)
!17866 = !DILocation(line: 0, scope: !15879, inlinedAt: !17867)
!17867 = distinct !DILocation(line: 1190, column: 9, scope: !17862)
!17868 = !DILocation(line: 145, column: 13, scope: !17869, inlinedAt: !17867)
!17869 = distinct !DILexicalBlock(scope: !15897, file: !14791, line: 144, column: 10)
!17870 = !DILocation(line: 1190, column: 2, scope: !17862)
!17871 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2510, file: !2510, line: 1517, type: !17742, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17872)
!17872 = !{!17873}
!17873 = !DILocalVariable(name: "thread", arg: 1, scope: !17871, file: !2510, line: 1517, type: !17600)
!17874 = !DILocation(line: 0, scope: !17871)
!17875 = !DILocation(line: 1521, column: 6, scope: !17876)
!17876 = distinct !DILexicalBlock(scope: !17871, file: !2510, line: 1521, column: 6)
!17877 = !DILocation(line: 1521, column: 6, scope: !17871)
!17878 = !DILocation(line: 1525, column: 6, scope: !17879)
!17879 = distinct !DILexicalBlock(scope: !17871, file: !2510, line: 1525, column: 6)
!17880 = !DILocation(line: 1525, column: 37, scope: !17879)
!17881 = !DILocation(line: 1525, column: 6, scope: !17871)
!17882 = !DILocation(line: 1527, column: 20, scope: !17883)
!17883 = distinct !DILexicalBlock(scope: !17884, file: !2510, line: 1527, column: 7)
!17884 = distinct !DILexicalBlock(scope: !17879, file: !2510, line: 1525, column: 42)
!17885 = !DILocation(line: 1527, column: 33, scope: !17883)
!17886 = !DILocation(line: 1527, column: 7, scope: !17884)
!17887 = !DILocation(line: 1532, column: 2, scope: !17871)
!17888 = !DILocation(line: 1533, column: 2, scope: !17871)
!17889 = !DILocation(line: 1031, column: 3, scope: !16589, inlinedAt: !17890)
!17890 = distinct !DILocation(line: 48, column: 10, scope: !16593, inlinedAt: !17891)
!17891 = distinct !DILocation(line: 1537, column: 7, scope: !17892)
!17892 = distinct !DILexicalBlock(scope: !17871, file: !2510, line: 1537, column: 6)
!17893 = !DILocation(line: 0, scope: !16589, inlinedAt: !17890)
!17894 = !DILocation(line: 48, column: 9, scope: !16593, inlinedAt: !17891)
!17895 = !DILocation(line: 1537, column: 6, scope: !17871)
!17896 = !DILocation(line: 1538, column: 3, scope: !17897)
!17897 = distinct !DILexicalBlock(scope: !17892, file: !2510, line: 1537, column: 25)
!17898 = !DILocation(line: 1539, column: 2, scope: !17897)
!17899 = !DILocation(line: 1540, column: 1, scope: !17871)
!17900 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !14174, file: !14174, line: 101, type: !15960, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17901)
!17901 = !{!17902}
!17902 = !DILocalVariable(name: "thread", arg: 1, scope: !17900, file: !14174, line: 101, type: !2403)
!17903 = !DILocation(line: 0, scope: !17900)
!17904 = !DILocation(line: 103, column: 23, scope: !17900)
!17905 = !DILocation(line: 103, column: 36, scope: !17900)
!17906 = !DILocation(line: 103, column: 55, scope: !17900)
!17907 = !DILocation(line: 103, column: 2, scope: !17900)
!17908 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2510, file: !2510, line: 1567, type: !17909, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17911)
!17909 = !DISubroutineType(types: !17910)
!17910 = !{!17600}
!17911 = !{!17912}
!17912 = !DILocalVariable(name: "ret", scope: !17908, file: !2510, line: 1577, type: !17600)
!17913 = !DILocation(line: 1577, column: 30, scope: !17908)
!17914 = !DILocation(line: 0, scope: !17908)
!17915 = !DILocation(line: 1582, column: 2, scope: !17908)
!17916 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2510, file: !2510, line: 1593, type: !9153, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !397)
!17917 = !DILocation(line: 1031, column: 3, scope: !16589, inlinedAt: !17918)
!17918 = distinct !DILocation(line: 48, column: 10, scope: !16593, inlinedAt: !17919)
!17919 = distinct !DILocation(line: 1595, column: 10, scope: !17916)
!17920 = !DILocation(line: 0, scope: !16589, inlinedAt: !17918)
!17921 = !DILocation(line: 48, column: 9, scope: !16593, inlinedAt: !17919)
!17922 = !DILocation(line: 1595, column: 27, scope: !17916)
!17923 = !DILocation(line: 1595, column: 41, scope: !17916)
!17924 = !DILocation(line: 1595, column: 30, scope: !17916)
!17925 = !DILocation(line: 1595, column: 2, scope: !17916)
!17926 = distinct !DISubprogram(name: "z_thread_abort", scope: !2510, file: !2510, line: 1725, type: !15777, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !17927)
!17927 = !{!17928, !17929}
!17928 = !DILocalVariable(name: "thread", arg: 1, scope: !17926, file: !2510, line: 1725, type: !2403)
!17929 = !DILocalVariable(name: "key", scope: !17926, file: !2510, line: 1727, type: !15811)
!17930 = !DILocation(line: 0, scope: !17926)
!17931 = !DILocation(line: 0, scope: !15819, inlinedAt: !17932)
!17932 = distinct !DILocation(line: 1727, column: 25, scope: !17926)
!17933 = !DILocation(line: 55, column: 2, scope: !15828, inlinedAt: !17934)
!17934 = distinct !DILocation(line: 145, column: 10, scope: !15819, inlinedAt: !17932)
!17935 = !DILocation(line: 0, scope: !15828, inlinedAt: !17934)
!17936 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !17932)
!17937 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !17932)
!17938 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !17932)
!17939 = !DILocation(line: 160, column: 2, scope: !15819, inlinedAt: !17932)
!17940 = !DILocation(line: 1729, column: 20, scope: !17941)
!17941 = distinct !DILexicalBlock(scope: !17926, file: !2510, line: 1729, column: 6)
!17942 = !DILocation(line: 1729, column: 33, scope: !17941)
!17943 = !DILocation(line: 1729, column: 48, scope: !17941)
!17944 = !DILocation(line: 1729, column: 6, scope: !17926)
!17945 = !DILocation(line: 0, scope: !15853, inlinedAt: !17946)
!17946 = distinct !DILocation(line: 1730, column: 3, scope: !17947)
!17947 = distinct !DILexicalBlock(scope: !17941, file: !2510, line: 1729, column: 54)
!17948 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !17946)
!17949 = !DILocation(line: 194, column: 2, scope: !15862, inlinedAt: !17946)
!17950 = !DILocation(line: 194, column: 2, scope: !15865, inlinedAt: !17946)
!17951 = !DILocation(line: 0, scope: !15867, inlinedAt: !17952)
!17952 = distinct !DILocation(line: 215, column: 2, scope: !15853, inlinedAt: !17946)
!17953 = !DILocation(line: 95, column: 2, scope: !15867, inlinedAt: !17952)
!17954 = !DILocation(line: 1731, column: 3, scope: !17955)
!17955 = distinct !DILexicalBlock(scope: !17956, file: !2510, line: 1731, column: 3)
!17956 = distinct !DILexicalBlock(scope: !17957, file: !2510, line: 1731, column: 3)
!17957 = distinct !DILexicalBlock(scope: !17947, file: !2510, line: 1731, column: 3)
!17958 = !DILocation(line: 1736, column: 20, scope: !17959)
!17959 = distinct !DILexicalBlock(scope: !17926, file: !2510, line: 1736, column: 6)
!17960 = !DILocation(line: 1736, column: 33, scope: !17959)
!17961 = !DILocation(line: 1736, column: 49, scope: !17959)
!17962 = !DILocation(line: 1736, column: 6, scope: !17926)
!17963 = !DILocation(line: 0, scope: !15853, inlinedAt: !17964)
!17964 = distinct !DILocation(line: 1737, column: 3, scope: !17965)
!17965 = distinct !DILexicalBlock(scope: !17959, file: !2510, line: 1736, column: 56)
!17966 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !17964)
!17967 = !DILocation(line: 194, column: 2, scope: !15862, inlinedAt: !17964)
!17968 = !DILocation(line: 194, column: 2, scope: !15865, inlinedAt: !17964)
!17969 = !DILocation(line: 0, scope: !15867, inlinedAt: !17970)
!17970 = distinct !DILocation(line: 215, column: 2, scope: !15853, inlinedAt: !17964)
!17971 = !DILocation(line: 95, column: 2, scope: !15867, inlinedAt: !17970)
!17972 = !DILocation(line: 1738, column: 3, scope: !17965)
!17973 = !DILocation(line: 1775, column: 2, scope: !17926)
!17974 = !DILocation(line: 1776, column: 16, scope: !17975)
!17975 = distinct !DILexicalBlock(scope: !17926, file: !2510, line: 1776, column: 6)
!17976 = !DILocation(line: 1776, column: 13, scope: !17975)
!17977 = !DILocation(line: 1776, column: 25, scope: !17975)
!17978 = !DILocation(line: 1031, column: 3, scope: !16589, inlinedAt: !17979)
!17979 = distinct !DILocation(line: 48, column: 10, scope: !16593, inlinedAt: !17980)
!17980 = distinct !DILocation(line: 1776, column: 29, scope: !17975)
!17981 = !DILocation(line: 0, scope: !16589, inlinedAt: !17979)
!17982 = !DILocation(line: 48, column: 9, scope: !16593, inlinedAt: !17980)
!17983 = !DILocation(line: 1776, column: 6, scope: !17926)
!17984 = !DILocation(line: 0, scope: !16540, inlinedAt: !17985)
!17985 = distinct !DILocation(line: 1777, column: 3, scope: !17986)
!17986 = distinct !DILexicalBlock(scope: !17975, file: !2510, line: 1776, column: 47)
!17987 = !DILocation(line: 0, scope: !16549, inlinedAt: !17988)
!17988 = distinct !DILocation(line: 195, column: 2, scope: !16540, inlinedAt: !17985)
!17989 = !DILocation(line: 225, column: 2, scope: !16556, inlinedAt: !17988)
!17990 = !DILocation(line: 225, column: 2, scope: !16557, inlinedAt: !17988)
!17991 = !DILocation(line: 225, column: 2, scope: !16560, inlinedAt: !17988)
!17992 = !DILocation(line: 196, column: 9, scope: !16540, inlinedAt: !17985)
!17993 = !DILocation(line: 1778, column: 3, scope: !17994)
!17994 = distinct !DILexicalBlock(scope: !17995, file: !2510, line: 1778, column: 3)
!17995 = distinct !DILexicalBlock(scope: !17996, file: !2510, line: 1778, column: 3)
!17996 = distinct !DILexicalBlock(scope: !17986, file: !2510, line: 1778, column: 3)
!17997 = !DILocation(line: 0, scope: !15853, inlinedAt: !17998)
!17998 = distinct !DILocation(line: 1780, column: 2, scope: !17926)
!17999 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !17998)
!18000 = !DILocation(line: 194, column: 2, scope: !15862, inlinedAt: !17998)
!18001 = !DILocation(line: 194, column: 2, scope: !15865, inlinedAt: !17998)
!18002 = !DILocation(line: 0, scope: !15867, inlinedAt: !18003)
!18003 = distinct !DILocation(line: 215, column: 2, scope: !15853, inlinedAt: !17998)
!18004 = !DILocation(line: 95, column: 2, scope: !15867, inlinedAt: !18003)
!18005 = !DILocation(line: 1781, column: 1, scope: !17926)
!18006 = distinct !DISubprogram(name: "end_thread", scope: !2510, file: !2510, line: 1690, type: !15777, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !18007)
!18007 = !{!18008}
!18008 = !DILocalVariable(name: "thread", arg: 1, scope: !18006, file: !2510, line: 1690, type: !2403)
!18009 = !DILocation(line: 0, scope: !18006)
!18010 = !DILocation(line: 1695, column: 20, scope: !18011)
!18011 = distinct !DILexicalBlock(scope: !18006, file: !2510, line: 1695, column: 6)
!18012 = !DILocation(line: 1695, column: 33, scope: !18011)
!18013 = !DILocation(line: 1695, column: 49, scope: !18011)
!18014 = !DILocation(line: 1695, column: 6, scope: !18006)
!18015 = !DILocation(line: 1697, column: 29, scope: !18016)
!18016 = distinct !DILexicalBlock(scope: !18011, file: !2510, line: 1695, column: 56)
!18017 = !DILocation(line: 1698, column: 7, scope: !18018)
!18018 = distinct !DILexicalBlock(scope: !18016, file: !2510, line: 1698, column: 7)
!18019 = !DILocation(line: 1698, column: 7, scope: !18016)
!18020 = !DILocation(line: 0, scope: !16011, inlinedAt: !18021)
!18021 = distinct !DILocation(line: 1699, column: 4, scope: !18022)
!18022 = distinct !DILexicalBlock(scope: !18018, file: !2510, line: 1698, column: 35)
!18023 = !DILocation(line: 266, column: 28, scope: !16011, inlinedAt: !18021)
!18024 = !DILocation(line: 0, scope: !16019, inlinedAt: !18025)
!18025 = distinct !DILocation(line: 268, column: 3, scope: !16023, inlinedAt: !18021)
!18026 = !DILocation(line: 234, column: 2, scope: !16019, inlinedAt: !18025)
!18027 = !DILocation(line: 1700, column: 3, scope: !18022)
!18028 = !DILocation(line: 1701, column: 20, scope: !18029)
!18029 = distinct !DILexicalBlock(scope: !18016, file: !2510, line: 1701, column: 7)
!18030 = !DILocation(line: 1701, column: 30, scope: !18029)
!18031 = !DILocation(line: 1701, column: 7, scope: !18016)
!18032 = !DILocation(line: 1702, column: 4, scope: !18033)
!18033 = distinct !DILexicalBlock(scope: !18029, file: !2510, line: 1701, column: 39)
!18034 = !DILocation(line: 1703, column: 3, scope: !18033)
!18035 = !DILocation(line: 1704, column: 9, scope: !18016)
!18036 = !DILocation(line: 1705, column: 23, scope: !18016)
!18037 = !DILocation(line: 1705, column: 3, scope: !18016)
!18038 = !DILocation(line: 1706, column: 3, scope: !18016)
!18039 = !DILocation(line: 1722, column: 2, scope: !18016)
!18040 = !DILocation(line: 1723, column: 1, scope: !18006)
!18041 = distinct !DISubprogram(name: "unpend_all", scope: !2510, file: !2510, line: 1674, type: !18042, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !18044)
!18042 = !DISubroutineType(types: !18043)
!18043 = !{null, !2434}
!18044 = !{!18045, !18046}
!18045 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18041, file: !2510, line: 1674, type: !2434)
!18046 = !DILocalVariable(name: "thread", scope: !18041, file: !2510, line: 1676, type: !2403)
!18047 = !DILocation(line: 0, scope: !18041)
!18048 = !DILocation(line: 1678, column: 19, scope: !18041)
!18049 = !DILocation(line: 1678, column: 41, scope: !18041)
!18050 = !DILocation(line: 1678, column: 2, scope: !18041)
!18051 = !DILocation(line: 1679, column: 3, scope: !18052)
!18052 = distinct !DILexicalBlock(scope: !18041, file: !2510, line: 1678, column: 50)
!18053 = !DILocation(line: 1680, column: 9, scope: !18052)
!18054 = !DILocalVariable(name: "thread", arg: 1, scope: !18055, file: !14215, line: 65, type: !2403)
!18055 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14215, file: !14215, line: 65, type: !18056, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !18058)
!18056 = !DISubroutineType(types: !18057)
!18057 = !{null, !2403, !32}
!18058 = !{!18054, !18059}
!18059 = !DILocalVariable(name: "value", arg: 2, scope: !18055, file: !14215, line: 65, type: !32)
!18060 = !DILocation(line: 0, scope: !18055, inlinedAt: !18061)
!18061 = distinct !DILocation(line: 1681, column: 3, scope: !18052)
!18062 = !DILocation(line: 67, column: 15, scope: !18055, inlinedAt: !18061)
!18063 = !DILocation(line: 67, column: 33, scope: !18055, inlinedAt: !18061)
!18064 = !DILocation(line: 1682, column: 3, scope: !18052)
!18065 = distinct !{!18065, !18050, !18066}
!18066 = !DILocation(line: 1683, column: 2, scope: !18041)
!18067 = !DILocation(line: 1684, column: 1, scope: !18041)
!18068 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2510, file: !2510, line: 1794, type: !18069, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !18071)
!18069 = !DISubroutineType(types: !18070)
!18070 = !{!105, !2403, !16750}
!18071 = !{!18072, !18073, !18074, !18075}
!18072 = !DILocalVariable(name: "thread", arg: 1, scope: !18068, file: !2510, line: 1794, type: !2403)
!18073 = !DILocalVariable(name: "timeout", arg: 2, scope: !18068, file: !2510, line: 1794, type: !16750)
!18074 = !DILocalVariable(name: "key", scope: !18068, file: !2510, line: 1796, type: !15811)
!18075 = !DILocalVariable(name: "ret", scope: !18068, file: !2510, line: 1797, type: !105)
!18076 = !DILocation(line: 0, scope: !18068)
!18077 = !DILocation(line: 0, scope: !15819, inlinedAt: !18078)
!18078 = distinct !DILocation(line: 1796, column: 25, scope: !18068)
!18079 = !DILocation(line: 55, column: 2, scope: !15828, inlinedAt: !18080)
!18080 = distinct !DILocation(line: 145, column: 10, scope: !15819, inlinedAt: !18078)
!18081 = !DILocation(line: 0, scope: !15828, inlinedAt: !18080)
!18082 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !18078)
!18083 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !18078)
!18084 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !18078)
!18085 = !DILocation(line: 160, column: 2, scope: !15819, inlinedAt: !18078)
!18086 = !DILocation(line: 1801, column: 20, scope: !18087)
!18087 = distinct !DILexicalBlock(scope: !18068, file: !2510, line: 1801, column: 6)
!18088 = !DILocation(line: 1801, column: 33, scope: !18087)
!18089 = !DILocation(line: 1801, column: 49, scope: !18087)
!18090 = !DILocation(line: 1801, column: 6, scope: !18068)
!18091 = !DILocation(line: 1803, column: 13, scope: !18092)
!18092 = distinct !DILexicalBlock(scope: !18087, file: !2510, line: 1803, column: 13)
!18093 = !DILocation(line: 1803, column: 13, scope: !18087)
!18094 = !DILocation(line: 1805, column: 24, scope: !18095)
!18095 = distinct !DILexicalBlock(scope: !18092, file: !2510, line: 1805, column: 13)
!18096 = !DILocation(line: 1805, column: 21, scope: !18095)
!18097 = !DILocation(line: 1805, column: 34, scope: !18095)
!18098 = !DILocation(line: 1806, column: 20, scope: !18095)
!18099 = !DILocation(line: 1806, column: 44, scope: !18095)
!18100 = !DILocation(line: 1806, column: 30, scope: !18095)
!18101 = !DILocation(line: 1805, column: 13, scope: !18092)
!18102 = !DILocation(line: 1031, column: 3, scope: !16589, inlinedAt: !18103)
!18103 = distinct !DILocation(line: 48, column: 10, scope: !16593, inlinedAt: !18104)
!18104 = distinct !DILocation(line: 1809, column: 3, scope: !18105)
!18105 = distinct !DILexicalBlock(scope: !18106, file: !2510, line: 1809, column: 3)
!18106 = distinct !DILexicalBlock(scope: !18107, file: !2510, line: 1809, column: 3)
!18107 = distinct !DILexicalBlock(scope: !18095, file: !2510, line: 1808, column: 9)
!18108 = !DILocation(line: 0, scope: !16589, inlinedAt: !18103)
!18109 = !DILocation(line: 48, column: 9, scope: !16593, inlinedAt: !18104)
!18110 = !DILocation(line: 1809, column: 3, scope: !18106)
!18111 = !DILocation(line: 1809, column: 3, scope: !18112)
!18112 = distinct !DILexicalBlock(scope: !18105, file: !2510, line: 1809, column: 3)
!18113 = !DILocation(line: 1810, column: 23, scope: !18107)
!18114 = !DILocation(line: 1810, column: 42, scope: !18107)
!18115 = !DILocation(line: 1810, column: 3, scope: !18107)
!18116 = !DILocation(line: 1811, column: 22, scope: !18107)
!18117 = !DILocation(line: 1811, column: 3, scope: !18107)
!18118 = !DILocation(line: 0, scope: !16540, inlinedAt: !18119)
!18119 = distinct !DILocation(line: 1814, column: 9, scope: !18107)
!18120 = !DILocation(line: 0, scope: !16549, inlinedAt: !18121)
!18121 = distinct !DILocation(line: 195, column: 2, scope: !16540, inlinedAt: !18119)
!18122 = !DILocation(line: 225, column: 2, scope: !16556, inlinedAt: !18121)
!18123 = !DILocation(line: 225, column: 2, scope: !16557, inlinedAt: !18121)
!18124 = !DILocation(line: 225, column: 2, scope: !16560, inlinedAt: !18121)
!18125 = !DILocation(line: 196, column: 9, scope: !16540, inlinedAt: !18119)
!18126 = !DILocation(line: 1817, column: 3, scope: !18107)
!18127 = !DILocation(line: 0, scope: !18087)
!18128 = !DILocation(line: 0, scope: !15853, inlinedAt: !18129)
!18129 = distinct !DILocation(line: 1822, column: 2, scope: !18068)
!18130 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !18129)
!18131 = !DILocation(line: 194, column: 2, scope: !15862, inlinedAt: !18129)
!18132 = !DILocation(line: 194, column: 2, scope: !15865, inlinedAt: !18129)
!18133 = !DILocation(line: 0, scope: !15867, inlinedAt: !18134)
!18134 = distinct !DILocation(line: 215, column: 2, scope: !15853, inlinedAt: !18129)
!18135 = !DILocation(line: 95, column: 2, scope: !15867, inlinedAt: !18134)
!18136 = !DILocation(line: 1823, column: 2, scope: !18068)
!18137 = !DILocation(line: 1824, column: 1, scope: !18068)
!18138 = distinct !DISubprogram(name: "z_sched_wake", scope: !2510, file: !2510, line: 1882, type: !18139, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !18141)
!18139 = !DISubroutineType(types: !18140)
!18140 = !{!492, !2434, !105, !104}
!18141 = !{!18142, !18143, !18144, !18145, !18146, !18147, !18149}
!18142 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18138, file: !2510, line: 1882, type: !2434)
!18143 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !18138, file: !2510, line: 1882, type: !105)
!18144 = !DILocalVariable(name: "swap_data", arg: 3, scope: !18138, file: !2510, line: 1882, type: !104)
!18145 = !DILocalVariable(name: "thread", scope: !18138, file: !2510, line: 1884, type: !2403)
!18146 = !DILocalVariable(name: "ret", scope: !18138, file: !2510, line: 1885, type: !492)
!18147 = !DILocalVariable(name: "__i", scope: !18148, file: !2510, line: 1887, type: !15811)
!18148 = distinct !DILexicalBlock(scope: !18138, file: !2510, line: 1887, column: 2)
!18149 = !DILocalVariable(name: "__key", scope: !18148, file: !2510, line: 1887, type: !15811)
!18150 = !DILocation(line: 0, scope: !18138)
!18151 = !DILocation(line: 0, scope: !18148)
!18152 = !DILocation(line: 0, scope: !15819, inlinedAt: !18153)
!18153 = distinct !DILocation(line: 1887, column: 2, scope: !18148)
!18154 = !DILocation(line: 55, column: 2, scope: !15828, inlinedAt: !18155)
!18155 = distinct !DILocation(line: 145, column: 10, scope: !15819, inlinedAt: !18153)
!18156 = !DILocation(line: 0, scope: !15828, inlinedAt: !18155)
!18157 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !18153)
!18158 = !DILocation(line: 148, column: 2, scope: !15837, inlinedAt: !18153)
!18159 = !DILocation(line: 148, column: 2, scope: !15840, inlinedAt: !18153)
!18160 = !DILocation(line: 160, column: 2, scope: !15819, inlinedAt: !18153)
!18161 = !DILocation(line: 1888, column: 12, scope: !18162)
!18162 = distinct !DILexicalBlock(scope: !18163, file: !2510, line: 1887, column: 26)
!18163 = distinct !DILexicalBlock(scope: !18148, file: !2510, line: 1887, column: 2)
!18164 = !DILocation(line: 1890, column: 14, scope: !18165)
!18165 = distinct !DILexicalBlock(scope: !18162, file: !2510, line: 1890, column: 7)
!18166 = !DILocation(line: 1890, column: 7, scope: !18162)
!18167 = !DILocalVariable(name: "thread", arg: 1, scope: !18168, file: !15064, line: 134, type: !2403)
!18168 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !15064, file: !15064, line: 134, type: !18169, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !18171)
!18169 = !DISubroutineType(types: !18170)
!18170 = !{null, !2403, !32, !104}
!18171 = !{!18167, !18172, !18173}
!18172 = !DILocalVariable(name: "value", arg: 2, scope: !18168, file: !15064, line: 135, type: !32)
!18173 = !DILocalVariable(name: "data", arg: 3, scope: !18168, file: !15064, line: 136, type: !104)
!18174 = !DILocation(line: 0, scope: !18168, inlinedAt: !18175)
!18175 = distinct !DILocation(line: 1891, column: 4, scope: !18176)
!18176 = distinct !DILexicalBlock(scope: !18165, file: !2510, line: 1890, column: 23)
!18177 = !DILocation(line: 0, scope: !18055, inlinedAt: !18178)
!18178 = distinct !DILocation(line: 138, column: 2, scope: !18168, inlinedAt: !18175)
!18179 = !DILocation(line: 67, column: 15, scope: !18055, inlinedAt: !18178)
!18180 = !DILocation(line: 67, column: 33, scope: !18055, inlinedAt: !18178)
!18181 = !DILocation(line: 139, column: 15, scope: !18168, inlinedAt: !18175)
!18182 = !DILocation(line: 139, column: 25, scope: !18168, inlinedAt: !18175)
!18183 = !DILocation(line: 1894, column: 4, scope: !18176)
!18184 = !DILocation(line: 1895, column: 10, scope: !18176)
!18185 = !DILocation(line: 1896, column: 4, scope: !18176)
!18186 = !DILocation(line: 1898, column: 3, scope: !18176)
!18187 = !DILocation(line: 0, scope: !15853, inlinedAt: !18188)
!18188 = distinct !DILocation(line: 1887, column: 2, scope: !18163)
!18189 = !DILocation(line: 194, column: 2, scope: !15861, inlinedAt: !18188)
!18190 = !DILocation(line: 194, column: 2, scope: !15862, inlinedAt: !18188)
!18191 = !DILocation(line: 194, column: 2, scope: !15865, inlinedAt: !18188)
!18192 = !DILocation(line: 0, scope: !15867, inlinedAt: !18193)
!18193 = distinct !DILocation(line: 215, column: 2, scope: !15853, inlinedAt: !18188)
!18194 = !DILocation(line: 95, column: 2, scope: !15867, inlinedAt: !18193)
!18195 = !DILocation(line: 1901, column: 2, scope: !18138)
!18196 = distinct !DISubprogram(name: "z_sched_wait", scope: !2510, file: !2510, line: 1904, type: !18197, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2400, retainedNodes: !18200)
!18197 = !DISubroutineType(types: !18198)
!18198 = !{!105, !15822, !15811, !2434, !16750, !18199}
!18199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 32)
!18200 = !{!18201, !18202, !18203, !18204, !18205, !18206}
!18201 = !DILocalVariable(name: "lock", arg: 1, scope: !18196, file: !2510, line: 1904, type: !15822)
!18202 = !DILocalVariable(name: "key", arg: 2, scope: !18196, file: !2510, line: 1904, type: !15811)
!18203 = !DILocalVariable(name: "wait_q", arg: 3, scope: !18196, file: !2510, line: 1905, type: !2434)
!18204 = !DILocalVariable(name: "timeout", arg: 4, scope: !18196, file: !2510, line: 1905, type: !16750)
!18205 = !DILocalVariable(name: "data", arg: 5, scope: !18196, file: !2510, line: 1905, type: !18199)
!18206 = !DILocalVariable(name: "ret", scope: !18196, file: !2510, line: 1907, type: !105)
!18207 = !DILocation(line: 0, scope: !18196)
!18208 = !DILocation(line: 1907, column: 12, scope: !18196)
!18209 = !DILocation(line: 1909, column: 11, scope: !18210)
!18210 = distinct !DILexicalBlock(scope: !18196, file: !2510, line: 1909, column: 6)
!18211 = !DILocation(line: 1909, column: 6, scope: !18196)
!18212 = !DILocation(line: 1910, column: 11, scope: !18213)
!18213 = distinct !DILexicalBlock(scope: !18210, file: !2510, line: 1909, column: 20)
!18214 = !DILocation(line: 1910, column: 26, scope: !18213)
!18215 = !DILocation(line: 1910, column: 9, scope: !18213)
!18216 = !DILocation(line: 1911, column: 2, scope: !18213)
!18217 = !DILocation(line: 1912, column: 2, scope: !18196)
!18218 = distinct !DISubprogram(name: "z_data_copy", scope: !18219, file: !18219, line: 22, type: !266, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3295, retainedNodes: !397)
!18219 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18220 = !DILocation(line: 24, column: 2, scope: !18218)
!18221 = !DILocation(line: 27, column: 2, scope: !18218)
!18222 = !DILocation(line: 71, column: 1, scope: !18218)
!18223 = distinct !DISubprogram(name: "z_add_timeout", scope: !2547, file: !2547, line: 88, type: !18224, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18230)
!18224 = !DISubroutineType(types: !18225)
!18225 = !{null, !2520, !2539, !18226}
!18226 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !18227)
!18227 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !18228)
!18228 = !{!18229}
!18229 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18227, file: !108, line: 66, baseType: !107, size: 64)
!18230 = !{!18231, !18232, !18233, !18234, !18240, !18241, !18244, !18247}
!18231 = !DILocalVariable(name: "to", arg: 1, scope: !18223, file: !2547, line: 88, type: !2520)
!18232 = !DILocalVariable(name: "fn", arg: 2, scope: !18223, file: !2547, line: 88, type: !2539)
!18233 = !DILocalVariable(name: "timeout", arg: 3, scope: !18223, file: !2547, line: 89, type: !18226)
!18234 = !DILocalVariable(name: "__i", scope: !18235, file: !2547, line: 102, type: !18236)
!18235 = distinct !DILexicalBlock(scope: !18223, file: !2547, line: 102, column: 2)
!18236 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !18237)
!18237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !18238)
!18238 = !{!18239}
!18239 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18237, file: !236, line: 33, baseType: !105, size: 32)
!18240 = !DILocalVariable(name: "__key", scope: !18235, file: !2547, line: 102, type: !18236)
!18241 = !DILocalVariable(name: "t", scope: !18242, file: !2547, line: 103, type: !2520)
!18242 = distinct !DILexicalBlock(scope: !18243, file: !2547, line: 102, column: 24)
!18243 = distinct !DILexicalBlock(scope: !18235, file: !2547, line: 102, column: 2)
!18244 = !DILocalVariable(name: "ticks", scope: !18245, file: !2547, line: 107, type: !107)
!18245 = distinct !DILexicalBlock(scope: !18246, file: !2547, line: 106, column: 39)
!18246 = distinct !DILexicalBlock(scope: !18242, file: !2547, line: 105, column: 7)
!18247 = !DILocalVariable(name: "next_time", scope: !18248, file: !2547, line: 137, type: !116)
!18248 = distinct !DILexicalBlock(scope: !18249, file: !2547, line: 127, column: 22)
!18249 = distinct !DILexicalBlock(scope: !18242, file: !2547, line: 127, column: 7)
!18250 = !DILocation(line: 0, scope: !18223)
!18251 = !DILocation(line: 91, column: 6, scope: !18252)
!18252 = distinct !DILexicalBlock(scope: !18223, file: !2547, line: 91, column: 6)
!18253 = !DILocation(line: 91, column: 6, scope: !18223)
!18254 = !DILocation(line: 99, column: 2, scope: !18255)
!18255 = distinct !DILexicalBlock(scope: !18256, file: !2547, line: 99, column: 2)
!18256 = distinct !DILexicalBlock(scope: !18223, file: !2547, line: 99, column: 2)
!18257 = !DILocation(line: 99, column: 2, scope: !18256)
!18258 = !DILocation(line: 99, column: 2, scope: !18259)
!18259 = distinct !DILexicalBlock(scope: !18255, file: !2547, line: 99, column: 2)
!18260 = !DILocation(line: 100, column: 6, scope: !18223)
!18261 = !DILocation(line: 100, column: 9, scope: !18223)
!18262 = !DILocation(line: 0, scope: !18235)
!18263 = !DILocalVariable(name: "l", arg: 1, scope: !18264, file: !236, line: 136, type: !18267)
!18264 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !18265, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18268)
!18265 = !DISubroutineType(types: !18266)
!18266 = !{!18236, !18267}
!18267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 32)
!18268 = !{!18263, !18269}
!18269 = !DILocalVariable(name: "k", scope: !18264, file: !236, line: 139, type: !18236)
!18270 = !DILocation(line: 0, scope: !18264, inlinedAt: !18271)
!18271 = distinct !DILocation(line: 102, column: 2, scope: !18235)
!18272 = !DILocation(line: 55, column: 2, scope: !18273, inlinedAt: !18277)
!18273 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7485, file: !7485, line: 42, type: !7486, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18274)
!18274 = !{!18275, !18276}
!18275 = !DILocalVariable(name: "key", scope: !18273, file: !7485, line: 44, type: !32)
!18276 = !DILocalVariable(name: "tmp", scope: !18273, file: !7485, line: 53, type: !32)
!18277 = distinct !DILocation(line: 145, column: 10, scope: !18264, inlinedAt: !18271)
!18278 = !{i64 2046358}
!18279 = !DILocation(line: 0, scope: !18273, inlinedAt: !18277)
!18280 = !DILocation(line: 148, column: 2, scope: !18281, inlinedAt: !18271)
!18281 = distinct !DILexicalBlock(scope: !18282, file: !236, line: 148, column: 2)
!18282 = distinct !DILexicalBlock(scope: !18264, file: !236, line: 148, column: 2)
!18283 = !DILocation(line: 148, column: 2, scope: !18282, inlinedAt: !18271)
!18284 = !DILocation(line: 148, column: 2, scope: !18285, inlinedAt: !18271)
!18285 = distinct !DILexicalBlock(scope: !18281, file: !236, line: 148, column: 2)
!18286 = !DILocation(line: 160, column: 2, scope: !18264, inlinedAt: !18271)
!18287 = !DILocation(line: 106, column: 33, scope: !18246)
!18288 = !DILocation(line: 105, column: 7, scope: !18242)
!18289 = !DILocation(line: 107, column: 50, scope: !18245)
!18290 = !DILocation(line: 107, column: 48, scope: !18245)
!18291 = !DILocation(line: 0, scope: !18245)
!18292 = !DILocation(line: 109, column: 17, scope: !18245)
!18293 = !DILocation(line: 110, column: 3, scope: !18245)
!18294 = !DILocation(line: 111, column: 31, scope: !18295)
!18295 = distinct !DILexicalBlock(scope: !18246, file: !2547, line: 110, column: 10)
!18296 = !DILocation(line: 111, column: 37, scope: !18295)
!18297 = !DILocation(line: 111, column: 35, scope: !18295)
!18298 = !DILocation(line: 0, scope: !18246)
!18299 = !DILocation(line: 109, column: 8, scope: !18245)
!18300 = !DILocation(line: 109, column: 15, scope: !18245)
!18301 = !DILocation(line: 114, column: 12, scope: !18302)
!18302 = distinct !DILexicalBlock(scope: !18242, file: !2547, line: 114, column: 3)
!18303 = !DILocation(line: 0, scope: !18242)
!18304 = !DILocation(line: 114, column: 3, scope: !18302)
!18305 = !DILocation(line: 115, column: 24, scope: !18306)
!18306 = distinct !DILexicalBlock(scope: !18307, file: !2547, line: 115, column: 8)
!18307 = distinct !DILexicalBlock(scope: !18308, file: !2547, line: 114, column: 45)
!18308 = distinct !DILexicalBlock(scope: !18302, file: !2547, line: 114, column: 3)
!18309 = !DILocation(line: 115, column: 11, scope: !18306)
!18310 = !DILocation(line: 115, column: 18, scope: !18306)
!18311 = !DILocation(line: 115, column: 8, scope: !18307)
!18312 = !DILocation(line: 116, column: 15, scope: !18313)
!18313 = distinct !DILexicalBlock(scope: !18306, file: !2547, line: 115, column: 32)
!18314 = !DILocation(line: 117, column: 26, scope: !18313)
!18315 = !DILocation(line: 117, column: 5, scope: !18313)
!18316 = !DILocation(line: 123, column: 7, scope: !18242)
!18317 = !DILocation(line: 120, column: 15, scope: !18307)
!18318 = !DILocation(line: 114, column: 36, scope: !18308)
!18319 = distinct !{!18319, !18304, !18320}
!18320 = !DILocation(line: 121, column: 3, scope: !18302)
!18321 = !DILocation(line: 124, column: 4, scope: !18322)
!18322 = distinct !DILexicalBlock(scope: !18323, file: !2547, line: 123, column: 18)
!18323 = distinct !DILexicalBlock(scope: !18242, file: !2547, line: 123, column: 7)
!18324 = !DILocation(line: 125, column: 3, scope: !18322)
!18325 = !DILocation(line: 127, column: 13, scope: !18249)
!18326 = !DILocation(line: 127, column: 10, scope: !18249)
!18327 = !DILocation(line: 127, column: 7, scope: !18242)
!18328 = !DILocation(line: 137, column: 24, scope: !18248)
!18329 = !DILocation(line: 0, scope: !18248)
!18330 = !DILocation(line: 139, column: 18, scope: !18331)
!18331 = distinct !DILexicalBlock(scope: !18248, file: !2547, line: 139, column: 8)
!18332 = !DILocation(line: 139, column: 23, scope: !18331)
!18333 = !DILocation(line: 141, column: 5, scope: !18334)
!18334 = distinct !DILexicalBlock(scope: !18331, file: !2547, line: 140, column: 48)
!18335 = !DILocation(line: 142, column: 4, scope: !18334)
!18336 = !DILocalVariable(name: "key", arg: 2, scope: !18337, file: !236, line: 190, type: !18236)
!18337 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !18338, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18340)
!18338 = !DISubroutineType(types: !18339)
!18339 = !{null, !18267, !18236}
!18340 = !{!18341, !18336}
!18341 = !DILocalVariable(name: "l", arg: 1, scope: !18337, file: !236, line: 189, type: !18267)
!18342 = !DILocation(line: 0, scope: !18337, inlinedAt: !18343)
!18343 = distinct !DILocation(line: 102, column: 2, scope: !18243)
!18344 = !DILocation(line: 194, column: 2, scope: !18345, inlinedAt: !18343)
!18345 = distinct !DILexicalBlock(scope: !18346, file: !236, line: 194, column: 2)
!18346 = distinct !DILexicalBlock(scope: !18337, file: !236, line: 194, column: 2)
!18347 = !DILocation(line: 194, column: 2, scope: !18346, inlinedAt: !18343)
!18348 = !DILocation(line: 194, column: 2, scope: !18349, inlinedAt: !18343)
!18349 = distinct !DILexicalBlock(scope: !18345, file: !236, line: 194, column: 2)
!18350 = !DILocalVariable(name: "key", arg: 1, scope: !18351, file: !7485, line: 84, type: !32)
!18351 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7485, file: !7485, line: 84, type: !7496, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18352)
!18352 = !{!18350}
!18353 = !DILocation(line: 0, scope: !18351, inlinedAt: !18354)
!18354 = distinct !DILocation(line: 215, column: 2, scope: !18337, inlinedAt: !18343)
!18355 = !DILocation(line: 95, column: 2, scope: !18351, inlinedAt: !18354)
!18356 = !{i64 2047175}
!18357 = !DILocation(line: 148, column: 1, scope: !18223)
!18358 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !137, file: !137, line: 225, type: !18359, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18363)
!18359 = !DISubroutineType(types: !18360)
!18360 = !{!492, !18361}
!18361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18362, size: 32)
!18362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2524)
!18363 = !{!18364}
!18364 = !DILocalVariable(name: "node", arg: 1, scope: !18358, file: !137, line: 225, type: !18361)
!18365 = !DILocation(line: 0, scope: !18358)
!18366 = !DILocation(line: 227, column: 15, scope: !18358)
!18367 = !DILocation(line: 227, column: 20, scope: !18358)
!18368 = !DILocation(line: 227, column: 2, scope: !18358)
!18369 = distinct !DISubprogram(name: "elapsed", scope: !2547, file: !2547, line: 62, type: !18370, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !397)
!18370 = !DISubroutineType(types: !18371)
!18371 = !{!116}
!18372 = !DILocation(line: 64, column: 9, scope: !18369)
!18373 = !DILocation(line: 64, column: 28, scope: !18369)
!18374 = !DILocation(line: 64, column: 35, scope: !18369)
!18375 = !DILocation(line: 64, column: 2, scope: !18369)
!18376 = distinct !DISubprogram(name: "first", scope: !2547, file: !2547, line: 39, type: !18377, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18379)
!18377 = !DISubroutineType(types: !18378)
!18378 = !{!2520}
!18379 = !{!18380}
!18380 = !DILocalVariable(name: "t", scope: !18376, file: !2547, line: 41, type: !18381)
!18381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 32)
!18382 = !DILocation(line: 41, column: 19, scope: !18376)
!18383 = !DILocation(line: 0, scope: !18376)
!18384 = !DILocation(line: 43, column: 9, scope: !18376)
!18385 = !DILocation(line: 43, column: 2, scope: !18376)
!18386 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !137, file: !137, line: 443, type: !18387, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18389)
!18387 = !DISubroutineType(types: !18388)
!18388 = !{null, !18381, !18381}
!18389 = !{!18390, !18391, !18392}
!18390 = !DILocalVariable(name: "successor", arg: 1, scope: !18386, file: !137, line: 443, type: !18381)
!18391 = !DILocalVariable(name: "node", arg: 2, scope: !18386, file: !137, line: 443, type: !18381)
!18392 = !DILocalVariable(name: "prev", scope: !18386, file: !137, line: 445, type: !18393)
!18393 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18381)
!18394 = !DILocation(line: 0, scope: !18386)
!18395 = !DILocation(line: 445, column: 39, scope: !18386)
!18396 = !DILocation(line: 447, column: 8, scope: !18386)
!18397 = !DILocation(line: 447, column: 13, scope: !18386)
!18398 = !DILocation(line: 448, column: 8, scope: !18386)
!18399 = !DILocation(line: 448, column: 13, scope: !18386)
!18400 = !DILocation(line: 449, column: 8, scope: !18386)
!18401 = !DILocation(line: 449, column: 13, scope: !18386)
!18402 = !DILocation(line: 450, column: 18, scope: !18386)
!18403 = !DILocation(line: 451, column: 1, scope: !18386)
!18404 = distinct !DISubprogram(name: "next", scope: !2547, file: !2547, line: 46, type: !18405, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18407)
!18405 = !DISubroutineType(types: !18406)
!18406 = !{!2520, !2520}
!18407 = !{!18408, !18409}
!18408 = !DILocalVariable(name: "t", arg: 1, scope: !18404, file: !2547, line: 46, type: !2520)
!18409 = !DILocalVariable(name: "n", scope: !18404, file: !2547, line: 48, type: !18381)
!18410 = !DILocation(line: 0, scope: !18404)
!18411 = !DILocation(line: 48, column: 58, scope: !18404)
!18412 = !DILocation(line: 48, column: 19, scope: !18404)
!18413 = !DILocation(line: 50, column: 9, scope: !18404)
!18414 = !DILocation(line: 50, column: 2, scope: !18404)
!18415 = distinct !DISubprogram(name: "sys_dlist_append", scope: !137, file: !137, line: 404, type: !18416, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18419)
!18416 = !DISubroutineType(types: !18417)
!18417 = !{null, !18418, !18381}
!18418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 32)
!18419 = !{!18420, !18421, !18422}
!18420 = !DILocalVariable(name: "list", arg: 1, scope: !18415, file: !137, line: 404, type: !18418)
!18421 = !DILocalVariable(name: "node", arg: 2, scope: !18415, file: !137, line: 404, type: !18381)
!18422 = !DILocalVariable(name: "tail", scope: !18415, file: !137, line: 406, type: !18393)
!18423 = !DILocation(line: 0, scope: !18415)
!18424 = !DILocation(line: 406, column: 34, scope: !18415)
!18425 = !DILocation(line: 408, column: 8, scope: !18415)
!18426 = !DILocation(line: 408, column: 13, scope: !18415)
!18427 = !DILocation(line: 409, column: 8, scope: !18415)
!18428 = !DILocation(line: 409, column: 13, scope: !18415)
!18429 = !DILocation(line: 411, column: 8, scope: !18415)
!18430 = !DILocation(line: 411, column: 13, scope: !18415)
!18431 = !DILocation(line: 412, column: 13, scope: !18415)
!18432 = !DILocation(line: 413, column: 1, scope: !18415)
!18433 = distinct !DISubprogram(name: "next_timeout", scope: !2547, file: !2547, line: 67, type: !18370, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18434)
!18434 = !{!18435, !18436, !18437}
!18435 = !DILocalVariable(name: "to", scope: !18433, file: !2547, line: 69, type: !2520)
!18436 = !DILocalVariable(name: "ticks_elapsed", scope: !18433, file: !2547, line: 70, type: !116)
!18437 = !DILocalVariable(name: "ret", scope: !18433, file: !2547, line: 71, type: !116)
!18438 = !DILocation(line: 69, column: 24, scope: !18433)
!18439 = !DILocation(line: 0, scope: !18433)
!18440 = !DILocation(line: 70, column: 26, scope: !18433)
!18441 = !DILocation(line: 73, column: 10, scope: !18442)
!18442 = distinct !DILexicalBlock(scope: !18433, file: !2547, line: 73, column: 6)
!18443 = !DILocation(line: 73, column: 19, scope: !18442)
!18444 = !DILocation(line: 74, column: 21, scope: !18442)
!18445 = !DILocation(line: 74, column: 30, scope: !18442)
!18446 = !DILocation(line: 74, column: 28, scope: !18442)
!18447 = !DILocation(line: 74, column: 45, scope: !18442)
!18448 = !DILocation(line: 73, column: 6, scope: !18433)
!18449 = !DILocation(line: 77, column: 9, scope: !18450)
!18450 = distinct !DILexicalBlock(scope: !18442, file: !2547, line: 76, column: 9)
!18451 = !DILocation(line: 0, scope: !18442)
!18452 = !DILocation(line: 81, column: 20, scope: !18453)
!18453 = distinct !DILexicalBlock(scope: !18433, file: !2547, line: 81, column: 6)
!18454 = !DILocation(line: 81, column: 6, scope: !18453)
!18455 = !DILocation(line: 81, column: 32, scope: !18453)
!18456 = !DILocation(line: 85, column: 2, scope: !18433)
!18457 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !137, file: !137, line: 341, type: !18458, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18460)
!18458 = !DISubroutineType(types: !18459)
!18459 = !{!18381, !18418, !18381}
!18460 = !{!18461, !18462}
!18461 = !DILocalVariable(name: "list", arg: 1, scope: !18457, file: !137, line: 341, type: !18418)
!18462 = !DILocalVariable(name: "node", arg: 2, scope: !18457, file: !137, line: 342, type: !18381)
!18463 = !DILocation(line: 0, scope: !18457)
!18464 = !DILocation(line: 344, column: 15, scope: !18457)
!18465 = !DILocation(line: 344, column: 9, scope: !18457)
!18466 = !DILocation(line: 344, column: 26, scope: !18457)
!18467 = !DILocation(line: 344, column: 2, scope: !18457)
!18468 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !137, file: !137, line: 325, type: !18458, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18469)
!18469 = !{!18470, !18471}
!18470 = !DILocalVariable(name: "list", arg: 1, scope: !18468, file: !137, line: 325, type: !18418)
!18471 = !DILocalVariable(name: "node", arg: 2, scope: !18468, file: !137, line: 326, type: !18381)
!18472 = !DILocation(line: 0, scope: !18468)
!18473 = !DILocation(line: 328, column: 24, scope: !18468)
!18474 = !DILocation(line: 328, column: 15, scope: !18468)
!18475 = !DILocation(line: 328, column: 9, scope: !18468)
!18476 = !DILocation(line: 328, column: 45, scope: !18468)
!18477 = !DILocation(line: 328, column: 2, scope: !18468)
!18478 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !137, file: !137, line: 294, type: !18479, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18481)
!18479 = !DISubroutineType(types: !18480)
!18480 = !{!18381, !18418}
!18481 = !{!18482}
!18482 = !DILocalVariable(name: "list", arg: 1, scope: !18478, file: !137, line: 294, type: !18418)
!18483 = !DILocation(line: 0, scope: !18478)
!18484 = !DILocation(line: 296, column: 9, scope: !18478)
!18485 = !DILocation(line: 296, column: 2, scope: !18478)
!18486 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !137, file: !137, line: 266, type: !18487, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18489)
!18487 = !DISubroutineType(types: !18488)
!18488 = !{!492, !18418}
!18489 = !{!18490}
!18490 = !DILocalVariable(name: "list", arg: 1, scope: !18486, file: !137, line: 266, type: !18418)
!18491 = !DILocation(line: 0, scope: !18486)
!18492 = !DILocation(line: 268, column: 15, scope: !18486)
!18493 = !DILocation(line: 268, column: 20, scope: !18486)
!18494 = !DILocation(line: 268, column: 2, scope: !18486)
!18495 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2547, file: !2547, line: 150, type: !18496, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18498)
!18496 = !DISubroutineType(types: !18497)
!18497 = !{!105, !2520}
!18498 = !{!18499, !18500, !18501, !18503}
!18499 = !DILocalVariable(name: "to", arg: 1, scope: !18495, file: !2547, line: 150, type: !2520)
!18500 = !DILocalVariable(name: "ret", scope: !18495, file: !2547, line: 152, type: !105)
!18501 = !DILocalVariable(name: "__i", scope: !18502, file: !2547, line: 154, type: !18236)
!18502 = distinct !DILexicalBlock(scope: !18495, file: !2547, line: 154, column: 2)
!18503 = !DILocalVariable(name: "__key", scope: !18502, file: !2547, line: 154, type: !18236)
!18504 = !DILocation(line: 0, scope: !18495)
!18505 = !DILocation(line: 0, scope: !18502)
!18506 = !DILocation(line: 0, scope: !18264, inlinedAt: !18507)
!18507 = distinct !DILocation(line: 154, column: 2, scope: !18502)
!18508 = !DILocation(line: 55, column: 2, scope: !18273, inlinedAt: !18509)
!18509 = distinct !DILocation(line: 145, column: 10, scope: !18264, inlinedAt: !18507)
!18510 = !DILocation(line: 0, scope: !18273, inlinedAt: !18509)
!18511 = !DILocation(line: 148, column: 2, scope: !18281, inlinedAt: !18507)
!18512 = !DILocation(line: 148, column: 2, scope: !18282, inlinedAt: !18507)
!18513 = !DILocation(line: 148, column: 2, scope: !18285, inlinedAt: !18507)
!18514 = !DILocation(line: 160, column: 2, scope: !18264, inlinedAt: !18507)
!18515 = !DILocation(line: 155, column: 7, scope: !18516)
!18516 = distinct !DILexicalBlock(scope: !18517, file: !2547, line: 155, column: 7)
!18517 = distinct !DILexicalBlock(scope: !18518, file: !2547, line: 154, column: 24)
!18518 = distinct !DILexicalBlock(scope: !18502, file: !2547, line: 154, column: 2)
!18519 = !DILocation(line: 155, column: 7, scope: !18517)
!18520 = !DILocation(line: 156, column: 4, scope: !18521)
!18521 = distinct !DILexicalBlock(scope: !18516, file: !2547, line: 155, column: 39)
!18522 = !DILocation(line: 158, column: 3, scope: !18521)
!18523 = !DILocation(line: 0, scope: !18337, inlinedAt: !18524)
!18524 = distinct !DILocation(line: 154, column: 2, scope: !18518)
!18525 = !DILocation(line: 194, column: 2, scope: !18345, inlinedAt: !18524)
!18526 = !DILocation(line: 194, column: 2, scope: !18346, inlinedAt: !18524)
!18527 = !DILocation(line: 194, column: 2, scope: !18349, inlinedAt: !18524)
!18528 = !DILocation(line: 0, scope: !18351, inlinedAt: !18529)
!18529 = distinct !DILocation(line: 215, column: 2, scope: !18337, inlinedAt: !18524)
!18530 = !DILocation(line: 95, column: 2, scope: !18351, inlinedAt: !18529)
!18531 = !DILocation(line: 161, column: 2, scope: !18495)
!18532 = distinct !DISubprogram(name: "remove_timeout", scope: !2547, file: !2547, line: 53, type: !2541, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18533)
!18533 = !{!18534}
!18534 = !DILocalVariable(name: "t", arg: 1, scope: !18532, file: !2547, line: 53, type: !2520)
!18535 = !DILocation(line: 0, scope: !18532)
!18536 = !DILocation(line: 55, column: 6, scope: !18537)
!18537 = distinct !DILexicalBlock(scope: !18532, file: !2547, line: 55, column: 6)
!18538 = !DILocation(line: 55, column: 14, scope: !18537)
!18539 = !DILocation(line: 55, column: 6, scope: !18532)
!18540 = !DILocation(line: 56, column: 25, scope: !18541)
!18541 = distinct !DILexicalBlock(scope: !18537, file: !2547, line: 55, column: 23)
!18542 = !DILocation(line: 56, column: 12, scope: !18541)
!18543 = !DILocation(line: 56, column: 19, scope: !18541)
!18544 = !DILocation(line: 57, column: 2, scope: !18541)
!18545 = !DILocation(line: 59, column: 23, scope: !18532)
!18546 = !DILocation(line: 59, column: 2, scope: !18532)
!18547 = !DILocation(line: 60, column: 1, scope: !18532)
!18548 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !137, file: !137, line: 496, type: !18549, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18551)
!18549 = !DISubroutineType(types: !18550)
!18550 = !{null, !18381}
!18551 = !{!18552, !18553, !18554}
!18552 = !DILocalVariable(name: "node", arg: 1, scope: !18548, file: !137, line: 496, type: !18381)
!18553 = !DILocalVariable(name: "prev", scope: !18548, file: !137, line: 498, type: !18393)
!18554 = !DILocalVariable(name: "next", scope: !18548, file: !137, line: 499, type: !18393)
!18555 = !DILocation(line: 0, scope: !18548)
!18556 = !DILocation(line: 498, column: 34, scope: !18548)
!18557 = !DILocation(line: 499, column: 34, scope: !18548)
!18558 = !DILocation(line: 501, column: 8, scope: !18548)
!18559 = !DILocation(line: 501, column: 13, scope: !18548)
!18560 = !DILocation(line: 502, column: 8, scope: !18548)
!18561 = !DILocation(line: 502, column: 13, scope: !18548)
!18562 = !DILocation(line: 503, column: 2, scope: !18548)
!18563 = !DILocation(line: 504, column: 1, scope: !18548)
!18564 = distinct !DISubprogram(name: "sys_dnode_init", scope: !137, file: !137, line: 211, type: !18549, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18565)
!18565 = !{!18566}
!18566 = !DILocalVariable(name: "node", arg: 1, scope: !18564, file: !137, line: 211, type: !18381)
!18567 = !DILocation(line: 0, scope: !18564)
!18568 = !DILocation(line: 213, column: 8, scope: !18564)
!18569 = !DILocation(line: 213, column: 13, scope: !18564)
!18570 = !DILocation(line: 214, column: 8, scope: !18564)
!18571 = !DILocation(line: 214, column: 13, scope: !18564)
!18572 = !DILocation(line: 215, column: 1, scope: !18564)
!18573 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2547, file: !2547, line: 183, type: !18574, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18578)
!18574 = !DISubroutineType(types: !18575)
!18575 = !{!107, !18576}
!18576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18577, size: 32)
!18577 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2521)
!18578 = !{!18579, !18580, !18581, !18583}
!18579 = !DILocalVariable(name: "timeout", arg: 1, scope: !18573, file: !2547, line: 183, type: !18576)
!18580 = !DILocalVariable(name: "ticks", scope: !18573, file: !2547, line: 185, type: !107)
!18581 = !DILocalVariable(name: "__i", scope: !18582, file: !2547, line: 187, type: !18236)
!18582 = distinct !DILexicalBlock(scope: !18573, file: !2547, line: 187, column: 2)
!18583 = !DILocalVariable(name: "__key", scope: !18582, file: !2547, line: 187, type: !18236)
!18584 = !DILocation(line: 0, scope: !18573)
!18585 = !DILocation(line: 0, scope: !18582)
!18586 = !DILocation(line: 0, scope: !18264, inlinedAt: !18587)
!18587 = distinct !DILocation(line: 187, column: 2, scope: !18582)
!18588 = !DILocation(line: 55, column: 2, scope: !18273, inlinedAt: !18589)
!18589 = distinct !DILocation(line: 145, column: 10, scope: !18264, inlinedAt: !18587)
!18590 = !DILocation(line: 0, scope: !18273, inlinedAt: !18589)
!18591 = !DILocation(line: 148, column: 2, scope: !18281, inlinedAt: !18587)
!18592 = !DILocation(line: 148, column: 2, scope: !18282, inlinedAt: !18587)
!18593 = !DILocation(line: 148, column: 2, scope: !18285, inlinedAt: !18587)
!18594 = !DILocation(line: 160, column: 2, scope: !18264, inlinedAt: !18587)
!18595 = !DILocation(line: 188, column: 11, scope: !18596)
!18596 = distinct !DILexicalBlock(scope: !18597, file: !2547, line: 187, column: 24)
!18597 = distinct !DILexicalBlock(scope: !18582, file: !2547, line: 187, column: 2)
!18598 = !DILocation(line: 0, scope: !18337, inlinedAt: !18599)
!18599 = distinct !DILocation(line: 187, column: 2, scope: !18597)
!18600 = !DILocation(line: 194, column: 2, scope: !18345, inlinedAt: !18599)
!18601 = !DILocation(line: 194, column: 2, scope: !18346, inlinedAt: !18599)
!18602 = !DILocation(line: 194, column: 2, scope: !18349, inlinedAt: !18599)
!18603 = !DILocation(line: 0, scope: !18351, inlinedAt: !18604)
!18604 = distinct !DILocation(line: 215, column: 2, scope: !18337, inlinedAt: !18599)
!18605 = !DILocation(line: 95, column: 2, scope: !18351, inlinedAt: !18604)
!18606 = !DILocation(line: 191, column: 2, scope: !18573)
!18607 = distinct !DISubprogram(name: "timeout_rem", scope: !2547, file: !2547, line: 165, type: !18574, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18608)
!18608 = !{!18609, !18610, !18611}
!18609 = !DILocalVariable(name: "timeout", arg: 1, scope: !18607, file: !2547, line: 165, type: !18576)
!18610 = !DILocalVariable(name: "ticks", scope: !18607, file: !2547, line: 167, type: !107)
!18611 = !DILocalVariable(name: "t", scope: !18612, file: !2547, line: 173, type: !2520)
!18612 = distinct !DILexicalBlock(scope: !18607, file: !2547, line: 173, column: 2)
!18613 = !DILocation(line: 0, scope: !18607)
!18614 = !DILocation(line: 169, column: 6, scope: !18615)
!18615 = distinct !DILexicalBlock(scope: !18607, file: !2547, line: 169, column: 6)
!18616 = !DILocation(line: 169, column: 6, scope: !18607)
!18617 = !DILocation(line: 173, column: 28, scope: !18612)
!18618 = !DILocation(line: 0, scope: !18612)
!18619 = !DILocation(line: 173, column: 39, scope: !18620)
!18620 = distinct !DILexicalBlock(scope: !18612, file: !2547, line: 173, column: 2)
!18621 = !DILocation(line: 173, column: 2, scope: !18612)
!18622 = !DILocation(line: 174, column: 15, scope: !18623)
!18623 = distinct !DILexicalBlock(scope: !18620, file: !2547, line: 173, column: 61)
!18624 = !DILocation(line: 174, column: 9, scope: !18623)
!18625 = !DILocation(line: 175, column: 15, scope: !18626)
!18626 = distinct !DILexicalBlock(scope: !18623, file: !2547, line: 175, column: 7)
!18627 = !DILocation(line: 175, column: 7, scope: !18623)
!18628 = !DILocation(line: 173, column: 52, scope: !18620)
!18629 = distinct !{!18629, !18621, !18630}
!18630 = !DILocation(line: 178, column: 2, scope: !18612)
!18631 = !DILocation(line: 180, column: 17, scope: !18607)
!18632 = !DILocation(line: 180, column: 15, scope: !18607)
!18633 = !DILocation(line: 180, column: 2, scope: !18607)
!18634 = !DILocation(line: 181, column: 1, scope: !18607)
!18635 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14603, file: !14603, line: 35, type: !18636, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18638)
!18636 = !DISubroutineType(types: !18637)
!18637 = !{!492, !18576}
!18638 = !{!18639}
!18639 = !DILocalVariable(name: "to", arg: 1, scope: !18635, file: !14603, line: 35, type: !18576)
!18640 = !DILocation(line: 0, scope: !18635)
!18641 = !DILocation(line: 37, column: 35, scope: !18635)
!18642 = !DILocation(line: 37, column: 10, scope: !18635)
!18643 = !DILocation(line: 37, column: 9, scope: !18635)
!18644 = !DILocation(line: 37, column: 2, scope: !18635)
!18645 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2547, file: !2547, line: 194, type: !18574, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18646)
!18646 = !{!18647, !18648, !18649, !18651}
!18647 = !DILocalVariable(name: "timeout", arg: 1, scope: !18645, file: !2547, line: 194, type: !18576)
!18648 = !DILocalVariable(name: "ticks", scope: !18645, file: !2547, line: 196, type: !107)
!18649 = !DILocalVariable(name: "__i", scope: !18650, file: !2547, line: 198, type: !18236)
!18650 = distinct !DILexicalBlock(scope: !18645, file: !2547, line: 198, column: 2)
!18651 = !DILocalVariable(name: "__key", scope: !18650, file: !2547, line: 198, type: !18236)
!18652 = !DILocation(line: 0, scope: !18645)
!18653 = !DILocation(line: 0, scope: !18650)
!18654 = !DILocation(line: 0, scope: !18264, inlinedAt: !18655)
!18655 = distinct !DILocation(line: 198, column: 2, scope: !18650)
!18656 = !DILocation(line: 55, column: 2, scope: !18273, inlinedAt: !18657)
!18657 = distinct !DILocation(line: 145, column: 10, scope: !18264, inlinedAt: !18655)
!18658 = !DILocation(line: 0, scope: !18273, inlinedAt: !18657)
!18659 = !DILocation(line: 148, column: 2, scope: !18281, inlinedAt: !18655)
!18660 = !DILocation(line: 148, column: 2, scope: !18282, inlinedAt: !18655)
!18661 = !DILocation(line: 148, column: 2, scope: !18285, inlinedAt: !18655)
!18662 = !DILocation(line: 160, column: 2, scope: !18264, inlinedAt: !18655)
!18663 = !DILocation(line: 199, column: 11, scope: !18664)
!18664 = distinct !DILexicalBlock(scope: !18665, file: !2547, line: 198, column: 24)
!18665 = distinct !DILexicalBlock(scope: !18650, file: !2547, line: 198, column: 2)
!18666 = !DILocation(line: 199, column: 23, scope: !18664)
!18667 = !DILocation(line: 0, scope: !18337, inlinedAt: !18668)
!18668 = distinct !DILocation(line: 198, column: 2, scope: !18665)
!18669 = !DILocation(line: 194, column: 2, scope: !18345, inlinedAt: !18668)
!18670 = !DILocation(line: 194, column: 2, scope: !18346, inlinedAt: !18668)
!18671 = !DILocation(line: 194, column: 2, scope: !18349, inlinedAt: !18668)
!18672 = !DILocation(line: 0, scope: !18351, inlinedAt: !18673)
!18673 = distinct !DILocation(line: 215, column: 2, scope: !18337, inlinedAt: !18668)
!18674 = !DILocation(line: 95, column: 2, scope: !18351, inlinedAt: !18673)
!18675 = !DILocation(line: 199, column: 21, scope: !18664)
!18676 = !DILocation(line: 202, column: 2, scope: !18645)
!18677 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2547, file: !2547, line: 205, type: !18370, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18678)
!18678 = !{!18679, !18680, !18682}
!18679 = !DILocalVariable(name: "ret", scope: !18677, file: !2547, line: 207, type: !116)
!18680 = !DILocalVariable(name: "__i", scope: !18681, file: !2547, line: 209, type: !18236)
!18681 = distinct !DILexicalBlock(scope: !18677, file: !2547, line: 209, column: 2)
!18682 = !DILocalVariable(name: "__key", scope: !18681, file: !2547, line: 209, type: !18236)
!18683 = !DILocation(line: 0, scope: !18677)
!18684 = !DILocation(line: 0, scope: !18681)
!18685 = !DILocation(line: 0, scope: !18264, inlinedAt: !18686)
!18686 = distinct !DILocation(line: 209, column: 2, scope: !18681)
!18687 = !DILocation(line: 55, column: 2, scope: !18273, inlinedAt: !18688)
!18688 = distinct !DILocation(line: 145, column: 10, scope: !18264, inlinedAt: !18686)
!18689 = !DILocation(line: 0, scope: !18273, inlinedAt: !18688)
!18690 = !DILocation(line: 148, column: 2, scope: !18281, inlinedAt: !18686)
!18691 = !DILocation(line: 148, column: 2, scope: !18282, inlinedAt: !18686)
!18692 = !DILocation(line: 148, column: 2, scope: !18285, inlinedAt: !18686)
!18693 = !DILocation(line: 160, column: 2, scope: !18264, inlinedAt: !18686)
!18694 = !DILocation(line: 210, column: 9, scope: !18695)
!18695 = distinct !DILexicalBlock(scope: !18696, file: !2547, line: 209, column: 24)
!18696 = distinct !DILexicalBlock(scope: !18681, file: !2547, line: 209, column: 2)
!18697 = !DILocation(line: 0, scope: !18337, inlinedAt: !18698)
!18698 = distinct !DILocation(line: 209, column: 2, scope: !18696)
!18699 = !DILocation(line: 194, column: 2, scope: !18345, inlinedAt: !18698)
!18700 = !DILocation(line: 194, column: 2, scope: !18346, inlinedAt: !18698)
!18701 = !DILocation(line: 194, column: 2, scope: !18349, inlinedAt: !18698)
!18702 = !DILocation(line: 0, scope: !18351, inlinedAt: !18703)
!18703 = distinct !DILocation(line: 215, column: 2, scope: !18337, inlinedAt: !18698)
!18704 = !DILocation(line: 95, column: 2, scope: !18351, inlinedAt: !18703)
!18705 = !DILocation(line: 212, column: 2, scope: !18677)
!18706 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2547, file: !2547, line: 215, type: !12111, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18707)
!18707 = !{!18708, !18709, !18710, !18712, !18713, !18716, !18717}
!18708 = !DILocalVariable(name: "ticks", arg: 1, scope: !18706, file: !2547, line: 215, type: !116)
!18709 = !DILocalVariable(name: "is_idle", arg: 2, scope: !18706, file: !2547, line: 215, type: !492)
!18710 = !DILocalVariable(name: "__i", scope: !18711, file: !2547, line: 217, type: !18236)
!18711 = distinct !DILexicalBlock(scope: !18706, file: !2547, line: 217, column: 2)
!18712 = !DILocalVariable(name: "__key", scope: !18711, file: !2547, line: 217, type: !18236)
!18713 = !DILocalVariable(name: "next_to", scope: !18714, file: !2547, line: 218, type: !105)
!18714 = distinct !DILexicalBlock(scope: !18715, file: !2547, line: 217, column: 24)
!18715 = distinct !DILexicalBlock(scope: !18711, file: !2547, line: 217, column: 2)
!18716 = !DILocalVariable(name: "sooner", scope: !18714, file: !2547, line: 219, type: !492)
!18717 = !DILocalVariable(name: "imminent", scope: !18714, file: !2547, line: 221, type: !492)
!18718 = !DILocation(line: 0, scope: !18706)
!18719 = !DILocation(line: 0, scope: !18711)
!18720 = !DILocation(line: 0, scope: !18264, inlinedAt: !18721)
!18721 = distinct !DILocation(line: 217, column: 2, scope: !18711)
!18722 = !DILocation(line: 55, column: 2, scope: !18273, inlinedAt: !18723)
!18723 = distinct !DILocation(line: 145, column: 10, scope: !18264, inlinedAt: !18721)
!18724 = !DILocation(line: 0, scope: !18273, inlinedAt: !18723)
!18725 = !DILocation(line: 148, column: 2, scope: !18281, inlinedAt: !18721)
!18726 = !DILocation(line: 148, column: 2, scope: !18282, inlinedAt: !18721)
!18727 = !DILocation(line: 148, column: 2, scope: !18285, inlinedAt: !18721)
!18728 = !DILocation(line: 160, column: 2, scope: !18264, inlinedAt: !18721)
!18729 = !DILocation(line: 218, column: 17, scope: !18714)
!18730 = !DILocation(line: 0, scope: !18714)
!18731 = !DILocation(line: 221, column: 27, scope: !18714)
!18732 = !DILocation(line: 233, column: 17, scope: !18733)
!18733 = distinct !DILexicalBlock(scope: !18714, file: !2547, line: 233, column: 7)
!18734 = !DILocation(line: 234, column: 26, scope: !18735)
!18735 = distinct !DILexicalBlock(scope: !18733, file: !2547, line: 233, column: 56)
!18736 = !DILocation(line: 234, column: 4, scope: !18735)
!18737 = !DILocation(line: 235, column: 3, scope: !18735)
!18738 = !DILocation(line: 0, scope: !18337, inlinedAt: !18739)
!18739 = distinct !DILocation(line: 217, column: 2, scope: !18715)
!18740 = !DILocation(line: 194, column: 2, scope: !18345, inlinedAt: !18739)
!18741 = !DILocation(line: 194, column: 2, scope: !18346, inlinedAt: !18739)
!18742 = !DILocation(line: 194, column: 2, scope: !18349, inlinedAt: !18739)
!18743 = !DILocation(line: 0, scope: !18351, inlinedAt: !18744)
!18744 = distinct !DILocation(line: 215, column: 2, scope: !18337, inlinedAt: !18739)
!18745 = !DILocation(line: 95, column: 2, scope: !18351, inlinedAt: !18744)
!18746 = !DILocation(line: 237, column: 1, scope: !18706)
!18747 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2547, file: !2547, line: 239, type: !18748, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18750)
!18748 = !DISubroutineType(types: !18749)
!18749 = !{null, !116}
!18750 = !{!18751, !18752, !18753, !18755}
!18751 = !DILocalVariable(name: "ticks", arg: 1, scope: !18747, file: !2547, line: 239, type: !116)
!18752 = !DILocalVariable(name: "key", scope: !18747, file: !2547, line: 245, type: !18236)
!18753 = !DILocalVariable(name: "t", scope: !18754, file: !2547, line: 262, type: !2520)
!18754 = distinct !DILexicalBlock(scope: !18747, file: !2547, line: 261, column: 67)
!18755 = !DILocalVariable(name: "dt", scope: !18754, file: !2547, line: 263, type: !105)
!18756 = !DILocation(line: 0, scope: !18747)
!18757 = !DILocation(line: 242, column: 2, scope: !18747)
!18758 = !DILocation(line: 0, scope: !18264, inlinedAt: !18759)
!18759 = distinct !DILocation(line: 245, column: 25, scope: !18747)
!18760 = !DILocation(line: 55, column: 2, scope: !18273, inlinedAt: !18761)
!18761 = distinct !DILocation(line: 145, column: 10, scope: !18264, inlinedAt: !18759)
!18762 = !DILocation(line: 0, scope: !18273, inlinedAt: !18761)
!18763 = !DILocation(line: 148, column: 2, scope: !18281, inlinedAt: !18759)
!18764 = !DILocation(line: 148, column: 2, scope: !18282, inlinedAt: !18759)
!18765 = !DILocation(line: 148, column: 2, scope: !18285, inlinedAt: !18759)
!18766 = !DILocation(line: 160, column: 2, scope: !18264, inlinedAt: !18759)
!18767 = !DILocation(line: 261, column: 9, scope: !18747)
!18768 = !DILocation(line: 261, column: 17, scope: !18747)
!18769 = !DILocation(line: 261, column: 25, scope: !18747)
!18770 = !DILocation(line: 261, column: 37, scope: !18747)
!18771 = !DILocation(line: 261, column: 47, scope: !18747)
!18772 = !DILocation(line: 261, column: 44, scope: !18747)
!18773 = !DILocation(line: 261, column: 2, scope: !18747)
!18774 = !DILocation(line: 0, scope: !18754)
!18775 = !DILocation(line: 263, column: 12, scope: !18754)
!18776 = !DILocation(line: 265, column: 16, scope: !18754)
!18777 = !DILocation(line: 265, column: 13, scope: !18754)
!18778 = !DILocation(line: 266, column: 13, scope: !18754)
!18779 = !DILocation(line: 267, column: 3, scope: !18754)
!18780 = !DILocation(line: 0, scope: !18337, inlinedAt: !18781)
!18781 = distinct !DILocation(line: 269, column: 3, scope: !18754)
!18782 = !DILocation(line: 194, column: 2, scope: !18345, inlinedAt: !18781)
!18783 = !DILocation(line: 194, column: 2, scope: !18346, inlinedAt: !18781)
!18784 = !DILocation(line: 194, column: 2, scope: !18349, inlinedAt: !18781)
!18785 = !DILocation(line: 0, scope: !18351, inlinedAt: !18786)
!18786 = distinct !DILocation(line: 215, column: 2, scope: !18337, inlinedAt: !18781)
!18787 = !DILocation(line: 95, column: 2, scope: !18351, inlinedAt: !18786)
!18788 = !DILocation(line: 270, column: 6, scope: !18754)
!18789 = !DILocation(line: 270, column: 3, scope: !18754)
!18790 = !DILocation(line: 0, scope: !18264, inlinedAt: !18791)
!18791 = distinct !DILocation(line: 271, column: 9, scope: !18754)
!18792 = !DILocation(line: 55, column: 2, scope: !18273, inlinedAt: !18793)
!18793 = distinct !DILocation(line: 145, column: 10, scope: !18264, inlinedAt: !18791)
!18794 = !DILocation(line: 0, scope: !18273, inlinedAt: !18793)
!18795 = !DILocation(line: 148, column: 2, scope: !18281, inlinedAt: !18791)
!18796 = !DILocation(line: 148, column: 2, scope: !18282, inlinedAt: !18791)
!18797 = !DILocation(line: 148, column: 2, scope: !18285, inlinedAt: !18791)
!18798 = !DILocation(line: 160, column: 2, scope: !18264, inlinedAt: !18791)
!18799 = !DILocation(line: 272, column: 22, scope: !18754)
!18800 = distinct !{!18800, !18773, !18801}
!18801 = !DILocation(line: 273, column: 2, scope: !18747)
!18802 = !DILocation(line: 276, column: 19, scope: !18803)
!18803 = distinct !DILexicalBlock(scope: !18804, file: !2547, line: 275, column: 23)
!18804 = distinct !DILexicalBlock(scope: !18747, file: !2547, line: 275, column: 6)
!18805 = !DILocation(line: 277, column: 2, scope: !18803)
!18806 = !DILocation(line: 279, column: 15, scope: !18747)
!18807 = !DILocation(line: 279, column: 12, scope: !18747)
!18808 = !DILocation(line: 280, column: 21, scope: !18747)
!18809 = !DILocation(line: 282, column: 24, scope: !18747)
!18810 = !DILocation(line: 282, column: 2, scope: !18747)
!18811 = !DILocation(line: 0, scope: !18337, inlinedAt: !18812)
!18812 = distinct !DILocation(line: 284, column: 2, scope: !18747)
!18813 = !DILocation(line: 194, column: 2, scope: !18345, inlinedAt: !18812)
!18814 = !DILocation(line: 194, column: 2, scope: !18346, inlinedAt: !18812)
!18815 = !DILocation(line: 194, column: 2, scope: !18349, inlinedAt: !18812)
!18816 = !DILocation(line: 0, scope: !18351, inlinedAt: !18817)
!18817 = distinct !DILocation(line: 215, column: 2, scope: !18337, inlinedAt: !18812)
!18818 = !DILocation(line: 95, column: 2, scope: !18351, inlinedAt: !18817)
!18819 = !DILocation(line: 285, column: 1, scope: !18747)
!18820 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2547, file: !2547, line: 287, type: !18821, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18823)
!18821 = !DISubroutineType(types: !18822)
!18822 = !{!109}
!18823 = !{!18824, !18825, !18827}
!18824 = !DILocalVariable(name: "t", scope: !18820, file: !2547, line: 289, type: !114)
!18825 = !DILocalVariable(name: "__i", scope: !18826, file: !2547, line: 291, type: !18236)
!18826 = distinct !DILexicalBlock(scope: !18820, file: !2547, line: 291, column: 2)
!18827 = !DILocalVariable(name: "__key", scope: !18826, file: !2547, line: 291, type: !18236)
!18828 = !DILocation(line: 0, scope: !18820)
!18829 = !DILocation(line: 0, scope: !18826)
!18830 = !DILocation(line: 0, scope: !18264, inlinedAt: !18831)
!18831 = distinct !DILocation(line: 291, column: 2, scope: !18826)
!18832 = !DILocation(line: 55, column: 2, scope: !18273, inlinedAt: !18833)
!18833 = distinct !DILocation(line: 145, column: 10, scope: !18264, inlinedAt: !18831)
!18834 = !DILocation(line: 0, scope: !18273, inlinedAt: !18833)
!18835 = !DILocation(line: 148, column: 2, scope: !18281, inlinedAt: !18831)
!18836 = !DILocation(line: 148, column: 2, scope: !18282, inlinedAt: !18831)
!18837 = !DILocation(line: 148, column: 2, scope: !18285, inlinedAt: !18831)
!18838 = !DILocation(line: 160, column: 2, scope: !18264, inlinedAt: !18831)
!18839 = !DILocation(line: 292, column: 7, scope: !18840)
!18840 = distinct !DILexicalBlock(scope: !18841, file: !2547, line: 291, column: 24)
!18841 = distinct !DILexicalBlock(scope: !18826, file: !2547, line: 291, column: 2)
!18842 = !DILocation(line: 292, column: 19, scope: !18840)
!18843 = !DILocation(line: 0, scope: !18337, inlinedAt: !18844)
!18844 = distinct !DILocation(line: 291, column: 2, scope: !18841)
!18845 = !DILocation(line: 194, column: 2, scope: !18345, inlinedAt: !18844)
!18846 = !DILocation(line: 194, column: 2, scope: !18346, inlinedAt: !18844)
!18847 = !DILocation(line: 194, column: 2, scope: !18349, inlinedAt: !18844)
!18848 = !DILocation(line: 0, scope: !18351, inlinedAt: !18849)
!18849 = distinct !DILocation(line: 215, column: 2, scope: !18337, inlinedAt: !18844)
!18850 = !DILocation(line: 95, column: 2, scope: !18351, inlinedAt: !18849)
!18851 = !DILocation(line: 292, column: 17, scope: !18840)
!18852 = !DILocation(line: 294, column: 2, scope: !18820)
!18853 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2547, file: !2547, line: 297, type: !395, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !397)
!18854 = !DILocation(line: 300, column: 19, scope: !18853)
!18855 = !DILocation(line: 300, column: 9, scope: !18853)
!18856 = !DILocation(line: 300, column: 2, scope: !18853)
!18857 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2547, file: !2547, line: 306, type: !18821, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !397)
!18858 = !DILocation(line: 308, column: 9, scope: !18857)
!18859 = !DILocation(line: 308, column: 2, scope: !18857)
!18860 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2547, file: !2547, line: 319, type: !7898, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18861)
!18861 = !{!18862, !18863, !18864, !18865}
!18862 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !18860, file: !2547, line: 319, type: !113)
!18863 = !DILocalVariable(name: "start_cycles", scope: !18860, file: !2547, line: 328, type: !113)
!18864 = !DILocalVariable(name: "cycles_to_wait", scope: !18860, file: !2547, line: 331, type: !113)
!18865 = !DILocalVariable(name: "current_cycles", scope: !18866, file: !2547, line: 338, type: !113)
!18866 = distinct !DILexicalBlock(scope: !18867, file: !2547, line: 337, column: 11)
!18867 = distinct !DILexicalBlock(scope: !18868, file: !2547, line: 337, column: 2)
!18868 = distinct !DILexicalBlock(scope: !18860, file: !2547, line: 337, column: 2)
!18869 = !DILocation(line: 0, scope: !18860)
!18870 = !DILocation(line: 322, column: 19, scope: !18871)
!18871 = distinct !DILexicalBlock(scope: !18860, file: !2547, line: 322, column: 6)
!18872 = !DILocation(line: 322, column: 6, scope: !18860)
!18873 = !DILocation(line: 328, column: 26, scope: !18860)
!18874 = !DILocation(line: 333, column: 43, scope: !18860)
!18875 = !DILocation(line: 337, column: 2, scope: !18860)
!18876 = !DILocation(line: 338, column: 29, scope: !18866)
!18877 = !DILocation(line: 0, scope: !18866)
!18878 = !DILocation(line: 341, column: 23, scope: !18879)
!18879 = distinct !DILexicalBlock(scope: !18866, file: !2547, line: 341, column: 7)
!18880 = !DILocation(line: 341, column: 39, scope: !18879)
!18881 = !DILocation(line: 349, column: 1, scope: !18860)
!18882 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !122, file: !122, line: 1675, type: !395, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !397)
!18883 = !DILocation(line: 1677, column: 9, scope: !18882)
!18884 = !DILocation(line: 1677, column: 2, scope: !18882)
!18885 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3486, file: !3486, line: 24, type: !395, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !397)
!18886 = !DILocation(line: 26, column: 9, scope: !18885)
!18887 = !DILocation(line: 26, column: 2, scope: !18885)
!18888 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2547, file: !2547, line: 364, type: !18889, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !18891)
!18889 = !DISubroutineType(types: !18890)
!18890 = !{!114, !18226}
!18891 = !{!18892, !18893}
!18892 = !DILocalVariable(name: "timeout", arg: 1, scope: !18888, file: !2547, line: 364, type: !18226)
!18893 = !DILocalVariable(name: "dt", scope: !18888, file: !2547, line: 366, type: !107)
!18894 = !DILocation(line: 0, scope: !18888)
!18895 = !DILocation(line: 368, column: 6, scope: !18888)
!18896 = !DILocation(line: 371, column: 10, scope: !18897)
!18897 = distinct !DILexicalBlock(scope: !18898, file: !2547, line: 370, column: 47)
!18898 = distinct !DILexicalBlock(scope: !18899, file: !2547, line: 370, column: 13)
!18899 = distinct !DILexicalBlock(scope: !18888, file: !2547, line: 368, column: 6)
!18900 = !DILocation(line: 371, column: 3, scope: !18897)
!18901 = !DILocation(line: 376, column: 58, scope: !18902)
!18902 = distinct !DILexicalBlock(scope: !18903, file: !2547, line: 376, column: 7)
!18903 = distinct !DILexicalBlock(scope: !18898, file: !2547, line: 372, column: 9)
!18904 = !DILocation(line: 376, column: 7, scope: !18903)
!18905 = !DILocation(line: 376, column: 43, scope: !18902)
!18906 = !DILocation(line: 377, column: 4, scope: !18907)
!18907 = distinct !DILexicalBlock(scope: !18902, file: !2547, line: 376, column: 64)
!18908 = !DILocation(line: 379, column: 10, scope: !18903)
!18909 = !DILocation(line: 379, column: 33, scope: !18903)
!18910 = !DILocation(line: 379, column: 31, scope: !18903)
!18911 = !DILocation(line: 379, column: 3, scope: !18903)
!18912 = !DILocation(line: 0, scope: !18899)
!18913 = !DILocation(line: 381, column: 1, scope: !18888)
!18914 = distinct !DISubprogram(name: "boot_banner", scope: !18915, file: !18915, line: 26, type: !266, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3298, retainedNodes: !397)
!18915 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18916 = !DILocation(line: 34, column: 2, scope: !18914)
!18917 = !DILocation(line: 36, column: 1, scope: !18914)
!18918 = distinct !DISubprogram(name: "statics_init", scope: !2577, file: !2577, line: 21, type: !2583, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !18919)
!18919 = !{!18920, !18921}
!18920 = !DILocalVariable(name: "unused", arg: 1, scope: !18918, file: !2577, line: 21, type: !2585)
!18921 = !DILocalVariable(name: "h", scope: !18922, file: !2577, line: 24, type: !18923)
!18922 = distinct !DILexicalBlock(scope: !18918, file: !2577, line: 24, column: 2)
!18923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18924, size: 32)
!18924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !18925)
!18925 = !{!18926, !18932, !18938}
!18926 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18924, file: !122, line: 5074, baseType: !18927, size: 96)
!18927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !18928)
!18928 = !{!18929, !18930, !18931}
!18929 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18927, file: !226, line: 57, baseType: !229, size: 32)
!18930 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !18927, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!18931 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !18927, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!18932 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !18924, file: !122, line: 5075, baseType: !18933, size: 64, offset: 96)
!18933 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !18934)
!18934 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !18935)
!18935 = !{!18936}
!18936 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !18934, file: !163, line: 232, baseType: !18937, size: 64)
!18937 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2563)
!18938 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !18924, file: !122, line: 5076, baseType: !18939, size: 32, offset: 160)
!18939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !18940)
!18940 = !{!18941}
!18941 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !18939, file: !236, line: 52, baseType: !22, size: 32)
!18942 = !DILocation(line: 0, scope: !18918)
!18943 = !DILocation(line: 0, scope: !18922)
!18944 = !DILocation(line: 24, column: 2, scope: !18945)
!18945 = distinct !DILexicalBlock(scope: !18946, file: !2577, line: 24, column: 2)
!18946 = distinct !DILexicalBlock(scope: !18947, file: !2577, line: 24, column: 2)
!18947 = distinct !DILexicalBlock(scope: !18922, file: !2577, line: 24, column: 2)
!18948 = !DILocation(line: 24, column: 2, scope: !18949)
!18949 = distinct !DILexicalBlock(scope: !18950, file: !2577, line: 24, column: 2)
!18950 = distinct !DILexicalBlock(scope: !18945, file: !2577, line: 24, column: 2)
!18951 = !DILocation(line: 24, column: 2, scope: !18946)
!18952 = !DILocation(line: 24, column: 2, scope: !18922)
!18953 = !DILocation(line: 52, column: 2, scope: !18918)
!18954 = !DILocation(line: 49, column: 27, scope: !18955)
!18955 = distinct !DILexicalBlock(scope: !18956, file: !2577, line: 48, column: 3)
!18956 = distinct !DILexicalBlock(scope: !18947, file: !2577, line: 24, column: 36)
!18957 = !DILocation(line: 49, column: 45, scope: !18955)
!18958 = !DILocation(line: 49, column: 4, scope: !18955)
!18959 = !DILocation(line: 24, column: 2, scope: !18947)
!18960 = !DILocation(line: 24, column: 2, scope: !18950)
!18961 = distinct !{!18961, !18952, !18962}
!18962 = !DILocation(line: 51, column: 2, scope: !18922)
!18963 = distinct !DISubprogram(name: "k_heap_init", scope: !2577, file: !2577, line: 13, type: !18964, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !18966)
!18964 = !DISubroutineType(types: !18965)
!18965 = !{null, !18923, !104, !111}
!18966 = !{!18967, !18968, !18969}
!18967 = !DILocalVariable(name: "h", arg: 1, scope: !18963, file: !2577, line: 13, type: !18923)
!18968 = !DILocalVariable(name: "mem", arg: 2, scope: !18963, file: !2577, line: 13, type: !104)
!18969 = !DILocalVariable(name: "bytes", arg: 3, scope: !18963, file: !2577, line: 13, type: !111)
!18970 = !DILocation(line: 0, scope: !18963)
!18971 = !DILocation(line: 15, column: 19, scope: !18963)
!18972 = !DILocation(line: 15, column: 2, scope: !18963)
!18973 = !DILocation(line: 16, column: 20, scope: !18963)
!18974 = !DILocation(line: 16, column: 2, scope: !18963)
!18975 = !DILocation(line: 19, column: 1, scope: !18963)
!18976 = distinct !DISubprogram(name: "z_waitq_init", scope: !14535, file: !14535, line: 47, type: !18977, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !18980)
!18977 = !DISubroutineType(types: !18978)
!18978 = !{null, !18979}
!18979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18933, size: 32)
!18980 = !{!18981}
!18981 = !DILocalVariable(name: "w", arg: 1, scope: !18976, file: !14535, line: 47, type: !18979)
!18982 = !DILocation(line: 0, scope: !18976)
!18983 = !DILocation(line: 49, column: 21, scope: !18976)
!18984 = !DILocation(line: 49, column: 2, scope: !18976)
!18985 = !DILocation(line: 50, column: 1, scope: !18976)
!18986 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !18987, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !18990)
!18987 = !DISubroutineType(types: !18988)
!18988 = !{null, !18989}
!18989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18937, size: 32)
!18990 = !{!18991}
!18991 = !DILocalVariable(name: "list", arg: 1, scope: !18986, file: !137, line: 197, type: !18989)
!18992 = !DILocation(line: 0, scope: !18986)
!18993 = !DILocation(line: 199, column: 8, scope: !18986)
!18994 = !DILocation(line: 199, column: 13, scope: !18986)
!18995 = !DILocation(line: 200, column: 8, scope: !18986)
!18996 = !DILocation(line: 200, column: 13, scope: !18986)
!18997 = !DILocation(line: 201, column: 1, scope: !18986)
!18998 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2577, file: !2577, line: 64, type: !18999, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !19005)
!18999 = !DISubroutineType(types: !19000)
!19000 = !{!104, !18923, !111, !111, !19001}
!19001 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !19002)
!19002 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !19003)
!19003 = !{!19004}
!19004 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !19002, file: !108, line: 66, baseType: !107, size: 64)
!19005 = !{!19006, !19007, !19008, !19009, !19010, !19011, !19012, !19013, !19018}
!19006 = !DILocalVariable(name: "h", arg: 1, scope: !18998, file: !2577, line: 64, type: !18923)
!19007 = !DILocalVariable(name: "align", arg: 2, scope: !18998, file: !2577, line: 64, type: !111)
!19008 = !DILocalVariable(name: "bytes", arg: 3, scope: !18998, file: !2577, line: 64, type: !111)
!19009 = !DILocalVariable(name: "timeout", arg: 4, scope: !18998, file: !2577, line: 65, type: !19001)
!19010 = !DILocalVariable(name: "now", scope: !18998, file: !2577, line: 67, type: !109)
!19011 = !DILocalVariable(name: "end", scope: !18998, file: !2577, line: 67, type: !109)
!19012 = !DILocalVariable(name: "ret", scope: !18998, file: !2577, line: 68, type: !104)
!19013 = !DILocalVariable(name: "key", scope: !18998, file: !2577, line: 72, type: !19014)
!19014 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !19015)
!19015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !19016)
!19016 = !{!19017}
!19017 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !19015, file: !236, line: 33, baseType: !105, size: 32)
!19018 = !DILocalVariable(name: "blocked_alloc", scope: !18998, file: !2577, line: 78, type: !492)
!19019 = !DILocation(line: 0, scope: !18998)
!19020 = !DILocation(line: 67, column: 21, scope: !18998)
!19021 = !DILocation(line: 70, column: 8, scope: !18998)
!19022 = !DILocation(line: 72, column: 41, scope: !18998)
!19023 = !DILocalVariable(name: "l", arg: 1, scope: !19024, file: !236, line: 136, type: !19027)
!19024 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !19025, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !19028)
!19025 = !DISubroutineType(types: !19026)
!19026 = !{!19014, !19027}
!19027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18939, size: 32)
!19028 = !{!19023, !19029}
!19029 = !DILocalVariable(name: "k", scope: !19024, file: !236, line: 139, type: !19014)
!19030 = !DILocation(line: 0, scope: !19024, inlinedAt: !19031)
!19031 = distinct !DILocation(line: 72, column: 25, scope: !18998)
!19032 = !DILocation(line: 55, column: 2, scope: !19033, inlinedAt: !19037)
!19033 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7485, file: !7485, line: 42, type: !7486, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !19034)
!19034 = !{!19035, !19036}
!19035 = !DILocalVariable(name: "key", scope: !19033, file: !7485, line: 44, type: !32)
!19036 = !DILocalVariable(name: "tmp", scope: !19033, file: !7485, line: 53, type: !32)
!19037 = distinct !DILocation(line: 145, column: 10, scope: !19024, inlinedAt: !19031)
!19038 = !{i64 2041412}
!19039 = !DILocation(line: 0, scope: !19033, inlinedAt: !19037)
!19040 = !DILocation(line: 148, column: 2, scope: !19041, inlinedAt: !19031)
!19041 = distinct !DILexicalBlock(scope: !19042, file: !236, line: 148, column: 2)
!19042 = distinct !DILexicalBlock(scope: !19024, file: !236, line: 148, column: 2)
!19043 = !DILocation(line: 148, column: 2, scope: !19042, inlinedAt: !19031)
!19044 = !DILocation(line: 148, column: 2, scope: !19045, inlinedAt: !19031)
!19045 = distinct !DILexicalBlock(scope: !19041, file: !236, line: 148, column: 2)
!19046 = !DILocation(line: 160, column: 2, scope: !19024, inlinedAt: !19031)
!19047 = !DILocation(line: 1031, column: 3, scope: !19048, inlinedAt: !19051)
!19048 = distinct !DISubprogram(name: "__get_IPSR", scope: !7803, file: !7803, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !19049)
!19049 = !{!19050}
!19050 = !DILocalVariable(name: "result", scope: !19048, file: !7803, line: 1029, type: !113)
!19051 = distinct !DILocation(line: 48, column: 10, scope: !19052, inlinedAt: !19053)
!19052 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8850, file: !8850, line: 46, type: !8851, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !397)
!19053 = distinct !DILocation(line: 76, column: 2, scope: !19054)
!19054 = distinct !DILexicalBlock(scope: !19055, file: !2577, line: 76, column: 2)
!19055 = distinct !DILexicalBlock(scope: !18998, file: !2577, line: 76, column: 2)
!19056 = !{i64 2915987}
!19057 = !DILocation(line: 0, scope: !19048, inlinedAt: !19051)
!19058 = !DILocation(line: 48, column: 9, scope: !19052, inlinedAt: !19053)
!19059 = !DILocation(line: 76, column: 2, scope: !19054)
!19060 = !DILocation(line: 81, column: 9, scope: !19061)
!19061 = distinct !DILexicalBlock(scope: !18998, file: !2577, line: 80, column: 22)
!19062 = !DILocation(line: 83, column: 9, scope: !19061)
!19063 = !DILocation(line: 85, column: 12, scope: !19064)
!19064 = distinct !DILexicalBlock(scope: !19061, file: !2577, line: 84, column: 7)
!19065 = !DILocation(line: 85, column: 21, scope: !19064)
!19066 = !DILocation(line: 76, column: 2, scope: !19067)
!19067 = distinct !DILexicalBlock(scope: !19054, file: !2577, line: 76, column: 2)
!19068 = !DILocation(line: 85, column: 30, scope: !19064)
!19069 = !DILocation(line: 85, column: 37, scope: !19064)
!19070 = !DILocation(line: 84, column: 7, scope: !19061)
!19071 = !DILocation(line: 99, column: 10, scope: !19061)
!19072 = !DILocation(line: 0, scope: !19024, inlinedAt: !19073)
!19073 = distinct !DILocation(line: 101, column: 9, scope: !19061)
!19074 = !DILocation(line: 55, column: 2, scope: !19033, inlinedAt: !19075)
!19075 = distinct !DILocation(line: 145, column: 10, scope: !19024, inlinedAt: !19073)
!19076 = !DILocation(line: 0, scope: !19033, inlinedAt: !19075)
!19077 = !DILocation(line: 148, column: 2, scope: !19041, inlinedAt: !19073)
!19078 = !DILocation(line: 148, column: 2, scope: !19042, inlinedAt: !19073)
!19079 = !DILocation(line: 148, column: 2, scope: !19045, inlinedAt: !19073)
!19080 = !DILocation(line: 160, column: 2, scope: !19024, inlinedAt: !19073)
!19081 = distinct !{!19081, !19082, !19083}
!19082 = !DILocation(line: 80, column: 2, scope: !18998)
!19083 = !DILocation(line: 102, column: 2, scope: !18998)
!19084 = !DILocalVariable(name: "key", arg: 2, scope: !19085, file: !236, line: 190, type: !19014)
!19085 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !19086, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !19088)
!19086 = !DISubroutineType(types: !19087)
!19087 = !{null, !19027, !19014}
!19088 = !{!19089, !19084}
!19089 = !DILocalVariable(name: "l", arg: 1, scope: !19085, file: !236, line: 189, type: !19027)
!19090 = !DILocation(line: 0, scope: !19085, inlinedAt: !19091)
!19091 = distinct !DILocation(line: 106, column: 2, scope: !18998)
!19092 = !DILocation(line: 194, column: 2, scope: !19093, inlinedAt: !19091)
!19093 = distinct !DILexicalBlock(scope: !19094, file: !236, line: 194, column: 2)
!19094 = distinct !DILexicalBlock(scope: !19085, file: !236, line: 194, column: 2)
!19095 = !DILocation(line: 194, column: 2, scope: !19094, inlinedAt: !19091)
!19096 = !DILocation(line: 194, column: 2, scope: !19097, inlinedAt: !19091)
!19097 = distinct !DILexicalBlock(scope: !19093, file: !236, line: 194, column: 2)
!19098 = !DILocalVariable(name: "key", arg: 1, scope: !19099, file: !7485, line: 84, type: !32)
!19099 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7485, file: !7485, line: 84, type: !7496, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !19100)
!19100 = !{!19098}
!19101 = !DILocation(line: 0, scope: !19099, inlinedAt: !19102)
!19102 = distinct !DILocation(line: 215, column: 2, scope: !19085, inlinedAt: !19091)
!19103 = !DILocation(line: 95, column: 2, scope: !19099, inlinedAt: !19102)
!19104 = !{i64 2042229}
!19105 = !DILocation(line: 107, column: 2, scope: !18998)
!19106 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2577, file: !2577, line: 110, type: !19107, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !19109)
!19107 = !DISubroutineType(types: !19108)
!19108 = !{!104, !18923, !111, !19001}
!19109 = !{!19110, !19111, !19112, !19113}
!19110 = !DILocalVariable(name: "h", arg: 1, scope: !19106, file: !2577, line: 110, type: !18923)
!19111 = !DILocalVariable(name: "bytes", arg: 2, scope: !19106, file: !2577, line: 110, type: !111)
!19112 = !DILocalVariable(name: "timeout", arg: 3, scope: !19106, file: !2577, line: 110, type: !19001)
!19113 = !DILocalVariable(name: "ret", scope: !19106, file: !2577, line: 114, type: !104)
!19114 = !DILocation(line: 0, scope: !19106)
!19115 = !DILocation(line: 114, column: 14, scope: !19106)
!19116 = !DILocation(line: 118, column: 2, scope: !19106)
!19117 = distinct !DISubprogram(name: "k_heap_free", scope: !2577, file: !2577, line: 121, type: !19118, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !19120)
!19118 = !DISubroutineType(types: !19119)
!19119 = !{null, !18923, !104}
!19120 = !{!19121, !19122, !19123}
!19121 = !DILocalVariable(name: "h", arg: 1, scope: !19117, file: !2577, line: 121, type: !18923)
!19122 = !DILocalVariable(name: "mem", arg: 2, scope: !19117, file: !2577, line: 121, type: !104)
!19123 = !DILocalVariable(name: "key", scope: !19117, file: !2577, line: 123, type: !19014)
!19124 = !DILocation(line: 0, scope: !19117)
!19125 = !DILocation(line: 123, column: 41, scope: !19117)
!19126 = !DILocation(line: 0, scope: !19024, inlinedAt: !19127)
!19127 = distinct !DILocation(line: 123, column: 25, scope: !19117)
!19128 = !DILocation(line: 55, column: 2, scope: !19033, inlinedAt: !19129)
!19129 = distinct !DILocation(line: 145, column: 10, scope: !19024, inlinedAt: !19127)
!19130 = !DILocation(line: 0, scope: !19033, inlinedAt: !19129)
!19131 = !DILocation(line: 148, column: 2, scope: !19041, inlinedAt: !19127)
!19132 = !DILocation(line: 148, column: 2, scope: !19042, inlinedAt: !19127)
!19133 = !DILocation(line: 148, column: 2, scope: !19045, inlinedAt: !19127)
!19134 = !DILocation(line: 160, column: 2, scope: !19024, inlinedAt: !19127)
!19135 = !DILocation(line: 125, column: 20, scope: !19117)
!19136 = !DILocation(line: 125, column: 2, scope: !19117)
!19137 = !DILocation(line: 128, column: 60, scope: !19138)
!19138 = distinct !DILexicalBlock(scope: !19117, file: !2577, line: 128, column: 6)
!19139 = !DILocation(line: 128, column: 43, scope: !19138)
!19140 = !DILocation(line: 128, column: 68, scope: !19138)
!19141 = !DILocation(line: 128, column: 6, scope: !19117)
!19142 = !DILocation(line: 129, column: 3, scope: !19143)
!19143 = distinct !DILexicalBlock(scope: !19138, file: !2577, line: 128, column: 74)
!19144 = !DILocation(line: 130, column: 2, scope: !19143)
!19145 = !DILocation(line: 0, scope: !19085, inlinedAt: !19146)
!19146 = distinct !DILocation(line: 131, column: 3, scope: !19147)
!19147 = distinct !DILexicalBlock(scope: !19138, file: !2577, line: 130, column: 9)
!19148 = !DILocation(line: 194, column: 2, scope: !19093, inlinedAt: !19146)
!19149 = !DILocation(line: 194, column: 2, scope: !19094, inlinedAt: !19146)
!19150 = !DILocation(line: 194, column: 2, scope: !19097, inlinedAt: !19146)
!19151 = !DILocation(line: 0, scope: !19099, inlinedAt: !19152)
!19152 = distinct !DILocation(line: 215, column: 2, scope: !19085, inlinedAt: !19146)
!19153 = !DILocation(line: 95, column: 2, scope: !19099, inlinedAt: !19152)
!19154 = !DILocation(line: 133, column: 1, scope: !19117)
