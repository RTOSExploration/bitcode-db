; ModuleID = 'build/96b_carbon/benchmark/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.zbus_observer = type { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_spinlock = type {}
%struct.zbus_channel = type { i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct.zbus_observer** }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct.z_heap_bucket = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.external_data_msg = type { i8*, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.bm_msg = type { [256 x i8] }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [85 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [85 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233268 to i8*), void (i8*)* inttoptr (i32 134231093 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233268 to i8*), void (i8*)* inttoptr (i32 134231073 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233268 to i8*), void (i8*)* inttoptr (i32 134231063 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233268 to i8*), void (i8*)* inttoptr (i32 134231163 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233268 to i8*), void (i8*)* inttoptr (i32 134231153 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233268 to i8*), void (i8*)* inttoptr (i32 134231143 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233268 to i8*), void (i8*)* inttoptr (i32 134231133 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233268 to i8*), void (i8*)* inttoptr (i32 134231123 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233268 to i8*), void (i8*)* inttoptr (i32 134231113 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233268 to i8*), void (i8*)* inttoptr (i32 134231103 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233268 to i8*), void (i8*)* inttoptr (i32 134231083 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [59 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_producer_thread_id to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_bm_channel to i8*), i8* bitcast (%struct.zbus_channel* @bm_channel to i8*), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s1, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s2, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s3, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s4, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s5, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s6, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s7, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s8, i32 0, i32 0), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_zbus to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_20 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_23 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_20 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_23 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_47 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_50 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_47 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_50 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.k_heap* @_system_heap to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@_zbus_mutex_bm_channel = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_bm_channel, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_bm_channel, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_bm_channel", align 4, !dbg !25
@_zbus_message_bm_channel = internal global %struct.external_data_msg zeroinitializer, align 4, !dbg !350
@_zbus_observers_bm_channel = internal constant [9 x %struct.zbus_observer*] [%struct.zbus_observer* @s1, %struct.zbus_observer* @s2, %struct.zbus_observer* @s3, %struct.zbus_observer* @s4, %struct.zbus_observer* @s5, %struct.zbus_observer* @s6, %struct.zbus_observer* @s7, %struct.zbus_observer* @s8, %struct.zbus_observer* null], align 4, !dbg !357
@bm_channel = dso_local constant %struct.zbus_channel { i16 8, i8* null, i8* bitcast (%struct.external_data_msg* @_zbus_message_bm_channel to i8*), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_bm_channel, %struct.zbus_observer** getelementptr inbounds ([9 x %struct.zbus_observer*], [9 x %struct.zbus_observer*]* @_zbus_observers_bm_channel, i32 0, i32 0) }, section "._zbus_channel.static.bm_channel", align 4, !dbg !112
@s1 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s1", align 4, !dbg !290
@s2 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s2", align 4, !dbg !292
@s3 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s3", align 4, !dbg !294
@s4 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s4", align 4, !dbg !296
@s5 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s5", align 4, !dbg !298
@s6 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s6", align 4, !dbg !300
@s7 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s7", align 4, !dbg !302
@s8 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s8", align 4, !dbg !304
@_k_thread_obj_producer_thread_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !348
@_k_thread_stack_producer_thread_id = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/benchmark.c\22.0", align 64, !dbg !343
@.str = private unnamed_addr constant [19 x i8] c"producer_thread_id\00", align 1
@_k_thread_data_producer_thread_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_producer_thread_id, %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @_k_thread_stack_producer_thread_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @producer_thread to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 5, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_producer_thread_id", align 4, !dbg !306
@producer_thread_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_producer_thread_id, align 4, !dbg !339
@count = internal unnamed_addr global i64 0, align 8, !dbg !362
@.str.1 = private unnamed_addr constant [80 x i8] c"%c: Benchmark 1 to %d: Dynamic memory, %sSYNC transmission and message size %u\0A\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [41 x i8] c"%c: Something wrong. Duration is zero!\0A\0A\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"%c: Bytes sent = %lld, received = %llu\0A\00", align 1
@.str.5 = private unnamed_addr constant [37 x i8] c"%c: Average data rate: %llu.%lluB/s\0A\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"%c: Duration: %ums\0A\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"\0A@%u\0A\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !364
@.str.1.10 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !388
@.str.15 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !398
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !448
@.str.21 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.23 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.24 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.22 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.26 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.27 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.25 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.28 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.29 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.30 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.31 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.45 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.41 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.42 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.43 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.44 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.38 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.39 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.36 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.15.37 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.17 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.18 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.19 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.21.35 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.22 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.23 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.24 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.25 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.26 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.27 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.28.34 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.29 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.51 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !477
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !608
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !483
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !617
@.str.57 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.1.58 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !653
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.69, i32 0, i32 0), %struct.z_heap_bucket { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.70, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !663
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !668
@.str.69 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.70 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.71 = private unnamed_addr constant [5 x i8] c"zbus\00", align 1
@log_const_zbus = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i32 0, i32 0), i8 3 }, section ".log_const_zbus", align 4, !dbg !688
@.str.1.73 = private unnamed_addr constant [60 x i8] c"%c: Observer %s at %p could not be notified. Error code %d\0A\00", align 1
@.str.2.74 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !700
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !871
@.str.81 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !833
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !816
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.81, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !789
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !805
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !835
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !848
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !850
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !852
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !854
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !856
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !858
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !860
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !862
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !864
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !866
@__devicehdl_dts_ord_9 = dso_local constant [14 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 32767], section ".__device_handles_pass2", align 2, !dbg !876
@.str.83 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !907
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1004
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !993
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1045
@__devicehdl_dts_ord_25 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !896
@.str.92 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1111
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1390
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1360
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1346
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1288
@__devicehdl_dts_ord_20 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !894
@.str.1.93 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1392
@__devstate_dts_ord_20 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1364
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1362
@__init___device_dts_ord_20 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_20 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1302
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !892
@.str.2.94 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1405
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1368
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1366
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1311
@__devicehdl_dts_ord_23 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !890
@.str.3.95 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1407
@__devstate_dts_ord_23 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1372
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1370
@__init___device_dts_ord_23 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_23 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1320
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !888
@.str.4.96 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1409
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1376
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1374
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1326
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !886
@.str.5.97 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1411
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1380
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1378
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1332
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !884
@.str.6.98 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1413
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1384
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1382
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1338
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !882
@.str.7.99 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1415
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1388
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1386
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1344
@.str.103 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.103, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1417
@__devicehdl_dts_ord_47 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !902
@.str.1.106 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_47 }, align 4, !dbg !1589
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1644
@__devstate_dts_ord_47 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1583
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1646
@__device_dts_ord_47 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.106, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_47, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_47, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1562
@__init___device_dts_ord_47 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_47 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1564
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !900
@.str.2.109 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44 }, align 4, !dbg !1652
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1585
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1662
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.109, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1573
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1575
@__devicehdl_dts_ord_50 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !898
@.str.3.110 = private unnamed_addr constant [16 x i8] c"serial@40011400\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073812480 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_50 }, align 4, !dbg !1664
@__devstate_dts_ord_50 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1587
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1674
@__device_dts_ord_50 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.110, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_50, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_50, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1579
@__init___device_dts_ord_50 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_50 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1581
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1633
@__pinctrl_dev_config__device_dts_ord_47 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_47, i32 0, i32 0), i8 1 }, align 4, !dbg !1636
@__pinctrl_states__device_dts_ord_47 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_47, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1638
@__pinctrl_state_pins_0__device_dts_ord_47 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1641
@.str.4.108 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.5.113 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.6.115 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.7.116 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.83, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([14 x i16], [14 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !977
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1654
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1656
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1658
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !1660
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 32 }], align 4, !dbg !1666
@__pinctrl_dev_config__device_dts_ord_50 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_50, i32 0, i32 0), i8 1 }, align 4, !dbg !1668
@__pinctrl_states__device_dts_ord_50 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_50, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1670
@__pinctrl_state_pins_0__device_dts_ord_50 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1224, i32 512 }, %struct._thread_arch { i32 1256, i32 0 }], align 4, !dbg !1672
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.8 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1681
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1790
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1792
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1788
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1759
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_25, %struct.device* @__device_dts_ord_20, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_23, %struct.device* @__device_dts_ord_73, %struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1794
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.92, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1286
@__device_dts_ord_20 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.93, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_20, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_20, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1300
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.94, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1309
@__device_dts_ord_23 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.95, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_23, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_23, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1318
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.96, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1324
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.97, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1330
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.98, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1336
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.99, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1342
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1884
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1926
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1929
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1936
@.str.151 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.155 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.156 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.157 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.161 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.162 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.163 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.164 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.165 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.160 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.159 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.161, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.162, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.163, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.164, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.165, i32 0, i32 0)], align 4
@.str.167 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.167, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1943
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2163
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2152
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2158
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2170
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2175
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.176 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.182, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.183, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.184, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.185, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.186, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.180, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.187, i32 0, i32 0)], align 4, !dbg !2203
@.str.181 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.182 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.183 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.184 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.185 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.186 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.180 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.187 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2315
@.str.8.179 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2328
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2436
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2544
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2547
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2549
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2168
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2160
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2551
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2587
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2585
@kheap__system_heap = dso_local global [1024 x i8] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/mempool.c\22.kheap_buf__system_heap", align 8, !dbg !2590
@_system_heap = dso_local global %struct.k_heap { %struct.sys_heap { %struct.z_heap* null, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @kheap__system_heap, i32 0, i32 0), i32 1024 }, %struct._wait_q_t zeroinitializer, %struct.k_spinlock zeroinitializer }, section "._k_heap.static._system_heap", align 4, !dbg !2595
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2030
@.str.288 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2630
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3382 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3384, !srcloc !3385
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3386, !srcloc !3387
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3388, !srcloc !3389
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3390, !srcloc !3391
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3392, !srcloc !3393
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3394, !srcloc !3395
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3396, !srcloc !3397
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3398, !srcloc !3399
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3400, !srcloc !3401
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3402, !srcloc !3403
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3404, !srcloc !3405
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3406, !srcloc !3407
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3408, !srcloc !3409
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3410, !srcloc !3411
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3412, !srcloc !3413
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3414, !srcloc !3415
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3416, !srcloc !3417
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3418, !srcloc !3419
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3420, !srcloc !3421
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3422, !srcloc !3423
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3424, !srcloc !3425
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3426, !srcloc !3427
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3428, !srcloc !3429
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3430, !srcloc !3431
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3432, !srcloc !3433
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3434, !srcloc !3435
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3436, !srcloc !3437
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3438, !srcloc !3441
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3442, !srcloc !3443
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3444, !srcloc !3445
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3446, !srcloc !3447
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3448, !srcloc !3449
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3450, !srcloc !3451
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3452, !srcloc !3453
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3454, !srcloc !3455
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3456, !srcloc !3457
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3458, !srcloc !3459
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3460, !srcloc !3461
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3462, !srcloc !3463
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3464, !srcloc !3465
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3466, !srcloc !3467
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3468, !srcloc !3469
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3470, !srcloc !3471
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3472, !srcloc !3473
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3474, !srcloc !3475
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3476, !srcloc !3477
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3478, !srcloc !3479
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3480, !srcloc !3481
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3482, !srcloc !3483
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3484, !srcloc !3485
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3486, !srcloc !3487
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3488, !srcloc !3489
  ret void, !dbg !3490
}

; Function Attrs: noinline nounwind optsize
define internal void @s_cb(%struct.zbus_channel* nocapture noundef readonly %0) #1 !dbg !3493 {
  %2 = alloca [256 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3495, metadata !DIExpression()), !dbg !3506
  %3 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %3) #25, !dbg !3507
  call void @llvm.dbg.declare(metadata %struct.bm_msg* undef, metadata !3496, metadata !DIExpression()), !dbg !3508
  %4 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* noundef %0) #26, !dbg !3509
  call void @llvm.dbg.value(metadata i8* %4, metadata !3503, metadata !DIExpression()), !dbg !3506
  %5 = bitcast i8* %4 to i8**, !dbg !3510
  %6 = load i8*, i8** %5, align 4, !dbg !3510
  %7 = call i8* @memcpy(i8* noundef nonnull %3, i8* noundef %6, i32 noundef 256) #27, !dbg !3511
  %8 = load i64, i64* @count, align 8, !dbg !3512
  %9 = add i64 %8, 256, !dbg !3512
  store i64 %9, i64* @count, align 8, !dbg !3512
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %3) #25, !dbg !3513
  ret void, !dbg !3513
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* nocapture noundef readonly %0) unnamed_addr #4 !dbg !3514 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3518, metadata !DIExpression()), !dbg !3519
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 2, !dbg !3520
  %3 = load i8*, i8** %2, align 4, !dbg !3520
  ret i8* %3, !dbg !3521
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define internal void @producer_thread() #1 !dbg !3522 {
  %1 = alloca %struct.bm_msg, align 1
  %2 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3535
  %3 = zext i8 %2 to i32, !dbg !3535
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i32 0, i32 0), i32 noundef %3, i32 noundef 8, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0), i32 noundef 256) #27, !dbg !3535
  %4 = getelementptr inbounds %struct.bm_msg, %struct.bm_msg* %1, i32 0, i32 0, i32 0, !dbg !3540
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %4) #25, !dbg !3540
  call void @llvm.dbg.declare(metadata %struct.bm_msg* %1, metadata !3524, metadata !DIExpression()), !dbg !3541
  call void @llvm.dbg.value(metadata i64 255, metadata !3527, metadata !DIExpression()), !dbg !3542
  br label %10, !dbg !3543

5:                                                ; preds = %10
  %6 = tail call i32 @zbus_chan_claim(%struct.zbus_channel* noundef nonnull @bm_channel, [1 x i64] zeroinitializer) #27, !dbg !3544
  call void @llvm.dbg.value(metadata %struct.external_data_msg* @_zbus_message_bm_channel, metadata !3525, metadata !DIExpression()), !dbg !3545
  %7 = tail call i8* @k_malloc(i32 noundef 256) #27, !dbg !3546
  store i8* %7, i8** getelementptr inbounds (%struct.external_data_msg, %struct.external_data_msg* @_zbus_message_bm_channel, i32 0, i32 0), align 4, !dbg !3547
  store i32 256, i32* getelementptr inbounds (%struct.external_data_msg, %struct.external_data_msg* @_zbus_message_bm_channel, i32 0, i32 1), align 4, !dbg !3548
  %8 = tail call i32 @zbus_chan_finish(%struct.zbus_channel* noundef nonnull @bm_channel) #27, !dbg !3549
  %9 = tail call fastcc i32 @k_uptime_get_32() #26, !dbg !3550
  call void @llvm.dbg.value(metadata i32 %9, metadata !3529, metadata !DIExpression()), !dbg !3545
  call void @llvm.dbg.value(metadata i64 32768, metadata !3530, metadata !DIExpression()), !dbg !3551
  br label %21, !dbg !3552

10:                                               ; preds = %0, %10
  %11 = phi i64 [ 255, %0 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata i64 %11, metadata !3527, metadata !DIExpression()), !dbg !3542
  %12 = trunc i64 %11 to i8, !dbg !3553
  %13 = trunc i64 %11 to i32, !dbg !3556
  %14 = getelementptr inbounds %struct.bm_msg, %struct.bm_msg* %1, i32 0, i32 0, i32 %13, !dbg !3556
  store i8 %12, i8* %14, align 1, !dbg !3557
  %15 = add nsw i64 %11, -1, !dbg !3558
  call void @llvm.dbg.value(metadata i64 %15, metadata !3527, metadata !DIExpression()), !dbg !3542
  %16 = icmp eq i64 %15, 0, !dbg !3559
  br i1 %16, label %5, label %10, !dbg !3543, !llvm.loop !3560

17:                                               ; preds = %21
  %18 = call fastcc i32 @k_uptime_get_32() #26, !dbg !3562
  %19 = sub i32 %18, %9, !dbg !3563
  call void @llvm.dbg.value(metadata i32 %19, metadata !3532, metadata !DIExpression()), !dbg !3545
  %20 = icmp eq i32 %19, 0, !dbg !3564
  br i1 %20, label %32, label %35, !dbg !3566

21:                                               ; preds = %5, %21
  %22 = phi i64 [ 32768, %5 ], [ %30, %21 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !3530, metadata !DIExpression()), !dbg !3551
  %23 = call i32 @zbus_chan_claim(%struct.zbus_channel* noundef nonnull @bm_channel, [1 x i64] zeroinitializer) #27, !dbg !3567
  call void @llvm.dbg.value(metadata %struct.external_data_msg* @_zbus_message_bm_channel, metadata !3525, metadata !DIExpression()), !dbg !3545
  %24 = load i8*, i8** getelementptr inbounds (%struct.external_data_msg, %struct.external_data_msg* @_zbus_message_bm_channel, i32 0, i32 0), align 4, !dbg !3570
  %25 = call i8* @memcpy(i8* noundef %24, i8* noundef nonnull %4, i32 noundef 256) #27, !dbg !3571
  %26 = call i32 @zbus_chan_finish(%struct.zbus_channel* noundef nonnull @bm_channel) #27, !dbg !3572
  %27 = tail call fastcc i64 @k_ms_to_ticks_ceil64() #26, !dbg !3573
  %28 = insertvalue [1 x i64] poison, i64 %27, 0, !dbg !3574
  %29 = call i32 @zbus_chan_notify(%struct.zbus_channel* noundef nonnull @bm_channel, [1 x i64] %28) #27, !dbg !3574
  %30 = add nsw i64 %22, -256, !dbg !3575
  call void @llvm.dbg.value(metadata i64 %30, metadata !3530, metadata !DIExpression()), !dbg !3551
  %31 = icmp eq i64 %30, 0, !dbg !3576
  br i1 %31, label %17, label %21, !dbg !3552, !llvm.loop !3577

32:                                               ; preds = %17
  %33 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3579
  %34 = zext i8 %33 to i32, !dbg !3579
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i32 0, i32 0), i32 noundef %34) #27, !dbg !3579
  call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 3, i32 2) #25, !dbg !3585, !srcloc !3587
  br label %35, !dbg !3588

35:                                               ; preds = %32, %17
  %36 = zext i32 %19 to i64, !dbg !3589
  %37 = udiv i32 262144000, %19, !dbg !3590
  %38 = zext i32 %37 to i64, !dbg !3590
  call void @llvm.dbg.value(metadata i64 %38, metadata !3533, metadata !DIExpression()), !dbg !3545
  %39 = udiv i64 26214400000, %36, !dbg !3591
  %40 = urem i64 %39, 100, !dbg !3592
  call void @llvm.dbg.value(metadata i64 %40, metadata !3534, metadata !DIExpression()), !dbg !3545
  %41 = load i64, i64* @count, align 8, !dbg !3593
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i32 0, i32 0), i32 noundef %3, i64 noundef 262144, i64 noundef %41) #27, !dbg !3593
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5, i32 0, i32 0), i32 noundef %3, i64 noundef %38, i64 noundef %40) #27, !dbg !3598
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i32 0, i32 0), i32 noundef %3, i32 noundef %19) #27, !dbg !3603
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i32 noundef %19) #27, !dbg !3608
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %4) #25, !dbg !3609
  ret void, !dbg !3609
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #5 !dbg !3610 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3615, metadata !DIExpression()), !dbg !3616
  %2 = add i32 %0, -1, !dbg !3617
  %3 = icmp ult i32 %2, 3, !dbg !3617
  %4 = trunc i32 %2 to i24, !dbg !3617
  %5 = shl i24 %4, 3, !dbg !3617
  %6 = lshr i24 4806469, %5, !dbg !3617
  %7 = trunc i24 %6 to i8, !dbg !3617
  %8 = select i1 %3, i8 %7, i8 63, !dbg !3617
  ret i8 %8, !dbg !3618
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_uptime_get_32() unnamed_addr #1 !dbg !3619 {
  %1 = tail call fastcc i64 @k_uptime_get() #26, !dbg !3622
  %2 = trunc i64 %1 to i32, !dbg !3623
  ret i32 %2, !dbg !3624
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64() unnamed_addr #5 !dbg !3625 {
  call void @llvm.dbg.value(metadata i64 200, metadata !3630, metadata !DIExpression()), !dbg !3631
  ret i64 2000, !dbg !3632
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_get() unnamed_addr #1 !dbg !3633 {
  %1 = tail call fastcc i64 @k_uptime_ticks() #26, !dbg !3636
  %2 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %1) #26, !dbg !3637
  ret i64 %2, !dbg !3638
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_ticks() unnamed_addr #1 !dbg !3639 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3641, !srcloc !3643
  %1 = tail call i64 @z_impl_k_uptime_ticks() #27, !dbg !3644
  ret i64 %1, !dbg !3645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #5 !dbg !3646 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3648, metadata !DIExpression()), !dbg !3649
  call void @llvm.dbg.value(metadata i64 %0, metadata !3650, metadata !DIExpression()), !dbg !3667
  call void @llvm.dbg.value(metadata i32 10000, metadata !3655, metadata !DIExpression()), !dbg !3667
  call void @llvm.dbg.value(metadata i32 1000, metadata !3656, metadata !DIExpression()), !dbg !3667
  call void @llvm.dbg.value(metadata i8 1, metadata !3657, metadata !DIExpression()), !dbg !3667
  call void @llvm.dbg.value(metadata i8 0, metadata !3658, metadata !DIExpression()), !dbg !3667
  call void @llvm.dbg.value(metadata i1 false, metadata !3659, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3667
  call void @llvm.dbg.value(metadata i8 0, metadata !3660, metadata !DIExpression()), !dbg !3667
  call void @llvm.dbg.value(metadata i1 false, metadata !3661, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3667
  call void @llvm.dbg.value(metadata i1 true, metadata !3662, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3667
  call void @llvm.dbg.value(metadata i64 0, metadata !3663, metadata !DIExpression()), !dbg !3667
  call void @llvm.dbg.value(metadata i64 0, metadata !3663, metadata !DIExpression()), !dbg !3667
  call void @llvm.dbg.value(metadata !DIArgList(i64 %0, i64 0), metadata !3650, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3667
  call void @llvm.dbg.value(metadata i64 %0, metadata !3650, metadata !DIExpression()), !dbg !3667
  %2 = udiv i64 %0, 10, !dbg !3669
  ret i64 %2, !dbg !3674
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3675 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3690, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8* %0, metadata !3686, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %1, metadata !3687, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %2, metadata !3688, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8* %3, metadata !3689, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8* %0, metadata !3691, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8* %0, metadata !3692, metadata !DIExpression()), !dbg !3753
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3754
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !3754
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3695, metadata !DIExpression()), !dbg !3755
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3756
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #25, !dbg !3756
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3697, metadata !DIExpression()), !dbg !3757
  call void @llvm.dbg.value(metadata i32 0, metadata !3698, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 0, metadata !3699, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 0, metadata !3700, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 -1, metadata !3701, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8 0, metadata !3704, metadata !DIExpression()), !dbg !3753
  %12 = and i32 %2, 4, !dbg !3758
  %13 = icmp eq i32 %12, 0, !dbg !3759
  call void @llvm.dbg.value(metadata i1 %13, metadata !3705, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3753
  %14 = lshr i32 %2, 3, !dbg !3760
  %15 = and i32 %14, 7, !dbg !3760
  %16 = add nuw nsw i32 %15, 1, !dbg !3761
  call void @llvm.dbg.value(metadata i32 %16, metadata !3706, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8 0, metadata !3707, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8* %0, metadata !3708, metadata !DIExpression()), !dbg !3753
  %17 = ptrtoint i8* %0 to i32, !dbg !3762
  %18 = and i32 %17, 3, !dbg !3764
  %19 = icmp eq i32 %18, 0, !dbg !3764
  br i1 %19, label %20, label %316, !dbg !3765

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3766
  call void @llvm.dbg.value(metadata i8* %21, metadata !3692, metadata !DIExpression()), !dbg !3753
  %22 = icmp eq i8* %0, null, !dbg !3767
  %23 = and i32 %1, 7, !dbg !3769
  %24 = sub nuw nsw i32 8, %23, !dbg !3769
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3769
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3769
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3769
  call void @llvm.dbg.value(metadata i32 %27, metadata !3687, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8* %26, metadata !3692, metadata !DIExpression()), !dbg !3753
  br i1 %22, label %33, label %28, !dbg !3770

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3772
  %30 = sub i32 4, %17, !dbg !3772
  %31 = add i32 %30, %29, !dbg !3773
  %32 = icmp ugt i32 %31, %27, !dbg !3774
  br i1 %32, label %316, label %33, !dbg !3775

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3776
  call void @llvm.dbg.value(metadata i8* %34, metadata !3689, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8* %3, metadata !3703, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 4, metadata !3694, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 4, metadata !3693, metadata !DIExpression()), !dbg !3753
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3777

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3690, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8* %42, metadata !3689, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8* %43, metadata !3692, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %44, metadata !3693, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %45, metadata !3694, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %72, metadata !3701, metadata !DIExpression()), !dbg !3753
  br i1 %46, label %73, label %47, !dbg !3778

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3779
  %49 = zext i1 %48 to i32, !dbg !3783
  %50 = add nsw i32 %72, %49, !dbg !3783
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3783
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3783
  call void @llvm.dbg.value(metadata i32 %52, metadata !3693, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %51, metadata !3694, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8 poison, metadata !3704, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %50, metadata !3701, metadata !DIExpression()), !dbg !3753
  br label %53, !dbg !3784

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3690, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8* %40, metadata !3689, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8* %58, metadata !3692, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %57, metadata !3693, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %56, metadata !3694, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8 poison, metadata !3704, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %54, metadata !3701, metadata !DIExpression()), !dbg !3753
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3785
  call void @llvm.dbg.value(metadata i8* %60, metadata !3689, metadata !DIExpression()), !dbg !3753
  %61 = load i8, i8* %60, align 1, !dbg !3787
  %62 = icmp eq i8 %61, 0, !dbg !3788
  br i1 %62, label %223, label %63, !dbg !3789, !llvm.loop !3790

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !3778

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3793

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3704, metadata !DIExpression()), !dbg !3753
  %75 = add nsw i32 %72, -1, !dbg !3794
  call void @llvm.dbg.value(metadata i32 %75, metadata !3701, metadata !DIExpression()), !dbg !3753
  br label %53, !dbg !3795

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3796

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3694, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 4, metadata !3693, metadata !DIExpression()), !dbg !3753
  br label %53, !dbg !3797

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3694, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 4, metadata !3693, metadata !DIExpression()), !dbg !3753
  br label %53, !dbg !3798

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3799
  %81 = icmp eq i8 %80, 108, !dbg !3801
  br i1 %81, label %82, label %109, !dbg !3802

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3803
  %84 = load i8, i8* %83, align 1, !dbg !3803
  %85 = icmp eq i8 %84, 108, !dbg !3806
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3807
  %89 = add i32 %88, 7, !dbg !3807
  %90 = and i32 %89, -8, !dbg !3807
  %91 = inttoptr i32 %90 to i8*, !dbg !3807
  %92 = inttoptr i32 %90 to double*, !dbg !3807
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3807
  %94 = load double, double* %92, align 8, !dbg !3807
  call void @llvm.dbg.value(metadata i8* %93, metadata !3690, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 8, metadata !3693, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 8, metadata !3694, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata double %94, metadata !3721, metadata !DIExpression()), !dbg !3809
  %95 = ptrtoint i8* %43 to i32, !dbg !3810
  %96 = add i32 %95, 7, !dbg !3810
  %97 = and i32 %96, -8, !dbg !3810
  %98 = inttoptr i32 %97 to i8*, !dbg !3811
  call void @llvm.dbg.value(metadata i8* %98, metadata !3692, metadata !DIExpression()), !dbg !3753
  br i1 %22, label %104, label %99, !dbg !3812

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3813
  %101 = icmp ugt i32 %100, %194, !dbg !3817
  br i1 %101, label %316, label %102, !dbg !3818

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3819
  store double %94, double* %103, align 8, !dbg !3819
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3822
  call void @llvm.dbg.value(metadata i8* %105, metadata !3692, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8 poison, metadata !3704, metadata !DIExpression()), !dbg !3753
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3704, metadata !DIExpression()), !dbg !3753
  br label %53, !dbg !3823

107:                                              ; preds = %73, %73
  br label %109, !dbg !3824

108:                                              ; preds = %73
  br label %109, !dbg !3824

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3753
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3753
  call void @llvm.dbg.value(metadata i32 %113, metadata !3693, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %112, metadata !3694, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8 poison, metadata !3707, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8 poison, metadata !3704, metadata !DIExpression()), !dbg !3753
  %114 = ptrtoint i8* %43 to i32, !dbg !3824
  %115 = add i32 %114, -1, !dbg !3824
  %116 = add i32 %115, %112, !dbg !3824
  %117 = sub i32 0, %112, !dbg !3824
  %118 = and i32 %116, %117, !dbg !3824
  %119 = inttoptr i32 %118 to i8*, !dbg !3825
  call void @llvm.dbg.value(metadata i8* %119, metadata !3692, metadata !DIExpression()), !dbg !3753
  br i1 %22, label %124, label %120, !dbg !3826

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3828
  %122 = add i32 %121, %118, !dbg !3829
  %123 = icmp ugt i32 %122, %194, !dbg !3830
  br i1 %123, label %316, label %124, !dbg !3831

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !3832

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3825
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3833
  call void @llvm.dbg.value(metadata i8* %127, metadata !3690, metadata !DIExpression()), !dbg !3753
  %128 = bitcast i8* %41 to i8**, !dbg !3833
  %129 = load i8*, i8** %128, align 4, !dbg !3833
  call void @llvm.dbg.value(metadata i8* %129, metadata !3703, metadata !DIExpression()), !dbg !3753
  br label %130, !dbg !3834

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !3835
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3836
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3753
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !3837
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3753
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3838
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3753
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3753
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3753
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3753
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !3839
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3690, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %142, metadata !3687, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8* %141, metadata !3689, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8* %140, metadata !3692, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %139, metadata !3693, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %138, metadata !3694, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %137, metadata !3698, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %136, metadata !3706, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %135, metadata !3699, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8 poison, metadata !3704, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8* %133, metadata !3703, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %132, metadata !3701, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %131, metadata !3700, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.label(metadata !3752), !dbg !3841
  br i1 %22, label %146, label %144, !dbg !3842

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3843
  store i8* %133, i8** %145, align 4, !dbg !3846
  br label %146, !dbg !3847

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3848
  call void @llvm.dbg.value(metadata i32 %147, metadata !3706, metadata !DIExpression()), !dbg !3753
  %148 = icmp sgt i32 %136, 0, !dbg !3849
  br i1 %148, label %152, label %149, !dbg !3850

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #26, !dbg !3851
  %151 = zext i1 %150 to i32, !dbg !3851
  br label %152, !dbg !3850

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3850
  %154 = icmp eq i32 %153, 0, !dbg !3850
  call void @llvm.dbg.value(metadata i1 %154, metadata !3730, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3852
  call void @llvm.dbg.value(metadata i1 %36, metadata !3733, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3852
  %155 = or i1 %36, %154, !dbg !3853
  br i1 %155, label %156, label %190, !dbg !3853

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3854
  %158 = sub i32 %157, %17, !dbg !3854
  %159 = lshr i32 %158, 2, !dbg !3855
  call void @llvm.dbg.value(metadata i32 %159, metadata !3734, metadata !DIExpression()), !dbg !3856
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3857
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !3857
  br i1 %163, label %316, label %164, !dbg !3857

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !3859

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !3860
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3863
  store i8 %166, i8* %167, align 1, !dbg !3864
  %168 = trunc i32 %132 to i8, !dbg !3865
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3866
  store i8 %168, i8* %169, align 1, !dbg !3867
  br i1 %154, label %173, label %170, !dbg !3868

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !3869
  store i8 %171, i8* %167, align 1, !dbg !3869
  %172 = add i32 %131, 1, !dbg !3872
  call void @llvm.dbg.value(metadata i32 %172, metadata !3700, metadata !DIExpression()), !dbg !3753
  br label %185, !dbg !3873

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !3874
  call void @llvm.dbg.value(metadata i32 %174, metadata !3699, metadata !DIExpression()), !dbg !3753
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !3876

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !3877
  call void @llvm.dbg.value(metadata i32 %177, metadata !3687, metadata !DIExpression()), !dbg !3753
  br label %185, !dbg !3880

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !3881

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !3882
  call void @llvm.dbg.value(metadata i32 %180, metadata !3687, metadata !DIExpression()), !dbg !3753
  br label %185, !dbg !3885

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #27, !dbg !3886
  %183 = add i32 %142, 2, !dbg !3888
  %184 = add i32 %183, %182, !dbg !3889
  call void @llvm.dbg.value(metadata i32 %184, metadata !3687, metadata !DIExpression()), !dbg !3753
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !3753
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !3753
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !3753
  call void @llvm.dbg.value(metadata i32 %188, metadata !3687, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %187, metadata !3699, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %186, metadata !3700, metadata !DIExpression()), !dbg !3753
  %189 = add nuw nsw i32 %137, 1, !dbg !3890
  call void @llvm.dbg.value(metadata i32 undef, metadata !3687, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 undef, metadata !3698, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 undef, metadata !3699, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 undef, metadata !3700, metadata !DIExpression()), !dbg !3753
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !3835
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !3837
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !3838
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !3839
  call void @llvm.dbg.value(metadata i32 %194, metadata !3687, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %193, metadata !3698, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %192, metadata !3699, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %191, metadata !3700, metadata !DIExpression()), !dbg !3753
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3891
  call void @llvm.dbg.value(metadata i8* %195, metadata !3692, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8* %143, metadata !3690, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8* %141, metadata !3689, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %139, metadata !3693, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %138, metadata !3694, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8 poison, metadata !3707, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8 poison, metadata !3704, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %132, metadata !3701, metadata !DIExpression()), !dbg !3753
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3785
  call void @llvm.dbg.value(metadata i8* %196, metadata !3689, metadata !DIExpression()), !dbg !3753
  %197 = load i8, i8* %196, align 1, !dbg !3787
  %198 = icmp eq i8 %197, 0, !dbg !3788
  br i1 %198, label %223, label %63, !dbg !3789

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !3892

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3893
  call void @llvm.dbg.value(metadata i8* %201, metadata !3690, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 undef, metadata !3737, metadata !DIExpression()), !dbg !3894
  br i1 %22, label %216, label %202, !dbg !3895

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !3893
  %204 = load i32, i32* %203, align 4, !dbg !3893
  call void @llvm.dbg.value(metadata i32 %204, metadata !3737, metadata !DIExpression()), !dbg !3894
  %205 = inttoptr i32 %118 to i32*, !dbg !3896
  store i32 %204, i32* %205, align 4, !dbg !3899
  br label %216, !dbg !3900

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !3901
  %208 = add i32 %207, 7, !dbg !3901
  %209 = and i32 %208, -8, !dbg !3901
  %210 = inttoptr i32 %209 to i8*, !dbg !3901
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !3901
  call void @llvm.dbg.value(metadata i8* %211, metadata !3690, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i64 undef, metadata !3743, metadata !DIExpression()), !dbg !3902
  br i1 %22, label %216, label %212, !dbg !3903

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !3901
  %214 = load i64, i64* %213, align 8, !dbg !3901
  call void @llvm.dbg.value(metadata i64 %214, metadata !3743, metadata !DIExpression()), !dbg !3902
  %215 = inttoptr i32 %118 to i64*, !dbg !3904
  store i64 %214, i64* %215, align 8, !dbg !3909
  br label %216, !dbg !3910

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !3911
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !3911
  call void @llvm.dbg.value(metadata i8* %218, metadata !3690, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8* %40, metadata !3689, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8* %219, metadata !3692, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %113, metadata !3693, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %112, metadata !3694, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8 poison, metadata !3707, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8 poison, metadata !3704, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %72, metadata !3701, metadata !DIExpression()), !dbg !3753
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3785
  call void @llvm.dbg.value(metadata i8* %220, metadata !3689, metadata !DIExpression()), !dbg !3753
  %221 = load i8, i8* %220, align 1, !dbg !3787
  %222 = icmp eq i8 %221, 0, !dbg !3788
  br i1 %222, label %223, label %38, !dbg !3789

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !3912
  %225 = ptrtoint i8* %224 to i32, !dbg !3913
  %226 = sub i32 %225, %17, !dbg !3913
  %227 = lshr i32 %226, 2, !dbg !3915
  %228 = icmp ugt i32 %226, 1023, !dbg !3916
  br i1 %228, label %316, label %229, !dbg !3917

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !3918

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !3919
  %232 = add i32 %231, %226, !dbg !3922
  br label %316, !dbg !3923

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !3924
  store i8 %234, i8* %0, align 1, !dbg !3925
  %235 = trunc i32 %192 to i8, !dbg !3926
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3928
  store i8 %236, i8* %238, align 1, !dbg !3930
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3931
  store i8 %237, i8* %239, align 1, !dbg !3932
  %240 = trunc i32 %191 to i8, !dbg !3933
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3934
  store i8 %240, i8* %241, align 1, !dbg !3935
  %242 = icmp eq i32 %191, 0, !dbg !3936
  %243 = xor i1 %242, true, !dbg !3937
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !3937
  call void @llvm.dbg.value(metadata i8* %224, metadata !3692, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 0, metadata !3702, metadata !DIExpression()), !dbg !3753
  br i1 %245, label %246, label %265, !dbg !3937

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !3938

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !3692, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %250, metadata !3702, metadata !DIExpression()), !dbg !3753
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !3939
  %252 = load i8, i8* %251, align 1, !dbg !3939
  %253 = icmp sgt i8 %252, -1, !dbg !3941
  br i1 %253, label %261, label %254, !dbg !3942

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !3746, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3943
  %255 = ptrtoint i8* %249 to i32, !dbg !3944
  %256 = add i32 %247, %255, !dbg !3946
  %257 = icmp ugt i32 %256, %194, !dbg !3947
  br i1 %257, label %316, label %258, !dbg !3948

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !3949
  call void @llvm.dbg.value(metadata i8 %259, metadata !3746, metadata !DIExpression()), !dbg !3943
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !3950
  call void @llvm.dbg.value(metadata i8* %260, metadata !3692, metadata !DIExpression()), !dbg !3753
  store i8 %259, i8* %249, align 1, !dbg !3951
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !3891
  call void @llvm.dbg.value(metadata i8* %262, metadata !3692, metadata !DIExpression()), !dbg !3753
  %263 = add nuw i32 %250, 1, !dbg !3952
  call void @llvm.dbg.value(metadata i32 %263, metadata !3702, metadata !DIExpression()), !dbg !3753
  %264 = icmp eq i32 %263, %193, !dbg !3953
  br i1 %264, label %265, label %248, !dbg !3938, !llvm.loop !3954

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !3891
  call void @llvm.dbg.value(metadata i8* %266, metadata !3692, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 0, metadata !3702, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8* %133, metadata !3703, metadata !DIExpression()), !dbg !3753
  %267 = icmp eq i32 %193, 0, !dbg !3956
  br i1 %267, label %312, label %268, !dbg !3959

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !3959

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !3692, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8* %272, metadata !3703, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %273, metadata !3702, metadata !DIExpression()), !dbg !3753
  br i1 %242, label %278, label %274, !dbg !3960

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !3963
  %276 = load i8, i8* %275, align 1, !dbg !3963
  %277 = icmp sgt i8 %276, -1, !dbg !3964
  br i1 %277, label %278, label %307, !dbg !3965

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !3966

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !3693, metadata !DIExpression()), !dbg !3753
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !3967
  %281 = load i8, i8* %280, align 1, !dbg !3967
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !3970
  call void @llvm.dbg.value(metadata i8* %282, metadata !3692, metadata !DIExpression()), !dbg !3753
  store i8 %281, i8* %271, align 1, !dbg !3971
  br label %293, !dbg !3972

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !3973
  %285 = load i8, i8* %284, align 1, !dbg !3973
  %286 = zext i8 %285 to i32, !dbg !3973
  %287 = shl nuw nsw i32 %286, 2, !dbg !3975
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !3976
  %289 = bitcast i8* %288 to i8**, !dbg !3977
  %290 = load i8*, i8** %289, align 4, !dbg !3977
  call void @llvm.dbg.value(metadata i8* %290, metadata !3703, metadata !DIExpression()), !dbg !3753
  store i8* null, i8** %289, align 4, !dbg !3978
  %291 = tail call i32 @strlen(i8* noundef %290) #27, !dbg !3979
  %292 = add i32 %291, 1, !dbg !3980
  call void @llvm.dbg.value(metadata i32 %292, metadata !3693, metadata !DIExpression()), !dbg !3753
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !3753
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !3981
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !3753
  call void @llvm.dbg.value(metadata i8* %296, metadata !3692, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %295, metadata !3693, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8* %294, metadata !3703, metadata !DIExpression()), !dbg !3753
  %297 = ptrtoint i8* %296 to i32, !dbg !3982
  %298 = add i32 %269, %295, !dbg !3984
  %299 = add i32 %298, %297, !dbg !3985
  %300 = icmp ugt i32 %299, %194, !dbg !3986
  br i1 %300, label %316, label %301, !dbg !3987

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !3988
  %303 = load i8, i8* %302, align 1, !dbg !3988
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !3989
  call void @llvm.dbg.value(metadata i8* %304, metadata !3692, metadata !DIExpression()), !dbg !3753
  store i8 %303, i8* %296, align 1, !dbg !3990
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #27, !dbg !3991
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !3992
  call void @llvm.dbg.value(metadata i8* %306, metadata !3692, metadata !DIExpression()), !dbg !3753
  br label %307, !dbg !3993

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !3994
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !3753
  call void @llvm.dbg.value(metadata i8* %309, metadata !3692, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8* %308, metadata !3703, metadata !DIExpression()), !dbg !3753
  %310 = add nuw i32 %273, 1, !dbg !3995
  call void @llvm.dbg.value(metadata i32 %310, metadata !3702, metadata !DIExpression()), !dbg !3753
  %311 = icmp eq i32 %310, %193, !dbg !3956
  br i1 %311, label %312, label %270, !dbg !3959, !llvm.loop !3996

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !3891
  %314 = ptrtoint i8* %313 to i32, !dbg !3998
  %315 = sub i32 %314, %17, !dbg !3998
  br label %316, !dbg !3999

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !3753
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4000
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4000
  ret i32 %317, !dbg !4000
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4001 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4005, metadata !DIExpression()), !dbg !4006
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #26, !dbg !4007
  ret i1 %2, !dbg !4008
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4009 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4014, metadata !DIExpression()), !dbg !4015
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4016
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4017
  %4 = and i1 %2, %3, !dbg !4017
  ret i1 %4, !dbg !4018
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4019 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4023, metadata !DIExpression()), !dbg !4029
  call void @llvm.dbg.value(metadata i32 %1, metadata !4024, metadata !DIExpression()), !dbg !4029
  call void @llvm.dbg.value(metadata i32 %2, metadata !4025, metadata !DIExpression()), !dbg !4029
  call void @llvm.dbg.value(metadata i8* %3, metadata !4026, metadata !DIExpression()), !dbg !4029
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4030
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4030
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4027, metadata !DIExpression()), !dbg !4031
  call void @llvm.va_start(i8* nonnull %6), !dbg !4032
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4033
  %8 = load i32, i32* %7, align 4, !dbg !4033
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4033
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #26, !dbg !4033
  call void @llvm.dbg.value(metadata i32 %10, metadata !4028, metadata !DIExpression()), !dbg !4029
  call void @llvm.va_end(i8* nonnull %6), !dbg !4034
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4035
  ret i32 %10, !dbg !4036
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4037 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4049, metadata !DIExpression()), !dbg !4068
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4050, metadata !DIExpression()), !dbg !4068
  call void @llvm.dbg.value(metadata i8* %2, metadata !4051, metadata !DIExpression()), !dbg !4068
  call void @llvm.dbg.value(metadata i8* %3, metadata !4052, metadata !DIExpression()), !dbg !4068
  call void @llvm.dbg.value(metadata i8* %3, metadata !4053, metadata !DIExpression()), !dbg !4068
  call void @llvm.dbg.value(metadata i8* %3, metadata !4054, metadata !DIExpression()), !dbg !4068
  %5 = icmp eq i8* %3, null, !dbg !4069
  br i1 %5, label %45, label %6, !dbg !4071

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4063, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4068
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4072
  %8 = load i8, i8* %7, align 1, !dbg !4072
  %9 = zext i8 %8 to i32, !dbg !4073
  call void @llvm.dbg.value(metadata i32 %9, metadata !4064, metadata !DIExpression()), !dbg !4068
  call void @llvm.dbg.value(metadata i8 undef, metadata !4065, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4068
  call void @llvm.dbg.value(metadata i8 undef, metadata !4066, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4068
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4060, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4068
  call void @llvm.dbg.value(metadata i32 0, metadata !4062, metadata !DIExpression()), !dbg !4068
  %10 = icmp eq i8 %8, 0, !dbg !4074
  br i1 %10, label %39, label %11, !dbg !4077

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4078
  call void @llvm.dbg.value(metadata i8 %12, metadata !4063, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4068
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4060, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4068
  %13 = zext i8 %12 to i32, !dbg !4079
  call void @llvm.dbg.value(metadata i32 %13, metadata !4063, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4068
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4060, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4068
  %14 = shl nuw nsw i32 %13, 2, !dbg !4080
  call void @llvm.dbg.value(metadata i32 %14, metadata !4063, metadata !DIExpression()), !dbg !4068
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4060, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4068
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4081
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4060, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4068
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4082
  %17 = load i8, i8* %16, align 1, !dbg !4082
  call void @llvm.dbg.value(metadata i8 %17, metadata !4065, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4068
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4060, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4068
  %18 = zext i8 %17 to i32, !dbg !4083
  call void @llvm.dbg.value(metadata i32 %18, metadata !4065, metadata !DIExpression()), !dbg !4068
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4060, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4068
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4084
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4060, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4068
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4085
  %21 = load i8, i8* %20, align 1, !dbg !4085
  call void @llvm.dbg.value(metadata i8 %21, metadata !4066, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4068
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4060, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4068
  %22 = zext i8 %21 to i32, !dbg !4086
  call void @llvm.dbg.value(metadata i32 %22, metadata !4066, metadata !DIExpression()), !dbg !4068
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4060, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4068
  %23 = shl nuw nsw i32 %22, 1, !dbg !4087
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4060, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4068
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4088
  call void @llvm.dbg.value(metadata i8* %24, metadata !4060, metadata !DIExpression()), !dbg !4068
  br label %25, !dbg !4077

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4060, metadata !DIExpression()), !dbg !4068
  call void @llvm.dbg.value(metadata i32 %27, metadata !4062, metadata !DIExpression()), !dbg !4068
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4089
  call void @llvm.dbg.value(metadata i8* %28, metadata !4060, metadata !DIExpression()), !dbg !4068
  %29 = load i8, i8* %26, align 1, !dbg !4091
  %30 = zext i8 %29 to i32, !dbg !4091
  call void @llvm.dbg.value(metadata i32 %30, metadata !4067, metadata !DIExpression()), !dbg !4068
  %31 = shl nuw nsw i32 %30, 2, !dbg !4092
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4093
  %33 = bitcast i8* %32 to i8**, !dbg !4094
  call void @llvm.dbg.value(metadata i8** %33, metadata !4061, metadata !DIExpression()), !dbg !4068
  store i8* %28, i8** %33, align 4, !dbg !4095
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #27, !dbg !4096
  %35 = add i32 %34, 1, !dbg !4097
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4098
  call void @llvm.dbg.value(metadata i8* %36, metadata !4060, metadata !DIExpression()), !dbg !4068
  %37 = add nuw nsw i32 %27, 1, !dbg !4099
  call void @llvm.dbg.value(metadata i32 %37, metadata !4062, metadata !DIExpression()), !dbg !4068
  %38 = icmp eq i32 %37, %9, !dbg !4074
  br i1 %38, label %39, label %25, !dbg !4077, !llvm.loop !4100

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4102
  call void @llvm.dbg.value(metadata i8* %40, metadata !4053, metadata !DIExpression()), !dbg !4068
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4103
  %42 = bitcast i8* %41 to i8**, !dbg !4103
  %43 = load i8*, i8** %42, align 1, !dbg !4103
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #26, !dbg !4104
  br label %45, !dbg !4105

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4068
  ret i32 %46, !dbg !4106
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4107 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4111, metadata !DIExpression()), !dbg !4121
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4112, metadata !DIExpression()), !dbg !4121
  call void @llvm.dbg.value(metadata i8* %2, metadata !4113, metadata !DIExpression()), !dbg !4121
  call void @llvm.dbg.value(metadata i8* %3, metadata !4114, metadata !DIExpression()), !dbg !4121
  call void @llvm.dbg.value(metadata i8* %4, metadata !4115, metadata !DIExpression()), !dbg !4121
  call void @llvm.dbg.value(metadata i8* %4, metadata !4116, metadata !DIExpression()), !dbg !4121
  %6 = ptrtoint i8* %4 to i32, !dbg !4122
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4122
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #27, !dbg !4122
  ret i32 %8, !dbg !4123
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !4124 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4128, metadata !DIExpression()), !dbg !4133
  call void @llvm.dbg.value(metadata i32 %1, metadata !4129, metadata !DIExpression()), !dbg !4133
  call void @llvm.dbg.value(metadata i8 0, metadata !4131, metadata !DIExpression()), !dbg !4133
  call void @llvm.dbg.value(metadata i32 0, metadata !4132, metadata !DIExpression()), !dbg !4133
  call void @llvm.dbg.value(metadata i8 poison, metadata !4131, metadata !DIExpression()), !dbg !4133
  call void @llvm.dbg.value(metadata i8* %0, metadata !4128, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4133
  %3 = load i8, i8* %0, align 1, !dbg !4134
  call void @llvm.dbg.value(metadata i8 %3, metadata !4130, metadata !DIExpression()), !dbg !4133
  %4 = icmp eq i8 %3, 0, !dbg !4135
  br i1 %4, label %29, label %5, !dbg !4136

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4137
  call void @llvm.dbg.value(metadata i32 %8, metadata !4132, metadata !DIExpression()), !dbg !4133
  br i1 %9, label %11, label %22, !dbg !4138

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4140
  br i1 %12, label %13, label %17, !dbg !4144

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4145
  br i1 %14, label %29, label %15, !dbg !4148

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4149
  br i1 %16, label %29, label %22, !dbg !4151

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4152
  %19 = xor i1 %18, true, !dbg !4154
  %20 = zext i1 %18 to i32, !dbg !4154
  %21 = add nsw i32 %8, %20, !dbg !4154
  br label %22, !dbg !4154

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4133
  call void @llvm.dbg.value(metadata i32 %24, metadata !4132, metadata !DIExpression()), !dbg !4133
  call void @llvm.dbg.value(metadata i8 poison, metadata !4131, metadata !DIExpression()), !dbg !4133
  %25 = icmp eq i8 %6, 37, !dbg !4155
  %26 = xor i1 %25, %23, !dbg !4157
  call void @llvm.dbg.value(metadata i8* %10, metadata !4128, metadata !DIExpression()), !dbg !4133
  call void @llvm.dbg.value(metadata i8* %10, metadata !4128, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4133
  %27 = load i8, i8* %10, align 1, !dbg !4134
  call void @llvm.dbg.value(metadata i8 %27, metadata !4130, metadata !DIExpression()), !dbg !4133
  %28 = icmp eq i8 %27, 0, !dbg !4135
  br i1 %28, label %29, label %5, !dbg !4136, !llvm.loop !4158

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4133
  ret i1 %30, !dbg !4160
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #5 !dbg !4161 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4165, metadata !DIExpression()), !dbg !4166
  %2 = add i8 %0, -64, !dbg !4167
  %3 = icmp ult i8 %2, 59, !dbg !4167
  ret i1 %3, !dbg !4168
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4169 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4177, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i32 %1, metadata !4178, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4179, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i8* %3, metadata !4180, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i32 %4, metadata !4181, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i16* %5, metadata !4182, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i32 %6, metadata !4183, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i8* %0, metadata !4184, metadata !DIExpression()), !dbg !4246
  %11 = bitcast i8* %0 to i32*, !dbg !4247
  call void @llvm.dbg.value(metadata i32* %11, metadata !4185, metadata !DIExpression()), !dbg !4246
  %12 = and i32 %4, 8, !dbg !4248
  %13 = icmp eq i32 %12, 0, !dbg !4249
  call void @llvm.dbg.value(metadata i1 %13, metadata !4189, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4246
  call void @llvm.dbg.value(metadata i8* %0, metadata !4192, metadata !DIExpression()), !dbg !4246
  %14 = icmp eq i32 %1, 0, !dbg !4250
  br i1 %14, label %15, label %17, !dbg !4251

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #26, !dbg !4252
  br label %17, !dbg !4251

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4251
  call void @llvm.dbg.value(metadata i32 %18, metadata !4178, metadata !DIExpression()), !dbg !4246
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4253
  %20 = load i8, i8* %19, align 1, !dbg !4253
  %21 = zext i8 %20 to i32, !dbg !4254
  call void @llvm.dbg.value(metadata i32 %21, metadata !4187, metadata !DIExpression()), !dbg !4246
  %22 = icmp ne i8 %20, 0, !dbg !4255
  %23 = and i32 %4, 1, !dbg !4256
  %24 = icmp ne i32 %23, 0, !dbg !4256
  %25 = and i1 %24, %22, !dbg !4256
  call void @llvm.dbg.value(metadata i1 %25, metadata !4191, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4246
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4257
  %27 = load i8, i8* %26, align 1, !dbg !4257
  %28 = zext i8 %27 to i32, !dbg !4258
  call void @llvm.dbg.value(metadata i32 %28, metadata !4188, metadata !DIExpression()), !dbg !4246
  %29 = icmp ne i8 %27, 0, !dbg !4259
  %30 = and i32 %4, 2, !dbg !4260
  %31 = icmp ne i32 %30, 0, !dbg !4260
  %32 = and i1 %31, %29, !dbg !4260
  call void @llvm.dbg.value(metadata i1 %32, metadata !4190, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4246
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4261
  br i1 %33, label %38, label %34, !dbg !4261

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4263
  br i1 %35, label %267, label %36, !dbg !4266

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #27, !dbg !4267
  br label %267, !dbg !4269

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4270
  %40 = zext i8 %39 to i32, !dbg !4271
  %41 = shl nuw nsw i32 %40, 2, !dbg !4272
  call void @llvm.dbg.value(metadata i32 %41, metadata !4186, metadata !DIExpression()), !dbg !4246
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4273
  %43 = bitcast i8* %42 to i8**, !dbg !4274
  %44 = load i8*, i8** %43, align 4, !dbg !4274
  call void @llvm.dbg.value(metadata i8* %44, metadata !4195, metadata !DIExpression()), !dbg !4246
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4275
  call void @llvm.dbg.value(metadata i8* %45, metadata !4196, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i32 0, metadata !4197, metadata !DIExpression()), !dbg !4246
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4276
  br i1 %46, label %47, label %132, !dbg !4277

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !4194, metadata !DIExpression()), !dbg !4246
  br i1 %25, label %48, label %73, !dbg !4278

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !4194, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i8* %45, metadata !4196, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i32 0, metadata !4197, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i32 0, metadata !4198, metadata !DIExpression()), !dbg !4279
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4280

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4194, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i8* %52, metadata !4196, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i32 %53, metadata !4197, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i32 %54, metadata !4198, metadata !DIExpression()), !dbg !4279
  %55 = load i8, i8* %52, align 1, !dbg !4281
  %56 = zext i8 %55 to i32, !dbg !4282
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4282
  %58 = bitcast i32* %57 to i8**, !dbg !4283
  %59 = load i8*, i8** %58, align 4, !dbg !4283
  call void @llvm.dbg.value(metadata i8* %59, metadata !4204, metadata !DIExpression()), !dbg !4284
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #26, !dbg !4285
  call void @llvm.dbg.value(metadata i32 %60, metadata !4207, metadata !DIExpression()), !dbg !4284
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4286
  br i1 %62, label %63, label %67, !dbg !4286

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4288
  %65 = add nuw i32 %53, 1, !dbg !4290
  call void @llvm.dbg.value(metadata i32 %65, metadata !4197, metadata !DIExpression()), !dbg !4246
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4291
  store i16 %64, i16* %66, align 2, !dbg !4292
  br label %67, !dbg !4293

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4246
  call void @llvm.dbg.value(metadata i32 %68, metadata !4197, metadata !DIExpression()), !dbg !4246
  %69 = add nsw i32 %60, %51, !dbg !4294
  call void @llvm.dbg.value(metadata i32 %69, metadata !4194, metadata !DIExpression()), !dbg !4246
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4295
  call void @llvm.dbg.value(metadata i8* %70, metadata !4196, metadata !DIExpression()), !dbg !4246
  %71 = add nuw nsw i32 %54, 1, !dbg !4296
  call void @llvm.dbg.value(metadata i32 %71, metadata !4198, metadata !DIExpression()), !dbg !4279
  %72 = icmp eq i32 %71, %21, !dbg !4297
  br i1 %72, label %79, label %50, !dbg !4280, !llvm.loop !4298

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4300
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4300
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4300
  br label %79, !dbg !4300

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4303
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4246
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4304
  call void @llvm.dbg.value(metadata i1 undef, metadata !4208, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4305
  call void @llvm.dbg.value(metadata i32 0, metadata !4209, metadata !DIExpression()), !dbg !4306
  call void @llvm.dbg.value(metadata i32 %82, metadata !4194, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i8* %81, metadata !4196, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i32 %80, metadata !4197, metadata !DIExpression()), !dbg !4246
  %83 = icmp eq i8 %27, 0, !dbg !4307
  br i1 %83, label %267, label %84, !dbg !4308

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4309
  %86 = icmp eq i32 %85, 0, !dbg !4310
  call void @llvm.dbg.value(metadata i1 %86, metadata !4208, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4305
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4308

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !4194, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i8* %93, metadata !4196, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i32 %94, metadata !4197, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i32 %95, metadata !4209, metadata !DIExpression()), !dbg !4306
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4311
  call void @llvm.dbg.value(metadata i8* %96, metadata !4196, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i8 undef, metadata !4211, metadata !DIExpression()), !dbg !4312
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4313
  call void @llvm.dbg.value(metadata i8* %97, metadata !4196, metadata !DIExpression()), !dbg !4246
  %98 = load i8, i8* %96, align 1, !dbg !4314
  call void @llvm.dbg.value(metadata i8 %98, metadata !4214, metadata !DIExpression()), !dbg !4312
  %99 = zext i8 %98 to i32, !dbg !4315
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4315
  %101 = bitcast i32* %100 to i8**, !dbg !4316
  %102 = load i8*, i8** %101, align 4, !dbg !4316
  call void @llvm.dbg.value(metadata i8* %102, metadata !4215, metadata !DIExpression()), !dbg !4312
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #26, !dbg !4317
  call void @llvm.dbg.value(metadata i1 %103, metadata !4216, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4312
  br i1 %13, label %110, label %104, !dbg !4318

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !4320
  call void @llvm.dbg.value(metadata i8 %105, metadata !4211, metadata !DIExpression()), !dbg !4312
  %106 = zext i8 %105 to i32, !dbg !4321
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #26, !dbg !4322
  br i1 %107, label %108, label %110, !dbg !4323

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.10, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #27, !dbg !4324
  %109 = add nsw i32 %92, -2, !dbg !4330
  call void @llvm.dbg.value(metadata i32 %109, metadata !4194, metadata !DIExpression()), !dbg !4246
  br label %127, !dbg !4331

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !4332

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !4333

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !4335
  call void @llvm.dbg.value(metadata i32 %113, metadata !4194, metadata !DIExpression()), !dbg !4246
  br label %127, !dbg !4338

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !4339

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4242), !dbg !4340
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #26, !dbg !4341
  call void @llvm.dbg.value(metadata i32 %116, metadata !4217, metadata !DIExpression()), !dbg !4312
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !4342
  br i1 %118, label %119, label %123, !dbg !4342

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !4344
  %121 = add nuw i32 %94, 1, !dbg !4346
  call void @llvm.dbg.value(metadata i32 %121, metadata !4197, metadata !DIExpression()), !dbg !4246
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !4347
  store i16 %120, i16* %122, align 2, !dbg !4348
  br label %123, !dbg !4349

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4246
  call void @llvm.dbg.value(metadata i32 %124, metadata !4197, metadata !DIExpression()), !dbg !4246
  %125 = add i32 %92, -1, !dbg !4350
  %126 = add i32 %125, %116, !dbg !4351
  call void @llvm.dbg.value(metadata i32 %126, metadata !4194, metadata !DIExpression()), !dbg !4246
  br label %127, !dbg !4352

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4246
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4312
  call void @llvm.dbg.value(metadata i32 %129, metadata !4194, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i32 %128, metadata !4197, metadata !DIExpression()), !dbg !4246
  %130 = add nuw nsw i32 %95, 1, !dbg !4353
  call void @llvm.dbg.value(metadata i8* %97, metadata !4196, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i32 %130, metadata !4209, metadata !DIExpression()), !dbg !4306
  %131 = icmp eq i32 %130, %28, !dbg !4307
  br i1 %131, label %267, label %91, !dbg !4308, !llvm.loop !4354

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4219, metadata !DIExpression()), !dbg !4356
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4220, metadata !DIExpression()), !dbg !4357
  br i1 %25, label %133, label %135, !dbg !4358

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !4221, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i8 0, metadata !4222, metadata !DIExpression()), !dbg !4246
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4359
  call void @llvm.dbg.value(metadata i8* %134, metadata !4223, metadata !DIExpression()), !dbg !4246
  br label %140, !dbg !4362

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !4363
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !4363

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4223, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i8 undef, metadata !4222, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i8 0, metadata !4221, metadata !DIExpression()), !dbg !4246
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #27, !dbg !4365
  br label %145, !dbg !4368

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !4369
  call void @llvm.dbg.value(metadata i8* %148, metadata !4196, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i32 0, metadata !4225, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.value(metadata i8 %146, metadata !4222, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i8 %147, metadata !4221, metadata !DIExpression()), !dbg !4246
  %149 = icmp eq i8 %27, 0, !dbg !4371
  br i1 %149, label %150, label %152, !dbg !4372

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !4373
  br label %157, !dbg !4372

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !4372

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !4373
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !4374
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !4375
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4246
  call void @llvm.dbg.value(metadata i8 undef, metadata !4218, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4246
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4376
  %163 = load i8, i8* %162, align 1, !dbg !4376
  %164 = zext i8 %159 to i32, !dbg !4377
  %165 = add i8 %163, %159, !dbg !4378
  call void @llvm.dbg.value(metadata i8 %165, metadata !4218, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4246
  %166 = icmp eq i32 %30, 0, !dbg !4379
  %167 = lshr i8 %160, 1, !dbg !4380
  %168 = select i1 %166, i8 %167, i8 0, !dbg !4380
  call void @llvm.dbg.value(metadata i8 %168, metadata !4218, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4246
  %169 = icmp eq i32 %23, 0, !dbg !4381
  %170 = icmp eq i32 %158, 0, !dbg !4373
  %171 = select i1 %170, i8 0, i8 %160, !dbg !4373
  %172 = select i1 %169, i8 %171, i8 0, !dbg !4373
  call void @llvm.dbg.value(metadata i8 %172, metadata !4218, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4246
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4233, metadata !DIExpression()), !dbg !4382
  %173 = load i32, i32* %11, align 1, !dbg !4383
  store i8 %165, i8* %162, align 1, !dbg !4384
  store i8 %172, i8* %19, align 1, !dbg !4384
  store i8 %168, i8* %26, align 1, !dbg !4384
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #27, !dbg !4385
  call void @llvm.dbg.value(metadata i32 %174, metadata !4224, metadata !DIExpression()), !dbg !4246
  %175 = icmp slt i32 %174, 0, !dbg !4386
  br i1 %175, label %267, label %220, !dbg !4388

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4196, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i32 %178, metadata !4225, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.value(metadata i8 %179, metadata !4222, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i8 %180, metadata !4221, metadata !DIExpression()), !dbg !4246
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4389
  call void @llvm.dbg.value(metadata i8* %181, metadata !4196, metadata !DIExpression()), !dbg !4246
  %182 = load i8, i8* %177, align 1, !dbg !4390
  call void @llvm.dbg.value(metadata i8 %182, metadata !4227, metadata !DIExpression()), !dbg !4391
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !4392
  call void @llvm.dbg.value(metadata i8* %183, metadata !4196, metadata !DIExpression()), !dbg !4246
  %184 = load i8, i8* %181, align 1, !dbg !4393
  call void @llvm.dbg.value(metadata i8 %184, metadata !4230, metadata !DIExpression()), !dbg !4391
  %185 = zext i8 %184 to i32, !dbg !4394
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !4394
  %187 = bitcast i32* %186 to i8**, !dbg !4395
  %188 = load i8*, i8** %187, align 4, !dbg !4395
  call void @llvm.dbg.value(metadata i8* %188, metadata !4231, metadata !DIExpression()), !dbg !4391
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #26, !dbg !4396
  call void @llvm.dbg.value(metadata i1 %189, metadata !4232, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4391
  br i1 %13, label %193, label %190, !dbg !4397

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !4399
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #26, !dbg !4400
  br i1 %192, label %215, label %193, !dbg !4401

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !4402

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !4403

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !4406
  call void @llvm.dbg.value(metadata i8 %196, metadata !4221, metadata !DIExpression()), !dbg !4246
  br label %208, !dbg !4409

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !4410

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !4411
  call void @llvm.dbg.value(metadata i8 %199, metadata !4222, metadata !DIExpression()), !dbg !4246
  br label %208, !dbg !4414

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !4415

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !4417
  call void @llvm.dbg.value(metadata i8 %202, metadata !4221, metadata !DIExpression()), !dbg !4246
  br label %208, !dbg !4420

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !4421
  call void @llvm.dbg.value(metadata i8 %204, metadata !4222, metadata !DIExpression()), !dbg !4246
  %205 = zext i8 %179 to i32, !dbg !4423
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !4423
  store i8 %182, i8* %206, align 1, !dbg !4424
  %207 = add i8 %179, 2, !dbg !4425
  call void @llvm.dbg.value(metadata i8 %207, metadata !4222, metadata !DIExpression()), !dbg !4246
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !4426
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !4426
  store i8 %184, i8* %214, align 1, !dbg !4426
  br label %215, !dbg !4427

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4246
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !4375
  call void @llvm.dbg.value(metadata i8 %217, metadata !4222, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i8 %216, metadata !4221, metadata !DIExpression()), !dbg !4246
  %218 = add nuw nsw i32 %178, 1, !dbg !4427
  call void @llvm.dbg.value(metadata i8* %183, metadata !4196, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i32 %218, metadata !4225, metadata !DIExpression()), !dbg !4370
  %219 = icmp eq i32 %218, %28, !dbg !4371
  br i1 %219, label %157, label %176, !dbg !4372, !llvm.loop !4428

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !4380
  call void @llvm.dbg.value(metadata i32 %174, metadata !4194, metadata !DIExpression()), !dbg !4246
  store i32 %173, i32* %11, align 1, !dbg !4430
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4431
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #27, !dbg !4432
  call void @llvm.dbg.value(metadata i32 %223, metadata !4224, metadata !DIExpression()), !dbg !4246
  %224 = icmp slt i32 %223, 0, !dbg !4433
  br i1 %224, label %267, label %225, !dbg !4435

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !4194, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4246
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !4436
  %228 = add nuw nsw i32 %41, %21, !dbg !4436
  %229 = sub i32 %227, %228, !dbg !4436
  call void @llvm.dbg.value(metadata i32 %229, metadata !4234, metadata !DIExpression()), !dbg !4246
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #27, !dbg !4437
  call void @llvm.dbg.value(metadata i32 %230, metadata !4224, metadata !DIExpression()), !dbg !4246
  %231 = icmp slt i32 %230, 0, !dbg !4438
  br i1 %231, label %267, label %232, !dbg !4440

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !4441
  call void @llvm.dbg.value(metadata i32 %233, metadata !4194, metadata !DIExpression()), !dbg !4246
  %234 = add nuw nsw i32 %233, %230, !dbg !4442
  call void @llvm.dbg.value(metadata i32 %234, metadata !4194, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i32 0, metadata !4235, metadata !DIExpression()), !dbg !4443
  %235 = icmp eq i8 %159, 0, !dbg !4444
  br i1 %235, label %264, label %236, !dbg !4445

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !4445

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4235, metadata !DIExpression()), !dbg !4443
  call void @llvm.dbg.value(metadata i32 %240, metadata !4194, metadata !DIExpression()), !dbg !4246
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4446
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !4447
  %242 = load i8, i8* %241, align 1, !dbg !4447
  call void @llvm.dbg.value(metadata i8 %242, metadata !4237, metadata !DIExpression()), !dbg !4448
  store i8 %242, i8* %10, align 1, !dbg !4449
  %243 = zext i8 %242 to i32, !dbg !4450
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !4450
  %245 = bitcast i32* %244 to i8**, !dbg !4451
  %246 = load i8*, i8** %245, align 4, !dbg !4451
  call void @llvm.dbg.value(metadata i8* %246, metadata !4240, metadata !DIExpression()), !dbg !4448
  br i1 %237, label %250, label %247, !dbg !4452

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !4453
  %249 = load i16, i16* %248, align 2, !dbg !4453
  br label %250, !dbg !4452

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !4452
  call void @llvm.dbg.value(metadata i32 undef, metadata !4241, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4448
  call void @llvm.dbg.value(metadata i8* %10, metadata !4237, metadata !DIExpression(DW_OP_deref)), !dbg !4448
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #27, !dbg !4454
  call void @llvm.dbg.value(metadata i32 %252, metadata !4224, metadata !DIExpression()), !dbg !4246
  %253 = icmp slt i32 %252, 0, !dbg !4455
  br i1 %253, label %257, label %254, !dbg !4457

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4241, metadata !DIExpression()), !dbg !4448
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !4194, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4246
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #26, !dbg !4458
  call void @llvm.dbg.value(metadata i32 %255, metadata !4224, metadata !DIExpression()), !dbg !4246
  %256 = icmp slt i32 %255, 0, !dbg !4459
  br i1 %256, label %257, label %259, !dbg !4461

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4194, metadata !DIExpression()), !dbg !4246
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4462
  call void @llvm.dbg.value(metadata i32 undef, metadata !4194, metadata !DIExpression()), !dbg !4246
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !4463
  call void @llvm.dbg.value(metadata i32 %260, metadata !4194, metadata !DIExpression()), !dbg !4246
  %261 = add nsw i32 %260, %255, !dbg !4464
  call void @llvm.dbg.value(metadata i32 %261, metadata !4194, metadata !DIExpression()), !dbg !4246
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4462
  %262 = add nuw nsw i32 %239, 1, !dbg !4465
  call void @llvm.dbg.value(metadata i32 %262, metadata !4235, metadata !DIExpression()), !dbg !4443
  %263 = icmp eq i32 %262, %164, !dbg !4444
  br i1 %263, label %264, label %238, !dbg !4445, !llvm.loop !4466

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !4442
  call void @llvm.dbg.value(metadata i32 %265, metadata !4194, metadata !DIExpression()), !dbg !4246
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #27, !dbg !4468
  br label %267, !dbg !4469

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4246
  ret i32 %268, !dbg !4470
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4471 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4475, metadata !DIExpression()), !dbg !4483
  call void @llvm.dbg.value(metadata i8* %0, metadata !4476, metadata !DIExpression()), !dbg !4483
  call void @llvm.dbg.value(metadata i8* %0, metadata !4477, metadata !DIExpression()), !dbg !4483
  %2 = load i8, i8* %0, align 1, !dbg !4484
  %3 = zext i8 %2 to i32, !dbg !4484
  %4 = shl nuw nsw i32 %3, 2, !dbg !4485
  call void @llvm.dbg.value(metadata i32 %4, metadata !4478, metadata !DIExpression()), !dbg !4483
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4486
  %6 = load i8, i8* %5, align 1, !dbg !4486
  %7 = zext i8 %6 to i32, !dbg !4486
  call void @llvm.dbg.value(metadata i32 %7, metadata !4479, metadata !DIExpression()), !dbg !4483
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4487
  %9 = load i8, i8* %8, align 1, !dbg !4487
  %10 = zext i8 %9 to i32, !dbg !4487
  call void @llvm.dbg.value(metadata i32 %10, metadata !4480, metadata !DIExpression()), !dbg !4483
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !4488
  call void @llvm.dbg.value(metadata i8* %11, metadata !4476, metadata !DIExpression()), !dbg !4483
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !4489
  call void @llvm.dbg.value(metadata i8* %12, metadata !4476, metadata !DIExpression()), !dbg !4483
  call void @llvm.dbg.value(metadata i32 0, metadata !4481, metadata !DIExpression()), !dbg !4490
  %13 = icmp eq i8 %6, 0, !dbg !4491
  br i1 %13, label %14, label %19, !dbg !4493

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !4483
  %16 = ptrtoint i8* %15 to i32, !dbg !4494
  %17 = ptrtoint i8* %0 to i32, !dbg !4494
  %18 = sub i32 %16, %17, !dbg !4494
  ret i32 %18, !dbg !4495

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4481, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i8* %21, metadata !4476, metadata !DIExpression()), !dbg !4483
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !4496
  call void @llvm.dbg.value(metadata i8* %22, metadata !4476, metadata !DIExpression()), !dbg !4483
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #27, !dbg !4498
  %24 = add i32 %23, 1, !dbg !4499
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !4500
  call void @llvm.dbg.value(metadata i8* %25, metadata !4476, metadata !DIExpression()), !dbg !4483
  %26 = add nuw nsw i32 %20, 1, !dbg !4501
  call void @llvm.dbg.value(metadata i32 %26, metadata !4481, metadata !DIExpression()), !dbg !4490
  %27 = icmp eq i32 %26, %7, !dbg !4491
  br i1 %27, label %14, label %19, !dbg !4493, !llvm.loop !4502
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4504 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4508, metadata !DIExpression()), !dbg !4512
  call void @llvm.dbg.value(metadata i8* %1, metadata !4509, metadata !DIExpression()), !dbg !4512
  call void @llvm.dbg.value(metadata i8* %2, metadata !4510, metadata !DIExpression()), !dbg !4512
  call void @llvm.dbg.value(metadata i16 %3, metadata !4511, metadata !DIExpression()), !dbg !4512
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4513
  br i1 %5, label %6, label %9, !dbg !4515

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !4516
  %8 = add i32 %7, 1, !dbg !4518
  br label %20, !dbg !4519

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4520
  br i1 %10, label %13, label %11, !dbg !4521

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4521
  br label %16, !dbg !4521

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !4522
  %15 = add i32 %14, 1, !dbg !4523
  br label %16, !dbg !4521

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4521
  %18 = and i32 %17, 65535, !dbg !4524
  call void @llvm.dbg.value(metadata i32 %17, metadata !4511, metadata !DIExpression()), !dbg !4512
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #27, !dbg !4525
  br label %20, !dbg !4526

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4512
  ret i32 %21, !dbg !4527
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4528 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4530, metadata !DIExpression()), !dbg !4531
  ret i32 0, !dbg !4532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #8 !dbg !4533 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4537, metadata !DIExpression()), !dbg !4538
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4539
  ret void, !dbg !4540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #4 !dbg !4541 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4544
  ret i8* %1, !dbg !4545
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4546 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4557, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i8* %0, metadata !4556, metadata !DIExpression()), !dbg !4566
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !4567
  ret void, !dbg !4569
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4570 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4574, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i8* %1, metadata !4575, metadata !DIExpression()), !dbg !4576
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4577
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !4577
  ret i32 %4, !dbg !4578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4579 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4586, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4583, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i8* %1, metadata !4584, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i8* %2, metadata !4585, metadata !DIExpression()), !dbg !4587
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !4588
  ret void, !dbg !4589
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4590 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4594, metadata !DIExpression()), !dbg !4597
  call void @llvm.dbg.value(metadata i32 %1, metadata !4595, metadata !DIExpression()), !dbg !4597
  call void @llvm.dbg.value(metadata i32 0, metadata !4596, metadata !DIExpression()), !dbg !4597
  %3 = icmp eq i32 %1, 0, !dbg !4598
  br i1 %3, label %13, label %4, !dbg !4601

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4596, metadata !DIExpression()), !dbg !4597
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4602
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4604
  %8 = load i8, i8* %7, align 1, !dbg !4604
  %9 = zext i8 %8 to i32, !dbg !4604
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !4602
  %11 = add nuw i32 %5, 1, !dbg !4605
  call void @llvm.dbg.value(metadata i32 %11, metadata !4596, metadata !DIExpression()), !dbg !4597
  %12 = icmp eq i32 %11, %1, !dbg !4598
  br i1 %12, label %13, label %4, !dbg !4601, !llvm.loop !4606

13:                                               ; preds = %4, %2
  ret void, !dbg !4608
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4609 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4613, metadata !DIExpression()), !dbg !4615
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4616
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !4616
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4614, metadata !DIExpression()), !dbg !4617
  call void @llvm.va_start(i8* nonnull %3), !dbg !4618
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4619
  %5 = load i32, i32* %4, align 4, !dbg !4619
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4619
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !4619
  call void @llvm.va_end(i8* nonnull %3), !dbg !4620
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !4621
  ret void, !dbg !4621
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4622 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4626, metadata !DIExpression()), !dbg !4631
  call void @llvm.dbg.value(metadata i32 %1, metadata !4627, metadata !DIExpression()), !dbg !4631
  call void @llvm.dbg.value(metadata i8* %2, metadata !4628, metadata !DIExpression()), !dbg !4631
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4632
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !4632
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4629, metadata !DIExpression()), !dbg !4633
  call void @llvm.va_start(i8* nonnull %5), !dbg !4634
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4635
  %7 = load i32, i32* %6, align 4, !dbg !4635
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4635
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !4635
  call void @llvm.dbg.value(metadata i32 %9, metadata !4630, metadata !DIExpression()), !dbg !4631
  call void @llvm.va_end(i8* nonnull %5), !dbg !4636
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !4637
  ret i32 %9, !dbg !4638
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4639 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4646, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.value(metadata i8* %0, metadata !4643, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.value(metadata i32 %1, metadata !4644, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.value(metadata i8* %2, metadata !4645, metadata !DIExpression()), !dbg !4653
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4654
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !4654
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4647, metadata !DIExpression()), !dbg !4655
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4656
  store i8* %0, i8** %7, align 4, !dbg !4656
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4656
  store i32 %1, i32* %8, align 4, !dbg !4656
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4656
  store i32 0, i32* %9, align 4, !dbg !4656
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !4657
  %10 = load i32, i32* %9, align 4, !dbg !4658
  %11 = load i32, i32* %8, align 4, !dbg !4660
  %12 = icmp slt i32 %10, %11, !dbg !4661
  br i1 %12, label %13, label %15, !dbg !4662

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4663
  store i8 0, i8* %14, align 1, !dbg !4665
  br label %15, !dbg !4666

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !4667
  ret i32 %10, !dbg !4668
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4669 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4674, metadata !DIExpression()), !dbg !4676
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4675, metadata !DIExpression()), !dbg !4676
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4677
  %4 = load i8*, i8** %3, align 4, !dbg !4677
  %5 = icmp eq i8* %4, null, !dbg !4679
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4680
  br i1 %5, label %12, label %8, !dbg !4681

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4682
  %10 = load i32, i32* %9, align 4, !dbg !4682
  %11 = icmp slt i32 %7, %10, !dbg !4683
  br i1 %11, label %15, label %12, !dbg !4684

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4685
  %14 = add nsw i32 %7, 1, !dbg !4687
  store i32 %14, i32* %13, align 4, !dbg !4687
  br label %25, !dbg !4688

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4689
  %17 = icmp eq i32 %7, %16, !dbg !4691
  br i1 %17, label %18, label %21, !dbg !4692

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4693
  store i32 %19, i32* %6, align 4, !dbg !4693
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4695
  store i8 0, i8* %20, align 1, !dbg !4696
  br label %25, !dbg !4697

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4698
  %23 = add nsw i32 %7, 1, !dbg !4700
  store i32 %23, i32* %6, align 4, !dbg !4700
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4701
  store i8 %22, i8* %24, align 1, !dbg !4702
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4703
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4704 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4709, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i8* %1, metadata !4710, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i8* %2, metadata !4711, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i8* %3, metadata !4712, metadata !DIExpression()), !dbg !4713
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !4714
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !4715
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !4716
  unreachable, !dbg !4717
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4718 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !4822
  ret %struct.k_thread* %1, !dbg !4823
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4824 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4828, metadata !DIExpression()), !dbg !4829
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !4830, !srcloc !4832
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !4833
  ret void, !dbg !4834
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4835 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !4836, !srcloc !4838
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !4839
  ret %struct.k_thread* %1, !dbg !4840
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #12 !dbg !4841 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4852, metadata !DIExpression()), !dbg !4856
  call void @llvm.dbg.value(metadata i8* %1, metadata !4853, metadata !DIExpression()), !dbg !4856
  %3 = icmp eq i8* %1, null, !dbg !4857
  br i1 %3, label %8, label %4, !dbg !4859

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4860
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4860
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4854, metadata !DIExpression()), !dbg !4856
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4861, !range !4862
  call void @llvm.dbg.value(metadata i32 %7, metadata !4855, metadata !DIExpression()), !dbg !4856
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !4863
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !4864
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !4865
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #5 !dbg !4866 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4870, metadata !DIExpression()), !dbg !4874
  call void @llvm.dbg.value(metadata i8* %1, metadata !4871, metadata !DIExpression()), !dbg !4874
  call void @llvm.dbg.value(metadata i8* %1, metadata !4872, metadata !DIExpression()), !dbg !4874
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4875
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4873, metadata !DIExpression()), !dbg !4874
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !4876
  %5 = ptrtoint i8* %4 to i32, !dbg !4877
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !4877
  %7 = sub i32 %5, %6, !dbg !4877
  %8 = lshr i32 %7, 3, !dbg !4878
  ret i32 %8, !dbg !4879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #9 !dbg !4880 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4884, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i32 %1, metadata !4885, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i1 %2, metadata !4886, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4889
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4890
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4887, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4888, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4889
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !4891
  %6 = bitcast i8* %5 to i16*, !dbg !4891
  %7 = load i16, i16* %6, align 2, !dbg !4891
  %8 = and i16 %7, -2, !dbg !4895
  %9 = zext i1 %2 to i16, !dbg !4895
  %10 = or i16 %8, %9, !dbg !4895
  store i16 %10, i16* %6, align 2, !dbg !4891
  ret void, !dbg !4896
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4897 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4901, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.value(metadata i32 %1, metadata !4902, metadata !DIExpression()), !dbg !4903
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4904
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4906
  br i1 %4, label %7, label %5, !dbg !4907

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4908
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4910
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !4911
  br label %7, !dbg !4912

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4913, !range !4915
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !4916
  br i1 %9, label %13, label %10, !dbg !4917

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !4918
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4920, !range !4915
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !4921
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4922
  call void @llvm.dbg.value(metadata i32 %12, metadata !4902, metadata !DIExpression()), !dbg !4903
  br label %13, !dbg !4923

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4902, metadata !DIExpression()), !dbg !4903
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !4924
  ret void, !dbg !4925
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4926 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4930, metadata !DIExpression()), !dbg !4932
  call void @llvm.dbg.value(metadata i32 %1, metadata !4931, metadata !DIExpression()), !dbg !4932
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4933
  %4 = add i32 %3, %1, !dbg !4934
  ret i32 %4, !dbg !4935
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4936 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4940, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.value(metadata i32 %1, metadata !4941, metadata !DIExpression()), !dbg !4942
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4943
  %4 = and i32 %3, 1, !dbg !4944
  %5 = icmp ne i32 %4, 0, !dbg !4943
  ret i1 %5, !dbg !4945
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4946 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4948, metadata !DIExpression()), !dbg !4953
  call void @llvm.dbg.value(metadata i32 %1, metadata !4949, metadata !DIExpression()), !dbg !4953
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4954, !range !4955
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4956
  call void @llvm.dbg.value(metadata i32 %4, metadata !4950, metadata !DIExpression()), !dbg !4957
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !4958
  ret void, !dbg !4959
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4960 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4964, metadata !DIExpression()), !dbg !4969
  call void @llvm.dbg.value(metadata i32 %1, metadata !4965, metadata !DIExpression()), !dbg !4969
  call void @llvm.dbg.value(metadata i32 %2, metadata !4966, metadata !DIExpression()), !dbg !4969
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4970
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4971
  %6 = add i32 %5, %4, !dbg !4972
  call void @llvm.dbg.value(metadata i32 %6, metadata !4967, metadata !DIExpression()), !dbg !4969
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !4973
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4974
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4975
  ret void, !dbg !4976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4977 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4979, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata i32 %1, metadata !4980, metadata !DIExpression()), !dbg !4981
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !4982
  %4 = sub i32 %1, %3, !dbg !4983
  ret i32 %4, !dbg !4984
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4985 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4987, metadata !DIExpression()), !dbg !4992
  call void @llvm.dbg.value(metadata i32 %1, metadata !4988, metadata !DIExpression()), !dbg !4992
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4993, !range !4955
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4994
  call void @llvm.dbg.value(metadata i32 %4, metadata !4989, metadata !DIExpression()), !dbg !4995
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !4996
  ret void, !dbg !4997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4998 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5002, metadata !DIExpression()), !dbg !5004
  call void @llvm.dbg.value(metadata i32 %1, metadata !5003, metadata !DIExpression()), !dbg !5004
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !5005
  %4 = lshr i32 %3, 1, !dbg !5006
  ret i32 %4, !dbg !5007
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !5008 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5012, metadata !DIExpression()), !dbg !5015
  call void @llvm.dbg.value(metadata i32 %1, metadata !5013, metadata !DIExpression()), !dbg !5015
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !5016
  %4 = add i32 %1, 1, !dbg !5017
  %5 = sub i32 %4, %3, !dbg !5018
  call void @llvm.dbg.value(metadata i32 %5, metadata !5014, metadata !DIExpression()), !dbg !5015
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !5019, !range !5020
  %7 = sub nsw i32 31, %6, !dbg !5021
  ret i32 %7, !dbg !5022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5023 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5027, metadata !DIExpression()), !dbg !5036
  call void @llvm.dbg.value(metadata i32 %1, metadata !5028, metadata !DIExpression()), !dbg !5036
  call void @llvm.dbg.value(metadata i32 %2, metadata !5029, metadata !DIExpression()), !dbg !5036
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !5030, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5036
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !5037
  %5 = load i32, i32* %4, align 4, !dbg !5037
  %6 = icmp eq i32 %5, 0, !dbg !5038
  br i1 %6, label %7, label %12, !dbg !5039

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5040
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5042
  %10 = load i32, i32* %9, align 4, !dbg !5043
  %11 = or i32 %10, %8, !dbg !5043
  store i32 %11, i32* %9, align 4, !dbg !5043
  store i32 %1, i32* %4, align 4, !dbg !5044
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !5045
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !5046
  br label %14, !dbg !5047

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !5032, metadata !DIExpression()), !dbg !5048
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !5049, !range !5050
  call void @llvm.dbg.value(metadata i32 %13, metadata !5035, metadata !DIExpression()), !dbg !5048
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !5051
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !5052
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !5053
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !5054
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !5055
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5056 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5058, metadata !DIExpression()), !dbg !5061
  call void @llvm.dbg.value(metadata i32 %1, metadata !5059, metadata !DIExpression()), !dbg !5061
  call void @llvm.dbg.value(metadata i32 %2, metadata !5060, metadata !DIExpression()), !dbg !5061
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !5062
  ret void, !dbg !5063
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5064 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5066, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.value(metadata i32 %1, metadata !5067, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.value(metadata i32 %2, metadata !5068, metadata !DIExpression()), !dbg !5069
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !5070
  ret void, !dbg !5071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #4 !dbg !5072 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5074, metadata !DIExpression()), !dbg !5076
  call void @llvm.dbg.value(metadata i32 %1, metadata !5075, metadata !DIExpression()), !dbg !5076
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !5077
  ret i32 %3, !dbg !5078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !5079 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5083, metadata !DIExpression()), !dbg !5088
  call void @llvm.dbg.value(metadata i32 %1, metadata !5084, metadata !DIExpression()), !dbg !5088
  call void @llvm.dbg.value(metadata i32 %2, metadata !5085, metadata !DIExpression()), !dbg !5088
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !5089
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5086, metadata !DIExpression()), !dbg !5088
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5087, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5088
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5087, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5088
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5090
  call void @llvm.dbg.value(metadata i8* %5, metadata !5087, metadata !DIExpression()), !dbg !5088
  %6 = bitcast i8* %5 to i16*, !dbg !5091
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5094
  %8 = load i16, i16* %7, align 2, !dbg !5094
  %9 = zext i16 %8 to i32, !dbg !5094
  ret i32 %9, !dbg !5095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #5 !dbg !5096 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5100, metadata !DIExpression()), !dbg !5101
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !5102
  ret %struct.chunk_unit_t* %2, !dbg !5103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #8 !dbg !5104 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5108, metadata !DIExpression()), !dbg !5114
  call void @llvm.dbg.value(metadata i32 %1, metadata !5109, metadata !DIExpression()), !dbg !5114
  call void @llvm.dbg.value(metadata i32 %2, metadata !5110, metadata !DIExpression()), !dbg !5114
  call void @llvm.dbg.value(metadata i32 %3, metadata !5111, metadata !DIExpression()), !dbg !5114
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !5115
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !5112, metadata !DIExpression()), !dbg !5114
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !5113, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5114
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !5116
  call void @llvm.dbg.value(metadata i8* %6, metadata !5113, metadata !DIExpression()), !dbg !5114
  %7 = trunc i32 %3 to i16, !dbg !5117
  %8 = bitcast i8* %6 to i16*, !dbg !5120
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !5121
  store i16 %7, i16* %9, align 2, !dbg !5122
  ret void, !dbg !5123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #5 !dbg !5124 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5128, metadata !DIExpression()), !dbg !5129
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !5130
  ret i32 %2, !dbg !5131
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5132 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5136, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata i32 %1, metadata !5137, metadata !DIExpression()), !dbg !5138
  %3 = add i32 %1, 4, !dbg !5139
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !5140
  ret i32 %4, !dbg !5141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #5 !dbg !5142 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5146, metadata !DIExpression()), !dbg !5147
  %2 = add i32 %0, 7, !dbg !5148
  %3 = lshr i32 %2, 3, !dbg !5149
  ret i32 %3, !dbg !5150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5151 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5155, metadata !DIExpression()), !dbg !5158
  call void @llvm.dbg.value(metadata i32 %1, metadata !5156, metadata !DIExpression()), !dbg !5158
  call void @llvm.dbg.value(metadata i32 %2, metadata !5157, metadata !DIExpression()), !dbg !5158
  %4 = shl i32 %2, 1, !dbg !5159
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !5160
  ret void, !dbg !5161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5162 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5164, metadata !DIExpression()), !dbg !5167
  call void @llvm.dbg.value(metadata i32 %1, metadata !5165, metadata !DIExpression()), !dbg !5167
  call void @llvm.dbg.value(metadata i32 %2, metadata !5166, metadata !DIExpression()), !dbg !5167
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !5168
  ret void, !dbg !5169
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5170 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5172, metadata !DIExpression()), !dbg !5180
  call void @llvm.dbg.value(metadata i32 %1, metadata !5173, metadata !DIExpression()), !dbg !5180
  call void @llvm.dbg.value(metadata i32 %2, metadata !5174, metadata !DIExpression()), !dbg !5180
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !5181
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !5175, metadata !DIExpression()), !dbg !5180
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5182
  %6 = icmp eq i32 %5, %1, !dbg !5183
  br i1 %6, label %7, label %14, !dbg !5184

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5185
  %9 = xor i32 %8, -1, !dbg !5187
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5188
  %11 = load i32, i32* %10, align 4, !dbg !5189
  %12 = and i32 %11, %9, !dbg !5189
  store i32 %12, i32* %10, align 4, !dbg !5189
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !5190
  store i32 0, i32* %13, align 4, !dbg !5191
  br label %17, !dbg !5192

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5193
  call void @llvm.dbg.value(metadata i32 %15, metadata !5176, metadata !DIExpression()), !dbg !5194
  call void @llvm.dbg.value(metadata i32 %5, metadata !5179, metadata !DIExpression()), !dbg !5194
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !5195
  store i32 %5, i32* %16, align 4, !dbg !5196
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !5197
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !5198
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !5199
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #4 !dbg !5200 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5202, metadata !DIExpression()), !dbg !5204
  call void @llvm.dbg.value(metadata i32 %1, metadata !5203, metadata !DIExpression()), !dbg !5204
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !5205
  ret i32 %3, !dbg !5206
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #4 !dbg !5207 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5211, metadata !DIExpression()), !dbg !5218
  call void @llvm.dbg.value(metadata i8* %1, metadata !5212, metadata !DIExpression()), !dbg !5218
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5219
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5219
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5213, metadata !DIExpression()), !dbg !5218
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !5220
  call void @llvm.dbg.value(metadata i32 %5, metadata !5214, metadata !DIExpression()), !dbg !5218
  %6 = ptrtoint i8* %1 to i32, !dbg !5221
  call void @llvm.dbg.value(metadata i32 %6, metadata !5215, metadata !DIExpression()), !dbg !5218
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !5222
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !5222
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !5223
  call void @llvm.dbg.value(metadata i32 %9, metadata !5216, metadata !DIExpression()), !dbg !5218
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !5224
  %11 = shl i32 %10, 3, !dbg !5225
  call void @llvm.dbg.value(metadata i32 %11, metadata !5217, metadata !DIExpression()), !dbg !5218
  %12 = sub i32 %9, %6, !dbg !5226
  %13 = add i32 %12, %11, !dbg !5227
  ret i32 %13, !dbg !5228
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #13 !dbg !5229 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5233, metadata !DIExpression()), !dbg !5239
  call void @llvm.dbg.value(metadata i32 %1, metadata !5234, metadata !DIExpression()), !dbg !5239
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5240
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5240
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5235, metadata !DIExpression()), !dbg !5239
  %5 = icmp eq i32 %1, 0, !dbg !5241
  br i1 %5, label %19, label %6, !dbg !5243

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !5244
  br i1 %7, label %19, label %8, !dbg !5245

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !5246, !range !4862
  call void @llvm.dbg.value(metadata i32 %9, metadata !5237, metadata !DIExpression()), !dbg !5239
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !5247
  call void @llvm.dbg.value(metadata i32 %10, metadata !5238, metadata !DIExpression()), !dbg !5239
  %11 = icmp eq i32 %10, 0, !dbg !5248
  br i1 %11, label %19, label %12, !dbg !5250

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !5251
  %14 = icmp ugt i32 %13, %9, !dbg !5253
  br i1 %14, label %15, label %17, !dbg !5254

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !5255
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !5257
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !5258
  br label %17, !dbg !5259

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !5260
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !5261
  call void @llvm.dbg.value(metadata i8* %18, metadata !5236, metadata !DIExpression()), !dbg !5239
  br label %19, !dbg !5262

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !5239
  ret i8* %20, !dbg !5263
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #4 !dbg !5264 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 %1, metadata !5269, metadata !DIExpression()), !dbg !5270
  %3 = lshr i32 %1, 3, !dbg !5271
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5272
  %5 = load i32, i32* %4, align 4, !dbg !5272
  %6 = icmp uge i32 %3, %5, !dbg !5273
  ret i1 %6, !dbg !5274
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5275 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5279, metadata !DIExpression()), !dbg !5294
  call void @llvm.dbg.value(metadata i32 %1, metadata !5280, metadata !DIExpression()), !dbg !5294
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5295
  call void @llvm.dbg.value(metadata i32 %3, metadata !5281, metadata !DIExpression()), !dbg !5294
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !5282, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5294
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !5296
  %5 = load i32, i32* %4, align 4, !dbg !5296
  %6 = icmp eq i32 %5, 0, !dbg !5297
  br i1 %6, label %19, label %7, !dbg !5298

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !5299
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !5300
  call void @llvm.dbg.value(metadata i32 %9, metadata !5286, metadata !DIExpression()), !dbg !5300
  call void @llvm.dbg.value(metadata i32 %8, metadata !5287, metadata !DIExpression()), !dbg !5301
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !5302
  %11 = icmp ult i32 %10, %1, !dbg !5304
  br i1 %11, label %13, label %12, !dbg !5305

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !5306
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !5308
  store i32 %14, i32* %4, align 4, !dbg !5309
  %15 = add nsw i32 %9, -1, !dbg !5310
  call void @llvm.dbg.value(metadata i32 %15, metadata !5286, metadata !DIExpression()), !dbg !5300
  %16 = icmp eq i32 %15, 0, !dbg !5310
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !5311
  br i1 %18, label %19, label %7, !dbg !5311, !llvm.loop !5312

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5315
  %21 = load i32, i32* %20, align 4, !dbg !5315
  %22 = add nsw i32 %3, 1, !dbg !5316
  %23 = shl nsw i32 -1, %22, !dbg !5316
  %24 = and i32 %21, %23, !dbg !5317
  call void @llvm.dbg.value(metadata i32 %24, metadata !5289, metadata !DIExpression()), !dbg !5294
  %25 = icmp eq i32 %24, 0, !dbg !5318
  br i1 %25, label %30, label %26, !dbg !5319

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !5320, !range !5020
  call void @llvm.dbg.value(metadata i32 %27, metadata !5290, metadata !DIExpression()), !dbg !5321
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !5322
  %29 = load i32, i32* %28, align 4, !dbg !5322
  call void @llvm.dbg.value(metadata i32 %29, metadata !5293, metadata !DIExpression()), !dbg !5321
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !5323
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !5294
  ret i32 %31, !dbg !5324
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5325 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5327, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata i32 %1, metadata !5328, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata i32 %2, metadata !5329, metadata !DIExpression()), !dbg !5333
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5334
  call void @llvm.dbg.value(metadata i32 %4, metadata !5330, metadata !DIExpression()), !dbg !5333
  %5 = sub i32 %2, %1, !dbg !5335
  call void @llvm.dbg.value(metadata i32 %5, metadata !5331, metadata !DIExpression()), !dbg !5333
  %6 = sub i32 %4, %5, !dbg !5336
  call void @llvm.dbg.value(metadata i32 %6, metadata !5332, metadata !DIExpression()), !dbg !5333
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !5337
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !5338
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !5339
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !5340
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !5341
  ret void, !dbg !5342
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5343 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5347, metadata !DIExpression()), !dbg !5351
  call void @llvm.dbg.value(metadata i32 %1, metadata !5348, metadata !DIExpression()), !dbg !5351
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !5352
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5349, metadata !DIExpression()), !dbg !5351
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !5353
  call void @llvm.dbg.value(metadata i8* %4, metadata !5350, metadata !DIExpression()), !dbg !5351
  ret i8* %4, !dbg !5354
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !5355 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5359, metadata !DIExpression()), !dbg !5371
  call void @llvm.dbg.value(metadata i32 %1, metadata !5360, metadata !DIExpression()), !dbg !5371
  call void @llvm.dbg.value(metadata i32 %2, metadata !5361, metadata !DIExpression()), !dbg !5371
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5372
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5372
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !5362, metadata !DIExpression()), !dbg !5371
  %6 = sub i32 0, %1, !dbg !5373
  %7 = and i32 %6, %1, !dbg !5374
  call void @llvm.dbg.value(metadata i32 %7, metadata !5364, metadata !DIExpression()), !dbg !5371
  %8 = icmp eq i32 %7, %1, !dbg !5375
  br i1 %8, label %13, label %9, !dbg !5377

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !5378
  call void @llvm.dbg.value(metadata i32 %10, metadata !5360, metadata !DIExpression()), !dbg !5371
  %11 = icmp ult i32 %7, 4, !dbg !5380
  %12 = select i1 %11, i32 %7, i32 4, !dbg !5380
  br label %17, !dbg !5380

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !5381
  br i1 %14, label %15, label %17, !dbg !5384

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !5385
  br label %57, !dbg !5387

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !5371
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !5388
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5360, metadata !DIExpression()), !dbg !5371
  call void @llvm.dbg.value(metadata i32 %19, metadata !5363, metadata !DIExpression()), !dbg !5371
  call void @llvm.dbg.value(metadata i32 %18, metadata !5364, metadata !DIExpression()), !dbg !5371
  %21 = icmp eq i32 %2, 0, !dbg !5389
  br i1 %21, label %57, label %22, !dbg !5391

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !5392
  br i1 %23, label %57, label %24, !dbg !5393

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !5394
  %26 = add i32 %25, %20, !dbg !5395
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !5396, !range !4862
  call void @llvm.dbg.value(metadata i32 %27, metadata !5365, metadata !DIExpression()), !dbg !5371
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !5397
  call void @llvm.dbg.value(metadata i32 %28, metadata !5366, metadata !DIExpression()), !dbg !5371
  %29 = icmp eq i32 %28, 0, !dbg !5398
  br i1 %29, label %57, label %30, !dbg !5400

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !5401
  call void @llvm.dbg.value(metadata i8* %31, metadata !5367, metadata !DIExpression()), !dbg !5371
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !5402
  %33 = ptrtoint i8* %32 to i32, !dbg !5402
  %34 = add i32 %20, -1, !dbg !5402
  %35 = add i32 %34, %33, !dbg !5402
  %36 = sub i32 0, %20, !dbg !5402
  %37 = and i32 %35, %36, !dbg !5402
  %38 = inttoptr i32 %37 to i8*, !dbg !5403
  %39 = sub i32 0, %18, !dbg !5404
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !5404
  call void @llvm.dbg.value(metadata i8* %40, metadata !5367, metadata !DIExpression()), !dbg !5371
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !5405
  %42 = ptrtoint i8* %41 to i32, !dbg !5405
  %43 = add i32 %42, 7, !dbg !5405
  %44 = and i32 %43, -8, !dbg !5405
  call void @llvm.dbg.value(metadata i32 %44, metadata !5368, metadata !DIExpression()), !dbg !5371
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !5406
  call void @llvm.dbg.value(metadata i32 %45, metadata !5369, metadata !DIExpression()), !dbg !5371
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !5407
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !5408
  %48 = sub i32 %44, %47, !dbg !5408
  %49 = ashr exact i32 %48, 3, !dbg !5408
  call void @llvm.dbg.value(metadata i32 %49, metadata !5370, metadata !DIExpression()), !dbg !5371
  %50 = icmp ugt i32 %45, %28, !dbg !5409
  br i1 %50, label %51, label %52, !dbg !5411

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !5412
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !5414
  br label %52, !dbg !5415

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !5416
  %54 = icmp ugt i32 %53, %49, !dbg !5418
  br i1 %54, label %55, label %56, !dbg !5419

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !5420
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !5422
  br label %56, !dbg !5423

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !5424
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !5371
  ret i8* %58, !dbg !5425
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !5426 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5430, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i8* %1, metadata !5431, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i32 %2, metadata !5432, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i32 %3, metadata !5433, metadata !DIExpression()), !dbg !5449
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5450
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5450
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5434, metadata !DIExpression()), !dbg !5449
  %7 = icmp eq i8* %1, null, !dbg !5451
  br i1 %7, label %8, label %10, !dbg !5453

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !5454
  br label %59, !dbg !5456

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !5457
  br i1 %11, label %12, label %13, !dbg !5459

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !5460
  br label %59, !dbg !5462

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !5463
  br i1 %14, label %59, label %15, !dbg !5465

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !5466, !range !4862
  call void @llvm.dbg.value(metadata i32 %16, metadata !5435, metadata !DIExpression()), !dbg !5449
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !5467
  call void @llvm.dbg.value(metadata i32 %17, metadata !5436, metadata !DIExpression()), !dbg !5449
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !5468
  %19 = ptrtoint i8* %1 to i32, !dbg !5469
  %20 = ptrtoint i8* %18 to i32, !dbg !5469
  %21 = sub i32 %19, %20, !dbg !5469
  call void @llvm.dbg.value(metadata i32 %21, metadata !5437, metadata !DIExpression()), !dbg !5449
  %22 = add i32 %21, %3, !dbg !5470
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !5471
  call void @llvm.dbg.value(metadata i32 %23, metadata !5438, metadata !DIExpression()), !dbg !5449
  %24 = icmp eq i32 %2, 0, !dbg !5472
  br i1 %24, label %29, label %25, !dbg !5473

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !5474
  %27 = and i32 %26, %19, !dbg !5475
  %28 = icmp eq i32 %27, 0, !dbg !5475
  br i1 %28, label %29, label %49, !dbg !5476

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !5477
  %31 = icmp eq i32 %23, %30, !dbg !5478
  br i1 %31, label %59, label %32, !dbg !5479

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !5480
  br i1 %33, label %34, label %36, !dbg !5481

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !5482
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #26, !dbg !5484
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !5485
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #26, !dbg !5486
  br label %59, !dbg !5487

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !5488
  br i1 %37, label %49, label %38, !dbg !5489

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !5490
  %40 = add i32 %39, %30, !dbg !5491
  %41 = icmp ult i32 %40, %23, !dbg !5492
  br i1 %41, label %49, label %42, !dbg !5493

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !5494
  call void @llvm.dbg.value(metadata i32 %43, metadata !5439, metadata !DIExpression()), !dbg !5495
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !5496
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !5497
  %45 = icmp ult i32 %43, %44, !dbg !5499
  br i1 %45, label %46, label %48, !dbg !5500

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !5501
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #26, !dbg !5503
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #26, !dbg !5504
  br label %48, !dbg !5505

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !5506
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !5507
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !5508
  call void @llvm.dbg.value(metadata i8* %50, metadata !5445, metadata !DIExpression()), !dbg !5449
  %51 = icmp eq i8* %50, null, !dbg !5509
  br i1 %51, label %59, label %52, !dbg !5510

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !5511, !range !4955
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !5512
  %55 = sub i32 %54, %21, !dbg !5513
  call void @llvm.dbg.value(metadata i32 %55, metadata !5446, metadata !DIExpression()), !dbg !5514
  %56 = icmp ult i32 %55, %3, !dbg !5515
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !5515
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #27, !dbg !5516
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !5517
  br label %59, !dbg !5518

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !5449
  ret i8* %60, !dbg !5519
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5520 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5524, metadata !DIExpression()), !dbg !5526
  call void @llvm.dbg.value(metadata i32 %1, metadata !5525, metadata !DIExpression()), !dbg !5526
  %3 = shl i32 %1, 3, !dbg !5527
  %4 = add i32 %3, -4, !dbg !5528
  ret i32 %4, !dbg !5529
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !5530 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5534, metadata !DIExpression()), !dbg !5545
  call void @llvm.dbg.value(metadata i8* %1, metadata !5535, metadata !DIExpression()), !dbg !5545
  call void @llvm.dbg.value(metadata i32 %2, metadata !5536, metadata !DIExpression()), !dbg !5545
  %4 = add i32 %2, -4, !dbg !5546
  call void @llvm.dbg.value(metadata i32 %4, metadata !5536, metadata !DIExpression()), !dbg !5545
  %5 = ptrtoint i8* %1 to i32, !dbg !5547
  %6 = add i32 %5, 7, !dbg !5547
  %7 = and i32 %6, -8, !dbg !5547
  call void @llvm.dbg.value(metadata i32 %7, metadata !5537, metadata !DIExpression()), !dbg !5545
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !5548
  %9 = ptrtoint i8* %8 to i32, !dbg !5548
  %10 = and i32 %9, -8, !dbg !5548
  call void @llvm.dbg.value(metadata i32 %10, metadata !5538, metadata !DIExpression()), !dbg !5545
  %11 = sub i32 %10, %7, !dbg !5549
  %12 = lshr exact i32 %11, 3, !dbg !5550
  call void @llvm.dbg.value(metadata i32 %12, metadata !5539, metadata !DIExpression()), !dbg !5545
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !5551
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !5540, metadata !DIExpression()), !dbg !5545
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5552
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !5553
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !5554
  store i32 %12, i32* %15, align 8, !dbg !5555
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !5556
  store i32 0, i32* %16, align 4, !dbg !5557
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !5558
  call void @llvm.dbg.value(metadata i32 %17, metadata !5541, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5545
  %18 = shl i32 %17, 2, !dbg !5559
  %19 = add i32 %18, 20, !dbg !5560
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #26, !dbg !5561
  call void @llvm.dbg.value(metadata i32 %20, metadata !5542, metadata !DIExpression()), !dbg !5545
  call void @llvm.dbg.value(metadata i32 0, metadata !5543, metadata !DIExpression()), !dbg !5562
  %21 = icmp slt i32 %17, 0, !dbg !5563
  br i1 %21, label %22, label %24, !dbg !5565

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #26, !dbg !5566
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !5567
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !5568
  %23 = sub i32 %12, %20, !dbg !5569
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #26, !dbg !5570
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #26, !dbg !5571
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !5572
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #26, !dbg !5573
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !5574
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #26, !dbg !5575
  ret void, !dbg !5576

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !5543, metadata !DIExpression()), !dbg !5562
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !5577
  store i32 0, i32* %26, align 4, !dbg !5579
  %27 = add nuw i32 %25, 1, !dbg !5580
  call void @llvm.dbg.value(metadata i32 %27, metadata !5543, metadata !DIExpression()), !dbg !5562
  %28 = icmp eq i32 %25, %17, !dbg !5563
  br i1 %28, label %22, label %24, !dbg !5565, !llvm.loop !5581
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5583 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5596, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5593, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i8* %1, metadata !5594, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i8* %2, metadata !5595, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i32 %4, metadata !5597, metadata !DIExpression()), !dbg !5722
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5723
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5723
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5598, metadata !DIExpression()), !dbg !5724
  call void @llvm.dbg.value(metadata i32 0, metadata !5602, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i1 undef, metadata !5604, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5722
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5725

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5725

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5726
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5596, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i8* %30, metadata !5595, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i32 %29, metadata !5602, metadata !DIExpression()), !dbg !5722
  %31 = load i8, i8* %30, align 1, !dbg !5727
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5725

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5727
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5728
  call void @llvm.dbg.value(metadata i8* %34, metadata !5595, metadata !DIExpression()), !dbg !5722
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !5728
  call void @llvm.dbg.value(metadata i32 %35, metadata !5606, metadata !DIExpression()), !dbg !5729
  %36 = icmp slt i32 %35, 0, !dbg !5730
  %37 = add i32 %29, 1, !dbg !5728
  call void @llvm.dbg.value(metadata i32 undef, metadata !5602, metadata !DIExpression()), !dbg !5722
  br i1 %36, label %365, label %28, !llvm.loop !5732

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5734
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5611, metadata !DIExpression()), !dbg !5735
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5735
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5654, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5657, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata i8* %30, metadata !5660, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata i32 -1, metadata !5661, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata i32 -1, metadata !5662, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata i8* null, metadata !5663, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata i8* %14, metadata !5664, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata i8 0, metadata !5665, metadata !DIExpression()), !dbg !5736
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !5737
  call void @llvm.dbg.value(metadata i8* %39, metadata !5595, metadata !DIExpression()), !dbg !5722
  %40 = load i24, i24* %15, align 8, !dbg !5738
  %41 = and i24 %40, 256, !dbg !5738
  %42 = icmp eq i24 %41, 0, !dbg !5738
  br i1 %42, label %51, label %43, !dbg !5740

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5741
  call void @llvm.dbg.value(metadata i8* %44, metadata !5596, metadata !DIExpression()), !dbg !5722
  %45 = bitcast i8* %27 to i32*, !dbg !5741
  %46 = load i32, i32* %45, align 4, !dbg !5741
  call void @llvm.dbg.value(metadata i32 %46, metadata !5661, metadata !DIExpression()), !dbg !5736
  %47 = icmp slt i32 %46, 0, !dbg !5743
  br i1 %47, label %48, label %56, !dbg !5745

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5746
  store i24 %49, i24* %15, align 8, !dbg !5746
  %50 = sub nsw i32 0, %46, !dbg !5748
  call void @llvm.dbg.value(metadata i32 %50, metadata !5661, metadata !DIExpression()), !dbg !5736
  br label %56, !dbg !5749

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5750
  %53 = icmp eq i24 %52, 0, !dbg !5750
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5752
  br label %56, !dbg !5752

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5753
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5736
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5596, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i32 %58, metadata !5661, metadata !DIExpression()), !dbg !5736
  %60 = and i24 %57, 1024, !dbg !5753
  %61 = icmp eq i24 %60, 0, !dbg !5753
  br i1 %61, label %69, label %62, !dbg !5754

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5755
  call void @llvm.dbg.value(metadata i8* %63, metadata !5596, metadata !DIExpression()), !dbg !5722
  %64 = bitcast i8* %59 to i32*, !dbg !5755
  %65 = load i32, i32* %64, align 4, !dbg !5755
  call void @llvm.dbg.value(metadata i32 %65, metadata !5666, metadata !DIExpression()), !dbg !5756
  %66 = icmp slt i32 %65, 0, !dbg !5757
  br i1 %66, label %67, label %74, !dbg !5759

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5760
  store i24 %68, i24* %15, align 8, !dbg !5760
  br label %74, !dbg !5762

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5763
  %71 = icmp eq i24 %70, 0, !dbg !5763
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5765
  br label %74, !dbg !5765

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5766
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5736
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5736
  call void @llvm.dbg.value(metadata i8* %77, metadata !5596, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i32 %76, metadata !5662, metadata !DIExpression()), !dbg !5736
  store i32 0, i32* %16, align 4, !dbg !5767
  store i32 0, i32* %17, align 8, !dbg !5768
  %78 = lshr i24 %75, 16, !dbg !5766
  call void @llvm.dbg.value(metadata i24 %78, metadata !5669, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5736
  %79 = lshr i24 %75, 11, !dbg !5769
  %80 = and i24 %79, 15, !dbg !5769
  %81 = zext i24 %80 to i32, !dbg !5769
  call void @llvm.dbg.value(metadata i32 %81, metadata !5670, metadata !DIExpression()), !dbg !5736
  %82 = trunc i24 %78 to i3, !dbg !5770
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5770

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5771

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5774
  call void @llvm.dbg.value(metadata i8* %85, metadata !5596, metadata !DIExpression()), !dbg !5722
  %86 = bitcast i8* %77 to i32*, !dbg !5774
  %87 = load i32, i32* %86, align 4, !dbg !5774
  %88 = sext i32 %87 to i64, !dbg !5774
  store i64 %88, i64* %20, align 8, !dbg !5776
  br label %115, !dbg !5777

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5778
  call void @llvm.dbg.value(metadata i8* %90, metadata !5596, metadata !DIExpression()), !dbg !5722
  %91 = bitcast i8* %77 to i32*, !dbg !5778
  %92 = load i32, i32* %91, align 4, !dbg !5778
  %93 = sext i32 %92 to i64, !dbg !5778
  store i64 %93, i64* %20, align 8, !dbg !5781
  br label %115, !dbg !5782

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5783
  %96 = add i32 %95, 7, !dbg !5783
  %97 = and i32 %96, -8, !dbg !5783
  %98 = inttoptr i32 %97 to i8*, !dbg !5783
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5783
  call void @llvm.dbg.value(metadata i8* %99, metadata !5596, metadata !DIExpression()), !dbg !5722
  %100 = inttoptr i32 %97 to i64*, !dbg !5783
  %101 = load i64, i64* %100, align 8, !dbg !5783
  store i64 %101, i64* %20, align 8, !dbg !5784
  br label %115, !dbg !5785

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5786
  %104 = add i32 %103, 7, !dbg !5786
  %105 = and i32 %104, -8, !dbg !5786
  %106 = inttoptr i32 %105 to i8*, !dbg !5786
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5786
  call void @llvm.dbg.value(metadata i8* %107, metadata !5596, metadata !DIExpression()), !dbg !5722
  %108 = inttoptr i32 %105 to i64*, !dbg !5786
  %109 = load i64, i64* %108, align 8, !dbg !5786
  store i64 %109, i64* %20, align 8, !dbg !5787
  br label %115, !dbg !5788

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5789
  call void @llvm.dbg.value(metadata i8* %111, metadata !5596, metadata !DIExpression()), !dbg !5722
  %112 = bitcast i8* %77 to i32*, !dbg !5789
  %113 = load i32, i32* %112, align 4, !dbg !5789
  %114 = sext i32 %113 to i64, !dbg !5790
  store i64 %114, i64* %20, align 8, !dbg !5791
  br label %115, !dbg !5792

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5793
  call void @llvm.dbg.value(metadata i8* %117, metadata !5596, metadata !DIExpression()), !dbg !5722
  %118 = trunc i24 %79 to i4, !dbg !5794
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5794

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5795
  %121 = ashr exact i64 %120, 56, !dbg !5795
  store i64 %121, i64* %20, align 8, !dbg !5798
  br label %177, !dbg !5799

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5800
  %124 = ashr exact i64 %123, 48, !dbg !5800
  store i64 %124, i64* %20, align 8, !dbg !5803
  br label %177, !dbg !5804

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5805

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5808
  call void @llvm.dbg.value(metadata i8* %127, metadata !5596, metadata !DIExpression()), !dbg !5722
  %128 = bitcast i8* %77 to i32*, !dbg !5808
  %129 = load i32, i32* %128, align 4, !dbg !5808
  %130 = zext i32 %129 to i64, !dbg !5808
  store i64 %130, i64* %20, align 8, !dbg !5810
  br label %157, !dbg !5811

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5812
  call void @llvm.dbg.value(metadata i8* %132, metadata !5596, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i8* %132, metadata !5596, metadata !DIExpression()), !dbg !5722
  %133 = bitcast i8* %77 to i32*, !dbg !5812
  %134 = load i32, i32* %133, align 4, !dbg !5812
  %135 = zext i32 %134 to i64, !dbg !5812
  store i64 %135, i64* %20, align 8, !dbg !5812
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5814
  %138 = add i32 %137, 7, !dbg !5814
  %139 = and i32 %138, -8, !dbg !5814
  %140 = inttoptr i32 %139 to i8*, !dbg !5814
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5814
  call void @llvm.dbg.value(metadata i8* %141, metadata !5596, metadata !DIExpression()), !dbg !5722
  %142 = inttoptr i32 %139 to i64*, !dbg !5814
  %143 = load i64, i64* %142, align 8, !dbg !5814
  store i64 %143, i64* %20, align 8, !dbg !5815
  br label %157, !dbg !5816

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5817
  %146 = add i32 %145, 7, !dbg !5817
  %147 = and i32 %146, -8, !dbg !5817
  %148 = inttoptr i32 %147 to i8*, !dbg !5817
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5817
  call void @llvm.dbg.value(metadata i8* %149, metadata !5596, metadata !DIExpression()), !dbg !5722
  %150 = inttoptr i32 %147 to i64*, !dbg !5817
  %151 = load i64, i64* %150, align 8, !dbg !5817
  store i64 %151, i64* %20, align 8, !dbg !5818
  br label %157, !dbg !5819

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5820
  call void @llvm.dbg.value(metadata i8* %153, metadata !5596, metadata !DIExpression()), !dbg !5722
  %154 = bitcast i8* %77 to i32*, !dbg !5820
  %155 = load i32, i32* %154, align 4, !dbg !5820
  %156 = zext i32 %155 to i64, !dbg !5821
  store i64 %156, i64* %20, align 8, !dbg !5822
  br label %157, !dbg !5823

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5824
  call void @llvm.dbg.value(metadata i8* %159, metadata !5596, metadata !DIExpression()), !dbg !5722
  %160 = trunc i24 %79 to i4, !dbg !5825
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5825

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5826
  store i64 %162, i64* %20, align 8, !dbg !5829
  br label %177, !dbg !5830

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5831
  store i64 %164, i64* %20, align 8, !dbg !5834
  br label %177, !dbg !5835

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5836
  %167 = add i32 %166, 7, !dbg !5836
  %168 = and i32 %167, -8, !dbg !5836
  %169 = inttoptr i32 %168 to i8*, !dbg !5836
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5836
  call void @llvm.dbg.value(metadata i8* %170, metadata !5596, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i8* %170, metadata !5596, metadata !DIExpression()), !dbg !5722
  %171 = inttoptr i32 %168 to double*, !dbg !5836
  %172 = load double, double* %171, align 8, !dbg !5836
  store double %172, double* %19, align 8, !dbg !5836
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5840
  call void @llvm.dbg.value(metadata i8* %174, metadata !5596, metadata !DIExpression()), !dbg !5722
  %175 = bitcast i8* %77 to i8**, !dbg !5840
  %176 = load i8*, i8** %175, align 4, !dbg !5840
  store i8* %176, i8** %18, align 8, !dbg !5843
  br label %177, !dbg !5844

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5736
  call void @llvm.dbg.value(metadata i8* %178, metadata !5596, metadata !DIExpression()), !dbg !5722
  %179 = and i24 %75, 3, !dbg !5845
  %180 = icmp eq i24 %179, 0, !dbg !5845
  br i1 %180, label %185, label %181, !dbg !5845

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !5846
  call void @llvm.dbg.value(metadata i32 %182, metadata !5671, metadata !DIExpression()), !dbg !5847
  %183 = icmp slt i32 %182, 0, !dbg !5848
  %184 = add i32 %182, %29, !dbg !5846
  call void @llvm.dbg.value(metadata i32 undef, metadata !5602, metadata !DIExpression()), !dbg !5722
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5850
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5851

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !5852
  call void @llvm.dbg.value(metadata i32 %188, metadata !5675, metadata !DIExpression()), !dbg !5853
  %189 = icmp slt i32 %188, 0, !dbg !5854
  %190 = add i32 %29, 1, !dbg !5852
  call void @llvm.dbg.value(metadata i32 undef, metadata !5602, metadata !DIExpression()), !dbg !5722
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5856
  call void @llvm.dbg.value(metadata i8* %192, metadata !5663, metadata !DIExpression()), !dbg !5736
  %193 = icmp sgt i32 %76, -1, !dbg !5857
  br i1 %193, label %194, label %196, !dbg !5859

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !5860
  call void @llvm.dbg.value(metadata i32 %195, metadata !5678, metadata !DIExpression()), !dbg !5862
  br label %241, !dbg !5863

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !5864
  call void @llvm.dbg.value(metadata i32 %197, metadata !5678, metadata !DIExpression()), !dbg !5862
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5663, metadata !DIExpression()), !dbg !5736
  %199 = load i64, i64* %20, align 8, !dbg !5866
  %200 = trunc i64 %199 to i8, !dbg !5867
  store i8 %200, i8* %10, align 1, !dbg !5868
  call void @llvm.dbg.value(metadata i8* %23, metadata !5664, metadata !DIExpression()), !dbg !5736
  br label %245, !dbg !5869

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5870
  %203 = icmp eq i24 %202, 0, !dbg !5870
  %204 = trunc i24 %75 to i8, !dbg !5872
  %205 = shl i8 %204, 1, !dbg !5872
  %206 = and i8 %205, 32, !dbg !5872
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5872
  call void @llvm.dbg.value(metadata i8 %207, metadata !5665, metadata !DIExpression()), !dbg !5736
  %208 = load i64, i64* %20, align 8, !dbg !5873
  call void @llvm.dbg.value(metadata i64 %208, metadata !5603, metadata !DIExpression()), !dbg !5722
  %209 = icmp slt i64 %208, 0, !dbg !5874
  br i1 %209, label %210, label %212, !dbg !5876

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5665, metadata !DIExpression()), !dbg !5736
  %211 = sub nsw i64 0, %208, !dbg !5877
  store i64 %211, i64* %20, align 8, !dbg !5879
  br label %212, !dbg !5880

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5736
  call void @llvm.dbg.value(metadata i8 %213, metadata !5665, metadata !DIExpression()), !dbg !5736
  %214 = load i64, i64* %20, align 8, !dbg !5881
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5882
  call void @llvm.dbg.value(metadata i8* %215, metadata !5663, metadata !DIExpression()), !dbg !5736
  br label %216, !dbg !5883

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5884
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5885
  call void @llvm.dbg.value(metadata i8* %218, metadata !5663, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata i8 %217, metadata !5665, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.label(metadata !5721), !dbg !5886
  %219 = icmp sgt i32 %76, -1, !dbg !5887
  br i1 %219, label %222, label %220, !dbg !5888

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5889
  br label %245, !dbg !5888

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5891
  %224 = sub i32 %22, %223, !dbg !5891
  call void @llvm.dbg.value(metadata i32 %224, metadata !5680, metadata !DIExpression()), !dbg !5892
  %225 = load i24, i24* %15, align 8, !dbg !5893
  %226 = and i24 %225, -65, !dbg !5893
  store i24 %226, i24* %15, align 8, !dbg !5893
  %227 = icmp ugt i32 %76, %224, !dbg !5894
  br i1 %227, label %228, label %245, !dbg !5896

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5897
  store i32 %229, i32* %16, align 4, !dbg !5899
  br label %245, !dbg !5900

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5901
  %232 = icmp eq i8* %231, null, !dbg !5903
  br i1 %232, label %245, label %233, !dbg !5904

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5905
  %235 = zext i32 %234 to i64, !dbg !5905
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5907
  call void @llvm.dbg.value(metadata i8* %236, metadata !5663, metadata !DIExpression()), !dbg !5736
  %237 = load i24, i24* %15, align 8, !dbg !5908
  %238 = or i24 %237, 1048576, !dbg !5908
  store i24 %238, i24* %15, align 8, !dbg !5908
  store i8 120, i8* %21, align 1, !dbg !5909
  br label %216, !dbg !5910

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5911
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !5914
  br label %363, !dbg !5915

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5916
  call void @llvm.dbg.value(metadata i32 %242, metadata !5678, metadata !DIExpression()), !dbg !5862
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5917
  call void @llvm.dbg.value(metadata i32 -1, metadata !5662, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata i32 %29, metadata !5602, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i8* %192, metadata !5663, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata i8* %243, metadata !5664, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata i8 0, metadata !5665, metadata !DIExpression()), !dbg !5736
  %244 = icmp eq i8* %192, null, !dbg !5918
  br i1 %244, label %363, label %245, !dbg !5920, !llvm.loop !5732

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5889
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5683, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5736
  call void @llvm.dbg.value(metadata i32 0, metadata !5684, metadata !DIExpression()), !dbg !5736
  %250 = zext i8 %249 to i32, !dbg !5921
  %251 = icmp eq i8 %249, 0, !dbg !5923
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5683, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5736
  call void @llvm.dbg.value(metadata i32 undef, metadata !5683, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5683, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5736
  call void @llvm.dbg.value(metadata i32 undef, metadata !5683, metadata !DIExpression()), !dbg !5736
  %252 = icmp sgt i32 %58, 0, !dbg !5924
  br i1 %252, label %253, label %302, !dbg !5925

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5889
  %255 = icmp eq i24 %254, 0, !dbg !5889
  %256 = ptrtoint i8* %248 to i32, !dbg !5926
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5683, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5736
  %257 = ptrtoint i8* %247 to i32, !dbg !5926
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5683, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5736
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5683, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5736
  %258 = xor i1 %251, true, !dbg !5927
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5683, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5736
  %259 = sext i1 %258 to i32, !dbg !5927
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5683, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5736
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5683, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5736
  %260 = lshr i24 %246, 19, !dbg !5928
  %261 = and i24 %260, 1, !dbg !5928
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5928
  %263 = zext i24 %262 to i32, !dbg !5928
  %264 = add i32 %257, %259, !dbg !5928
  %265 = add i32 %256, %263, !dbg !5928
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5683, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5736
  %266 = and i24 %246, 4194304, !dbg !5929
  %267 = icmp eq i24 %266, 0, !dbg !5929
  %268 = load i32, i32* %16, align 4, !dbg !5931
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5683, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5736
  call void @llvm.dbg.value(metadata i32 undef, metadata !5683, metadata !DIExpression()), !dbg !5736
  %269 = load i32, i32* %17, align 8, !dbg !5932
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5932
  call void @llvm.dbg.value(metadata i32 undef, metadata !5683, metadata !DIExpression()), !dbg !5736
  %271 = add i32 %264, %58, !dbg !5932
  %272 = add i32 %265, %268, !dbg !5932
  %273 = add i32 %272, %270, !dbg !5933
  %274 = sub i32 %271, %273, !dbg !5933
  call void @llvm.dbg.value(metadata i32 %274, metadata !5661, metadata !DIExpression()), !dbg !5736
  %275 = and i24 %246, 4, !dbg !5934
  %276 = icmp eq i24 %275, 0, !dbg !5934
  br i1 %276, label %277, label %302, !dbg !5935

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5685, metadata !DIExpression()), !dbg !5936
  %278 = and i24 %246, 64, !dbg !5937
  %279 = icmp eq i24 %278, 0, !dbg !5937
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5938
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5938
  %282 = select i1 %279, i32 32, i32 48, !dbg !5938
  br i1 %280, label %287, label %283, !dbg !5938

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !5939
  call void @llvm.dbg.value(metadata i32 %284, metadata !5690, metadata !DIExpression()), !dbg !5940
  %285 = icmp slt i32 %284, 0, !dbg !5941
  %286 = add i32 %29, 1, !dbg !5939
  call void @llvm.dbg.value(metadata i32 undef, metadata !5602, metadata !DIExpression()), !dbg !5722
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5736
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5726
  call void @llvm.dbg.value(metadata i32 %290, metadata !5602, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i8 undef, metadata !5685, metadata !DIExpression()), !dbg !5936
  call void @llvm.dbg.value(metadata i8 %288, metadata !5665, metadata !DIExpression()), !dbg !5736
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5943
  %292 = add i32 %291, -1, !dbg !5943
  br label %293, !dbg !5943

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5944
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5726
  call void @llvm.dbg.value(metadata i32 %295, metadata !5602, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i32 %294, metadata !5661, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata i32 %294, metadata !5661, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5736
  %296 = icmp sgt i32 %294, 0, !dbg !5945
  br i1 %296, label %297, label %302, !dbg !5943

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5946
  call void @llvm.dbg.value(metadata i32 %298, metadata !5661, metadata !DIExpression()), !dbg !5736
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !5947
  call void @llvm.dbg.value(metadata i32 %299, metadata !5696, metadata !DIExpression()), !dbg !5948
  %300 = icmp slt i32 %299, 0, !dbg !5949
  %301 = add i32 %295, 1, !dbg !5947
  call void @llvm.dbg.value(metadata i32 undef, metadata !5602, metadata !DIExpression()), !dbg !5722
  br i1 %300, label %361, label %293, !llvm.loop !5951

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5736
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5736
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5726
  call void @llvm.dbg.value(metadata i32 %305, metadata !5602, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i32 %304, metadata !5661, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata i8 %303, metadata !5665, metadata !DIExpression()), !dbg !5736
  %306 = icmp eq i8 %303, 0, !dbg !5953
  br i1 %306, label %312, label %307, !dbg !5954

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5955
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !5956
  call void @llvm.dbg.value(metadata i32 %309, metadata !5699, metadata !DIExpression()), !dbg !5957
  %310 = icmp slt i32 %309, 0, !dbg !5958
  %311 = add i32 %305, 1, !dbg !5956
  call void @llvm.dbg.value(metadata i32 undef, metadata !5602, metadata !DIExpression()), !dbg !5722
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5726
  call void @llvm.dbg.value(metadata i32 %313, metadata !5602, metadata !DIExpression()), !dbg !5722
  %314 = lshr i24 %246, 20, !dbg !5960
  %315 = lshr i24 %246, 19, !dbg !5961
  %316 = or i24 %314, %315, !dbg !5962
  %317 = and i24 %316, 1, !dbg !5962
  %318 = icmp eq i24 %317, 0, !dbg !5962
  br i1 %318, label %323, label %319, !dbg !5963

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5964
  call void @llvm.dbg.value(metadata i32 %320, metadata !5703, metadata !DIExpression()), !dbg !5965
  %321 = icmp slt i32 %320, 0, !dbg !5966
  %322 = add i32 %313, 1, !dbg !5964
  call void @llvm.dbg.value(metadata i32 undef, metadata !5602, metadata !DIExpression()), !dbg !5722
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5726
  call void @llvm.dbg.value(metadata i32 %324, metadata !5602, metadata !DIExpression()), !dbg !5722
  %325 = and i24 %246, 1048576, !dbg !5968
  %326 = icmp eq i24 %325, 0, !dbg !5968
  br i1 %326, label %333, label %327, !dbg !5969

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5970
  %329 = zext i8 %328 to i32, !dbg !5970
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !5970
  call void @llvm.dbg.value(metadata i32 %330, metadata !5709, metadata !DIExpression()), !dbg !5971
  %331 = icmp slt i32 %330, 0, !dbg !5972
  %332 = add i32 %324, 1, !dbg !5970
  call void @llvm.dbg.value(metadata i32 undef, metadata !5602, metadata !DIExpression()), !dbg !5722
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5726
  call void @llvm.dbg.value(metadata i32 %334, metadata !5602, metadata !DIExpression()), !dbg !5722
  %335 = load i32, i32* %16, align 4, !dbg !5974
  call void @llvm.dbg.value(metadata i32 %335, metadata !5684, metadata !DIExpression()), !dbg !5736
  br label %336, !dbg !5975

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5976
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5726
  call void @llvm.dbg.value(metadata i32 %338, metadata !5602, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i32 %337, metadata !5684, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5736
  %339 = icmp sgt i32 %337, 0, !dbg !5977
  br i1 %339, label %340, label %345, !dbg !5975

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5978
  call void @llvm.dbg.value(metadata i32 %341, metadata !5684, metadata !DIExpression()), !dbg !5736
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5979
  call void @llvm.dbg.value(metadata i32 %342, metadata !5713, metadata !DIExpression()), !dbg !5980
  %343 = icmp slt i32 %342, 0, !dbg !5981
  %344 = add i32 %338, 1, !dbg !5979
  call void @llvm.dbg.value(metadata i32 undef, metadata !5602, metadata !DIExpression()), !dbg !5722
  br i1 %343, label %361, label %336, !llvm.loop !5983

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !5985
  call void @llvm.dbg.value(metadata i32 %346, metadata !5716, metadata !DIExpression()), !dbg !5986
  %347 = icmp slt i32 %346, 0, !dbg !5987
  call void @llvm.dbg.value(metadata i32 undef, metadata !5602, metadata !DIExpression()), !dbg !5722
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5985
  call void @llvm.dbg.value(metadata i32 %349, metadata !5602, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i32 %304, metadata !5661, metadata !DIExpression()), !dbg !5736
  %350 = icmp sgt i32 %304, 0, !dbg !5989
  br i1 %350, label %351, label %363, !dbg !5990

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5990
  %353 = add i32 %352, %338, !dbg !5990
  br label %354, !dbg !5990

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5602, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i32 %355, metadata !5661, metadata !DIExpression()), !dbg !5736
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !5991
  call void @llvm.dbg.value(metadata i32 %356, metadata !5718, metadata !DIExpression()), !dbg !5992
  %357 = icmp slt i32 %356, 0, !dbg !5993
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5995
  call void @llvm.dbg.value(metadata i32 undef, metadata !5602, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5722
  call void @llvm.dbg.value(metadata i32 %359, metadata !5661, metadata !DIExpression()), !dbg !5736
  %360 = icmp sgt i32 %355, 1, !dbg !5989
  br i1 %360, label %354, label %363, !dbg !5990, !llvm.loop !5996

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5602, metadata !DIExpression()), !dbg !5722
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5733
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5726
  call void @llvm.dbg.value(metadata i32 %364, metadata !5602, metadata !DIExpression()), !dbg !5722
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5733
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5722
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5998
  ret i32 %366, !dbg !5998
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #14

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !5999 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6003, metadata !DIExpression()), !dbg !6005
  call void @llvm.dbg.value(metadata i8* %1, metadata !6004, metadata !DIExpression()), !dbg !6005
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !6006
  store i24 0, i24* %3, align 4, !dbg !6006
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6006
  store i8 0, i8* %4, align 1, !dbg !6006
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6006
  store i32 0, i32* %5, align 4, !dbg !6006
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6006
  store i32 0, i32* %6, align 4, !dbg !6006
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6007
  call void @llvm.dbg.value(metadata i8* %7, metadata !6004, metadata !DIExpression()), !dbg !6005
  %8 = load i8, i8* %7, align 1, !dbg !6008
  %9 = icmp eq i8 %8, 37, !dbg !6010
  br i1 %9, label %10, label %12, !dbg !6011

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6012
  call void @llvm.dbg.value(metadata i8* %11, metadata !6004, metadata !DIExpression()), !dbg !6005
  store i8 37, i8* %4, align 1, !dbg !6014
  br label %18, !dbg !6015

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !6016
  call void @llvm.dbg.value(metadata i8* %13, metadata !6004, metadata !DIExpression()), !dbg !6005
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !6017
  call void @llvm.dbg.value(metadata i8* %14, metadata !6004, metadata !DIExpression()), !dbg !6005
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !6018
  call void @llvm.dbg.value(metadata i8* %15, metadata !6004, metadata !DIExpression()), !dbg !6005
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !6019
  call void @llvm.dbg.value(metadata i8* %16, metadata !6004, metadata !DIExpression()), !dbg !6005
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !6020
  call void @llvm.dbg.value(metadata i8* %17, metadata !6004, metadata !DIExpression()), !dbg !6005
  br label %18, !dbg !6021

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !6005
  ret i8* %19, !dbg !6022
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !6023 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6027, metadata !DIExpression()), !dbg !6034
  call void @llvm.dbg.value(metadata i8* %1, metadata !6028, metadata !DIExpression()), !dbg !6034
  call void @llvm.dbg.value(metadata i8* %2, metadata !6029, metadata !DIExpression()), !dbg !6034
  call void @llvm.dbg.value(metadata i8* %3, metadata !6030, metadata !DIExpression()), !dbg !6034
  call void @llvm.dbg.value(metadata i32 0, metadata !6031, metadata !DIExpression()), !dbg !6034
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !6035

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !6036
  call void @llvm.dbg.value(metadata i32 %9, metadata !6031, metadata !DIExpression()), !dbg !6034
  call void @llvm.dbg.value(metadata i8* %8, metadata !6029, metadata !DIExpression()), !dbg !6034
  %10 = icmp ult i8* %8, %3, !dbg !6037
  br i1 %10, label %11, label %13, !dbg !6038

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !6039
  br label %17, !dbg !6038

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !6040

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !6041
  %16 = icmp eq i8 %15, 0, !dbg !6040
  br i1 %16, label %24, label %17, !dbg !6035

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !6039
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6042
  call void @llvm.dbg.value(metadata i8* %19, metadata !6029, metadata !DIExpression()), !dbg !6034
  %20 = zext i8 %18 to i32, !dbg !6043
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !6044
  call void @llvm.dbg.value(metadata i32 %21, metadata !6032, metadata !DIExpression()), !dbg !6045
  %22 = icmp slt i32 %21, 0, !dbg !6046
  %23 = add i32 %9, 1, !dbg !6048
  call void @llvm.dbg.value(metadata i32 undef, metadata !6031, metadata !DIExpression()), !dbg !6034
  br i1 %22, label %24, label %7, !llvm.loop !6049

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !6034
  ret i32 %25, !dbg !6051
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #15 !dbg !6052 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6056, metadata !DIExpression()), !dbg !6066
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6057, metadata !DIExpression()), !dbg !6066
  call void @llvm.dbg.value(metadata i8* %2, metadata !6058, metadata !DIExpression()), !dbg !6066
  call void @llvm.dbg.value(metadata i8* %3, metadata !6059, metadata !DIExpression()), !dbg !6066
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6067
  %6 = load i8, i8* %5, align 1, !dbg !6067
  %7 = zext i8 %6 to i32, !dbg !6068
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !6069
  %9 = icmp eq i32 %8, 0, !dbg !6069
  call void @llvm.dbg.value(metadata i1 %9, metadata !6060, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6066
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !6070
  call void @llvm.dbg.value(metadata i32 %10, metadata !6061, metadata !DIExpression()), !dbg !6066
  %11 = ptrtoint i8* %3 to i32, !dbg !6071
  %12 = ptrtoint i8* %2 to i32, !dbg !6071
  %13 = sub i32 %11, %12, !dbg !6071
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6072
  call void @llvm.dbg.value(metadata i8* %14, metadata !6063, metadata !DIExpression()), !dbg !6066
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6073

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6066
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6056, metadata !DIExpression()), !dbg !6066
  call void @llvm.dbg.value(metadata i8* %18, metadata !6063, metadata !DIExpression()), !dbg !6066
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6074
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6075
  call void @llvm.dbg.value(metadata i32 %25, metadata !6064, metadata !DIExpression()), !dbg !6076
  %26 = icmp ult i32 %25, 10, !dbg !6077
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6078
  %28 = add i32 %27, %25, !dbg !6076
  %29 = trunc i32 %28 to i8, !dbg !6078
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6079
  call void @llvm.dbg.value(metadata i8* %30, metadata !6063, metadata !DIExpression()), !dbg !6066
  store i8 %29, i8* %30, align 1, !dbg !6080
  call void @llvm.dbg.value(metadata i64 %22, metadata !6056, metadata !DIExpression()), !dbg !6066
  %31 = icmp uge i64 %19, %15, !dbg !6081
  %32 = icmp ugt i8* %30, %2, !dbg !6082
  %33 = and i1 %31, %32, !dbg !6082
  br i1 %33, label %17, label %34, !dbg !6083, !llvm.loop !6084

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6086
  %36 = load i24, i24* %35, align 4, !dbg !6086
  %37 = and i24 %36, 32, !dbg !6086
  %38 = icmp eq i24 %37, 0, !dbg !6086
  br i1 %38, label %44, label %39, !dbg !6088

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6089

40:                                               ; preds = %39
  br label %41, !dbg !6091

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6095
  store i24 %43, i24* %35, align 4, !dbg !6095
  br label %44, !dbg !6096

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !6097 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6103, metadata !DIExpression()), !dbg !6106
  call void @llvm.dbg.value(metadata i8* %1, metadata !6104, metadata !DIExpression()), !dbg !6106
  call void @llvm.dbg.value(metadata i32 %2, metadata !6105, metadata !DIExpression()), !dbg !6106
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6107
  %5 = load i24, i24* %4, align 4, !dbg !6107
  %6 = lshr i24 %5, 11, !dbg !6107
  %7 = and i24 %6, 15, !dbg !6107
  %8 = zext i24 %7 to i32, !dbg !6107
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6108

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6109
  store i32 %2, i32* %10, align 4, !dbg !6111
  br label %28, !dbg !6112

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6113
  store i8 %12, i8* %1, align 1, !dbg !6114
  br label %28, !dbg !6115

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6116
  %15 = bitcast i8* %1 to i16*, !dbg !6117
  store i16 %14, i16* %15, align 2, !dbg !6118
  br label %28, !dbg !6119

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6120
  store i32 %2, i32* %17, align 4, !dbg !6121
  br label %28, !dbg !6122

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6123
  %20 = bitcast i8* %1 to i64*, !dbg !6124
  store i64 %19, i64* %20, align 8, !dbg !6125
  br label %28, !dbg !6126

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6127
  %23 = bitcast i8* %1 to i64*, !dbg !6128
  store i64 %22, i64* %23, align 8, !dbg !6129
  br label %28, !dbg !6130

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6131
  store i32 %2, i32* %25, align 4, !dbg !6132
  br label %28, !dbg !6133

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6134
  store i32 %2, i32* %27, align 4, !dbg !6135
  br label %28, !dbg !6136

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6137
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #5 !dbg !6138 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6141, metadata !DIExpression()), !dbg !6142
  %2 = add i32 %0, -65, !dbg !6143
  %3 = icmp ult i32 %2, 26, !dbg !6144
  %4 = zext i1 %3 to i32, !dbg !6144
  ret i32 %4, !dbg !6145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #5 !dbg !6146 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6150, metadata !DIExpression()), !dbg !6151
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6152

2:                                                ; preds = %1
  br label %4, !dbg !6153

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6155

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6156
  ret i32 %5, !dbg !6157
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #15 !dbg !6158 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6160, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.value(metadata i8* %1, metadata !6161, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.value(metadata i8 1, metadata !6162, metadata !DIExpression()), !dbg !6163
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6164

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6162, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.value(metadata i8* %5, metadata !6161, metadata !DIExpression()), !dbg !6163
  %6 = load i8, i8* %5, align 1, !dbg !6165
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6167

7:                                                ; preds = %4
  br label %11, !dbg !6168

8:                                                ; preds = %4
  br label %11, !dbg !6170

9:                                                ; preds = %4
  br label %11, !dbg !6171

10:                                               ; preds = %4
  br label %11, !dbg !6172

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6173
  %14 = or i24 %13, %12, !dbg !6173
  store i24 %14, i24* %3, align 4, !dbg !6173
  call void @llvm.dbg.value(metadata i8 poison, metadata !6162, metadata !DIExpression()), !dbg !6163
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6161, metadata !DIExpression()), !dbg !6163
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6162, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.value(metadata i8* %15, metadata !6161, metadata !DIExpression()), !dbg !6163
  %17 = load i24, i24* %3, align 4, !dbg !6174
  %18 = and i24 %17, 68, !dbg !6176
  %19 = icmp eq i24 %18, 68, !dbg !6176
  br i1 %19, label %20, label %22, !dbg !6176

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6177
  store i24 %21, i24* %3, align 4, !dbg !6177
  br label %22, !dbg !6179

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6180
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6181 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6183, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.value(metadata i8* %1, metadata !6184, metadata !DIExpression()), !dbg !6187
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6188
  %5 = load i24, i24* %4, align 4, !dbg !6189
  %6 = or i24 %5, 128, !dbg !6189
  store i24 %6, i24* %4, align 4, !dbg !6189
  call void @llvm.dbg.value(metadata i8* %1, metadata !6184, metadata !DIExpression()), !dbg !6187
  %7 = load i8, i8* %1, align 1, !dbg !6190
  %8 = icmp eq i8 %7, 42, !dbg !6192
  br i1 %8, label %9, label %12, !dbg !6193

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6194
  store i24 %10, i24* %4, align 4, !dbg !6194
  call void @llvm.dbg.value(metadata i8* %1, metadata !6184, metadata !DIExpression()), !dbg !6187
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6196
  call void @llvm.dbg.value(metadata i8* %11, metadata !6184, metadata !DIExpression()), !dbg !6187
  store i8* %11, i8** %3, align 4, !dbg !6196
  br label %29, !dbg !6197

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6185, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.value(metadata i8** %3, metadata !6184, metadata !DIExpression(DW_OP_deref)), !dbg !6187
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6198
  call void @llvm.dbg.value(metadata i32 %13, metadata !6186, metadata !DIExpression()), !dbg !6187
  %14 = load i8*, i8** %3, align 4, !dbg !6199
  call void @llvm.dbg.value(metadata i8* %14, metadata !6184, metadata !DIExpression()), !dbg !6187
  %15 = icmp eq i8* %14, %1, !dbg !6201
  br i1 %15, label %29, label %16, !dbg !6202

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6203
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6205
  store i32 %13, i32* %18, align 4, !dbg !6206
  %19 = lshr i32 %13, 31, !dbg !6207
  %20 = lshr i24 %17, 1, !dbg !6208
  %21 = and i24 %20, 1, !dbg !6208
  %22 = zext i24 %21 to i32, !dbg !6208
  %23 = or i32 %19, %22, !dbg !6208
  %24 = trunc i32 %23 to i24, !dbg !6208
  %25 = shl nuw nsw i24 %24, 1, !dbg !6208
  %26 = and i24 %17, -131, !dbg !6208
  %27 = or i24 %26, 128, !dbg !6208
  %28 = or i24 %25, %27, !dbg !6208
  store i24 %28, i24* %4, align 4, !dbg !6208
  br label %29, !dbg !6209

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6187
  ret i8* %30, !dbg !6210
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6211 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6213, metadata !DIExpression()), !dbg !6216
  call void @llvm.dbg.value(metadata i8* %1, metadata !6214, metadata !DIExpression()), !dbg !6216
  %4 = load i8, i8* %1, align 1, !dbg !6217
  %5 = icmp eq i8 %4, 46, !dbg !6218
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6219
  %7 = load i24, i24* %6, align 4, !dbg !6220
  %8 = select i1 %5, i24 512, i24 0, !dbg !6220
  %9 = and i24 %7, -513, !dbg !6220
  %10 = or i24 %9, %8, !dbg !6220
  store i24 %10, i24* %6, align 4, !dbg !6220
  br i1 %5, label %11, label %32, !dbg !6221

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6214, metadata !DIExpression()), !dbg !6216
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6222
  call void @llvm.dbg.value(metadata i8* %12, metadata !6214, metadata !DIExpression()), !dbg !6216
  store i8* %12, i8** %3, align 4, !dbg !6222
  %13 = load i8, i8* %12, align 1, !dbg !6223
  %14 = icmp eq i8 %13, 42, !dbg !6225
  br i1 %14, label %15, label %18, !dbg !6226

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6227
  store i24 %16, i24* %6, align 4, !dbg !6227
  call void @llvm.dbg.value(metadata i8* %12, metadata !6214, metadata !DIExpression()), !dbg !6216
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6229
  call void @llvm.dbg.value(metadata i8* %17, metadata !6214, metadata !DIExpression()), !dbg !6216
  store i8* %17, i8** %3, align 4, !dbg !6229
  br label %32, !dbg !6230

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6214, metadata !DIExpression(DW_OP_deref)), !dbg !6216
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6231
  call void @llvm.dbg.value(metadata i32 %19, metadata !6215, metadata !DIExpression()), !dbg !6216
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6232
  store i32 %19, i32* %20, align 4, !dbg !6233
  %21 = lshr i32 %19, 31, !dbg !6234
  %22 = load i24, i24* %6, align 4, !dbg !6235
  %23 = lshr i24 %22, 1, !dbg !6235
  %24 = and i24 %23, 1, !dbg !6235
  %25 = zext i24 %24 to i32, !dbg !6235
  %26 = or i32 %21, %25, !dbg !6235
  %27 = trunc i32 %26 to i24, !dbg !6235
  %28 = shl nuw nsw i24 %27, 1, !dbg !6235
  %29 = and i24 %22, -3, !dbg !6235
  %30 = or i24 %28, %29, !dbg !6235
  store i24 %30, i24* %6, align 4, !dbg !6235
  %31 = load i8*, i8** %3, align 4, !dbg !6236
  call void @llvm.dbg.value(metadata i8* %31, metadata !6214, metadata !DIExpression()), !dbg !6216
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6216
  ret i8* %33, !dbg !6237
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !6238 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6240, metadata !DIExpression()), !dbg !6242
  call void @llvm.dbg.value(metadata i8* %1, metadata !6241, metadata !DIExpression()), !dbg !6242
  %3 = load i8, i8* %1, align 1, !dbg !6243
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6244

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6245
  call void @llvm.dbg.value(metadata i8* %5, metadata !6241, metadata !DIExpression()), !dbg !6242
  %6 = load i8, i8* %5, align 1, !dbg !6248
  %7 = icmp eq i8 %6, 104, !dbg !6249
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6250
  %9 = load i24, i24* %8, align 4, !dbg !6250
  %10 = and i24 %9, -30721, !dbg !6250
  br i1 %7, label %11, label %14, !dbg !6251

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6252
  store i24 %12, i24* %8, align 4, !dbg !6252
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6254
  call void @llvm.dbg.value(metadata i8* %13, metadata !6241, metadata !DIExpression()), !dbg !6242
  br label %56, !dbg !6255

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6256
  store i24 %15, i24* %8, align 4, !dbg !6256
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6258
  call void @llvm.dbg.value(metadata i8* %17, metadata !6241, metadata !DIExpression()), !dbg !6242
  %18 = load i8, i8* %17, align 1, !dbg !6260
  %19 = icmp eq i8 %18, 108, !dbg !6261
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6262
  %21 = load i24, i24* %20, align 4, !dbg !6262
  %22 = and i24 %21, -30721, !dbg !6262
  br i1 %19, label %23, label %26, !dbg !6263

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6264
  store i24 %24, i24* %20, align 4, !dbg !6264
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6266
  call void @llvm.dbg.value(metadata i8* %25, metadata !6241, metadata !DIExpression()), !dbg !6242
  br label %56, !dbg !6267

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6268
  store i24 %27, i24* %20, align 4, !dbg !6268
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6270
  %30 = load i24, i24* %29, align 4, !dbg !6271
  %31 = and i24 %30, -30721, !dbg !6271
  %32 = or i24 %31, 10240, !dbg !6271
  store i24 %32, i24* %29, align 4, !dbg !6271
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6272
  call void @llvm.dbg.value(metadata i8* %33, metadata !6241, metadata !DIExpression()), !dbg !6242
  br label %56, !dbg !6273

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6274
  %36 = load i24, i24* %35, align 4, !dbg !6275
  %37 = and i24 %36, -30721, !dbg !6275
  %38 = or i24 %37, 12288, !dbg !6275
  store i24 %38, i24* %35, align 4, !dbg !6275
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6276
  call void @llvm.dbg.value(metadata i8* %39, metadata !6241, metadata !DIExpression()), !dbg !6242
  br label %56, !dbg !6277

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6278
  %42 = load i24, i24* %41, align 4, !dbg !6279
  %43 = and i24 %42, -30721, !dbg !6279
  %44 = or i24 %43, 14336, !dbg !6279
  store i24 %44, i24* %41, align 4, !dbg !6279
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6280
  call void @llvm.dbg.value(metadata i8* %45, metadata !6241, metadata !DIExpression()), !dbg !6242
  br label %56, !dbg !6281

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6282
  %48 = load i24, i24* %47, align 4, !dbg !6283
  %49 = and i24 %48, -30723, !dbg !6283
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6284
  call void @llvm.dbg.value(metadata i8* %50, metadata !6241, metadata !DIExpression()), !dbg !6242
  %51 = or i24 %49, 16386, !dbg !6285
  store i24 %51, i24* %47, align 4, !dbg !6285
  br label %56, !dbg !6286

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6287
  %54 = load i24, i24* %53, align 4, !dbg !6288
  %55 = and i24 %54, -30721, !dbg !6288
  store i24 %55, i24* %53, align 4, !dbg !6288
  br label %56, !dbg !6289

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6241, metadata !DIExpression()), !dbg !6242
  ret i8* %57, !dbg !6290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !6291 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6293, metadata !DIExpression()), !dbg !6298
  call void @llvm.dbg.value(metadata i8* %1, metadata !6294, metadata !DIExpression()), !dbg !6298
  call void @llvm.dbg.value(metadata i8 0, metadata !6295, metadata !DIExpression()), !dbg !6298
  call void @llvm.dbg.value(metadata i8* %1, metadata !6294, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6298
  %3 = load i8, i8* %1, align 1, !dbg !6299
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6300
  store i8 %3, i8* %4, align 1, !dbg !6301
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6302

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6303

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6304
  %9 = load i24, i24* %8, align 4, !dbg !6304
  %10 = and i24 %9, -458753, !dbg !6304
  %11 = or i24 %10, %7, !dbg !6304
  call void @llvm.dbg.label(metadata !6296), !dbg !6305
  %12 = and i24 %9, 30720, !dbg !6306
  %13 = icmp eq i24 %12, 16384, !dbg !6306
  %14 = zext i1 %13 to i24, !dbg !6308
  %15 = or i24 %11, %14, !dbg !6308
  %16 = icmp eq i8 %3, 99, !dbg !6309
  br i1 %16, label %17, label %43, !dbg !6311

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6312
  %19 = icmp ne i24 %18, 0, !dbg !6312
  call void @llvm.dbg.value(metadata i1 %19, metadata !6295, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6298
  br label %43, !dbg !6314

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6315
  %22 = load i24, i24* %21, align 4, !dbg !6316
  %23 = and i24 %22, -458753, !dbg !6316
  %24 = or i24 %23, 262144, !dbg !6316
  call void @llvm.dbg.value(metadata i8 1, metadata !6295, metadata !DIExpression()), !dbg !6298
  br label %43, !dbg !6317

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6320
  %27 = load i24, i24* %26, align 4, !dbg !6321
  %28 = and i24 %27, -458753, !dbg !6321
  %29 = or i24 %28, 196608, !dbg !6321
  %30 = and i24 %27, 30720, !dbg !6322
  %31 = icmp eq i24 %30, 16384, !dbg !6322
  br label %43, !dbg !6324

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6325
  %34 = load i24, i24* %33, align 4, !dbg !6326
  %35 = and i24 %34, -458753, !dbg !6326
  %36 = or i24 %35, 196608, !dbg !6326
  %37 = and i24 %34, 30720, !dbg !6327
  %38 = icmp ne i24 %37, 0, !dbg !6327
  br label %43, !dbg !6329

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6330
  %41 = load i24, i24* %40, align 4, !dbg !6331
  %42 = or i24 %41, 1, !dbg !6331
  br label %43, !dbg !6332

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6333
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6334
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6335
  call void @llvm.dbg.value(metadata i8* %48, metadata !6294, metadata !DIExpression()), !dbg !6298
  call void @llvm.dbg.value(metadata i8 poison, metadata !6295, metadata !DIExpression()), !dbg !6298
  %49 = lshr i24 %44, 1, !dbg !6333
  %50 = and i24 %49, 1, !dbg !6333
  %51 = zext i24 %50 to i32, !dbg !6333
  %52 = or i32 %51, %47, !dbg !6333
  %53 = trunc i32 %52 to i24, !dbg !6333
  %54 = shl nuw nsw i24 %53, 1, !dbg !6333
  %55 = and i24 %44, -3, !dbg !6333
  %56 = or i24 %54, %55, !dbg !6333
  store i24 %56, i24* %46, align 4, !dbg !6333
  ret i8* %48, !dbg !6336
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #15 !dbg !6337 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6341, metadata !DIExpression()), !dbg !6344
  %2 = load i8*, i8** %0, align 4, !dbg !6345
  call void @llvm.dbg.value(metadata i8* %2, metadata !6342, metadata !DIExpression()), !dbg !6344
  call void @llvm.dbg.value(metadata i32 0, metadata !6343, metadata !DIExpression()), !dbg !6344
  %3 = load i8, i8* %2, align 1, !dbg !6346
  %4 = zext i8 %3 to i32, !dbg !6347
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !6348
  %6 = icmp eq i32 %5, 0, !dbg !6349
  br i1 %6, label %19, label %7, !dbg !6349

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6343, metadata !DIExpression()), !dbg !6344
  call void @llvm.dbg.value(metadata i8* %10, metadata !6342, metadata !DIExpression()), !dbg !6344
  %11 = mul i32 %9, 10, !dbg !6350
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6352
  call void @llvm.dbg.value(metadata i8* %12, metadata !6342, metadata !DIExpression()), !dbg !6344
  %13 = add i32 %11, -48, !dbg !6353
  %14 = add i32 %13, %8, !dbg !6354
  call void @llvm.dbg.value(metadata i32 %14, metadata !6343, metadata !DIExpression()), !dbg !6344
  %15 = load i8, i8* %12, align 1, !dbg !6346
  %16 = zext i8 %15 to i32, !dbg !6347
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !6348
  %18 = icmp eq i32 %17, 0, !dbg !6349
  br i1 %18, label %19, label %7, !dbg !6349, !llvm.loop !6355

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6344
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6344
  store i8* %20, i8** %0, align 4, !dbg !6357
  ret i32 %21, !dbg !6358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #5 !dbg !6359 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6361, metadata !DIExpression()), !dbg !6362
  %2 = add i32 %0, -48, !dbg !6363
  %3 = icmp ult i32 %2, 10, !dbg !6364
  %4 = zext i1 %3 to i32, !dbg !6364
  ret i32 %4, !dbg !6365
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6366 {
  tail call void asm sideeffect ".globl\09CONFIG_BM_MESSAGE_SIZE\0A\09.equ\09CONFIG_BM_MESSAGE_SIZE,256\0A\09.type\09CONFIG_BM_MESSAGE_SIZE,%object", ""() #25, !dbg !6368, !srcloc !6369
  tail call void asm sideeffect ".globl\09CONFIG_BM_ONE_TO\0A\09.equ\09CONFIG_BM_ONE_TO,8\0A\09.type\09CONFIG_BM_ONE_TO,%object", ""() #25, !dbg !6370, !srcloc !6371
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !6372, !srcloc !6373
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !6374, !srcloc !6375
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !6376, !srcloc !6377
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !6378, !srcloc !6379
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !6380, !srcloc !6381
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,85\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !6382, !srcloc !6383
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !6384, !srcloc !6385
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !6386, !srcloc !6387
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !6388, !srcloc !6389
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !6390, !srcloc !6391
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !6392, !srcloc !6393
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !6394, !srcloc !6395
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !6396, !srcloc !6397
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,1024\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !6398, !srcloc !6399
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !6400, !srcloc !6401
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !6402, !srcloc !6403
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !6404, !srcloc !6405
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #25, !dbg !6406, !srcloc !6407
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !6408, !srcloc !6409
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !6410, !srcloc !6411
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !6412, !srcloc !6413
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !6414, !srcloc !6415
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !6416, !srcloc !6417
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !6418, !srcloc !6419
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !6420, !srcloc !6421
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !6422, !srcloc !6423
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !6424, !srcloc !6425
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !6426, !srcloc !6427
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !6428, !srcloc !6429
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !6430, !srcloc !6431
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,%object", ""() #25, !dbg !6432, !srcloc !6433
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #25, !dbg !6434, !srcloc !6435
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !6436, !srcloc !6437
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #25, !dbg !6438, !srcloc !6439
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !6440, !srcloc !6441
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6442, !srcloc !6443
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !6444, !srcloc !6445
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6446, !srcloc !6447
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !6448, !srcloc !6449
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #25, !dbg !6450, !srcloc !6451
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !6452, !srcloc !6453
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6454, !srcloc !6455
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #25, !dbg !6456, !srcloc !6457
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !6458, !srcloc !6459
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !6460, !srcloc !6461
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !6462, !srcloc !6463
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !6464, !srcloc !6465
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !6466, !srcloc !6467
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !6468, !srcloc !6469
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6470, !srcloc !6471
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !6472, !srcloc !6473
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !6474, !srcloc !6475
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED,%object", ""() #25, !dbg !6476, !srcloc !6477
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !6478, !srcloc !6479
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !6480, !srcloc !6481
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !6482, !srcloc !6483
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !6484, !srcloc !6485
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #25, !dbg !6486, !srcloc !6487
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #25, !dbg !6488, !srcloc !6489
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !6490, !srcloc !6491
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !6492, !srcloc !6493
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !6494, !srcloc !6495
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !6496, !srcloc !6497
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !6498, !srcloc !6499
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !6500, !srcloc !6501
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !6502, !srcloc !6503
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !6504, !srcloc !6505
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !6506, !srcloc !6507
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !6508, !srcloc !6509
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !6510, !srcloc !6511
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !6512, !srcloc !6513
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !6514, !srcloc !6515
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !6516, !srcloc !6517
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !6518, !srcloc !6519
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !6520, !srcloc !6521
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !6522, !srcloc !6523
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !6524, !srcloc !6525
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !6526, !srcloc !6527
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !6528, !srcloc !6529
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !6530, !srcloc !6531
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !6532, !srcloc !6533
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !6534, !srcloc !6535
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !6536, !srcloc !6537
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !6538, !srcloc !6539
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !6540, !srcloc !6541
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !6542, !srcloc !6543
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !6544, !srcloc !6545
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !6546, !srcloc !6547
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_CARBON\0A\09.equ\09CONFIG_BOARD_96B_CARBON,1\0A\09.type\09CONFIG_BOARD_96B_CARBON,%object", ""() #25, !dbg !6548, !srcloc !6549
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !6550, !srcloc !6551
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !6552, !srcloc !6553
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !6554, !srcloc !6555
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !6556, !srcloc !6557
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !6558, !srcloc !6559
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F401XE\0A\09.equ\09CONFIG_SOC_STM32F401XE,1\0A\09.type\09CONFIG_SOC_STM32F401XE,%object", ""() #25, !dbg !6560, !srcloc !6561
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6562, !srcloc !6563
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #25, !dbg !6564, !srcloc !6565
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !6566, !srcloc !6567
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !6568, !srcloc !6569
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !6570, !srcloc !6571
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !6572, !srcloc !6573
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !6574, !srcloc !6575
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !6576, !srcloc !6577
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !6578, !srcloc !6579
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !6580, !srcloc !6581
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !6582, !srcloc !6583
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !6584, !srcloc !6585
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !6586, !srcloc !6587
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !6588, !srcloc !6589
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !6590, !srcloc !6591
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !6592, !srcloc !6593
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !6594, !srcloc !6595
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !6596, !srcloc !6597
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !6598, !srcloc !6599
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !6600, !srcloc !6601
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !6602, !srcloc !6603
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !6604, !srcloc !6605
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !6606, !srcloc !6607
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !6608, !srcloc !6609
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !6610, !srcloc !6611
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !6612, !srcloc !6613
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !6614, !srcloc !6615
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !6616, !srcloc !6617
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !6618, !srcloc !6619
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !6620, !srcloc !6621
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #25, !dbg !6622, !srcloc !6623
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #25, !dbg !6624, !srcloc !6625
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !6626, !srcloc !6627
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,96\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !6628, !srcloc !6629
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !6630, !srcloc !6631
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !6632, !srcloc !6633
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !6634, !srcloc !6635
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !6636, !srcloc !6637
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !6638, !srcloc !6639
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !6640, !srcloc !6641
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !6642, !srcloc !6643
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !6644, !srcloc !6645
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !6646, !srcloc !6647
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !6648, !srcloc !6649
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !6650, !srcloc !6651
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !6652, !srcloc !6653
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !6654, !srcloc !6655
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !6656, !srcloc !6657
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !6658, !srcloc !6659
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !6660, !srcloc !6661
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !6662, !srcloc !6663
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !6664, !srcloc !6665
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !6666, !srcloc !6667
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !6668, !srcloc !6669
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !6670, !srcloc !6671
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !6672, !srcloc !6673
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6674, !srcloc !6675
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !6676, !srcloc !6677
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !6678, !srcloc !6679
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !6680, !srcloc !6681
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !6682, !srcloc !6683
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !6684, !srcloc !6685
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !6686, !srcloc !6687
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #25, !dbg !6688, !srcloc !6689
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #25, !dbg !6690, !srcloc !6691
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !6692, !srcloc !6693
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !6694, !srcloc !6695
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !6696, !srcloc !6697
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6698, !srcloc !6699
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #25, !dbg !6700, !srcloc !6701
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !6702, !srcloc !6703
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !6704, !srcloc !6705
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !6706, !srcloc !6707
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !6708, !srcloc !6709
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !6710, !srcloc !6711
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !6712, !srcloc !6713
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !6714, !srcloc !6715
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !6716, !srcloc !6717
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !6718, !srcloc !6719
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !6720, !srcloc !6721
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !6722, !srcloc !6723
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !6724, !srcloc !6725
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !6726, !srcloc !6727
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !6728, !srcloc !6729
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !6730, !srcloc !6731
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !6732, !srcloc !6733
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !6734, !srcloc !6735
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !6736, !srcloc !6737
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !6738, !srcloc !6739
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !6740, !srcloc !6741
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !6742, !srcloc !6743
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !6744, !srcloc !6745
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !6746, !srcloc !6747
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !6748, !srcloc !6749
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !6750, !srcloc !6751
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !6752, !srcloc !6753
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !6754, !srcloc !6755
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !6756, !srcloc !6757
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !6758, !srcloc !6759
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !6760, !srcloc !6761
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !6762, !srcloc !6763
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !6764, !srcloc !6765
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !6766, !srcloc !6767
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !6768, !srcloc !6769
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !6770, !srcloc !6771
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !6772, !srcloc !6773
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6774, !srcloc !6775
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !6776, !srcloc !6777
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !6778, !srcloc !6779
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !6780, !srcloc !6781
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !6782, !srcloc !6783
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !6784, !srcloc !6785
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6786, !srcloc !6787
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #25, !dbg !6788, !srcloc !6789
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !6790, !srcloc !6791
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !6792, !srcloc !6793
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !6794, !srcloc !6795
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !6796, !srcloc !6797
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #25, !dbg !6798, !srcloc !6799
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #25, !dbg !6800, !srcloc !6801
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !6802, !srcloc !6803
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !6804, !srcloc !6805
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !6806, !srcloc !6807
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6808, !srcloc !6809
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #25, !dbg !6810, !srcloc !6811
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !6812, !srcloc !6813
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !6814, !srcloc !6815
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !6816, !srcloc !6817
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !6818, !srcloc !6819
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !6820, !srcloc !6821
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !6822, !srcloc !6823
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !6824, !srcloc !6825
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !6826, !srcloc !6827
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !6828, !srcloc !6829
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6830, !srcloc !6831
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !6832, !srcloc !6833
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6834, !srcloc !6835
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !6836, !srcloc !6837
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !6838, !srcloc !6839
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !6840, !srcloc !6841
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !6842, !srcloc !6843
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #25, !dbg !6844, !srcloc !6845
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #25, !dbg !6846, !srcloc !6847
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !6848, !srcloc !6849
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #25, !dbg !6850, !srcloc !6851
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #25, !dbg !6852, !srcloc !6853
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6854, !srcloc !6855
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #25, !dbg !6856, !srcloc !6857
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !6858, !srcloc !6859
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !6860, !srcloc !6861
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !6862, !srcloc !6863
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6864, !srcloc !6865
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #25, !dbg !6866, !srcloc !6867
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !6868, !srcloc !6869
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !6870, !srcloc !6871
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6872, !srcloc !6873
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #25, !dbg !6874, !srcloc !6875
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !6876, !srcloc !6877
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !6878, !srcloc !6879
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !6880, !srcloc !6881
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !6882, !srcloc !6883
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !6884, !srcloc !6885
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !6886, !srcloc !6887
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !6888, !srcloc !6889
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !6890, !srcloc !6891
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !6892, !srcloc !6893
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !6894, !srcloc !6895
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !6896, !srcloc !6897
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !6898, !srcloc !6899
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !6900, !srcloc !6901
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !6902, !srcloc !6903
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !6904, !srcloc !6905
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !6906, !srcloc !6907
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !6908, !srcloc !6909
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6910, !srcloc !6911
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #25, !dbg !6912, !srcloc !6913
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !6914, !srcloc !6915
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !6916, !srcloc !6917
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !6918, !srcloc !6919
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !6920, !srcloc !6921
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !6922, !srcloc !6923
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !6924, !srcloc !6925
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !6926, !srcloc !6927
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #25, !dbg !6928, !srcloc !6929
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #25, !dbg !6930, !srcloc !6931
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #25, !dbg !6932, !srcloc !6933
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #25, !dbg !6934, !srcloc !6935
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #25, !dbg !6936, !srcloc !6937
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #25, !dbg !6938, !srcloc !6939
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !6940, !srcloc !6941
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS\0A\09.equ\09CONFIG_ZBUS,1\0A\09.type\09CONFIG_ZBUS,%object", ""() #25, !dbg !6942, !srcloc !6943
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS\0A\09.equ\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,1\0A\09.type\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,%object", ""() #25, !dbg !6944, !srcloc !6945
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE\0A\09.equ\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,0\0A\09.type\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,%object", ""() #25, !dbg !6946, !srcloc !6947
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL_INF,%object", ""() #25, !dbg !6948, !srcloc !6949
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL,3\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL,%object", ""() #25, !dbg !6950, !srcloc !6951
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !6952, !srcloc !6953
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6954, !srcloc !6955
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !6956, !srcloc !6957
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6958, !srcloc !6959
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6960, !srcloc !6961
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !6962, !srcloc !6963
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !6964, !srcloc !6965
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !6966, !srcloc !6967
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !6968, !srcloc !6969
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !6970, !srcloc !6971
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !6972, !srcloc !6973
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !6974, !srcloc !6975
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !6976, !srcloc !6977
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !6978, !srcloc !6979
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !6980, !srcloc !6981
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !6982, !srcloc !6983
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !6984, !srcloc !6985
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !6986, !srcloc !6987
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !6988, !srcloc !6989
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !6990, !srcloc !6991
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !6992, !srcloc !6993
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !6994, !srcloc !6995
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !6996, !srcloc !6997
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !6998, !srcloc !6999
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !7000, !srcloc !7001
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !7002, !srcloc !7003
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !7004, !srcloc !7005
  ret void, !dbg !7006
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7007 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7009, metadata !DIExpression()), !dbg !7011
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !7012
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !7013
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !7014, !srcloc !7023
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !7014
  call void @llvm.dbg.value(metadata i32 %3, metadata !7020, metadata !DIExpression()) #25, !dbg !7024
  call void @llvm.dbg.value(metadata i32 undef, metadata !7021, metadata !DIExpression()) #25, !dbg !7024
  call void @llvm.dbg.value(metadata i32 %3, metadata !7010, metadata !DIExpression()), !dbg !7011
  call void @llvm.dbg.value(metadata i32 %3, metadata !7025, metadata !DIExpression()) #25, !dbg !7030
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !7032, !srcloc !7033
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !7034
  ret i32 0, !dbg !7035
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #16 !dbg !7036 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7038
  %2 = or i32 %1, 512, !dbg !7038
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7038
  ret void, !dbg !7039
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #16 !dbg !7040 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7041
  %2 = or i32 %1, 1024, !dbg !7041
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7041
  ret void, !dbg !7042
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #5 !dbg !7043 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7045, metadata !DIExpression()), !dbg !7046
  ret i32 0, !dbg !7047
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7048 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7051, metadata !DIExpression()), !dbg !7059
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7060
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7060
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7052, metadata !DIExpression()), !dbg !7061
  call void @llvm.va_start(i8* nonnull %3), !dbg !7062
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7063
  %5 = load i32, i32* %4, align 4, !dbg !7063
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7063
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !7063
  call void @llvm.va_end(i8* nonnull %3), !dbg !7064
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7065
  ret void, !dbg !7065
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7066 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7071, metadata !DIExpression()), !dbg !7072
  call void @llvm.dbg.value(metadata i8* %0, metadata !7070, metadata !DIExpression()), !dbg !7072
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #27, !dbg !7073
  ret void, !dbg !7074
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7075 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7079, metadata !DIExpression()), !dbg !7083
  call void @llvm.dbg.value(metadata i8* %1, metadata !7080, metadata !DIExpression()), !dbg !7083
  call void @llvm.dbg.value(metadata i32 %2, metadata !7081, metadata !DIExpression()), !dbg !7083
  call void @llvm.dbg.value(metadata i8* %1, metadata !7082, metadata !DIExpression()), !dbg !7083
  %4 = icmp eq i32 %2, 0, !dbg !7084
  br i1 %4, label %14, label %5, !dbg !7085

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.20(i32 noundef %0) #26, !dbg !7083
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7085

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7082, metadata !DIExpression()), !dbg !7083
  call void @llvm.dbg.value(metadata i32 %10, metadata !7081, metadata !DIExpression()), !dbg !7083
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i32 0, i32 0), i32 noundef %7) #27, !dbg !7086
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #26, !dbg !7088
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7089
  call void @llvm.dbg.value(metadata i32 %11, metadata !7081, metadata !DIExpression()), !dbg !7083
  call void @llvm.dbg.value(metadata i8* %12, metadata !7082, metadata !DIExpression()), !dbg !7083
  br i1 %13, label %14, label %8, !dbg !7089, !llvm.loop !7090

14:                                               ; preds = %8, %3
  ret void, !dbg !7092
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.20(i32 noundef %0) unnamed_addr #5 !dbg !7093 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7095, metadata !DIExpression()), !dbg !7096
  %2 = add i32 %0, -1, !dbg !7097
  %3 = icmp ult i32 %2, 4, !dbg !7097
  %4 = shl i32 %2, 3, !dbg !7097
  %5 = lshr i32 1145657157, %4, !dbg !7097
  %6 = trunc i32 %5 to i8, !dbg !7097
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7097
  ret i8 %7, !dbg !7098
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7099 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7103, metadata !DIExpression()), !dbg !7114
  call void @llvm.dbg.value(metadata i32 %1, metadata !7104, metadata !DIExpression()), !dbg !7114
  call void @llvm.dbg.value(metadata i32 0, metadata !7105, metadata !DIExpression()), !dbg !7115
  br label %4, !dbg !7116

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.22, i32 0, i32 0)) #27, !dbg !7117
  call void @llvm.dbg.value(metadata i32 0, metadata !7107, metadata !DIExpression()), !dbg !7118
  br label %16, !dbg !7119

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7105, metadata !DIExpression()), !dbg !7115
  %6 = icmp ult i32 %5, %1, !dbg !7120
  br i1 %6, label %7, label %11, !dbg !7124

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7125
  %9 = load i8, i8* %8, align 1, !dbg !7125
  %10 = zext i8 %9 to i32, !dbg !7127
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.23, i32 0, i32 0), i32 noundef %10) #27, !dbg !7128
  br label %12, !dbg !7129

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.24, i32 0, i32 0)) #27, !dbg !7130
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7132
  call void @llvm.dbg.value(metadata i32 %13, metadata !7105, metadata !DIExpression()), !dbg !7115
  %14 = icmp eq i32 %13, 8, !dbg !7133
  br i1 %14, label %3, label %4, !dbg !7116, !llvm.loop !7134

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.25, i32 0, i32 0)) #27, !dbg !7136
  ret void, !dbg !7137

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7107, metadata !DIExpression()), !dbg !7118
  %18 = icmp ult i32 %17, %1, !dbg !7138
  br i1 %18, label %19, label %26, !dbg !7139

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7140
  %21 = load i8, i8* %20, align 1, !dbg !7140
  call void @llvm.dbg.value(metadata i8 %21, metadata !7109, metadata !DIExpression()), !dbg !7141
  %22 = zext i8 %21 to i32, !dbg !7142
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #26, !dbg !7143
  %24 = icmp eq i32 %23, 0, !dbg !7144
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7143
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.26, i32 0, i32 0), i32 noundef %25) #27, !dbg !7145
  br label %27, !dbg !7146

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.27, i32 0, i32 0)) #27, !dbg !7147
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7149
  call void @llvm.dbg.value(metadata i32 %28, metadata !7107, metadata !DIExpression()), !dbg !7118
  %29 = icmp eq i32 %28, 8, !dbg !7150
  br i1 %29, label %15, label %16, !dbg !7119, !llvm.loop !7151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #5 !dbg !7153 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7155, metadata !DIExpression()), !dbg !7156
  %2 = add i32 %0, -32, !dbg !7157
  %3 = icmp ult i32 %2, 95, !dbg !7157
  %4 = zext i1 %3 to i32, !dbg !7157
  ret i32 %4, !dbg !7158
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7159 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7208, metadata !DIExpression()), !dbg !7210
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7209, metadata !DIExpression()), !dbg !7210
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7211
  br i1 %3, label %5, label %4, !dbg !7213

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #26, !dbg !7214
  br label %5, !dbg !7216

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !7217
  ret void, !dbg !7218
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7219 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7223, metadata !DIExpression()), !dbg !7224
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7225
  %3 = load i32, i32* %2, align 4, !dbg !7225
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7225
  %5 = load i32, i32* %4, align 4, !dbg !7225
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7225
  %7 = load i32, i32* %6, align 4, !dbg !7225
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #27, !dbg !7225
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7230
  %9 = load i32, i32* %8, align 4, !dbg !7230
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7230
  %11 = load i32, i32* %10, align 4, !dbg !7230
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7230
  %13 = load i32, i32* %12, align 4, !dbg !7230
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.29, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #27, !dbg !7230
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7235
  %15 = load i32, i32* %14, align 4, !dbg !7235
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.30, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #27, !dbg !7235
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7240
  %17 = load i32, i32* %16, align 4, !dbg !7240
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.31, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !7240
  ret void, !dbg !7245
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7246 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7263, metadata !DIExpression()), !dbg !7266
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7264, metadata !DIExpression()), !dbg !7266
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7267
  %4 = load i32, i32* %3, align 4, !dbg !7267
  call void @llvm.dbg.value(metadata i32 %4, metadata !7265, metadata !DIExpression()), !dbg !7266
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !7268
  ret void, !dbg !7269
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !7270 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7274, metadata !DIExpression()), !dbg !7277
  call void @llvm.dbg.value(metadata i8* %0, metadata !7275, metadata !DIExpression()), !dbg !7277
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7278
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !7278
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7276, metadata !DIExpression()), !dbg !7279
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7279
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7280
  %5 = bitcast i8* %4 to i32*, !dbg !7280
  %6 = load i32, i32* %5, align 4, !dbg !7280
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7281
  store i32 %6, i32* %7, align 4, !dbg !7282
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !7283
  unreachable, !dbg !7284
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7285 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7288, metadata !DIExpression()), !dbg !7289
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !7290
  ret void, !dbg !7291
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7292 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7296, metadata !DIExpression()), !dbg !7297
  %2 = icmp sgt i32 %0, -1, !dbg !7298
  br i1 %2, label %3, label %8, !dbg !7300

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7301, !srcloc !7303
  %4 = and i32 %0, 31, !dbg !7304
  %5 = shl nuw i32 1, %4, !dbg !7305
  %6 = lshr i32 %0, 5, !dbg !7306
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7307
  store volatile i32 %5, i32* %7, align 4, !dbg !7308
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7309, !srcloc !7310
  br label %8, !dbg !7311

8:                                                ; preds = %3, %1
  ret void, !dbg !7312
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7313 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7315, metadata !DIExpression()), !dbg !7316
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !7317
  ret void, !dbg !7318
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7319 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7321, metadata !DIExpression()), !dbg !7322
  %2 = icmp sgt i32 %0, -1, !dbg !7323
  br i1 %2, label %3, label %8, !dbg !7325

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7326
  %5 = shl nuw i32 1, %4, !dbg !7328
  %6 = lshr i32 %0, 5, !dbg !7329
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7330
  store volatile i32 %5, i32* %7, align 4, !dbg !7331
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7332, !srcloc !7336
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7337, !srcloc !7340
  br label %8, !dbg !7341

8:                                                ; preds = %3, %1
  ret void, !dbg !7342
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !7343 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7347, metadata !DIExpression()), !dbg !7348
  %2 = lshr i32 %0, 5, !dbg !7349
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7350
  %4 = load volatile i32, i32* %3, align 4, !dbg !7350
  %5 = and i32 %0, 31, !dbg !7351
  %6 = shl nuw i32 1, %5, !dbg !7351
  %7 = and i32 %4, %6, !dbg !7352
  ret i32 %7, !dbg !7353
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !7354 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7358, metadata !DIExpression()), !dbg !7361
  call void @llvm.dbg.value(metadata i32 %1, metadata !7359, metadata !DIExpression()), !dbg !7361
  call void @llvm.dbg.value(metadata i32 %2, metadata !7360, metadata !DIExpression()), !dbg !7361
  %4 = add i32 %1, 1, !dbg !7362
  call void @llvm.dbg.value(metadata i32 %4, metadata !7359, metadata !DIExpression()), !dbg !7361
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !7365
  ret void, !dbg !7366
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !7367 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7371, metadata !DIExpression()), !dbg !7373
  call void @llvm.dbg.value(metadata i32 %1, metadata !7372, metadata !DIExpression()), !dbg !7373
  %3 = trunc i32 %1 to i8, !dbg !7374
  %4 = shl i8 %3, 4, !dbg !7374
  %5 = and i32 %0, 15, !dbg !7376
  %6 = add nsw i32 %5, -4, !dbg !7376
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7376
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7376
  %9 = icmp slt i32 %0, 0, !dbg !7376
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7376
  store volatile i8 %4, i8* %10, align 1, !dbg !7374
  ret void, !dbg !7377
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7378 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7380, metadata !DIExpression()), !dbg !7381
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !7382
  ret void, !dbg !7383
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7384 {
  tail call void @z_SysNmiOnReset() #27, !dbg !7386
  tail call void @z_arm_int_exit() #27, !dbg !7387
  ret void, !dbg !7388
}

; Function Attrs: optsize
declare !dbg !7389 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7390 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !7392 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !7394
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !7395
  tail call void @z_bss_zero() #27, !dbg !7396
  tail call void @z_data_copy() #27, !dbg !7397
  tail call void @z_arm_interrupt_init() #27, !dbg !7398
  tail call void @z_cstart() #29, !dbg !7399
  unreachable, !dbg !7399
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7400 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7401
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7402, !srcloc !7405
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7406, !srcloc !7409
  ret void, !dbg !7410
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7411 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7412
  %2 = and i32 %1, -15728641, !dbg !7412
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7412
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !7413, !srcloc !7418
  call void @llvm.dbg.value(metadata i32 %3, metadata !7416, metadata !DIExpression()) #25, !dbg !7419
  %4 = and i32 %3, -5, !dbg !7420
  call void @llvm.dbg.value(metadata i32 %4, metadata !7421, metadata !DIExpression()) #25, !dbg !7426
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !7428, !srcloc !7429
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7430, !srcloc !7409
  ret void, !dbg !7432
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7433 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7436, metadata !DIExpression()), !dbg !7437
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7438
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7439
  store i32 %0, i32* %3, align 4, !dbg !7440
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7441
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7442
  store i32 %4, i32* %5, align 4, !dbg !7443
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7444
  %7 = or i32 %6, 268435456, !dbg !7444
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7444
  call void @llvm.dbg.value(metadata i32 0, metadata !7445, metadata !DIExpression()) #25, !dbg !7448
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !7450, !srcloc !7451
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7452
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7453
  %10 = load i32, i32* %9, align 4, !dbg !7453
  ret i32 %10, !dbg !7454
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #8 !dbg !7455 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7565, metadata !DIExpression()), !dbg !7573
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7566, metadata !DIExpression()), !dbg !7573
  call void @llvm.dbg.value(metadata i8* %2, metadata !7567, metadata !DIExpression()), !dbg !7573
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7568, metadata !DIExpression()), !dbg !7573
  call void @llvm.dbg.value(metadata i8* %4, metadata !7569, metadata !DIExpression()), !dbg !7573
  call void @llvm.dbg.value(metadata i8* %5, metadata !7570, metadata !DIExpression()), !dbg !7573
  call void @llvm.dbg.value(metadata i8* %6, metadata !7571, metadata !DIExpression()), !dbg !7573
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7574
  call void @llvm.dbg.value(metadata i8* %8, metadata !7572, metadata !DIExpression()), !dbg !7573
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7575
  %10 = bitcast i8* %9 to i32*, !dbg !7575
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7576
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7577
  %12 = bitcast i8* %8 to i32*, !dbg !7578
  store i32 %11, i32* %12, align 4, !dbg !7579
  %13 = ptrtoint i8* %4 to i32, !dbg !7580
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7581
  %15 = bitcast i8* %14 to i32*, !dbg !7581
  store i32 %13, i32* %15, align 4, !dbg !7582
  %16 = ptrtoint i8* %5 to i32, !dbg !7583
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7584
  %18 = bitcast i8* %17 to i32*, !dbg !7584
  store i32 %16, i32* %18, align 4, !dbg !7585
  %19 = ptrtoint i8* %6 to i32, !dbg !7586
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7587
  %21 = bitcast i8* %20 to i32*, !dbg !7587
  store i32 %19, i32* %21, align 4, !dbg !7588
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7589
  %23 = bitcast i8* %22 to i32*, !dbg !7589
  store i32 16777216, i32* %23, align 4, !dbg !7590
  %24 = ptrtoint i8* %8 to i32, !dbg !7591
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7592
  store i32 %24, i32* %25, align 8, !dbg !7593
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7594
  store i32 0, i32* %26, align 4, !dbg !7595
  ret void, !dbg !7596
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !7597 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7602, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i32 %1, metadata !7603, metadata !DIExpression()), !dbg !7608
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7609
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7604, metadata !DIExpression()), !dbg !7608
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7610
  br i1 %4, label %19, label %5, !dbg !7612

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7607, metadata !DIExpression()), !dbg !7608
  %6 = icmp eq i32 %0, -22, !dbg !7613
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7613
  %8 = load i32, i32* %7, align 4, !dbg !7613
  br i1 %6, label %16, label %9, !dbg !7615

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7613
  %11 = icmp ule i32 %10, %0, !dbg !7613
  %12 = icmp ugt i32 %8, %0, !dbg !7613
  %13 = and i1 %12, %11, !dbg !7613
  %14 = icmp ugt i32 %8, %1, !dbg !7613
  %15 = and i1 %14, %13, !dbg !7613
  br i1 %15, label %18, label %19, !dbg !7613

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7613
  br i1 %17, label %18, label %19, !dbg !7615

18:                                               ; preds = %9, %16
  br label %19, !dbg !7616

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7608
  ret i32 %20, !dbg !7618
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !7619 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7623, metadata !DIExpression()), !dbg !7626
  call void @llvm.dbg.value(metadata i8* %1, metadata !7624, metadata !DIExpression()), !dbg !7626
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7625, metadata !DIExpression()), !dbg !7626
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7627
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !7628
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !7629, !srcloc !7630
  unreachable, !dbg !7631
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7632 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7650, metadata !DIExpression()), !dbg !7660
  call void @llvm.dbg.value(metadata i32 %1, metadata !7651, metadata !DIExpression()), !dbg !7660
  call void @llvm.dbg.value(metadata i32 %2, metadata !7652, metadata !DIExpression()), !dbg !7660
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7653, metadata !DIExpression()), !dbg !7660
  call void @llvm.dbg.value(metadata i32 0, metadata !7654, metadata !DIExpression()), !dbg !7660
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7661
  %9 = and i32 %8, 511, !dbg !7662
  call void @llvm.dbg.value(metadata i32 %9, metadata !7655, metadata !DIExpression()), !dbg !7660
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !7663
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !7663
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7664
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !7664
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7659, metadata !DIExpression()), !dbg !7665
  call void @llvm.dbg.value(metadata i32 0, metadata !7666, metadata !DIExpression()) #25, !dbg !7669
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !7671, !srcloc !7672
  call void @llvm.dbg.value(metadata i8* %6, metadata !7657, metadata !DIExpression(DW_OP_deref)), !dbg !7660
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !7673
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7658, metadata !DIExpression()), !dbg !7660
  call void @llvm.dbg.value(metadata i8* %5, metadata !7656, metadata !DIExpression(DW_OP_deref)), !dbg !7660
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !7674
  call void @llvm.dbg.value(metadata i32 %12, metadata !7654, metadata !DIExpression()), !dbg !7660
  %13 = load i8, i8* %5, align 1, !dbg !7675, !range !7677
  call void @llvm.dbg.value(metadata i8 %13, metadata !7656, metadata !DIExpression()), !dbg !7660
  %14 = icmp eq i8 %13, 0, !dbg !7675
  br i1 %14, label %15, label %32, !dbg !7678

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7679
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #27, !dbg !7680
  %18 = load i8, i8* %6, align 1, !dbg !7681, !range !7677
  call void @llvm.dbg.value(metadata i8 %18, metadata !7657, metadata !DIExpression()), !dbg !7660
  %19 = icmp eq i8 %18, 0, !dbg !7681
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7683
  %21 = load i32, i32* %20, align 4, !dbg !7683
  br i1 %19, label %27, label %22, !dbg !7684

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7685
  %24 = icmp eq i32 %23, 0, !dbg !7688
  br i1 %24, label %25, label %31, !dbg !7689

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7690
  br label %29, !dbg !7692

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7693
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7683
  br label %31, !dbg !7695

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #27, !dbg !7695
  br label %32, !dbg !7696

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !7696
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !7696
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !7696
  ret void, !dbg !7696
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !7697 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7702, metadata !DIExpression()), !dbg !7708
  call void @llvm.dbg.value(metadata i32 %1, metadata !7703, metadata !DIExpression()), !dbg !7708
  call void @llvm.dbg.value(metadata i32 %2, metadata !7704, metadata !DIExpression()), !dbg !7708
  call void @llvm.dbg.value(metadata i8* %3, metadata !7705, metadata !DIExpression()), !dbg !7708
  call void @llvm.dbg.value(metadata i8 0, metadata !7706, metadata !DIExpression()), !dbg !7708
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7707, metadata !DIExpression()), !dbg !7708
  store i8 0, i8* %3, align 1, !dbg !7709
  %5 = icmp ugt i32 %2, -16777217, !dbg !7710
  br i1 %5, label %6, label %17, !dbg !7712

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !7713
  %8 = icmp eq i32 %7, 8, !dbg !7713
  br i1 %8, label %9, label %10, !dbg !7713

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.45, i32 0, i32 0), i32 noundef 69) #27, !dbg !7715
  br label %17, !dbg !7721

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !7722
  %12 = icmp eq i32 %11, 0, !dbg !7722
  br i1 %12, label %13, label %14, !dbg !7723

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !7707, metadata !DIExpression()), !dbg !7708
  store i8 1, i8* %3, align 1, !dbg !7726
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !7708
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !7707, metadata !DIExpression()), !dbg !7708
  br label %17, !dbg !7729

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !7708
  ret %struct.__esf* %18, !dbg !7730
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7731 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7735, metadata !DIExpression()), !dbg !7739
  call void @llvm.dbg.value(metadata i32 %1, metadata !7736, metadata !DIExpression()), !dbg !7739
  call void @llvm.dbg.value(metadata i8* %2, metadata !7737, metadata !DIExpression()), !dbg !7739
  call void @llvm.dbg.value(metadata i32 0, metadata !7738, metadata !DIExpression()), !dbg !7739
  store i8 0, i8* %2, align 1, !dbg !7740
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7741

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !7742
  call void @llvm.dbg.value(metadata i32 %5, metadata !7738, metadata !DIExpression()), !dbg !7739
  br label %12, !dbg !7744

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7745
  call void @llvm.dbg.value(metadata i32 %7, metadata !7738, metadata !DIExpression()), !dbg !7739
  br label %12, !dbg !7746

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7747
  call void @llvm.dbg.value(metadata i32 0, metadata !7738, metadata !DIExpression()), !dbg !7739
  br label %12, !dbg !7748

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !7749
  call void @llvm.dbg.value(metadata i32 0, metadata !7738, metadata !DIExpression()), !dbg !7739
  br label %12, !dbg !7750

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !7751
  br label %12, !dbg !7752

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #26, !dbg !7753
  br label %12, !dbg !7754

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !7739
  call void @llvm.dbg.value(metadata i32 %13, metadata !7738, metadata !DIExpression()), !dbg !7739
  ret i32 %13, !dbg !7755
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7756 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7760, metadata !DIExpression()), !dbg !7763
  call void @llvm.dbg.value(metadata i8* %1, metadata !7761, metadata !DIExpression()), !dbg !7763
  call void @llvm.dbg.value(metadata i32 0, metadata !7762, metadata !DIExpression()), !dbg !7763
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.40, i32 0, i32 0), i32 noundef 69) #27, !dbg !7764
  store i8 0, i8* %1, align 1, !dbg !7769
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7770
  %4 = and i32 %3, 2, !dbg !7772
  %5 = icmp eq i32 %4, 0, !dbg !7773
  br i1 %5, label %7, label %6, !dbg !7774

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 69) #27, !dbg !7775
  br label %36, !dbg !7781

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7782
  %9 = icmp sgt i32 %8, -1, !dbg !7784
  br i1 %9, label %11, label %10, !dbg !7785

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.42, i32 0, i32 0), i32 noundef 69) #27, !dbg !7786
  br label %36, !dbg !7792

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7793
  %13 = and i32 %12, 1073741824, !dbg !7795
  %14 = icmp eq i32 %13, 0, !dbg !7796
  br i1 %14, label %36, label %15, !dbg !7797

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.43, i32 0, i32 0), i32 noundef 69) #27, !dbg !7798
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !7804
  br i1 %16, label %17, label %21, !dbg !7806

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7807
  %19 = load i32, i32* %18, align 4, !dbg !7807
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.44, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #27, !dbg !7807
  %20 = load i32, i32* %18, align 4, !dbg !7813
  call void @llvm.dbg.value(metadata i32 %20, metadata !7762, metadata !DIExpression()), !dbg !7763
  br label %36, !dbg !7814

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7815
  %23 = and i32 %22, 255, !dbg !7817
  %24 = icmp eq i32 %23, 0, !dbg !7818
  br i1 %24, label %27, label %25, !dbg !7819

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7820
  call void @llvm.dbg.value(metadata i32 %26, metadata !7762, metadata !DIExpression()), !dbg !7763
  br label %36, !dbg !7822

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7823
  %29 = and i32 %28, 65280, !dbg !7825
  %30 = icmp eq i32 %29, 0, !dbg !7826
  br i1 %30, label %32, label %31, !dbg !7827

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7828
  call void @llvm.dbg.value(metadata i32 0, metadata !7762, metadata !DIExpression()), !dbg !7763
  br label %36, !dbg !7830

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7831
  %34 = icmp ult i32 %33, 65536, !dbg !7833
  br i1 %34, label %36, label %35, !dbg !7834

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #26, !dbg !7835
  call void @llvm.dbg.value(metadata i32 0, metadata !7762, metadata !DIExpression()), !dbg !7763
  br label %36, !dbg !7837

36:                                               ; preds = %10, %11, %17, %31, %32, %35, %25, %6
  %37 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], [ 0, %32 ], [ 0, %11 ], !dbg !7763
  call void @llvm.dbg.value(metadata i32 %37, metadata !7762, metadata !DIExpression()), !dbg !7763
  ret i32 %37, !dbg !7838
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7839 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7841, metadata !DIExpression()), !dbg !7854
  call void @llvm.dbg.value(metadata i32 %1, metadata !7842, metadata !DIExpression()), !dbg !7854
  call void @llvm.dbg.value(metadata i8* %2, metadata !7843, metadata !DIExpression()), !dbg !7854
  call void @llvm.dbg.value(metadata i32 0, metadata !7844, metadata !DIExpression()), !dbg !7854
  call void @llvm.dbg.value(metadata i32 -22, metadata !7845, metadata !DIExpression()), !dbg !7854
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.38, i32 0, i32 0), i32 noundef 69) #27, !dbg !7855
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7860
  %5 = and i32 %4, 16, !dbg !7862
  %6 = icmp eq i32 %5, 0, !dbg !7863
  br i1 %6, label %8, label %7, !dbg !7864

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.39, i32 0, i32 0), i32 noundef 69) #27, !dbg !7865
  br label %8, !dbg !7871

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7872
  %10 = and i32 %9, 8, !dbg !7874
  %11 = icmp eq i32 %10, 0, !dbg !7875
  br i1 %11, label %13, label %12, !dbg !7876

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.36, i32 0, i32 0), i32 noundef 69) #27, !dbg !7877
  br label %13, !dbg !7883

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7884
  %15 = and i32 %14, 2, !dbg !7885
  %16 = icmp eq i32 %15, 0, !dbg !7886
  br i1 %16, label %27, label %17, !dbg !7887

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i32 noundef 69) #27, !dbg !7888
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7893
  call void @llvm.dbg.value(metadata i32 %18, metadata !7846, metadata !DIExpression()), !dbg !7894
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7895
  %20 = and i32 %19, 128, !dbg !7897
  %21 = icmp eq i32 %20, 0, !dbg !7898
  br i1 %21, label %27, label %22, !dbg !7899

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !7845, metadata !DIExpression()), !dbg !7854
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #27, !dbg !7900
  %23 = icmp eq i32 %1, 0, !dbg !7906
  br i1 %23, label %27, label %24, !dbg !7908

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7909
  %26 = and i32 %25, -129, !dbg !7909
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7909
  br label %27, !dbg !7911

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !7854
  call void @llvm.dbg.value(metadata i32 %28, metadata !7845, metadata !DIExpression()), !dbg !7854
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7912
  %30 = and i32 %29, 1, !dbg !7914
  %31 = icmp eq i32 %30, 0, !dbg !7915
  br i1 %31, label %33, label %32, !dbg !7916

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i32 0, i32 0), i32 noundef 69) #27, !dbg !7917
  br label %33, !dbg !7923

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7924
  %35 = and i32 %34, 32, !dbg !7926
  %36 = icmp eq i32 %35, 0, !dbg !7927
  br i1 %36, label %38, label %37, !dbg !7928

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), i32 noundef 69) #27, !dbg !7929
  br label %38, !dbg !7935

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7936
  %40 = and i32 %39, 16, !dbg !7937
  %41 = icmp eq i32 %40, 0, !dbg !7937
  br i1 %41, label %42, label %46, !dbg !7938

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7939
  %44 = and i32 %43, 2, !dbg !7940
  %45 = icmp eq i32 %44, 0, !dbg !7940
  br i1 %45, label %55, label %46, !dbg !7941

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7942
  %48 = and i32 %47, 2048, !dbg !7943
  %49 = icmp eq i32 %48, 0, !dbg !7943
  br i1 %49, label %55, label %50, !dbg !7944

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !7945
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #27, !dbg !7946
  call void @llvm.dbg.value(metadata i32 %52, metadata !7849, metadata !DIExpression()), !dbg !7947
  %53 = icmp eq i32 %52, 0, !dbg !7948
  br i1 %53, label %55, label %54, !dbg !7950

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !7951, metadata !DIExpression()) #25, !dbg !7954
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #25, !dbg !7957, !srcloc !7958
  call void @llvm.dbg.value(metadata i32 2, metadata !7844, metadata !DIExpression()), !dbg !7854
  br label %55, !dbg !7959

55:                                               ; preds = %54, %50, %46, %42
  %56 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %50 ], !dbg !7854
  call void @llvm.dbg.value(metadata i32 %56, metadata !7844, metadata !DIExpression()), !dbg !7854
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7960
  %58 = and i32 %57, 32, !dbg !7962
  %59 = icmp eq i32 %58, 0, !dbg !7963
  br i1 %59, label %63, label %60, !dbg !7964

60:                                               ; preds = %55
  %61 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7965
  %62 = and i32 %61, -8193, !dbg !7965
  store volatile i32 %62, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7965
  br label %63, !dbg !7967

63:                                               ; preds = %60, %55
  %64 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7968
  %65 = or i32 %64, 255, !dbg !7968
  store volatile i32 %65, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7968
  store i8 0, i8* %2, align 1, !dbg !7969
  ret i32 %56, !dbg !7970
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7971 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7975, metadata !DIExpression()), !dbg !7982
  call void @llvm.dbg.value(metadata i32 %0, metadata !7976, metadata !DIExpression()), !dbg !7982
  call void @llvm.dbg.value(metadata i8* %1, metadata !7977, metadata !DIExpression()), !dbg !7982
  call void @llvm.dbg.value(metadata i32 0, metadata !7978, metadata !DIExpression()), !dbg !7982
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #27, !dbg !7983
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7988
  %4 = and i32 %3, 4096, !dbg !7990
  %5 = icmp eq i32 %4, 0, !dbg !7990
  br i1 %5, label %7, label %6, !dbg !7991

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #27, !dbg !7992
  br label %7, !dbg !7998

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7999
  %9 = and i32 %8, 2048, !dbg !8001
  %10 = icmp eq i32 %9, 0, !dbg !8001
  br i1 %10, label %12, label %11, !dbg !8002

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.36, i32 0, i32 0), i32 noundef 69) #27, !dbg !8003
  br label %12, !dbg !8009

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8010
  %14 = and i32 %13, 512, !dbg !8011
  %15 = icmp eq i32 %14, 0, !dbg !8011
  br i1 %15, label %26, label %16, !dbg !8012

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15.37, i32 0, i32 0), i32 noundef 69) #27, !dbg !8013
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !8018
  call void @llvm.dbg.value(metadata i32 %17, metadata !7979, metadata !DIExpression()), !dbg !8019
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8020
  %19 = and i32 %18, 32768, !dbg !8022
  %20 = icmp eq i32 %19, 0, !dbg !8023
  br i1 %20, label %26, label %21, !dbg !8024

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !8025
  %22 = icmp eq i32 %0, 0, !dbg !8031
  br i1 %22, label %26, label %23, !dbg !8033

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8034
  %25 = and i32 %24, -32769, !dbg !8034
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8034
  br label %26, !dbg !8036

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8037
  %28 = and i32 %27, 1024, !dbg !8039
  %29 = icmp eq i32 %28, 0, !dbg !8039
  br i1 %29, label %31, label %30, !dbg !8040

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69) #27, !dbg !8041
  br label %31, !dbg !8047

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8048
  %33 = and i32 %32, 256, !dbg !8050
  %34 = icmp eq i32 %33, 0, !dbg !8051
  br i1 %34, label %35, label %39, !dbg !8052

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8053
  %37 = and i32 %36, 8192, !dbg !8055
  %38 = icmp eq i32 %37, 0, !dbg !8055
  br i1 %38, label %41, label %39, !dbg !8056

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #27, !dbg !8057
  br label %41, !dbg !8058

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8058
  %43 = or i32 %42, 65280, !dbg !8058
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8058
  store i8 0, i8* %1, align 1, !dbg !8059
  ret void, !dbg !8060
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8061 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8067, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.value(metadata i32 0, metadata !8068, metadata !DIExpression()), !dbg !8069
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #27, !dbg !8070
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8075
  %2 = and i32 %1, 33554432, !dbg !8077
  %3 = icmp eq i32 %2, 0, !dbg !8078
  br i1 %3, label %5, label %4, !dbg !8079

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i32 0, i32 0), i32 noundef 69) #27, !dbg !8080
  br label %5, !dbg !8086

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8087
  %7 = and i32 %6, 16777216, !dbg !8089
  %8 = icmp eq i32 %7, 0, !dbg !8090
  br i1 %8, label %10, label %9, !dbg !8091

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21.35, i32 0, i32 0), i32 noundef 69) #27, !dbg !8092
  br label %10, !dbg !8098

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8099
  %12 = and i32 %11, 524288, !dbg !8101
  %13 = icmp eq i32 %12, 0, !dbg !8102
  br i1 %13, label %15, label %14, !dbg !8103

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #27, !dbg !8104
  br label %15, !dbg !8110

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8111
  %17 = and i32 %16, 262144, !dbg !8113
  %18 = icmp eq i32 %17, 0, !dbg !8114
  br i1 %18, label %20, label %19, !dbg !8115

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #27, !dbg !8116
  br label %20, !dbg !8122

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8123
  %22 = and i32 %21, 131072, !dbg !8125
  %23 = icmp eq i32 %22, 0, !dbg !8126
  br i1 %23, label %25, label %24, !dbg !8127

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #27, !dbg !8128
  br label %25, !dbg !8134

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8135
  %27 = and i32 %26, 65536, !dbg !8137
  %28 = icmp eq i32 %27, 0, !dbg !8138
  br i1 %28, label %30, label %29, !dbg !8139

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69) #27, !dbg !8140
  br label %30, !dbg !8146

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8147
  %32 = or i32 %31, -65536, !dbg !8147
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8147
  ret void, !dbg !8148
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8149 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8153, metadata !DIExpression()), !dbg !8155
  call void @llvm.dbg.value(metadata i8* %0, metadata !8154, metadata !DIExpression()), !dbg !8155
  store i8 0, i8* %0, align 1, !dbg !8156
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #27, !dbg !8157
  ret void, !dbg !8162
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8163 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8167, metadata !DIExpression()), !dbg !8169
  call void @llvm.dbg.value(metadata i32 %0, metadata !8168, metadata !DIExpression()), !dbg !8169
  %2 = icmp slt i32 %0, 16, !dbg !8170
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28.34, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29, i32 0, i32 0), !dbg !8170
  %4 = add nsw i32 %0, -16, !dbg !8170
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #27, !dbg !8170
  ret void, !dbg !8175
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8176 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8180, metadata !DIExpression()), !dbg !8183
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8184
  %3 = load i32, i32* %2, align 4, !dbg !8184
  %4 = inttoptr i32 %3 to i16*, !dbg !8185
  call void @llvm.dbg.value(metadata i16* %4, metadata !8181, metadata !DIExpression()), !dbg !8183
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8186
  %6 = or i32 %5, 256, !dbg !8186
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8186
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8187, !srcloc !8190
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8191, !srcloc !8194
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8195
  %8 = load i16, i16* %7, align 2, !dbg !8196
  call void @llvm.dbg.value(metadata i16 %8, metadata !8182, metadata !DIExpression()), !dbg !8183
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8197
  %10 = and i32 %9, -257, !dbg !8197
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8197
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8198, !srcloc !8190
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8200, !srcloc !8194
  %11 = icmp eq i16 %8, -8446, !dbg !8202
  ret i1 %11, !dbg !8204
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #16 !dbg !8205 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8206
  %2 = or i32 %1, 16, !dbg !8206
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8206
  ret void, !dbg !8207
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #16 !dbg !8208 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8211, metadata !DIExpression()), !dbg !8212
  br label %1, !dbg !8213

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8211, metadata !DIExpression()), !dbg !8212
  tail call fastcc void @__NVIC_SetPriority.48(i32 noundef %2) #26, !dbg !8215
  %3 = add nuw nsw i32 %2, 1, !dbg !8218
  call void @llvm.dbg.value(metadata i32 %3, metadata !8211, metadata !DIExpression()), !dbg !8212
  %4 = icmp eq i32 %3, 85, !dbg !8219
  br i1 %4, label %5, label %1, !dbg !8213, !llvm.loop !8220

5:                                                ; preds = %1
  ret void, !dbg !8222
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.48(i32 noundef %0) unnamed_addr #16 !dbg !8223 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8225, metadata !DIExpression()), !dbg !8227
  call void @llvm.dbg.value(metadata i32 1, metadata !8226, metadata !DIExpression()), !dbg !8227
  %2 = and i32 %0, 15, !dbg !8228
  %3 = add nsw i32 %2, -4, !dbg !8228
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8228
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8228
  %6 = icmp slt i32 %0, 0, !dbg !8228
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8228
  store volatile i8 16, i8* %7, align 1, !dbg !8229
  ret void, !dbg !8231
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8232 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8338, metadata !DIExpression()), !dbg !8339
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8340
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8342
  br i1 %3, label %4, label %12, !dbg !8343

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !8344, !srcloc !8356
  call void @llvm.dbg.value(metadata i32 %5, metadata !8347, metadata !DIExpression()) #25, !dbg !8357
  %6 = icmp eq i32 %5, 0, !dbg !8358
  br i1 %6, label %12, label %7, !dbg !8359

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8360
  %9 = or i32 %8, 268435456, !dbg !8360
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8360
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8362
  %11 = and i32 %10, -32769, !dbg !8362
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8362
  br label %12, !dbg !8363

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !8364
  ret void, !dbg !8365
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8366 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !8367
  ret void, !dbg !8368
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !485 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !590, metadata !DIExpression()), !dbg !8369
  call void @llvm.dbg.value(metadata i8 0, metadata !591, metadata !DIExpression()), !dbg !8369
  call void @llvm.dbg.value(metadata i32 64, metadata !593, metadata !DIExpression()), !dbg !8369
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8370
  %3 = load i32, i32* %2, align 4, !dbg !8370
  %4 = add i32 %3, -64, !dbg !8372
  call void @llvm.dbg.value(metadata i32 %4, metadata !592, metadata !DIExpression()), !dbg !8369
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !8373
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !8374
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !8375
  call void @llvm.dbg.value(metadata i8 1, metadata !591, metadata !DIExpression()), !dbg !8369
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !8376
  ret void, !dbg !8377
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8378 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8379
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8380, !srcloc !8383
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8384, !srcloc !8387
  ret void, !dbg !8388
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8389 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !8390, !srcloc !8393
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8394
  ret void, !dbg !8395
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8396 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8411, metadata !DIExpression()), !dbg !8415
  call void @llvm.dbg.value(metadata i8 %1, metadata !8412, metadata !DIExpression()), !dbg !8415
  call void @llvm.dbg.value(metadata i32 %2, metadata !8413, metadata !DIExpression()), !dbg !8415
  call void @llvm.dbg.value(metadata i32 %3, metadata !8414, metadata !DIExpression()), !dbg !8415
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !8416
  ret void, !dbg !8418
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8419 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8424, metadata !DIExpression()), !dbg !8429
  call void @llvm.dbg.value(metadata i8 %1, metadata !8425, metadata !DIExpression()), !dbg !8429
  call void @llvm.dbg.value(metadata i32 undef, metadata !8426, metadata !DIExpression()), !dbg !8429
  call void @llvm.dbg.value(metadata i32 undef, metadata !8427, metadata !DIExpression()), !dbg !8429
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8430
  call void @llvm.dbg.value(metadata i8 %3, metadata !8428, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8429
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !8431
  call void @llvm.dbg.value(metadata i32 %4, metadata !8428, metadata !DIExpression()), !dbg !8429
  %5 = trunc i32 %4 to i8, !dbg !8432
  store i8 %5, i8* @static_regions_num, align 1, !dbg !8433
  ret void, !dbg !8434
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !8435 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8439, metadata !DIExpression()), !dbg !8445
  call void @llvm.dbg.value(metadata i8 %1, metadata !8440, metadata !DIExpression()), !dbg !8445
  call void @llvm.dbg.value(metadata i8 %2, metadata !8441, metadata !DIExpression()), !dbg !8445
  call void @llvm.dbg.value(metadata i1 %3, metadata !8442, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8445
  %5 = zext i8 %2 to i32, !dbg !8446
  call void @llvm.dbg.value(metadata i32 %5, metadata !8444, metadata !DIExpression()), !dbg !8445
  call void @llvm.dbg.value(metadata i32 0, metadata !8443, metadata !DIExpression()), !dbg !8445
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !8444, metadata !DIExpression()), !dbg !8445
  call void @llvm.dbg.value(metadata i32 0, metadata !8443, metadata !DIExpression()), !dbg !8445
  %7 = icmp eq i8 %1, 0, !dbg !8447
  br i1 %7, label %30, label %8, !dbg !8450

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8444, metadata !DIExpression()), !dbg !8445
  call void @llvm.dbg.value(metadata i32 %10, metadata !8443, metadata !DIExpression()), !dbg !8445
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !8451
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !8454
  %13 = load i32, i32* %12, align 4, !dbg !8454
  %14 = icmp eq i32 %13, 0, !dbg !8455
  br i1 %14, label %26, label %15, !dbg !8456

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !8457

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !8459
  %18 = icmp eq i32 %17, 0, !dbg !8459
  br i1 %18, label %19, label %20, !dbg !8460

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.57, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #27, !dbg !8461
  br label %30, !dbg !8467

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !8468
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !8469
  call void @llvm.dbg.value(metadata i32 %22, metadata !8444, metadata !DIExpression()), !dbg !8445
  %23 = icmp eq i32 %22, -22, !dbg !8470
  br i1 %23, label %30, label %24, !dbg !8472

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !8473
  call void @llvm.dbg.value(metadata i32 %25, metadata !8444, metadata !DIExpression()), !dbg !8445
  br label %26, !dbg !8474

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !8445
  call void @llvm.dbg.value(metadata i32 %27, metadata !8444, metadata !DIExpression()), !dbg !8445
  %28 = add nuw nsw i32 %10, 1, !dbg !8475
  call void @llvm.dbg.value(metadata i32 %28, metadata !8443, metadata !DIExpression()), !dbg !8445
  %29 = icmp eq i32 %28, %6, !dbg !8447
  br i1 %29, label %30, label %8, !dbg !8450, !llvm.loop !8476

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !8445
  ret i32 %31, !dbg !8478
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !8479 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8483, metadata !DIExpression()), !dbg !8485
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !8486
  %3 = load i32, i32* %2, align 4, !dbg !8486
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !8487, !range !5020
  %5 = icmp ult i32 %4, 2, !dbg !8487
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !8488
  br i1 %7, label %8, label %15, !dbg !8488

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !8489
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !8490
  %11 = load i32, i32* %10, align 4, !dbg !8490
  %12 = and i32 %11, %9, !dbg !8491
  %13 = icmp eq i32 %12, 0, !dbg !8492
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8484, metadata !DIExpression()), !dbg !8485
  ret i32 %16, !dbg !8493
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8494 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !8498, metadata !DIExpression()), !dbg !8501
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !8499, metadata !DIExpression()), !dbg !8501
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !8502
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !8502
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !8500, metadata !DIExpression()), !dbg !8503
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !8504
  %6 = load i32, i32* %5, align 4, !dbg !8504
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !8505
  store i32 %6, i32* %7, align 4, !dbg !8506
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !8507
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !8508
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !8509
  %11 = load i32, i32* %10, align 4, !dbg !8509
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !8510
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !8511
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !8512
  ret i32 %12, !dbg !8513
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #12 !dbg !8514 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !8521, metadata !DIExpression()), !dbg !8525
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !8522, metadata !DIExpression()), !dbg !8525
  call void @llvm.dbg.value(metadata i32 undef, metadata !8523, metadata !DIExpression()), !dbg !8525
  call void @llvm.dbg.value(metadata i32 %2, metadata !8524, metadata !DIExpression()), !dbg !8525
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !8526
  %5 = load i32, i32* %4, align 4, !dbg !8526
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !8527
  %7 = or i32 %6, %5, !dbg !8528
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !8529
  store i32 %7, i32* %8, align 4, !dbg !8530
  ret void, !dbg !8531
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8532 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8536, metadata !DIExpression()), !dbg !8538
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8537, metadata !DIExpression()), !dbg !8538
  %3 = zext i8 %0 to i32, !dbg !8539
  %4 = icmp ugt i8 %0, 7, !dbg !8541
  br i1 %4, label %5, label %6, !dbg !8542

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.58, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #27, !dbg !8543
  br label %7, !dbg !8549

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !8550
  br label %7, !dbg !8551

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !8538
  ret i32 %8, !dbg !8552
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #16 !dbg !8553 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8557, metadata !DIExpression()), !dbg !8559
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8558, metadata !DIExpression()), !dbg !8559
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !8560
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !8561
  %4 = load i32, i32* %3, align 4, !dbg !8561
  %5 = and i32 %4, -32, !dbg !8562
  %6 = or i32 %5, %0, !dbg !8563
  %7 = or i32 %6, 16, !dbg !8563
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !8564
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !8565
  %9 = load i32, i32* %8, align 4, !dbg !8565
  %10 = or i32 %9, 1, !dbg !8566
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8567
  ret void, !dbg !8568
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #16 !dbg !8569 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8572, metadata !DIExpression()), !dbg !8573
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8574
  ret void, !dbg !8575
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !8576 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8580, metadata !DIExpression()), !dbg !8581
  %2 = icmp ult i32 %0, 33, !dbg !8582
  br i1 %2, label %11, label %3, !dbg !8584

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !8585
  br i1 %4, label %11, label %5, !dbg !8587

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !8588
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !8589, !range !5020
  %8 = mul nsw i32 %7, -2, !dbg !8590
  %9 = add nsw i32 %8, 62, !dbg !8590
  %10 = and i32 %9, 62, !dbg !8591
  br label %11, !dbg !8592

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !8581
  ret i32 %12, !dbg !8593
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !8594 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8598, metadata !DIExpression()), !dbg !8600
  call void @llvm.dbg.value(metadata i8 %1, metadata !8599, metadata !DIExpression()), !dbg !8600
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !8601
  ret void, !dbg !8603
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8604 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8608, metadata !DIExpression()), !dbg !8615
  call void @llvm.dbg.value(metadata i8 %1, metadata !8609, metadata !DIExpression()), !dbg !8615
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8616
  call void @llvm.dbg.value(metadata i8 %3, metadata !8610, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8615
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !8617
  call void @llvm.dbg.value(metadata i32 %4, metadata !8610, metadata !DIExpression()), !dbg !8615
  %5 = icmp ne i32 %4, -22, !dbg !8618
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !8619
  call void @llvm.dbg.value(metadata i32 %4, metadata !8611, metadata !DIExpression()), !dbg !8620
  br i1 %7, label %8, label %12, !dbg !8619

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8611, metadata !DIExpression()), !dbg !8620
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !8621
  %10 = add i32 %9, 1, !dbg !8624
  call void @llvm.dbg.value(metadata i32 %10, metadata !8611, metadata !DIExpression()), !dbg !8620
  %11 = icmp eq i32 %10, 8, !dbg !8625
  br i1 %11, label %12, label %8, !dbg !8626, !llvm.loop !8627

12:                                               ; preds = %8, %2
  ret void, !dbg !8629
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #16 !dbg !8630 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8633, metadata !DIExpression()), !dbg !8634
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8635
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8636
  ret void, !dbg !8637
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !8638 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !8643
  %2 = icmp ugt i32 %1, 8, !dbg !8645
  br i1 %2, label %14, label %3, !dbg !8646

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !8647
  call void @llvm.dbg.value(metadata i32 0, metadata !8642, metadata !DIExpression()), !dbg !8648
  %4 = icmp eq i32 %1, 0, !dbg !8649
  br i1 %4, label %12, label %5, !dbg !8652

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !8652

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8642, metadata !DIExpression()), !dbg !8648
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !8653
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !8655
  %10 = add nuw i32 %8, 1, !dbg !8656
  call void @llvm.dbg.value(metadata i32 %10, metadata !8642, metadata !DIExpression()), !dbg !8648
  %11 = icmp eq i32 %10, %1, !dbg !8649
  br i1 %11, label %12, label %7, !dbg !8652, !llvm.loop !8657

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !8659
  store i8 %13, i8* @static_regions_num, align 1, !dbg !8660
  tail call void @arm_core_mpu_enable() #26, !dbg !8661
  br label %14, !dbg !8662

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !8648
  ret i32 %15, !dbg !8663
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !8664 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8671, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata i8* %1, metadata !8672, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata i8* %0, metadata !8673, metadata !DIExpression()), !dbg !8674
  %3 = load i8, i8* %1, align 1, !dbg !8675
  %4 = icmp eq i8 %3, 0, !dbg !8676
  br i1 %4, label %13, label %5, !dbg !8677

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8671, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata i8* %8, metadata !8672, metadata !DIExpression()), !dbg !8674
  store i8 %6, i8* %7, align 1, !dbg !8678
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8680
  call void @llvm.dbg.value(metadata i8* %9, metadata !8671, metadata !DIExpression()), !dbg !8674
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8681
  call void @llvm.dbg.value(metadata i8* %10, metadata !8672, metadata !DIExpression()), !dbg !8674
  %11 = load i8, i8* %10, align 1, !dbg !8675
  %12 = icmp eq i8 %11, 0, !dbg !8676
  br i1 %12, label %13, label %5, !dbg !8677, !llvm.loop !8682

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8684
  ret i8* %0, !dbg !8685
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8686 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8690, metadata !DIExpression()), !dbg !8694
  call void @llvm.dbg.value(metadata i8* %1, metadata !8691, metadata !DIExpression()), !dbg !8694
  call void @llvm.dbg.value(metadata i32 %2, metadata !8692, metadata !DIExpression()), !dbg !8694
  call void @llvm.dbg.value(metadata i8* %0, metadata !8693, metadata !DIExpression()), !dbg !8694
  %4 = icmp eq i32 %2, 0, !dbg !8695
  br i1 %4, label %22, label %5, !dbg !8696

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8690, metadata !DIExpression()), !dbg !8694
  call void @llvm.dbg.value(metadata i32 %7, metadata !8692, metadata !DIExpression()), !dbg !8694
  call void @llvm.dbg.value(metadata i8* %8, metadata !8691, metadata !DIExpression()), !dbg !8694
  %9 = load i8, i8* %8, align 1, !dbg !8697
  %10 = icmp eq i8 %9, 0, !dbg !8698
  br i1 %10, label %16, label %11, !dbg !8699

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8700
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8702
  call void @llvm.dbg.value(metadata i8* %12, metadata !8691, metadata !DIExpression()), !dbg !8694
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8703
  call void @llvm.dbg.value(metadata i8* %13, metadata !8690, metadata !DIExpression()), !dbg !8694
  %14 = add i32 %7, -1, !dbg !8704
  call void @llvm.dbg.value(metadata i32 %14, metadata !8692, metadata !DIExpression()), !dbg !8694
  %15 = icmp eq i32 %14, 0, !dbg !8695
  br i1 %15, label %22, label %5, !dbg !8696, !llvm.loop !8705

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8690, metadata !DIExpression()), !dbg !8694
  call void @llvm.dbg.value(metadata i32 %18, metadata !8692, metadata !DIExpression()), !dbg !8694
  store i8 0, i8* %17, align 1, !dbg !8707
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8709
  call void @llvm.dbg.value(metadata i8* %19, metadata !8690, metadata !DIExpression()), !dbg !8694
  %20 = add i32 %18, -1, !dbg !8710
  call void @llvm.dbg.value(metadata i32 %20, metadata !8692, metadata !DIExpression()), !dbg !8694
  %21 = icmp eq i32 %20, 0, !dbg !8711
  br i1 %21, label %22, label %16, !dbg !8712, !llvm.loop !8713

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !8715
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !8716 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8720, metadata !DIExpression()), !dbg !8723
  call void @llvm.dbg.value(metadata i32 %1, metadata !8721, metadata !DIExpression()), !dbg !8723
  call void @llvm.dbg.value(metadata i32 %1, metadata !8722, metadata !DIExpression()), !dbg !8723
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8724

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !8720, metadata !DIExpression()), !dbg !8723
  %6 = load i8, i8* %5, align 1, !dbg !8725
  %7 = icmp eq i8 %6, %3, !dbg !8726
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !8727
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8728
  call void @llvm.dbg.value(metadata i8* %10, metadata !8720, metadata !DIExpression()), !dbg !8723
  br i1 %9, label %11, label %4, !dbg !8727, !llvm.loop !8730

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8732
  ret i8* %12, !dbg !8733
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !8734 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8736, metadata !DIExpression()), !dbg !8739
  call void @llvm.dbg.value(metadata i32 %1, metadata !8737, metadata !DIExpression()), !dbg !8739
  call void @llvm.dbg.value(metadata i8* null, metadata !8738, metadata !DIExpression()), !dbg !8739
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8740

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8739
  call void @llvm.dbg.value(metadata i8* %6, metadata !8738, metadata !DIExpression()), !dbg !8739
  call void @llvm.dbg.value(metadata i8* %5, metadata !8736, metadata !DIExpression()), !dbg !8739
  %7 = load i8, i8* %5, align 1, !dbg !8741
  %8 = icmp eq i8 %7, %3, !dbg !8744
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8745
  call void @llvm.dbg.value(metadata i8* %9, metadata !8738, metadata !DIExpression()), !dbg !8739
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8746
  call void @llvm.dbg.value(metadata i8* %10, metadata !8736, metadata !DIExpression()), !dbg !8739
  %11 = icmp eq i8 %7, 0, !dbg !8747
  br i1 %11, label %12, label %4, !dbg !8747, !llvm.loop !8748

12:                                               ; preds = %4
  ret i8* %9, !dbg !8750
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #7 !dbg !8751 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8755, metadata !DIExpression()), !dbg !8757
  call void @llvm.dbg.value(metadata i32 0, metadata !8756, metadata !DIExpression()), !dbg !8757
  %2 = load i8, i8* %0, align 1, !dbg !8758
  %3 = icmp eq i8 %2, 0, !dbg !8759
  br i1 %3, label %11, label %4, !dbg !8760

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8756, metadata !DIExpression()), !dbg !8757
  call void @llvm.dbg.value(metadata i8* %6, metadata !8755, metadata !DIExpression()), !dbg !8757
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8761
  call void @llvm.dbg.value(metadata i8* %7, metadata !8755, metadata !DIExpression()), !dbg !8757
  %8 = add i32 %5, 1, !dbg !8763
  call void @llvm.dbg.value(metadata i32 %8, metadata !8756, metadata !DIExpression()), !dbg !8757
  %9 = load i8, i8* %7, align 1, !dbg !8758
  %10 = icmp eq i8 %9, 0, !dbg !8759
  br i1 %10, label %11, label %4, !dbg !8760, !llvm.loop !8764

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8757
  ret i32 %12, !dbg !8766
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !8767 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8771, metadata !DIExpression()), !dbg !8774
  call void @llvm.dbg.value(metadata i32 %1, metadata !8772, metadata !DIExpression()), !dbg !8774
  call void @llvm.dbg.value(metadata i32 0, metadata !8773, metadata !DIExpression()), !dbg !8774
  %3 = load i8, i8* %0, align 1, !dbg !8775
  %4 = icmp ne i8 %3, 0, !dbg !8776
  %5 = icmp ne i32 %1, 0, !dbg !8777
  %6 = and i1 %4, %5, !dbg !8777
  br i1 %6, label %7, label %16, !dbg !8778

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8773, metadata !DIExpression()), !dbg !8774
  call void @llvm.dbg.value(metadata i8* %9, metadata !8771, metadata !DIExpression()), !dbg !8774
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8779
  call void @llvm.dbg.value(metadata i8* %10, metadata !8771, metadata !DIExpression()), !dbg !8774
  %11 = add nuw i32 %8, 1, !dbg !8781
  call void @llvm.dbg.value(metadata i32 %11, metadata !8773, metadata !DIExpression()), !dbg !8774
  %12 = load i8, i8* %10, align 1, !dbg !8775
  %13 = icmp ne i8 %12, 0, !dbg !8776
  %14 = icmp ult i32 %11, %1, !dbg !8777
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8777
  br i1 %15, label %7, label %16, !dbg !8778, !llvm.loop !8782

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8774
  ret i32 %17, !dbg !8784
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #7 !dbg !8785 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8789, metadata !DIExpression()), !dbg !8791
  call void @llvm.dbg.value(metadata i8* %1, metadata !8790, metadata !DIExpression()), !dbg !8791
  %3 = load i8, i8* %0, align 1, !dbg !8792
  %4 = load i8, i8* %1, align 1, !dbg !8793
  %5 = icmp ne i8 %3, %4, !dbg !8794
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8795
  br i1 %7, label %18, label %8, !dbg !8795

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8790, metadata !DIExpression()), !dbg !8791
  call void @llvm.dbg.value(metadata i8* %10, metadata !8789, metadata !DIExpression()), !dbg !8791
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8796
  call void @llvm.dbg.value(metadata i8* %11, metadata !8789, metadata !DIExpression()), !dbg !8791
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8798
  call void @llvm.dbg.value(metadata i8* %12, metadata !8790, metadata !DIExpression()), !dbg !8791
  %13 = load i8, i8* %11, align 1, !dbg !8792
  %14 = load i8, i8* %12, align 1, !dbg !8793
  %15 = icmp ne i8 %13, %14, !dbg !8794
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8795
  br i1 %17, label %18, label %8, !dbg !8795, !llvm.loop !8799

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8792
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8793
  %21 = zext i8 %19 to i32, !dbg !8802
  %22 = zext i8 %20 to i32, !dbg !8803
  %23 = sub nsw i32 %21, %22, !dbg !8804
  ret i32 %23, !dbg !8805
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #7 !dbg !8806 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8810, metadata !DIExpression()), !dbg !8813
  call void @llvm.dbg.value(metadata i8* %1, metadata !8811, metadata !DIExpression()), !dbg !8813
  call void @llvm.dbg.value(metadata i32 %2, metadata !8812, metadata !DIExpression()), !dbg !8813
  %4 = icmp eq i32 %2, 0, !dbg !8814
  br i1 %4, label %23, label %5, !dbg !8814

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8812, metadata !DIExpression()), !dbg !8813
  call void @llvm.dbg.value(metadata i8* %7, metadata !8811, metadata !DIExpression()), !dbg !8813
  call void @llvm.dbg.value(metadata i8* %8, metadata !8810, metadata !DIExpression()), !dbg !8813
  %9 = load i8, i8* %8, align 1, !dbg !8815
  %10 = load i8, i8* %7, align 1, !dbg !8816
  %11 = icmp ne i8 %9, %10, !dbg !8817
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8818
  br i1 %13, label %19, label %14, !dbg !8818

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8819
  call void @llvm.dbg.value(metadata i8* %15, metadata !8810, metadata !DIExpression()), !dbg !8813
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8821
  call void @llvm.dbg.value(metadata i8* %16, metadata !8811, metadata !DIExpression()), !dbg !8813
  %17 = add i32 %6, -1, !dbg !8822
  call void @llvm.dbg.value(metadata i32 %17, metadata !8812, metadata !DIExpression()), !dbg !8813
  %18 = icmp eq i32 %17, 0, !dbg !8814
  br i1 %18, label %23, label %5, !dbg !8814, !llvm.loop !8823

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8826
  %21 = zext i8 %10 to i32, !dbg !8827
  %22 = sub nsw i32 %20, %21, !dbg !8828
  br label %23, !dbg !8829

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8829
  ret i32 %24, !dbg !8830
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #15 !dbg !8831 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8835, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata i8* %1, metadata !8836, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata i8** %2, metadata !8837, metadata !DIExpression()), !dbg !8840
  %4 = icmp eq i8* %0, null, !dbg !8841
  br i1 %4, label %5, label %7, !dbg !8841

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8842
  br label %7, !dbg !8841

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8841
  call void @llvm.dbg.value(metadata i8* %8, metadata !8838, metadata !DIExpression()), !dbg !8840
  %9 = load i8, i8* %8, align 1, !dbg !8843
  %10 = icmp eq i8 %9, 0, !dbg !8843
  br i1 %10, label %33, label %11, !dbg !8844

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8838, metadata !DIExpression()), !dbg !8840
  %14 = zext i8 %12 to i32, !dbg !8843
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !8845
  %16 = icmp eq i8* %15, null, !dbg !8844
  br i1 %16, label %21, label %17, !dbg !8846

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8847
  call void @llvm.dbg.value(metadata i8* %18, metadata !8838, metadata !DIExpression()), !dbg !8840
  %19 = load i8, i8* %18, align 1, !dbg !8843
  %20 = icmp eq i8 %19, 0, !dbg !8843
  br i1 %20, label %33, label %11, !dbg !8844, !llvm.loop !8849

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8839, metadata !DIExpression()), !dbg !8840
  %24 = zext i8 %22 to i32, !dbg !8851
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !8852
  %26 = icmp eq i8* %25, null, !dbg !8853
  br i1 %26, label %27, label %31, !dbg !8854

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8855
  call void @llvm.dbg.value(metadata i8* %28, metadata !8839, metadata !DIExpression()), !dbg !8840
  %29 = load i8, i8* %28, align 1, !dbg !8851
  %30 = icmp eq i8 %29, 0, !dbg !8851
  br i1 %30, label %33, label %21, !dbg !8857, !llvm.loop !8858

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8860
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8863
  br label %33, !dbg !8864

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8840
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8840
  store i8* %34, i8** %2, align 4, !dbg !8840
  ret i8* %35, !dbg !8865
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !8866 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8868, metadata !DIExpression()), !dbg !8870
  call void @llvm.dbg.value(metadata i8* %1, metadata !8869, metadata !DIExpression()), !dbg !8870
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8871
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8872
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !8873
  ret i8* %0, !dbg !8874
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8875 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8877, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata i8* %1, metadata !8878, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata i32 %2, metadata !8879, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata i8* %0, metadata !8880, metadata !DIExpression()), !dbg !8882
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8883
  call void @llvm.dbg.value(metadata i32 %4, metadata !8881, metadata !DIExpression()), !dbg !8882
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8884
  call void @llvm.dbg.value(metadata i8* %5, metadata !8877, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata i8* %1, metadata !8878, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata i32 %2, metadata !8879, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata i32 %2, metadata !8879, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8882
  %6 = icmp eq i32 %2, 0, !dbg !8885
  br i1 %6, label %18, label %7, !dbg !8886

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8887
  call void @llvm.dbg.value(metadata i8* %9, metadata !8877, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata i8* %10, metadata !8878, metadata !DIExpression()), !dbg !8882
  %12 = load i8, i8* %10, align 1, !dbg !8888
  %13 = icmp eq i8 %12, 0, !dbg !8889
  br i1 %13, label %18, label %14, !dbg !8890

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8891
  call void @llvm.dbg.value(metadata i8* %15, metadata !8878, metadata !DIExpression()), !dbg !8882
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8893
  call void @llvm.dbg.value(metadata i8* %16, metadata !8877, metadata !DIExpression()), !dbg !8882
  store i8 %12, i8* %9, align 1, !dbg !8894
  call void @llvm.dbg.value(metadata i32 %11, metadata !8879, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata i32 %11, metadata !8879, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8882
  %17 = icmp eq i32 %11, 0, !dbg !8885
  br i1 %17, label %18, label %7, !dbg !8886, !llvm.loop !8895

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8882
  store i8 0, i8* %19, align 1, !dbg !8897
  ret i8* %0, !dbg !8898
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #7 !dbg !8899 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8903, metadata !DIExpression()), !dbg !8908
  call void @llvm.dbg.value(metadata i8* %1, metadata !8904, metadata !DIExpression()), !dbg !8908
  call void @llvm.dbg.value(metadata i32 %2, metadata !8905, metadata !DIExpression()), !dbg !8908
  call void @llvm.dbg.value(metadata i8* %0, metadata !8906, metadata !DIExpression()), !dbg !8908
  call void @llvm.dbg.value(metadata i8* %1, metadata !8907, metadata !DIExpression()), !dbg !8908
  %4 = icmp eq i32 %2, 0, !dbg !8909
  br i1 %4, label %31, label %5, !dbg !8911

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8907, metadata !DIExpression()), !dbg !8908
  call void @llvm.dbg.value(metadata i8* %0, metadata !8906, metadata !DIExpression()), !dbg !8908
  call void @llvm.dbg.value(metadata i32 %2, metadata !8905, metadata !DIExpression()), !dbg !8908
  %6 = add i32 %2, -1, !dbg !8912
  call void @llvm.dbg.value(metadata i32 %6, metadata !8905, metadata !DIExpression()), !dbg !8908
  %7 = icmp eq i32 %6, 0, !dbg !8913
  br i1 %7, label %23, label %8, !dbg !8914

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8915
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8915
  br label %11, !dbg !8915

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8907, metadata !DIExpression()), !dbg !8908
  call void @llvm.dbg.value(metadata i8* %14, metadata !8906, metadata !DIExpression()), !dbg !8908
  %15 = load i8, i8* %14, align 1, !dbg !8916
  %16 = load i8, i8* %13, align 1, !dbg !8917
  %17 = icmp eq i8 %15, %16, !dbg !8918
  br i1 %17, label %18, label %23, !dbg !8915

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8919
  call void @llvm.dbg.value(metadata i8* %19, metadata !8906, metadata !DIExpression()), !dbg !8908
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8921
  call void @llvm.dbg.value(metadata i8* %20, metadata !8907, metadata !DIExpression()), !dbg !8908
  call void @llvm.dbg.value(metadata i32 %12, metadata !8905, metadata !DIExpression()), !dbg !8908
  %21 = add i32 %12, -1, !dbg !8912
  call void @llvm.dbg.value(metadata i32 %21, metadata !8905, metadata !DIExpression()), !dbg !8908
  %22 = icmp eq i32 %21, 0, !dbg !8913
  br i1 %22, label %23, label %11, !dbg !8914, !llvm.loop !8922

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8908
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8908
  %26 = load i8, i8* %24, align 1, !dbg !8924
  %27 = zext i8 %26 to i32, !dbg !8924
  %28 = load i8, i8* %25, align 1, !dbg !8925
  %29 = zext i8 %28 to i32, !dbg !8925
  %30 = sub nsw i32 %27, %29, !dbg !8926
  br label %31, !dbg !8927

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8908
  ret i32 %32, !dbg !8928
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8929 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8933, metadata !DIExpression()), !dbg !8938
  call void @llvm.dbg.value(metadata i8* %1, metadata !8934, metadata !DIExpression()), !dbg !8938
  call void @llvm.dbg.value(metadata i32 %2, metadata !8935, metadata !DIExpression()), !dbg !8938
  call void @llvm.dbg.value(metadata i8* %0, metadata !8936, metadata !DIExpression()), !dbg !8938
  call void @llvm.dbg.value(metadata i8* %1, metadata !8937, metadata !DIExpression()), !dbg !8938
  %4 = ptrtoint i8* %0 to i32, !dbg !8939
  %5 = ptrtoint i8* %1 to i32, !dbg !8939
  %6 = sub i32 %4, %5, !dbg !8939
  %7 = icmp ult i32 %6, %2, !dbg !8941
  br i1 %7, label %10, label %8, !dbg !8942

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8937, metadata !DIExpression()), !dbg !8938
  call void @llvm.dbg.value(metadata i8* %0, metadata !8936, metadata !DIExpression()), !dbg !8938
  call void @llvm.dbg.value(metadata i32 %2, metadata !8935, metadata !DIExpression()), !dbg !8938
  %9 = icmp eq i32 %2, 0, !dbg !8943
  br i1 %9, label %26, label %17, !dbg !8945

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8935, metadata !DIExpression()), !dbg !8938
  %12 = add i32 %11, -1, !dbg !8946
  call void @llvm.dbg.value(metadata i32 %12, metadata !8935, metadata !DIExpression()), !dbg !8938
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8949
  %14 = load i8, i8* %13, align 1, !dbg !8949
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8950
  store i8 %14, i8* %15, align 1, !dbg !8951
  %16 = icmp eq i32 %12, 0, !dbg !8952
  br i1 %16, label %26, label %10, !dbg !8953, !llvm.loop !8954

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8937, metadata !DIExpression()), !dbg !8938
  call void @llvm.dbg.value(metadata i8* %19, metadata !8936, metadata !DIExpression()), !dbg !8938
  call void @llvm.dbg.value(metadata i32 %20, metadata !8935, metadata !DIExpression()), !dbg !8938
  %21 = load i8, i8* %18, align 1, !dbg !8956
  store i8 %21, i8* %19, align 1, !dbg !8958
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8959
  call void @llvm.dbg.value(metadata i8* %22, metadata !8936, metadata !DIExpression()), !dbg !8938
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8960
  call void @llvm.dbg.value(metadata i8* %23, metadata !8937, metadata !DIExpression()), !dbg !8938
  %24 = add i32 %20, -1, !dbg !8961
  call void @llvm.dbg.value(metadata i32 %24, metadata !8935, metadata !DIExpression()), !dbg !8938
  %25 = icmp eq i32 %24, 0, !dbg !8943
  br i1 %25, label %26, label %17, !dbg !8945, !llvm.loop !8962

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8964
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8965 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8971, metadata !DIExpression()), !dbg !8976
  call void @llvm.dbg.value(metadata i8* %1, metadata !8972, metadata !DIExpression()), !dbg !8976
  call void @llvm.dbg.value(metadata i32 %2, metadata !8973, metadata !DIExpression()), !dbg !8976
  call void @llvm.dbg.value(metadata i8* %0, metadata !8974, metadata !DIExpression()), !dbg !8976
  call void @llvm.dbg.value(metadata i8* %1, metadata !8975, metadata !DIExpression()), !dbg !8976
  %4 = icmp eq i32 %2, 0, !dbg !8977
  br i1 %4, label %14, label %5, !dbg !8978

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8975, metadata !DIExpression()), !dbg !8976
  call void @llvm.dbg.value(metadata i8* %7, metadata !8974, metadata !DIExpression()), !dbg !8976
  call void @llvm.dbg.value(metadata i32 %8, metadata !8973, metadata !DIExpression()), !dbg !8976
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8979
  call void @llvm.dbg.value(metadata i8* %9, metadata !8975, metadata !DIExpression()), !dbg !8976
  %10 = load i8, i8* %6, align 1, !dbg !8981
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8982
  call void @llvm.dbg.value(metadata i8* %11, metadata !8974, metadata !DIExpression()), !dbg !8976
  store i8 %10, i8* %7, align 1, !dbg !8983
  %12 = add i32 %8, -1, !dbg !8984
  call void @llvm.dbg.value(metadata i32 %12, metadata !8973, metadata !DIExpression()), !dbg !8976
  %13 = icmp eq i32 %12, 0, !dbg !8977
  br i1 %13, label %14, label %5, !dbg !8978, !llvm.loop !8985

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8987
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8988 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8992, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.value(metadata i32 %1, metadata !8993, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.value(metadata i32 %2, metadata !8994, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.value(metadata i8* %0, metadata !8995, metadata !DIExpression()), !dbg !8997
  %4 = trunc i32 %1 to i8, !dbg !8998
  call void @llvm.dbg.value(metadata i8 %4, metadata !8996, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.value(metadata i32 %2, metadata !8994, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.value(metadata i8* %0, metadata !8995, metadata !DIExpression()), !dbg !8997
  %5 = icmp eq i32 %2, 0, !dbg !8999
  br i1 %5, label %12, label %6, !dbg !9000

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8994, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.value(metadata i8* %8, metadata !8995, metadata !DIExpression()), !dbg !8997
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9001
  call void @llvm.dbg.value(metadata i8* %9, metadata !8995, metadata !DIExpression()), !dbg !8997
  store i8 %4, i8* %8, align 1, !dbg !9003
  %10 = add i32 %7, -1, !dbg !9004
  call void @llvm.dbg.value(metadata i32 %10, metadata !8994, metadata !DIExpression()), !dbg !8997
  %11 = icmp eq i32 %10, 0, !dbg !8999
  br i1 %11, label %12, label %6, !dbg !9000, !llvm.loop !9005

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !9007
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !9008 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9012, metadata !DIExpression()), !dbg !9018
  call void @llvm.dbg.value(metadata i32 %1, metadata !9013, metadata !DIExpression()), !dbg !9018
  call void @llvm.dbg.value(metadata i32 %2, metadata !9014, metadata !DIExpression()), !dbg !9018
  %4 = icmp eq i32 %2, 0, !dbg !9019
  br i1 %4, label %17, label %5, !dbg !9020

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !9021

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !9022
  call void @llvm.dbg.value(metadata i8* %9, metadata !9015, metadata !DIExpression()), !dbg !9022
  call void @llvm.dbg.value(metadata i32 %8, metadata !9014, metadata !DIExpression()), !dbg !9018
  call void @llvm.dbg.value(metadata i8* %9, metadata !9015, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9022
  %10 = load i8, i8* %9, align 1, !dbg !9023
  %11 = icmp eq i8 %10, %6, !dbg !9026
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !9027
  call void @llvm.dbg.value(metadata i8* %12, metadata !9015, metadata !DIExpression()), !dbg !9022
  call void @llvm.dbg.value(metadata i32 %13, metadata !9014, metadata !DIExpression()), !dbg !9018
  br i1 %15, label %16, label %7, !dbg !9027, !llvm.loop !9028

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !9030

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !9018
  ret i8* %19, !dbg !9031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #8 !dbg !9032 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !9034, metadata !DIExpression()), !dbg !9035
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !9036
  ret void, !dbg !9037
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #5 !dbg !9038 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9040, metadata !DIExpression()), !dbg !9041
  ret i32 -1, !dbg !9042
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9043 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9047, metadata !DIExpression()), !dbg !9049
  call void @llvm.dbg.value(metadata i32* %1, metadata !9048, metadata !DIExpression()), !dbg !9049
  %3 = ptrtoint i32* %1 to i32, !dbg !9050
  %4 = and i32 %3, -2, !dbg !9050
  %5 = icmp eq i32 %4, 2, !dbg !9050
  br i1 %5, label %6, label %9, !dbg !9050

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9051
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !9051
  br label %9, !dbg !9052

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !9052
  ret i32 %10, !dbg !9053
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9054 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9056, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata i32* %1, metadata !9057, metadata !DIExpression()), !dbg !9058
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !9059
  ret i32 %3, !dbg !9060
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !9061 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9064, metadata !DIExpression()), !dbg !9066
  call void @llvm.dbg.value(metadata i32* %1, metadata !9065, metadata !DIExpression()), !dbg !9066
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9067, !srcloc !9069
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !9070
  ret i32 %3, !dbg !9071
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !9072 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9077, metadata !DIExpression()), !dbg !9081
  call void @llvm.dbg.value(metadata i32* %1, metadata !9078, metadata !DIExpression()), !dbg !9081
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !9082
  call void @llvm.dbg.value(metadata i32 %3, metadata !9079, metadata !DIExpression()), !dbg !9081
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !9083
  call void @llvm.dbg.value(metadata i32 %4, metadata !9080, metadata !DIExpression()), !dbg !9081
  %5 = icmp ne i32 %3, %4, !dbg !9084
  %6 = sext i1 %5 to i32, !dbg !9085
  ret i32 %6, !dbg !9086
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !9087 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9091, metadata !DIExpression()), !dbg !9095
  call void @llvm.dbg.value(metadata i32 %1, metadata !9092, metadata !DIExpression()), !dbg !9095
  call void @llvm.dbg.value(metadata i32 %2, metadata !9093, metadata !DIExpression()), !dbg !9095
  call void @llvm.dbg.value(metadata i32* %3, metadata !9094, metadata !DIExpression()), !dbg !9095
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !9096
  ret i32 %5, !dbg !9097
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !9098 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9100, metadata !DIExpression()), !dbg !9104
  call void @llvm.dbg.value(metadata i32 %1, metadata !9101, metadata !DIExpression()), !dbg !9104
  call void @llvm.dbg.value(metadata i32 %2, metadata !9102, metadata !DIExpression()), !dbg !9104
  call void @llvm.dbg.value(metadata i32* %3, metadata !9103, metadata !DIExpression()), !dbg !9104
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9105, !srcloc !9107
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !9108
  ret i32 %5, !dbg !9109
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !9110 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9112, metadata !DIExpression()), !dbg !9120
  call void @llvm.dbg.value(metadata i32 %1, metadata !9113, metadata !DIExpression()), !dbg !9120
  call void @llvm.dbg.value(metadata i32 %2, metadata !9114, metadata !DIExpression()), !dbg !9120
  call void @llvm.dbg.value(metadata i32* %3, metadata !9115, metadata !DIExpression()), !dbg !9120
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !9121
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !9123
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !9123
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !9123
  br i1 %11, label %33, label %12, !dbg !9123

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !9120
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !9120
  call void @llvm.dbg.value(metadata i8* %14, metadata !9118, metadata !DIExpression()), !dbg !9120
  call void @llvm.dbg.value(metadata i32 %13, metadata !9116, metadata !DIExpression()), !dbg !9120
  call void @llvm.dbg.value(metadata i32 %1, metadata !9117, metadata !DIExpression()), !dbg !9120
  br label %15, !dbg !9124

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !9126
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !9120
  call void @llvm.dbg.value(metadata i8* %17, metadata !9118, metadata !DIExpression()), !dbg !9120
  call void @llvm.dbg.value(metadata i32 %16, metadata !9117, metadata !DIExpression()), !dbg !9120
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9127
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9130
  call void @llvm.dbg.value(metadata i8* %19, metadata !9118, metadata !DIExpression()), !dbg !9120
  %20 = load i8, i8* %17, align 1, !dbg !9131
  %21 = zext i8 %20 to i32, !dbg !9132
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !9127
  %23 = icmp eq i32 %22, -1, !dbg !9133
  br i1 %23, label %30, label %24, !dbg !9134

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !9135
  call void @llvm.dbg.value(metadata i32 %25, metadata !9117, metadata !DIExpression()), !dbg !9120
  %26 = icmp eq i32 %25, 0, !dbg !9136
  br i1 %26, label %27, label %15, !dbg !9137, !llvm.loop !9138

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !9140
  call void @llvm.dbg.value(metadata i32 %28, metadata !9116, metadata !DIExpression()), !dbg !9120
  %29 = icmp eq i32 %28, 0, !dbg !9141
  br i1 %29, label %30, label %12, !dbg !9142, !llvm.loop !9143

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !9120
  call void @llvm.dbg.value(metadata i32 %31, metadata !9116, metadata !DIExpression()), !dbg !9120
  call void @llvm.dbg.label(metadata !9119), !dbg !9146
  %32 = sub i32 %2, %31, !dbg !9147
  br label %33, !dbg !9148

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !9120
  ret i32 %34, !dbg !9149
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9150 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9154, metadata !DIExpression()), !dbg !9155
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !9156
  %3 = icmp eq i32 %2, -1, !dbg !9158
  br i1 %3, label %8, label %4, !dbg !9159

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !9160
  %6 = icmp eq i32 %5, -1, !dbg !9161
  %7 = sext i1 %6 to i32, !dbg !9160
  br label %8, !dbg !9162

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9155
  ret i32 %9, !dbg !9163
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_zbus_timeout_remainder(%union.argument_value* noalias nocapture writeonly sret(%union.argument_value) align 8 %0, i64 noundef %1) local_unnamed_addr #1 !dbg !9164 {
  call void @llvm.dbg.value(metadata i64 %1, metadata !9172, metadata !DIExpression()), !dbg !9174
  %3 = tail call i64 @sys_clock_tick_get() #27, !dbg !9175
  call void @llvm.dbg.value(metadata i64 %3, metadata !9173, metadata !DIExpression()), !dbg !9174
  %4 = getelementptr inbounds %union.argument_value, %union.argument_value* %0, i32 0, i32 0, !dbg !9176
  %5 = sub i64 %1, %3, !dbg !9176
  store i64 %5, i64* %4, align 8, !dbg !9176
  ret void, !dbg !9177
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_pub(%struct.zbus_channel* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9178 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9328, metadata !DIExpression()), !dbg !9331
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9326, metadata !DIExpression()), !dbg !9331
  call void @llvm.dbg.value(metadata i8* %1, metadata !9327, metadata !DIExpression()), !dbg !9331
  %4 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %2) #27, !dbg !9332
  call void @llvm.dbg.value(metadata i64 %4, metadata !9330, metadata !DIExpression()), !dbg !9331
  %5 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 3, !dbg !9333
  %6 = load i1 (i8*, i32)*, i1 (i8*, i32)** %5, align 4, !dbg !9333
  %7 = icmp eq i1 (i8*, i32)* %6, null, !dbg !9335
  br i1 %7, label %13, label %8, !dbg !9336

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !9337
  %10 = load i16, i16* %9, align 4, !dbg !9337
  %11 = zext i16 %10 to i32, !dbg !9338
  %12 = tail call zeroext i1 %6(i8* noundef %1, i32 noundef %11) #27, !dbg !9339
  br i1 %12, label %13, label %28, !dbg !9340

13:                                               ; preds = %8, %3
  %14 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9341
  %15 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !9341
  %16 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %15, [1 x i64] %2) #26, !dbg !9342
  call void @llvm.dbg.value(metadata i32 %16, metadata !9329, metadata !DIExpression()), !dbg !9331
  %17 = icmp eq i32 %16, 0, !dbg !9343
  br i1 %17, label %18, label %28, !dbg !9345

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 2, !dbg !9346
  %20 = load i8*, i8** %19, align 4, !dbg !9346
  %21 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !9347
  %22 = load i16, i16* %21, align 4, !dbg !9347
  %23 = zext i16 %22 to i32, !dbg !9348
  %24 = tail call i8* @memcpy(i8* noundef %20, i8* noundef %1, i32 noundef %23) #27, !dbg !9349
  %25 = tail call fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef nonnull %0, i64 noundef %4) #26, !dbg !9350
  call void @llvm.dbg.value(metadata i32 %25, metadata !9329, metadata !DIExpression()), !dbg !9331
  %26 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !9351
  %27 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %26) #26, !dbg !9352
  br label %28, !dbg !9353

28:                                               ; preds = %13, %8, %18
  %29 = phi i32 [ %25, %18 ], [ -35, %8 ], [ %16, %13 ], !dbg !9331
  ret i32 %29, !dbg !9354
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !9355 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9360, metadata !DIExpression()), !dbg !9361
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9359, metadata !DIExpression()), !dbg !9361
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9362, !srcloc !9364
  %3 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) #27, !dbg !9365
  ret i32 %3, !dbg !9366
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef %0, i64 noundef %1) unnamed_addr #1 !dbg !9367 {
  %3 = alloca %struct.zbus_channel*, align 4
  %4 = alloca %union.argument_value, align 8
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9371, metadata !DIExpression()), !dbg !9379
  store %struct.zbus_channel* %0, %struct.zbus_channel** %3, align 4
  call void @llvm.dbg.value(metadata i64 %1, metadata !9372, metadata !DIExpression()), !dbg !9379
  call void @llvm.dbg.value(metadata i32 0, metadata !9373, metadata !DIExpression()), !dbg !9379
  %5 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 5, !dbg !9380
  %6 = load %struct.zbus_observer**, %struct.zbus_observer*** %5, align 4, !dbg !9380
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %6, metadata !9375, metadata !DIExpression()), !dbg !9381
  %7 = load %struct.zbus_observer*, %struct.zbus_observer** %6, align 4, !dbg !9382
  %8 = icmp eq %struct.zbus_observer* %7, null, !dbg !9384
  br i1 %8, label %31, label %16, !dbg !9385

9:                                                ; preds = %27
  %10 = load %struct.zbus_observer**, %struct.zbus_observer*** %5, align 4, !dbg !9386
  %11 = load %struct.zbus_observer*, %struct.zbus_observer** %10, align 4, !dbg !9387
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9371, metadata !DIExpression()), !dbg !9379
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %10, metadata !9377, metadata !DIExpression()), !dbg !9389
  call void @llvm.dbg.value(metadata i32 0, metadata !9373, metadata !DIExpression()), !dbg !9379
  %12 = icmp eq %struct.zbus_observer* %11, null, !dbg !9390
  br i1 %12, label %31, label %13, !dbg !9391

13:                                               ; preds = %9
  %14 = bitcast %struct.zbus_channel** %3 to i8*
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  br label %33, !dbg !9391

16:                                               ; preds = %2, %27
  %17 = phi %struct.zbus_observer* [ %29, %27 ], [ %7, %2 ]
  %18 = phi %struct.zbus_observer** [ %28, %27 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %18, metadata !9375, metadata !DIExpression()), !dbg !9381
  %19 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %17, i32 0, i32 0, !dbg !9392
  %20 = load i8, i8* %19, align 4, !dbg !9392, !range !7677
  %21 = icmp eq i8 %20, 0, !dbg !9392
  br i1 %21, label %27, label %22, !dbg !9395

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %17, i32 0, i32 2, !dbg !9396
  %24 = load void (%struct.zbus_channel*)*, void (%struct.zbus_channel*)** %23, align 4, !dbg !9396
  %25 = icmp eq void (%struct.zbus_channel*)* %24, null, !dbg !9397
  br i1 %25, label %27, label %26, !dbg !9398

26:                                               ; preds = %22
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9371, metadata !DIExpression()), !dbg !9379
  tail call void %24(%struct.zbus_channel* noundef %0) #27, !dbg !9399
  br label %27, !dbg !9401

27:                                               ; preds = %16, %22, %26
  %28 = getelementptr inbounds %struct.zbus_observer*, %struct.zbus_observer** %18, i32 1, !dbg !9402
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %28, metadata !9375, metadata !DIExpression()), !dbg !9381
  %29 = load %struct.zbus_observer*, %struct.zbus_observer** %28, align 4, !dbg !9382
  %30 = icmp eq %struct.zbus_observer* %29, null, !dbg !9384
  br i1 %30, label %9, label %16, !dbg !9385, !llvm.loop !9403

31:                                               ; preds = %51, %2, %9
  %32 = phi i32 [ 0, %9 ], [ 0, %2 ], [ %52, %51 ], !dbg !9379
  ret i32 %32, !dbg !9405

33:                                               ; preds = %13, %51
  %34 = phi %struct.zbus_observer* [ %11, %13 ], [ %54, %51 ]
  %35 = phi %struct.zbus_observer** [ %10, %13 ], [ %53, %51 ]
  %36 = phi i32 [ 0, %13 ], [ %52, %51 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %35, metadata !9377, metadata !DIExpression()), !dbg !9389
  call void @llvm.dbg.value(metadata i32 %36, metadata !9373, metadata !DIExpression()), !dbg !9379
  %37 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %34, i32 0, i32 0, !dbg !9406
  %38 = load i8, i8* %37, align 4, !dbg !9406, !range !7677
  %39 = icmp eq i8 %38, 0, !dbg !9406
  br i1 %39, label %51, label %40, !dbg !9409

40:                                               ; preds = %33
  %41 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %34, i32 0, i32 1, !dbg !9410
  %42 = load %struct.k_msgq*, %struct.k_msgq** %41, align 4, !dbg !9410
  %43 = icmp eq %struct.k_msgq* %42, null, !dbg !9411
  br i1 %43, label %51, label %44, !dbg !9412

44:                                               ; preds = %40
  call void @_zbus_timeout_remainder(%union.argument_value* nonnull sret(%union.argument_value) align 8 %4, i64 noundef %1) #26, !dbg !9413
  %45 = load i64, i64* %15, align 8, !dbg !9415
  %46 = insertvalue [1 x i64] poison, i64 %45, 0, !dbg !9415
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %3, metadata !9371, metadata !DIExpression(DW_OP_deref)), !dbg !9379
  %47 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %42, i8* noundef nonnull %14, [1 x i64] %46) #26, !dbg !9415
  call void @llvm.dbg.value(metadata i32 %47, metadata !9374, metadata !DIExpression()), !dbg !9379
  %48 = icmp eq i32 %47, 0, !dbg !9416
  br i1 %48, label %51, label %49, !dbg !9418

49:                                               ; preds = %44
  %50 = load %struct.zbus_observer*, %struct.zbus_observer** %35, align 4, !dbg !9419
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1.73, i32 0, i32 0), i32 noundef 69, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.74, i32 0, i32 0), %struct.zbus_observer* noundef %50, i32 noundef %47) #27, !dbg !9419
  call void @llvm.dbg.value(metadata i32 %47, metadata !9373, metadata !DIExpression()), !dbg !9379
  br label %51, !dbg !9425

51:                                               ; preds = %33, %40, %49, %44
  %52 = phi i32 [ %47, %49 ], [ %36, %44 ], [ %36, %40 ], [ %36, %33 ], !dbg !9379
  call void @llvm.dbg.value(metadata i32 %52, metadata !9373, metadata !DIExpression()), !dbg !9379
  %53 = getelementptr inbounds %struct.zbus_observer*, %struct.zbus_observer** %35, i32 1, !dbg !9426
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %53, metadata !9377, metadata !DIExpression()), !dbg !9389
  %54 = load %struct.zbus_observer*, %struct.zbus_observer** %53, align 4, !dbg !9387
  %55 = icmp eq %struct.zbus_observer* %54, null, !dbg !9390
  br i1 %55, label %31, label %33, !dbg !9391, !llvm.loop !9427
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !9429 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9433, metadata !DIExpression()), !dbg !9434
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9435, !srcloc !9437
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #27, !dbg !9438
  ret i32 %2, !dbg !9439
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9440 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9446, metadata !DIExpression()), !dbg !9447
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9444, metadata !DIExpression()), !dbg !9447
  call void @llvm.dbg.value(metadata i8* %1, metadata !9445, metadata !DIExpression()), !dbg !9447
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9448, !srcloc !9450
  %4 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #27, !dbg !9451
  ret i32 %4, !dbg !9452
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_read(%struct.zbus_channel* nocapture noundef readonly %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9453 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9459, metadata !DIExpression()), !dbg !9461
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9457, metadata !DIExpression()), !dbg !9461
  call void @llvm.dbg.value(metadata i8* %1, metadata !9458, metadata !DIExpression()), !dbg !9461
  %4 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9462
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9462
  %6 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %5, [1 x i64] %2) #26, !dbg !9463
  call void @llvm.dbg.value(metadata i32 %6, metadata !9460, metadata !DIExpression()), !dbg !9461
  %7 = icmp eq i32 %6, 0, !dbg !9464
  br i1 %7, label %8, label %17, !dbg !9466

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 2, !dbg !9467
  %10 = load i8*, i8** %9, align 4, !dbg !9467
  %11 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !9468
  %12 = load i16, i16* %11, align 4, !dbg !9468
  %13 = zext i16 %12 to i32, !dbg !9469
  %14 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %10, i32 noundef %13) #27, !dbg !9470
  %15 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9471
  %16 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %15) #26, !dbg !9472
  br label %17, !dbg !9473

17:                                               ; preds = %3, %8
  %18 = phi i32 [ %16, %8 ], [ %6, %3 ], !dbg !9461
  ret i32 %18, !dbg !9474
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_notify(%struct.zbus_channel* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9475 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9480, metadata !DIExpression()), !dbg !9483
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9479, metadata !DIExpression()), !dbg !9483
  %3 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %1) #27, !dbg !9484
  call void @llvm.dbg.value(metadata i64 %3, metadata !9482, metadata !DIExpression()), !dbg !9483
  %4 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9485
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9485
  %6 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %5, [1 x i64] %1) #26, !dbg !9486
  call void @llvm.dbg.value(metadata i32 %6, metadata !9481, metadata !DIExpression()), !dbg !9483
  %7 = icmp eq i32 %6, 0, !dbg !9487
  br i1 %7, label %8, label %12, !dbg !9489

8:                                                ; preds = %2
  %9 = tail call fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef nonnull %0, i64 noundef %3) #26, !dbg !9490
  call void @llvm.dbg.value(metadata i32 %9, metadata !9481, metadata !DIExpression()), !dbg !9483
  %10 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9491
  %11 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %10) #26, !dbg !9492
  br label %12, !dbg !9493

12:                                               ; preds = %2, %8
  %13 = phi i32 [ %9, %8 ], [ %6, %2 ], !dbg !9483
  ret i32 %13, !dbg !9494
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_claim(%struct.zbus_channel* nocapture noundef readonly %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9495 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9498, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9497, metadata !DIExpression()), !dbg !9500
  %3 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9501
  %4 = load %struct.k_mutex*, %struct.k_mutex** %3, align 4, !dbg !9501
  %5 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %4, [1 x i64] %1) #26, !dbg !9502
  call void @llvm.dbg.value(metadata i32 %5, metadata !9499, metadata !DIExpression()), !dbg !9500
  ret i32 %5, !dbg !9503
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_finish(%struct.zbus_channel* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9504 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9508, metadata !DIExpression()), !dbg !9510
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9511
  %3 = load %struct.k_mutex*, %struct.k_mutex** %2, align 4, !dbg !9511
  %4 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %3) #26, !dbg !9512
  call void @llvm.dbg.value(metadata i32 %4, metadata !9509, metadata !DIExpression()), !dbg !9510
  ret i32 %4, !dbg !9513
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_sub_wait(%struct.zbus_observer* nocapture noundef readonly %0, %struct.zbus_channel** noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9514 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9521, metadata !DIExpression()), !dbg !9522
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %0, metadata !9519, metadata !DIExpression()), !dbg !9522
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !9520, metadata !DIExpression()), !dbg !9522
  %4 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %0, i32 0, i32 1, !dbg !9523
  %5 = load %struct.k_msgq*, %struct.k_msgq** %4, align 4, !dbg !9523
  %6 = icmp eq %struct.k_msgq* %5, null, !dbg !9525
  br i1 %6, label %10, label %7, !dbg !9526

7:                                                ; preds = %3
  %8 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !9527
  %9 = tail call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %5, i8* noundef %8, [1 x i64] %2) #26, !dbg !9528
  br label %10, !dbg !9529

10:                                               ; preds = %3, %7
  %11 = phi i32 [ %9, %7 ], [ -22, %3 ], !dbg !9522
  ret i32 %11, !dbg !9530
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9531 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9537, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9535, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.value(metadata i8* %1, metadata !9536, metadata !DIExpression()), !dbg !9538
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9539, !srcloc !9541
  %4 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #27, !dbg !9542
  ret i32 %4, !dbg !9543
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9544 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9546, metadata !DIExpression()), !dbg !9547
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !9548
  ret void, !dbg !9549
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9550 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9554, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.value(metadata i32 %1, metadata !9555, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9556, metadata !DIExpression()), !dbg !9560
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9561
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9561
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9561
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9557, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.value(metadata i32 %0, metadata !9559, metadata !DIExpression()), !dbg !9560
  %7 = icmp slt i32 %0, %1, !dbg !9562
  br i1 %7, label %8, label %22, !dbg !9565

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9559, metadata !DIExpression()), !dbg !9560
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !9566
  %11 = icmp eq i32 %10, 0, !dbg !9566
  br i1 %11, label %19, label %12, !dbg !9569

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !9570
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9572
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9572
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9574
  br i1 %15, label %19, label %16, !dbg !9575

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9576
  %18 = load i8*, i8** %17, align 4, !dbg !9576
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !9577
  br label %19, !dbg !9578

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9579
  call void @llvm.dbg.value(metadata i32 %20, metadata !9559, metadata !DIExpression()), !dbg !9560
  %21 = icmp eq i32 %20, %1, !dbg !9562
  br i1 %21, label %22, label %8, !dbg !9565, !llvm.loop !9580

22:                                               ; preds = %19, %3
  ret void, !dbg !9582
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #17 !dbg !9583 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9585, metadata !DIExpression()), !dbg !9586
  %2 = shl nuw i32 1, %0, !dbg !9587
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !9590
  ret i32 %3, !dbg !9591
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #16 !dbg !9592 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9596, metadata !DIExpression()), !dbg !9597
  %2 = shl nuw i32 1, %0, !dbg !9598
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !9601
  ret void, !dbg !9602
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9606, metadata !DIExpression()), !dbg !9607
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9608
  ret void, !dbg !9609
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #17 !dbg !9610 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9612, metadata !DIExpression()), !dbg !9613
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9614
  %3 = and i32 %2, %0, !dbg !9614
  %4 = icmp eq i32 %3, %0, !dbg !9615
  %5 = zext i1 %4 to i32, !dbg !9615
  ret i32 %5, !dbg !9616
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9617 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9619, metadata !DIExpression()), !dbg !9620
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !9621
  ret void, !dbg !9622
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9623 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9625, metadata !DIExpression()), !dbg !9626
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !9627
  ret void, !dbg !9628
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9629 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9631, metadata !DIExpression()), !dbg !9632
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !9633
  ret void, !dbg !9634
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9635 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9637, metadata !DIExpression()), !dbg !9638
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !9639
  ret void, !dbg !9640
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9641 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9643, metadata !DIExpression()), !dbg !9644
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !9645
  ret void, !dbg !9646
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9647 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9649, metadata !DIExpression()), !dbg !9650
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !9651
  ret void, !dbg !9652
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9653 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9655, metadata !DIExpression()), !dbg !9656
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !9657
  ret void, !dbg !9658
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9659 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9661, metadata !DIExpression()), !dbg !9662
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !9663
  ret void, !dbg !9664
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9665 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9667, metadata !DIExpression()), !dbg !9668
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !9669
  ret void, !dbg !9670
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9671 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9673, metadata !DIExpression()), !dbg !9674
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !9675
  ret void, !dbg !9676
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9677 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9679, metadata !DIExpression()), !dbg !9680
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !9681
  ret i32 0, !dbg !9682
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !837 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !841, metadata !DIExpression()), !dbg !9683
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !9684
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !9686
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !9688
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !9690
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !9692
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !9694
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !9696
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #27, !dbg !9698
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #27, !dbg !9700
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #27, !dbg !9702
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #27, !dbg !9704
  ret void, !dbg !9706
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9707 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9709, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 0, metadata !9710, metadata !DIExpression()), !dbg !9711
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9712
  %3 = load i32, i32* %2, align 4, !dbg !9712
  call void @llvm.dbg.value(metadata i32 %3, metadata !9710, metadata !DIExpression()), !dbg !9711
  %4 = shl nuw i32 1, %0, !dbg !9713
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !9714
  tail call void @arch_irq_enable(i32 noundef %3) #27, !dbg !9715
  ret void, !dbg !9716
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9717 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9719, metadata !DIExpression()), !dbg !9720
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9721
  %3 = or i32 %2, %0, !dbg !9721
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9721
  ret void, !dbg !9722
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #16 !dbg !9723 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9725, metadata !DIExpression()), !dbg !9726
  %2 = icmp slt i32 %0, 32, !dbg !9727
  br i1 %2, label %3, label %5, !dbg !9729

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9730
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !9732
  br label %5, !dbg !9733

5:                                                ; preds = %1, %3
  ret void, !dbg !9734
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9735 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9737, metadata !DIExpression()), !dbg !9738
  %2 = xor i32 %0, -1, !dbg !9739
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9739
  %4 = and i32 %3, %2, !dbg !9739
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9739
  ret void, !dbg !9740
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !9741 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9745, metadata !DIExpression()), !dbg !9747
  call void @llvm.dbg.value(metadata i32 %1, metadata !9746, metadata !DIExpression()), !dbg !9747
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9748

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9749
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !9751
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !9752
  br label %11, !dbg !9753

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9754
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !9755
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !9756
  br label %11, !dbg !9757

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9758
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !9759
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !9760
  br label %11, !dbg !9761

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9762
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !9763
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !9764
  br label %11, !dbg !9765

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9766
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9767 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9769, metadata !DIExpression()), !dbg !9770
  %2 = xor i32 %0, -1, !dbg !9771
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9771
  %4 = and i32 %3, %2, !dbg !9771
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9771
  ret void, !dbg !9772
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9773 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9775, metadata !DIExpression()), !dbg !9776
  %2 = xor i32 %0, -1, !dbg !9777
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9777
  %4 = and i32 %3, %2, !dbg !9777
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9777
  ret void, !dbg !9778
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9779 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9781, metadata !DIExpression()), !dbg !9782
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9783
  %3 = or i32 %2, %0, !dbg !9783
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9783
  ret void, !dbg !9784
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9785 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9787, metadata !DIExpression()), !dbg !9788
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9789
  %3 = or i32 %2, %0, !dbg !9789
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9789
  ret void, !dbg !9790
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !9791 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9795, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9796, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata i8* %2, metadata !9797, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !9798, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9800, metadata !DIExpression()), !dbg !9801
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9802
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9802
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9804
  br i1 %6, label %7, label %9, !dbg !9805

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9806
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9807
  store i8* %2, i8** %8, align 4, !dbg !9808
  br label %9, !dbg !9809

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9801
  ret i32 %10, !dbg !9810
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #8 !dbg !9811 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9813, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !9814, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9815, metadata !DIExpression()), !dbg !9816
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9817
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9818
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9819
  store i8* null, i8** %3, align 4, !dbg !9820
  ret void, !dbg !9821
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !9822 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9824, metadata !DIExpression()), !dbg !9829
  call void @llvm.dbg.value(metadata i8* %1, metadata !9825, metadata !DIExpression()), !dbg !9829
  call void @llvm.dbg.value(metadata i8* %1, metadata !9826, metadata !DIExpression()), !dbg !9829
  %3 = bitcast i8* %1 to i32*, !dbg !9830
  %4 = load i32, i32* %3, align 4, !dbg !9830
  %5 = add i32 %4, -169, !dbg !9830
  %6 = icmp ult i32 %5, -121, !dbg !9830
  br i1 %6, label %15, label %7, !dbg !9832

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9833
  %9 = inttoptr i32 %8 to i32*, !dbg !9834
  call void @llvm.dbg.value(metadata i32* %9, metadata !9827, metadata !DIExpression()), !dbg !9829
  %10 = load volatile i32, i32* %9, align 4, !dbg !9835
  call void @llvm.dbg.value(metadata i32 %10, metadata !9828, metadata !DIExpression()), !dbg !9829
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9836
  %12 = bitcast i8* %11 to i32*, !dbg !9836
  %13 = load i32, i32* %12, align 4, !dbg !9836
  %14 = or i32 %13, %10, !dbg !9837
  call void @llvm.dbg.value(metadata i32 %14, metadata !9828, metadata !DIExpression()), !dbg !9829
  store volatile i32 %14, i32* %9, align 4, !dbg !9838
  br label %15, !dbg !9839

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9829
  ret i32 %16, !dbg !9840
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !9841 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9843, metadata !DIExpression()), !dbg !9848
  call void @llvm.dbg.value(metadata i8* %1, metadata !9844, metadata !DIExpression()), !dbg !9848
  call void @llvm.dbg.value(metadata i8* %1, metadata !9845, metadata !DIExpression()), !dbg !9848
  %3 = bitcast i8* %1 to i32*, !dbg !9849
  %4 = load i32, i32* %3, align 4, !dbg !9849
  %5 = add i32 %4, -169, !dbg !9849
  %6 = icmp ult i32 %5, -121, !dbg !9849
  br i1 %6, label %16, label %7, !dbg !9851

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9852
  %9 = inttoptr i32 %8 to i32*, !dbg !9853
  call void @llvm.dbg.value(metadata i32* %9, metadata !9846, metadata !DIExpression()), !dbg !9848
  %10 = load volatile i32, i32* %9, align 4, !dbg !9854
  call void @llvm.dbg.value(metadata i32 %10, metadata !9847, metadata !DIExpression()), !dbg !9848
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9855
  %12 = bitcast i8* %11 to i32*, !dbg !9855
  %13 = load i32, i32* %12, align 4, !dbg !9855
  %14 = xor i32 %13, -1, !dbg !9856
  %15 = and i32 %10, %14, !dbg !9857
  call void @llvm.dbg.value(metadata i32 %15, metadata !9847, metadata !DIExpression()), !dbg !9848
  store volatile i32 %15, i32* %9, align 4, !dbg !9858
  br label %16, !dbg !9859

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9848
  ret i32 %17, !dbg !9860
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !9861 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9863, metadata !DIExpression()), !dbg !9871
  call void @llvm.dbg.value(metadata i8* %1, metadata !9864, metadata !DIExpression()), !dbg !9871
  call void @llvm.dbg.value(metadata i32* %2, metadata !9865, metadata !DIExpression()), !dbg !9871
  call void @llvm.dbg.value(metadata i8* %1, metadata !9866, metadata !DIExpression()), !dbg !9871
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9872
  call void @llvm.dbg.value(metadata i32 %4, metadata !9867, metadata !DIExpression()), !dbg !9871
  call void @llvm.dbg.value(metadata i32 undef, metadata !9868, metadata !DIExpression()), !dbg !9871
  call void @llvm.dbg.value(metadata i32 undef, metadata !9869, metadata !DIExpression()), !dbg !9871
  call void @llvm.dbg.value(metadata i32 %4, metadata !9870, metadata !DIExpression()), !dbg !9871
  %5 = bitcast i8* %1 to i32*, !dbg !9873
  %6 = load i32, i32* %5, align 4, !dbg !9873
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !9874

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !9875
  call void @llvm.dbg.value(metadata i32 %8, metadata !9868, metadata !DIExpression()), !dbg !9871
  br label %19, !dbg !9876

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #26, !dbg !9878
  call void @llvm.dbg.value(metadata i32 %10, metadata !9869, metadata !DIExpression()), !dbg !9871
  br label %19, !dbg !9879

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #27, !dbg !9880
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 4) #26, !dbg !9881
  br label %19, !dbg !9882

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #27, !dbg !9883
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #26, !dbg !9884
  br label %19, !dbg !9885

17:                                               ; preds = %3
  br label %19, !dbg !9886

18:                                               ; preds = %3
  br label %19, !dbg !9887

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !9888
  br label %21, !dbg !9889

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !9871
  ret i32 %22, !dbg !9889
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #16 !dbg !9890 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9892, metadata !DIExpression()), !dbg !9900
  call void @llvm.dbg.value(metadata i8* %1, metadata !9893, metadata !DIExpression()), !dbg !9900
  call void @llvm.dbg.value(metadata i8* %2, metadata !9894, metadata !DIExpression()), !dbg !9900
  call void @llvm.dbg.value(metadata i8* %1, metadata !9895, metadata !DIExpression()), !dbg !9900
  %4 = bitcast i8* %1 to i32*, !dbg !9901
  %5 = load i32, i32* %4, align 4, !dbg !9901
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !9902
  call void @llvm.dbg.value(metadata i32 %6, metadata !9899, metadata !DIExpression()), !dbg !9900
  %7 = icmp slt i32 %6, 0, !dbg !9903
  br i1 %7, label %22, label %8, !dbg !9905

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9895, metadata !DIExpression()), !dbg !9900
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9906
  %10 = bitcast i8* %9 to i32*, !dbg !9906
  %11 = load i32, i32* %10, align 4, !dbg !9906
  %12 = lshr i32 %11, 16, !dbg !9906
  %13 = and i32 %12, 7, !dbg !9906
  %14 = lshr i32 %11, 8, !dbg !9907
  %15 = and i32 %14, 31, !dbg !9907
  %16 = shl i32 %13, %15, !dbg !9908
  call void @llvm.dbg.value(metadata i32 %16, metadata !9898, metadata !DIExpression()), !dbg !9900
  %17 = and i32 %11, 255, !dbg !9909
  %18 = or i32 %17, 1073887232, !dbg !9910
  %19 = inttoptr i32 %18 to i32*, !dbg !9911
  call void @llvm.dbg.value(metadata i32* %19, metadata !9896, metadata !DIExpression()), !dbg !9900
  %20 = load volatile i32, i32* %19, align 4, !dbg !9912
  call void @llvm.dbg.value(metadata i32 %20, metadata !9897, metadata !DIExpression()), !dbg !9900
  %21 = or i32 %16, %20, !dbg !9913
  call void @llvm.dbg.value(metadata i32 %21, metadata !9897, metadata !DIExpression()), !dbg !9900
  store volatile i32 %21, i32* %19, align 4, !dbg !9914
  br label %22, !dbg !9915

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !9900
  ret i32 %23, !dbg !9916
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #5 !dbg !9917 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9921, metadata !DIExpression()), !dbg !9923
  call void @llvm.dbg.value(metadata i32 0, metadata !9922, metadata !DIExpression()), !dbg !9923
  %2 = add i32 %0, -1, !dbg !9924
  %3 = icmp ult i32 %2, 6, !dbg !9924
  br i1 %3, label %4, label %7, !dbg !9924

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !9924
  %6 = load i32, i32* %5, align 4, !dbg !9924
  call void @llvm.dbg.value(metadata i32 %6, metadata !9922, metadata !DIExpression()), !dbg !9923
  br label %7, !dbg !9925

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !9923
  ret i32 %8, !dbg !9926
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !9927 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9931, metadata !DIExpression()), !dbg !9933
  call void @llvm.dbg.value(metadata i32 %1, metadata !9932, metadata !DIExpression()), !dbg !9933
  %3 = udiv i32 %0, %1, !dbg !9934
  ret i32 %3, !dbg !9935
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !9936 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9940, metadata !DIExpression()), !dbg !9944
  call void @llvm.dbg.value(metadata i32 16, metadata !9941, metadata !DIExpression()), !dbg !9944
  call void @llvm.dbg.value(metadata i32 336, metadata !9942, metadata !DIExpression()), !dbg !9944
  call void @llvm.dbg.value(metadata i32 %1, metadata !9943, metadata !DIExpression()), !dbg !9944
  %3 = mul i32 %0, 336, !dbg !9945
  %4 = shl nsw i32 %1, 4, !dbg !9946
  %5 = udiv i32 %3, %4, !dbg !9947
  ret i32 %5, !dbg !9948
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !9949 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !9951, metadata !DIExpression()), !dbg !9954
  tail call void @config_enable_default_clocks() #27, !dbg !9955
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !9956
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !9956
  %4 = lshr i32 %3, 4, !dbg !9956
  %5 = and i32 %4, 15, !dbg !9956
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !9956
  %7 = load i8, i8* %6, align 1, !dbg !9956
  %8 = zext i8 %7 to i32, !dbg !9956
  %9 = lshr i32 %2, %8, !dbg !9956
  call void @llvm.dbg.value(metadata i32 %9, metadata !9952, metadata !DIExpression()), !dbg !9954
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !9953, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !9954
  %10 = icmp ult i32 %9, 84000000, !dbg !9957
  br i1 %10, label %11, label %13, !dbg !9959

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !9960
  br label %13, !dbg !9962

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !9963
  tail call fastcc void @set_up_plls() #26, !dbg !9964
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !9965
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !9968
  br label %14, !dbg !9969

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !9970
  %16 = icmp eq i32 %15, 8, !dbg !9971
  br i1 %16, label %17, label %14, !dbg !9969, !llvm.loop !9972

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !9974
  br i1 %18, label %19, label %21, !dbg !9976

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !9977
  br label %21, !dbg !9979

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !9980
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !9981
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !9982
  ret i32 0, !dbg !9983
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #17 !dbg !9984 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9986
  %2 = and i32 %1, 240, !dbg !9986
  ret i32 %2, !dbg !9987
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #16 !dbg !9988 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !9989
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !9994
  br label %1, !dbg !9995

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !9996
  %3 = icmp eq i32 %2, 1, !dbg !9997
  br i1 %3, label %4, label %1, !dbg !9995, !llvm.loop !9998

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !10000
  br label %5, !dbg !10003

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !10004
  %7 = icmp eq i32 %6, 1, !dbg !10005
  br i1 %7, label %8, label %5, !dbg !10003, !llvm.loop !10006

8:                                                ; preds = %5
  ret void, !dbg !10008
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10009 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10010
  %2 = icmp eq i32 %1, 8, !dbg !10012
  br i1 %2, label %3, label %4, !dbg !10013

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !10014
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !10016
  br label %4, !dbg !10017

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !10018
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10019
  %6 = and i32 %5, -196609, !dbg !10019
  %7 = or i32 %6, 65536, !dbg !10019
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10019
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10020
  %9 = and i32 %8, -251658241, !dbg !10020
  %10 = or i32 %9, 117440512, !dbg !10020
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10020
  tail call void @config_pll_sysclock() #27, !dbg !10021
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !10022
  br label %11, !dbg !10023

11:                                               ; preds = %11, %4
  %12 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !10024
  %13 = icmp eq i32 %12, 1, !dbg !10025
  br i1 %13, label %14, label %11, !dbg !10023, !llvm.loop !10026

14:                                               ; preds = %11
  ret void, !dbg !10028
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #16 !dbg !10029 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10031, metadata !DIExpression()), !dbg !10032
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10033
  %2 = and i32 %1, -241, !dbg !10033
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10033
  ret void, !dbg !10034
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #16 !dbg !10035 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10037, metadata !DIExpression()), !dbg !10038
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10039
  %3 = and i32 %2, -4, !dbg !10039
  %4 = or i32 %3, %0, !dbg !10039
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10039
  ret void, !dbg !10040
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #17 !dbg !10041 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10042
  %2 = and i32 %1, 12, !dbg !10042
  ret i32 %2, !dbg !10043
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #16 !dbg !10044 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !10046, metadata !DIExpression()), !dbg !10047
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10048
  %2 = and i32 %1, -7169, !dbg !10048
  %3 = or i32 %2, 4096, !dbg !10048
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10048
  ret void, !dbg !10049
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #16 !dbg !10050 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10052, metadata !DIExpression()), !dbg !10053
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10054
  %2 = and i32 %1, -57345, !dbg !10054
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10054
  ret void, !dbg !10055
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #16 !dbg !10056 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10057
  %2 = icmp eq i32 %1, 1, !dbg !10059
  br i1 %2, label %7, label %3, !dbg !10060

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !10061
  br label %4, !dbg !10063

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10064
  %6 = icmp eq i32 %5, 1, !dbg !10065
  br i1 %6, label %7, label %4, !dbg !10063, !llvm.loop !10066

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !10068
  br label %8, !dbg !10069

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10070
  %10 = icmp eq i32 %9, 0, !dbg !10071
  br i1 %10, label %11, label %8, !dbg !10069, !llvm.loop !10072

11:                                               ; preds = %8
  ret void, !dbg !10074
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #16 !dbg !10075 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10076
  %2 = and i32 %1, -16777217, !dbg !10076
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10076
  ret void, !dbg !10077
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #16 !dbg !10078 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10079
  %2 = or i32 %1, 16777216, !dbg !10079
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10079
  ret void, !dbg !10080
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #17 !dbg !10081 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10082
  %2 = lshr i32 %1, 25, !dbg !10083
  %3 = and i32 %2, 1, !dbg !10083
  ret i32 %3, !dbg !10084
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #17 !dbg !10085 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10086
  %2 = lshr i32 %1, 1, !dbg !10087
  %3 = and i32 %2, 1, !dbg !10087
  ret i32 %3, !dbg !10088
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #16 !dbg !10089 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10090
  %2 = or i32 %1, 1, !dbg !10090
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10090
  ret void, !dbg !10091
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #16 !dbg !10092 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10093
  %2 = and i32 %1, -262145, !dbg !10093
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10093
  ret void, !dbg !10094
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #16 !dbg !10095 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10096
  %2 = or i32 %1, 65536, !dbg !10096
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10096
  ret void, !dbg !10097
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #17 !dbg !10098 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10099
  %2 = lshr i32 %1, 17, !dbg !10100
  %3 = and i32 %2, 1, !dbg !10100
  ret i32 %3, !dbg !10101
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #16 !dbg !10102 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10103
  %2 = or i32 %1, 1, !dbg !10103
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10103
  ret void, !dbg !10104
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #17 !dbg !10105 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10106
  %2 = lshr i32 %1, 1, !dbg !10107
  %3 = and i32 %2, 1, !dbg !10107
  ret i32 %3, !dbg !10108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #5 !dbg !10109 {
  ret i32 16000000, !dbg !10111
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #16 !dbg !10115 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !10116
  ret void, !dbg !10117
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #16 !dbg !10118 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10122, metadata !DIExpression()), !dbg !10126
  call void @llvm.dbg.value(metadata i32 16, metadata !10123, metadata !DIExpression()), !dbg !10126
  call void @llvm.dbg.value(metadata i32 336, metadata !10124, metadata !DIExpression()), !dbg !10126
  call void @llvm.dbg.value(metadata i32 65536, metadata !10125, metadata !DIExpression()), !dbg !10126
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10127
  %2 = and i32 %1, -4227072, !dbg !10127
  %3 = or i32 %2, 4215824, !dbg !10127
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10127
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10128
  %5 = and i32 %4, -196609, !dbg !10128
  %6 = or i32 %5, 65536, !dbg !10128
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10128
  ret void, !dbg !10129
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #20 !dbg !10130 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !10131
  ret void, !dbg !10132
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #20 !dbg !10133 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10136, metadata !DIExpression()), !dbg !10138
  %2 = bitcast i32* %1 to i8*, !dbg !10139
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10139
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10137, metadata !DIExpression()), !dbg !10140
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10141
  %4 = or i32 %3, 268435456, !dbg !10141
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10141
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10142
  %6 = and i32 %5, 268435456, !dbg !10142
  store volatile i32 %6, i32* %1, align 4, !dbg !10143
  %7 = load volatile i32, i32* %1, align 4, !dbg !10144
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10145
  ret void, !dbg !10145
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10146 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10148, metadata !DIExpression()), !dbg !10149
  %2 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !10150
  br i1 %2, label %3, label %4, !dbg !10152

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !10153
  br label %4, !dbg !10154

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10149
  ret i32 %5, !dbg !10155
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10156 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !10161, metadata !DIExpression()), !dbg !10162
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10163, !srcloc !10165
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !10166
  ret i1 %1, !dbg !10167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10168 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10169
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10170
  ret void, !dbg !10171
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10172 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10174, metadata !DIExpression()), !dbg !10175
  %2 = icmp eq i32 %0, 10, !dbg !10176
  br i1 %2, label %3, label %4, !dbg !10178

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !10179
  br label %4, !dbg !10181

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10182
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !10183
  ret i32 %0, !dbg !10184
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10185 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !10188, metadata !DIExpression()), !dbg !10190
  call void @llvm.dbg.value(metadata i8 %0, metadata !10189, metadata !DIExpression()), !dbg !10190
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10191, !srcloc !10193
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !10194
  ret void, !dbg !10195
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10196 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !10198, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.value(metadata i8 %0, metadata !10199, metadata !DIExpression()), !dbg !10201
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10202
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10200, metadata !DIExpression()), !dbg !10201
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10203
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10203
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_47, i8 noundef zeroext %0) #27, !dbg !10204
  ret void, !dbg !10205
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10206 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !10208, metadata !DIExpression()), !dbg !10209
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_47) #27, !dbg !10210
  ret i1 %1, !dbg !10211
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #5 !dbg !10212 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10259, metadata !DIExpression()), !dbg !10262
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10260, metadata !DIExpression()), !dbg !10262
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10261, metadata !DIExpression()), !dbg !10262
  ret void, !dbg !10263
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10264 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10266, metadata !DIExpression()), !dbg !10271
  call void @llvm.dbg.value(metadata i8 %1, metadata !10267, metadata !DIExpression()), !dbg !10271
  call void @llvm.dbg.value(metadata i32 %2, metadata !10268, metadata !DIExpression()), !dbg !10271
  %5 = bitcast i32* %4 to i8*, !dbg !10272
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !10272
  call void @llvm.dbg.value(metadata i32* %4, metadata !10270, metadata !DIExpression(DW_OP_deref)), !dbg !10271
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !10273
  call void @llvm.dbg.value(metadata i32 %6, metadata !10269, metadata !DIExpression()), !dbg !10271
  %7 = icmp eq i32 %6, 0, !dbg !10274
  br i1 %7, label %8, label %31, !dbg !10276

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !10269, metadata !DIExpression()), !dbg !10271
  %9 = and i32 %2, 131072, !dbg !10277
  %10 = icmp eq i32 %9, 0, !dbg !10279
  br i1 %10, label %28, label %11, !dbg !10280

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !10281
  %13 = icmp eq i32 %12, 0, !dbg !10284
  br i1 %13, label %18, label %14, !dbg !10285

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !10286
  %16 = shl nuw i32 1, %15, !dbg !10286
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !10288
  br label %25, !dbg !10289

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !10290
  %20 = icmp eq i32 %19, 0, !dbg !10292
  %21 = zext i8 %1 to i32, !dbg !10271
  br i1 %20, label %25, label %22, !dbg !10293

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !10294
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !10296
  br label %25, !dbg !10297

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !10298
  %27 = load i32, i32* %4, align 4, !dbg !10299
  call void @llvm.dbg.value(metadata i32 %30, metadata !10270, metadata !DIExpression()), !dbg !10271
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !10300
  br label %31, !dbg !10301

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !10298
  %30 = load i32, i32* %4, align 4, !dbg !10299
  call void @llvm.dbg.value(metadata i32 %30, metadata !10270, metadata !DIExpression()), !dbg !10271
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !10300
  call void @llvm.dbg.value(metadata i32 0, metadata !10269, metadata !DIExpression()), !dbg !10271
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !10302
  ret i32 %6, !dbg !10302
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #17 !dbg !10303 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10307, metadata !DIExpression()), !dbg !10312
  call void @llvm.dbg.value(metadata i32* %1, metadata !10308, metadata !DIExpression()), !dbg !10312
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10313
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10313
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10313
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10309, metadata !DIExpression()), !dbg !10312
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10314
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10314
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10314
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10311, metadata !DIExpression()), !dbg !10312
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !10315
  store i32 %9, i32* %1, align 4, !dbg !10316
  ret i32 0, !dbg !10317
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #16 !dbg !10318 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10320, metadata !DIExpression()), !dbg !10326
  call void @llvm.dbg.value(metadata i32 %1, metadata !10321, metadata !DIExpression()), !dbg !10326
  call void @llvm.dbg.value(metadata i32 %2, metadata !10322, metadata !DIExpression()), !dbg !10326
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10327
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !10327
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !10327
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !10323, metadata !DIExpression()), !dbg !10326
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !10328
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !10328
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !10328
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !10324, metadata !DIExpression()), !dbg !10326
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !10329
  call void @llvm.dbg.value(metadata i32 %10, metadata !10325, metadata !DIExpression()), !dbg !10326
  %11 = xor i32 %1, -1, !dbg !10330
  %12 = and i32 %10, %11, !dbg !10331
  %13 = and i32 %2, %1, !dbg !10332
  %14 = or i32 %12, %13, !dbg !10333
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !10334
  ret i32 0, !dbg !10335
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !10336 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10338, metadata !DIExpression()), !dbg !10342
  call void @llvm.dbg.value(metadata i32 %1, metadata !10339, metadata !DIExpression()), !dbg !10342
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10343
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10343
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10343
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10340, metadata !DIExpression()), !dbg !10342
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10344
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10344
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10344
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10341, metadata !DIExpression()), !dbg !10342
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !10345
  store volatile i32 %1, i32* %9, align 4, !dbg !10345
  ret i32 0, !dbg !10346
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !10347 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10349, metadata !DIExpression()), !dbg !10353
  call void @llvm.dbg.value(metadata i32 %1, metadata !10350, metadata !DIExpression()), !dbg !10353
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10354
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10354
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10354
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10351, metadata !DIExpression()), !dbg !10353
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10355
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10355
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10355
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10352, metadata !DIExpression()), !dbg !10353
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !10356
  ret i32 0, !dbg !10357
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !10358 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10360, metadata !DIExpression()), !dbg !10364
  call void @llvm.dbg.value(metadata i32 %1, metadata !10361, metadata !DIExpression()), !dbg !10364
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10365
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10365
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10365
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10362, metadata !DIExpression()), !dbg !10364
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10366
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10366
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10366
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10363, metadata !DIExpression()), !dbg !10364
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !10367
  %10 = load volatile i32, i32* %9, align 4, !dbg !10367
  %11 = xor i32 %10, %1, !dbg !10367
  store volatile i32 %11, i32* %9, align 4, !dbg !10367
  ret i32 0, !dbg !10368
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10369 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10371, metadata !DIExpression()), !dbg !10381
  call void @llvm.dbg.value(metadata i8 %1, metadata !10372, metadata !DIExpression()), !dbg !10381
  call void @llvm.dbg.value(metadata i32 %2, metadata !10373, metadata !DIExpression()), !dbg !10381
  call void @llvm.dbg.value(metadata i32 %3, metadata !10374, metadata !DIExpression()), !dbg !10381
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10382
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10382
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10382
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10375, metadata !DIExpression()), !dbg !10381
  call void @llvm.dbg.value(metadata i8* undef, metadata !10376, metadata !DIExpression()), !dbg !10381
  call void @llvm.dbg.value(metadata i32 0, metadata !10378, metadata !DIExpression()), !dbg !10381
  call void @llvm.dbg.value(metadata i32 0, metadata !10379, metadata !DIExpression()), !dbg !10381
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !10383

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !10384
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !10388
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10389
  %12 = load i32, i32* %11, align 4, !dbg !10389
  %13 = icmp eq i32 %10, %12, !dbg !10390
  br i1 %13, label %14, label %29, !dbg !10391

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !10392
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !10394
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !10395
  br label %29, !dbg !10396

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10397
  %17 = load i8*, i8** %16, align 4, !dbg !10397
  call void @llvm.dbg.value(metadata i8* %17, metadata !10376, metadata !DIExpression()), !dbg !10381
  %18 = zext i8 %1 to i32, !dbg !10398
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !10400
  %20 = icmp eq i32 %19, 0, !dbg !10401
  br i1 %20, label %21, label %29, !dbg !10402

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10403
  %23 = load i32, i32* %22, align 4, !dbg !10403
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !10404
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10405

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !10378, metadata !DIExpression()), !dbg !10381
  br label %27, !dbg !10406

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !10378, metadata !DIExpression()), !dbg !10381
  br label %27, !dbg !10408

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !10378, metadata !DIExpression()), !dbg !10381
  br label %27, !dbg !10409

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !10381
  call void @llvm.dbg.value(metadata i32 %28, metadata !10378, metadata !DIExpression()), !dbg !10381
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !10410
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !10411
  br label %29, !dbg !10411

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !10381
  call void @llvm.dbg.value(metadata i32 %30, metadata !10379, metadata !DIExpression()), !dbg !10381
  call void @llvm.dbg.label(metadata !10380), !dbg !10412
  ret i32 %30, !dbg !10413
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #15 !dbg !10414 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10416, metadata !DIExpression()), !dbg !10420
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10417, metadata !DIExpression()), !dbg !10420
  call void @llvm.dbg.value(metadata i1 %2, metadata !10418, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10420
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10421
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10421
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10421
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10419, metadata !DIExpression()), !dbg !10420
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10422
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !10423
  ret i32 %8, !dbg !10424
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #15 !dbg !10425 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10431, metadata !DIExpression()), !dbg !10434
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10432, metadata !DIExpression()), !dbg !10434
  call void @llvm.dbg.value(metadata i1 %2, metadata !10433, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10434
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !10435
  br i1 %4, label %10, label %5, !dbg !10437

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10438
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !10441
  %8 = or i1 %7, %2, !dbg !10442
  %9 = select i1 %8, i32 0, i32 -22, !dbg !10442
  br i1 %2, label %11, label %13, !dbg !10442

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !10443

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10444
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !10447
  br label %13, !dbg !10448

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !10434
  ret i32 %14, !dbg !10449
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10450 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10454, metadata !DIExpression()), !dbg !10455
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10456
  %3 = icmp eq %struct._snode* %2, null, !dbg !10456
  ret i1 %3, !dbg !10456
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #15 !dbg !10457 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10461, metadata !DIExpression()), !dbg !10465
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10462, metadata !DIExpression()), !dbg !10465
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10463, metadata !DIExpression()), !dbg !10465
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10466
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10464, metadata !DIExpression()), !dbg !10465
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10463, metadata !DIExpression()), !dbg !10465
  %4 = icmp eq %struct._snode* %3, null, !dbg !10468
  br i1 %4, label %15, label %5, !dbg !10466

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10464, metadata !DIExpression()), !dbg !10465
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10463, metadata !DIExpression()), !dbg !10465
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10470
  br i1 %6, label %9, label %11, !dbg !10473

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10464, metadata !DIExpression()), !dbg !10465
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10463, metadata !DIExpression()), !dbg !10465
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10470
  br i1 %8, label %9, label %11, !dbg !10473, !llvm.loop !10474

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !10475
  br label %15, !dbg !10475

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10464, metadata !DIExpression()), !dbg !10465
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10463, metadata !DIExpression()), !dbg !10465
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !10468
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10464, metadata !DIExpression()), !dbg !10465
  %14 = icmp eq %struct._snode* %13, null, !dbg !10468
  br i1 %14, label %15, label %7, !dbg !10466, !llvm.loop !10474

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10477
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10478 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10482, metadata !DIExpression()), !dbg !10484
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10483, metadata !DIExpression()), !dbg !10484
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10485
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !10485
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !10485
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10486
  %5 = icmp eq %struct._snode* %4, null, !dbg !10486
  br i1 %5, label %6, label %8, !dbg !10485

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10488
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !10488
  br label %8, !dbg !10488

8:                                                ; preds = %6, %2
  ret void, !dbg !10485
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10490 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10494, metadata !DIExpression()), !dbg !10495
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10496
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10496
  ret %struct._snode* %3, !dbg !10497
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !10498 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10502, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10503, metadata !DIExpression()), !dbg !10504
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10505
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10506
  ret void, !dbg !10507
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !10508 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10510, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10511, metadata !DIExpression()), !dbg !10512
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10513
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10514
  ret void, !dbg !10515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10516 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10518, metadata !DIExpression()), !dbg !10519
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10520
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10520
  ret %struct._snode* %3, !dbg !10521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !10522 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10524, metadata !DIExpression()), !dbg !10526
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10525, metadata !DIExpression()), !dbg !10526
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10527
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10528
  ret void, !dbg !10529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !10530 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10534, metadata !DIExpression()), !dbg !10537
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10535, metadata !DIExpression()), !dbg !10537
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10536, metadata !DIExpression()), !dbg !10537
  %4 = icmp eq %struct._snode* %1, null, !dbg !10538
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !10540
  br i1 %4, label %6, label %11, !dbg !10541

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !10542
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10544
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10544
  br i1 %8, label %9, label %15, !dbg !10542

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10546
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !10546
  br label %15, !dbg !10546

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !10548
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10550
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10550
  br i1 %13, label %14, label %15, !dbg !10548

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !10552
  br label %15, !dbg !10552

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !10541
  ret void, !dbg !10541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #4 !dbg !10554 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10558, metadata !DIExpression()), !dbg !10559
  %2 = icmp eq %struct._snode* %0, null, !dbg !10560
  br i1 %2, label %5, label %3, !dbg !10560

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !10560
  br label %5, !dbg !10560

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10560
  ret %struct._snode* %6, !dbg !10560
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10561 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10563, metadata !DIExpression()), !dbg !10564
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !10565
  ret %struct._snode* %2, !dbg !10565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10566 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10568, metadata !DIExpression()), !dbg !10569
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10570
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10570
  ret %struct._snode* %3, !dbg !10571
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10572 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10574, metadata !DIExpression()), !dbg !10577
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !10578, !range !10579
  call void @llvm.dbg.value(metadata i32 %2, metadata !10575, metadata !DIExpression()), !dbg !10577
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !10580
  call void @llvm.dbg.value(metadata i32 %3, metadata !10576, metadata !DIExpression()), !dbg !10577
  ret i32 %3, !dbg !10581
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10582 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10584, metadata !DIExpression()), !dbg !10587
  call void @llvm.dbg.value(metadata i8* %1, metadata !10585, metadata !DIExpression()), !dbg !10587
  call void @llvm.dbg.value(metadata i8* %1, metadata !10586, metadata !DIExpression()), !dbg !10587
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10588
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10588
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10589
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10589
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10589
  %8 = shl nuw i32 1, %0, !dbg !10590
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !10591
  ret void, !dbg !10592
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10593 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10597, metadata !DIExpression()), !dbg !10603
  call void @llvm.dbg.value(metadata i32 %1, metadata !10598, metadata !DIExpression()), !dbg !10603
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10599, metadata !DIExpression()), !dbg !10603
  %4 = bitcast i64* %3 to i8*, !dbg !10604
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !10604
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10601, metadata !DIExpression()), !dbg !10603
  store i64 70368744177732, i64* %3, align 8, !dbg !10605
  call void @llvm.dbg.value(metadata i64* %3, metadata !10601, metadata !DIExpression(DW_OP_deref)), !dbg !10603
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !10606
  call void @llvm.dbg.value(metadata i32 %5, metadata !10602, metadata !DIExpression()), !dbg !10603
  %6 = icmp eq i32 %5, 0, !dbg !10607
  br i1 %6, label %7, label %8, !dbg !10609

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !10610
  br label %8, !dbg !10611

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !10612
  ret void, !dbg !10612
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10613 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10615, metadata !DIExpression()), !dbg !10618
  call void @llvm.dbg.value(metadata i8* %0, metadata !10616, metadata !DIExpression()), !dbg !10618
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10619
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10617, metadata !DIExpression()), !dbg !10618
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10620
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10620
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #27, !dbg !10621
  ret i32 %5, !dbg !10622
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10623 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10625, metadata !DIExpression()), !dbg !10628
  call void @llvm.dbg.value(metadata i32 %1, metadata !10626, metadata !DIExpression()), !dbg !10628
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !10629
  call void @llvm.dbg.value(metadata i32 %3, metadata !10627, metadata !DIExpression()), !dbg !10628
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !10630
  ret void, !dbg !10631
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #5 !dbg !10632 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10636, metadata !DIExpression()), !dbg !10637
  %2 = sdiv i32 %0, 4, !dbg !10638
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10639
  %6 = add nsw i32 %5, 16, !dbg !10640
  %7 = shl i32 15, %6, !dbg !10641
  %8 = or i32 %7, %2, !dbg !10642
  ret i32 %8, !dbg !10643
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10644 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10648, metadata !DIExpression()), !dbg !10650
  call void @llvm.dbg.value(metadata i32 %1, metadata !10649, metadata !DIExpression()), !dbg !10650
  %3 = and i32 %1, 255, !dbg !10651
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10651
  %5 = load volatile i32, i32* %4, align 4, !dbg !10651
  %6 = lshr i32 %1, 16, !dbg !10651
  %7 = xor i32 %6, -1, !dbg !10651
  %8 = and i32 %5, %7, !dbg !10651
  call void @llvm.dbg.value(metadata i32 %6, metadata !10652, metadata !DIExpression()) #25, !dbg !10656
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !10658, !srcloc !10659
  call void @llvm.dbg.value(metadata i32 %9, metadata !10655, metadata !DIExpression()) #25, !dbg !10656
  call void @llvm.dbg.value(metadata i32 %9, metadata !10660, metadata !DIExpression()) #25, !dbg !10665
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !10667, !range !5020
  %11 = shl i32 %0, %10, !dbg !10651
  %12 = or i32 %11, %8, !dbg !10651
  store volatile i32 %12, i32* %4, align 4, !dbg !10651
  ret void, !dbg !10668
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10669 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10673, metadata !DIExpression()), !dbg !10678
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10674, metadata !DIExpression()), !dbg !10678
  call void @llvm.dbg.value(metadata i32 %2, metadata !10675, metadata !DIExpression()), !dbg !10678
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10679
  %5 = icmp eq %struct._snode* %4, null, !dbg !10679
  br i1 %5, label %21, label %6, !dbg !10679

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !10681
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10677, metadata !DIExpression()), !dbg !10678
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10676, metadata !DIExpression()), !dbg !10678
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10682
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10682
  %11 = load i32, i32* %10, align 4, !dbg !10682
  %12 = and i32 %11, %2, !dbg !10686
  %13 = icmp eq i32 %12, 0, !dbg !10686
  br i1 %13, label %19, label %14, !dbg !10687

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10676, metadata !DIExpression()), !dbg !10678
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10688
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10688
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10688
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #27, !dbg !10690
  br label %19, !dbg !10691

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10676, metadata !DIExpression()), !dbg !10678
  %20 = icmp eq %struct._snode* %8, null, !dbg !10692
  br i1 %20, label %21, label %6, !dbg !10692

21:                                               ; preds = %19, %3
  ret void, !dbg !10693
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10694 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10696, metadata !DIExpression()), !dbg !10697
  %2 = and i32 %0, 255, !dbg !10698
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10698
  %4 = load volatile i32, i32* %3, align 4, !dbg !10698
  %5 = lshr i32 %0, 16, !dbg !10698
  %6 = and i32 %4, %5, !dbg !10698
  call void @llvm.dbg.value(metadata i32 %5, metadata !10652, metadata !DIExpression()) #25, !dbg !10699
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !10701, !srcloc !10659
  call void @llvm.dbg.value(metadata i32 %7, metadata !10655, metadata !DIExpression()) #25, !dbg !10699
  call void @llvm.dbg.value(metadata i32 %7, metadata !10660, metadata !DIExpression()) #25, !dbg !10702
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !10704, !range !5020
  %9 = lshr i32 %6, %8, !dbg !10705
  ret i32 %9, !dbg !10706
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !10707 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10712, metadata !DIExpression()), !dbg !10714
  call void @llvm.dbg.value(metadata i32 %1, metadata !10713, metadata !DIExpression()), !dbg !10714
  %3 = shl i32 %1, 16, !dbg !10715
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10715
  store volatile i32 %3, i32* %4, align 4, !dbg !10715
  ret void, !dbg !10716
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !10717 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10721, metadata !DIExpression()), !dbg !10722
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10723
  %3 = load volatile i32, i32* %2, align 4, !dbg !10723
  ret i32 %3, !dbg !10724
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !10725 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10727, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata i32 %1, metadata !10728, metadata !DIExpression()), !dbg !10729
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10730
  store volatile i32 %1, i32* %3, align 4, !dbg !10730
  ret void, !dbg !10731
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !10732 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10734, metadata !DIExpression()), !dbg !10735
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10736
  %3 = load volatile i32, i32* %2, align 4, !dbg !10736
  ret i32 %3, !dbg !10737
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !10738 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10742, metadata !DIExpression()), !dbg !10744
  call void @llvm.dbg.value(metadata i32* %1, metadata !10743, metadata !DIExpression()), !dbg !10744
  %3 = and i32 %0, 131072, !dbg !10745
  %4 = icmp eq i32 %3, 0, !dbg !10747
  br i1 %4, label %22, label %5, !dbg !10748

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10749
  %6 = and i32 %0, 2, !dbg !10751
  %7 = icmp eq i32 %6, 0, !dbg !10753
  br i1 %7, label %11, label %8, !dbg !10754

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10755
  %10 = icmp eq i32 %9, 0, !dbg !10755
  br i1 %10, label %33, label %11, !dbg !10758

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10759
  store i32 %12, i32* %1, align 4, !dbg !10759
  %13 = and i32 %0, 16, !dbg !10760
  %14 = icmp eq i32 %13, 0, !dbg !10762
  br i1 %14, label %17, label %15, !dbg !10763

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10764
  br label %31, !dbg !10766

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10767
  %19 = icmp eq i32 %18, 0, !dbg !10769
  br i1 %19, label %33, label %20, !dbg !10770

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10771
  br label %31, !dbg !10773

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10774
  %24 = icmp eq i32 %23, 0, !dbg !10776
  br i1 %24, label %31, label %25, !dbg !10777

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10778
  %27 = icmp eq i32 %26, 0, !dbg !10781
  br i1 %27, label %28, label %31, !dbg !10782

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10783
  br label %33, !dbg !10784

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10744
  ret i32 %34, !dbg !10784
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10785 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10789, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.value(metadata i32 %1, metadata !10790, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.value(metadata i32 %2, metadata !10791, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.value(metadata i32 %3, metadata !10792, metadata !DIExpression()), !dbg !10800
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10801
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10801
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10801
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10793, metadata !DIExpression()), !dbg !10800
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10802
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10802
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10802
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10794, metadata !DIExpression()), !dbg !10800
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !10803
  call void @llvm.dbg.value(metadata i32 %11, metadata !10795, metadata !DIExpression()), !dbg !10800
  %12 = and i32 %2, 48, !dbg !10804
  call void @llvm.dbg.value(metadata i32 %12, metadata !10796, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.value(metadata i32 %2, metadata !10797, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10800
  call void @llvm.dbg.value(metadata i32 %2, metadata !10798, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10800
  call void @llvm.dbg.value(metadata i32 %2, metadata !10799, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10800
  %13 = lshr i32 %2, 6, !dbg !10805
  %14 = and i32 %13, 1, !dbg !10805
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !10806
  %15 = lshr i32 %2, 7, !dbg !10807
  %16 = and i32 %15, 3, !dbg !10807
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !10808
  %17 = lshr i32 %2, 9, !dbg !10809
  %18 = and i32 %17, 3, !dbg !10809
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !10810
  %19 = icmp eq i32 %12, 32, !dbg !10811
  br i1 %19, label %20, label %24, !dbg !10813

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10814
  br i1 %21, label %22, label %23, !dbg !10817

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10818
  br label %24, !dbg !10820

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10821
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10823
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !10824
  ret void, !dbg !10825
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #5 !dbg !10826 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10828, metadata !DIExpression()), !dbg !10830
  %2 = shl nuw i32 1, %0, !dbg !10831
  call void @llvm.dbg.value(metadata i32 %2, metadata !10829, metadata !DIExpression()), !dbg !10830
  ret i32 %2, !dbg !10832
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !10833 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10837, metadata !DIExpression()), !dbg !10840
  call void @llvm.dbg.value(metadata i32 %1, metadata !10838, metadata !DIExpression()), !dbg !10840
  call void @llvm.dbg.value(metadata i32 %2, metadata !10839, metadata !DIExpression()), !dbg !10840
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10841
  %5 = load volatile i32, i32* %4, align 4, !dbg !10841
  %6 = xor i32 %1, -1, !dbg !10841
  %7 = and i32 %5, %6, !dbg !10841
  %8 = mul i32 %2, %1, !dbg !10841
  %9 = or i32 %7, %8, !dbg !10841
  store volatile i32 %9, i32* %4, align 4, !dbg !10841
  ret void, !dbg !10842
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10843 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10845, metadata !DIExpression()), !dbg !10848
  call void @llvm.dbg.value(metadata i32 %1, metadata !10846, metadata !DIExpression()), !dbg !10848
  call void @llvm.dbg.value(metadata i32 %2, metadata !10847, metadata !DIExpression()), !dbg !10848
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10849
  %5 = load volatile i32, i32* %4, align 4, !dbg !10849
  call void @llvm.dbg.value(metadata i32 %1, metadata !10652, metadata !DIExpression()) #25, !dbg !10850
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !10852, !srcloc !10659
  call void @llvm.dbg.value(metadata i32 %6, metadata !10655, metadata !DIExpression()) #25, !dbg !10850
  call void @llvm.dbg.value(metadata i32 %6, metadata !10660, metadata !DIExpression()) #25, !dbg !10853
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !10855, !range !5020
  %8 = shl nuw nsw i32 %7, 1, !dbg !10849
  %9 = shl i32 3, %8, !dbg !10849
  %10 = xor i32 %9, -1, !dbg !10849
  %11 = and i32 %5, %10, !dbg !10849
  call void @llvm.dbg.value(metadata i32 %1, metadata !10652, metadata !DIExpression()) #25, !dbg !10856
  call void @llvm.dbg.value(metadata i32 %6, metadata !10655, metadata !DIExpression()) #25, !dbg !10856
  call void @llvm.dbg.value(metadata i32 %6, metadata !10660, metadata !DIExpression()) #25, !dbg !10858
  %12 = shl i32 %2, %8, !dbg !10849
  %13 = or i32 %11, %12, !dbg !10849
  store volatile i32 %13, i32* %4, align 4, !dbg !10849
  ret void, !dbg !10860
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10861 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10863, metadata !DIExpression()), !dbg !10866
  call void @llvm.dbg.value(metadata i32 %1, metadata !10864, metadata !DIExpression()), !dbg !10866
  call void @llvm.dbg.value(metadata i32 %2, metadata !10865, metadata !DIExpression()), !dbg !10866
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10867
  %5 = load volatile i32, i32* %4, align 4, !dbg !10867
  call void @llvm.dbg.value(metadata i32 %1, metadata !10652, metadata !DIExpression()) #25, !dbg !10868
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !10870, !srcloc !10659
  call void @llvm.dbg.value(metadata i32 %6, metadata !10655, metadata !DIExpression()) #25, !dbg !10868
  call void @llvm.dbg.value(metadata i32 %6, metadata !10660, metadata !DIExpression()) #25, !dbg !10871
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !10873, !range !5020
  %8 = shl nuw nsw i32 %7, 1, !dbg !10867
  %9 = shl i32 3, %8, !dbg !10867
  %10 = xor i32 %9, -1, !dbg !10867
  %11 = and i32 %5, %10, !dbg !10867
  call void @llvm.dbg.value(metadata i32 %1, metadata !10652, metadata !DIExpression()) #25, !dbg !10874
  call void @llvm.dbg.value(metadata i32 %6, metadata !10655, metadata !DIExpression()) #25, !dbg !10874
  call void @llvm.dbg.value(metadata i32 %6, metadata !10660, metadata !DIExpression()) #25, !dbg !10876
  %12 = shl i32 %2, %8, !dbg !10867
  %13 = or i32 %11, %12, !dbg !10867
  store volatile i32 %13, i32* %4, align 4, !dbg !10867
  ret void, !dbg !10878
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10879 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10881, metadata !DIExpression()), !dbg !10884
  call void @llvm.dbg.value(metadata i32 %1, metadata !10882, metadata !DIExpression()), !dbg !10884
  call void @llvm.dbg.value(metadata i32 %2, metadata !10883, metadata !DIExpression()), !dbg !10884
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10885
  %5 = load volatile i32, i32* %4, align 4, !dbg !10885
  call void @llvm.dbg.value(metadata i32 %1, metadata !10652, metadata !DIExpression()) #25, !dbg !10886
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !10888, !srcloc !10659
  call void @llvm.dbg.value(metadata i32 %6, metadata !10655, metadata !DIExpression()) #25, !dbg !10886
  call void @llvm.dbg.value(metadata i32 %6, metadata !10660, metadata !DIExpression()) #25, !dbg !10889
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !10891, !range !5020
  %8 = shl nuw nsw i32 %7, 2, !dbg !10885
  %9 = shl i32 15, %8, !dbg !10885
  %10 = xor i32 %9, -1, !dbg !10885
  %11 = and i32 %5, %10, !dbg !10885
  call void @llvm.dbg.value(metadata i32 %1, metadata !10652, metadata !DIExpression()) #25, !dbg !10892
  call void @llvm.dbg.value(metadata i32 %6, metadata !10655, metadata !DIExpression()) #25, !dbg !10892
  call void @llvm.dbg.value(metadata i32 %6, metadata !10660, metadata !DIExpression()) #25, !dbg !10894
  %12 = shl i32 %2, %8, !dbg !10885
  %13 = or i32 %11, %12, !dbg !10885
  store volatile i32 %13, i32* %4, align 4, !dbg !10885
  ret void, !dbg !10896
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10897 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10899, metadata !DIExpression()), !dbg !10902
  call void @llvm.dbg.value(metadata i32 %1, metadata !10900, metadata !DIExpression()), !dbg !10902
  call void @llvm.dbg.value(metadata i32 %2, metadata !10901, metadata !DIExpression()), !dbg !10902
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10903
  %5 = load volatile i32, i32* %4, align 4, !dbg !10903
  %6 = lshr i32 %1, 8, !dbg !10903
  call void @llvm.dbg.value(metadata i32 %6, metadata !10652, metadata !DIExpression()) #25, !dbg !10904
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !10906, !srcloc !10659
  call void @llvm.dbg.value(metadata i32 %7, metadata !10655, metadata !DIExpression()) #25, !dbg !10904
  call void @llvm.dbg.value(metadata i32 %7, metadata !10660, metadata !DIExpression()) #25, !dbg !10907
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !10909, !range !5020
  %9 = shl nuw nsw i32 %8, 2, !dbg !10903
  %10 = shl i32 15, %9, !dbg !10903
  %11 = xor i32 %10, -1, !dbg !10903
  %12 = and i32 %5, %11, !dbg !10903
  call void @llvm.dbg.value(metadata i32 %6, metadata !10652, metadata !DIExpression()) #25, !dbg !10910
  call void @llvm.dbg.value(metadata i32 %7, metadata !10655, metadata !DIExpression()) #25, !dbg !10910
  call void @llvm.dbg.value(metadata i32 %7, metadata !10660, metadata !DIExpression()) #25, !dbg !10912
  %13 = shl i32 %2, %9, !dbg !10903
  %14 = or i32 %12, %13, !dbg !10903
  store volatile i32 %14, i32* %4, align 4, !dbg !10903
  ret void, !dbg !10914
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10915 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10917, metadata !DIExpression()), !dbg !10920
  call void @llvm.dbg.value(metadata i32 %1, metadata !10918, metadata !DIExpression()), !dbg !10920
  call void @llvm.dbg.value(metadata i32 %2, metadata !10919, metadata !DIExpression()), !dbg !10920
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10921
  %5 = load volatile i32, i32* %4, align 4, !dbg !10921
  call void @llvm.dbg.value(metadata i32 %1, metadata !10652, metadata !DIExpression()) #25, !dbg !10922
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !10924, !srcloc !10659
  call void @llvm.dbg.value(metadata i32 %6, metadata !10655, metadata !DIExpression()) #25, !dbg !10922
  call void @llvm.dbg.value(metadata i32 %6, metadata !10660, metadata !DIExpression()) #25, !dbg !10925
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !10927, !range !5020
  %8 = shl nuw nsw i32 %7, 1, !dbg !10921
  %9 = shl i32 3, %8, !dbg !10921
  %10 = xor i32 %9, -1, !dbg !10921
  %11 = and i32 %5, %10, !dbg !10921
  call void @llvm.dbg.value(metadata i32 %1, metadata !10652, metadata !DIExpression()) #25, !dbg !10928
  call void @llvm.dbg.value(metadata i32 %6, metadata !10655, metadata !DIExpression()) #25, !dbg !10928
  call void @llvm.dbg.value(metadata i32 %6, metadata !10660, metadata !DIExpression()) #25, !dbg !10930
  %12 = shl i32 %2, %8, !dbg !10921
  %13 = or i32 %11, %12, !dbg !10921
  store volatile i32 %13, i32* %4, align 4, !dbg !10921
  ret void, !dbg !10932
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10933 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10935, metadata !DIExpression()), !dbg !10938
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10939
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10939
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10939
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10936, metadata !DIExpression()), !dbg !10938
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10940
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10941
  %6 = tail call fastcc zeroext i1 @device_is_ready.101() #26, !dbg !10942
  br i1 %6, label %7, label %11, !dbg !10944

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !10945
  call void @llvm.dbg.value(metadata i32 %8, metadata !10937, metadata !DIExpression()), !dbg !10938
  %9 = icmp slt i32 %8, 0, !dbg !10946
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10948
  br label %11, !dbg !10948

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10938
  ret i32 %12, !dbg !10949
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.101() unnamed_addr #1 !dbg !10950 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10954, metadata !DIExpression()), !dbg !10955
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10956, !srcloc !10958
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.102() #26, !dbg !10959
  ret i1 %1, !dbg !10960
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10961 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10965, metadata !DIExpression()), !dbg !10970
  call void @llvm.dbg.value(metadata i8 1, metadata !10966, metadata !DIExpression()), !dbg !10970
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !10967, metadata !DIExpression()), !dbg !10970
  call void @llvm.dbg.value(metadata i32 0, metadata !10968, metadata !DIExpression()), !dbg !10970
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10969, metadata !DIExpression()), !dbg !10970
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10971
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10971
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10971
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10967, metadata !DIExpression()), !dbg !10970
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10972
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10975
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !10976
  call void @llvm.dbg.value(metadata i32 %7, metadata !10968, metadata !DIExpression()), !dbg !10970
  call void @llvm.dbg.value(metadata i32 %7, metadata !10968, metadata !DIExpression()), !dbg !10970
  ret i32 %7, !dbg !10977
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.102() unnamed_addr #1 !dbg !10978 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10980, metadata !DIExpression()), !dbg !10981
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #27, !dbg !10982
  ret i1 %1, !dbg !10983
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10984 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10988, metadata !DIExpression()), !dbg !10996
  call void @llvm.dbg.value(metadata i32 %1, metadata !10989, metadata !DIExpression()), !dbg !10996
  call void @llvm.dbg.value(metadata i32 %2, metadata !10990, metadata !DIExpression()), !dbg !10996
  call void @llvm.dbg.value(metadata i32 %3, metadata !10991, metadata !DIExpression()), !dbg !10996
  call void @llvm.dbg.value(metadata i32 0, metadata !10992, metadata !DIExpression()), !dbg !10996
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !10997
  %5 = icmp eq i32 %3, 17, !dbg !10998
  br i1 %5, label %6, label %14, !dbg !10999

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !11000
  call void @llvm.dbg.value(metadata i32 %7, metadata !10993, metadata !DIExpression()), !dbg !11001
  %8 = icmp eq i32 %7, 0, !dbg !11002
  %9 = shl nuw i32 1, %1, !dbg !11004
  br i1 %8, label %12, label %10, !dbg !11005

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !11006
  br label %14, !dbg !11008

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !11009
  br label %14, !dbg !11012

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !11013
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #20 !dbg !11014 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11016, metadata !DIExpression()), !dbg !11020
  call void @llvm.dbg.value(metadata i8* %1, metadata !11017, metadata !DIExpression()), !dbg !11020
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11021
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11021
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11021
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11018, metadata !DIExpression()), !dbg !11020
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11022
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11022
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !11024
  %9 = icmp eq i32 %8, 0, !dbg !11024
  br i1 %9, label %12, label %10, !dbg !11025

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11026
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !11028
  br label %12, !dbg !11029

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11030
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !11032
  %15 = icmp eq i32 %14, 0, !dbg !11032
  br i1 %15, label %19, label %16, !dbg !11033

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11034
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !11035
  store i8 %18, i8* %1, align 1, !dbg !11036
  br label %19, !dbg !11037

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !11020
  ret i32 %20, !dbg !11038
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !11039 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11041, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i8 %1, metadata !11042, metadata !DIExpression()), !dbg !11045
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11046
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11046
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11046
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11043, metadata !DIExpression()), !dbg !11045
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !11047

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11048
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !11051
  %10 = icmp eq i32 %9, 0, !dbg !11051
  br i1 %10, label %18, label %11, !dbg !11052

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !11053, !srcloc !11060
  call void @llvm.dbg.value(metadata i32 undef, metadata !11056, metadata !DIExpression()) #25, !dbg !11061
  call void @llvm.dbg.value(metadata i32 undef, metadata !11057, metadata !DIExpression()) #25, !dbg !11061
  call void @llvm.dbg.value(metadata i32 undef, metadata !11044, metadata !DIExpression()), !dbg !11045
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11062
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !11064
  %15 = icmp eq i32 %14, 0, !dbg !11064
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !11053
  br i1 %15, label %17, label %19, !dbg !11065

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !11056, metadata !DIExpression()) #25, !dbg !11061
  call void @llvm.dbg.value(metadata i32 %16, metadata !11044, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 undef, metadata !11066, metadata !DIExpression()) #25, !dbg !11069
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !11071, !srcloc !11072
  br label %18, !dbg !11073

18:                                               ; preds = %17, %7
  br label %7, !dbg !11048, !llvm.loop !11074

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !11053
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11076
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !11077
  call void @llvm.dbg.value(metadata i32 %20, metadata !11066, metadata !DIExpression()) #25, !dbg !11078
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !11080, !srcloc !11072
  ret void, !dbg !11081
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #20 !dbg !11082 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11084, metadata !DIExpression()), !dbg !11087
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11088
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11088
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11088
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11085, metadata !DIExpression()), !dbg !11087
  call void @llvm.dbg.value(metadata i32 0, metadata !11086, metadata !DIExpression()), !dbg !11087
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11089
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11089
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !11091
  %8 = icmp ne i32 %7, 0, !dbg !11091
  %9 = zext i1 %8 to i32, !dbg !11092
  call void @llvm.dbg.value(metadata i32 %9, metadata !11086, metadata !DIExpression()), !dbg !11087
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11093
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !11095
  %12 = icmp eq i32 %11, 0, !dbg !11095
  %13 = or i32 %9, 2, !dbg !11096
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !11096
  call void @llvm.dbg.value(metadata i32 %14, metadata !11086, metadata !DIExpression()), !dbg !11087
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11097
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !11099
  %17 = icmp eq i32 %16, 0, !dbg !11099
  %18 = or i32 %14, 4, !dbg !11100
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !11100
  call void @llvm.dbg.value(metadata i32 %19, metadata !11086, metadata !DIExpression()), !dbg !11087
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11101
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !11103
  %22 = icmp eq i32 %21, 0, !dbg !11103
  %23 = or i32 %19, 8, !dbg !11104
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !11104
  call void @llvm.dbg.value(metadata i32 %24, metadata !11086, metadata !DIExpression()), !dbg !11087
  %25 = and i32 %24, 8, !dbg !11105
  %26 = icmp eq i32 %25, 0, !dbg !11105
  br i1 %26, label %29, label %27, !dbg !11107

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11108
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !11110
  br label %29, !dbg !11111

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !11112
  %31 = icmp eq i32 %30, 0, !dbg !11112
  br i1 %31, label %34, label %32, !dbg !11114

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11115
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !11117
  br label %34, !dbg !11118

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !11119
  %36 = icmp eq i32 %35, 0, !dbg !11119
  br i1 %36, label %39, label %37, !dbg !11121

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11122
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !11124
  br label %39, !dbg !11125

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !11126
  %41 = icmp eq i32 %40, 0, !dbg !11126
  br i1 %41, label %44, label %42, !dbg !11128

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11129
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !11131
  br label %44, !dbg !11132

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11133
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !11134
  ret i32 %24, !dbg !11135
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !11136 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11138, metadata !DIExpression()), !dbg !11147
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11139, metadata !DIExpression()), !dbg !11147
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11148
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11148
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11148
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11140, metadata !DIExpression()), !dbg !11147
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11149
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !11149
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !11149
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !11141, metadata !DIExpression()), !dbg !11147
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11150
  %10 = load i8, i8* %9, align 4, !dbg !11150
  %11 = zext i8 %10 to i32, !dbg !11151
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !11152
  call void @llvm.dbg.value(metadata i32 %12, metadata !11143, metadata !DIExpression()), !dbg !11147
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11153
  %14 = load i8, i8* %13, align 1, !dbg !11153
  %15 = zext i8 %14 to i32, !dbg !11154
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !11155
  call void @llvm.dbg.value(metadata i32 %16, metadata !11144, metadata !DIExpression()), !dbg !11147
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11156
  %18 = load i8, i8* %17, align 2, !dbg !11156
  %19 = zext i8 %18 to i32, !dbg !11157
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !11158
  call void @llvm.dbg.value(metadata i32 %20, metadata !11145, metadata !DIExpression()), !dbg !11147
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11159
  %22 = load i8, i8* %21, align 1, !dbg !11159
  %23 = zext i8 %22 to i32, !dbg !11160
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !11161
  call void @llvm.dbg.value(metadata i32 %24, metadata !11146, metadata !DIExpression()), !dbg !11147
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !11162

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !11164
  br i1 %26, label %69, label %27, !dbg !11166

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !11167

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !11168
  br i1 %29, label %65, label %30, !dbg !11168

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !11170
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !11147
  br i1 %31, label %38, label %34, !dbg !11172

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !11173
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !11173

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !11176
  br i1 %37, label %38, label %69, !dbg !11177

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11178
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !11179
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !11180
  %41 = icmp eq i32 %12, %40, !dbg !11182
  br i1 %41, label %43, label %42, !dbg !11183

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !11184
  br label %43, !dbg !11186

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !11187
  %45 = icmp eq i32 %16, %44, !dbg !11189
  br i1 %45, label %47, label %46, !dbg !11190

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !11191
  br label %47, !dbg !11193

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !11194
  %49 = icmp eq i32 %20, %48, !dbg !11196
  br i1 %49, label %51, label %50, !dbg !11197

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !11198
  br label %51, !dbg !11200

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !11201
  %53 = icmp eq i32 %24, %52, !dbg !11203
  br i1 %53, label %55, label %54, !dbg !11204

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !11205
  br label %55, !dbg !11207

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11208
  %57 = load i32, i32* %56, align 4, !dbg !11208
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !11210
  %59 = load i32, i32* %58, align 4, !dbg !11210
  %60 = icmp eq i32 %57, %59, !dbg !11211
  br i1 %60, label %63, label %61, !dbg !11212

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !11213
  %62 = load i32, i32* %56, align 4, !dbg !11215
  store i32 %62, i32* %58, align 4, !dbg !11216
  br label %63, !dbg !11217

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !11218
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !11219
  br label %69, !dbg !11220

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !11168
  %67 = and i8 %66, 1, !dbg !11168
  %68 = icmp eq i8 %67, 0, !dbg !11168
  br i1 %68, label %30, label %69, !dbg !11168

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !11147
  ret i32 %70, !dbg !11221
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !11222 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11224, metadata !DIExpression()), !dbg !11227
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11225, metadata !DIExpression()), !dbg !11227
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11228
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !11228
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !11228
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !11226, metadata !DIExpression()), !dbg !11227
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !11229
  %7 = load i32, i32* %6, align 4, !dbg !11229
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11230
  store i32 %7, i32* %8, align 4, !dbg !11231
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !11232, !range !11233
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !11234
  %11 = trunc i32 %10 to i8, !dbg !11234
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11235
  store i8 %11, i8* %12, align 4, !dbg !11236
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !11237, !range !11238
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !11239
  %15 = trunc i32 %14 to i8, !dbg !11239
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11240
  store i8 %15, i8* %16, align 1, !dbg !11241
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !11242
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !11243, !range !11233
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !11244
  %20 = trunc i32 %19 to i8, !dbg !11244
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11245
  store i8 %20, i8* %21, align 2, !dbg !11246
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !11247, !range !11248
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !11249
  %24 = trunc i32 %23 to i8, !dbg !11249
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11250
  store i8 %24, i8* %25, align 1, !dbg !11251
  ret i32 0, !dbg !11252
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11253 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11257, metadata !DIExpression()), !dbg !11259
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11260
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11260
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11260
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11258, metadata !DIExpression()), !dbg !11259
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11261
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11261
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !11262
  ret i32 %7, !dbg !11263
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #5 !dbg !11264 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11268, metadata !DIExpression()), !dbg !11269
  %2 = icmp eq i32 %0, 1024, !dbg !11270
  %3 = select i1 %2, i32 2, i32 0, !dbg !11270
  %4 = icmp eq i32 %0, 1536, !dbg !11270
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11270
  ret i32 %5, !dbg !11271
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11272 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11274, metadata !DIExpression()), !dbg !11276
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11277
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11277
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11277
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11275, metadata !DIExpression()), !dbg !11276
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11278
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11278
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !11279
  ret i32 %7, !dbg !11280
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !11281 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11285, metadata !DIExpression()), !dbg !11286
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11287
  %3 = icmp ult i32 %2, 4, !dbg !11287
  br i1 %3, label %4, label %7, !dbg !11287

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11287
  %6 = load i32, i32* %5, align 4, !dbg !11287
  br label %7, !dbg !11287

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11288
  ret i32 %8, !dbg !11290
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11291 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11293, metadata !DIExpression()), !dbg !11295
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11296
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11296
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11296
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11294, metadata !DIExpression()), !dbg !11295
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11297
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11297
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !11298
  ret i32 %7, !dbg !11299
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11304, metadata !DIExpression()), !dbg !11306
  call void @llvm.dbg.value(metadata i32 %1, metadata !11305, metadata !DIExpression()), !dbg !11306
  %3 = icmp eq i32 %0, 4096, !dbg !11307
  %4 = icmp eq i32 %1, 0, !dbg !11307
  %5 = select i1 %4, i32 4, i32 3, !dbg !11307
  %6 = select i1 %4, i32 3, i32 2, !dbg !11307
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11307
  ret i32 %7, !dbg !11308
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11309 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11311, metadata !DIExpression()), !dbg !11313
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11314
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11314
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11314
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11312, metadata !DIExpression()), !dbg !11313
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11315
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11315
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !11316
  ret i32 %7, !dbg !11317
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11318 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11322, metadata !DIExpression()), !dbg !11323
  %2 = icmp eq i32 %0, 768, !dbg !11324
  %3 = zext i1 %2 to i32, !dbg !11323
  ret i32 %3, !dbg !11326
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11327 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11332, metadata !DIExpression()), !dbg !11333
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11334
  %3 = load volatile i32, i32* %2, align 4, !dbg !11334
  %4 = and i32 %3, 768, !dbg !11334
  ret i32 %4, !dbg !11335
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11336 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11338, metadata !DIExpression()), !dbg !11339
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11340
  %3 = load volatile i32, i32* %2, align 4, !dbg !11340
  %4 = and i32 %3, 4096, !dbg !11340
  ret i32 %4, !dbg !11341
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11342 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11344, metadata !DIExpression()), !dbg !11345
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11346
  %3 = load volatile i32, i32* %2, align 4, !dbg !11346
  %4 = and i32 %3, 12288, !dbg !11346
  ret i32 %4, !dbg !11347
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11348 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11350, metadata !DIExpression()), !dbg !11351
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11352
  %3 = load volatile i32, i32* %2, align 4, !dbg !11352
  %4 = and i32 %3, 1536, !dbg !11352
  ret i32 %4, !dbg !11353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #5 !dbg !11354 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11358, metadata !DIExpression()), !dbg !11359
  %2 = icmp eq i32 %0, 2, !dbg !11360
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11360
  %4 = icmp eq i32 %0, 1, !dbg !11360
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11360
  ret i32 %5, !dbg !11361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #5 !dbg !11362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11366, metadata !DIExpression()), !dbg !11367
  %2 = icmp ult i32 %0, 3, !dbg !11368
  br i1 %2, label %3, label %6, !dbg !11368

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11368
  %5 = load i32, i32* %4, align 4, !dbg !11368
  br label %6, !dbg !11368

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11369
  ret i32 %7, !dbg !11371
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11376, metadata !DIExpression()), !dbg !11378
  call void @llvm.dbg.value(metadata i32 %1, metadata !11377, metadata !DIExpression()), !dbg !11378
  %3 = icmp eq i32 %0, 4, !dbg !11379
  %4 = icmp eq i32 %1, 0, !dbg !11379
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11379
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11379
  ret i32 %6, !dbg !11380
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11381 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11385, metadata !DIExpression()), !dbg !11386
  %2 = icmp eq i32 %0, 1, !dbg !11387
  %3 = select i1 %2, i32 768, i32 0, !dbg !11386
  ret i32 %3, !dbg !11389
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11390 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11394, metadata !DIExpression()), !dbg !11395
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11396
  %3 = load volatile i32, i32* %2, align 4, !dbg !11396
  %4 = and i32 %3, -8193, !dbg !11396
  store volatile i32 %4, i32* %2, align 4, !dbg !11396
  ret void, !dbg !11397
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11398 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11402, metadata !DIExpression()), !dbg !11405
  call void @llvm.dbg.value(metadata i32 %1, metadata !11403, metadata !DIExpression()), !dbg !11405
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11406
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11406
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11406
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11404, metadata !DIExpression()), !dbg !11405
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11407
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11407
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11408
  ret void, !dbg !11409
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11410 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11412, metadata !DIExpression()), !dbg !11415
  call void @llvm.dbg.value(metadata i32 %1, metadata !11413, metadata !DIExpression()), !dbg !11415
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11416
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11416
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11416
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11414, metadata !DIExpression()), !dbg !11415
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11417
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11417
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11418
  ret void, !dbg !11419
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11420 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11422, metadata !DIExpression()), !dbg !11425
  call void @llvm.dbg.value(metadata i32 %1, metadata !11423, metadata !DIExpression()), !dbg !11425
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11426
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11426
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11426
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11424, metadata !DIExpression()), !dbg !11425
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11427
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11427
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11428
  ret void, !dbg !11429
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11430 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11432, metadata !DIExpression()), !dbg !11435
  call void @llvm.dbg.value(metadata i32 %1, metadata !11433, metadata !DIExpression()), !dbg !11435
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11436
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11436
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11436
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11434, metadata !DIExpression()), !dbg !11435
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11437
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11437
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11438
  ret void, !dbg !11439
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11440 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11442, metadata !DIExpression()), !dbg !11447
  call void @llvm.dbg.value(metadata i32 %1, metadata !11443, metadata !DIExpression()), !dbg !11447
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11448
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11448
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11448
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11444, metadata !DIExpression()), !dbg !11447
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11449
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11449
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11449
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11445, metadata !DIExpression()), !dbg !11447
  %10 = bitcast i32* %3 to i8*, !dbg !11450
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !11450
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11451
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11451
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11455
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11455
  %15 = load i8*, i8** %14, align 4, !dbg !11455
  call void @llvm.dbg.value(metadata i32* %3, metadata !11446, metadata !DIExpression(DW_OP_deref)), !dbg !11447
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !11456
  %17 = icmp slt i32 %16, 0, !dbg !11457
  br i1 %17, label %18, label %21, !dbg !11458

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.107(i32 noundef 1) #26, !dbg !11459
  %20 = zext i8 %19 to i32, !dbg !11459
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.108, i32 0, i32 0), i32 noundef %20) #27, !dbg !11459
  br label %26, !dbg !11465

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11466
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11466
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #26, !dbg !11467
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11468
  %25 = load i32, i32* %3, align 4, !dbg !11469
  call void @llvm.dbg.value(metadata i32 %25, metadata !11446, metadata !DIExpression()), !dbg !11447
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #26, !dbg !11470
  br label %26, !dbg !11471

26:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !11471
  ret void, !dbg !11471
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11472 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11474, metadata !DIExpression()), !dbg !11475
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11476
  %3 = load volatile i32, i32* %2, align 4, !dbg !11476
  %4 = or i32 %3, 8192, !dbg !11476
  store volatile i32 %4, i32* %2, align 4, !dbg !11476
  ret void, !dbg !11477
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11478 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11480, metadata !DIExpression()), !dbg !11484
  call void @llvm.dbg.value(metadata i8* %1, metadata !11481, metadata !DIExpression()), !dbg !11484
  call void @llvm.dbg.value(metadata i32* %2, metadata !11482, metadata !DIExpression()), !dbg !11484
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11485
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11485
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11485
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11483, metadata !DIExpression()), !dbg !11484
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11486
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11486
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11488
  br i1 %9, label %12, label %10, !dbg !11489

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !11490
  br label %12, !dbg !11491

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11484
  ret i32 %13, !dbg !11492
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.107(i32 noundef %0) unnamed_addr #5 !dbg !11493 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11495, metadata !DIExpression()), !dbg !11496
  %2 = icmp eq i32 %0, 2, !dbg !11497
  %3 = select i1 %2, i8 87, i8 63, !dbg !11497
  %4 = icmp eq i32 %0, 1, !dbg !11497
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11497
  ret i8 %5, !dbg !11498
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11499 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11503, metadata !DIExpression()), !dbg !11505
  call void @llvm.dbg.value(metadata i32 0, metadata !11504, metadata !DIExpression()), !dbg !11505
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11506
  %3 = load volatile i32, i32* %2, align 4, !dbg !11506
  %4 = and i32 %3, -32769, !dbg !11506
  store volatile i32 %4, i32* %2, align 4, !dbg !11506
  ret void, !dbg !11507
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !11508 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11512, metadata !DIExpression()), !dbg !11516
  call void @llvm.dbg.value(metadata i32 %1, metadata !11513, metadata !DIExpression()), !dbg !11516
  call void @llvm.dbg.value(metadata i32 0, metadata !11514, metadata !DIExpression()), !dbg !11516
  call void @llvm.dbg.value(metadata i32 %2, metadata !11515, metadata !DIExpression()), !dbg !11516
  %4 = zext i32 %1 to i64, !dbg !11517
  %5 = mul nuw nsw i64 %4, 25, !dbg !11517
  %6 = zext i32 %2 to i64, !dbg !11517
  %7 = shl nuw nsw i64 %6, 2, !dbg !11517
  %8 = udiv i64 %5, %7, !dbg !11517
  %9 = trunc i64 %8 to i32, !dbg !11517
  %10 = udiv i32 %9, 100, !dbg !11517
  %11 = shl nuw nsw i32 %10, 4, !dbg !11517
  %12 = mul i32 %10, -100, !dbg !11517
  %13 = add i32 %12, %9, !dbg !11517
  %14 = shl i32 %13, 4, !dbg !11517
  %15 = add i32 %14, 50, !dbg !11517
  %16 = udiv i32 %15, 100, !dbg !11517
  %17 = and i32 %16, 240, !dbg !11517
  %18 = add nuw nsw i32 %17, %11, !dbg !11517
  %19 = and i32 %16, 15, !dbg !11517
  %20 = and i32 %18, 65520, !dbg !11520
  %21 = or i32 %20, %19, !dbg !11520
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11521
  store volatile i32 %21, i32* %22, align 4, !dbg !11522
  ret void, !dbg !11523
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11524 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11526, metadata !DIExpression()), !dbg !11528
  call void @llvm.dbg.value(metadata i32 %1, metadata !11527, metadata !DIExpression()), !dbg !11528
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11529
  %4 = load volatile i32, i32* %3, align 4, !dbg !11529
  %5 = and i32 %4, -769, !dbg !11529
  %6 = or i32 %5, %1, !dbg !11529
  store volatile i32 %6, i32* %3, align 4, !dbg !11529
  ret void, !dbg !11530
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11531 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11533, metadata !DIExpression()), !dbg !11535
  call void @llvm.dbg.value(metadata i32 %1, metadata !11534, metadata !DIExpression()), !dbg !11535
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11536
  %4 = load volatile i32, i32* %3, align 4, !dbg !11536
  %5 = and i32 %4, -4097, !dbg !11536
  %6 = or i32 %5, %1, !dbg !11536
  store volatile i32 %6, i32* %3, align 4, !dbg !11536
  ret void, !dbg !11537
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11538 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11540, metadata !DIExpression()), !dbg !11542
  call void @llvm.dbg.value(metadata i32 %1, metadata !11541, metadata !DIExpression()), !dbg !11542
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11543
  %4 = load volatile i32, i32* %3, align 4, !dbg !11543
  %5 = and i32 %4, -12289, !dbg !11543
  %6 = or i32 %5, %1, !dbg !11543
  store volatile i32 %6, i32* %3, align 4, !dbg !11543
  ret void, !dbg !11544
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11545 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11547, metadata !DIExpression()), !dbg !11549
  call void @llvm.dbg.value(metadata i32 %1, metadata !11548, metadata !DIExpression()), !dbg !11549
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11550
  %4 = load volatile i32, i32* %3, align 4, !dbg !11550
  %5 = and i32 %4, -1537, !dbg !11550
  %6 = or i32 %5, %1, !dbg !11550
  store volatile i32 %6, i32* %3, align 4, !dbg !11550
  ret void, !dbg !11551
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11552 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11554, metadata !DIExpression()), !dbg !11555
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11556
  %3 = load volatile i32, i32* %2, align 4, !dbg !11556
  %4 = lshr i32 %3, 3, !dbg !11557
  %5 = and i32 %4, 1, !dbg !11557
  ret i32 %5, !dbg !11558
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11559 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11561, metadata !DIExpression()), !dbg !11562
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11563
  %3 = load volatile i32, i32* %2, align 4, !dbg !11563
  %4 = and i32 %3, 1, !dbg !11563
  ret i32 %4, !dbg !11564
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11565 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11567, metadata !DIExpression()), !dbg !11568
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11569
  %3 = load volatile i32, i32* %2, align 4, !dbg !11569
  %4 = lshr i32 %3, 1, !dbg !11570
  %5 = and i32 %4, 1, !dbg !11570
  ret i32 %5, !dbg !11571
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11572 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11574, metadata !DIExpression()), !dbg !11575
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11576
  %3 = load volatile i32, i32* %2, align 4, !dbg !11576
  %4 = lshr i32 %3, 8, !dbg !11577
  %5 = and i32 %4, 1, !dbg !11577
  ret i32 %5, !dbg !11578
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11579 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11581, metadata !DIExpression()), !dbg !11582
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11583
  store volatile i32 -257, i32* %2, align 4, !dbg !11583
  ret void, !dbg !11584
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !11585 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11587, metadata !DIExpression()), !dbg !11589
  %3 = bitcast i32* %2 to i8*, !dbg !11590
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11590
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11588, metadata !DIExpression()), !dbg !11591
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11592
  %5 = load volatile i32, i32* %4, align 4, !dbg !11592
  store volatile i32 %5, i32* %2, align 4, !dbg !11593
  %6 = load volatile i32, i32* %2, align 4, !dbg !11594
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11595
  %8 = load volatile i32, i32* %7, align 4, !dbg !11595
  store volatile i32 %8, i32* %2, align 4, !dbg !11596
  %9 = load volatile i32, i32* %2, align 4, !dbg !11597
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11598
  ret void, !dbg !11598
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !11599 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11601, metadata !DIExpression()), !dbg !11603
  %3 = bitcast i32* %2 to i8*, !dbg !11604
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11604
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11602, metadata !DIExpression()), !dbg !11605
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11606
  %5 = load volatile i32, i32* %4, align 4, !dbg !11606
  store volatile i32 %5, i32* %2, align 4, !dbg !11607
  %6 = load volatile i32, i32* %2, align 4, !dbg !11608
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11609
  %8 = load volatile i32, i32* %7, align 4, !dbg !11609
  store volatile i32 %8, i32* %2, align 4, !dbg !11610
  %9 = load volatile i32, i32* %2, align 4, !dbg !11611
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11612
  ret void, !dbg !11612
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !11613 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11615, metadata !DIExpression()), !dbg !11617
  %3 = bitcast i32* %2 to i8*, !dbg !11618
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11618
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11616, metadata !DIExpression()), !dbg !11619
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11620
  %5 = load volatile i32, i32* %4, align 4, !dbg !11620
  store volatile i32 %5, i32* %2, align 4, !dbg !11621
  %6 = load volatile i32, i32* %2, align 4, !dbg !11622
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11623
  %8 = load volatile i32, i32* %7, align 4, !dbg !11623
  store volatile i32 %8, i32* %2, align 4, !dbg !11624
  %9 = load volatile i32, i32* %2, align 4, !dbg !11625
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11626
  ret void, !dbg !11626
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !11627 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11629, metadata !DIExpression()), !dbg !11631
  %3 = bitcast i32* %2 to i8*, !dbg !11632
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11632
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11630, metadata !DIExpression()), !dbg !11633
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11634
  %5 = load volatile i32, i32* %4, align 4, !dbg !11634
  store volatile i32 %5, i32* %2, align 4, !dbg !11635
  %6 = load volatile i32, i32* %2, align 4, !dbg !11636
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11637
  %8 = load volatile i32, i32* %7, align 4, !dbg !11637
  store volatile i32 %8, i32* %2, align 4, !dbg !11638
  %9 = load volatile i32, i32* %2, align 4, !dbg !11639
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11640
  ret void, !dbg !11640
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11641 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11643, metadata !DIExpression()), !dbg !11644
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11645
  %3 = load volatile i32, i32* %2, align 4, !dbg !11645
  %4 = lshr i32 %3, 7, !dbg !11646
  %5 = and i32 %4, 1, !dbg !11646
  ret i32 %5, !dbg !11647
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !11648 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11652, metadata !DIExpression()), !dbg !11654
  call void @llvm.dbg.value(metadata i8 %1, metadata !11653, metadata !DIExpression()), !dbg !11654
  %3 = zext i8 %1 to i32, !dbg !11655
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11656
  store volatile i32 %3, i32* %4, align 4, !dbg !11657
  ret void, !dbg !11658
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11659 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11661, metadata !DIExpression()), !dbg !11662
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11663
  %3 = load volatile i32, i32* %2, align 4, !dbg !11663
  %4 = lshr i32 %3, 5, !dbg !11664
  %5 = and i32 %4, 1, !dbg !11664
  ret i32 %5, !dbg !11665
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11666 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11670, metadata !DIExpression()), !dbg !11671
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11672
  %3 = load volatile i32, i32* %2, align 4, !dbg !11672
  %4 = trunc i32 %3 to i8, !dbg !11673
  ret i8 %4, !dbg !11674
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11675 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11677, metadata !DIExpression()), !dbg !11683
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11684
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11684
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11684
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11678, metadata !DIExpression()), !dbg !11683
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11685
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11685
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11685
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11679, metadata !DIExpression()), !dbg !11683
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !11686
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11687
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11687
  %10 = tail call fastcc zeroext i1 @device_is_ready.112(%struct.device* noundef %9) #26, !dbg !11689
  br i1 %10, label %14, label %11, !dbg !11690

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.107(i32 noundef 1) #26, !dbg !11691
  %13 = zext i8 %12 to i32, !dbg !11691
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5.113, i32 0, i32 0), i32 noundef %13) #27, !dbg !11691
  br label %62, !dbg !11697

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11698
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11699
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11699
  %18 = load i8*, i8** %17, align 4, !dbg !11699
  %19 = tail call fastcc i32 @clock_control_on.114(%struct.device* noundef %15, i8* noundef %18) #26, !dbg !11700
  call void @llvm.dbg.value(metadata i32 %19, metadata !11682, metadata !DIExpression()), !dbg !11683
  %20 = icmp eq i32 %19, 0, !dbg !11701
  br i1 %20, label %24, label %21, !dbg !11703

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.107(i32 noundef 1) #26, !dbg !11704
  %23 = zext i8 %22 to i32, !dbg !11704
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6.115, i32 0, i32 0), i32 noundef %23) #27, !dbg !11704
  br label %62, !dbg !11710

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11711
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11711
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #26, !dbg !11712
  call void @llvm.dbg.value(metadata i32 %27, metadata !11682, metadata !DIExpression()), !dbg !11683
  %28 = icmp slt i32 %27, 0, !dbg !11713
  br i1 %28, label %62, label %29, !dbg !11715

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11716
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11716
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #26, !dbg !11717
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11718
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #26, !dbg !11719
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11720
  %34 = load i32, i32* %33, align 4, !dbg !11720
  %35 = icmp ult i32 %34, 3, !dbg !11722
  br i1 %35, label %39, label %36, !dbg !11722

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.107(i32 noundef 2) #26, !dbg !11723
  %38 = zext i8 %37 to i32, !dbg !11723
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7.116, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #27, !dbg !11723
  call void @llvm.dbg.value(metadata i32 0, metadata !11680, metadata !DIExpression()), !dbg !11683
  call void @llvm.dbg.value(metadata i32 0, metadata !11681, metadata !DIExpression()), !dbg !11683
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11722
  %41 = load i32, i32* %40, align 4, !dbg !11722
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.8, i32 0, i32 %34, !dbg !11722
  %43 = load i32, i32* %42, align 4, !dbg !11722
  br label %44, !dbg !11722

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11732
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11732
  call void @llvm.dbg.value(metadata i32 %46, metadata !11681, metadata !DIExpression()), !dbg !11683
  call void @llvm.dbg.value(metadata i32 %45, metadata !11680, metadata !DIExpression()), !dbg !11683
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11733
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #26, !dbg !11734
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11735
  %49 = load i8, i8* %48, align 4, !dbg !11735, !range !7677
  %50 = icmp eq i8 %49, 0, !dbg !11735
  br i1 %50, label %52, label %51, !dbg !11737

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !11738
  br label %52, !dbg !11740

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11741
  %54 = load i32, i32* %53, align 4, !dbg !11741
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #26, !dbg !11742
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11743
  %56 = load i8, i8* %55, align 4, !dbg !11743, !range !7677
  %57 = icmp eq i8 %56, 0, !dbg !11743
  br i1 %57, label %60, label %58, !dbg !11745

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11746
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #26, !dbg !11748
  br label %60, !dbg !11749

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11750
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #26, !dbg !11751
  br label %62, !dbg !11752

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11683
  ret i32 %63, !dbg !11753
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !11754 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11758, metadata !DIExpression()), !dbg !11762
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11763
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11763
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11763
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11759, metadata !DIExpression()), !dbg !11762
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11760, metadata !DIExpression()), !dbg !11762
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11764
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !11765
  ret void, !dbg !11766
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.112(%struct.device* noundef %0) unnamed_addr #1 !dbg !11767 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11771, metadata !DIExpression()), !dbg !11772
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !11773, !srcloc !11775
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.117(%struct.device* noundef %0) #26, !dbg !11776
  ret i1 %2, !dbg !11777
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.114(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11778 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11780, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i8* %1, metadata !11781, metadata !DIExpression()), !dbg !11783
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11784
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11784
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11784
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11782, metadata !DIExpression()), !dbg !11783
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11785
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11785
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !11786
  ret i32 %8, !dbg !11787
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11788 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11792, metadata !DIExpression()), !dbg !11796
  call void @llvm.dbg.value(metadata i8 0, metadata !11793, metadata !DIExpression()), !dbg !11796
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11797
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !11797
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11795, metadata !DIExpression(DW_OP_deref)), !dbg !11796
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !11798
  call void @llvm.dbg.value(metadata i32 %4, metadata !11794, metadata !DIExpression()), !dbg !11796
  %5 = icmp slt i32 %4, 0, !dbg !11799
  br i1 %5, label %9, label %6, !dbg !11801

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11802
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11795, metadata !DIExpression()), !dbg !11796
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !11803
  br label %9, !dbg !11804

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11796
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !11805
  ret i32 %10, !dbg !11805
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11806 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11808, metadata !DIExpression()), !dbg !11812
  call void @llvm.dbg.value(metadata i32 12, metadata !11809, metadata !DIExpression()), !dbg !11812
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11813

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11814, metadata !DIExpression()) #25, !dbg !11820
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !11823, !srcloc !11824
  call void @llvm.dbg.value(metadata i32 %4, metadata !11819, metadata !DIExpression()) #25, !dbg !11820
  %5 = or i32 %4, 12, !dbg !11825
  call void @llvm.dbg.value(metadata i32 %5, metadata !11810, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.value(metadata i32 %5, metadata !11827, metadata !DIExpression()) #25, !dbg !11834
  call void @llvm.dbg.value(metadata i32* %2, metadata !11832, metadata !DIExpression()) #25, !dbg !11834
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !11836, !srcloc !11837
  call void @llvm.dbg.value(metadata i32 %6, metadata !11833, metadata !DIExpression()) #25, !dbg !11834
  %7 = icmp eq i32 %6, 0, !dbg !11813
  br i1 %7, label %8, label %3, !dbg !11825, !llvm.loop !11838

8:                                                ; preds = %3
  ret void, !dbg !11839
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !11840 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11842, metadata !DIExpression()), !dbg !11846
  call void @llvm.dbg.value(metadata i32 %1, metadata !11843, metadata !DIExpression()), !dbg !11846
  call void @llvm.dbg.value(metadata i32 %2, metadata !11844, metadata !DIExpression()), !dbg !11846
  call void @llvm.dbg.value(metadata i32 0, metadata !11845, metadata !DIExpression()), !dbg !11846
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11847
  %5 = load volatile i32, i32* %4, align 4, !dbg !11847
  %6 = and i32 %5, -5633, !dbg !11847
  %7 = or i32 %2, %1, !dbg !11847
  %8 = or i32 %7, %6, !dbg !11847
  store volatile i32 %8, i32* %4, align 4, !dbg !11847
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11848
  %10 = load volatile i32, i32* %9, align 4, !dbg !11848
  %11 = and i32 %10, -12289, !dbg !11848
  store volatile i32 %11, i32* %9, align 4, !dbg !11848
  ret void, !dbg !11849
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11850 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11852, metadata !DIExpression()), !dbg !11853
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11854
  %3 = load volatile i32, i32* %2, align 4, !dbg !11854
  %4 = or i32 %3, 8, !dbg !11854
  store volatile i32 %4, i32* %2, align 4, !dbg !11854
  ret void, !dbg !11855
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11856 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11860, metadata !DIExpression()), !dbg !11863
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11861, metadata !DIExpression()), !dbg !11863
  call void @llvm.dbg.value(metadata i32 0, metadata !11862, metadata !DIExpression()), !dbg !11863
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11864
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11864
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11865
  %5 = load i8, i8* %4, align 4, !dbg !11865
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !11866
  ret i32 %6, !dbg !11867
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.117(%struct.device* noundef %0) unnamed_addr #1 !dbg !11868 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11870, metadata !DIExpression()), !dbg !11871
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !11872
  ret i1 %2, !dbg !11873
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #16 !dbg !11874 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11876, metadata !DIExpression()), !dbg !11877
  tail call fastcc void @__NVIC_SetPriority.119() #26, !dbg !11878
  store i32 8399, i32* @last_load, align 4, !dbg !11879
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11880
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11881
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11882
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11883
  %3 = or i32 %2, 7, !dbg !11883
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11883
  ret i32 0, !dbg !11884
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.119() unnamed_addr #16 !dbg !11885 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11887, metadata !DIExpression()), !dbg !11889
  call void @llvm.dbg.value(metadata i32 1, metadata !11888, metadata !DIExpression()), !dbg !11889
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11890
  ret void, !dbg !11893
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11894 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11896, metadata !DIExpression()), !dbg !11898
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !11899
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11900
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11901
  %5 = add i32 %4, %3, !dbg !11901
  store i32 %5, i32* @cycle_count, align 4, !dbg !11901
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11902
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11903
  %7 = sub i32 %5, %6, !dbg !11906
  %8 = udiv i32 %7, 8400, !dbg !11907
  call void @llvm.dbg.value(metadata i32 %8, metadata !11897, metadata !DIExpression()), !dbg !11898
  %9 = mul nuw i32 %8, 8400, !dbg !11908
  %10 = add i32 %9, %6, !dbg !11909
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11909
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !11910
  tail call void @z_arm_int_exit() #27, !dbg !11911
  ret void, !dbg !11912
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #16 !dbg !11913 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11918
  call void @llvm.dbg.value(metadata i32 %1, metadata !11915, metadata !DIExpression()), !dbg !11919
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11920
  call void @llvm.dbg.value(metadata i32 %2, metadata !11916, metadata !DIExpression()), !dbg !11919
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11921
  call void @llvm.dbg.value(metadata i32 %3, metadata !11917, metadata !DIExpression()), !dbg !11919
  %4 = and i32 %2, 65536, !dbg !11922
  %5 = icmp ne i32 %4, 0, !dbg !11922
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11924
  %8 = load i32, i32* @last_load, align 4, !dbg !11919
  br i1 %7, label %9, label %13, !dbg !11924

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11925
  %11 = add i32 %10, %8, !dbg !11925
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11925
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11927
  br label %13, !dbg !11928

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11929
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11930
  %16 = add i32 %14, %15, !dbg !11931
  ret i32 %16, !dbg !11932
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11933 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11937, metadata !DIExpression()), !dbg !11950
  call void @llvm.dbg.value(metadata i1 %1, metadata !11938, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11950
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11951
  br i1 %4, label %5, label %8, !dbg !11951

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11953
  %7 = and i32 %6, -2, !dbg !11953
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11953
  store i32 -16777216, i32* @last_load, align 4, !dbg !11955
  br label %54, !dbg !11956

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11957
  call void @llvm.dbg.value(metadata i32 %9, metadata !11942, metadata !DIExpression()), !dbg !11950
  br i1 %3, label %18, label %10, !dbg !11958

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11958
  call void @llvm.dbg.value(metadata i32 undef, metadata !11937, metadata !DIExpression()), !dbg !11950
  %12 = icmp slt i32 %11, 1, !dbg !11959
  br i1 %12, label %18, label %13, !dbg !11959

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !11959
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !11959
  %16 = mul nuw nsw i32 %15, 8400, !dbg !11959
  %17 = add nuw nsw i32 %16, 8399, !dbg !11959
  br label %18, !dbg !11959

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11937, metadata !DIExpression()), !dbg !11950
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11960, metadata !DIExpression()) #25, !dbg !11967
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !11969, !srcloc !11975
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !11969
  call void @llvm.dbg.value(metadata i32 %21, metadata !11972, metadata !DIExpression()) #25, !dbg !11976
  call void @llvm.dbg.value(metadata i32 undef, metadata !11973, metadata !DIExpression()) #25, !dbg !11976
  call void @llvm.dbg.value(metadata i32 %21, metadata !11966, metadata !DIExpression()) #25, !dbg !11967
  call void @llvm.dbg.value(metadata i32 %21, metadata !11943, metadata !DIExpression()), !dbg !11950
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !11977
  call void @llvm.dbg.value(metadata i32 %22, metadata !11948, metadata !DIExpression()), !dbg !11950
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11978
  call void @llvm.dbg.value(metadata i32 %23, metadata !11940, metadata !DIExpression()), !dbg !11950
  %24 = load i32, i32* @cycle_count, align 4, !dbg !11979
  %25 = add i32 %24, %22, !dbg !11979
  store i32 %25, i32* @cycle_count, align 4, !dbg !11979
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11980
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !11981
  %27 = sub i32 %25, %26, !dbg !11982
  call void @llvm.dbg.value(metadata i32 %27, metadata !11949, metadata !DIExpression()), !dbg !11950
  %28 = icmp slt i32 %27, 0, !dbg !11983
  br i1 %28, label %38, label %29, !dbg !11985

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !11939, metadata !DIExpression()), !dbg !11950
  call void @llvm.dbg.value(metadata i32 undef, metadata !11939, metadata !DIExpression()), !dbg !11950
  %30 = add nuw i32 %19, %27, !dbg !11986
  %31 = urem i32 %30, 8400, !dbg !11988
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !11939, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11950
  %32 = sub nuw nsw i32 %19, %31, !dbg !11989
  call void @llvm.dbg.value(metadata i32 %32, metadata !11939, metadata !DIExpression()), !dbg !11950
  %33 = icmp ugt i32 %32, 1024, !dbg !11990
  br i1 %33, label %34, label %36, !dbg !11990

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !11939, metadata !DIExpression()), !dbg !11950
  %35 = icmp ugt i32 %32, 16766400, !dbg !11991
  br i1 %35, label %38, label %36, !dbg !11993

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !11994
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11995
  call void @llvm.dbg.value(metadata i32 %40, metadata !11941, metadata !DIExpression()), !dbg !11950
  %41 = add nsw i32 %39, -1, !dbg !11996
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11997
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11998
  %42 = icmp ult i32 %23, %40, !dbg !11999
  br i1 %42, label %43, label %48, !dbg !12001

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !12002
  %45 = add i32 %23, %9, !dbg !12004
  %46 = sub i32 %45, %40, !dbg !12005
  %47 = add i32 %46, %44, !dbg !12002
  br label %52, !dbg !12006

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !12007
  %50 = load i32, i32* @cycle_count, align 4, !dbg !12009
  %51 = add i32 %49, %50, !dbg !12009
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !12010
  store i32 %53, i32* @cycle_count, align 4, !dbg !12010
  call void @llvm.dbg.value(metadata i32 %21, metadata !12011, metadata !DIExpression()) #25, !dbg !12017
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12016, metadata !DIExpression()) #25, !dbg !12017
  call void @llvm.dbg.value(metadata i32 %21, metadata !12019, metadata !DIExpression()) #25, !dbg !12022
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !12024, !srcloc !12025
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !12026
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !12027 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11960, metadata !DIExpression()) #25, !dbg !12031
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12033, !srcloc !11975
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12033
  call void @llvm.dbg.value(metadata i32 %2, metadata !11972, metadata !DIExpression()) #25, !dbg !12035
  call void @llvm.dbg.value(metadata i32 undef, metadata !11973, metadata !DIExpression()) #25, !dbg !12035
  call void @llvm.dbg.value(metadata i32 %2, metadata !11966, metadata !DIExpression()) #25, !dbg !12031
  call void @llvm.dbg.value(metadata i32 %2, metadata !12029, metadata !DIExpression()), !dbg !12036
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !12037
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12038
  %5 = add i32 %4, %3, !dbg !12039
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12040
  %7 = sub i32 %5, %6, !dbg !12041
  call void @llvm.dbg.value(metadata i32 %7, metadata !12030, metadata !DIExpression()), !dbg !12036
  call void @llvm.dbg.value(metadata i32 %2, metadata !12011, metadata !DIExpression()) #25, !dbg !12042
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12016, metadata !DIExpression()) #25, !dbg !12042
  call void @llvm.dbg.value(metadata i32 %2, metadata !12019, metadata !DIExpression()) #25, !dbg !12044
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !12046, !srcloc !12025
  %8 = udiv i32 %7, 8400, !dbg !12047
  ret i32 %8, !dbg !12048
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !12049 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11960, metadata !DIExpression()) #25, !dbg !12053
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12055, !srcloc !11975
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12055
  call void @llvm.dbg.value(metadata i32 %2, metadata !11972, metadata !DIExpression()) #25, !dbg !12057
  call void @llvm.dbg.value(metadata i32 undef, metadata !11973, metadata !DIExpression()) #25, !dbg !12057
  call void @llvm.dbg.value(metadata i32 %2, metadata !11966, metadata !DIExpression()) #25, !dbg !12053
  call void @llvm.dbg.value(metadata i32 %2, metadata !12051, metadata !DIExpression()), !dbg !12058
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !12059
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12060
  %5 = add i32 %4, %3, !dbg !12061
  call void @llvm.dbg.value(metadata i32 %5, metadata !12052, metadata !DIExpression()), !dbg !12058
  call void @llvm.dbg.value(metadata i32 %2, metadata !12011, metadata !DIExpression()) #25, !dbg !12062
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12016, metadata !DIExpression()) #25, !dbg !12062
  call void @llvm.dbg.value(metadata i32 %2, metadata !12019, metadata !DIExpression()) #25, !dbg !12064
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !12066, !srcloc !12025
  ret i32 %5, !dbg !12067
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #16 !dbg !12068 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12069
  %2 = icmp eq i32 %1, -16777216, !dbg !12071
  br i1 %2, label %3, label %6, !dbg !12072

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12073
  %5 = or i32 %4, 1, !dbg !12073
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12073
  br label %6, !dbg !12075

6:                                                ; preds = %3, %0
  ret void, !dbg !12076
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #16 !dbg !12077 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12078
  %2 = and i32 %1, -2, !dbg !12078
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12078
  ret void, !dbg !12079
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #15 !dbg !12080 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12106, metadata !DIExpression()), !dbg !12109
  call void @llvm.dbg.value(metadata i8 %1, metadata !12107, metadata !DIExpression()), !dbg !12109
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12108, metadata !DIExpression()), !dbg !12109
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12110
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12110
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12109
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12111
  %8 = load i8, i8* %6, align 4, !dbg !12112
  %9 = zext i8 %8 to i32, !dbg !12113
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12113
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12114
  br i1 %11, label %18, label %24, !dbg !12115

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12109
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12111
  %14 = load i8, i8* %6, align 4, !dbg !12112
  %15 = zext i8 %14 to i32, !dbg !12113
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12113
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12114
  br i1 %17, label %18, label %24, !dbg !12115, !llvm.loop !12116

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12118
  %21 = load i8, i8* %20, align 1, !dbg !12118
  %22 = icmp eq i8 %21, %1, !dbg !12121
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12122
  br i1 %22, label %24, label %12, !dbg !12123

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12109
  ret i32 %25, !dbg !12124
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12125 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12136, metadata !DIExpression()), !dbg !12152
  call void @llvm.dbg.value(metadata i8 %1, metadata !12137, metadata !DIExpression()), !dbg !12152
  call void @llvm.dbg.value(metadata i32 %2, metadata !12138, metadata !DIExpression()), !dbg !12152
  call void @llvm.dbg.value(metadata i32 0, metadata !12141, metadata !DIExpression()), !dbg !12152
  call void @llvm.dbg.value(metadata i32 0, metadata !12142, metadata !DIExpression()), !dbg !12152
  call void @llvm.dbg.value(metadata i8 0, metadata !12143, metadata !DIExpression()), !dbg !12153
  %4 = icmp eq i8 %1, 0, !dbg !12154
  br i1 %4, label %35, label %5, !dbg !12155

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12154
  br label %9, !dbg !12155

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12143, metadata !DIExpression()), !dbg !12153
  call void @llvm.dbg.value(metadata i32 %29, metadata !12141, metadata !DIExpression()), !dbg !12152
  %8 = icmp eq i32 %34, %6, !dbg !12154
  br i1 %8, label %35, label %9, !dbg !12155, !llvm.loop !12156

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12143, metadata !DIExpression()), !dbg !12153
  call void @llvm.dbg.value(metadata i32 %11, metadata !12141, metadata !DIExpression()), !dbg !12152
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !12158
  %13 = load i32, i32* %12, align 4, !dbg !12158
  call void @llvm.dbg.value(metadata i32 %13, metadata !12140, metadata !DIExpression()), !dbg !12152
  %14 = and i32 %13, 31, !dbg !12159
  %15 = icmp ult i32 %14, 16, !dbg !12160
  br i1 %15, label %16, label %20, !dbg !12161

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12162
  %18 = load i32, i32* %17, align 4, !dbg !12162
  %19 = or i32 %18, 32, !dbg !12164
  call void @llvm.dbg.value(metadata i32 %19, metadata !12141, metadata !DIExpression()), !dbg !12152
  br label %28, !dbg !12165

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12166

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12167
  %23 = load i32, i32* %22, align 4, !dbg !12167
  call void @llvm.dbg.value(metadata i32 %23, metadata !12145, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12168
  %24 = lshr i32 %23, 7, !dbg !12169
  %25 = and i32 %24, 16, !dbg !12169
  %26 = or i32 %25, %23, !dbg !12169
  call void @llvm.dbg.value(metadata i32 %26, metadata !12141, metadata !DIExpression()), !dbg !12152
  br label %28, !dbg !12170

27:                                               ; preds = %20
  br label %28, !dbg !12171

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !12152
  call void @llvm.dbg.value(metadata i32 %29, metadata !12141, metadata !DIExpression()), !dbg !12152
  %30 = lshr i32 %13, 5, !dbg !12171
  %31 = and i32 %30, 255, !dbg !12171
  call void @llvm.dbg.value(metadata i32 %31, metadata !12139, metadata !DIExpression()), !dbg !12152
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !12172
  call void @llvm.dbg.value(metadata i32 %32, metadata !12142, metadata !DIExpression()), !dbg !12152
  %33 = icmp slt i32 %32, 0, !dbg !12173
  %34 = add nuw nsw i32 %10, 1, !dbg !12175
  call void @llvm.dbg.value(metadata i32 %34, metadata !12143, metadata !DIExpression()), !dbg !12153
  br i1 %33, label %35, label %7, !dbg !12176

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12177
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12178 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12182, metadata !DIExpression()), !dbg !12186
  call void @llvm.dbg.value(metadata i32 %1, metadata !12183, metadata !DIExpression()), !dbg !12186
  call void @llvm.dbg.value(metadata i32 %2, metadata !12184, metadata !DIExpression()), !dbg !12186
  %4 = icmp ugt i32 %0, 175, !dbg !12187
  br i1 %4, label %16, label %5, !dbg !12189

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12190
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12191
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12191
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12185, metadata !DIExpression()), !dbg !12186
  %9 = add nsw i32 %6, -8, !dbg !12192
  %10 = icmp ult i32 %9, 3, !dbg !12192
  br i1 %10, label %16, label %11, !dbg !12194

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.124(%struct.device* noundef %8) #26, !dbg !12195
  br i1 %12, label %13, label %16, !dbg !12196

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !12197
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #27, !dbg !12198
  br label %16, !dbg !12199

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12186
  ret i32 %17, !dbg !12200
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.124(%struct.device* noundef %0) unnamed_addr #1 !dbg !12201 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12205, metadata !DIExpression()), !dbg !12206
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12207, !srcloc !12209
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.125(%struct.device* noundef %0) #26, !dbg !12210
  ret i1 %2, !dbg !12211
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.125(%struct.device* noundef %0) unnamed_addr #1 !dbg !12212 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12214, metadata !DIExpression()), !dbg !12215
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !12216
  ret i1 %2, !dbg !12217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #5 !dbg !12218 {
  ret void, !dbg !12219
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #17 !dbg !12220 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12222, metadata !DIExpression()), !dbg !12227
  call void @llvm.dbg.value(metadata i32 0, metadata !12223, metadata !DIExpression()), !dbg !12227
  call void @llvm.dbg.value(metadata i32 2, metadata !12224, metadata !DIExpression()), !dbg !12227
  call void @llvm.dbg.value(metadata i32 0, metadata !12225, metadata !DIExpression()), !dbg !12227
  call void @llvm.dbg.value(metadata i32 2, metadata !12226, metadata !DIExpression()), !dbg !12227
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12228
  %2 = and i32 %1, 12, !dbg !12229
  call void @llvm.dbg.value(metadata i32 %2, metadata !12222, metadata !DIExpression()), !dbg !12227
  %3 = icmp eq i32 %2, 8, !dbg !12230
  br i1 %3, label %4, label %18, !dbg !12230

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12231
  call void @llvm.dbg.value(metadata i32 %5, metadata !12225, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12227
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12233
  %7 = and i32 %6, 63, !dbg !12234
  call void @llvm.dbg.value(metadata i32 %7, metadata !12226, metadata !DIExpression()), !dbg !12227
  %8 = udiv i32 16000000, %7, !dbg !12235
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12235
  %10 = lshr i32 %9, 6, !dbg !12235
  %11 = and i32 %10, 511, !dbg !12235
  %12 = mul i32 %11, %8, !dbg !12235
  call void @llvm.dbg.value(metadata i32 %12, metadata !12223, metadata !DIExpression()), !dbg !12227
  call void @llvm.dbg.value(metadata i32 %12, metadata !12223, metadata !DIExpression()), !dbg !12227
  call void @llvm.dbg.value(metadata i32 %12, metadata !12223, metadata !DIExpression()), !dbg !12227
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12237
  %14 = lshr i32 %13, 15, !dbg !12238
  %15 = and i32 %14, 6, !dbg !12238
  %16 = add nuw nsw i32 %15, 2, !dbg !12238
  call void @llvm.dbg.value(metadata i32 %16, metadata !12224, metadata !DIExpression()), !dbg !12227
  %17 = udiv i32 %12, %16, !dbg !12239
  br label %18, !dbg !12240

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !12241
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12242
  %21 = lshr i32 %20, 4, !dbg !12243
  %22 = and i32 %21, 15, !dbg !12243
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !12244
  %24 = load i8, i8* %23, align 1, !dbg !12244
  %25 = zext i8 %24 to i32, !dbg !12244
  call void @llvm.dbg.value(metadata i32 %25, metadata !12222, metadata !DIExpression()), !dbg !12227
  %26 = lshr i32 %19, %25, !dbg !12245
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !12245
  ret void, !dbg !12246
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12247 {
  ret i32 0, !dbg !12252
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12253 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12279, metadata !DIExpression()), !dbg !12290
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12291
  br i1 %3, label %311, label %4, !dbg !12293

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12294
  %6 = load i32, i32* %5, align 4, !dbg !12294
  %7 = and i32 %6, 1, !dbg !12296
  %8 = icmp eq i32 %7, 0, !dbg !12297
  br i1 %8, label %66, label %9, !dbg !12298

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12299
  %11 = and i32 %10, 12, !dbg !12299
  %12 = icmp eq i32 %11, 4, !dbg !12302
  br i1 %12, label %21, label %13, !dbg !12303

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12304
  %15 = and i32 %14, 12, !dbg !12304
  %16 = icmp eq i32 %15, 8, !dbg !12305
  br i1 %16, label %17, label %29, !dbg !12306

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12307
  %19 = and i32 %18, 4194304, !dbg !12308
  %20 = icmp eq i32 %19, 0, !dbg !12309
  br i1 %20, label %29, label %21, !dbg !12310

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12311
  %23 = and i32 %22, 131072, !dbg !12311
  %24 = icmp eq i32 %23, 0, !dbg !12311
  br i1 %24, label %66, label %25, !dbg !12314

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12315
  %27 = load i32, i32* %26, align 4, !dbg !12315
  %28 = icmp eq i32 %27, 0, !dbg !12316
  br i1 %28, label %311, label %66, !dbg !12317

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12318
  %31 = load i32, i32* %30, align 4, !dbg !12318
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !12322

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12323
  %34 = or i32 %33, 65536, !dbg !12323
  br label %45, !dbg !12323

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12325
  %37 = or i32 %36, 262144, !dbg !12325
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12325
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12325
  %39 = or i32 %38, 65536, !dbg !12325
  br label %45, !dbg !12325

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12328
  %42 = and i32 %41, -65537, !dbg !12328
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12328
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12328
  %44 = and i32 %43, -262145, !dbg !12328
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12330
  %47 = load i32, i32* %30, align 4, !dbg !12331
  %48 = icmp eq i32 %47, 0, !dbg !12333
  %49 = tail call i32 @HAL_GetTick() #27, !dbg !12334
  call void @llvm.dbg.value(metadata i32 %49, metadata !12280, metadata !DIExpression()), !dbg !12290
  call void @llvm.dbg.value(metadata i32 %49, metadata !12280, metadata !DIExpression()), !dbg !12290
  br i1 %48, label %58, label %50, !dbg !12335

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12336
  %52 = and i32 %51, 131072, !dbg !12338
  %53 = icmp eq i32 %52, 0, !dbg !12338
  br i1 %53, label %54, label %66, !dbg !12339

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #27, !dbg !12340
  %56 = sub i32 %55, %49, !dbg !12343
  %57 = icmp ugt i32 %56, 100, !dbg !12344
  br i1 %57, label %311, label %50, !dbg !12345, !llvm.loop !12346

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12348
  %60 = and i32 %59, 131072, !dbg !12348
  %61 = icmp eq i32 %60, 0, !dbg !12348
  br i1 %61, label %66, label %62, !dbg !12350

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #27, !dbg !12351
  %64 = sub i32 %63, %49, !dbg !12354
  %65 = icmp ugt i32 %64, 100, !dbg !12355
  br i1 %65, label %311, label %58, !dbg !12356, !llvm.loop !12357

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !12359
  %68 = and i32 %67, 2, !dbg !12361
  %69 = icmp eq i32 %68, 0, !dbg !12362
  br i1 %69, label %121, label %70, !dbg !12363

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12364
  %72 = and i32 %71, 12, !dbg !12364
  %73 = icmp eq i32 %72, 0, !dbg !12367
  br i1 %73, label %82, label %74, !dbg !12368

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12369
  %76 = and i32 %75, 12, !dbg !12369
  %77 = icmp eq i32 %76, 8, !dbg !12370
  br i1 %77, label %78, label %90, !dbg !12371

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12372
  %80 = and i32 %79, 4194304, !dbg !12373
  %81 = icmp eq i32 %80, 0, !dbg !12374
  br i1 %81, label %82, label %90, !dbg !12375

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12376
  %84 = and i32 %83, 2, !dbg !12376
  %85 = icmp eq i32 %84, 0, !dbg !12376
  br i1 %85, label %114, label %86, !dbg !12379

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12380
  %88 = load i32, i32* %87, align 4, !dbg !12380
  %89 = icmp eq i32 %88, 1, !dbg !12381
  br i1 %89, label %114, label %311, !dbg !12382

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12383
  %92 = load i32, i32* %91, align 4, !dbg !12383
  %93 = icmp eq i32 %92, 0, !dbg !12386
  br i1 %93, label %104, label %94, !dbg !12387

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12388
  %95 = tail call i32 @HAL_GetTick() #27, !dbg !12390
  call void @llvm.dbg.value(metadata i32 %95, metadata !12280, metadata !DIExpression()), !dbg !12290
  br label %96, !dbg !12391

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12392
  %98 = and i32 %97, 2, !dbg !12393
  %99 = icmp eq i32 %98, 0, !dbg !12393
  br i1 %99, label %100, label %114, !dbg !12391

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #27, !dbg !12394
  %102 = sub i32 %101, %95, !dbg !12397
  %103 = icmp ugt i32 %102, 2, !dbg !12398
  br i1 %103, label %311, label %96, !dbg !12399, !llvm.loop !12400

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12402
  %105 = tail call i32 @HAL_GetTick() #27, !dbg !12404
  call void @llvm.dbg.value(metadata i32 %105, metadata !12280, metadata !DIExpression()), !dbg !12290
  br label %106, !dbg !12405

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12406
  %108 = and i32 %107, 2, !dbg !12406
  %109 = icmp eq i32 %108, 0, !dbg !12406
  br i1 %109, label %121, label %110, !dbg !12405

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #27, !dbg !12407
  %112 = sub i32 %111, %105, !dbg !12410
  %113 = icmp ugt i32 %112, 2, !dbg !12411
  br i1 %113, label %311, label %106, !dbg !12412, !llvm.loop !12413

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12415
  %116 = and i32 %115, -249, !dbg !12415
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12415
  %118 = load i32, i32* %117, align 4, !dbg !12415
  %119 = shl i32 %118, 3, !dbg !12415
  %120 = or i32 %119, %116, !dbg !12415
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12415
  br label %121, !dbg !12416

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12416
  %123 = and i32 %122, 8, !dbg !12418
  %124 = icmp eq i32 %123, 0, !dbg !12419
  br i1 %124, label %149, label %125, !dbg !12420

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12421
  %127 = load i32, i32* %126, align 4, !dbg !12421
  %128 = icmp eq i32 %127, 0, !dbg !12424
  br i1 %128, label %139, label %129, !dbg !12425

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12426
  %130 = tail call i32 @HAL_GetTick() #27, !dbg !12428
  call void @llvm.dbg.value(metadata i32 %130, metadata !12280, metadata !DIExpression()), !dbg !12290
  br label %131, !dbg !12429

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12430
  %133 = and i32 %132, 2, !dbg !12431
  %134 = icmp eq i32 %133, 0, !dbg !12431
  br i1 %134, label %135, label %149, !dbg !12429

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #27, !dbg !12432
  %137 = sub i32 %136, %130, !dbg !12435
  %138 = icmp ugt i32 %137, 2, !dbg !12436
  br i1 %138, label %311, label %131, !dbg !12437, !llvm.loop !12438

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12440
  %140 = tail call i32 @HAL_GetTick() #27, !dbg !12442
  call void @llvm.dbg.value(metadata i32 %140, metadata !12280, metadata !DIExpression()), !dbg !12290
  br label %141, !dbg !12443

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12444
  %143 = and i32 %142, 2, !dbg !12444
  %144 = icmp eq i32 %143, 0, !dbg !12444
  br i1 %144, label %149, label %145, !dbg !12443

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #27, !dbg !12445
  %147 = sub i32 %146, %140, !dbg !12448
  %148 = icmp ugt i32 %147, 2, !dbg !12449
  br i1 %148, label %311, label %141, !dbg !12450, !llvm.loop !12451

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12453
  %151 = and i32 %150, 4, !dbg !12454
  %152 = icmp eq i32 %151, 0, !dbg !12455
  br i1 %152, label %221, label %153, !dbg !12456

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !12282, metadata !DIExpression()), !dbg !12457
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12458
  %155 = and i32 %154, 268435456, !dbg !12458
  %156 = icmp eq i32 %155, 0, !dbg !12458
  br i1 %156, label %157, label %164, !dbg !12459

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12460
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12460
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12286, metadata !DIExpression()), !dbg !12460
  store volatile i32 0, i32* %2, align 4, !dbg !12460
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12460
  %160 = or i32 %159, 268435456, !dbg !12460
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12460
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12460
  %162 = and i32 %161, 268435456, !dbg !12460
  store volatile i32 %162, i32* %2, align 4, !dbg !12460
  %163 = load volatile i32, i32* %2, align 4, !dbg !12460
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12461
  call void @llvm.dbg.value(metadata i32 1, metadata !12282, metadata !DIExpression()), !dbg !12457
  br label %164, !dbg !12462

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12282, metadata !DIExpression()), !dbg !12457
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12463
  %166 = and i32 %165, 256, !dbg !12463
  %167 = icmp eq i32 %166, 0, !dbg !12463
  br i1 %167, label %168, label %180, !dbg !12465

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12466
  %170 = or i32 %169, 256, !dbg !12466
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12466
  %171 = tail call i32 @HAL_GetTick() #27, !dbg !12468
  call void @llvm.dbg.value(metadata i32 %171, metadata !12280, metadata !DIExpression()), !dbg !12290
  br label %172, !dbg !12469

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12470
  %174 = and i32 %173, 256, !dbg !12470
  %175 = icmp eq i32 %174, 0, !dbg !12470
  br i1 %175, label %176, label %180, !dbg !12469

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #27, !dbg !12471
  %178 = sub i32 %177, %171, !dbg !12474
  %179 = icmp ugt i32 %178, 2, !dbg !12475
  br i1 %179, label %311, label %172, !dbg !12476, !llvm.loop !12477

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12479
  %182 = load i32, i32* %181, align 4, !dbg !12479
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12482

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12483
  %185 = or i32 %184, 1, !dbg !12483
  br label %196, !dbg !12483

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12485
  %188 = or i32 %187, 4, !dbg !12485
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12485
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12485
  %190 = or i32 %189, 1, !dbg !12485
  br label %196, !dbg !12485

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12488
  %193 = and i32 %192, -2, !dbg !12488
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12488
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12488
  %195 = and i32 %194, -5, !dbg !12488
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12490
  %198 = load i32, i32* %181, align 4, !dbg !12491
  %199 = icmp eq i32 %198, 0, !dbg !12493
  %200 = tail call i32 @HAL_GetTick() #27, !dbg !12494
  call void @llvm.dbg.value(metadata i32 %200, metadata !12280, metadata !DIExpression()), !dbg !12290
  call void @llvm.dbg.value(metadata i32 %200, metadata !12280, metadata !DIExpression()), !dbg !12290
  br i1 %199, label %209, label %201, !dbg !12495

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12496
  %203 = and i32 %202, 2, !dbg !12498
  %204 = icmp eq i32 %203, 0, !dbg !12498
  br i1 %204, label %205, label %217, !dbg !12499

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #27, !dbg !12500
  %207 = sub i32 %206, %200, !dbg !12503
  %208 = icmp ugt i32 %207, 5000, !dbg !12504
  br i1 %208, label %311, label %201, !dbg !12505, !llvm.loop !12506

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12508
  %211 = and i32 %210, 2, !dbg !12508
  %212 = icmp eq i32 %211, 0, !dbg !12508
  br i1 %212, label %217, label %213, !dbg !12510

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #27, !dbg !12511
  %215 = sub i32 %214, %200, !dbg !12514
  %216 = icmp ugt i32 %215, 5000, !dbg !12515
  br i1 %216, label %311, label %209, !dbg !12516, !llvm.loop !12517

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12519

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12520
  %220 = and i32 %219, -268435457, !dbg !12520
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12520
  br label %221, !dbg !12523

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12524
  %223 = load i32, i32* %222, align 4, !dbg !12524
  %224 = icmp eq i32 %223, 0, !dbg !12526
  br i1 %224, label %310, label %225, !dbg !12527

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12528
  %227 = and i32 %226, 12, !dbg !12528
  %228 = icmp eq i32 %227, 8, !dbg !12531
  br i1 %228, label %277, label %229, !dbg !12532

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12533
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12536
  %231 = tail call i32 @HAL_GetTick() #27, !dbg !12536
  call void @llvm.dbg.value(metadata i32 %231, metadata !12280, metadata !DIExpression()), !dbg !12290
  call void @llvm.dbg.value(metadata i32 %231, metadata !12280, metadata !DIExpression()), !dbg !12290
  br i1 %230, label %232, label %269, !dbg !12537

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12538
  %234 = and i32 %233, 33554432, !dbg !12538
  %235 = icmp eq i32 %234, 0, !dbg !12538
  br i1 %235, label %240, label %236, !dbg !12540

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #27, !dbg !12541
  %238 = sub i32 %237, %231, !dbg !12544
  %239 = icmp ugt i32 %238, 2, !dbg !12545
  br i1 %239, label %311, label %232, !dbg !12546, !llvm.loop !12547

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12549
  %242 = load i32, i32* %241, align 4, !dbg !12549
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12549
  %244 = load i32, i32* %243, align 4, !dbg !12549
  %245 = or i32 %244, %242, !dbg !12549
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12549
  %247 = load i32, i32* %246, align 4, !dbg !12549
  %248 = shl i32 %247, 6, !dbg !12549
  %249 = or i32 %245, %248, !dbg !12549
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12549
  %251 = load i32, i32* %250, align 4, !dbg !12549
  %252 = shl i32 %251, 15, !dbg !12549
  %253 = add i32 %252, -65536, !dbg !12549
  %254 = and i32 %253, -65536, !dbg !12549
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12549
  %256 = load i32, i32* %255, align 4, !dbg !12549
  %257 = shl i32 %256, 24, !dbg !12549
  %258 = or i32 %249, %257, !dbg !12549
  %259 = or i32 %258, %254, !dbg !12549
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12549
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12550
  %260 = tail call i32 @HAL_GetTick() #27, !dbg !12551
  call void @llvm.dbg.value(metadata i32 %260, metadata !12280, metadata !DIExpression()), !dbg !12290
  br label %261, !dbg !12552

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12553
  %263 = and i32 %262, 33554432, !dbg !12554
  %264 = icmp eq i32 %263, 0, !dbg !12554
  br i1 %264, label %265, label %310, !dbg !12552

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #27, !dbg !12555
  %267 = sub i32 %266, %260, !dbg !12558
  %268 = icmp ugt i32 %267, 2, !dbg !12559
  br i1 %268, label %311, label %261, !dbg !12560, !llvm.loop !12561

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12563
  %271 = and i32 %270, 33554432, !dbg !12563
  %272 = icmp eq i32 %271, 0, !dbg !12563
  br i1 %272, label %310, label %273, !dbg !12565

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #27, !dbg !12566
  %275 = sub i32 %274, %231, !dbg !12569
  %276 = icmp ugt i32 %275, 2, !dbg !12570
  br i1 %276, label %311, label %269, !dbg !12571, !llvm.loop !12572

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12574
  br i1 %278, label %311, label %279, !dbg !12577

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12578
  call void @llvm.dbg.value(metadata i32 %280, metadata !12281, metadata !DIExpression()), !dbg !12290
  %281 = and i32 %280, 4194304, !dbg !12580
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12582
  %283 = load i32, i32* %282, align 4, !dbg !12582
  %284 = icmp eq i32 %281, %283, !dbg !12583
  br i1 %284, label %285, label %311, !dbg !12584

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12585
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12586
  %288 = load i32, i32* %287, align 4, !dbg !12586
  %289 = icmp eq i32 %286, %288, !dbg !12587
  br i1 %289, label %290, label %311, !dbg !12588

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12589
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12590
  %293 = load i32, i32* %292, align 4, !dbg !12590
  %294 = shl i32 %293, 6, !dbg !12591
  %295 = icmp eq i32 %291, %294, !dbg !12592
  br i1 %295, label %296, label %311, !dbg !12593

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12594
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12595
  %299 = load i32, i32* %298, align 4, !dbg !12595
  %300 = shl i32 %299, 15, !dbg !12596
  %301 = add i32 %300, -65536, !dbg !12596
  %302 = and i32 %301, -65536, !dbg !12596
  %303 = icmp eq i32 %297, %302, !dbg !12597
  br i1 %303, label %304, label %311, !dbg !12598

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12599
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12600
  %307 = load i32, i32* %306, align 4, !dbg !12600
  %308 = shl i32 %307, 24, !dbg !12601
  %309 = icmp eq i32 %305, %308, !dbg !12602
  br i1 %309, label %310, label %311, !dbg !12603

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !12604

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !12290
  ret i32 %312, !dbg !12605
}

; Function Attrs: optsize
declare !dbg !12606 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12608 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12621, metadata !DIExpression()), !dbg !12624
  call void @llvm.dbg.value(metadata i32 %1, metadata !12622, metadata !DIExpression()), !dbg !12624
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !12625
  br i1 %3, label %115, label %4, !dbg !12627

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12628
  %6 = and i32 %5, 7, !dbg !12628
  %7 = icmp ult i32 %6, %1, !dbg !12630
  br i1 %7, label %8, label %13, !dbg !12631

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12632
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12632
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12634
  %11 = and i32 %10, 7, !dbg !12634
  %12 = icmp eq i32 %11, %1, !dbg !12636
  br i1 %12, label %13, label %115, !dbg !12637

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12638
  %15 = load i32, i32* %14, align 4, !dbg !12638
  %16 = and i32 %15, 2, !dbg !12640
  %17 = icmp eq i32 %16, 0, !dbg !12641
  br i1 %17, label %39, label %18, !dbg !12642

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12643
  %20 = icmp eq i32 %19, 0, !dbg !12646
  br i1 %20, label %25, label %21, !dbg !12647

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12648
  %23 = or i32 %22, 7168, !dbg !12648
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12648
  %24 = load i32, i32* %14, align 4, !dbg !12650
  br label %25, !dbg !12652

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12650
  %27 = and i32 %26, 8, !dbg !12653
  %28 = icmp eq i32 %27, 0, !dbg !12654
  br i1 %28, label %32, label %29, !dbg !12655

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12656
  %31 = or i32 %30, 57344, !dbg !12656
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12656
  br label %32, !dbg !12658

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12659
  %34 = and i32 %33, -241, !dbg !12659
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12659
  %36 = load i32, i32* %35, align 4, !dbg !12659
  %37 = or i32 %34, %36, !dbg !12659
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12659
  %38 = load i32, i32* %14, align 4, !dbg !12660
  br label %39, !dbg !12662

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12660
  %41 = and i32 %40, 1, !dbg !12663
  %42 = icmp eq i32 %41, 0, !dbg !12664
  br i1 %42, label %73, label %43, !dbg !12665

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12666
  %45 = load i32, i32* %44, align 4, !dbg !12666
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12669

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12670
  %48 = and i32 %47, 131072, !dbg !12673
  %49 = icmp eq i32 %48, 0, !dbg !12673
  br i1 %49, label %115, label %58, !dbg !12674

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12675
  %52 = and i32 %51, 33554432, !dbg !12679
  %53 = icmp eq i32 %52, 0, !dbg !12679
  br i1 %53, label %115, label %58, !dbg !12680

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12681
  %56 = and i32 %55, 2, !dbg !12684
  %57 = icmp eq i32 %56, 0, !dbg !12684
  br i1 %57, label %115, label %58, !dbg !12685

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12686
  %60 = and i32 %59, -4, !dbg !12686
  %61 = or i32 %60, %45, !dbg !12686
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12686
  %62 = tail call i32 @HAL_GetTick() #27, !dbg !12687
  call void @llvm.dbg.value(metadata i32 %62, metadata !12623, metadata !DIExpression()), !dbg !12624
  br label %63, !dbg !12688

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12689
  %65 = and i32 %64, 12, !dbg !12689
  %66 = load i32, i32* %44, align 4, !dbg !12690
  %67 = shl i32 %66, 2, !dbg !12691
  %68 = icmp eq i32 %65, %67, !dbg !12692
  br i1 %68, label %73, label %69, !dbg !12688

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #27, !dbg !12693
  %71 = sub i32 %70, %62, !dbg !12696
  %72 = icmp ugt i32 %71, 5000, !dbg !12697
  br i1 %72, label %115, label %63, !dbg !12698, !llvm.loop !12699

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12701
  %75 = and i32 %74, 7, !dbg !12701
  %76 = icmp ugt i32 %75, %1, !dbg !12703
  br i1 %76, label %77, label %82, !dbg !12704

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12705
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12705
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12707
  %80 = and i32 %79, 7, !dbg !12707
  %81 = icmp eq i32 %80, %1, !dbg !12709
  br i1 %81, label %82, label %115, !dbg !12710

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12711
  %84 = and i32 %83, 4, !dbg !12713
  %85 = icmp eq i32 %84, 0, !dbg !12714
  br i1 %85, label %93, label %86, !dbg !12715

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12716
  %88 = and i32 %87, -7169, !dbg !12716
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12716
  %90 = load i32, i32* %89, align 4, !dbg !12716
  %91 = or i32 %88, %90, !dbg !12716
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12716
  %92 = load i32, i32* %14, align 4, !dbg !12718
  br label %93, !dbg !12720

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12718
  %95 = and i32 %94, 8, !dbg !12721
  %96 = icmp eq i32 %95, 0, !dbg !12722
  br i1 %96, label %104, label %97, !dbg !12723

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12724
  %99 = and i32 %98, -57345, !dbg !12724
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12724
  %101 = load i32, i32* %100, align 4, !dbg !12724
  %102 = shl i32 %101, 3, !dbg !12724
  %103 = or i32 %102, %99, !dbg !12724
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12724
  br label %104, !dbg !12726

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !12727
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12728
  %107 = lshr i32 %106, 4, !dbg !12729
  %108 = and i32 %107, 15, !dbg !12729
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12730
  %110 = load i8, i8* %109, align 1, !dbg !12730
  %111 = zext i8 %110 to i32, !dbg !12730
  %112 = lshr i32 %105, %111, !dbg !12731
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12732
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12733
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #27, !dbg !12734
  br label %115, !dbg !12735

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12624
  ret i32 %116, !dbg !12736
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12737 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12739, metadata !DIExpression()), !dbg !12743
  call void @llvm.dbg.value(metadata i32 0, metadata !12740, metadata !DIExpression()), !dbg !12743
  call void @llvm.dbg.value(metadata i32 0, metadata !12741, metadata !DIExpression()), !dbg !12743
  call void @llvm.dbg.value(metadata i32 0, metadata !12742, metadata !DIExpression()), !dbg !12743
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12744
  %2 = and i32 %1, 12, !dbg !12745
  %3 = icmp eq i32 %2, 8, !dbg !12746
  br i1 %3, label %4, label %21, !dbg !12746

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12747
  %6 = and i32 %5, 63, !dbg !12750
  call void @llvm.dbg.value(metadata i32 %6, metadata !12739, metadata !DIExpression()), !dbg !12743
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12751
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12753
  %9 = lshr i32 %8, 6, !dbg !12753
  %10 = and i32 %9, 511, !dbg !12753
  %11 = zext i32 %10 to i64, !dbg !12753
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !12753
  %13 = zext i32 %6 to i64, !dbg !12753
  %14 = udiv i64 %12, %13, !dbg !12753
  %15 = trunc i64 %14 to i32, !dbg !12753
  call void @llvm.dbg.value(metadata i32 %15, metadata !12740, metadata !DIExpression()), !dbg !12743
  call void @llvm.dbg.value(metadata i32 %15, metadata !12740, metadata !DIExpression()), !dbg !12743
  call void @llvm.dbg.value(metadata i32 %15, metadata !12740, metadata !DIExpression()), !dbg !12743
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12754
  %17 = lshr i32 %16, 15, !dbg !12755
  %18 = and i32 %17, 6, !dbg !12755
  %19 = add nuw nsw i32 %18, 2, !dbg !12755
  call void @llvm.dbg.value(metadata i32 %19, metadata !12741, metadata !DIExpression()), !dbg !12743
  %20 = udiv i32 %15, %19, !dbg !12756
  call void @llvm.dbg.value(metadata i32 %20, metadata !12742, metadata !DIExpression()), !dbg !12743
  br label %21, !dbg !12757

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !12758
  call void @llvm.dbg.value(metadata i32 %22, metadata !12742, metadata !DIExpression()), !dbg !12743
  ret i32 %22, !dbg !12759
}

; Function Attrs: optsize
declare !dbg !12760 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12763 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12767, metadata !DIExpression()), !dbg !12787
  call void @llvm.dbg.value(metadata i32 %1, metadata !12768, metadata !DIExpression()), !dbg !12787
  call void @llvm.dbg.value(metadata i32 %2, metadata !12769, metadata !DIExpression()), !dbg !12787
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !12788
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #25, !dbg !12788
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !12770, metadata !DIExpression()), !dbg !12789
  %8 = icmp eq i32 %0, 0, !dbg !12790
  br i1 %8, label %9, label %23, !dbg !12791

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !12792
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !12792
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12780, metadata !DIExpression()), !dbg !12792
  store volatile i32 0, i32* %5, align 4, !dbg !12792
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12792
  %12 = or i32 %11, 1, !dbg !12792
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12792
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12792
  %14 = and i32 %13, 1, !dbg !12792
  store volatile i32 %14, i32* %5, align 4, !dbg !12792
  %15 = load volatile i32, i32* %5, align 4, !dbg !12792
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !12793
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !12794
  store i32 256, i32* %16, align 4, !dbg !12795
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !12796
  store i32 2, i32* %17, align 4, !dbg !12797
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !12798
  store i32 3, i32* %18, align 4, !dbg !12799
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !12800
  store i32 0, i32* %19, align 4, !dbg !12801
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !12802
  store i32 0, i32* %20, align 4, !dbg !12803
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !12804
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12805
  %22 = and i32 %21, -123731969, !dbg !12805
  br label %38, !dbg !12806

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !12807
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !12807
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12784, metadata !DIExpression()), !dbg !12807
  store volatile i32 0, i32* %6, align 4, !dbg !12807
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12807
  %26 = or i32 %25, 4, !dbg !12807
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12807
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12807
  %28 = and i32 %27, 4, !dbg !12807
  store volatile i32 %28, i32* %6, align 4, !dbg !12807
  %29 = load volatile i32, i32* %6, align 4, !dbg !12807
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !12808
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !12809
  store i32 512, i32* %30, align 4, !dbg !12810
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !12811
  store i32 2, i32* %31, align 4, !dbg !12812
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !12813
  store i32 3, i32* %32, align 4, !dbg !12814
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !12815
  store i32 0, i32* %33, align 4, !dbg !12816
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !12817
  store i32 0, i32* %34, align 4, !dbg !12818
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !12819
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12820
  %36 = and i32 %35, 134217727, !dbg !12820
  %37 = shl i32 %2, 3, !dbg !12820
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !12821
  %42 = or i32 %41, %40, !dbg !12821
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12821
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #25, !dbg !12822
  ret void, !dbg !12822
}

; Function Attrs: optsize
declare !dbg !12823 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #16 !dbg !12827 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12828
  ret void, !dbg !12829
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #16 !dbg !12830 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12831
  ret void, !dbg !12832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #4 !dbg !12833 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12834
  ret i32 %1, !dbg !12835
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #17 !dbg !12836 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12837
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12838
  %3 = lshr i32 %2, 10, !dbg !12839
  %4 = and i32 %3, 7, !dbg !12839
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12840
  %6 = load i8, i8* %5, align 1, !dbg !12840
  %7 = zext i8 %6 to i32, !dbg !12840
  %8 = lshr i32 %1, %7, !dbg !12841
  ret i32 %8, !dbg !12842
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #17 !dbg !12843 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12844
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12845
  %3 = lshr i32 %2, 13, !dbg !12846
  %4 = and i32 %3, 7, !dbg !12846
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12847
  %6 = load i8, i8* %5, align 1, !dbg !12847
  %7 = zext i8 %6 to i32, !dbg !12847
  %8 = lshr i32 %1, %7, !dbg !12848
  ret i32 %8, !dbg !12849
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12850 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12854, metadata !DIExpression()), !dbg !12855
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12856
  store i32 15, i32* %2, align 4, !dbg !12857
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12858
  %4 = and i32 %3, 262144, !dbg !12860
  %5 = icmp eq i32 %4, 0, !dbg !12861
  br i1 %5, label %8, label %6, !dbg !12862

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12863
  store i32 327680, i32* %7, align 4, !dbg !12865
  br label %15, !dbg !12866

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12867
  %10 = and i32 %9, 65536, !dbg !12869
  %11 = icmp eq i32 %10, 0, !dbg !12870
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12871
  br i1 %11, label %14, label %13, !dbg !12872

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12873
  br label %15, !dbg !12875

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12876
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12878
  %17 = and i32 %16, 1, !dbg !12880
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12881
  store i32 %17, i32* %18, align 4, !dbg !12883
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12884
  %20 = lshr i32 %19, 3, !dbg !12885
  %21 = and i32 %20, 31, !dbg !12885
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12886
  store i32 %21, i32* %22, align 4, !dbg !12887
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12888
  %24 = and i32 %23, 4, !dbg !12890
  %25 = icmp eq i32 %24, 0, !dbg !12891
  br i1 %25, label %28, label %26, !dbg !12892

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12893
  store i32 5, i32* %27, align 4, !dbg !12895
  br label %35, !dbg !12896

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12897
  %30 = and i32 %29, 1, !dbg !12899
  %31 = icmp eq i32 %30, 0, !dbg !12900
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12901
  br i1 %31, label %34, label %33, !dbg !12902

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12903
  br label %35, !dbg !12905

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12906
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12908
  %37 = and i32 %36, 1, !dbg !12910
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12911
  store i32 %37, i32* %38, align 4, !dbg !12913
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12914
  %40 = and i32 %39, 16777216, !dbg !12916
  %41 = icmp eq i32 %40, 0, !dbg !12917
  %42 = select i1 %41, i32 1, i32 2, !dbg !12918
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12919
  store i32 %42, i32* %43, align 4, !dbg !12921
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12922
  %45 = and i32 %44, 4194304, !dbg !12923
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12924
  store i32 %45, i32* %46, align 4, !dbg !12925
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12926
  %48 = and i32 %47, 63, !dbg !12927
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12928
  store i32 %48, i32* %49, align 4, !dbg !12929
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12930
  %51 = lshr i32 %50, 6, !dbg !12931
  %52 = and i32 %51, 511, !dbg !12931
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12932
  store i32 %52, i32* %53, align 4, !dbg !12933
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12934
  %55 = shl i32 %54, 1, !dbg !12935
  %56 = and i32 %55, 393216, !dbg !12935
  %57 = add nuw nsw i32 %56, 131072, !dbg !12935
  %58 = lshr exact i32 %57, 16, !dbg !12936
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12937
  store i32 %58, i32* %59, align 4, !dbg !12938
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12939
  %61 = lshr i32 %60, 24, !dbg !12940
  %62 = and i32 %61, 15, !dbg !12940
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12941
  store i32 %62, i32* %63, align 4, !dbg !12942
  ret void, !dbg !12943
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #17 !dbg !12944 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12948, metadata !DIExpression()), !dbg !12950
  call void @llvm.dbg.value(metadata i32* %1, metadata !12949, metadata !DIExpression()), !dbg !12950
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12951
  store i32 15, i32* %3, align 4, !dbg !12952
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12953
  %5 = and i32 %4, 3, !dbg !12954
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12955
  store i32 %5, i32* %6, align 4, !dbg !12956
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12957
  %8 = and i32 %7, 240, !dbg !12958
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12959
  store i32 %8, i32* %9, align 4, !dbg !12960
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12961
  %11 = and i32 %10, 7168, !dbg !12962
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12963
  store i32 %11, i32* %12, align 4, !dbg !12964
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12965
  %14 = lshr i32 %13, 3, !dbg !12966
  %15 = and i32 %14, 7168, !dbg !12966
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12967
  store i32 %15, i32* %16, align 4, !dbg !12968
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12969
  %18 = and i32 %17, 7, !dbg !12970
  store i32 %18, i32* %1, align 4, !dbg !12971
  ret void, !dbg !12972
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !12973 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12974
  %2 = and i32 %1, 128, !dbg !12974
  %3 = icmp eq i32 %2, 0, !dbg !12974
  br i1 %3, label %5, label %4, !dbg !12976

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !12977
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !12979
  br label %5, !dbg !12980

5:                                                ; preds = %4, %0
  ret void, !dbg !12981
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !12982 {
  ret void, !dbg !12983
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #16 !dbg !12984 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12987, metadata !DIExpression()), !dbg !12988
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !12989
  ret void, !dbg !12990
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #16 !dbg !12991 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12994, metadata !DIExpression()), !dbg !12996
  call void @llvm.dbg.value(metadata i32 1000, metadata !12995, metadata !DIExpression()), !dbg !12996
  %2 = udiv i32 %0, 1000, !dbg !12997
  %3 = add nsw i32 %2, -1, !dbg !12998
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12999
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13000
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13001
  ret void, !dbg !13002
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #20 !dbg !13003 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13005, metadata !DIExpression()), !dbg !13007
  %3 = bitcast i32* %2 to i8*, !dbg !13008
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13008
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13006, metadata !DIExpression()), !dbg !13009
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13010
  store volatile i32 %4, i32* %2, align 4, !dbg !13009
  %5 = load volatile i32, i32* %2, align 4, !dbg !13011
  %6 = icmp eq i32 %0, -1, !dbg !13012
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13005, metadata !DIExpression()), !dbg !13007
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !13007
  call void @llvm.dbg.value(metadata i32 %8, metadata !13005, metadata !DIExpression()), !dbg !13007
  br label %9, !dbg !13014

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13005, metadata !DIExpression()), !dbg !13007
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13015
  call void @llvm.dbg.value(metadata i32 undef, metadata !13005, metadata !DIExpression()), !dbg !13007
  %12 = shl i32 %11, 15, !dbg !13007
  %13 = ashr i32 %12, 31, !dbg !13007
  %14 = add i32 %13, %10, !dbg !13007
  call void @llvm.dbg.value(metadata i32 %14, metadata !13005, metadata !DIExpression()), !dbg !13007
  %15 = icmp eq i32 %14, 0, !dbg !13014
  br i1 %15, label %16, label %9, !dbg !13014

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13018
  ret void, !dbg !13018
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #8 !dbg !13019 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13021, metadata !DIExpression()), !dbg !13022
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13023
  ret void, !dbg !13024
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #16 !dbg !13025 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13030, metadata !DIExpression()), !dbg !13035
  call void @llvm.dbg.value(metadata i32 0, metadata !13033, metadata !DIExpression()), !dbg !13035
  call void @llvm.dbg.value(metadata i32 0, metadata !13034, metadata !DIExpression()), !dbg !13035
  %2 = icmp eq i32 %0, 0, !dbg !13036
  br i1 %2, label %35, label %3, !dbg !13038

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !13039
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !13042
  %6 = icmp eq i32 %5, 32768, !dbg !13044
  br i1 %6, label %7, label %12, !dbg !13045

7:                                                ; preds = %3
  %8 = icmp ugt i32 %0, 60000000, !dbg !13046
  br i1 %8, label %12, label %9, !dbg !13049

9:                                                ; preds = %7
  %10 = icmp ugt i32 %0, 30000000, !dbg !13050
  %11 = zext i1 %10 to i32, !dbg !13053
  call void @llvm.dbg.value(metadata i32 %11, metadata !13033, metadata !DIExpression()), !dbg !13035
  br label %12, !dbg !13053

12:                                               ; preds = %7, %9, %3
  %13 = phi i32 [ %11, %9 ], [ 0, %3 ], [ 2, %7 ], !dbg !13035
  call void @llvm.dbg.value(metadata i32 %13, metadata !13033, metadata !DIExpression()), !dbg !13035
  %14 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !13054
  %15 = icmp eq i32 %14, 16384, !dbg !13056
  br i1 %15, label %16, label %24, !dbg !13057

16:                                               ; preds = %12
  %17 = icmp ugt i32 %0, 60000000, !dbg !13058
  %18 = icmp eq i32 %13, 0
  %19 = and i1 %17, %18, !dbg !13061
  br i1 %19, label %24, label %20, !dbg !13061

20:                                               ; preds = %16
  %21 = icmp ugt i32 %0, 30000000, !dbg !13062
  %22 = and i1 %21, %18, !dbg !13065
  %23 = select i1 %22, i32 1, i32 %13, !dbg !13065
  call void @llvm.dbg.value(metadata i32 %23, metadata !13033, metadata !DIExpression()), !dbg !13035
  br label %24, !dbg !13065

24:                                               ; preds = %16, %20, %12
  %25 = phi i32 [ %23, %20 ], [ %13, %12 ], [ 2, %16 ], !dbg !13066
  call void @llvm.dbg.value(metadata i32 %25, metadata !13033, metadata !DIExpression()), !dbg !13035
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %25) #26, !dbg !13067
  call void @llvm.dbg.value(metadata i32 2, metadata !13031, metadata !DIExpression()), !dbg !13035
  br label %26, !dbg !13068

26:                                               ; preds = %26, %24
  %27 = phi i32 [ 2, %24 ], [ %29, %26 ], !dbg !13066
  call void @llvm.dbg.value(metadata i32 %27, metadata !13031, metadata !DIExpression()), !dbg !13035
  %28 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !13069
  call void @llvm.dbg.value(metadata i32 %28, metadata !13032, metadata !DIExpression()), !dbg !13035
  %29 = add nsw i32 %27, -1, !dbg !13071
  call void @llvm.dbg.value(metadata i32 %29, metadata !13031, metadata !DIExpression()), !dbg !13035
  %30 = icmp ne i32 %28, %25, !dbg !13072
  %31 = icmp ne i32 %29, 0, !dbg !13073
  %32 = select i1 %30, i1 %31, i1 false, !dbg !13073
  br i1 %32, label %26, label %33, !dbg !13074, !llvm.loop !13075

33:                                               ; preds = %26
  %34 = zext i1 %30 to i32
  br label %35

35:                                               ; preds = %33, %1
  %36 = phi i32 [ 1, %1 ], [ %34, %33 ], !dbg !13077
  call void @llvm.dbg.value(metadata i32 %36, metadata !13034, metadata !DIExpression()), !dbg !13035
  ret i32 %36, !dbg !13078
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #17 !dbg !13079 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13081
  %2 = and i32 %1, 49152, !dbg !13081
  ret i32 %2, !dbg !13082
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #16 !dbg !13083 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13085, metadata !DIExpression()), !dbg !13086
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13087
  %3 = and i32 %2, -8, !dbg !13087
  %4 = or i32 %3, %0, !dbg !13087
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13087
  ret void, !dbg !13088
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #17 !dbg !13089 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13090
  %2 = and i32 %1, 7, !dbg !13090
  ret i32 %2, !dbg !13091
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !13092 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !13110, metadata !DIExpression()), !dbg !13114
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13111, metadata !DIExpression()), !dbg !13114
  call void @llvm.dbg.value(metadata i32 0, metadata !13112, metadata !DIExpression()), !dbg !13114
  call void @llvm.dbg.value(metadata i32 0, metadata !13113, metadata !DIExpression()), !dbg !13114
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !13115
  %4 = icmp eq i32 %3, 0, !dbg !13117
  br i1 %4, label %5, label %21, !dbg !13118

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !13119
  call void @llvm.dbg.value(metadata i32 %6, metadata !13113, metadata !DIExpression()), !dbg !13114
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.134() #26, !dbg !13121
  %8 = icmp eq i32 %7, 1, !dbg !13123
  br i1 %8, label %13, label %9, !dbg !13124

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.135() #26, !dbg !13125
  br label %10, !dbg !13127

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.134() #26, !dbg !13128
  %12 = icmp eq i32 %11, 1, !dbg !13129
  br i1 %12, label %13, label %10, !dbg !13127, !llvm.loop !13130

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !13132
  %15 = load i32, i32* %14, align 4, !dbg !13132
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !13133
  %17 = load i32, i32* %16, align 4, !dbg !13133
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !13134
  %19 = load i32, i32* %18, align 4, !dbg !13134
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.136(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !13135
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !13136
  call void @llvm.dbg.value(metadata i32 %20, metadata !13112, metadata !DIExpression()), !dbg !13114
  br label %21, !dbg !13137

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !13138
  call void @llvm.dbg.value(metadata i32 %22, metadata !13112, metadata !DIExpression()), !dbg !13114
  ret i32 %22, !dbg !13139
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #17 !dbg !13140 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13144, metadata !DIExpression()), !dbg !13145
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.138() #26, !dbg !13146
  %2 = icmp ne i32 %1, 0, !dbg !13148
  call void @llvm.dbg.value(metadata i1 %2, metadata !13144, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13145
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !13149
  %4 = icmp ne i32 %3, 0, !dbg !13151
  %5 = select i1 %4, i1 true, i1 %2, !dbg !13152
  %6 = zext i1 %5 to i32, !dbg !13152
  call void @llvm.dbg.value(metadata i32 %6, metadata !13144, metadata !DIExpression()), !dbg !13145
  ret i32 %6, !dbg !13153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #4 !dbg !13154 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13158, metadata !DIExpression()), !dbg !13161
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13159, metadata !DIExpression()), !dbg !13161
  call void @llvm.dbg.value(metadata i32 0, metadata !13160, metadata !DIExpression()), !dbg !13161
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13162
  %4 = load i32, i32* %3, align 4, !dbg !13162
  %5 = and i32 %4, 63, !dbg !13163
  %6 = udiv i32 %0, %5, !dbg !13164
  call void @llvm.dbg.value(metadata i32 %6, metadata !13160, metadata !DIExpression()), !dbg !13161
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13165
  %8 = load i32, i32* %7, align 4, !dbg !13165
  %9 = and i32 %8, 511, !dbg !13166
  %10 = mul i32 %9, %6, !dbg !13167
  call void @llvm.dbg.value(metadata i32 %10, metadata !13160, metadata !DIExpression()), !dbg !13161
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13168
  %12 = load i32, i32* %11, align 4, !dbg !13168
  %13 = lshr i32 %12, 15, !dbg !13169
  %14 = and i32 %13, 131070, !dbg !13169
  %15 = add nuw nsw i32 %14, 2, !dbg !13169
  %16 = udiv i32 %10, %15, !dbg !13170
  call void @llvm.dbg.value(metadata i32 %16, metadata !13160, metadata !DIExpression()), !dbg !13161
  ret i32 %16, !dbg !13171
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.134() unnamed_addr #17 !dbg !13172 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13173
  %2 = lshr i32 %1, 1, !dbg !13174
  %3 = and i32 %2, 1, !dbg !13174
  ret i32 %3, !dbg !13175
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.135() unnamed_addr #16 !dbg !13176 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13177
  %2 = or i32 %1, 1, !dbg !13177
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13177
  ret void, !dbg !13178
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.136(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #16 !dbg !13179 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13181, metadata !DIExpression()), !dbg !13185
  call void @llvm.dbg.value(metadata i32 %1, metadata !13182, metadata !DIExpression()), !dbg !13185
  call void @llvm.dbg.value(metadata i32 %2, metadata !13183, metadata !DIExpression()), !dbg !13185
  call void @llvm.dbg.value(metadata i32 %3, metadata !13184, metadata !DIExpression()), !dbg !13185
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13186
  %6 = and i32 %5, -4227072, !dbg !13186
  %7 = or i32 %1, %0, !dbg !13186
  %8 = shl i32 %2, 6, !dbg !13186
  %9 = or i32 %7, %8, !dbg !13186
  %10 = or i32 %9, %6, !dbg !13186
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13186
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13187
  %12 = and i32 %11, -196609, !dbg !13187
  %13 = or i32 %12, %3, !dbg !13187
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13187
  ret void, !dbg !13188
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #16 !dbg !13189 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13193, metadata !DIExpression()), !dbg !13197
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13194, metadata !DIExpression()), !dbg !13197
  call void @llvm.dbg.value(metadata i32 0, metadata !13195, metadata !DIExpression()), !dbg !13197
  call void @llvm.dbg.value(metadata i32 0, metadata !13196, metadata !DIExpression()), !dbg !13197
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13198
  %4 = load i32, i32* %3, align 4, !dbg !13198
  %5 = lshr i32 %4, 4, !dbg !13198
  %6 = and i32 %5, 15, !dbg !13198
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13198
  %8 = load i8, i8* %7, align 1, !dbg !13198
  %9 = zext i8 %8 to i32, !dbg !13198
  %10 = lshr i32 %0, %9, !dbg !13198
  call void @llvm.dbg.value(metadata i32 %10, metadata !13196, metadata !DIExpression()), !dbg !13197
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13199
  %12 = icmp ult i32 %11, %10, !dbg !13201
  br i1 %12, label %13, label %16, !dbg !13202

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13203
  call void @llvm.dbg.value(metadata i32 %14, metadata !13195, metadata !DIExpression()), !dbg !13197
  %15 = icmp eq i32 %14, 0, !dbg !13205
  br i1 %15, label %16, label %30, !dbg !13207

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.137() #26, !dbg !13208
  br label %17, !dbg !13210

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.138() #26, !dbg !13211
  %19 = icmp eq i32 %18, 1, !dbg !13212
  br i1 %19, label %20, label %17, !dbg !13210, !llvm.loop !13213

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13215
  tail call fastcc void @LL_RCC_SetAHBPrescaler.139(i32 noundef %21) #26, !dbg !13216
  tail call fastcc void @LL_RCC_SetSysClkSource.140() #26, !dbg !13217
  br label %22, !dbg !13218

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.141() #26, !dbg !13219
  %24 = icmp eq i32 %23, 8, !dbg !13220
  br i1 %24, label %25, label %22, !dbg !13218, !llvm.loop !13221

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13223
  %27 = load i32, i32* %26, align 4, !dbg !13223
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.142(i32 noundef %27) #26, !dbg !13224
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13225
  %29 = load i32, i32* %28, align 4, !dbg !13225
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.143(i32 noundef %29) #26, !dbg !13226
  br label %30, !dbg !13227

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13228
  %33 = icmp ugt i32 %32, %10, !dbg !13230
  br i1 %33, label %34, label %36, !dbg !13231

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13232
  call void @llvm.dbg.value(metadata i32 %35, metadata !13195, metadata !DIExpression()), !dbg !13197
  br label %36, !dbg !13234

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13197
  call void @llvm.dbg.value(metadata i32 %37, metadata !13195, metadata !DIExpression()), !dbg !13197
  %38 = icmp eq i32 %37, 0, !dbg !13235
  br i1 %38, label %39, label %40, !dbg !13237

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !13238
  br label %40, !dbg !13240

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13241
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.137() unnamed_addr #16 !dbg !13242 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13243
  %2 = or i32 %1, 16777216, !dbg !13243
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13243
  ret void, !dbg !13244
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.138() unnamed_addr #17 !dbg !13245 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13246
  %2 = lshr i32 %1, 25, !dbg !13247
  %3 = and i32 %2, 1, !dbg !13247
  ret i32 %3, !dbg !13248
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.139(i32 noundef %0) unnamed_addr #16 !dbg !13249 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13251, metadata !DIExpression()), !dbg !13252
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13253
  %3 = and i32 %2, -241, !dbg !13253
  %4 = or i32 %3, %0, !dbg !13253
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13253
  ret void, !dbg !13254
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.140() unnamed_addr #16 !dbg !13255 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13257, metadata !DIExpression()), !dbg !13258
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13259
  %2 = and i32 %1, -4, !dbg !13259
  %3 = or i32 %2, 2, !dbg !13259
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13259
  ret void, !dbg !13260
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.141() unnamed_addr #17 !dbg !13261 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13262
  %2 = and i32 %1, 12, !dbg !13262
  ret i32 %2, !dbg !13263
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.142(i32 noundef %0) unnamed_addr #16 !dbg !13264 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13266, metadata !DIExpression()), !dbg !13267
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13268
  %3 = and i32 %2, -7169, !dbg !13268
  %4 = or i32 %3, %0, !dbg !13268
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13268
  ret void, !dbg !13269
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.143(i32 noundef %0) unnamed_addr #16 !dbg !13270 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13272, metadata !DIExpression()), !dbg !13273
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13274
  %3 = and i32 %2, -57345, !dbg !13274
  %4 = or i32 %3, %0, !dbg !13274
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13274
  ret void, !dbg !13275
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #17 !dbg !13276 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13277
  %2 = lshr i32 %1, 27, !dbg !13278
  %3 = and i32 %2, 1, !dbg !13278
  ret i32 %3, !dbg !13279
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #16 !dbg !13280 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13284, metadata !DIExpression()), !dbg !13290
  call void @llvm.dbg.value(metadata i32 %1, metadata !13285, metadata !DIExpression()), !dbg !13290
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !13286, metadata !DIExpression()), !dbg !13290
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13287, metadata !DIExpression()), !dbg !13290
  call void @llvm.dbg.value(metadata i32 0, metadata !13288, metadata !DIExpression()), !dbg !13290
  call void @llvm.dbg.value(metadata i32 0, metadata !13289, metadata !DIExpression()), !dbg !13290
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !13291
  %6 = icmp eq i32 %5, 0, !dbg !13293
  br i1 %6, label %7, label %27, !dbg !13294

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !13295
  call void @llvm.dbg.value(metadata i32 %8, metadata !13289, metadata !DIExpression()), !dbg !13290
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.144() #26, !dbg !13297
  %10 = icmp eq i32 %9, 1, !dbg !13299
  br i1 %10, label %19, label %11, !dbg !13300

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13301
  br i1 %12, label %13, label %14, !dbg !13304

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !13305
  br label %15, !dbg !13307

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.145() #26, !dbg !13308
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.146() #26, !dbg !13310
  br label %16, !dbg !13311

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.144() #26, !dbg !13312
  %18 = icmp eq i32 %17, 1, !dbg !13313
  br i1 %18, label %19, label %16, !dbg !13311, !llvm.loop !13314

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !13316
  %21 = load i32, i32* %20, align 4, !dbg !13316
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !13317
  %23 = load i32, i32* %22, align 4, !dbg !13317
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !13318
  %25 = load i32, i32* %24, align 4, !dbg !13318
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.136(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !13319
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !13320
  call void @llvm.dbg.value(metadata i32 %26, metadata !13288, metadata !DIExpression()), !dbg !13290
  br label %27, !dbg !13321

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13322
  call void @llvm.dbg.value(metadata i32 %28, metadata !13288, metadata !DIExpression()), !dbg !13290
  ret i32 %28, !dbg !13323
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.144() unnamed_addr #17 !dbg !13324 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13325
  %2 = lshr i32 %1, 17, !dbg !13326
  %3 = and i32 %2, 1, !dbg !13326
  ret i32 %3, !dbg !13327
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #16 !dbg !13328 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13329
  %2 = or i32 %1, 262144, !dbg !13329
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13329
  ret void, !dbg !13330
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.145() unnamed_addr #16 !dbg !13331 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13332
  %2 = and i32 %1, -262145, !dbg !13332
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13332
  ret void, !dbg !13333
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.146() unnamed_addr #16 !dbg !13334 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13335
  %2 = or i32 %1, 65536, !dbg !13335
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13335
  ret void, !dbg !13336
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !13337 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13340, metadata !DIExpression()), !dbg !13356
  call void @llvm.dbg.value(metadata i32 undef, metadata !13340, metadata !DIExpression()), !dbg !13356
  call void @llvm.dbg.value(metadata i32 undef, metadata !13340, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13356
  ret void, !dbg !13357
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13358 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13362, metadata !DIExpression()), !dbg !13364
  %2 = icmp eq i8* %0, null, !dbg !13365
  br i1 %2, label %29, label %3, !dbg !13367

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13368
  %5 = icmp eq i8 %4, 0, !dbg !13369
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13370
  br i1 %6, label %29, label %8, !dbg !13370

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13363, metadata !DIExpression()), !dbg !13364
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13371

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13363, metadata !DIExpression()), !dbg !13364
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !13373
  br i1 %10, label %11, label %15, !dbg !13378

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13379
  %13 = load i8*, i8** %12, align 4, !dbg !13379
  %14 = icmp eq i8* %13, %0, !dbg !13380
  br i1 %14, label %29, label %15, !dbg !13381

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13382
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13363, metadata !DIExpression()), !dbg !13364
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13383
  br i1 %17, label %7, label %8, !dbg !13384, !llvm.loop !13385

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13363, metadata !DIExpression()), !dbg !13364
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !13387
  br i1 %20, label %21, label %26, !dbg !13391

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13392
  %23 = load i8*, i8** %22, align 4, !dbg !13392
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !13393
  %25 = icmp eq i32 %24, 0, !dbg !13394
  br i1 %25, label %29, label %26, !dbg !13395

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13396
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13363, metadata !DIExpression()), !dbg !13364
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13397
  br i1 %28, label %29, label %18, !dbg !13371, !llvm.loop !13398

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13364
  ret %struct.device* %30, !dbg !13400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #4 !dbg !13401 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13405, metadata !DIExpression()), !dbg !13406
  %2 = icmp eq %struct.device* %0, null, !dbg !13407
  br i1 %2, label %14, label %3, !dbg !13409

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13410
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13410
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13411
  %7 = load i8, i8* %6, align 1, !dbg !13411
  %8 = and i8 %7, 1, !dbg !13411
  %9 = icmp eq i8 %8, 0, !dbg !13411
  br i1 %9, label %14, label %10, !dbg !13412

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13413
  %12 = load i8, i8* %11, align 1, !dbg !13413
  %13 = icmp eq i8 %12, 0, !dbg !13414
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13406
  ret i1 %15, !dbg !13415
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #8 !dbg !13416 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13421, metadata !DIExpression()), !dbg !13422
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13423
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13424
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13425 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13433, metadata !DIExpression()), !dbg !13438
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13434, metadata !DIExpression()), !dbg !13438
  call void @llvm.dbg.value(metadata i8* %2, metadata !13435, metadata !DIExpression()), !dbg !13438
  %5 = bitcast i32* %4 to i8*, !dbg !13439
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13439
  call void @llvm.dbg.value(metadata i32 0, metadata !13436, metadata !DIExpression()), !dbg !13438
  store i32 0, i32* %4, align 4, !dbg !13440
  call void @llvm.dbg.value(metadata i32* %4, metadata !13436, metadata !DIExpression(DW_OP_deref)), !dbg !13438
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13441
  call void @llvm.dbg.value(metadata i16* %6, metadata !13437, metadata !DIExpression()), !dbg !13438
  %7 = load i32, i32* %4, align 4, !dbg !13442
  call void @llvm.dbg.value(metadata i32 %7, metadata !13436, metadata !DIExpression()), !dbg !13438
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13443
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13444
  ret i32 %8, !dbg !13445
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !13446 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13450, metadata !DIExpression()), !dbg !13456
  call void @llvm.dbg.value(metadata i32* %1, metadata !13451, metadata !DIExpression()), !dbg !13456
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13457
  %4 = load i16*, i16** %3, align 4, !dbg !13457
  call void @llvm.dbg.value(metadata i16* %4, metadata !13452, metadata !DIExpression()), !dbg !13456
  %5 = icmp eq i16* %4, null, !dbg !13458
  br i1 %5, label %14, label %6, !dbg !13459

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13460
  call void @llvm.dbg.value(metadata i32 %7, metadata !13453, metadata !DIExpression()), !dbg !13460
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13461
  %9 = load i16, i16* %8, align 2, !dbg !13461
  %10 = add i16 %9, -32767, !dbg !13462
  %11 = icmp ult i16 %10, 2, !dbg !13462
  %12 = add i32 %7, 1, !dbg !13463
  call void @llvm.dbg.value(metadata i32 %12, metadata !13453, metadata !DIExpression()), !dbg !13460
  br i1 %11, label %13, label %6, !dbg !13462, !llvm.loop !13465

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13468
  br label %14, !dbg !13469

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13470
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13471 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13475, metadata !DIExpression()), !dbg !13486
  call void @llvm.dbg.value(metadata i32 %1, metadata !13476, metadata !DIExpression()), !dbg !13486
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13477, metadata !DIExpression()), !dbg !13486
  call void @llvm.dbg.value(metadata i8* %3, metadata !13478, metadata !DIExpression()), !dbg !13486
  call void @llvm.dbg.value(metadata i32 0, metadata !13479, metadata !DIExpression()), !dbg !13487
  %5 = icmp eq i32 %1, 0, !dbg !13488
  br i1 %5, label %16, label %8, !dbg !13489

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13479, metadata !DIExpression()), !dbg !13487
  %7 = icmp eq i32 %15, %1, !dbg !13488
  br i1 %7, label %16, label %8, !dbg !13489, !llvm.loop !13490

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13479, metadata !DIExpression()), !dbg !13487
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13492
  %11 = load i16, i16* %10, align 2, !dbg !13492
  call void @llvm.dbg.value(metadata i16 %11, metadata !13481, metadata !DIExpression()), !dbg !13493
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !13494
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13484, metadata !DIExpression()), !dbg !13493
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !13495
  call void @llvm.dbg.value(metadata i32 %13, metadata !13485, metadata !DIExpression()), !dbg !13493
  %14 = icmp slt i32 %13, 0, !dbg !13496
  %15 = add nuw i32 %9, 1, !dbg !13498
  call void @llvm.dbg.value(metadata i32 %15, metadata !13479, metadata !DIExpression()), !dbg !13487
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #5 !dbg !13500 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13504, metadata !DIExpression()), !dbg !13507
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13505, metadata !DIExpression()), !dbg !13507
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13506, metadata !DIExpression()), !dbg !13507
  %2 = sext i16 %0 to i32, !dbg !13508
  %3 = icmp slt i16 %0, 1, !dbg !13510
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13511
  %6 = add nsw i32 %2, -1, !dbg !13511
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13511
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13511
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13505, metadata !DIExpression()), !dbg !13507
  ret %struct.device* %8, !dbg !13512
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13513 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13515, metadata !DIExpression()), !dbg !13520
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13516, metadata !DIExpression()), !dbg !13520
  call void @llvm.dbg.value(metadata i8* %2, metadata !13517, metadata !DIExpression()), !dbg !13520
  %5 = bitcast i32* %4 to i8*, !dbg !13521
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13521
  call void @llvm.dbg.value(metadata i32 0, metadata !13518, metadata !DIExpression()), !dbg !13520
  store i32 0, i32* %4, align 4, !dbg !13522
  call void @llvm.dbg.value(metadata i32* %4, metadata !13518, metadata !DIExpression(DW_OP_deref)), !dbg !13520
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13523
  call void @llvm.dbg.value(metadata i16* %6, metadata !13519, metadata !DIExpression()), !dbg !13520
  %7 = load i32, i32* %4, align 4, !dbg !13524
  call void @llvm.dbg.value(metadata i32 %7, metadata !13518, metadata !DIExpression()), !dbg !13520
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13525
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13526
  ret i32 %8, !dbg !13527
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !13528 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13530, metadata !DIExpression()), !dbg !13535
  call void @llvm.dbg.value(metadata i32* %1, metadata !13531, metadata !DIExpression()), !dbg !13535
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13536
  %4 = load i16*, i16** %3, align 4, !dbg !13536
  call void @llvm.dbg.value(metadata i16* %4, metadata !13532, metadata !DIExpression()), !dbg !13535
  call void @llvm.dbg.value(metadata i32 0, metadata !13533, metadata !DIExpression()), !dbg !13535
  call void @llvm.dbg.value(metadata i32 0, metadata !13534, metadata !DIExpression()), !dbg !13535
  %5 = icmp eq i16* %4, null, !dbg !13537
  br i1 %5, label %22, label %6, !dbg !13539

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13533, metadata !DIExpression()), !dbg !13535
  call void @llvm.dbg.value(metadata i16* %8, metadata !13532, metadata !DIExpression()), !dbg !13535
  %9 = load i16, i16* %8, align 2, !dbg !13540
  %10 = icmp eq i16 %9, -32768, !dbg !13544
  call void @llvm.dbg.value(metadata i32 undef, metadata !13533, metadata !DIExpression()), !dbg !13535
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13545
  call void @llvm.dbg.value(metadata i16* %11, metadata !13532, metadata !DIExpression()), !dbg !13535
  %12 = zext i1 %10 to i32, !dbg !13546
  %13 = add i32 %7, %12, !dbg !13546
  call void @llvm.dbg.value(metadata i32 %13, metadata !13533, metadata !DIExpression()), !dbg !13535
  %14 = icmp eq i32 %13, 2, !dbg !13547
  br i1 %14, label %15, label %6, !dbg !13548

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13535
  call void @llvm.dbg.value(metadata i32 %16, metadata !13534, metadata !DIExpression()), !dbg !13535
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13549
  %18 = load i16, i16* %17, align 2, !dbg !13549
  %19 = icmp eq i16 %18, 32767, !dbg !13550
  %20 = add i32 %16, 1, !dbg !13551
  call void @llvm.dbg.value(metadata i32 %20, metadata !13534, metadata !DIExpression()), !dbg !13535
  br i1 %19, label %21, label %15, !dbg !13553, !llvm.loop !13554

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13556
  br label %22, !dbg !13557

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13558
  call void @llvm.dbg.value(metadata i16* %23, metadata !13532, metadata !DIExpression()), !dbg !13535
  ret i16* %23, !dbg !13559
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #4 !dbg !13560 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13563
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13564
  ret i32* %2, !dbg !13565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #5 !dbg !13566 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13714, metadata !DIExpression()), !dbg !13717
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13715, metadata !DIExpression()), !dbg !13717
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13716, metadata !DIExpression()), !dbg !13717
  ret void, !dbg !13718
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !13719 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13723, metadata !DIExpression()), !dbg !13725
  call void @llvm.dbg.value(metadata i32 %1, metadata !13724, metadata !DIExpression()), !dbg !13725
  ret void, !dbg !13726
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !13727 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13731, metadata !DIExpression()), !dbg !13733
  call void @llvm.dbg.value(metadata i32 %1, metadata !13732, metadata !DIExpression()), !dbg !13733
  ret void, !dbg !13734
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !13735 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13739, metadata !DIExpression()), !dbg !13741
  call void @llvm.dbg.value(metadata i8* %1, metadata !13740, metadata !DIExpression()), !dbg !13741
  ret i32 -134, !dbg !13742
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !13743 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13747, metadata !DIExpression()), !dbg !13749
  call void @llvm.dbg.value(metadata i8* %1, metadata !13748, metadata !DIExpression()), !dbg !13749
  ret i32 -134, !dbg !13750
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13751 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13754, metadata !DIExpression()), !dbg !13755
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13756, !srcloc !13762
  call void @llvm.dbg.value(metadata i32 undef, metadata !13759, metadata !DIExpression()) #25, !dbg !13763
  call void @llvm.dbg.value(metadata i32 undef, metadata !13760, metadata !DIExpression()) #25, !dbg !13763
  br label %3, !dbg !13764

3:                                                ; preds = %3, %1
  br label %3, !dbg !13765, !llvm.loop !13768
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13775, metadata !DIExpression()), !dbg !13777
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13776, metadata !DIExpression()), !dbg !13777
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.151, i32 0, i32 0), i32 noundef 69) #27, !dbg !13778
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !13783
  unreachable, !dbg !13783
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13784 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13786, metadata !DIExpression()), !dbg !13787
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !13788
  unreachable, !dbg !13788
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13791, metadata !DIExpression()), !dbg !13795
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13792, metadata !DIExpression()), !dbg !13795
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13796, !srcloc !13762
  call void @llvm.dbg.value(metadata i32 undef, metadata !13759, metadata !DIExpression()) #25, !dbg !13798
  call void @llvm.dbg.value(metadata i32 undef, metadata !13760, metadata !DIExpression()) #25, !dbg !13798
  call void @llvm.dbg.value(metadata i32 undef, metadata !13793, metadata !DIExpression()), !dbg !13795
  %4 = tail call fastcc %struct.k_thread* @k_current_get.154() #28, !dbg !13799
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13794, metadata !DIExpression()), !dbg !13795
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #26, !dbg !13800
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.155, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #27, !dbg !13800
  %6 = icmp eq %struct.__esf* %1, null, !dbg !13805
  br i1 %6, label %15, label %7, !dbg !13807

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13808, metadata !DIExpression()), !dbg !13813
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13815
  %9 = load i32, i32* %8, align 4, !dbg !13815
  %10 = and i32 %9, 511, !dbg !13816
  %11 = icmp eq i32 %10, 0, !dbg !13817
  br i1 %11, label %13, label %12, !dbg !13818

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.156, i32 0, i32 0), i32 noundef 69) #27, !dbg !13819
  br label %13, !dbg !13825

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !13826
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.157, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #27, !dbg !13826
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !13831
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13808, metadata !DIExpression()), !dbg !13832
  br label %17, !dbg !13837

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !13826
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.157, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #27, !dbg !13826
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !13831
  br label %17, !dbg !13838

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !13796
  call void @llvm.dbg.value(metadata i32 %18, metadata !13759, metadata !DIExpression()) #25, !dbg !13798
  call void @llvm.dbg.value(metadata i32 %18, metadata !13793, metadata !DIExpression()), !dbg !13795
  call void @llvm.dbg.value(metadata i32 undef, metadata !13839, metadata !DIExpression()) #25, !dbg !13842
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !13844, !srcloc !13845
  tail call fastcc void @k_thread_abort.158(%struct.k_thread* noundef %4) #26, !dbg !13846
  ret void, !dbg !13849
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.154() unnamed_addr #11 !dbg !13850 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.166() #28, !dbg !13854
  ret %struct.k_thread* %1, !dbg !13855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #5 !dbg !13856 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13860, metadata !DIExpression()), !dbg !13861
  %2 = icmp ult i32 %0, 5, !dbg !13862
  br i1 %2, label %3, label %6, !dbg !13862

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !13862
  %5 = load i8*, i8** %4, align 4, !dbg !13862
  br label %6, !dbg !13862

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.160, i32 0, i32 0), %1 ], !dbg !13863
  ret i8* %7, !dbg !13865
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13866 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13870, metadata !DIExpression()), !dbg !13872
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !13873
  br i1 %2, label %9, label %3, !dbg !13874

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #27, !dbg !13875
  call void @llvm.dbg.value(metadata i8* %4, metadata !13871, metadata !DIExpression()), !dbg !13872
  %5 = icmp eq i8* %4, null, !dbg !13876
  br i1 %5, label %9, label %6, !dbg !13878

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !13879
  %8 = icmp eq i8 %7, 0, !dbg !13880
  br i1 %8, label %9, label %10, !dbg !13881

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.159, i32 0, i32 0), metadata !13871, metadata !DIExpression()), !dbg !13872
  br label %10, !dbg !13882

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.159, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !13872
  call void @llvm.dbg.value(metadata i8* %11, metadata !13871, metadata !DIExpression()), !dbg !13872
  ret i8* %11, !dbg !13884
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.158(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13885 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13889, metadata !DIExpression()), !dbg !13890
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13891, !srcloc !13893
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !13894
  ret void, !dbg !13895
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.166() unnamed_addr #11 !dbg !13896 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13897, !srcloc !13899
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !13900
  ret %struct.k_thread* %1, !dbg !13901
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13902 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13906, metadata !DIExpression()), !dbg !13909
  call void @llvm.dbg.value(metadata i32 %1, metadata !13907, metadata !DIExpression()), !dbg !13909
  call void @llvm.dbg.value(metadata i32 %2, metadata !13908, metadata !DIExpression()), !dbg !13909
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !13910
  ret void, !dbg !13911
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13912 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13916, metadata !DIExpression()), !dbg !13919
  call void @llvm.dbg.value(metadata i8* %1, metadata !13917, metadata !DIExpression()), !dbg !13919
  call void @llvm.dbg.value(metadata i32 %2, metadata !13918, metadata !DIExpression()), !dbg !13919
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !13920
  ret void, !dbg !13921
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13922 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !13923
  ret void, !dbg !13924
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13925 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13927, metadata !DIExpression()), !dbg !13928
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !13929
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13930
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13931
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13932
  %4 = trunc i32 %0 to i8, !dbg !13933
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13934
  store i8 %4, i8* %5, align 4, !dbg !13935
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13936
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !13937
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13938
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13939
  store i8* %8, i8** %9, align 4, !dbg !13940
  ret void, !dbg !13941
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13942 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13944, metadata !DIExpression()), !dbg !13950
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13951
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13945, metadata !DIExpression()), !dbg !13950
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13952
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13946, metadata !DIExpression()), !dbg !13950
  call void @llvm.dbg.value(metadata i8* null, metadata !13949, metadata !DIExpression()), !dbg !13950
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13953
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13954
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !13955
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !13956
  ret void, !dbg !13957
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !13958 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13962, metadata !DIExpression()), !dbg !13963
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13964
  ret i8* %2, !dbg !13965
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13966 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13971, metadata !DIExpression()), !dbg !13972
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13973
  %3 = load i8, i8* %2, align 1, !dbg !13974
  %4 = and i8 %3, -5, !dbg !13974
  store i8 %4, i8* %2, align 1, !dbg !13974
  ret void, !dbg !13975
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !13976 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !13979
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !13980
  %3 = ptrtoint i8* %2 to i32, !dbg !13989
  %4 = add i32 %3, 2048, !dbg !13990
  call void @llvm.dbg.value(metadata i32 %4, metadata !13984, metadata !DIExpression()) #25, !dbg !13991
  call void @llvm.dbg.value(metadata i32 %4, metadata !13992, metadata !DIExpression()) #25, !dbg !13995
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !13997, !srcloc !13998
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13999
  %6 = or i32 %5, 512, !dbg !13999
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13999
  tail call fastcc void @__NVIC_SetPriority.175(i32 noundef -2, i32 noundef 255) #27, !dbg !14000
  tail call fastcc void @__NVIC_SetPriority.175(i32 noundef -5, i32 noundef 0) #27, !dbg !14003
  tail call fastcc void @__NVIC_SetPriority.175(i32 noundef -12, i32 noundef 0) #27, !dbg !14004
  tail call fastcc void @__NVIC_SetPriority.175(i32 noundef -11, i32 noundef 0) #27, !dbg !14005
  tail call fastcc void @__NVIC_SetPriority.175(i32 noundef -10, i32 noundef 0) #27, !dbg !14006
  tail call fastcc void @__NVIC_SetPriority.175(i32 noundef -4, i32 noundef 0) #27, !dbg !14007
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14008
  %8 = or i32 %7, 458752, !dbg !14008
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14008
  tail call void @z_arm_fault_init() #27, !dbg !14009
  tail call void @z_arm_cpu_idle_init() #27, !dbg !14010
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14011
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14014
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !14015
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !14016
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14017
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !14017
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13978, metadata !DIExpression()), !dbg !14018
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !14019
  call void @z_device_state_init() #27, !dbg !14020
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !14021
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !14022
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !14023
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !14024
  unreachable, !dbg !14024
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2181, metadata !DIExpression()), !dbg !14025
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14026
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14026
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2182, metadata !DIExpression()), !dbg !14025
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2182, metadata !DIExpression()), !dbg !14025
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14027
  br i1 %7, label %8, label %35, !dbg !14028

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2182, metadata !DIExpression()), !dbg !14025
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14029
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14029
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2192, metadata !DIExpression()), !dbg !14030
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14031
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14031
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !14032
  call void @llvm.dbg.value(metadata i32 %14, metadata !2196, metadata !DIExpression()), !dbg !14030
  %15 = icmp eq %struct.device* %11, null, !dbg !14033
  br i1 %15, label %32, label %16, !dbg !14035

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14036
  br i1 %17, label %26, label %18, !dbg !14039

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14040
  call void @llvm.dbg.value(metadata i32 %19, metadata !2196, metadata !DIExpression()), !dbg !14030
  %20 = icmp ult i32 %19, 255, !dbg !14042
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14042
  call void @llvm.dbg.value(metadata i32 %21, metadata !2196, metadata !DIExpression()), !dbg !14030
  %22 = trunc i32 %21 to i8, !dbg !14043
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14044
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14044
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14045
  store i8 %22, i8* %25, align 1, !dbg !14046
  br label %26, !dbg !14047

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14048
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14048
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14049
  %30 = load i8, i8* %29, align 1, !dbg !14050
  %31 = or i8 %30, 1, !dbg !14050
  store i8 %31, i8* %29, align 1, !dbg !14050
  br label %32, !dbg !14051

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14052
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2182, metadata !DIExpression()), !dbg !14025
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14027
  br i1 %34, label %8, label %35, !dbg !14028, !llvm.loop !14053

35:                                               ; preds = %32, %1
  ret void, !dbg !14055
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.175(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !14056 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14058, metadata !DIExpression()), !dbg !14060
  call void @llvm.dbg.value(metadata i32 %1, metadata !14059, metadata !DIExpression()), !dbg !14060
  %3 = trunc i32 %1 to i8, !dbg !14061
  %4 = shl i8 %3, 4, !dbg !14061
  %5 = and i32 %0, 15, !dbg !14064
  %6 = add nsw i32 %5, -4, !dbg !14065
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14066
  store volatile i8 %4, i8* %7, align 1, !dbg !14067
  ret void, !dbg !14068
}

; Function Attrs: optsize
declare !dbg !14069 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14070 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14073, metadata !DIExpression()), !dbg !14074
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14075
  store i8 1, i8* %2, align 1, !dbg !14076
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14077
  store i8 1, i8* %3, align 4, !dbg !14078
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14079
  store i32 0, i32* %4, align 4, !dbg !14080
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14081
  store i32 0, i32* %5, align 4, !dbg !14082
  tail call void @k_thread_system_pool_assign(%struct.k_thread* noundef %0) #27, !dbg !14083
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14084
  ret void, !dbg !14085
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14086 {
  tail call void @z_sched_init() #27, !dbg !14091
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14092
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.176, i32 0, i32 0)) #27, !dbg !14093
  call void @llvm.dbg.value(metadata i8* %1, metadata !14090, metadata !DIExpression()), !dbg !14094
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !14095
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !14096
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !14097
  ret i8* %1, !dbg !14098
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !14099 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14103, metadata !DIExpression()), !dbg !14104
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !14105
  unreachable, !dbg !14106
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14107 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14109, metadata !DIExpression()), !dbg !14112
  call void @llvm.dbg.value(metadata i8* %1, metadata !14110, metadata !DIExpression()), !dbg !14112
  call void @llvm.dbg.value(metadata i8* %2, metadata !14111, metadata !DIExpression()), !dbg !14112
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14113
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !14114
  tail call void @boot_banner() #27, !dbg !14115
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !14116
  tail call void @z_init_static_threads() #27, !dbg !14117
  tail call void @main() #27, !dbg !14118
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14119
  %5 = and i8 %4, -2, !dbg !14119
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14119
  ret void, !dbg !14120
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14121 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14131, metadata !DIExpression()), !dbg !14133
  call void @llvm.dbg.value(metadata i8* %1, metadata !14132, metadata !DIExpression()), !dbg !14133
  ret void, !dbg !14134
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14135 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14137, metadata !DIExpression()), !dbg !14139
  call void @llvm.dbg.value(metadata i8* %1, metadata !14138, metadata !DIExpression()), !dbg !14139
  ret void, !dbg !14140
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !14141 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !14142, !srcloc !14149
  call void @llvm.dbg.value(metadata i32 %1, metadata !14145, metadata !DIExpression()) #25, !dbg !14150
  %2 = icmp ne i32 %1, 0, !dbg !14151
  ret i1 %2, !dbg !14152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !14153 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14154
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14155
  %3 = load i8, i8* %2, align 4, !dbg !14156
  %4 = or i8 %3, 1, !dbg !14156
  store i8 %4, i8* %2, align 4, !dbg !14156
  ret void, !dbg !14157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !14158 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14159
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14160
  %3 = load i8, i8* %2, align 4, !dbg !14161
  %4 = and i8 %3, -2, !dbg !14161
  store i8 %4, i8* %2, align 4, !dbg !14161
  ret void, !dbg !14162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #4 !dbg !14163 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14164
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14165
  %3 = load i8, i8* %2, align 4, !dbg !14165
  %4 = and i8 %3, 1, !dbg !14166
  %5 = icmp ne i8 %4, 0, !dbg !14167
  ret i1 %5, !dbg !14168
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !14169 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14173, metadata !DIExpression()), !dbg !14175
  call void @llvm.dbg.value(metadata i8* %1, metadata !14174, metadata !DIExpression()), !dbg !14175
  ret i32 -88, !dbg !14176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !14177 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14181, metadata !DIExpression()), !dbg !14182
  ret i8* null, !dbg !14183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #5 !dbg !14184 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14188, metadata !DIExpression()), !dbg !14191
  call void @llvm.dbg.value(metadata i8* %1, metadata !14189, metadata !DIExpression()), !dbg !14191
  call void @llvm.dbg.value(metadata i32 %2, metadata !14190, metadata !DIExpression()), !dbg !14191
  ret i32 -88, !dbg !14192
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2205 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2319, metadata !DIExpression()), !dbg !14193
  call void @llvm.dbg.value(metadata i8* %1, metadata !2320, metadata !DIExpression()), !dbg !14193
  call void @llvm.dbg.value(metadata i32 %2, metadata !2321, metadata !DIExpression()), !dbg !14193
  call void @llvm.dbg.value(metadata i32 0, metadata !2322, metadata !DIExpression()), !dbg !14193
  call void @llvm.dbg.value(metadata i8 undef, metadata !2324, metadata !DIExpression()), !dbg !14193
  %4 = icmp eq i8* %1, null, !dbg !14194
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14196
  br i1 %6, label %46, label %7, !dbg !14196

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14197
  %9 = load i8, i8* %8, align 1, !dbg !14197
  call void @llvm.dbg.value(metadata i8 %9, metadata !2324, metadata !DIExpression()), !dbg !14193
  %10 = add i32 %2, -1, !dbg !14198
  call void @llvm.dbg.value(metadata i32 %10, metadata !2321, metadata !DIExpression()), !dbg !14193
  call void @llvm.dbg.value(metadata i8 0, metadata !2325, metadata !DIExpression()), !dbg !14199
  call void @llvm.dbg.value(metadata i8 %9, metadata !2324, metadata !DIExpression()), !dbg !14193
  call void @llvm.dbg.value(metadata i32 0, metadata !2322, metadata !DIExpression()), !dbg !14193
  %11 = icmp eq i8 %9, 0, !dbg !14200
  br i1 %11, label %12, label %15, !dbg !14202

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14203
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14204
  store i8 0, i8* %14, align 1, !dbg !14205
  br label %46, !dbg !14206

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2325, metadata !DIExpression()), !dbg !14199
  call void @llvm.dbg.value(metadata i8 %17, metadata !2324, metadata !DIExpression()), !dbg !14193
  call void @llvm.dbg.value(metadata i32 %18, metadata !2322, metadata !DIExpression()), !dbg !14193
  %19 = zext i8 %17 to i32, !dbg !14207
  %20 = zext i8 %16 to i32, !dbg !14208
  %21 = shl nuw i32 1, %20, !dbg !14208
  call void @llvm.dbg.value(metadata i32 %21, metadata !2323, metadata !DIExpression()), !dbg !14193
  %22 = and i32 %21, %19, !dbg !14210
  %23 = icmp eq i32 %22, 0, !dbg !14212
  br i1 %23, label %42, label %24, !dbg !14213

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14214
  %26 = sub i32 %10, %18, !dbg !14215
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14216
  %28 = load i8*, i8** %27, align 4, !dbg !14216
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14217
  %30 = load i32, i32* %29, align 4, !dbg !14217
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !14218
  %32 = add i32 %31, %18, !dbg !14219
  call void @llvm.dbg.value(metadata i32 %32, metadata !2322, metadata !DIExpression()), !dbg !14193
  %33 = trunc i32 %21 to i8, !dbg !14220
  %34 = xor i8 %33, -1, !dbg !14220
  %35 = and i8 %17, %34, !dbg !14220
  call void @llvm.dbg.value(metadata i8 %35, metadata !2324, metadata !DIExpression()), !dbg !14193
  %36 = icmp eq i8 %35, 0, !dbg !14221
  br i1 %36, label %12, label %37, !dbg !14223

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14224
  %39 = sub i32 %10, %32, !dbg !14226
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.179, i32 0, i32 0), i32 noundef 1) #26, !dbg !14227
  %41 = add i32 %40, %32, !dbg !14228
  call void @llvm.dbg.value(metadata i32 %41, metadata !2322, metadata !DIExpression()), !dbg !14193
  br label %42, !dbg !14229

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14193
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14193
  call void @llvm.dbg.value(metadata i8 %44, metadata !2324, metadata !DIExpression()), !dbg !14193
  call void @llvm.dbg.value(metadata i32 %43, metadata !2322, metadata !DIExpression()), !dbg !14193
  %45 = add i8 %16, 1, !dbg !14230
  call void @llvm.dbg.value(metadata i8 %45, metadata !2325, metadata !DIExpression()), !dbg !14199
  br label %15, !dbg !14202

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.180, i32 0, i32 0), %3 ], !dbg !14193
  ret i8* %47, !dbg !14231
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14232 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14236, metadata !DIExpression()), !dbg !14241
  call void @llvm.dbg.value(metadata i32 %1, metadata !14237, metadata !DIExpression()), !dbg !14241
  call void @llvm.dbg.value(metadata i8* %2, metadata !14238, metadata !DIExpression()), !dbg !14241
  call void @llvm.dbg.value(metadata i32 %3, metadata !14239, metadata !DIExpression()), !dbg !14241
  %5 = icmp ult i32 %1, %3, !dbg !14242
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14242
  call void @llvm.dbg.value(metadata i32 %6, metadata !14240, metadata !DIExpression()), !dbg !14241
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !14243
  ret i32 %6, !dbg !14244
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14245 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14249, metadata !DIExpression()), !dbg !14250
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !14251
  ret void, !dbg !14252
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14253 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14262, metadata !DIExpression()), !dbg !14273
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14263, metadata !DIExpression()), !dbg !14273
  call void @llvm.dbg.value(metadata i32 %2, metadata !14264, metadata !DIExpression()), !dbg !14273
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14265, metadata !DIExpression()), !dbg !14273
  call void @llvm.dbg.value(metadata i8* %4, metadata !14266, metadata !DIExpression()), !dbg !14273
  call void @llvm.dbg.value(metadata i8* %5, metadata !14267, metadata !DIExpression()), !dbg !14273
  call void @llvm.dbg.value(metadata i8* %6, metadata !14268, metadata !DIExpression()), !dbg !14273
  call void @llvm.dbg.value(metadata i32 %7, metadata !14269, metadata !DIExpression()), !dbg !14273
  call void @llvm.dbg.value(metadata i32 %8, metadata !14270, metadata !DIExpression()), !dbg !14273
  call void @llvm.dbg.value(metadata i8* undef, metadata !14271, metadata !DIExpression()), !dbg !14273
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14274
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %11) #26, !dbg !14275
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14276
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !14277
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !14278
  call void @llvm.dbg.value(metadata i8* %13, metadata !14272, metadata !DIExpression()), !dbg !14273
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !14279
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14280
  store i8* null, i8** %14, align 4, !dbg !14281
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14282
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !14282
  br i1 %16, label %20, label %17, !dbg !14284

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !14285
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !14285
  br label %20, !dbg !14286

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !14273
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14287
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !14289
  ret i8* %13, !dbg !14290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !14291 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14296, metadata !DIExpression()), !dbg !14297
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14298
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !14299
  ret void, !dbg !14300
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #8 !dbg !14301 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14306, metadata !DIExpression()), !dbg !14310
  call void @llvm.dbg.value(metadata i32 %1, metadata !14307, metadata !DIExpression()), !dbg !14310
  call void @llvm.dbg.value(metadata i32 %2, metadata !14308, metadata !DIExpression()), !dbg !14310
  call void @llvm.dbg.value(metadata i32 %3, metadata !14309, metadata !DIExpression()), !dbg !14310
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14311
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !14312
  %6 = trunc i32 %3 to i8, !dbg !14313
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14314
  store i8 %6, i8* %7, align 4, !dbg !14315
  %8 = trunc i32 %2 to i8, !dbg !14316
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14317
  store i8 %8, i8* %9, align 1, !dbg !14318
  %10 = trunc i32 %1 to i8, !dbg !14319
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14320
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14320
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14320
  store i8 %10, i8* %13, align 2, !dbg !14321
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14322
  store i8 0, i8* %14, align 1, !dbg !14323
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !14324
  ret void, !dbg !14325
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !14326 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14330, metadata !DIExpression()), !dbg !14338
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14331, metadata !DIExpression()), !dbg !14338
  call void @llvm.dbg.value(metadata i32 %2, metadata !14332, metadata !DIExpression()), !dbg !14338
  call void @llvm.dbg.value(metadata i32 0, metadata !14337, metadata !DIExpression()), !dbg !14338
  %4 = add i32 %2, 7, !dbg !14339
  %5 = and i32 %4, -8, !dbg !14339
  %6 = add i32 %5, 64, !dbg !14339
  call void @llvm.dbg.value(metadata i32 %6, metadata !14333, metadata !DIExpression()), !dbg !14338
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.190(%struct.z_thread_stack_element* noundef %1) #26, !dbg !14341
  call void @llvm.dbg.value(metadata i8* %7, metadata !14336, metadata !DIExpression()), !dbg !14338
  call void @llvm.dbg.value(metadata i32 %5, metadata !14334, metadata !DIExpression()), !dbg !14338
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14342
  call void @llvm.dbg.value(metadata i8* %8, metadata !14335, metadata !DIExpression()), !dbg !14338
  call void @llvm.dbg.value(metadata i32 0, metadata !14337, metadata !DIExpression()), !dbg !14338
  %9 = ptrtoint i8* %7 to i32, !dbg !14343
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14344
  store i32 %9, i32* %10, align 4, !dbg !14345
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14346
  store i32 %5, i32* %11, align 4, !dbg !14347
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14348
  store i32 0, i32* %12, align 4, !dbg !14349
  call void @llvm.dbg.value(metadata i8* %8, metadata !14335, metadata !DIExpression()), !dbg !14338
  ret i8* %8, !dbg !14350
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.190(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !14351 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14355, metadata !DIExpression()), !dbg !14356
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14357
  ret i8* %2, !dbg !14358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !14359 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14364, metadata !DIExpression()), !dbg !14365
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14366
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !14367
  ret void, !dbg !14368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !14369 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14371, metadata !DIExpression()), !dbg !14372
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14373
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !14374
  ret void, !dbg !14375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !14376 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14380, metadata !DIExpression()), !dbg !14381
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14382
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14383
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14384
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14385
  ret void, !dbg !14386
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14387 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14392, metadata !DIExpression()), !dbg !14393
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14394
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14395
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14396
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14397
  ret void, !dbg !14398
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14399 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14416, metadata !DIExpression()), !dbg !14417
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14407, metadata !DIExpression()), !dbg !14417
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14408, metadata !DIExpression()), !dbg !14417
  call void @llvm.dbg.value(metadata i32 %2, metadata !14409, metadata !DIExpression()), !dbg !14417
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14410, metadata !DIExpression()), !dbg !14417
  call void @llvm.dbg.value(metadata i8* %4, metadata !14411, metadata !DIExpression()), !dbg !14417
  call void @llvm.dbg.value(metadata i8* %5, metadata !14412, metadata !DIExpression()), !dbg !14417
  call void @llvm.dbg.value(metadata i8* %6, metadata !14413, metadata !DIExpression()), !dbg !14417
  call void @llvm.dbg.value(metadata i32 %7, metadata !14414, metadata !DIExpression()), !dbg !14417
  call void @llvm.dbg.value(metadata i32 %8, metadata !14415, metadata !DIExpression()), !dbg !14417
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !14418
  %13 = icmp eq i64 %11, -1, !dbg !14419
  br i1 %13, label %15, label %14, !dbg !14421

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !14422
  br label %15, !dbg !14424

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !14425
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14426 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14431, metadata !DIExpression()), !dbg !14432
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14430, metadata !DIExpression()), !dbg !14432
  %4 = icmp eq i64 %3, 0, !dbg !14433
  br i1 %4, label %5, label %6, !dbg !14435

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14436
  br label %7, !dbg !14438

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !14439
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14441
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14442 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14446, metadata !DIExpression()), !dbg !14447
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14448, !srcloc !14450
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14451
  ret void, !dbg !14452
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14453 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14456, metadata !DIExpression()), !dbg !14457
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14455, metadata !DIExpression()), !dbg !14457
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14458
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !14459
  ret void, !dbg !14460
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14461 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14463, metadata !DIExpression()), !dbg !14482
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !14483

1:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !14484
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14480, metadata !DIExpression()), !dbg !14485
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !14486

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14463, metadata !DIExpression()), !dbg !14482
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14487
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14487
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14490
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !14490
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14491
  %9 = load i32, i32* %8, align 4, !dbg !14491
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14492
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !14492
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14493
  %13 = load i8*, i8** %12, align 4, !dbg !14493
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14494
  %15 = load i8*, i8** %14, align 4, !dbg !14494
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14495
  %17 = load i8*, i8** %16, align 4, !dbg !14495
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14496
  %19 = load i32, i32* %18, align 4, !dbg !14496
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14497
  %21 = load i32, i32* %20, align 4, !dbg !14497
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !14498
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14499
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !14500
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !14501
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !14501
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14502
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !14463, metadata !DIExpression()), !dbg !14482
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14503
  br i1 %27, label %2, label %1, !dbg !14483, !llvm.loop !14505

28:                                               ; preds = %0
  tail call void @k_sched_lock() #27, !dbg !14484
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14480, metadata !DIExpression()), !dbg !14485
  br label %29, !dbg !14486

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #27, !dbg !14507
  ret void, !dbg !14508

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14480, metadata !DIExpression()), !dbg !14485
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !14509
  %33 = load i32, i32* %32, align 4, !dbg !14509
  %34 = icmp eq i32 %33, -1, !dbg !14513
  br i1 %34, label %43, label %35, !dbg !14514

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !14515
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !14515
  %38 = icmp sgt i32 %33, 0, !dbg !14517
  %39 = select i1 %38, i32 %33, i32 0, !dbg !14517
  %40 = zext i32 %39 to i64, !dbg !14517
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.193(i64 noundef %40) #26, !dbg !14517
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !14518
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !14518
  br label %43, !dbg !14519

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !14520
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !14480, metadata !DIExpression()), !dbg !14485
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14521
  br i1 %45, label %30, label %29, !dbg !14486, !llvm.loop !14523
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.193(i64 noundef %0) unnamed_addr #5 !dbg !14525 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14527, metadata !DIExpression()), !dbg !14528
  call void @llvm.dbg.value(metadata i64 %0, metadata !14529, metadata !DIExpression()), !dbg !14544
  call void @llvm.dbg.value(metadata i32 1000, metadata !14532, metadata !DIExpression()), !dbg !14544
  call void @llvm.dbg.value(metadata i32 10000, metadata !14533, metadata !DIExpression()), !dbg !14544
  call void @llvm.dbg.value(metadata i8 1, metadata !14534, metadata !DIExpression()), !dbg !14544
  call void @llvm.dbg.value(metadata i8 0, metadata !14535, metadata !DIExpression()), !dbg !14544
  call void @llvm.dbg.value(metadata i8 1, metadata !14536, metadata !DIExpression()), !dbg !14544
  call void @llvm.dbg.value(metadata i8 0, metadata !14537, metadata !DIExpression()), !dbg !14544
  call void @llvm.dbg.value(metadata i8 1, metadata !14538, metadata !DIExpression()), !dbg !14544
  call void @llvm.dbg.value(metadata i8 0, metadata !14539, metadata !DIExpression()), !dbg !14544
  call void @llvm.dbg.value(metadata i64 0, metadata !14540, metadata !DIExpression()), !dbg !14544
  call void @llvm.dbg.value(metadata i64 0, metadata !14540, metadata !DIExpression()), !dbg !14544
  %2 = mul i64 %0, 10, !dbg !14546
  ret i64 %2, !dbg !14552
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !14553 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14555, metadata !DIExpression()), !dbg !14559
  call void @llvm.dbg.value(metadata i8* %1, metadata !14556, metadata !DIExpression()), !dbg !14559
  call void @llvm.dbg.value(metadata i8* %2, metadata !14557, metadata !DIExpression()), !dbg !14559
  call void @llvm.dbg.value(metadata i8* %3, metadata !14558, metadata !DIExpression()), !dbg !14559
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14560
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14561
  %7 = load i8, i8* %6, align 4, !dbg !14562
  %8 = or i8 %7, 4, !dbg !14562
  store i8 %8, i8* %6, align 4, !dbg !14562
  tail call void @z_thread_essential_clear() #26, !dbg !14563
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !14564
  unreachable, !dbg !14564
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !14565 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14569, metadata !DIExpression()), !dbg !14570
  ret i32 -134, !dbg !14571
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #5 !dbg !14572 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14576, metadata !DIExpression()), !dbg !14578
  call void @llvm.dbg.value(metadata i32 %1, metadata !14577, metadata !DIExpression()), !dbg !14578
  ret i32 -134, !dbg !14579
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #5 !dbg !14580 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14587, metadata !DIExpression()), !dbg !14589
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !14588, metadata !DIExpression()), !dbg !14589
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14590
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !14592
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14589
  ret i32 %6, !dbg !14593
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #5 !dbg !14594 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14598, metadata !DIExpression()), !dbg !14599
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !14600
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14599
  ret i32 %3, !dbg !14602
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14603 {
  tail call void @sys_clock_idle_exit() #27, !dbg !14605
  ret void, !dbg !14606
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !14607 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14609, metadata !DIExpression()), !dbg !14612
  call void @llvm.dbg.value(metadata i8* %1, metadata !14610, metadata !DIExpression()), !dbg !14612
  call void @llvm.dbg.value(metadata i8* %2, metadata !14611, metadata !DIExpression()), !dbg !14612
  br label %4, !dbg !14613

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14614, !srcloc !14621
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()) #25, !dbg !14622
  call void @llvm.dbg.value(metadata i32 undef, metadata !14618, metadata !DIExpression()) #25, !dbg !14622
  tail call fastcc void @k_cpu_idle() #26, !dbg !14623
  br label %4, !dbg !14613, !llvm.loop !14624
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14626 {
  tail call void @arch_cpu_idle() #27, !dbg !14627
  ret void, !dbg !14628
}

; Function Attrs: optsize
declare !dbg !14629 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #8 !dbg !14630 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14648, metadata !DIExpression()), !dbg !14652
  call void @llvm.dbg.value(metadata i8* %1, metadata !14649, metadata !DIExpression()), !dbg !14652
  call void @llvm.dbg.value(metadata i32 %2, metadata !14650, metadata !DIExpression()), !dbg !14652
  call void @llvm.dbg.value(metadata i32 %3, metadata !14651, metadata !DIExpression()), !dbg !14652
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14653
  store i32 %2, i32* %5, align 4, !dbg !14654
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !14655
  store i32 %3, i32* %6, align 4, !dbg !14656
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14657
  store i8* %1, i8** %7, align 4, !dbg !14658
  %8 = mul i32 %3, %2, !dbg !14659
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !14660
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14661
  store i8* %9, i8** %10, align 4, !dbg !14662
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14663
  store i8* %1, i8** %11, align 4, !dbg !14664
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14665
  store i8* %1, i8** %12, align 4, !dbg !14666
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14667
  store i32 0, i32* %13, align 4, !dbg !14668
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14669
  store i8 0, i8* %14, align 4, !dbg !14670
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14671
  tail call fastcc void @z_waitq_init.196(%struct._wait_q_t* noundef %15) #26, !dbg !14672
  ret void, !dbg !14673
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.196(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !14674 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14678, metadata !DIExpression()), !dbg !14679
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14680
  tail call fastcc void @sys_dlist_init.197(%struct._dnode* noundef %2) #26, !dbg !14681
  ret void, !dbg !14682
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.197(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14683 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14688, metadata !DIExpression()), !dbg !14689
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14690
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14691
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14692
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14693
  ret void, !dbg !14694
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14695 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14699, metadata !DIExpression()), !dbg !14705
  call void @llvm.dbg.value(metadata i32 %1, metadata !14700, metadata !DIExpression()), !dbg !14705
  call void @llvm.dbg.value(metadata i32 %2, metadata !14701, metadata !DIExpression()), !dbg !14705
  %5 = bitcast i32* %4 to i8*, !dbg !14706
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14706
  call void @llvm.dbg.value(metadata i32* %4, metadata !14704, metadata !DIExpression(DW_OP_deref)), !dbg !14705
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !14707
  br i1 %6, label %13, label %7, !dbg !14709

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !14710
  call void @llvm.dbg.value(metadata i32 %8, metadata !14704, metadata !DIExpression()), !dbg !14705
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #26, !dbg !14712
  call void @llvm.dbg.value(metadata i8* %9, metadata !14702, metadata !DIExpression()), !dbg !14705
  %10 = icmp eq i8* %9, null, !dbg !14713
  br i1 %10, label %13, label %11, !dbg !14715

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #26, !dbg !14716
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14718
  store i8 1, i8* %12, align 4, !dbg !14719
  call void @llvm.dbg.value(metadata i32 0, metadata !14703, metadata !DIExpression()), !dbg !14705
  br label %13, !dbg !14720

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !14721
  call void @llvm.dbg.value(metadata i32 %14, metadata !14703, metadata !DIExpression()), !dbg !14705
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14722
  ret i32 %14, !dbg !14723
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !14724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14729, metadata !DIExpression()), !dbg !14732
  call void @llvm.dbg.value(metadata i32 %1, metadata !14730, metadata !DIExpression()), !dbg !14732
  call void @llvm.dbg.value(metadata i32* %2, metadata !14731, metadata !DIExpression()), !dbg !14732
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !14733
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !14733
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !14733
  store i32 %6, i32* %2, align 4, !dbg !14733
  ret i1 %5, !dbg !14734
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !14735 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14739, metadata !DIExpression()), !dbg !14740
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #27, !dbg !14741
  ret i8* %2, !dbg !14742
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !14743 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14747, metadata !DIExpression()), !dbg !14748
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14749
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %2) #26, !dbg !14749
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !14749
  br i1 %4, label %5, label %15, !dbg !14751

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14752
  %7 = load i8, i8* %6, align 4, !dbg !14752
  %8 = and i8 %7, 1, !dbg !14754
  %9 = icmp eq i8 %8, 0, !dbg !14755
  br i1 %9, label %15, label %10, !dbg !14756

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14757
  %12 = load i8*, i8** %11, align 4, !dbg !14757
  tail call void @k_free(i8* noundef %12) #27, !dbg !14759
  %13 = load i8, i8* %6, align 4, !dbg !14760
  %14 = and i8 %13, -2, !dbg !14760
  store i8 %14, i8* %6, align 4, !dbg !14760
  br label %15, !dbg !14761

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !14748
  ret i32 %16, !dbg !14762
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #4 !dbg !14763 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14767, metadata !DIExpression()), !dbg !14768
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14769
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !14770
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !14771
  ret %struct.k_thread* %4, !dbg !14772
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14773 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14777, metadata !DIExpression()), !dbg !14778
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !14779
  br i1 %2, label %6, label %3, !dbg !14779

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14780
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14780
  br label %6, !dbg !14779

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14779
  ret %struct._dnode* %7, !dbg !14781
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !14782 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14786, metadata !DIExpression()), !dbg !14787
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14788
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14788
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14789
  ret i1 %4, !dbg !14790
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14791 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14801, metadata !DIExpression()), !dbg !14809
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14799, metadata !DIExpression()), !dbg !14809
  call void @llvm.dbg.value(metadata i8* %1, metadata !14800, metadata !DIExpression()), !dbg !14809
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !14810
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #25, !dbg !14818
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14820, !srcloc !14826
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !14820
  call void @llvm.dbg.value(metadata i32 %6, metadata !14823, metadata !DIExpression()) #25, !dbg !14827
  call void @llvm.dbg.value(metadata i32 undef, metadata !14824, metadata !DIExpression()) #25, !dbg !14827
  call void @llvm.dbg.value(metadata i32 %6, metadata !14817, metadata !DIExpression()) #25, !dbg !14818
  call void @llvm.dbg.value(metadata i32 %6, metadata !14803, metadata !DIExpression()), !dbg !14809
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14828
  %8 = load i32, i32* %7, align 4, !dbg !14828
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !14830
  %10 = load i32, i32* %9, align 4, !dbg !14830
  %11 = icmp ult i32 %8, %10, !dbg !14831
  br i1 %11, label %12, label %42, !dbg !14832

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14833
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %13) #27, !dbg !14835
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14802, metadata !DIExpression()), !dbg !14809
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !14836
  br i1 %15, label %24, label %16, !dbg !14838

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 0, i32 6, !dbg !14839
  %18 = load i8*, i8** %17, align 4, !dbg !14839
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14841
  %20 = load i32, i32* %19, align 4, !dbg !14841
  %21 = tail call i8* @memcpy(i8* noundef %18, i8* noundef %1, i32 noundef %20) #27, !dbg !14842
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14843, metadata !DIExpression()), !dbg !14849
  call void @llvm.dbg.value(metadata i32 0, metadata !14848, metadata !DIExpression()), !dbg !14849
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 7, i32 1, !dbg !14851
  store i32 0, i32* %22, align 4, !dbg !14852
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %14) #27, !dbg !14853
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14854
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %23) #27, !dbg !14854
  br label %53, !dbg !14855

24:                                               ; preds = %12
  %25 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14856
  %26 = load i8*, i8** %25, align 4, !dbg !14856
  %27 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14858
  %28 = load i32, i32* %27, align 4, !dbg !14858
  %29 = tail call i8* @memcpy(i8* noundef %26, i8* noundef %1, i32 noundef %28) #27, !dbg !14859
  %30 = load i32, i32* %27, align 4, !dbg !14860
  %31 = load i8*, i8** %25, align 4, !dbg !14861
  %32 = getelementptr inbounds i8, i8* %31, i32 %30, !dbg !14861
  store i8* %32, i8** %25, align 4, !dbg !14861
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14862
  %34 = load i8*, i8** %33, align 4, !dbg !14862
  %35 = icmp eq i8* %32, %34, !dbg !14864
  br i1 %35, label %36, label %39, !dbg !14865

36:                                               ; preds = %24
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14866
  %38 = load i8*, i8** %37, align 4, !dbg !14866
  store i8* %38, i8** %25, align 4, !dbg !14868
  br label %39, !dbg !14869

39:                                               ; preds = %36, %24
  %40 = load i32, i32* %7, align 4, !dbg !14870
  %41 = add i32 %40, 1, !dbg !14870
  store i32 %41, i32* %7, align 4, !dbg !14870
  call void @llvm.dbg.value(metadata i32 0, metadata !14808, metadata !DIExpression()), !dbg !14809
  br label %51, !dbg !14871

42:                                               ; preds = %3
  %43 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %43, metadata !14801, metadata !DIExpression()), !dbg !14809
  %44 = icmp eq i64 %43, 0, !dbg !14872
  br i1 %44, label %51, label %45, !dbg !14874

45:                                               ; preds = %42
  %46 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14875
  %47 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %46, i32 0, i32 0, i32 6, !dbg !14877
  store i8* %1, i8** %47, align 4, !dbg !14878
  %48 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14879
  %49 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14880
  %50 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %49, %struct._wait_q_t* noundef %48, [1 x i64] %2) #27, !dbg !14880
  call void @llvm.dbg.value(metadata i32 %50, metadata !14808, metadata !DIExpression()), !dbg !14809
  br label %53, !dbg !14881

51:                                               ; preds = %42, %39
  %52 = phi i32 [ 0, %39 ], [ -35, %42 ], !dbg !14882
  call void @llvm.dbg.value(metadata i32 %52, metadata !14808, metadata !DIExpression()), !dbg !14809
  call void @llvm.dbg.value(metadata i32 %6, metadata !14883, metadata !DIExpression()) #25, !dbg !14889
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14888, metadata !DIExpression()) #25, !dbg !14889
  call void @llvm.dbg.value(metadata i32 %6, metadata !14891, metadata !DIExpression()) #25, !dbg !14894
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !14896, !srcloc !14897
  br label %53, !dbg !14898

53:                                               ; preds = %51, %45, %16
  %54 = phi i32 [ 0, %16 ], [ %52, %51 ], [ %50, %45 ], !dbg !14809
  ret i32 %54, !dbg !14899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #9 !dbg !14900 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14910, metadata !DIExpression()), !dbg !14912
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14911, metadata !DIExpression()), !dbg !14912
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14913
  %4 = load i32, i32* %3, align 4, !dbg !14913
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14914
  store i32 %4, i32* %5, align 4, !dbg !14915
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !14916
  %7 = load i32, i32* %6, align 4, !dbg !14916
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14917
  store i32 %7, i32* %8, align 4, !dbg !14918
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14919
  %10 = load i32, i32* %9, align 4, !dbg !14919
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14920
  store i32 %10, i32* %11, align 4, !dbg !14921
  ret void, !dbg !14922
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14923 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14929, metadata !DIExpression()), !dbg !14933
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14927, metadata !DIExpression()), !dbg !14933
  call void @llvm.dbg.value(metadata i8* %1, metadata !14928, metadata !DIExpression()), !dbg !14933
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !14934
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #25, !dbg !14935
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14937, !srcloc !14826
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !14937
  call void @llvm.dbg.value(metadata i32 %6, metadata !14823, metadata !DIExpression()) #25, !dbg !14939
  call void @llvm.dbg.value(metadata i32 undef, metadata !14824, metadata !DIExpression()) #25, !dbg !14939
  call void @llvm.dbg.value(metadata i32 %6, metadata !14817, metadata !DIExpression()) #25, !dbg !14935
  call void @llvm.dbg.value(metadata i32 %6, metadata !14930, metadata !DIExpression()), !dbg !14933
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14940
  %8 = load i32, i32* %7, align 4, !dbg !14940
  %9 = icmp eq i32 %8, 0, !dbg !14942
  br i1 %9, label %51, label %10, !dbg !14943

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14944
  %12 = load i8*, i8** %11, align 4, !dbg !14944
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14946
  %14 = load i32, i32* %13, align 4, !dbg !14946
  %15 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %12, i32 noundef %14) #27, !dbg !14947
  %16 = load i32, i32* %13, align 4, !dbg !14948
  %17 = load i8*, i8** %11, align 4, !dbg !14949
  %18 = getelementptr inbounds i8, i8* %17, i32 %16, !dbg !14949
  store i8* %18, i8** %11, align 4, !dbg !14949
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14950
  %20 = load i8*, i8** %19, align 4, !dbg !14950
  %21 = icmp eq i8* %18, %20, !dbg !14952
  br i1 %21, label %22, label %25, !dbg !14953

22:                                               ; preds = %10
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14954
  %24 = load i8*, i8** %23, align 4, !dbg !14954
  store i8* %24, i8** %11, align 4, !dbg !14956
  br label %25, !dbg !14957

25:                                               ; preds = %22, %10
  %26 = load i32, i32* %7, align 4, !dbg !14958
  %27 = add i32 %26, -1, !dbg !14958
  store i32 %27, i32* %7, align 4, !dbg !14958
  %28 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14959
  %29 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %28) #27, !dbg !14960
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !14931, metadata !DIExpression()), !dbg !14933
  %30 = icmp eq %struct.k_thread* %29, null, !dbg !14961
  br i1 %30, label %60, label %31, !dbg !14963

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14964
  %33 = load i8*, i8** %32, align 4, !dbg !14964
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 0, i32 6, !dbg !14966
  %35 = load i8*, i8** %34, align 4, !dbg !14966
  %36 = load i32, i32* %13, align 4, !dbg !14967
  %37 = tail call i8* @memcpy(i8* noundef %33, i8* noundef %35, i32 noundef %36) #27, !dbg !14968
  %38 = load i32, i32* %13, align 4, !dbg !14969
  %39 = load i8*, i8** %32, align 4, !dbg !14970
  %40 = getelementptr inbounds i8, i8* %39, i32 %38, !dbg !14970
  store i8* %40, i8** %32, align 4, !dbg !14970
  %41 = load i8*, i8** %19, align 4, !dbg !14971
  %42 = icmp eq i8* %40, %41, !dbg !14973
  br i1 %42, label %43, label %46, !dbg !14974

43:                                               ; preds = %31
  %44 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14975
  %45 = load i8*, i8** %44, align 4, !dbg !14975
  store i8* %45, i8** %32, align 4, !dbg !14977
  br label %46, !dbg !14978

46:                                               ; preds = %43, %31
  %47 = load i32, i32* %7, align 4, !dbg !14979
  %48 = add i32 %47, 1, !dbg !14979
  store i32 %48, i32* %7, align 4, !dbg !14979
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !14843, metadata !DIExpression()), !dbg !14980
  call void @llvm.dbg.value(metadata i32 0, metadata !14848, metadata !DIExpression()), !dbg !14980
  %49 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 7, i32 1, !dbg !14982
  store i32 0, i32* %49, align 4, !dbg !14983
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %29) #27, !dbg !14984
  %50 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14985
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %50) #27, !dbg !14985
  br label %62, !dbg !14986

51:                                               ; preds = %3
  %52 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %52, metadata !14929, metadata !DIExpression()), !dbg !14933
  %53 = icmp eq i64 %52, 0, !dbg !14987
  br i1 %53, label %60, label %54, !dbg !14989

54:                                               ; preds = %51
  %55 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14990
  %56 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %55, i32 0, i32 0, i32 6, !dbg !14992
  store i8* %1, i8** %56, align 4, !dbg !14993
  %57 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14994
  %58 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14995
  %59 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %58, %struct._wait_q_t* noundef %57, [1 x i64] %2) #27, !dbg !14995
  call void @llvm.dbg.value(metadata i32 %59, metadata !14932, metadata !DIExpression()), !dbg !14933
  br label %62, !dbg !14996

60:                                               ; preds = %51, %25
  %61 = phi i32 [ 0, %25 ], [ -35, %51 ], !dbg !14997
  call void @llvm.dbg.value(metadata i32 %61, metadata !14932, metadata !DIExpression()), !dbg !14933
  call void @llvm.dbg.value(metadata i32 %6, metadata !14883, metadata !DIExpression()) #25, !dbg !14998
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14888, metadata !DIExpression()) #25, !dbg !14998
  call void @llvm.dbg.value(metadata i32 %6, metadata !14891, metadata !DIExpression()) #25, !dbg !15000
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !15002, !srcloc !14897
  br label %62, !dbg !15003

62:                                               ; preds = %60, %54, %46
  %63 = phi i32 [ 0, %46 ], [ %61, %60 ], [ %59, %54 ], !dbg !14933
  ret i32 %63, !dbg !15004
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !15005 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15009, metadata !DIExpression()), !dbg !15013
  call void @llvm.dbg.value(metadata i8* %1, metadata !15010, metadata !DIExpression()), !dbg !15013
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #25, !dbg !15014
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15016, !srcloc !14826
  call void @llvm.dbg.value(metadata i32 undef, metadata !14823, metadata !DIExpression()) #25, !dbg !15018
  call void @llvm.dbg.value(metadata i32 undef, metadata !14824, metadata !DIExpression()) #25, !dbg !15018
  call void @llvm.dbg.value(metadata i32 undef, metadata !14817, metadata !DIExpression()) #25, !dbg !15014
  call void @llvm.dbg.value(metadata i32 undef, metadata !15011, metadata !DIExpression()), !dbg !15013
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15019
  %5 = load i32, i32* %4, align 4, !dbg !15019
  %6 = icmp eq i32 %5, 0, !dbg !15021
  br i1 %6, label %13, label %7, !dbg !15022

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15023
  %9 = load i8*, i8** %8, align 4, !dbg !15023
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15025
  %11 = load i32, i32* %10, align 4, !dbg !15025
  %12 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %9, i32 noundef %11) #27, !dbg !15026
  call void @llvm.dbg.value(metadata i32 0, metadata !15012, metadata !DIExpression()), !dbg !15013
  br label %13, !dbg !15027

13:                                               ; preds = %2, %7
  %14 = phi i32 [ 0, %7 ], [ -35, %2 ], !dbg !15028
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !15016
  call void @llvm.dbg.value(metadata i32 %15, metadata !14823, metadata !DIExpression()) #25, !dbg !15018
  call void @llvm.dbg.value(metadata i32 %15, metadata !14817, metadata !DIExpression()) #25, !dbg !15014
  call void @llvm.dbg.value(metadata i32 %15, metadata !15011, metadata !DIExpression()), !dbg !15013
  call void @llvm.dbg.value(metadata i32 %14, metadata !15012, metadata !DIExpression()), !dbg !15013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14883, metadata !DIExpression()) #25, !dbg !15029
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14888, metadata !DIExpression()) #25, !dbg !15029
  call void @llvm.dbg.value(metadata i32 undef, metadata !14891, metadata !DIExpression()) #25, !dbg !15031
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !15033, !srcloc !14897
  ret i32 %14, !dbg !15034
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !15035 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15039, metadata !DIExpression()), !dbg !15042
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14811, metadata !DIExpression()) #25, !dbg !15043
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15045, !srcloc !14826
  call void @llvm.dbg.value(metadata i32 undef, metadata !14823, metadata !DIExpression()) #25, !dbg !15047
  call void @llvm.dbg.value(metadata i32 undef, metadata !14824, metadata !DIExpression()) #25, !dbg !15047
  call void @llvm.dbg.value(metadata i32 undef, metadata !14817, metadata !DIExpression()) #25, !dbg !15043
  call void @llvm.dbg.value(metadata i32 undef, metadata !15040, metadata !DIExpression()), !dbg !15042
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #27, !dbg !15048
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15041, metadata !DIExpression()), !dbg !15042
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15049
  br i1 %5, label %11, label %6, !dbg !15050

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14843, metadata !DIExpression()), !dbg !15051
  call void @llvm.dbg.value(metadata i32 -35, metadata !14848, metadata !DIExpression()), !dbg !15051
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !15054
  store i32 -35, i32* %8, align 4, !dbg !15055
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #27, !dbg !15056
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #27, !dbg !15048
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15041, metadata !DIExpression()), !dbg !15042
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !15049
  br i1 %10, label %11, label %6, !dbg !15050, !llvm.loop !15057

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !15045
  call void @llvm.dbg.value(metadata i32 %12, metadata !14823, metadata !DIExpression()) #25, !dbg !15047
  call void @llvm.dbg.value(metadata i32 %12, metadata !14817, metadata !DIExpression()) #25, !dbg !15043
  call void @llvm.dbg.value(metadata i32 %12, metadata !15040, metadata !DIExpression()), !dbg !15042
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15059
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15060
  store i32 0, i32* %14, align 4, !dbg !15061
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15062
  %16 = load i8*, i8** %15, align 4, !dbg !15062
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15063
  store i8* %16, i8** %17, align 4, !dbg !15064
  %18 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !15065
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %13, [1 x i32] %18) #27, !dbg !15065
  ret void, !dbg !15066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #8 !dbg !15067 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15078, metadata !DIExpression()), !dbg !15079
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15080
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !15081
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15082
  store i32 0, i32* %3, align 4, !dbg !15083
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15084
  tail call fastcc void @z_waitq_init.202(%struct._wait_q_t* noundef %4) #26, !dbg !15085
  ret i32 0, !dbg !15086
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.202(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !15087 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15091, metadata !DIExpression()), !dbg !15092
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15093
  tail call fastcc void @sys_dlist_init.203(%struct._dnode* noundef %2) #26, !dbg !15094
  ret void, !dbg !15095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.203(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !15096 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15101, metadata !DIExpression()), !dbg !15102
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15103
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15104
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15105
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15106
  ret void, !dbg !15107
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15108 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15117, metadata !DIExpression()), !dbg !15129
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15116, metadata !DIExpression()), !dbg !15129
  call void @llvm.dbg.value(metadata i8 0, metadata !15124, metadata !DIExpression()), !dbg !15129
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15130, metadata !DIExpression()) #25, !dbg !15137
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15139, !srcloc !15145
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15139
  call void @llvm.dbg.value(metadata i32 %5, metadata !15142, metadata !DIExpression()) #25, !dbg !15146
  call void @llvm.dbg.value(metadata i32 undef, metadata !15143, metadata !DIExpression()) #25, !dbg !15146
  call void @llvm.dbg.value(metadata i32 %5, metadata !15136, metadata !DIExpression()) #25, !dbg !15137
  call void @llvm.dbg.value(metadata i32 %5, metadata !15119, metadata !DIExpression()), !dbg !15129
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15147
  %7 = load i32, i32* %6, align 4, !dbg !15147
  %8 = icmp eq i32 %7, 0, !dbg !15147
  br i1 %8, label %14, label %9, !dbg !15147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15147
  %11 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !15147
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15147
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15147
  br i1 %13, label %20, label %29, !dbg !15149, !prof !15150

14:                                               ; preds = %2
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15151
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 0, i32 4, !dbg !15153
  %17 = bitcast %union.anon.2* %16 to i8*, !dbg !15153
  %18 = load i8, i8* %17, align 2, !dbg !15153
  %19 = sext i8 %18 to i32, !dbg !15151
  br label %23, !dbg !15154

20:                                               ; preds = %9
  %21 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15155
  %22 = load i32, i32* %21, align 4, !dbg !15155
  br label %23, !dbg !15154

23:                                               ; preds = %20, %14
  %24 = phi %struct.k_thread* [ %15, %14 ], [ %11, %20 ], !dbg !15156
  %25 = phi i32 [ %19, %14 ], [ %22, %20 ], !dbg !15154
  %26 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15157
  store i32 %25, i32* %26, align 4, !dbg !15158
  %27 = add i32 %7, 1, !dbg !15159
  store i32 %27, i32* %6, align 4, !dbg !15159
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15160
  store %struct.k_thread* %24, %struct.k_thread** %28, align 4, !dbg !15161
  call void @llvm.dbg.value(metadata i32 %5, metadata !15162, metadata !DIExpression()) #25, !dbg !15168
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15167, metadata !DIExpression()) #25, !dbg !15168
  call void @llvm.dbg.value(metadata i32 %5, metadata !15170, metadata !DIExpression()) #25, !dbg !15173
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !15175, !srcloc !15176
  br label %78, !dbg !15177

29:                                               ; preds = %9
  %30 = icmp eq i64 %3, 0, !dbg !15178
  br i1 %30, label %31, label %32, !dbg !15180, !prof !15181

31:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %5, metadata !15162, metadata !DIExpression()) #25, !dbg !15182
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15167, metadata !DIExpression()) #25, !dbg !15182
  call void @llvm.dbg.value(metadata i32 %5, metadata !15170, metadata !DIExpression()) #25, !dbg !15185
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !15187, !srcloc !15176
  br label %78, !dbg !15188

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %12, i32 0, i32 0, i32 4, !dbg !15189
  %34 = bitcast %union.anon.2* %33 to i8*, !dbg !15189
  %35 = load i8, i8* %34, align 2, !dbg !15189
  %36 = sext i8 %35 to i32, !dbg !15190
  %37 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 0, i32 4, !dbg !15191
  %38 = bitcast %union.anon.2* %37 to i8*, !dbg !15191
  %39 = load i8, i8* %38, align 2, !dbg !15191
  %40 = sext i8 %39 to i32, !dbg !15192
  %41 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %36, i32 noundef %40) #26, !dbg !15193
  call void @llvm.dbg.value(metadata i32 %41, metadata !15118, metadata !DIExpression()), !dbg !15129
  %42 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %41, i32 noundef %40) #26, !dbg !15194
  br i1 %42, label %43, label %45, !dbg !15196

43:                                               ; preds = %32
  %44 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %41) #26, !dbg !15197
  call void @llvm.dbg.value(metadata i1 %44, metadata !15124, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15129
  br label %45, !dbg !15199

45:                                               ; preds = %43, %32
  %46 = phi i1 [ %44, %43 ], [ false, %32 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !15124, metadata !DIExpression()), !dbg !15129
  %47 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15200
  %48 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !15201
  %49 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %48, %struct._wait_q_t* noundef %47, [1 x i64] %1) #27, !dbg !15201
  call void @llvm.dbg.value(metadata i32 %49, metadata !15125, metadata !DIExpression()), !dbg !15129
  %50 = icmp eq i32 %49, 0, !dbg !15202
  br i1 %50, label %78, label %51, !dbg !15204

51:                                               ; preds = %45
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15130, metadata !DIExpression()) #25, !dbg !15205
  %52 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15207, !srcloc !15145
  %53 = extractvalue { i32, i32 } %52, 0, !dbg !15207
  call void @llvm.dbg.value(metadata i32 %53, metadata !15142, metadata !DIExpression()) #25, !dbg !15209
  call void @llvm.dbg.value(metadata i32 undef, metadata !15143, metadata !DIExpression()) #25, !dbg !15209
  call void @llvm.dbg.value(metadata i32 %53, metadata !15136, metadata !DIExpression()) #25, !dbg !15205
  call void @llvm.dbg.value(metadata i32 %53, metadata !15119, metadata !DIExpression()), !dbg !15129
  %54 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !15210
  %55 = icmp eq %struct.k_thread* %54, null, !dbg !15210
  br i1 %55, label %74, label %56, !dbg !15211, !prof !15181

56:                                               ; preds = %51
  %57 = tail call fastcc %struct.k_thread* @z_waitq_head.206(%struct._wait_q_t* noundef nonnull %47) #26, !dbg !15212
  call void @llvm.dbg.value(metadata %struct.k_thread* %57, metadata !15126, metadata !DIExpression()), !dbg !15213
  %58 = icmp eq %struct.k_thread* %57, null, !dbg !15214
  br i1 %58, label %67, label %59, !dbg !15215

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %57, i32 0, i32 0, i32 4, !dbg !15216
  %61 = bitcast %union.anon.2* %60 to i8*, !dbg !15216
  %62 = load i8, i8* %61, align 2, !dbg !15216
  %63 = sext i8 %62 to i32, !dbg !15217
  %64 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15218
  %65 = load i32, i32* %64, align 4, !dbg !15218
  %66 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %63, i32 noundef %65) #26, !dbg !15219
  br label %70, !dbg !15215

67:                                               ; preds = %56
  %68 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15220
  %69 = load i32, i32* %68, align 4, !dbg !15220
  br label %70, !dbg !15215

70:                                               ; preds = %67, %59
  %71 = phi i32 [ %66, %59 ], [ %69, %67 ], !dbg !15215
  call void @llvm.dbg.value(metadata i32 %71, metadata !15118, metadata !DIExpression()), !dbg !15129
  %72 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %71) #26, !dbg !15221
  %73 = select i1 %72, i1 true, i1 %46, !dbg !15222
  call void @llvm.dbg.value(metadata i1 %73, metadata !15124, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15129
  call void @llvm.dbg.value(metadata i8 poison, metadata !15124, metadata !DIExpression()), !dbg !15129
  br i1 %73, label %75, label %77, !dbg !15223

74:                                               ; preds = %51
  call void @llvm.dbg.value(metadata i8 poison, metadata !15124, metadata !DIExpression()), !dbg !15129
  br i1 %46, label %75, label %77, !dbg !15223

75:                                               ; preds = %70, %74
  %76 = insertvalue [1 x i32] poison, i32 %53, 0, !dbg !15224
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %76) #27, !dbg !15224
  br label %78, !dbg !15227

77:                                               ; preds = %70, %74
  call void @llvm.dbg.value(metadata i32 %53, metadata !15162, metadata !DIExpression()) #25, !dbg !15228
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15167, metadata !DIExpression()) #25, !dbg !15228
  call void @llvm.dbg.value(metadata i32 %53, metadata !15170, metadata !DIExpression()) #25, !dbg !15231
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %53) #25, !dbg !15233, !srcloc !15176
  br label %78

78:                                               ; preds = %45, %75, %77, %31, %23
  %79 = phi i32 [ 0, %23 ], [ -16, %31 ], [ 0, %45 ], [ -11, %75 ], [ -11, %77 ], !dbg !15129
  ret i32 %79, !dbg !15234
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15235 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15239, metadata !DIExpression()), !dbg !15242
  call void @llvm.dbg.value(metadata i32 %1, metadata !15240, metadata !DIExpression()), !dbg !15242
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #26, !dbg !15243
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !15243
  call void @llvm.dbg.value(metadata i32 %4, metadata !15241, metadata !DIExpression()), !dbg !15242
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #26, !dbg !15244
  call void @llvm.dbg.value(metadata i32 %5, metadata !15241, metadata !DIExpression()), !dbg !15242
  ret i32 %5, !dbg !15245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15246 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15250, metadata !DIExpression()), !dbg !15252
  call void @llvm.dbg.value(metadata i32 %1, metadata !15251, metadata !DIExpression()), !dbg !15252
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !15253
  ret i1 %3, !dbg !15254
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !15255 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15259, metadata !DIExpression()), !dbg !15261
  call void @llvm.dbg.value(metadata i32 %1, metadata !15260, metadata !DIExpression()), !dbg !15261
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15262
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !15262
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !15264
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !15264
  %7 = load i8, i8* %6, align 2, !dbg !15264
  %8 = sext i8 %7 to i32, !dbg !15265
  %9 = icmp eq i32 %8, %1, !dbg !15266
  br i1 %9, label %12, label %10, !dbg !15267

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #27, !dbg !15268
  br label %12, !dbg !15270

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !15261
  ret i1 %13, !dbg !15271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.206(%struct._wait_q_t* noundef readonly %0) unnamed_addr #4 !dbg !15272 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15276, metadata !DIExpression()), !dbg !15277
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15278
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.207(%struct._dnode* noundef %2) #26, !dbg !15279
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15280
  ret %struct.k_thread* %4, !dbg !15281
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.207(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15282 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15286, metadata !DIExpression()), !dbg !15287
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.208(%struct._dnode* noundef %0) #26, !dbg !15288
  br i1 %2, label %6, label %3, !dbg !15288

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15289
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15289
  br label %6, !dbg !15288

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15288
  ret %struct._dnode* %7, !dbg !15290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.208(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !15291 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15295, metadata !DIExpression()), !dbg !15296
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15297
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15297
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15298
  ret i1 %4, !dbg !15299
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15302, metadata !DIExpression()), !dbg !15304
  call void @llvm.dbg.value(metadata i32 %1, metadata !15303, metadata !DIExpression()), !dbg !15304
  %3 = icmp slt i32 %0, %1, !dbg !15305
  ret i1 %3, !dbg !15306
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #5 !dbg !15307 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15309, metadata !DIExpression()), !dbg !15310
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #26, !dbg !15311
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !15311
  ret i32 %3, !dbg !15312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #5 !dbg !15313 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15317, metadata !DIExpression()), !dbg !15318
  %2 = icmp sgt i32 %0, -128, !dbg !15319
  ret i1 %2, !dbg !15320
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !15321 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15323, metadata !DIExpression()), !dbg !15327
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15328
  %3 = load %struct.k_thread*, %struct.k_thread** %2, align 4, !dbg !15328
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !15328
  br i1 %4, label %31, label %5, !dbg !15330

5:                                                ; preds = %1
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15331
  %7 = icmp eq %struct.k_thread* %3, %6, !dbg !15331
  br i1 %7, label %8, label %31, !dbg !15333

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15334
  %10 = load i32, i32* %9, align 4, !dbg !15334
  %11 = icmp ugt i32 %10, 1, !dbg !15336
  br i1 %11, label %12, label %14, !dbg !15337

12:                                               ; preds = %8
  %13 = add i32 %10, -1, !dbg !15338
  store i32 %13, i32* %9, align 4, !dbg !15338
  br label %31, !dbg !15340

14:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15130, metadata !DIExpression()) #25, !dbg !15341
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15343, !srcloc !15145
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !15343
  call void @llvm.dbg.value(metadata i32 %16, metadata !15142, metadata !DIExpression()) #25, !dbg !15345
  call void @llvm.dbg.value(metadata i32 undef, metadata !15143, metadata !DIExpression()) #25, !dbg !15345
  call void @llvm.dbg.value(metadata i32 %16, metadata !15136, metadata !DIExpression()) #25, !dbg !15341
  call void @llvm.dbg.value(metadata i32 %16, metadata !15325, metadata !DIExpression()), !dbg !15327
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15346
  %18 = load i32, i32* %17, align 4, !dbg !15346
  %19 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %18) #26, !dbg !15347
  %20 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15348
  %21 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %20) #27, !dbg !15349
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !15324, metadata !DIExpression()), !dbg !15327
  store %struct.k_thread* %21, %struct.k_thread** %2, align 4, !dbg !15350
  %22 = icmp eq %struct.k_thread* %21, null, !dbg !15351
  br i1 %22, label %30, label %23, !dbg !15353

23:                                               ; preds = %14
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 0, i32 4, !dbg !15354
  %25 = bitcast %union.anon.2* %24 to i8*, !dbg !15354
  %26 = load i8, i8* %25, align 2, !dbg !15354
  %27 = sext i8 %26 to i32, !dbg !15356
  store i32 %27, i32* %17, align 4, !dbg !15357
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !15358, metadata !DIExpression()), !dbg !15364
  call void @llvm.dbg.value(metadata i32 0, metadata !15363, metadata !DIExpression()), !dbg !15364
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 7, i32 1, !dbg !15366
  store i32 0, i32* %28, align 4, !dbg !15367
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %21) #27, !dbg !15368
  %29 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15369
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %29) #27, !dbg !15369
  br label %31, !dbg !15370

30:                                               ; preds = %14
  store i32 0, i32* %9, align 4, !dbg !15371
  call void @llvm.dbg.value(metadata i32 %16, metadata !15162, metadata !DIExpression()) #25, !dbg !15373
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15167, metadata !DIExpression()) #25, !dbg !15373
  call void @llvm.dbg.value(metadata i32 %16, metadata !15170, metadata !DIExpression()) #25, !dbg !15375
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !15377, !srcloc !15176
  br label %31

31:                                               ; preds = %23, %30, %12, %5, %1
  %32 = phi i32 [ -22, %1 ], [ -1, %5 ], [ 0, %12 ], [ 0, %30 ], [ 0, %23 ], !dbg !15327
  ret i32 %32, !dbg !15378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !15379 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15383, metadata !DIExpression()), !dbg !15387
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15384, metadata !DIExpression()), !dbg !15387
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15388
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !15388
  %5 = load i8, i8* %4, align 2, !dbg !15388
  call void @llvm.dbg.value(metadata i8 %5, metadata !15385, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15387
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15389
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !15389
  %8 = load i8, i8* %7, align 2, !dbg !15389
  call void @llvm.dbg.value(metadata i8 %8, metadata !15386, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15387
  %9 = icmp eq i8 %8, %5, !dbg !15390
  %10 = sext i8 %5 to i32, !dbg !15392
  %11 = sext i8 %8 to i32, !dbg !15392
  %12 = sub nsw i32 %11, %10, !dbg !15392
  %13 = select i1 %9, i32 0, i32 %12, !dbg !15392
  ret i32 %13, !dbg !15393
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !15394 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15398, metadata !DIExpression()), !dbg !15399
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !15400
  %3 = icmp eq i32 %2, 0, !dbg !15402
  br i1 %3, label %8, label %4, !dbg !15403

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !15404
  %6 = add i32 %5, %2, !dbg !15406
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15407
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !15408
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !15409
  br label %8, !dbg !15410

8:                                                ; preds = %4, %1
  ret void, !dbg !15411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #4 !dbg !15412 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15416, metadata !DIExpression()), !dbg !15418
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !15419
  call void @llvm.dbg.value(metadata i32 %1, metadata !15417, metadata !DIExpression()), !dbg !15418
  ret i32 %1, !dbg !15420
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15421 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15425, metadata !DIExpression()), !dbg !15434
  call void @llvm.dbg.value(metadata i32 %1, metadata !15426, metadata !DIExpression()), !dbg !15434
  call void @llvm.dbg.value(metadata i32 0, metadata !15427, metadata !DIExpression()), !dbg !15435
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15436, metadata !DIExpression()) #25, !dbg !15443
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15445, !srcloc !15451
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15445
  call void @llvm.dbg.value(metadata i32 %4, metadata !15448, metadata !DIExpression()) #25, !dbg !15452
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #25, !dbg !15452
  call void @llvm.dbg.value(metadata i32 %4, metadata !15442, metadata !DIExpression()) #25, !dbg !15443
  call void @llvm.dbg.value(metadata i32 %4, metadata !15433, metadata !DIExpression()), !dbg !15435
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()), !dbg !15435
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15453
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !15456
  %6 = icmp sgt i32 %0, 0, !dbg !15457
  %7 = icmp sgt i32 %5, 2, !dbg !15459
  %8 = select i1 %7, i32 %5, i32 2, !dbg !15459
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !15459
  store i32 %9, i32* @slice_ticks, align 4, !dbg !15460
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !15461
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15462
  call void @llvm.dbg.value(metadata i32 %4, metadata !15463, metadata !DIExpression()) #25, !dbg !15469
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15468, metadata !DIExpression()) #25, !dbg !15469
  call void @llvm.dbg.value(metadata i32 %4, metadata !15471, metadata !DIExpression()) #25, !dbg !15474
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !15476, !srcloc !15477
  call void @llvm.dbg.value(metadata i32 1, metadata !15427, metadata !DIExpression()), !dbg !15435
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()), !dbg !15435
  ret void, !dbg !15478
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #5 !dbg !15479 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15481, metadata !DIExpression()), !dbg !15482
  call void @llvm.dbg.value(metadata i32 %0, metadata !15483, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15498
  call void @llvm.dbg.value(metadata i32 1000, metadata !15486, metadata !DIExpression()), !dbg !15498
  call void @llvm.dbg.value(metadata i32 10000, metadata !15487, metadata !DIExpression()), !dbg !15498
  call void @llvm.dbg.value(metadata i8 1, metadata !15488, metadata !DIExpression()), !dbg !15498
  call void @llvm.dbg.value(metadata i1 true, metadata !15489, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15498
  call void @llvm.dbg.value(metadata i1 true, metadata !15490, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15498
  call void @llvm.dbg.value(metadata i8 0, metadata !15491, metadata !DIExpression()), !dbg !15498
  call void @llvm.dbg.value(metadata i1 true, metadata !15492, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15498
  call void @llvm.dbg.value(metadata i1 false, metadata !15493, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15498
  call void @llvm.dbg.value(metadata i64 0, metadata !15494, metadata !DIExpression()), !dbg !15498
  call void @llvm.dbg.value(metadata i64 0, metadata !15494, metadata !DIExpression()), !dbg !15498
  %2 = mul i32 %0, 10, !dbg !15500
  ret i32 %2, !dbg !15506
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !15507 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15509, metadata !DIExpression()), !dbg !15511
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15436, metadata !DIExpression()) #25, !dbg !15512
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15514, !srcloc !15451
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15514
  call void @llvm.dbg.value(metadata i32 %3, metadata !15448, metadata !DIExpression()) #25, !dbg !15516
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #25, !dbg !15516
  call void @llvm.dbg.value(metadata i32 %3, metadata !15442, metadata !DIExpression()) #25, !dbg !15512
  call void @llvm.dbg.value(metadata i32 %3, metadata !15510, metadata !DIExpression()), !dbg !15511
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15517
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15519
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !15520
  br i1 %6, label %7, label %8, !dbg !15521

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15522
  call void @llvm.dbg.value(metadata i32 %3, metadata !15463, metadata !DIExpression()) #25, !dbg !15524
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15468, metadata !DIExpression()) #25, !dbg !15524
  call void @llvm.dbg.value(metadata i32 %3, metadata !15471, metadata !DIExpression()) #25, !dbg !15526
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15528, !srcloc !15477
  br label %24, !dbg !15529

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15530
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !15531
  %10 = icmp eq i32 %9, 0, !dbg !15531
  br i1 %10, label %21, label %11, !dbg !15533

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !15534
  br i1 %12, label %13, label %21, !dbg !15535

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15536
  %15 = icmp sgt i32 %14, %0, !dbg !15539
  br i1 %15, label %19, label %16, !dbg !15540

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15541
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !15541
  call void @llvm.dbg.value(metadata i32 %18, metadata !15510, metadata !DIExpression()), !dbg !15511
  br label %22, !dbg !15543

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !15544
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15544
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15546
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !15511
  call void @llvm.dbg.value(metadata i32 %23, metadata !15510, metadata !DIExpression()), !dbg !15511
  call void @llvm.dbg.value(metadata i32 %23, metadata !15463, metadata !DIExpression()) #25, !dbg !15548
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15468, metadata !DIExpression()) #25, !dbg !15548
  call void @llvm.dbg.value(metadata i32 %23, metadata !15471, metadata !DIExpression()) #25, !dbg !15550
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !15552, !srcloc !15477
  br label %24, !dbg !15553

24:                                               ; preds = %22, %7
  ret void, !dbg !15553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !15554 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15558, metadata !DIExpression()), !dbg !15560
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !15561
  %3 = icmp eq i32 %2, 0, !dbg !15561
  br i1 %3, label %16, label %4, !dbg !15562

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15563
  br i1 %5, label %16, label %6, !dbg !15564

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15565
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !15565
  %9 = load i8, i8* %8, align 2, !dbg !15565
  %10 = sext i8 %9 to i32, !dbg !15566
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !15567
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.214(i32 noundef %10, i32 noundef %11) #26, !dbg !15568
  br i1 %12, label %16, label %13, !dbg !15569

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !15570
  %15 = xor i1 %14, true, !dbg !15571
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !15560
  call void @llvm.dbg.value(metadata i1 %17, metadata !15559, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15560
  ret i1 %17, !dbg !15572
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !15573 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15577, metadata !DIExpression()), !dbg !15579
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15580
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15578, metadata !DIExpression()), !dbg !15579
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !15581
  br i1 %3, label %5, label %4, !dbg !15583

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !15584
  br label %5, !dbg !15586

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !15577, metadata !DIExpression()), !dbg !15579
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15587
  ret i32 %6, !dbg !15588
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15589 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15591, metadata !DIExpression()), !dbg !15593
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15594
  %3 = load i8, i8* %2, align 1, !dbg !15594
  call void @llvm.dbg.value(metadata i8 %3, metadata !15592, metadata !DIExpression()), !dbg !15593
  %4 = and i8 %3, 31, !dbg !15595
  %5 = icmp ne i8 %4, 0, !dbg !15596
  ret i1 %5, !dbg !15597
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15598 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15600, metadata !DIExpression()), !dbg !15601
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15602
  br i1 %2, label %3, label %7, !dbg !15604

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15605, metadata !DIExpression()) #25, !dbg !15608
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15611
  %5 = load i8, i8* %4, align 1, !dbg !15612
  %6 = and i8 %5, 127, !dbg !15612
  store i8 %6, i8* %4, align 1, !dbg !15612
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15613, metadata !DIExpression()) #25, !dbg !15616
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15620
  br label %7, !dbg !15621

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15622, metadata !DIExpression()) #25, !dbg !15625
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15627
  %9 = load i8, i8* %8, align 1, !dbg !15628
  %10 = or i8 %9, -128, !dbg !15628
  store i8 %10, i8* %8, align 1, !dbg !15628
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15629, metadata !DIExpression()) #25, !dbg !15632
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15636, metadata !DIExpression()) #25, !dbg !15644
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15642, metadata !DIExpression()) #25, !dbg !15644
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.211(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15646
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !15643, metadata !DIExpression()) #25, !dbg !15644
  %12 = icmp eq %struct._dnode* %11, null, !dbg !15648
  br i1 %12, label %23, label %13, !dbg !15646

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !15643, metadata !DIExpression()) #25, !dbg !15644
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !15650
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !15643, metadata !DIExpression()) #25, !dbg !15644
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #27, !dbg !15651
  %17 = icmp sgt i32 %16, 0, !dbg !15654
  br i1 %17, label %18, label %20, !dbg !15655

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15656
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #27, !dbg !15658
  br label %25, !dbg !15659

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #27, !dbg !15648
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !15643, metadata !DIExpression()) #25, !dbg !15644
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15648
  br i1 %22, label %23, label %13, !dbg !15646, !llvm.loop !15660

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15662
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #27, !dbg !15663
  br label %25, !dbg !15664

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15665
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !15666
  %28 = zext i1 %27 to i32, !dbg !15666
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !15667
  ret void, !dbg !15668
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15669 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15671, metadata !DIExpression()), !dbg !15672
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !15673
  ret i1 %2, !dbg !15674
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #9 !dbg !15675 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !15677, metadata !DIExpression()), !dbg !15679
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15678, metadata !DIExpression()), !dbg !15679
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !15680
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !15681
  ret void, !dbg !15682
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.211(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15683 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15687, metadata !DIExpression()), !dbg !15688
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.212(%struct._dnode* noundef %0) #26, !dbg !15689
  br i1 %2, label %6, label %3, !dbg !15689

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15690
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15690
  br label %6, !dbg !15689

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15689
  ret %struct._dnode* %7, !dbg !15691
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !15692 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15696, metadata !DIExpression()), !dbg !15700
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15697, metadata !DIExpression()), !dbg !15700
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15701
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15701
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15698, metadata !DIExpression()), !dbg !15700
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15702
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15703
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15704
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15705
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15706
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15707
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15708
  ret void, !dbg !15709
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !15710 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15714, metadata !DIExpression()), !dbg !15716
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15715, metadata !DIExpression()), !dbg !15716
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15717
  br i1 %3, label %6, label %4, !dbg !15718

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !15719
  br label %6, !dbg !15718

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15718
  ret %struct._dnode* %7, !dbg !15720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !15721 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15725, metadata !DIExpression()), !dbg !15728
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15726, metadata !DIExpression()), !dbg !15728
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15729
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15729
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15727, metadata !DIExpression()), !dbg !15728
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15730
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15731
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15732
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15733
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15734
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15735
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15736
  ret void, !dbg !15737
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15738 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15740, metadata !DIExpression()), !dbg !15742
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15743
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15750, metadata !DIExpression()) #25, !dbg !15752
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15753
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15754
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15754
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15741, metadata !DIExpression()), !dbg !15742
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15755, metadata !DIExpression()) #25, !dbg !15761
  call void @llvm.dbg.value(metadata i32 %0, metadata !15760, metadata !DIExpression()) #25, !dbg !15761
  %6 = icmp eq i32 %0, 0, !dbg !15764
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15766
  br i1 %6, label %8, label %15, !dbg !15767

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #27, !dbg !15768
  br i1 %9, label %15, label %10, !dbg !15770

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #27, !dbg !15771
  br i1 %11, label %15, label %12, !dbg !15773

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #27, !dbg !15774
  %14 = icmp eq i32 %13, 0, !dbg !15774
  br i1 %14, label %18, label %15, !dbg !15776

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !15777
  br i1 %16, label %18, label %17, !dbg !15780

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15781
  br label %18, !dbg !15783

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !15766
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15766
  ret void, !dbg !15784
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #4 !dbg !15785 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15789, metadata !DIExpression()), !dbg !15792
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15790, metadata !DIExpression()), !dbg !15792
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.211(%struct._dnode* noundef %0) #26, !dbg !15793
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15791, metadata !DIExpression()), !dbg !15792
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15790, metadata !DIExpression()), !dbg !15792
  ret %struct.k_thread* %3, !dbg !15794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15795 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15797, metadata !DIExpression()), !dbg !15798
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15799
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15800
  %4 = xor i1 %3, true, !dbg !15801
  ret i1 %4, !dbg !15802
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15803 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15805, metadata !DIExpression()), !dbg !15806
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15807
  %3 = load i16, i16* %2, align 2, !dbg !15807
  %4 = icmp ult i16 %3, 128, !dbg !15808
  %5 = zext i1 %4 to i32, !dbg !15808
  ret i32 %5, !dbg !15809
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15810 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15816, metadata !DIExpression()), !dbg !15817
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15818
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !15819
  %4 = xor i1 %3, true, !dbg !15820
  ret i1 %4, !dbg !15821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15822 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15828, metadata !DIExpression()), !dbg !15829
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15830
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15830
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15831
  ret i1 %4, !dbg !15832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !15833 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15835, metadata !DIExpression()), !dbg !15837
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15836, metadata !DIExpression()), !dbg !15837
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15838
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15838
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15839
  br i1 %5, label %9, label %6, !dbg !15840

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15841
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15841
  br label %9, !dbg !15840

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15840
  ret %struct._dnode* %10, !dbg !15842
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.212(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !15843 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15847, metadata !DIExpression()), !dbg !15848
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15849
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15849
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15850
  ret i1 %4, !dbg !15851
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !15852 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15856, metadata !DIExpression()), !dbg !15859
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15860
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15860
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15857, metadata !DIExpression()), !dbg !15859
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15861
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15861
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15858, metadata !DIExpression()), !dbg !15859
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15862
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15863
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15864
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15865
  tail call fastcc void @sys_dnode_init.213(%struct._dnode* noundef %0) #26, !dbg !15866
  ret void, !dbg !15867
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.213(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !15868 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15870, metadata !DIExpression()), !dbg !15871
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15872
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15873
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15874
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15875
  ret void, !dbg !15876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15877 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15881, metadata !DIExpression()), !dbg !15883
  call void @llvm.dbg.value(metadata i32 128, metadata !15882, metadata !DIExpression()), !dbg !15883
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15884
  %3 = load i8, i8* %2, align 1, !dbg !15884
  %4 = icmp slt i8 %3, 0, !dbg !15885
  ret i1 %4, !dbg !15886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.214(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15887 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15889, metadata !DIExpression()), !dbg !15891
  call void @llvm.dbg.value(metadata i32 %1, metadata !15890, metadata !DIExpression()), !dbg !15891
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.215(i32 noundef %0, i32 noundef %1) #26, !dbg !15892
  ret i1 %3, !dbg !15893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #5 !dbg !15894 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15896, metadata !DIExpression()), !dbg !15897
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !15898
  ret i1 %2, !dbg !15899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.215(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15900 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15902, metadata !DIExpression()), !dbg !15904
  call void @llvm.dbg.value(metadata i32 %1, metadata !15903, metadata !DIExpression()), !dbg !15904
  %3 = icmp slt i32 %0, %1, !dbg !15905
  ret i1 %3, !dbg !15906
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15907 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15909, metadata !DIExpression()), !dbg !15913
  call void @llvm.dbg.value(metadata i32 0, metadata !15910, metadata !DIExpression()), !dbg !15914
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15436, metadata !DIExpression()) #25, !dbg !15915
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15917, !srcloc !15451
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15917
  call void @llvm.dbg.value(metadata i32 %3, metadata !15448, metadata !DIExpression()) #25, !dbg !15919
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #25, !dbg !15919
  call void @llvm.dbg.value(metadata i32 %3, metadata !15442, metadata !DIExpression()) #25, !dbg !15915
  call void @llvm.dbg.value(metadata i32 %3, metadata !15912, metadata !DIExpression()), !dbg !15914
  call void @llvm.dbg.value(metadata i32 undef, metadata !15910, metadata !DIExpression()), !dbg !15914
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15920
  call void @llvm.dbg.value(metadata i32 %3, metadata !15463, metadata !DIExpression()) #25, !dbg !15925
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15468, metadata !DIExpression()) #25, !dbg !15925
  call void @llvm.dbg.value(metadata i32 %3, metadata !15471, metadata !DIExpression()) #25, !dbg !15927
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15929, !srcloc !15477
  call void @llvm.dbg.value(metadata i32 1, metadata !15910, metadata !DIExpression()), !dbg !15914
  call void @llvm.dbg.value(metadata i32 undef, metadata !15910, metadata !DIExpression()), !dbg !15914
  ret void, !dbg !15930
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15931 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15933, metadata !DIExpression()), !dbg !15934
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15935
  br i1 %2, label %24, label %3, !dbg !15937

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15938
  br i1 %4, label %5, label %24, !dbg !15939

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15622, metadata !DIExpression()) #25, !dbg !15940
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15943
  %7 = load i8, i8* %6, align 1, !dbg !15944
  %8 = or i8 %7, -128, !dbg !15944
  store i8 %8, i8* %6, align 1, !dbg !15944
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15629, metadata !DIExpression()) #25, !dbg !15945
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15636, metadata !DIExpression()) #25, !dbg !15947
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15642, metadata !DIExpression()) #25, !dbg !15947
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.211(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15949
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !15643, metadata !DIExpression()) #25, !dbg !15947
  %10 = icmp eq %struct._dnode* %9, null, !dbg !15950
  br i1 %10, label %21, label %11, !dbg !15949

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !15643, metadata !DIExpression()) #25, !dbg !15947
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !15951
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15643, metadata !DIExpression()) #25, !dbg !15947
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #27, !dbg !15952
  %15 = icmp sgt i32 %14, 0, !dbg !15953
  br i1 %15, label %16, label %18, !dbg !15954

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15955
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #27, !dbg !15956
  br label %23, !dbg !15957

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #27, !dbg !15950
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !15643, metadata !DIExpression()) #25, !dbg !15947
  %20 = icmp eq %struct._dnode* %19, null, !dbg !15950
  br i1 %20, label %21, label %11, !dbg !15949, !llvm.loop !15958

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15960
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #27, !dbg !15961
  br label %23, !dbg !15962

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !15963
  br label %24, !dbg !15964

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !15965
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15966 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15968, metadata !DIExpression()), !dbg !15969
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15970
  br i1 %2, label %6, label %3, !dbg !15971

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !15972
  %5 = xor i1 %4, true, !dbg !15971
  br label %6, !dbg !15971

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15973
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15974 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15976, metadata !DIExpression()), !dbg !15980
  call void @llvm.dbg.value(metadata i32 0, metadata !15977, metadata !DIExpression()), !dbg !15981
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15436, metadata !DIExpression()) #25, !dbg !15982
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15984, !srcloc !15451
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15984
  call void @llvm.dbg.value(metadata i32 %3, metadata !15448, metadata !DIExpression()) #25, !dbg !15986
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #25, !dbg !15986
  call void @llvm.dbg.value(metadata i32 %3, metadata !15442, metadata !DIExpression()) #25, !dbg !15982
  call void @llvm.dbg.value(metadata i32 %3, metadata !15979, metadata !DIExpression()), !dbg !15981
  call void @llvm.dbg.value(metadata i32 undef, metadata !15977, metadata !DIExpression()), !dbg !15981
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !15987
  call void @llvm.dbg.value(metadata i32 %3, metadata !15463, metadata !DIExpression()) #25, !dbg !15990
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15468, metadata !DIExpression()) #25, !dbg !15990
  call void @llvm.dbg.value(metadata i32 %3, metadata !15471, metadata !DIExpression()) #25, !dbg !15992
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15994, !srcloc !15477
  call void @llvm.dbg.value(metadata i32 1, metadata !15977, metadata !DIExpression()), !dbg !15981
  call void @llvm.dbg.value(metadata i32 undef, metadata !15977, metadata !DIExpression()), !dbg !15981
  ret void, !dbg !15995
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15996 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15998, metadata !DIExpression()), !dbg !16000
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15436, metadata !DIExpression()) #25, !dbg !16001
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16003, !srcloc !15451
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16003
  call void @llvm.dbg.value(metadata i32 %3, metadata !15448, metadata !DIExpression()) #25, !dbg !16005
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #25, !dbg !16005
  call void @llvm.dbg.value(metadata i32 %3, metadata !15442, metadata !DIExpression()) #25, !dbg !16001
  call void @llvm.dbg.value(metadata i32 %3, metadata !15999, metadata !DIExpression()), !dbg !16000
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !16006
  br i1 %4, label %5, label %6, !dbg !16008

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15463, metadata !DIExpression()) #25, !dbg !16009
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15468, metadata !DIExpression()) #25, !dbg !16009
  call void @llvm.dbg.value(metadata i32 %3, metadata !15471, metadata !DIExpression()) #25, !dbg !16012
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16014, !srcloc !15477
  br label %8, !dbg !16015

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.220(%struct.k_thread* noundef %0) #26, !dbg !16016
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16017
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16018
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16018
  br label %8, !dbg !16019

8:                                                ; preds = %6, %5
  ret void, !dbg !16019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !16020 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16022, metadata !DIExpression()), !dbg !16023
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16024
  %3 = load i8, i8* %2, align 1, !dbg !16024
  %4 = and i8 %3, 4, !dbg !16025
  %5 = icmp eq i8 %4, 0, !dbg !16026
  ret i1 %5, !dbg !16027
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.220(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16028 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16030, metadata !DIExpression()), !dbg !16031
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16032
  %3 = load i8, i8* %2, align 1, !dbg !16033
  %4 = and i8 %3, -5, !dbg !16033
  store i8 %4, i8* %2, align 1, !dbg !16033
  ret void, !dbg !16034
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !16035 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !16038, metadata !DIExpression()), !dbg !16039
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16037, metadata !DIExpression()), !dbg !16039
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !16040
  br i1 %4, label %5, label %9, !dbg !16042

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !16043
  br i1 %6, label %7, label %9, !dbg !16044

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !16045, metadata !DIExpression()) #25, !dbg !16051
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16050, metadata !DIExpression()) #25, !dbg !16051
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !16054
  br label %10, !dbg !16055

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !15463, metadata !DIExpression()) #25, !dbg !16056
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15468, metadata !DIExpression()) #25, !dbg !16056
  call void @llvm.dbg.value(metadata i32 %3, metadata !15471, metadata !DIExpression()) #25, !dbg !16059
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16061, !srcloc !15477
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !16062
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !16063 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16067, metadata !DIExpression()), !dbg !16068
  call void @llvm.dbg.value(metadata i32 %0, metadata !16069, metadata !DIExpression()), !dbg !16074
  %2 = icmp eq i32 %0, 0, !dbg !16076
  br i1 %2, label %3, label %6, !dbg !16077

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16078, !srcloc !16085
  call void @llvm.dbg.value(metadata i32 %4, metadata !16081, metadata !DIExpression()) #25, !dbg !16086
  %5 = icmp eq i32 %4, 0, !dbg !16087
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !16068
  ret i1 %7, !dbg !16088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #4 !dbg !16089 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16092
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16091, metadata !DIExpression()), !dbg !16093
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16094
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !16095
  ret i1 %3, !dbg !16096
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !16097 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16099, metadata !DIExpression()), !dbg !16101
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !16102
  call void @llvm.dbg.value(metadata i32 %2, metadata !16100, metadata !DIExpression()), !dbg !16101
  ret i32 %2, !dbg !16103
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16104 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16106, metadata !DIExpression()), !dbg !16110
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16111
  call void @llvm.dbg.value(metadata i32 0, metadata !16107, metadata !DIExpression()), !dbg !16112
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15436, metadata !DIExpression()) #25, !dbg !16113
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16115, !srcloc !15451
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16115
  call void @llvm.dbg.value(metadata i32 %4, metadata !15448, metadata !DIExpression()) #25, !dbg !16117
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #25, !dbg !16117
  call void @llvm.dbg.value(metadata i32 %4, metadata !15442, metadata !DIExpression()) #25, !dbg !16113
  call void @llvm.dbg.value(metadata i32 %4, metadata !16109, metadata !DIExpression()), !dbg !16112
  call void @llvm.dbg.value(metadata i32 undef, metadata !16107, metadata !DIExpression()), !dbg !16112
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16118
  br i1 %5, label %6, label %10, !dbg !16122

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15605, metadata !DIExpression()) #25, !dbg !16123
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16126
  %8 = load i8, i8* %7, align 1, !dbg !16127
  %9 = and i8 %8, 127, !dbg !16127
  store i8 %9, i8* %7, align 1, !dbg !16127
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15613, metadata !DIExpression()) #25, !dbg !16128
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16130
  br label %10, !dbg !16131

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !16132
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16133
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !16134
  %13 = zext i1 %12 to i32, !dbg !16134
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !16135
  call void @llvm.dbg.value(metadata i32 %4, metadata !15463, metadata !DIExpression()) #25, !dbg !16136
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15468, metadata !DIExpression()) #25, !dbg !16136
  call void @llvm.dbg.value(metadata i32 %4, metadata !15471, metadata !DIExpression()) #25, !dbg !16138
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16140, !srcloc !15477
  call void @llvm.dbg.value(metadata i32 1, metadata !16107, metadata !DIExpression()), !dbg !16112
  call void @llvm.dbg.value(metadata i32 undef, metadata !16107, metadata !DIExpression()), !dbg !16112
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16141
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !16143
  br i1 %15, label %16, label %17, !dbg !16144

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16145
  br label %17, !dbg !16147

17:                                               ; preds = %16, %10
  ret void, !dbg !16148
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16149 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16151, metadata !DIExpression()), !dbg !16152
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16153
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !16154
  ret i32 %3, !dbg !16155
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16156 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16158, metadata !DIExpression()), !dbg !16159
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16160
  %3 = load i8, i8* %2, align 1, !dbg !16161
  %4 = or i8 %3, 16, !dbg !16161
  store i8 %4, i8* %2, align 1, !dbg !16161
  ret void, !dbg !16162
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !16163 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16164, !srcloc !15451
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16164
  call void @llvm.dbg.value(metadata i32 %2, metadata !15448, metadata !DIExpression()) #25, !dbg !16166
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #25, !dbg !16166
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !16167
  ret void, !dbg !16168
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !16169 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16171, metadata !DIExpression()), !dbg !16172
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !16173
  br i1 %2, label %3, label %5, !dbg !16175

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16176
  br label %6, !dbg !16178

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !15471, metadata !DIExpression()) #25, !dbg !16179
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !16182, !srcloc !15477
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !16183
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16184 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16186, metadata !DIExpression()), !dbg !16188
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15436, metadata !DIExpression()) #25, !dbg !16189
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16191, !srcloc !15451
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16191
  call void @llvm.dbg.value(metadata i32 %3, metadata !15448, metadata !DIExpression()) #25, !dbg !16193
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #25, !dbg !16193
  call void @llvm.dbg.value(metadata i32 %3, metadata !15442, metadata !DIExpression()) #25, !dbg !16189
  call void @llvm.dbg.value(metadata i32 %3, metadata !16187, metadata !DIExpression()), !dbg !16188
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !16194
  br i1 %4, label %6, label %5, !dbg !16196

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15463, metadata !DIExpression()) #25, !dbg !16197
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15468, metadata !DIExpression()) #25, !dbg !16197
  call void @llvm.dbg.value(metadata i32 %3, metadata !15471, metadata !DIExpression()) #25, !dbg !16200
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16202, !srcloc !15477
  br label %8, !dbg !16203

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16204
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16205
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16206
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16206
  br label %8, !dbg !16207

8:                                                ; preds = %6, %5
  ret void, !dbg !16207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !16208 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16210, metadata !DIExpression()), !dbg !16211
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16212
  %3 = load i8, i8* %2, align 1, !dbg !16212
  %4 = and i8 %3, 16, !dbg !16213
  %5 = icmp ne i8 %4, 0, !dbg !16214
  ret i1 %5, !dbg !16215
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16216 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16218, metadata !DIExpression()), !dbg !16219
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16220
  %3 = load i8, i8* %2, align 1, !dbg !16221
  %4 = and i8 %3, -17, !dbg !16221
  store i8 %4, i8* %2, align 1, !dbg !16221
  ret void, !dbg !16222
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16223 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16233, metadata !DIExpression()), !dbg !16237
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16231, metadata !DIExpression()), !dbg !16237
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16232, metadata !DIExpression()), !dbg !16237
  call void @llvm.dbg.value(metadata i32 0, metadata !16234, metadata !DIExpression()), !dbg !16238
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15436, metadata !DIExpression()) #25, !dbg !16239
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16241, !srcloc !15451
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !16241
  call void @llvm.dbg.value(metadata i32 %5, metadata !15448, metadata !DIExpression()) #25, !dbg !16243
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #25, !dbg !16243
  call void @llvm.dbg.value(metadata i32 %5, metadata !15442, metadata !DIExpression()) #25, !dbg !16239
  call void @llvm.dbg.value(metadata i32 %5, metadata !16236, metadata !DIExpression()), !dbg !16238
  call void @llvm.dbg.value(metadata i32 undef, metadata !16234, metadata !DIExpression()), !dbg !16238
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !16244
  call void @llvm.dbg.value(metadata i32 %5, metadata !15463, metadata !DIExpression()) #25, !dbg !16247
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15468, metadata !DIExpression()) #25, !dbg !16247
  call void @llvm.dbg.value(metadata i32 %5, metadata !15471, metadata !DIExpression()) #25, !dbg !16249
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !16251, !srcloc !15477
  call void @llvm.dbg.value(metadata i32 1, metadata !16234, metadata !DIExpression()), !dbg !16238
  call void @llvm.dbg.value(metadata i32 undef, metadata !16234, metadata !DIExpression()), !dbg !16238
  ret void, !dbg !16252
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16253 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16257, metadata !DIExpression()), !dbg !16258
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16255, metadata !DIExpression()), !dbg !16258
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16256, metadata !DIExpression()), !dbg !16258
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #26, !dbg !16259
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !16260
  ret void, !dbg !16261
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !16262 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16266, metadata !DIExpression()), !dbg !16268
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16267, metadata !DIExpression()), !dbg !16268
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !16269
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !16270
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !16271
  br i1 %3, label %21, label %4, !dbg !16273

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16274
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !16276
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !16277
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !15636, metadata !DIExpression()) #25, !dbg !16278
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15642, metadata !DIExpression()) #25, !dbg !16278
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.211(%struct._dnode* noundef nonnull %6) #27, !dbg !16280
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15643, metadata !DIExpression()) #25, !dbg !16278
  %8 = icmp eq %struct._dnode* %7, null, !dbg !16281
  br i1 %8, label %19, label %9, !dbg !16280

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15643, metadata !DIExpression()) #25, !dbg !16278
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !16282
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !15643, metadata !DIExpression()) #25, !dbg !16278
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #27, !dbg !16283
  %13 = icmp sgt i32 %12, 0, !dbg !16284
  br i1 %13, label %14, label %16, !dbg !16285

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16286
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #27, !dbg !16287
  br label %21, !dbg !16288

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #27, !dbg !16281
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !15643, metadata !DIExpression()) #25, !dbg !16278
  %18 = icmp eq %struct._dnode* %17, null, !dbg !16281
  br i1 %18, label %19, label %9, !dbg !16280, !llvm.loop !16289

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16291
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #27, !dbg !16292
  br label %21, !dbg !16293

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !16294
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16295 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16300, metadata !DIExpression()), !dbg !16301
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16299, metadata !DIExpression()), !dbg !16301
  %4 = icmp eq i64 %3, -1, !dbg !16302
  br i1 %4, label %6, label %5, !dbg !16304

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.223(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !16305
  br label %6, !dbg !16307

6:                                                ; preds = %5, %2
  ret void, !dbg !16308
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.223(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16309 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16312, metadata !DIExpression()), !dbg !16313
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16311, metadata !DIExpression()), !dbg !16313
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16314
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !16315
  ret void, !dbg !16316
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !16317 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16319, metadata !DIExpression()), !dbg !16327
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !16328
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !16328
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16320, metadata !DIExpression()), !dbg !16327
  call void @llvm.dbg.value(metadata i32 0, metadata !16321, metadata !DIExpression()), !dbg !16329
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15436, metadata !DIExpression()) #25, !dbg !16330
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16332, !srcloc !15451
  call void @llvm.dbg.value(metadata i32 undef, metadata !15448, metadata !DIExpression()) #25, !dbg !16334
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #25, !dbg !16334
  call void @llvm.dbg.value(metadata i32 undef, metadata !15442, metadata !DIExpression()) #25, !dbg !16330
  call void @llvm.dbg.value(metadata i32 undef, metadata !16323, metadata !DIExpression()), !dbg !16329
  call void @llvm.dbg.value(metadata i32 undef, metadata !16321, metadata !DIExpression()), !dbg !16329
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !16335
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !16336
  %7 = load i8, i8* %6, align 1, !dbg !16336
  %8 = and i8 %7, 40, !dbg !16337
  %9 = icmp eq i8 %8, 0, !dbg !16337
  call void @llvm.dbg.value(metadata i1 %9, metadata !16324, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16338
  br i1 %9, label %10, label %17, !dbg !16339

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !16340
  %12 = bitcast void (%struct._timeout*)** %11 to %struct._wait_q_t**, !dbg !16340
  %13 = load %struct._wait_q_t*, %struct._wait_q_t** %12, align 8, !dbg !16340
  %14 = icmp eq %struct._wait_q_t* %13, null, !dbg !16344
  br i1 %14, label %16, label %15, !dbg !16345

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !16346
  br label %16, !dbg !16348

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.220(%struct.k_thread* noundef nonnull %3) #26, !dbg !16349
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !16350
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !16351
  br label %17, !dbg !16352

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !16332
  call void @llvm.dbg.value(metadata i32 %18, metadata !15448, metadata !DIExpression()) #25, !dbg !16334
  call void @llvm.dbg.value(metadata i32 %18, metadata !15442, metadata !DIExpression()) #25, !dbg !16330
  call void @llvm.dbg.value(metadata i32 %18, metadata !16323, metadata !DIExpression()), !dbg !16329
  call void @llvm.dbg.value(metadata i32 undef, metadata !15463, metadata !DIExpression()) #25, !dbg !16353
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15468, metadata !DIExpression()) #25, !dbg !16353
  call void @llvm.dbg.value(metadata i32 undef, metadata !15471, metadata !DIExpression()) #25, !dbg !16355
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !16357, !srcloc !15477
  call void @llvm.dbg.value(metadata i32 1, metadata !16321, metadata !DIExpression()), !dbg !16329
  call void @llvm.dbg.value(metadata i32 undef, metadata !16321, metadata !DIExpression()), !dbg !16329
  ret void, !dbg !16358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16359 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16361, metadata !DIExpression()), !dbg !16362
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !16363
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !16364
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16365
  store %struct._wait_q_t* null, %struct._wait_q_t** %2, align 8, !dbg !16366
  ret void, !dbg !16367
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16368 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16370, metadata !DIExpression()), !dbg !16371
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16372
  %3 = load i8, i8* %2, align 1, !dbg !16373
  %4 = and i8 %3, -3, !dbg !16373
  store i8 %4, i8* %2, align 1, !dbg !16373
  ret void, !dbg !16374
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16375 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16377, metadata !DIExpression()), !dbg !16378
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16379
  br i1 %2, label %3, label %7, !dbg !16381

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15605, metadata !DIExpression()) #25, !dbg !16382
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16385
  %5 = load i8, i8* %4, align 1, !dbg !16386
  %6 = and i8 %5, 127, !dbg !16386
  store i8 %6, i8* %4, align 1, !dbg !16386
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15613, metadata !DIExpression()) #25, !dbg !16387
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16389
  br label %7, !dbg !16390

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16391
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !16392
  %10 = zext i1 %9 to i32, !dbg !16392
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !16393
  ret void, !dbg !16394
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16395 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16397, metadata !DIExpression()), !dbg !16398
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16399
  %3 = load i8, i8* %2, align 1, !dbg !16400
  %4 = or i8 %3, 2, !dbg !16400
  store i8 %4, i8* %2, align 1, !dbg !16400
  ret void, !dbg !16401
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #24 !dbg !16402 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16404, metadata !DIExpression()), !dbg !16408
  call void @llvm.dbg.value(metadata i32 0, metadata !16405, metadata !DIExpression()), !dbg !16409
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15436, metadata !DIExpression()) #25, !dbg !16410
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16412, !srcloc !15451
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16412
  call void @llvm.dbg.value(metadata i32 %3, metadata !15448, metadata !DIExpression()) #25, !dbg !16414
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #25, !dbg !16414
  call void @llvm.dbg.value(metadata i32 %3, metadata !15442, metadata !DIExpression()) #25, !dbg !16410
  call void @llvm.dbg.value(metadata i32 %3, metadata !16407, metadata !DIExpression()), !dbg !16409
  call void @llvm.dbg.value(metadata i32 undef, metadata !16405, metadata !DIExpression()), !dbg !16409
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !16415
  call void @llvm.dbg.value(metadata i32 %3, metadata !15463, metadata !DIExpression()) #25, !dbg !16418
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15468, metadata !DIExpression()) #25, !dbg !16418
  call void @llvm.dbg.value(metadata i32 %3, metadata !15471, metadata !DIExpression()) #25, !dbg !16420
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16422, !srcloc !15477
  call void @llvm.dbg.value(metadata i32 1, metadata !16405, metadata !DIExpression()), !dbg !16409
  call void @llvm.dbg.value(metadata i32 undef, metadata !16405, metadata !DIExpression()), !dbg !16409
  ret void, !dbg !16423
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16424 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16430, metadata !DIExpression()), !dbg !16435
  call void @llvm.dbg.value(metadata i32 %0, metadata !16428, metadata !DIExpression()), !dbg !16435
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16429, metadata !DIExpression()), !dbg !16435
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16436
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !16437
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16438
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16439
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16440
  call void @llvm.dbg.value(metadata i32 %6, metadata !16431, metadata !DIExpression()), !dbg !16435
  call void @llvm.dbg.value(metadata i32 0, metadata !16432, metadata !DIExpression()), !dbg !16441
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15436, metadata !DIExpression()) #25, !dbg !16442
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16444, !srcloc !15451
  call void @llvm.dbg.value(metadata i32 undef, metadata !15448, metadata !DIExpression()) #25, !dbg !16446
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #25, !dbg !16446
  call void @llvm.dbg.value(metadata i32 undef, metadata !15442, metadata !DIExpression()) #25, !dbg !16442
  call void @llvm.dbg.value(metadata i32 undef, metadata !16434, metadata !DIExpression()), !dbg !16441
  call void @llvm.dbg.value(metadata i32 undef, metadata !16432, metadata !DIExpression()), !dbg !16441
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16447
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16451
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !16452
  br i1 %10, label %11, label %12, !dbg !16453

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16454
  br label %12, !dbg !16456

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !16444
  call void @llvm.dbg.value(metadata i32 %13, metadata !15448, metadata !DIExpression()) #25, !dbg !16446
  call void @llvm.dbg.value(metadata i32 %13, metadata !15442, metadata !DIExpression()) #25, !dbg !16442
  call void @llvm.dbg.value(metadata i32 %13, metadata !16434, metadata !DIExpression()), !dbg !16441
  call void @llvm.dbg.value(metadata i32 undef, metadata !15463, metadata !DIExpression()) #25, !dbg !16457
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15468, metadata !DIExpression()) #25, !dbg !16457
  call void @llvm.dbg.value(metadata i32 undef, metadata !15471, metadata !DIExpression()) #25, !dbg !16459
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !16461, !srcloc !15477
  call void @llvm.dbg.value(metadata i32 1, metadata !16432, metadata !DIExpression()), !dbg !16441
  call void @llvm.dbg.value(metadata i32 undef, metadata !16432, metadata !DIExpression()), !dbg !16441
  ret i32 %6, !dbg !16462
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16463 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16468, metadata !DIExpression()), !dbg !16471
  call void @llvm.dbg.value(metadata i64 undef, metadata !16470, metadata !DIExpression()), !dbg !16471
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16467, metadata !DIExpression()), !dbg !16471
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16469, metadata !DIExpression()), !dbg !16471
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16472
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16473
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15436, metadata !DIExpression()) #25, !dbg !16474
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16476, !srcloc !15451
  call void @llvm.dbg.value(metadata i32 undef, metadata !15448, metadata !DIExpression()) #25, !dbg !16478
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #25, !dbg !16478
  call void @llvm.dbg.value(metadata i32 undef, metadata !15442, metadata !DIExpression()) #25, !dbg !16474
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16479
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !16480
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !16045, metadata !DIExpression()) #25, !dbg !16481
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16050, metadata !DIExpression()) #25, !dbg !16481
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #27, !dbg !16483
  ret i32 %9, !dbg !16484
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16485 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16489, metadata !DIExpression()), !dbg !16494
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16490, metadata !DIExpression()), !dbg !16494
  call void @llvm.dbg.value(metadata i32 0, metadata !16491, metadata !DIExpression()), !dbg !16495
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15436, metadata !DIExpression()) #25, !dbg !16496
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16498, !srcloc !15451
  call void @llvm.dbg.value(metadata i32 undef, metadata !15448, metadata !DIExpression()) #25, !dbg !16500
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #25, !dbg !16500
  call void @llvm.dbg.value(metadata i32 undef, metadata !15442, metadata !DIExpression()) #25, !dbg !16496
  call void @llvm.dbg.value(metadata i32 undef, metadata !16493, metadata !DIExpression()), !dbg !16495
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16490, metadata !DIExpression()), !dbg !16494
  call void @llvm.dbg.value(metadata i32 undef, metadata !16491, metadata !DIExpression()), !dbg !16495
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16501
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16490, metadata !DIExpression()), !dbg !16494
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16504
  br i1 %5, label %7, label %6, !dbg !16506

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16507
  br label %7, !dbg !16509

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16498
  call void @llvm.dbg.value(metadata i32 %8, metadata !15448, metadata !DIExpression()) #25, !dbg !16500
  call void @llvm.dbg.value(metadata i32 %8, metadata !15442, metadata !DIExpression()) #25, !dbg !16496
  call void @llvm.dbg.value(metadata i32 %8, metadata !16493, metadata !DIExpression()), !dbg !16495
  call void @llvm.dbg.value(metadata i32 undef, metadata !15463, metadata !DIExpression()) #25, !dbg !16510
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15468, metadata !DIExpression()) #25, !dbg !16510
  call void @llvm.dbg.value(metadata i32 undef, metadata !15471, metadata !DIExpression()) #25, !dbg !16512
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !16514, !srcloc !15477
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16490, metadata !DIExpression()), !dbg !16494
  call void @llvm.dbg.value(metadata i32 undef, metadata !16491, metadata !DIExpression()), !dbg !16495
  ret %struct.k_thread* %4, !dbg !16515
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16516 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16518, metadata !DIExpression()), !dbg !16523
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16519, metadata !DIExpression()), !dbg !16523
  call void @llvm.dbg.value(metadata i32 0, metadata !16520, metadata !DIExpression()), !dbg !16524
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15436, metadata !DIExpression()) #25, !dbg !16525
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16527, !srcloc !15451
  call void @llvm.dbg.value(metadata i32 undef, metadata !15448, metadata !DIExpression()) #25, !dbg !16529
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #25, !dbg !16529
  call void @llvm.dbg.value(metadata i32 undef, metadata !15442, metadata !DIExpression()) #25, !dbg !16525
  call void @llvm.dbg.value(metadata i32 undef, metadata !16522, metadata !DIExpression()), !dbg !16524
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16519, metadata !DIExpression()), !dbg !16523
  call void @llvm.dbg.value(metadata i32 undef, metadata !16520, metadata !DIExpression()), !dbg !16524
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16530
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16519, metadata !DIExpression()), !dbg !16523
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16533
  br i1 %5, label %8, label %6, !dbg !16535

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16536
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16538
  br label %8, !dbg !16539

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16527
  call void @llvm.dbg.value(metadata i32 %9, metadata !15448, metadata !DIExpression()) #25, !dbg !16529
  call void @llvm.dbg.value(metadata i32 %9, metadata !15442, metadata !DIExpression()) #25, !dbg !16525
  call void @llvm.dbg.value(metadata i32 %9, metadata !16522, metadata !DIExpression()), !dbg !16524
  call void @llvm.dbg.value(metadata i32 undef, metadata !15463, metadata !DIExpression()) #25, !dbg !16540
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15468, metadata !DIExpression()) #25, !dbg !16540
  call void @llvm.dbg.value(metadata i32 undef, metadata !15471, metadata !DIExpression()) #25, !dbg !16542
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !16544, !srcloc !15477
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16519, metadata !DIExpression()), !dbg !16523
  call void @llvm.dbg.value(metadata i32 undef, metadata !16520, metadata !DIExpression()), !dbg !16524
  ret %struct.k_thread* %4, !dbg !16545
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16546 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16548, metadata !DIExpression()), !dbg !16549
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16404, metadata !DIExpression()) #25, !dbg !16550
  call void @llvm.dbg.value(metadata i32 0, metadata !16405, metadata !DIExpression()) #25, !dbg !16552
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15436, metadata !DIExpression()) #25, !dbg !16553
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16555, !srcloc !15451
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16555
  call void @llvm.dbg.value(metadata i32 %3, metadata !15448, metadata !DIExpression()) #25, !dbg !16557
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #25, !dbg !16557
  call void @llvm.dbg.value(metadata i32 %3, metadata !15442, metadata !DIExpression()) #25, !dbg !16553
  call void @llvm.dbg.value(metadata i32 %3, metadata !16407, metadata !DIExpression()) #25, !dbg !16552
  call void @llvm.dbg.value(metadata i32 undef, metadata !16405, metadata !DIExpression()) #25, !dbg !16552
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !16558
  call void @llvm.dbg.value(metadata i32 %3, metadata !15463, metadata !DIExpression()) #25, !dbg !16559
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15468, metadata !DIExpression()) #25, !dbg !16559
  call void @llvm.dbg.value(metadata i32 %3, metadata !15471, metadata !DIExpression()) #25, !dbg !16561
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16563, !srcloc !15477
  call void @llvm.dbg.value(metadata i32 1, metadata !16405, metadata !DIExpression()) #25, !dbg !16552
  call void @llvm.dbg.value(metadata i32 undef, metadata !16405, metadata !DIExpression()) #25, !dbg !16552
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16564
  ret void, !dbg !16565
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16566 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16568, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata i32 %1, metadata !16569, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata i8 0, metadata !16570, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata i32 0, metadata !16571, metadata !DIExpression()), !dbg !16575
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15436, metadata !DIExpression()) #25, !dbg !16576
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16578, !srcloc !15451
  call void @llvm.dbg.value(metadata i32 undef, metadata !15448, metadata !DIExpression()) #25, !dbg !16580
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #25, !dbg !16580
  call void @llvm.dbg.value(metadata i32 undef, metadata !15442, metadata !DIExpression()) #25, !dbg !16576
  call void @llvm.dbg.value(metadata i32 undef, metadata !16573, metadata !DIExpression()), !dbg !16575
  call void @llvm.dbg.value(metadata i8 poison, metadata !16570, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata i32 undef, metadata !16571, metadata !DIExpression()), !dbg !16575
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !16581
  call void @llvm.dbg.value(metadata i1 %6, metadata !16570, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16574
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !16584

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15605, metadata !DIExpression()) #25, !dbg !16585
  %11 = load i8, i8* %4, align 1, !dbg !16591
  %12 = and i8 %11, 127, !dbg !16591
  store i8 %12, i8* %4, align 1, !dbg !16591
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15613, metadata !DIExpression()) #25, !dbg !16592
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16594
  store i8 %9, i8* %8, align 2, !dbg !16595
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15622, metadata !DIExpression()) #25, !dbg !16596
  %13 = load i8, i8* %4, align 1, !dbg !16598
  %14 = or i8 %13, -128, !dbg !16598
  store i8 %14, i8* %4, align 1, !dbg !16598
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15629, metadata !DIExpression()) #25, !dbg !16599
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15636, metadata !DIExpression()) #25, !dbg !16601
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15642, metadata !DIExpression()) #25, !dbg !16601
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.211(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16603
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !15643, metadata !DIExpression()) #25, !dbg !16601
  %16 = icmp eq %struct._dnode* %15, null, !dbg !16604
  br i1 %16, label %26, label %17, !dbg !16603

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !15643, metadata !DIExpression()) #25, !dbg !16601
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !16605
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !15643, metadata !DIExpression()) #25, !dbg !16601
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #27, !dbg !16606
  %21 = icmp sgt i32 %20, 0, !dbg !16607
  br i1 %21, label %22, label %23, !dbg !16608

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #27, !dbg !16609
  br label %27, !dbg !16610

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #27, !dbg !16604
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !15643, metadata !DIExpression()) #25, !dbg !16601
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16604
  br i1 %25, label %26, label %17, !dbg !16603, !llvm.loop !16611

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #27, !dbg !16613
  br label %27, !dbg !16614

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16615
  br label %29, !dbg !16616

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !16617
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !16578
  call void @llvm.dbg.value(metadata i32 %30, metadata !15448, metadata !DIExpression()) #25, !dbg !16580
  call void @llvm.dbg.value(metadata i32 %30, metadata !15442, metadata !DIExpression()) #25, !dbg !16576
  call void @llvm.dbg.value(metadata i32 %30, metadata !16573, metadata !DIExpression()), !dbg !16575
  call void @llvm.dbg.value(metadata i32 undef, metadata !15463, metadata !DIExpression()) #25, !dbg !16619
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15468, metadata !DIExpression()) #25, !dbg !16619
  call void @llvm.dbg.value(metadata i32 undef, metadata !15471, metadata !DIExpression()) #25, !dbg !16621
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !16623, !srcloc !15477
  call void @llvm.dbg.value(metadata i8 poison, metadata !16570, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata i32 undef, metadata !16571, metadata !DIExpression()), !dbg !16575
  ret i1 %6, !dbg !16624
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16625 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16629, metadata !DIExpression()), !dbg !16632
  call void @llvm.dbg.value(metadata i32 %1, metadata !16630, metadata !DIExpression()), !dbg !16632
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16633
  call void @llvm.dbg.value(metadata i1 %3, metadata !16631, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16632
  br i1 %3, label %4, label %12, !dbg !16634

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16636
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16637
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16637
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16637
  %9 = load i8, i8* %8, align 1, !dbg !16637
  %10 = icmp eq i8 %9, 0, !dbg !16638
  br i1 %10, label %11, label %12, !dbg !16639

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16640
  br label %12, !dbg !16642

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16643
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16644 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16646, metadata !DIExpression()), !dbg !16649
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15436, metadata !DIExpression()) #25, !dbg !16650
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16652, !srcloc !15451
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16652
  call void @llvm.dbg.value(metadata i32 %2, metadata !15448, metadata !DIExpression()) #25, !dbg !16654
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #25, !dbg !16654
  call void @llvm.dbg.value(metadata i32 %2, metadata !15442, metadata !DIExpression()) #25, !dbg !16650
  call void @llvm.dbg.value(metadata i32 %2, metadata !16648, metadata !DIExpression()), !dbg !16649
  call void @llvm.dbg.value(metadata i32 undef, metadata !16646, metadata !DIExpression()), !dbg !16649
  tail call fastcc void @z_sched_lock() #26, !dbg !16655
  call void @llvm.dbg.value(metadata i32 %2, metadata !15463, metadata !DIExpression()) #25, !dbg !16658
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15468, metadata !DIExpression()) #25, !dbg !16658
  call void @llvm.dbg.value(metadata i32 %2, metadata !15471, metadata !DIExpression()) #25, !dbg !16660
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16662, !srcloc !15477
  call void @llvm.dbg.value(metadata i32 1, metadata !16646, metadata !DIExpression()), !dbg !16649
  call void @llvm.dbg.value(metadata i32 undef, metadata !16646, metadata !DIExpression()), !dbg !16649
  ret void, !dbg !16663
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16664 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16665
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !16666
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !16666
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !16666
  %5 = load i8, i8* %4, align 1, !dbg !16667
  %6 = add i8 %5, -1, !dbg !16667
  store i8 %6, i8* %4, align 1, !dbg !16667
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !16668, !srcloc !16670
  ret void, !dbg !16671
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16672 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16674, metadata !DIExpression()), !dbg !16677
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15436, metadata !DIExpression()) #25, !dbg !16678
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16680, !srcloc !15451
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16680
  call void @llvm.dbg.value(metadata i32 %2, metadata !15448, metadata !DIExpression()) #25, !dbg !16682
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #25, !dbg !16682
  call void @llvm.dbg.value(metadata i32 %2, metadata !15442, metadata !DIExpression()) #25, !dbg !16678
  call void @llvm.dbg.value(metadata i32 %2, metadata !16676, metadata !DIExpression()), !dbg !16677
  call void @llvm.dbg.value(metadata i32 undef, metadata !16674, metadata !DIExpression()), !dbg !16677
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16683
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !16686
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !16686
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !16686
  %7 = load i8, i8* %6, align 1, !dbg !16687
  %8 = add i8 %7, 1, !dbg !16687
  store i8 %8, i8* %6, align 1, !dbg !16687
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !16688
  call void @llvm.dbg.value(metadata i32 %2, metadata !15463, metadata !DIExpression()) #25, !dbg !16689
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15468, metadata !DIExpression()) #25, !dbg !16689
  call void @llvm.dbg.value(metadata i32 %2, metadata !15471, metadata !DIExpression()) #25, !dbg !16691
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16693, !srcloc !15477
  call void @llvm.dbg.value(metadata i32 1, metadata !16674, metadata !DIExpression()), !dbg !16677
  call void @llvm.dbg.value(metadata i32 undef, metadata !16674, metadata !DIExpression()), !dbg !16677
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16694
  ret void, !dbg !16695
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #4 !dbg !16696 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16697
  ret %struct.k_thread* %1, !dbg !16698
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !16699 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16703, metadata !DIExpression()), !dbg !16708
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16704, metadata !DIExpression()), !dbg !16708
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16709
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16705, metadata !DIExpression()), !dbg !16708
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16710
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16706, metadata !DIExpression()), !dbg !16708
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !16711
  call void @llvm.dbg.value(metadata i32 %5, metadata !16707, metadata !DIExpression()), !dbg !16708
  %6 = icmp sgt i32 %5, 0, !dbg !16712
  br i1 %6, label %17, label %7, !dbg !16714

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16715
  br i1 %8, label %17, label %9, !dbg !16717

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16718
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16718
  %12 = load i32, i32* %11, align 8, !dbg !16718
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16720
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16720
  %15 = load i32, i32* %14, align 8, !dbg !16720
  %16 = icmp ult i32 %12, %15, !dbg !16721
  br label %17, !dbg !16722

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16723
  ret i1 %18, !dbg !16724
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16725 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16742, metadata !DIExpression()), !dbg !16757
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16743, metadata !DIExpression()), !dbg !16757
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16758
  %5 = load i32, i32* %4, align 4, !dbg !16759
  %6 = add nsw i32 %5, 1, !dbg !16759
  store i32 %6, i32* %4, align 4, !dbg !16759
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16760
  store i32 %5, i32* %7, align 8, !dbg !16761
  %8 = load i32, i32* %4, align 4, !dbg !16762
  %9 = icmp eq i32 %8, 0, !dbg !16763
  br i1 %9, label %10, label %32, !dbg !16764

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16765
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !16765
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16745, metadata !DIExpression()), !dbg !16765
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16765
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16765
  %14 = load i32, i32* %13, align 4, !dbg !16765
  %15 = shl i32 %14, 2, !dbg !16765
  %16 = alloca i8, i32 %15, align 8, !dbg !16765
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16765
  store i8* %16, i8** %17, align 4, !dbg !16765
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16765
  %19 = alloca i8, i32 %14, align 8, !dbg !16765
  store i8* %19, i8** %18, align 4, !dbg !16765
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16765
  store i32 -1, i32* %20, align 4, !dbg !16765
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !16766
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16754, metadata !DIExpression()), !dbg !16767
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16744, metadata !DIExpression()), !dbg !16757
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !16768
  br i1 %22, label %23, label %24, !dbg !16765

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !16768
  br label %32, !dbg !16769

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !16744, metadata !DIExpression()), !dbg !16757
  %26 = load i32, i32* %4, align 4, !dbg !16770
  %27 = add nsw i32 %26, 1, !dbg !16770
  store i32 %27, i32* %4, align 4, !dbg !16770
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !16772
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !16772
  store i32 %26, i32* %29, align 8, !dbg !16773
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !16766
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16754, metadata !DIExpression()), !dbg !16767
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16744, metadata !DIExpression()), !dbg !16757
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !16768
  br i1 %31, label %23, label %24, !dbg !16765, !llvm.loop !16774

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16776
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16777
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #27, !dbg !16778
  ret void, !dbg !16779
}

; Function Attrs: optsize
declare !dbg !16780 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16785 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16788 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16790, metadata !DIExpression()), !dbg !16792
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16791, metadata !DIExpression()), !dbg !16792
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16793
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16794
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #27, !dbg !16795
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16796
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !16796
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !16798
  br i1 %7, label %8, label %10, !dbg !16799

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16800
  store i32 0, i32* %9, align 4, !dbg !16802
  br label %10, !dbg !16803

10:                                               ; preds = %8, %2
  ret void, !dbg !16804
}

; Function Attrs: optsize
declare !dbg !16805 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16806 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16810, metadata !DIExpression()), !dbg !16813
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16811, metadata !DIExpression()), !dbg !16813
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16814
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !16815
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16812, metadata !DIExpression()), !dbg !16813
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16811, metadata !DIExpression()), !dbg !16813
  ret %struct.k_thread* %4, !dbg !16816
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16817 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16821, metadata !DIExpression()), !dbg !16822
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !16823
  ret %struct.rbnode* %2, !dbg !16824
}

; Function Attrs: optsize
declare !dbg !16825 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !16828 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16840, metadata !DIExpression()), !dbg !16844
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16845
  %3 = load i32, i32* %2, align 4, !dbg !16845
  %4 = icmp eq i32 %3, 0, !dbg !16847
  br i1 %4, label %10, label %5, !dbg !16848

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16841, metadata !DIExpression()), !dbg !16844
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16849, !range !5020
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16850
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16842, metadata !DIExpression()), !dbg !16844
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.211(%struct._dnode* noundef %7) #26, !dbg !16851
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16843, metadata !DIExpression()), !dbg !16844
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16841, metadata !DIExpression()), !dbg !16844
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16844
  ret %struct.k_thread* %11, !dbg !16852
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16853 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16857, metadata !DIExpression()), !dbg !16860
  call void @llvm.dbg.value(metadata i32 0, metadata !16858, metadata !DIExpression()), !dbg !16860
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.236(%struct._wait_q_t* noundef %0) #26, !dbg !16861
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16859, metadata !DIExpression()), !dbg !16860
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16862
  br i1 %3, label %8, label %4, !dbg !16863

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16864
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16866
  call void @llvm.dbg.value(metadata i32 1, metadata !16858, metadata !DIExpression()), !dbg !16860
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.236(%struct._wait_q_t* noundef %0) #26, !dbg !16861
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16859, metadata !DIExpression()), !dbg !16860
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16862
  br i1 %7, label %8, label %4, !dbg !16863, !llvm.loop !16867

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16860
  ret i32 %9, !dbg !16869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.236(%struct._wait_q_t* noundef readonly %0) unnamed_addr #4 !dbg !16870 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16872, metadata !DIExpression()), !dbg !16873
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16874
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.211(%struct._dnode* noundef %2) #26, !dbg !16875
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16876
  ret %struct.k_thread* %4, !dbg !16877
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #8 !dbg !16878 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16887, metadata !DIExpression()), !dbg !16888
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16889
  tail call fastcc void @sys_dlist_init.237(%struct._dnode* noundef nonnull %2) #26, !dbg !16890
  ret void, !dbg !16891
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.237(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16892 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16896, metadata !DIExpression()), !dbg !16897
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16898
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16899
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16900
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16901
  ret void, !dbg !16902
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16903 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !16904
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !16905
  ret void, !dbg !16906
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #4 !dbg !16907 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16912, metadata !DIExpression()), !dbg !16913
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16914
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16914
  %4 = load i8, i8* %3, align 2, !dbg !16914
  %5 = sext i8 %4 to i32, !dbg !16915
  ret i32 %5, !dbg !16916
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16917 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16921, metadata !DIExpression()), !dbg !16924
  call void @llvm.dbg.value(metadata i32 %1, metadata !16922, metadata !DIExpression()), !dbg !16924
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16923, metadata !DIExpression()), !dbg !16924
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16925
  ret void, !dbg !16926
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16927 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !16928
  br i1 %1, label %8, label %2, !dbg !16929

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !16930
  br i1 %3, label %8, label %4, !dbg !16931

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16932
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !16933
  %7 = xor i1 %6, true, !dbg !16931
  br label %8, !dbg !16931

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #4 !dbg !16935 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16936, !range !7677
  %2 = icmp eq i8 %1, 0, !dbg !16936
  ret i1 %2, !dbg !16937
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16938 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15436, metadata !DIExpression()) #25, !dbg !16941
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16943, !srcloc !15451
  call void @llvm.dbg.value(metadata i32 undef, metadata !15448, metadata !DIExpression()) #25, !dbg !16945
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #25, !dbg !16945
  call void @llvm.dbg.value(metadata i32 undef, metadata !15442, metadata !DIExpression()) #25, !dbg !16941
  call void @llvm.dbg.value(metadata i32 undef, metadata !16940, metadata !DIExpression()), !dbg !16946
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16947
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15605, metadata !DIExpression()) #25, !dbg !16950
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !16952
  %4 = load i8, i8* %3, align 1, !dbg !16953
  %5 = and i8 %4, 127, !dbg !16953
  store i8 %5, i8* %3, align 1, !dbg !16953
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15613, metadata !DIExpression()) #25, !dbg !16954
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #27, !dbg !16956
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16957
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15622, metadata !DIExpression()) #25, !dbg !16958
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !16960
  %8 = load i8, i8* %7, align 1, !dbg !16961
  %9 = or i8 %8, -128, !dbg !16961
  store i8 %9, i8* %7, align 1, !dbg !16961
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15629, metadata !DIExpression()) #25, !dbg !16962
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15636, metadata !DIExpression()) #25, !dbg !16964
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15642, metadata !DIExpression()) #25, !dbg !16964
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.211(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16966
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15643, metadata !DIExpression()) #25, !dbg !16964
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16967
  br i1 %11, label %22, label %12, !dbg !16966

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !15643, metadata !DIExpression()) #25, !dbg !16964
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16968
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15643, metadata !DIExpression()) #25, !dbg !16964
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #27, !dbg !16969
  %16 = icmp sgt i32 %15, 0, !dbg !16970
  br i1 %16, label %17, label %19, !dbg !16971

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16972
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !16973
  br label %24, !dbg !16974

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #27, !dbg !16967
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !15643, metadata !DIExpression()) #25, !dbg !16964
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16967
  br i1 %21, label %22, label %12, !dbg !16966, !llvm.loop !16975

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16977
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #27, !dbg !16978
  br label %24, !dbg !16979

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !16943
  call void @llvm.dbg.value(metadata i32 %25, metadata !15448, metadata !DIExpression()) #25, !dbg !16945
  call void @llvm.dbg.value(metadata i32 %25, metadata !15442, metadata !DIExpression()) #25, !dbg !16941
  call void @llvm.dbg.value(metadata i32 %25, metadata !16940, metadata !DIExpression()), !dbg !16946
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16980
  call void @llvm.dbg.value(metadata i32 undef, metadata !16045, metadata !DIExpression()) #25, !dbg !16981
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16050, metadata !DIExpression()) #25, !dbg !16981
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #27, !dbg !16983
  ret void, !dbg !16984
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16985 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16989, metadata !DIExpression()), !dbg !16992
  %3 = icmp eq i64 %2, -1, !dbg !16993
  br i1 %3, label %4, label %6, !dbg !16995

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16996
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !16998
  br label %11, !dbg !16999

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16990, metadata !DIExpression()), !dbg !16992
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !17000
  %8 = sext i32 %7 to i64, !dbg !17000
  call void @llvm.dbg.value(metadata i64 %8, metadata !16990, metadata !DIExpression()), !dbg !16992
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64.240(i64 noundef %8) #26, !dbg !17001
  %10 = trunc i64 %9 to i32, !dbg !17001
  call void @llvm.dbg.value(metadata i32 %10, metadata !16991, metadata !DIExpression()), !dbg !16992
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !16992
  ret i32 %12, !dbg !17002
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17003 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17007, metadata !DIExpression()), !dbg !17008
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17009, !srcloc !17011
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !17012
  ret void, !dbg !17013
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !17014 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17018, metadata !DIExpression()), !dbg !17022
  %2 = icmp eq i64 %0, 0, !dbg !17023
  br i1 %2, label %3, label %4, !dbg !17025

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !17026
  br label %29, !dbg !17028

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !17020, metadata !DIExpression()), !dbg !17022
  %5 = icmp sgt i64 %0, -3, !dbg !17029
  br i1 %5, label %6, label %10, !dbg !17031

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17032
  %8 = trunc i64 %0 to i32, !dbg !17034
  %9 = add i32 %7, %8, !dbg !17034
  call void @llvm.dbg.value(metadata i32 %9, metadata !17019, metadata !DIExpression()), !dbg !17022
  br label %13, !dbg !17035

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !17036
  %12 = sub i32 -2, %11, !dbg !17036
  call void @llvm.dbg.value(metadata i32 %12, metadata !17019, metadata !DIExpression()), !dbg !17022
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !17038
  call void @llvm.dbg.value(metadata i32 %14, metadata !17019, metadata !DIExpression()), !dbg !17022
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15436, metadata !DIExpression()) #25, !dbg !17039
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17041, !srcloc !15451
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !17041
  call void @llvm.dbg.value(metadata i32 %16, metadata !15448, metadata !DIExpression()) #25, !dbg !17043
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #25, !dbg !17043
  call void @llvm.dbg.value(metadata i32 %16, metadata !15442, metadata !DIExpression()) #25, !dbg !17039
  call void @llvm.dbg.value(metadata i32 %16, metadata !17021, metadata !DIExpression()), !dbg !17022
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17044
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !17045
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !17046
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17047
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17048
  tail call fastcc void @z_add_thread_timeout.223(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !17048
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17049
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !17050
  call void @llvm.dbg.value(metadata i32 %16, metadata !16045, metadata !DIExpression()) #25, !dbg !17051
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16050, metadata !DIExpression()) #25, !dbg !17051
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #27, !dbg !17053
  %22 = zext i32 %14 to i64, !dbg !17054
  %23 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17055
  %24 = zext i32 %23 to i64, !dbg !17055
  %25 = sub nsw i64 %22, %24, !dbg !17056
  call void @llvm.dbg.value(metadata i64 %25, metadata !17018, metadata !DIExpression()), !dbg !17022
  %26 = icmp sgt i64 %25, 0, !dbg !17057
  %27 = select i1 %26, i64 %25, i64 0, !dbg !17057
  %28 = trunc i64 %27 to i32, !dbg !17057
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !17022
  ret i32 %30, !dbg !17058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64.240(i64 noundef %0) unnamed_addr #5 !dbg !17059 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17061, metadata !DIExpression()), !dbg !17062
  call void @llvm.dbg.value(metadata i64 %0, metadata !15483, metadata !DIExpression()), !dbg !17063
  call void @llvm.dbg.value(metadata i32 10000, metadata !15486, metadata !DIExpression()), !dbg !17063
  call void @llvm.dbg.value(metadata i32 1000, metadata !15487, metadata !DIExpression()), !dbg !17063
  call void @llvm.dbg.value(metadata i8 1, metadata !15488, metadata !DIExpression()), !dbg !17063
  call void @llvm.dbg.value(metadata i1 false, metadata !15489, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17063
  call void @llvm.dbg.value(metadata i1 false, metadata !15490, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17063
  call void @llvm.dbg.value(metadata i8 0, metadata !15491, metadata !DIExpression()), !dbg !17063
  call void @llvm.dbg.value(metadata i1 false, metadata !15492, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17063
  call void @llvm.dbg.value(metadata i1 true, metadata !15493, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17063
  call void @llvm.dbg.value(metadata i64 0, metadata !15494, metadata !DIExpression()), !dbg !17063
  call void @llvm.dbg.value(metadata i64 0, metadata !15494, metadata !DIExpression()), !dbg !17063
  call void @llvm.dbg.value(metadata i64 %0, metadata !15483, metadata !DIExpression()), !dbg !17063
  %2 = udiv i64 %0, 10, !dbg !17065
  ret i64 %2, !dbg !17069
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !17070 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17071, !srcloc !17073
  tail call void @z_impl_k_yield() #26, !dbg !17074
  ret void, !dbg !17075
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17076 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17080, metadata !DIExpression()), !dbg !17082
  %2 = sext i32 %0 to i64, !dbg !17083
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !17084
  call void @llvm.dbg.value(metadata i64 %3, metadata !17081, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17082
  %4 = shl i64 %3, 32, !dbg !17085
  %5 = ashr exact i64 %4, 32, !dbg !17085
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !17086
  call void @llvm.dbg.value(metadata i32 %6, metadata !17081, metadata !DIExpression()), !dbg !17082
  %7 = sext i32 %6 to i64, !dbg !17087
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !17088
  %9 = trunc i64 %8 to i32, !dbg !17088
  ret i32 %9, !dbg !17089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !17090 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17092, metadata !DIExpression()), !dbg !17093
  call void @llvm.dbg.value(metadata i64 %0, metadata !15483, metadata !DIExpression()), !dbg !17094
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15486, metadata !DIExpression()), !dbg !17094
  call void @llvm.dbg.value(metadata i32 10000, metadata !15487, metadata !DIExpression()), !dbg !17094
  call void @llvm.dbg.value(metadata i8 1, metadata !15488, metadata !DIExpression()), !dbg !17094
  call void @llvm.dbg.value(metadata i1 false, metadata !15489, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17094
  call void @llvm.dbg.value(metadata i1 true, metadata !15490, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17094
  call void @llvm.dbg.value(metadata i8 0, metadata !15491, metadata !DIExpression()), !dbg !17094
  call void @llvm.dbg.value(metadata i1 false, metadata !15492, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17094
  call void @llvm.dbg.value(metadata i1 true, metadata !15493, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17094
  call void @llvm.dbg.value(metadata i64 0, metadata !15494, metadata !DIExpression()), !dbg !17094
  call void @llvm.dbg.value(metadata i64 0, metadata !15494, metadata !DIExpression()), !dbg !17094
  %2 = add i64 %0, 99, !dbg !17096
  call void @llvm.dbg.value(metadata i64 %2, metadata !15483, metadata !DIExpression()), !dbg !17094
  %3 = udiv i64 %2, 100, !dbg !17097
  ret i64 %3, !dbg !17098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #5 !dbg !17099 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17101, metadata !DIExpression()), !dbg !17102
  call void @llvm.dbg.value(metadata i64 %0, metadata !15483, metadata !DIExpression()), !dbg !17103
  call void @llvm.dbg.value(metadata i32 10000, metadata !15486, metadata !DIExpression()), !dbg !17103
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15487, metadata !DIExpression()), !dbg !17103
  call void @llvm.dbg.value(metadata i8 1, metadata !15488, metadata !DIExpression()), !dbg !17103
  call void @llvm.dbg.value(metadata i1 false, metadata !15489, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17103
  call void @llvm.dbg.value(metadata i1 false, metadata !15490, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17103
  call void @llvm.dbg.value(metadata i8 0, metadata !15491, metadata !DIExpression()), !dbg !17103
  call void @llvm.dbg.value(metadata i1 true, metadata !15492, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17103
  call void @llvm.dbg.value(metadata i1 false, metadata !15493, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17103
  call void @llvm.dbg.value(metadata i64 0, metadata !15494, metadata !DIExpression()), !dbg !17103
  call void @llvm.dbg.value(metadata i64 0, metadata !15494, metadata !DIExpression()), !dbg !17103
  %2 = mul i64 %0, 100, !dbg !17105
  ret i64 %2, !dbg !17107
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17108 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17110, metadata !DIExpression()), !dbg !17111
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !17112
  br i1 %2, label %14, label %3, !dbg !17114

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !17115
  %5 = icmp slt i32 %4, 0, !dbg !17117
  br i1 %5, label %6, label %10, !dbg !17118

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17119
  %8 = load i8, i8* %7, align 1, !dbg !17119
  %9 = icmp eq i8 %8, 16, !dbg !17122
  br i1 %9, label %10, label %14, !dbg !17123

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !17124
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !17125
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17126, !srcloc !16085
  call void @llvm.dbg.value(metadata i32 %11, metadata !16081, metadata !DIExpression()) #25, !dbg !17130
  %12 = icmp eq i32 %11, 0, !dbg !17131
  br i1 %12, label %13, label %14, !dbg !17132

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !17133
  br label %14, !dbg !17135

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !17136
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !17137 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17139, metadata !DIExpression()), !dbg !17140
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17141
  %3 = load i8, i8* %2, align 1, !dbg !17141
  %4 = and i8 %3, 2, !dbg !17142
  %5 = icmp ne i8 %4, 0, !dbg !17143
  ret i1 %5, !dbg !17144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #4 !dbg !17145 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17150
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17149, metadata !DIExpression()), !dbg !17151
  ret %struct.k_thread* %1, !dbg !17152
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !17153 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17154, !srcloc !16085
  call void @llvm.dbg.value(metadata i32 %1, metadata !16081, metadata !DIExpression()) #25, !dbg !17157
  %2 = icmp eq i32 %1, 0, !dbg !17158
  br i1 %2, label %3, label %8, !dbg !17159

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17160
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !17161
  %6 = icmp ne i32 %5, 0, !dbg !17159
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !17162
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17163 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17165, metadata !DIExpression()), !dbg !17167
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15436, metadata !DIExpression()) #25, !dbg !17168
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17170, !srcloc !15451
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17170
  call void @llvm.dbg.value(metadata i32 %3, metadata !15448, metadata !DIExpression()) #25, !dbg !17172
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #25, !dbg !17172
  call void @llvm.dbg.value(metadata i32 %3, metadata !15442, metadata !DIExpression()) #25, !dbg !17168
  call void @llvm.dbg.value(metadata i32 %3, metadata !17166, metadata !DIExpression()), !dbg !17167
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !17173
  %5 = load i8, i8* %4, align 4, !dbg !17173
  %6 = and i8 %5, 1, !dbg !17175
  %7 = icmp eq i8 %6, 0, !dbg !17176
  br i1 %7, label %9, label %8, !dbg !17177

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15463, metadata !DIExpression()) #25, !dbg !17178
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15468, metadata !DIExpression()) #25, !dbg !17178
  call void @llvm.dbg.value(metadata i32 %3, metadata !15471, metadata !DIExpression()) #25, !dbg !17181
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17183, !srcloc !15477
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !17184, !srcloc !17186
  br label %24, !dbg !17187

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17188
  %11 = load i8, i8* %10, align 1, !dbg !17188
  %12 = and i8 %11, 8, !dbg !17190
  %13 = icmp eq i8 %12, 0, !dbg !17191
  br i1 %13, label %15, label %14, !dbg !17192

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !15463, metadata !DIExpression()) #25, !dbg !17193
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15468, metadata !DIExpression()) #25, !dbg !17193
  call void @llvm.dbg.value(metadata i32 %3, metadata !15471, metadata !DIExpression()) #25, !dbg !17196
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17198, !srcloc !15477
  br label %24, !dbg !17199

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !17200
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17201
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !17203
  br i1 %17, label %18, label %23, !dbg !17204

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17205, !srcloc !16085
  call void @llvm.dbg.value(metadata i32 %19, metadata !16081, metadata !DIExpression()) #25, !dbg !17208
  %20 = icmp eq i32 %19, 0, !dbg !17209
  br i1 %20, label %21, label %23, !dbg !17210

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !16045, metadata !DIExpression()) #25, !dbg !17211
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16050, metadata !DIExpression()) #25, !dbg !17211
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !17214
  br label %23, !dbg !17215

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !15463, metadata !DIExpression()) #25, !dbg !17216
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15468, metadata !DIExpression()) #25, !dbg !17216
  call void @llvm.dbg.value(metadata i32 %3, metadata !15471, metadata !DIExpression()) #25, !dbg !17218
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17220, !srcloc !15477
  br label %24, !dbg !17221

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !17221
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17222 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17224, metadata !DIExpression()), !dbg !17225
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17226
  %3 = load i8, i8* %2, align 1, !dbg !17226
  %4 = and i8 %3, 8, !dbg !17228
  %5 = icmp eq i8 %4, 0, !dbg !17229
  br i1 %5, label %6, label %20, !dbg !17230

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !17231
  %8 = or i8 %7, 8, !dbg !17231
  store i8 %8, i8* %2, align 1, !dbg !17231
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !17233
  br i1 %9, label %10, label %12, !dbg !17235

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15605, metadata !DIExpression()) #25, !dbg !17236
  %11 = and i8 %8, 95, !dbg !17239
  store i8 %11, i8* %2, align 1, !dbg !17239
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15613, metadata !DIExpression()) #25, !dbg !17240
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !17242
  br label %12, !dbg !17243

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17244
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !17244
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !17246
  br i1 %15, label %17, label %16, !dbg !17247

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17248
  br label %17, !dbg !17250

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17251
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17252
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #26, !dbg !17253
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17254
  br label %20, !dbg !17255

20:                                               ; preds = %17, %1
  ret void, !dbg !17256
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !17257 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17261, metadata !DIExpression()), !dbg !17263
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.236(%struct._wait_q_t* noundef %0) #26, !dbg !17264
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17262, metadata !DIExpression()), !dbg !17263
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17265
  br i1 %3, label %10, label %4, !dbg !17266

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17267
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17269
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !17270, metadata !DIExpression()), !dbg !17276
  call void @llvm.dbg.value(metadata i32 0, metadata !17275, metadata !DIExpression()), !dbg !17276
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !17278
  store i32 0, i32* %7, align 4, !dbg !17279
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17280
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.236(%struct._wait_q_t* noundef %0) #26, !dbg !17264
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17262, metadata !DIExpression()), !dbg !17263
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !17265
  br i1 %9, label %10, label %4, !dbg !17266, !llvm.loop !17281

10:                                               ; preds = %4, %1
  ret void, !dbg !17283
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !17284 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17289, metadata !DIExpression()), !dbg !17292
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17288, metadata !DIExpression()), !dbg !17292
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15436, metadata !DIExpression()) #25, !dbg !17293
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17295, !srcloc !15451
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17295
  call void @llvm.dbg.value(metadata i32 %4, metadata !15448, metadata !DIExpression()) #25, !dbg !17297
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #25, !dbg !17297
  call void @llvm.dbg.value(metadata i32 %4, metadata !15442, metadata !DIExpression()) #25, !dbg !17293
  call void @llvm.dbg.value(metadata i32 %4, metadata !17290, metadata !DIExpression()), !dbg !17292
  call void @llvm.dbg.value(metadata i32 0, metadata !17291, metadata !DIExpression()), !dbg !17292
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17298
  %6 = load i8, i8* %5, align 1, !dbg !17298
  %7 = and i8 %6, 8, !dbg !17300
  %8 = icmp eq i8 %7, 0, !dbg !17301
  br i1 %8, label %9, label %24, !dbg !17302

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !17289, metadata !DIExpression()), !dbg !17292
  %11 = icmp eq i64 %10, 0, !dbg !17303
  br i1 %11, label %24, label %12, !dbg !17305

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17306
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !17308
  br i1 %14, label %24, label %15, !dbg !17309

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17310
  %17 = load %struct._wait_q_t*, %struct._wait_q_t** %16, align 8, !dbg !17310
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !17311
  %19 = icmp eq %struct._wait_q_t* %17, %18, !dbg !17312
  br i1 %19, label %24, label %20, !dbg !17313

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17314
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef nonnull %21) #26, !dbg !17316
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17317
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !17318
  call void @llvm.dbg.value(metadata i32 %4, metadata !16045, metadata !DIExpression()) #25, !dbg !17319
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16050, metadata !DIExpression()) #25, !dbg !17319
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #27, !dbg !17321
  call void @llvm.dbg.value(metadata i32 %23, metadata !17291, metadata !DIExpression()), !dbg !17292
  br label %26, !dbg !17322

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !17323
  call void @llvm.dbg.value(metadata i32 %25, metadata !17291, metadata !DIExpression()), !dbg !17292
  call void @llvm.dbg.value(metadata i32 %4, metadata !15463, metadata !DIExpression()) #25, !dbg !17324
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15468, metadata !DIExpression()) #25, !dbg !17324
  call void @llvm.dbg.value(metadata i32 %4, metadata !15471, metadata !DIExpression()) #25, !dbg !17326
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !17328, !srcloc !15477
  br label %26, !dbg !17329

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !17292
  ret i32 %27, !dbg !17330
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !17331 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17335, metadata !DIExpression()), !dbg !17343
  call void @llvm.dbg.value(metadata i32 %1, metadata !17336, metadata !DIExpression()), !dbg !17343
  call void @llvm.dbg.value(metadata i8* %2, metadata !17337, metadata !DIExpression()), !dbg !17343
  call void @llvm.dbg.value(metadata i8 0, metadata !17339, metadata !DIExpression()), !dbg !17343
  call void @llvm.dbg.value(metadata i32 0, metadata !17340, metadata !DIExpression()), !dbg !17344
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15436, metadata !DIExpression()) #25, !dbg !17345
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17347, !srcloc !15451
  call void @llvm.dbg.value(metadata i32 undef, metadata !15448, metadata !DIExpression()) #25, !dbg !17349
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #25, !dbg !17349
  call void @llvm.dbg.value(metadata i32 undef, metadata !15442, metadata !DIExpression()) #25, !dbg !17345
  call void @llvm.dbg.value(metadata i32 undef, metadata !17342, metadata !DIExpression()), !dbg !17344
  call void @llvm.dbg.value(metadata i8 poison, metadata !17339, metadata !DIExpression()), !dbg !17343
  call void @llvm.dbg.value(metadata i32 undef, metadata !17340, metadata !DIExpression()), !dbg !17344
  %5 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !17350
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17338, metadata !DIExpression()), !dbg !17343
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17353
  br i1 %7, label %12, label %8, !dbg !17355

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17356, metadata !DIExpression()), !dbg !17363
  call void @llvm.dbg.value(metadata i32 %1, metadata !17361, metadata !DIExpression()), !dbg !17363
  call void @llvm.dbg.value(metadata i8* %2, metadata !17362, metadata !DIExpression()), !dbg !17363
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17270, metadata !DIExpression()), !dbg !17366
  call void @llvm.dbg.value(metadata i32 %1, metadata !17275, metadata !DIExpression()), !dbg !17366
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !17368
  store i32 %1, i32* %9, align 4, !dbg !17369
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !17370
  store i8* %2, i8** %10, align 4, !dbg !17371
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17372
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17373
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !17374
  call void @llvm.dbg.value(metadata i8 1, metadata !17339, metadata !DIExpression()), !dbg !17343
  br label %12, !dbg !17375

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !17347
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !17347
  call void @llvm.dbg.value(metadata i32 %14, metadata !15448, metadata !DIExpression()) #25, !dbg !17349
  call void @llvm.dbg.value(metadata i32 %14, metadata !15442, metadata !DIExpression()) #25, !dbg !17345
  call void @llvm.dbg.value(metadata i32 %14, metadata !17342, metadata !DIExpression()), !dbg !17344
  call void @llvm.dbg.value(metadata i8 poison, metadata !17339, metadata !DIExpression()), !dbg !17343
  call void @llvm.dbg.value(metadata i32 undef, metadata !15463, metadata !DIExpression()) #25, !dbg !17376
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15468, metadata !DIExpression()) #25, !dbg !17376
  call void @llvm.dbg.value(metadata i32 undef, metadata !15471, metadata !DIExpression()) #25, !dbg !17378
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !17380, !srcloc !15477
  call void @llvm.dbg.value(metadata i32 undef, metadata !17340, metadata !DIExpression()), !dbg !17344
  ret i1 %13, !dbg !17381
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !17382 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17388, metadata !DIExpression()), !dbg !17393
  call void @llvm.dbg.value(metadata i64 undef, metadata !17390, metadata !DIExpression()), !dbg !17393
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17387, metadata !DIExpression()), !dbg !17393
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !17389, metadata !DIExpression()), !dbg !17393
  call void @llvm.dbg.value(metadata i8** %4, metadata !17391, metadata !DIExpression()), !dbg !17393
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !17394
  call void @llvm.dbg.value(metadata i32 %6, metadata !17392, metadata !DIExpression()), !dbg !17393
  %7 = icmp eq i8** %4, null, !dbg !17395
  br i1 %7, label %12, label %8, !dbg !17397

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17398
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17400
  %11 = load i8*, i8** %10, align 4, !dbg !17400
  store i8* %11, i8** %4, align 4, !dbg !17401
  br label %12, !dbg !17402

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !17403
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !17404 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !17406
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !17407
  ret void, !dbg !17408
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17409 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17419, metadata !DIExpression()), !dbg !17436
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17417, metadata !DIExpression()), !dbg !17436
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !17418, metadata !DIExpression()), !dbg !17436
  %5 = icmp eq i64 %4, -1, !dbg !17437
  br i1 %5, label %55, label %6, !dbg !17439

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17440
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !17441
  call void @llvm.dbg.value(metadata i32 0, metadata !17420, metadata !DIExpression()), !dbg !17442
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17443, metadata !DIExpression()) #25, !dbg !17450
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17452, !srcloc !17458
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !17452
  call void @llvm.dbg.value(metadata i32 %9, metadata !17455, metadata !DIExpression()) #25, !dbg !17459
  call void @llvm.dbg.value(metadata i32 undef, metadata !17456, metadata !DIExpression()) #25, !dbg !17459
  call void @llvm.dbg.value(metadata i32 %9, metadata !17449, metadata !DIExpression()) #25, !dbg !17450
  call void @llvm.dbg.value(metadata i32 %9, metadata !17426, metadata !DIExpression()), !dbg !17442
  call void @llvm.dbg.value(metadata i32 undef, metadata !17420, metadata !DIExpression()), !dbg !17442
  %10 = icmp slt i64 %4, -1, !dbg !17460
  br i1 %10, label %11, label %17, !dbg !17461

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !17462
  %13 = add i64 %4, %12, !dbg !17463
  %14 = sub i64 -2, %13, !dbg !17463
  call void @llvm.dbg.value(metadata i64 %14, metadata !17430, metadata !DIExpression()), !dbg !17464
  %15 = icmp sgt i64 %14, 1, !dbg !17465
  %16 = select i1 %15, i64 %14, i64 1, !dbg !17465
  br label %22, !dbg !17466

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !17467
  %19 = tail call fastcc i32 @elapsed.249() #26, !dbg !17469
  %20 = sext i32 %19 to i64, !dbg !17469
  %21 = add nsw i64 %18, %20, !dbg !17470
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !17471
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17472
  store i64 %23, i64* %24, align 8, !dbg !17473
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !17474
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !17427, metadata !DIExpression()), !dbg !17476
  %26 = icmp eq %struct._timeout* %25, null, !dbg !17477
  br i1 %26, label %42, label %27, !dbg !17477

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !17478
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !17427, metadata !DIExpression()), !dbg !17476
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17482
  %31 = load i64, i64* %30, align 8, !dbg !17482
  %32 = icmp slt i64 %28, %31, !dbg !17483
  br i1 %32, label %33, label %38, !dbg !17484

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17482
  %35 = sub nsw i64 %31, %28, !dbg !17485
  store i64 %35, i64* %34, align 8, !dbg !17485
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !17487
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17488
  tail call fastcc void @sys_dlist_insert.250(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !17489
  br label %44, !dbg !17490

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !17491
  store i64 %39, i64* %24, align 8, !dbg !17491
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !17492
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !17427, metadata !DIExpression()), !dbg !17476
  %41 = icmp eq %struct._timeout* %40, null, !dbg !17477
  br i1 %41, label %42, label %27, !dbg !17477, !llvm.loop !17493

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17495
  tail call fastcc void @sys_dlist_append.251(%struct._dnode* noundef %43) #26, !dbg !17498
  br label %44, !dbg !17499

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !17500
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !17501
  br i1 %46, label %47, label %54, !dbg !17502

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !17503
  call void @llvm.dbg.value(metadata i32 %48, metadata !17433, metadata !DIExpression()), !dbg !17504
  %49 = icmp ne i32 %48, 0, !dbg !17505
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !17507
  br i1 %52, label %54, label %53, !dbg !17507

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #27, !dbg !17508
  br label %54, !dbg !17510

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !17511, metadata !DIExpression()) #25, !dbg !17517
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17516, metadata !DIExpression()) #25, !dbg !17517
  call void @llvm.dbg.value(metadata i32 %9, metadata !17519, metadata !DIExpression()) #25, !dbg !17522
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !17524, !srcloc !17525
  call void @llvm.dbg.value(metadata i32 undef, metadata !17420, metadata !DIExpression()), !dbg !17442
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !17526
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.249() unnamed_addr #1 !dbg !17527 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17530
  %2 = icmp eq i32 %1, 0, !dbg !17531
  br i1 %2, label %3, label %5, !dbg !17530

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !17532
  br label %5, !dbg !17530

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17530
  ret i32 %6, !dbg !17533
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #4 !dbg !17534 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.254() #26, !dbg !17540
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17538, metadata !DIExpression()), !dbg !17541
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17542
  ret %struct._timeout* %2, !dbg !17543
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.250(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !17544 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17548, metadata !DIExpression()), !dbg !17552
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17549, metadata !DIExpression()), !dbg !17552
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17553
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17553
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17550, metadata !DIExpression()), !dbg !17552
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17554
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17555
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17556
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17557
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17558
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17559
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17560
  ret void, !dbg !17561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #4 !dbg !17562 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17566, metadata !DIExpression()), !dbg !17568
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17569
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.252(%struct._dnode* noundef %2) #26, !dbg !17570
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17567, metadata !DIExpression()), !dbg !17568
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17571
  ret %struct._timeout* %4, !dbg !17572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.251(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17573 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17578, metadata !DIExpression()), !dbg !17581
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17579, metadata !DIExpression()), !dbg !17581
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17582
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17580, metadata !DIExpression()), !dbg !17581
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17583
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17584
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17585
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17586
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17587
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17588
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17589
  ret void, !dbg !17590
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17591 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !17596
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17593, metadata !DIExpression()), !dbg !17597
  %2 = tail call fastcc i32 @elapsed.249() #26, !dbg !17598
  call void @llvm.dbg.value(metadata i32 %2, metadata !17594, metadata !DIExpression()), !dbg !17597
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17599
  br i1 %3, label %14, label %4, !dbg !17601

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17602
  %6 = load i64, i64* %5, align 8, !dbg !17602
  %7 = sext i32 %2 to i64, !dbg !17603
  %8 = sub nsw i64 %6, %7, !dbg !17604
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17605
  br i1 %9, label %14, label %10, !dbg !17606

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17607
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17607
  %13 = trunc i64 %12 to i32, !dbg !17607
  call void @llvm.dbg.value(metadata i32 %13, metadata !17595, metadata !DIExpression()), !dbg !17597
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17609
  call void @llvm.dbg.value(metadata i32 %15, metadata !17595, metadata !DIExpression()), !dbg !17597
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17610
  %17 = icmp ne i32 %16, 0, !dbg !17612
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17613
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17613
  call void @llvm.dbg.value(metadata i32 %20, metadata !17595, metadata !DIExpression()), !dbg !17597
  ret i32 %20, !dbg !17614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.252(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !17615 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17619, metadata !DIExpression()), !dbg !17621
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17620, metadata !DIExpression()), !dbg !17621
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17622
  br i1 %2, label %5, label %3, !dbg !17623

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.253(%struct._dnode* noundef nonnull %0) #26, !dbg !17624
  br label %5, !dbg !17623

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17623
  ret %struct._dnode* %6, !dbg !17625
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.253(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !17626 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17628, metadata !DIExpression()), !dbg !17630
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17629, metadata !DIExpression()), !dbg !17630
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17631
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17632
  br i1 %3, label %7, label %4, !dbg !17633

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17634
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17634
  br label %7, !dbg !17633

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17633
  ret %struct._dnode* %8, !dbg !17635
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.254() unnamed_addr #4 !dbg !17636 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17640, metadata !DIExpression()), !dbg !17641
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.255() #26, !dbg !17642
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17642
  ret %struct._dnode* %3, !dbg !17643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.255() unnamed_addr #4 !dbg !17644 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17648, metadata !DIExpression()), !dbg !17649
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17650
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17651
  ret i1 %2, !dbg !17652
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17653 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17657, metadata !DIExpression()), !dbg !17662
  call void @llvm.dbg.value(metadata i32 -22, metadata !17658, metadata !DIExpression()), !dbg !17662
  call void @llvm.dbg.value(metadata i32 0, metadata !17659, metadata !DIExpression()), !dbg !17663
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17443, metadata !DIExpression()) #25, !dbg !17664
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17666, !srcloc !17458
  call void @llvm.dbg.value(metadata i32 undef, metadata !17455, metadata !DIExpression()) #25, !dbg !17668
  call void @llvm.dbg.value(metadata i32 undef, metadata !17456, metadata !DIExpression()) #25, !dbg !17668
  call void @llvm.dbg.value(metadata i32 undef, metadata !17449, metadata !DIExpression()) #25, !dbg !17664
  call void @llvm.dbg.value(metadata i32 undef, metadata !17661, metadata !DIExpression()), !dbg !17663
  call void @llvm.dbg.value(metadata i32 -22, metadata !17658, metadata !DIExpression()), !dbg !17662
  call void @llvm.dbg.value(metadata i32 undef, metadata !17659, metadata !DIExpression()), !dbg !17663
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17658, metadata !DIExpression()), !dbg !17662
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.258(%struct._dnode* noundef %3) #26, !dbg !17669
  br i1 %4, label %5, label %6, !dbg !17673

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !17674
  call void @llvm.dbg.value(metadata i32 0, metadata !17658, metadata !DIExpression()), !dbg !17662
  br label %6, !dbg !17676

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !17662
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !17666
  call void @llvm.dbg.value(metadata i32 %8, metadata !17455, metadata !DIExpression()) #25, !dbg !17668
  call void @llvm.dbg.value(metadata i32 %8, metadata !17449, metadata !DIExpression()) #25, !dbg !17664
  call void @llvm.dbg.value(metadata i32 %8, metadata !17661, metadata !DIExpression()), !dbg !17663
  call void @llvm.dbg.value(metadata i32 %7, metadata !17658, metadata !DIExpression()), !dbg !17662
  call void @llvm.dbg.value(metadata i32 undef, metadata !17511, metadata !DIExpression()) #25, !dbg !17677
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17516, metadata !DIExpression()) #25, !dbg !17677
  call void @llvm.dbg.value(metadata i32 undef, metadata !17519, metadata !DIExpression()) #25, !dbg !17679
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !17681, !srcloc !17525
  call void @llvm.dbg.value(metadata i32 undef, metadata !17659, metadata !DIExpression()), !dbg !17663
  ret i32 %7, !dbg !17682
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.258(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !17683 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17689, metadata !DIExpression()), !dbg !17690
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17691
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17691
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17692
  ret i1 %4, !dbg !17693
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !17694 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17696, metadata !DIExpression()), !dbg !17697
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !17698
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17700
  br i1 %3, label %10, label %4, !dbg !17701

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17702
  %6 = load i64, i64* %5, align 8, !dbg !17702
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17704
  %8 = load i64, i64* %7, align 8, !dbg !17705
  %9 = add nsw i64 %8, %6, !dbg !17705
  store i64 %9, i64* %7, align 8, !dbg !17705
  br label %10, !dbg !17706

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17707
  tail call fastcc void @sys_dlist_remove.259(%struct._dnode* noundef %11) #26, !dbg !17708
  ret void, !dbg !17709
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.259(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17710 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17714, metadata !DIExpression()), !dbg !17717
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17718
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17718
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17715, metadata !DIExpression()), !dbg !17717
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17719
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17719
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17716, metadata !DIExpression()), !dbg !17717
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17720
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17721
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17722
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17723
  tail call fastcc void @sys_dnode_init.260(%struct._dnode* noundef %0) #26, !dbg !17724
  ret void, !dbg !17725
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.260(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !17726 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17728, metadata !DIExpression()), !dbg !17729
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17730
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17731
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17732
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17733
  ret void, !dbg !17734
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17735 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17741, metadata !DIExpression()), !dbg !17746
  call void @llvm.dbg.value(metadata i64 0, metadata !17742, metadata !DIExpression()), !dbg !17746
  call void @llvm.dbg.value(metadata i32 0, metadata !17743, metadata !DIExpression()), !dbg !17747
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17443, metadata !DIExpression()) #25, !dbg !17748
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17750, !srcloc !17458
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17750
  call void @llvm.dbg.value(metadata i32 %3, metadata !17455, metadata !DIExpression()) #25, !dbg !17752
  call void @llvm.dbg.value(metadata i32 undef, metadata !17456, metadata !DIExpression()) #25, !dbg !17752
  call void @llvm.dbg.value(metadata i32 %3, metadata !17449, metadata !DIExpression()) #25, !dbg !17748
  call void @llvm.dbg.value(metadata i32 %3, metadata !17745, metadata !DIExpression()), !dbg !17747
  call void @llvm.dbg.value(metadata i64 0, metadata !17742, metadata !DIExpression()), !dbg !17746
  call void @llvm.dbg.value(metadata i32 undef, metadata !17743, metadata !DIExpression()), !dbg !17747
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17753
  call void @llvm.dbg.value(metadata i64 %4, metadata !17742, metadata !DIExpression()), !dbg !17746
  call void @llvm.dbg.value(metadata i32 %3, metadata !17511, metadata !DIExpression()) #25, !dbg !17756
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17516, metadata !DIExpression()) #25, !dbg !17756
  call void @llvm.dbg.value(metadata i32 %3, metadata !17519, metadata !DIExpression()) #25, !dbg !17758
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17760, !srcloc !17525
  call void @llvm.dbg.value(metadata i32 undef, metadata !17743, metadata !DIExpression()), !dbg !17747
  ret i64 %4, !dbg !17761
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17762 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17764, metadata !DIExpression()), !dbg !17768
  call void @llvm.dbg.value(metadata i64 0, metadata !17765, metadata !DIExpression()), !dbg !17768
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.261(%struct._timeout* noundef %0) #26, !dbg !17769
  br i1 %2, label %21, label %3, !dbg !17771

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !17772
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17766, metadata !DIExpression()), !dbg !17773
  call void @llvm.dbg.value(metadata i64 0, metadata !17765, metadata !DIExpression()), !dbg !17768
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17774
  br i1 %5, label %16, label %6, !dbg !17776

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17766, metadata !DIExpression()), !dbg !17773
  call void @llvm.dbg.value(metadata i64 %8, metadata !17765, metadata !DIExpression()), !dbg !17768
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17777
  %10 = load i64, i64* %9, align 8, !dbg !17777
  %11 = add nsw i64 %10, %8, !dbg !17779
  call void @llvm.dbg.value(metadata i64 %11, metadata !17765, metadata !DIExpression()), !dbg !17768
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17780
  br i1 %12, label %16, label %13, !dbg !17782

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !17783
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17766, metadata !DIExpression()), !dbg !17773
  call void @llvm.dbg.value(metadata i64 %11, metadata !17765, metadata !DIExpression()), !dbg !17768
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17774
  br i1 %15, label %16, label %6, !dbg !17776, !llvm.loop !17784

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17768
  call void @llvm.dbg.value(metadata i64 %17, metadata !17765, metadata !DIExpression()), !dbg !17768
  %18 = tail call fastcc i32 @elapsed.249() #26, !dbg !17786
  %19 = sext i32 %18 to i64, !dbg !17786
  %20 = sub nsw i64 %17, %19, !dbg !17787
  br label %21, !dbg !17788

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17768
  ret i64 %22, !dbg !17789
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.261(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !17790 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17794, metadata !DIExpression()), !dbg !17795
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17796
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.258(%struct._dnode* noundef %2) #26, !dbg !17797
  %4 = xor i1 %3, true, !dbg !17798
  ret i1 %4, !dbg !17799
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17800 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17802, metadata !DIExpression()), !dbg !17807
  call void @llvm.dbg.value(metadata i64 0, metadata !17803, metadata !DIExpression()), !dbg !17807
  call void @llvm.dbg.value(metadata i32 0, metadata !17804, metadata !DIExpression()), !dbg !17808
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17443, metadata !DIExpression()) #25, !dbg !17809
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17811, !srcloc !17458
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17811
  call void @llvm.dbg.value(metadata i32 %3, metadata !17455, metadata !DIExpression()) #25, !dbg !17813
  call void @llvm.dbg.value(metadata i32 undef, metadata !17456, metadata !DIExpression()) #25, !dbg !17813
  call void @llvm.dbg.value(metadata i32 %3, metadata !17449, metadata !DIExpression()) #25, !dbg !17809
  call void @llvm.dbg.value(metadata i32 %3, metadata !17806, metadata !DIExpression()), !dbg !17808
  call void @llvm.dbg.value(metadata i64 0, metadata !17803, metadata !DIExpression()), !dbg !17807
  call void @llvm.dbg.value(metadata i32 undef, metadata !17804, metadata !DIExpression()), !dbg !17808
  %4 = load i64, i64* @curr_tick, align 8, !dbg !17814
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17817
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !17803, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17807
  call void @llvm.dbg.value(metadata i32 %3, metadata !17511, metadata !DIExpression()) #25, !dbg !17818
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17516, metadata !DIExpression()) #25, !dbg !17818
  call void @llvm.dbg.value(metadata i32 %3, metadata !17519, metadata !DIExpression()) #25, !dbg !17820
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17822, !srcloc !17525
  call void @llvm.dbg.value(metadata i32 undef, metadata !17804, metadata !DIExpression()), !dbg !17808
  %6 = add i64 %5, %4, !dbg !17823
  ret i64 %6, !dbg !17824
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17825 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17827, metadata !DIExpression()), !dbg !17831
  call void @llvm.dbg.value(metadata i32 0, metadata !17828, metadata !DIExpression()), !dbg !17832
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17443, metadata !DIExpression()) #25, !dbg !17833
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17835, !srcloc !17458
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17835
  call void @llvm.dbg.value(metadata i32 %2, metadata !17455, metadata !DIExpression()) #25, !dbg !17837
  call void @llvm.dbg.value(metadata i32 undef, metadata !17456, metadata !DIExpression()) #25, !dbg !17837
  call void @llvm.dbg.value(metadata i32 %2, metadata !17449, metadata !DIExpression()) #25, !dbg !17833
  call void @llvm.dbg.value(metadata i32 %2, metadata !17830, metadata !DIExpression()), !dbg !17832
  call void @llvm.dbg.value(metadata i32 -1, metadata !17827, metadata !DIExpression()), !dbg !17831
  call void @llvm.dbg.value(metadata i32 undef, metadata !17828, metadata !DIExpression()), !dbg !17832
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !17838
  call void @llvm.dbg.value(metadata i32 %3, metadata !17827, metadata !DIExpression()), !dbg !17831
  call void @llvm.dbg.value(metadata i32 %2, metadata !17511, metadata !DIExpression()) #25, !dbg !17841
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17516, metadata !DIExpression()) #25, !dbg !17841
  call void @llvm.dbg.value(metadata i32 %2, metadata !17519, metadata !DIExpression()) #25, !dbg !17843
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !17845, !srcloc !17525
  call void @llvm.dbg.value(metadata i32 undef, metadata !17828, metadata !DIExpression()), !dbg !17832
  ret i32 %3, !dbg !17846
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17847 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17849, metadata !DIExpression()), !dbg !17859
  call void @llvm.dbg.value(metadata i1 %1, metadata !17850, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17859
  call void @llvm.dbg.value(metadata i32 0, metadata !17851, metadata !DIExpression()), !dbg !17860
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17443, metadata !DIExpression()) #25, !dbg !17861
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17863, !srcloc !17458
  call void @llvm.dbg.value(metadata i32 undef, metadata !17455, metadata !DIExpression()) #25, !dbg !17865
  call void @llvm.dbg.value(metadata i32 undef, metadata !17456, metadata !DIExpression()) #25, !dbg !17865
  call void @llvm.dbg.value(metadata i32 undef, metadata !17449, metadata !DIExpression()) #25, !dbg !17861
  call void @llvm.dbg.value(metadata i32 undef, metadata !17853, metadata !DIExpression()), !dbg !17860
  call void @llvm.dbg.value(metadata i32 undef, metadata !17851, metadata !DIExpression()), !dbg !17860
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !17866
  call void @llvm.dbg.value(metadata i32 %4, metadata !17854, metadata !DIExpression()), !dbg !17867
  call void @llvm.dbg.value(metadata i1 undef, metadata !17857, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17867
  %5 = icmp slt i32 %4, 2, !dbg !17868
  call void @llvm.dbg.value(metadata i1 %5, metadata !17858, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17867
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !17869
  call void @llvm.dbg.value(metadata i1 %6, metadata !17857, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17867
  br i1 %7, label %11, label %8, !dbg !17869

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !17871
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !17871
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #27, !dbg !17873
  br label %11, !dbg !17874

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !17863
  call void @llvm.dbg.value(metadata i32 %12, metadata !17455, metadata !DIExpression()) #25, !dbg !17865
  call void @llvm.dbg.value(metadata i32 %12, metadata !17449, metadata !DIExpression()) #25, !dbg !17861
  call void @llvm.dbg.value(metadata i32 %12, metadata !17853, metadata !DIExpression()), !dbg !17860
  call void @llvm.dbg.value(metadata i32 undef, metadata !17511, metadata !DIExpression()) #25, !dbg !17875
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17516, metadata !DIExpression()) #25, !dbg !17875
  call void @llvm.dbg.value(metadata i32 undef, metadata !17519, metadata !DIExpression()) #25, !dbg !17877
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !17879, !srcloc !17525
  call void @llvm.dbg.value(metadata i32 1, metadata !17851, metadata !DIExpression()), !dbg !17860
  call void @llvm.dbg.value(metadata i32 undef, metadata !17851, metadata !DIExpression()), !dbg !17860
  ret void, !dbg !17880
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17881 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17885, metadata !DIExpression()), !dbg !17890
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !17891
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17443, metadata !DIExpression()) #25, !dbg !17892
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17894, !srcloc !17458
  call void @llvm.dbg.value(metadata i32 undef, metadata !17455, metadata !DIExpression()) #25, !dbg !17896
  call void @llvm.dbg.value(metadata i32 undef, metadata !17456, metadata !DIExpression()) #25, !dbg !17896
  call void @llvm.dbg.value(metadata i32 undef, metadata !17449, metadata !DIExpression()) #25, !dbg !17892
  call void @llvm.dbg.value(metadata i32 undef, metadata !17886, metadata !DIExpression()), !dbg !17890
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17890
  call void @llvm.dbg.value(metadata i32 undef, metadata !17886, metadata !DIExpression()), !dbg !17890
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !17897
  %4 = icmp eq %struct._timeout* %3, null, !dbg !17898
  br i1 %4, label %28, label %5, !dbg !17899

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !17900
  %10 = load i64, i64* %9, align 8, !dbg !17900
  %11 = sext i32 %8 to i64, !dbg !17901
  %12 = icmp sgt i64 %10, %11, !dbg !17902
  br i1 %12, label %26, label %13, !dbg !17903

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !17890
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !17887, metadata !DIExpression()), !dbg !17904
  %15 = trunc i64 %10 to i32, !dbg !17905
  call void @llvm.dbg.value(metadata i32 %15, metadata !17889, metadata !DIExpression()), !dbg !17904
  %16 = sext i32 %15 to i64, !dbg !17906
  %17 = load i64, i64* @curr_tick, align 8, !dbg !17907
  %18 = add i64 %17, %16, !dbg !17907
  store i64 %18, i64* @curr_tick, align 8, !dbg !17907
  store i64 0, i64* %9, align 8, !dbg !17908
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !17909
  call void @llvm.dbg.value(metadata i32 %14, metadata !17511, metadata !DIExpression()) #25, !dbg !17910
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17516, metadata !DIExpression()) #25, !dbg !17910
  call void @llvm.dbg.value(metadata i32 %14, metadata !17519, metadata !DIExpression()) #25, !dbg !17912
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !17914, !srcloc !17525
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !17915
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !17915
  tail call void %20(%struct._timeout* noundef nonnull %6) #27, !dbg !17916
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17443, metadata !DIExpression()) #25, !dbg !17917
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17919, !srcloc !17458
  call void @llvm.dbg.value(metadata i32 undef, metadata !17455, metadata !DIExpression()) #25, !dbg !17921
  call void @llvm.dbg.value(metadata i32 undef, metadata !17456, metadata !DIExpression()) #25, !dbg !17921
  call void @llvm.dbg.value(metadata i32 undef, metadata !17449, metadata !DIExpression()) #25, !dbg !17917
  call void @llvm.dbg.value(metadata i32 undef, metadata !17886, metadata !DIExpression()), !dbg !17890
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !17922
  %23 = sub nsw i32 %22, %15, !dbg !17922
  store i32 %23, i32* @announce_remaining, align 4, !dbg !17890
  call void @llvm.dbg.value(metadata i32 undef, metadata !17886, metadata !DIExpression()), !dbg !17890
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !17897
  %25 = icmp eq %struct._timeout* %24, null, !dbg !17898
  br i1 %25, label %28, label %5, !dbg !17899, !llvm.loop !17923

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !17925
  store i64 %27, i64* %9, align 8, !dbg !17925
  br label %32, !dbg !17928

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !17890
  %31 = sext i32 %30 to i64, !dbg !17929
  br label %32, !dbg !17929

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !17929
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !17890
  %36 = load i64, i64* @curr_tick, align 8, !dbg !17930
  %37 = add i64 %36, %33, !dbg !17930
  store i64 %37, i64* @curr_tick, align 8, !dbg !17930
  store i32 0, i32* @announce_remaining, align 4, !dbg !17931
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !17932
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #27, !dbg !17933
  call void @llvm.dbg.value(metadata i32 %35, metadata !17511, metadata !DIExpression()) #25, !dbg !17934
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17516, metadata !DIExpression()) #25, !dbg !17934
  call void @llvm.dbg.value(metadata i32 %35, metadata !17519, metadata !DIExpression()) #25, !dbg !17936
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !17938, !srcloc !17525
  ret void, !dbg !17939
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17940 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17942, metadata !DIExpression()), !dbg !17946
  call void @llvm.dbg.value(metadata i32 0, metadata !17943, metadata !DIExpression()), !dbg !17947
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17443, metadata !DIExpression()) #25, !dbg !17948
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17950, !srcloc !17458
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17950
  call void @llvm.dbg.value(metadata i32 %2, metadata !17455, metadata !DIExpression()) #25, !dbg !17952
  call void @llvm.dbg.value(metadata i32 undef, metadata !17456, metadata !DIExpression()) #25, !dbg !17952
  call void @llvm.dbg.value(metadata i32 %2, metadata !17449, metadata !DIExpression()) #25, !dbg !17948
  call void @llvm.dbg.value(metadata i32 %2, metadata !17945, metadata !DIExpression()), !dbg !17947
  call void @llvm.dbg.value(metadata i64 0, metadata !17942, metadata !DIExpression()), !dbg !17946
  call void @llvm.dbg.value(metadata i32 undef, metadata !17943, metadata !DIExpression()), !dbg !17947
  %3 = load i64, i64* @curr_tick, align 8, !dbg !17953
  %4 = tail call fastcc i32 @elapsed.249() #26, !dbg !17956
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !17942, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17946
  call void @llvm.dbg.value(metadata i32 %2, metadata !17511, metadata !DIExpression()) #25, !dbg !17957
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17516, metadata !DIExpression()) #25, !dbg !17957
  call void @llvm.dbg.value(metadata i32 %2, metadata !17519, metadata !DIExpression()) #25, !dbg !17959
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !17961, !srcloc !17525
  call void @llvm.dbg.value(metadata i32 undef, metadata !17943, metadata !DIExpression()), !dbg !17947
  %5 = sext i32 %4 to i64, !dbg !17956
  %6 = add i64 %3, %5, !dbg !17962
  ret i64 %6, !dbg !17963
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17964 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17965
  %2 = trunc i64 %1 to i32, !dbg !17966
  ret i32 %2, !dbg !17967
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17968 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17969
  ret i64 %1, !dbg !17970
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17971 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17973, metadata !DIExpression()), !dbg !17980
  %2 = icmp eq i32 %0, 0, !dbg !17981
  br i1 %2, label %10, label %3, !dbg !17983

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17984
  call void @llvm.dbg.value(metadata i32 %4, metadata !17974, metadata !DIExpression()), !dbg !17980
  %5 = mul i32 %0, 84, !dbg !17985
  call void @llvm.dbg.value(metadata i32 %5, metadata !17975, metadata !DIExpression()), !dbg !17980
  br label %6, !dbg !17986

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17987
  call void @llvm.dbg.value(metadata i32 %7, metadata !17976, metadata !DIExpression()), !dbg !17988
  %8 = sub i32 %7, %4, !dbg !17989
  %9 = icmp ult i32 %8, %5, !dbg !17991
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17992
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17993 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !17994
  ret i32 %1, !dbg !17995
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17996 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !17998
  ret i32 %1, !dbg !17999
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !18000 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18004, metadata !DIExpression()), !dbg !18006
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !18007

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !18008
  br label %14, !dbg !18012

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !18005, metadata !DIExpression()), !dbg !18006
  %6 = icmp slt i64 %2, -1, !dbg !18013
  br i1 %6, label %7, label %9, !dbg !18016

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18017
  br label %14, !dbg !18018

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !18020
  %11 = icmp ugt i64 %2, 1, !dbg !18021
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18021
  %13 = add nsw i64 %10, %12, !dbg !18022
  br label %14, !dbg !18023

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18024
  ret i64 %15, !dbg !18025
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_free(i8* noundef %0) local_unnamed_addr #1 !dbg !18026 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !18028, metadata !DIExpression()), !dbg !18032
  %2 = icmp eq i8* %0, null, !dbg !18033
  br i1 %2, label %7, label %3, !dbg !18035

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !18029, metadata !DIExpression()), !dbg !18032
  %4 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !18036
  %5 = bitcast i8* %4 to %struct.k_heap**, !dbg !18036
  call void @llvm.dbg.value(metadata %struct.k_heap** %5, metadata !18029, metadata !DIExpression()), !dbg !18032
  call void @llvm.dbg.value(metadata i8* %4, metadata !18028, metadata !DIExpression()), !dbg !18032
  %6 = load %struct.k_heap*, %struct.k_heap** %5, align 4, !dbg !18038
  tail call void @k_heap_free(%struct.k_heap* noundef %6, i8* noundef nonnull %4) #27, !dbg !18039
  br label %7, !dbg !18040

7:                                                ; preds = %3, %1
  ret void, !dbg !18041
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18042 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18046, metadata !DIExpression()), !dbg !18049
  call void @llvm.dbg.value(metadata i32 %1, metadata !18047, metadata !DIExpression()), !dbg !18049
  %3 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull @_system_heap, i32 noundef %0, i32 noundef %1) #26, !dbg !18050
  call void @llvm.dbg.value(metadata i8* %3, metadata !18048, metadata !DIExpression()), !dbg !18049
  ret i8* %3, !dbg !18051
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !18052 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18056, metadata !DIExpression()), !dbg !18062
  call void @llvm.dbg.value(metadata i32 %1, metadata !18057, metadata !DIExpression()), !dbg !18062
  call void @llvm.dbg.value(metadata i32 %2, metadata !18058, metadata !DIExpression()), !dbg !18062
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !18058, metadata !DIExpression(DW_OP_deref)), !dbg !18062
  %5 = call fastcc zeroext i1 @size_add_overflow(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !18063
  br i1 %5, label %14, label %6, !dbg !18065

6:                                                ; preds = %3
  %7 = or i32 %1, 4, !dbg !18066
  call void @llvm.dbg.value(metadata i32 %7, metadata !18061, metadata !DIExpression()), !dbg !18062
  %8 = load i32, i32* %4, align 4, !dbg !18067
  call void @llvm.dbg.value(metadata i32 %8, metadata !18058, metadata !DIExpression()), !dbg !18062
  %9 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %7, i32 noundef %8, [1 x i64] zeroinitializer) #27, !dbg !18068
  call void @llvm.dbg.value(metadata i8* %9, metadata !18059, metadata !DIExpression()), !dbg !18062
  %10 = icmp eq i8* %9, null, !dbg !18069
  br i1 %10, label %14, label %11, !dbg !18071

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.k_heap**, !dbg !18072
  call void @llvm.dbg.value(metadata %struct.k_heap** %12, metadata !18060, metadata !DIExpression()), !dbg !18062
  store %struct.k_heap* %0, %struct.k_heap** %12, align 4, !dbg !18073
  %13 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !18074
  call void @llvm.dbg.value(metadata i8* %13, metadata !18060, metadata !DIExpression()), !dbg !18062
  call void @llvm.dbg.value(metadata i8* %13, metadata !18059, metadata !DIExpression()), !dbg !18062
  br label %14, !dbg !18075

14:                                               ; preds = %6, %3, %11
  %15 = phi i8* [ %13, %11 ], [ null, %3 ], [ null, %6 ], !dbg !18062
  ret i8* %15, !dbg !18076
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_add_overflow(i32 noundef %0, i32* nocapture noundef writeonly %1) unnamed_addr #23 !dbg !18077 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18079, metadata !DIExpression()), !dbg !18082
  call void @llvm.dbg.value(metadata i32 4, metadata !18080, metadata !DIExpression()), !dbg !18082
  call void @llvm.dbg.value(metadata i32* %1, metadata !18081, metadata !DIExpression()), !dbg !18082
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 4), !dbg !18083
  %4 = extractvalue { i32, i1 } %3, 1, !dbg !18083
  %5 = extractvalue { i32, i1 } %3, 0, !dbg !18083
  store i32 %5, i32* %1, align 4, !dbg !18083
  ret i1 %4, !dbg !18084
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_malloc(i32 noundef %0) local_unnamed_addr #1 !dbg !18085 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18087, metadata !DIExpression()), !dbg !18089
  %2 = tail call i8* @k_aligned_alloc(i32 noundef 4, i32 noundef %0) #26, !dbg !18090
  call void @llvm.dbg.value(metadata i8* %2, metadata !18088, metadata !DIExpression()), !dbg !18089
  ret i8* %2, !dbg !18091
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_calloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18092 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !18094, metadata !DIExpression()), !dbg !18098
  call void @llvm.dbg.value(metadata i32 %1, metadata !18095, metadata !DIExpression()), !dbg !18098
  %4 = bitcast i32* %3 to i8*, !dbg !18099
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #25, !dbg !18099
  call void @llvm.dbg.value(metadata i32* %3, metadata !18097, metadata !DIExpression(DW_OP_deref)), !dbg !18098
  %5 = call fastcc zeroext i1 @size_mul_overflow.279(i32 noundef %0, i32 noundef %1, i32* noundef nonnull %3) #26, !dbg !18100
  br i1 %5, label %12, label %6, !dbg !18102

6:                                                ; preds = %2
  %7 = load i32, i32* %3, align 4, !dbg !18103
  call void @llvm.dbg.value(metadata i32 %7, metadata !18097, metadata !DIExpression()), !dbg !18098
  %8 = tail call i8* @k_malloc(i32 noundef %7) #26, !dbg !18104
  call void @llvm.dbg.value(metadata i8* %8, metadata !18096, metadata !DIExpression()), !dbg !18098
  %9 = icmp eq i8* %8, null, !dbg !18105
  br i1 %9, label %12, label %10, !dbg !18107

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 %7, metadata !18097, metadata !DIExpression()), !dbg !18098
  %11 = tail call i8* @memset(i8* noundef nonnull %8, i32 noundef 0, i32 noundef %7) #27, !dbg !18108
  br label %12, !dbg !18110

12:                                               ; preds = %10, %6, %2
  %13 = phi i8* [ null, %2 ], [ null, %6 ], [ %8, %10 ], !dbg !18098
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #25, !dbg !18111
  ret i8* %13, !dbg !18111
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow.279(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !18112 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18114, metadata !DIExpression()), !dbg !18117
  call void @llvm.dbg.value(metadata i32 %1, metadata !18115, metadata !DIExpression()), !dbg !18117
  call void @llvm.dbg.value(metadata i32* %2, metadata !18116, metadata !DIExpression()), !dbg !18117
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !18118
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !18118
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !18118
  store i32 %6, i32* %2, align 4, !dbg !18118
  ret i1 %5, !dbg !18119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_thread_system_pool_assign(%struct.k_thread* nocapture noundef writeonly %0) local_unnamed_addr #8 !dbg !18120 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18194, metadata !DIExpression()), !dbg !18195
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !18196
  store %struct.k_heap* @_system_heap, %struct.k_heap** %2, align 8, !dbg !18197
  ret void, !dbg !18198
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_thread_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18201, metadata !DIExpression()), !dbg !18205
  call void @llvm.dbg.value(metadata i32 %1, metadata !18202, metadata !DIExpression()), !dbg !18205
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !18206
  br i1 %3, label %9, label %4, !dbg !18208

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18209
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, !dbg !18211
  %7 = load %struct.k_heap*, %struct.k_heap** %6, align 8, !dbg !18211
  call void @llvm.dbg.value(metadata %struct.k_heap* %7, metadata !18204, metadata !DIExpression()), !dbg !18205
  %8 = icmp eq %struct.k_heap* %7, null, !dbg !18212
  br i1 %8, label %12, label %9, !dbg !18214

9:                                                ; preds = %2, %4
  %10 = phi %struct.k_heap* [ %7, %4 ], [ @_system_heap, %2 ]
  %11 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull %10, i32 noundef %0, i32 noundef %1) #26, !dbg !18215
  call void @llvm.dbg.value(metadata i8* %11, metadata !18203, metadata !DIExpression()), !dbg !18205
  br label %12, !dbg !18217

12:                                               ; preds = %4, %9
  %13 = phi i8* [ %11, %9 ], [ null, %4 ], !dbg !18218
  call void @llvm.dbg.value(metadata i8* %13, metadata !18203, metadata !DIExpression()), !dbg !18205
  ret i8* %13, !dbg !18219
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @main() local_unnamed_addr #1 !dbg !18220 {
  tail call void asm sideeffect "nop", ""() #25, !dbg !18222, !srcloc !18225
  ret void, !dbg !18226
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !18227 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.288, i32 0, i32 0)) #27, !dbg !18229
  ret void, !dbg !18230
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !18231 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !18233, metadata !DIExpression()), !dbg !18253
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !18234, metadata !DIExpression()), !dbg !18254
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !18255

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !18256

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !18234, metadata !DIExpression()), !dbg !18254
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !18257
  %6 = load i8*, i8** %5, align 4, !dbg !18257
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !18261
  %8 = load i32, i32* %7, align 4, !dbg !18261
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #26, !dbg !18262
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !18263
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !18234, metadata !DIExpression()), !dbg !18254
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !18264
  br i1 %10, label %3, label %2, !dbg !18255, !llvm.loop !18266
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !18268 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18272, metadata !DIExpression()), !dbg !18275
  call void @llvm.dbg.value(metadata i8* %1, metadata !18273, metadata !DIExpression()), !dbg !18275
  call void @llvm.dbg.value(metadata i32 %2, metadata !18274, metadata !DIExpression()), !dbg !18275
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18276
  tail call fastcc void @z_waitq_init.290(%struct._wait_q_t* noundef nonnull %4) #26, !dbg !18277
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18278
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #27, !dbg !18279
  ret void, !dbg !18280
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.290(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !18281 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18286, metadata !DIExpression()), !dbg !18287
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !18288
  tail call fastcc void @sys_dlist_init.291(%struct._dnode* noundef %2) #26, !dbg !18289
  ret void, !dbg !18290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.291(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !18291 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18296, metadata !DIExpression()), !dbg !18297
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18298
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !18299
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18300
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !18301
  ret void, !dbg !18302
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !18303 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !18314, metadata !DIExpression()), !dbg !18324
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18311, metadata !DIExpression()), !dbg !18324
  call void @llvm.dbg.value(metadata i32 %1, metadata !18312, metadata !DIExpression()), !dbg !18324
  call void @llvm.dbg.value(metadata i32 %2, metadata !18313, metadata !DIExpression()), !dbg !18324
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #27, !dbg !18325
  call void @llvm.dbg.value(metadata i64 %6, metadata !18316, metadata !DIExpression()), !dbg !18324
  call void @llvm.dbg.value(metadata i8* null, metadata !18317, metadata !DIExpression()), !dbg !18324
  %7 = icmp eq i64 %5, -1, !dbg !18326
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !18326
  call void @llvm.dbg.value(metadata i64 %8, metadata !18316, metadata !DIExpression()), !dbg !18324
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !18327
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18328, metadata !DIExpression()) #25, !dbg !18335
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18337, !srcloc !18343
  call void @llvm.dbg.value(metadata i32 undef, metadata !18340, metadata !DIExpression()) #25, !dbg !18344
  call void @llvm.dbg.value(metadata i32 undef, metadata !18341, metadata !DIExpression()) #25, !dbg !18344
  call void @llvm.dbg.value(metadata i32 undef, metadata !18334, metadata !DIExpression()) #25, !dbg !18335
  call void @llvm.dbg.value(metadata i32 undef, metadata !18318, metadata !DIExpression()), !dbg !18324
  call void @llvm.dbg.value(metadata i8 0, metadata !18323, metadata !DIExpression()), !dbg !18324
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !18317, metadata !DIExpression()), !dbg !18324
  call void @llvm.dbg.value(metadata i8 0, metadata !18323, metadata !DIExpression()), !dbg !18324
  call void @llvm.dbg.value(metadata i32 undef, metadata !18318, metadata !DIExpression()), !dbg !18324
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #27, !dbg !18345
  call void @llvm.dbg.value(metadata i8* %12, metadata !18317, metadata !DIExpression()), !dbg !18324
  %13 = tail call i64 @sys_clock_tick_get() #27, !dbg !18347
  call void @llvm.dbg.value(metadata i64 %13, metadata !18315, metadata !DIExpression()), !dbg !18324
  %14 = icmp eq i8* %12, null, !dbg !18348
  br i1 %14, label %15, label %31, !dbg !18350

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !18318, metadata !DIExpression()), !dbg !18324
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !18350

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !18323, metadata !DIExpression()), !dbg !18324
  %20 = sub nsw i64 %8, %18, !dbg !18351
  %21 = icmp slt i64 %20, 1, !dbg !18352
  br i1 %21, label %31, label %22, !dbg !18353

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !18324
  call void @llvm.dbg.value(metadata i8 undef, metadata !18323, metadata !DIExpression()), !dbg !18324
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !18354
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !18354
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %struct._wait_q_t* noundef nonnull %16, [1 x i64] %25) #27, !dbg !18354
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18328, metadata !DIExpression()) #25, !dbg !18355
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18357, !srcloc !18343
  call void @llvm.dbg.value(metadata i32 undef, metadata !18340, metadata !DIExpression()) #25, !dbg !18359
  call void @llvm.dbg.value(metadata i32 undef, metadata !18341, metadata !DIExpression()) #25, !dbg !18359
  call void @llvm.dbg.value(metadata i32 undef, metadata !18334, metadata !DIExpression()) #25, !dbg !18355
  call void @llvm.dbg.value(metadata i32 undef, metadata !18318, metadata !DIExpression()), !dbg !18324
  call void @llvm.dbg.value(metadata i8* null, metadata !18317, metadata !DIExpression()), !dbg !18324
  call void @llvm.dbg.value(metadata i32 undef, metadata !18318, metadata !DIExpression()), !dbg !18324
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #27, !dbg !18345
  call void @llvm.dbg.value(metadata i8* %28, metadata !18317, metadata !DIExpression()), !dbg !18324
  %29 = tail call i64 @sys_clock_tick_get() #27, !dbg !18347
  call void @llvm.dbg.value(metadata i64 %29, metadata !18315, metadata !DIExpression()), !dbg !18324
  %30 = icmp eq i8* %28, null, !dbg !18348
  br i1 %30, label %17, label %31, !dbg !18350, !llvm.loop !18360

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !18345
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !18324
  call void @llvm.dbg.value(metadata i8* %33, metadata !18317, metadata !DIExpression()), !dbg !18324
  call void @llvm.dbg.value(metadata i32 %34, metadata !18363, metadata !DIExpression()) #25, !dbg !18369
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18368, metadata !DIExpression()) #25, !dbg !18369
  call void @llvm.dbg.value(metadata i32 %34, metadata !18371, metadata !DIExpression()) #25, !dbg !18374
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #25, !dbg !18376, !srcloc !18377
  ret i8* %33, !dbg !18378
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18379 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18385, metadata !DIExpression()), !dbg !18387
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18383, metadata !DIExpression()), !dbg !18387
  call void @llvm.dbg.value(metadata i32 %1, metadata !18384, metadata !DIExpression()), !dbg !18387
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !18388
  call void @llvm.dbg.value(metadata i8* %4, metadata !18386, metadata !DIExpression()), !dbg !18387
  ret i8* %4, !dbg !18389
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !18390 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18394, metadata !DIExpression()), !dbg !18397
  call void @llvm.dbg.value(metadata i8* %1, metadata !18395, metadata !DIExpression()), !dbg !18397
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18328, metadata !DIExpression()) #25, !dbg !18398
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18400, !srcloc !18343
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !18400
  call void @llvm.dbg.value(metadata i32 %4, metadata !18340, metadata !DIExpression()) #25, !dbg !18402
  call void @llvm.dbg.value(metadata i32 undef, metadata !18341, metadata !DIExpression()) #25, !dbg !18402
  call void @llvm.dbg.value(metadata i32 %4, metadata !18334, metadata !DIExpression()) #25, !dbg !18398
  call void @llvm.dbg.value(metadata i32 %4, metadata !18396, metadata !DIExpression()), !dbg !18397
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18403
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #27, !dbg !18404
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18405
  %7 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %6) #27, !dbg !18407
  %8 = icmp eq i32 %7, 0, !dbg !18408
  br i1 %8, label %12, label %9, !dbg !18409

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !18410
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !18411
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #27, !dbg !18411
  br label %13, !dbg !18413

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !18363, metadata !DIExpression()) #25, !dbg !18414
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18368, metadata !DIExpression()) #25, !dbg !18414
  call void @llvm.dbg.value(metadata i32 %4, metadata !18371, metadata !DIExpression()) #25, !dbg !18417
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !18419, !srcloc !18377
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !18420
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!873, !2, !2663, !27, !366, !390, !2665, !2667, !2700, !2734, !400, !450, !2736, !2739, !2750, !2796, !2798, !2826, !2854, !2897, !2968, !3013, !479, !619, !3041, !655, !665, !690, !702, !909, !3046, !1047, !1113, !1419, !1683, !3085, !1796, !1886, !3087, !3173, !3238, !1938, !3241, !1945, !2310, !3259, !3261, !2330, !2438, !3365, !2553, !2592, !3368, !3370, !2632}
!llvm.ident = !{!3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372, !3372}
!llvm.module.flags = !{!3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 97, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5440, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 85)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2720, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_zbus_mutex_bm_channel", scope: !27, file: !114, line: 16, type: !136, isLocal: true, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !111, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/benchmark/src/benchmark.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !104, !108, !109}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !105, line: 46, baseType: !106)
!105 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !107)
!107 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !110)
!110 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!111 = !{!25, !112, !290, !292, !294, !296, !298, !300, !302, !304, !306, !339, !343, !348, !350, !357, !362}
!112 = !DIGlobalVariableExpression(var: !113, expr: !DIExpression())
!113 = distinct !DIGlobalVariable(name: "bm_channel", scope: !27, file: !114, line: 16, type: !115, isLocal: false, isDefinition: true, align: 32)
!114 = !DIFile(filename: "zephyr/samples/subsys/zbus/benchmark/src/benchmark.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !116)
!116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !117, line: 29, size: 192, elements: !118)
!117 = !DIFile(filename: "zephyr/include/zephyr/zbus/zbus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!118 = !{!119, !123, !125, !126, !134, !259}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !116, file: !117, line: 35, baseType: !120, size: 16)
!120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !122)
!122 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !116, file: !117, line: 40, baseType: !124, size: 32, offset: 32)
!124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !102)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !116, file: !117, line: 45, baseType: !124, size: 32, offset: 64)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !116, file: !117, line: 51, baseType: !127, size: 32, offset: 96)
!127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !128)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!129 = !DISubroutineType(types: !130)
!130 = !{!131, !13, !132}
!131 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !133, line: 214, baseType: !32)
!133 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!134 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !116, file: !117, line: 56, baseType: !135, size: 32, offset: 128)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !137, line: 2720, size: 160, elements: !138)
!137 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!138 = !{!139, !160, !257, !258}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !136, file: !137, line: 2722, baseType: !140, size: 64)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !143)
!143 = !{!144}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !142, file: !141, line: 232, baseType: !145, size: 64)
!145 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !147)
!146 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !148)
!148 = !{!149, !155}
!149 = !DIDerivedType(tag: DW_TAG_member, scope: !147, file: !146, line: 38, baseType: !150, size: 32)
!150 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !147, file: !146, line: 38, size: 32, elements: !151)
!151 = !{!152, !154}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !150, file: !146, line: 39, baseType: !153, size: 32)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !150, file: !146, line: 40, baseType: !153, size: 32)
!155 = !DIDerivedType(tag: DW_TAG_member, scope: !147, file: !146, line: 42, baseType: !156, size: 32, offset: 32)
!156 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !147, file: !146, line: 42, size: 32, elements: !157)
!157 = !{!158, !159}
!158 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !156, file: !146, line: 43, baseType: !153, size: 32)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !156, file: !146, line: 44, baseType: !153, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !136, file: !137, line: 2724, baseType: !161, size: 32, offset: 64)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !164)
!163 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!164 = !{!165, !212, !225, !226, !227, !228, !234, !252}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !162, file: !163, line: 247, baseType: !166, size: 384)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !167)
!167 = !{!168, !182, !184, !187, !188, !199, !200, !201}
!168 = !DIDerivedType(tag: DW_TAG_member, scope: !166, file: !163, line: 60, baseType: !169, size: 64)
!169 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !163, line: 60, size: 64, elements: !170)
!170 = !{!171, !173}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !169, file: !163, line: 61, baseType: !172, size: 64)
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !147)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !169, file: !163, line: 62, baseType: !174, size: 64)
!174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !176)
!175 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!176 = !{!177}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !174, file: !175, line: 50, baseType: !178, size: 64)
!178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 64, elements: !180)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 32)
!180 = !{!181}
!181 = !DISubrange(count: 2)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !166, file: !163, line: 68, baseType: !183, size: 32, offset: 64)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !166, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !186)
!186 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !166, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!188 = !DIDerivedType(tag: DW_TAG_member, scope: !166, file: !163, line: 90, baseType: !189, size: 16, offset: 112)
!189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !163, line: 90, size: 16, elements: !190)
!190 = !{!191, !198}
!191 = !DIDerivedType(tag: DW_TAG_member, scope: !189, file: !163, line: 91, baseType: !192, size: 16)
!192 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !189, file: !163, line: 91, size: 16, elements: !193)
!193 = !{!194, !197}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !192, file: !163, line: 96, baseType: !195, size: 8)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !196)
!196 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !192, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !189, file: !163, line: 100, baseType: !121, size: 16)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !166, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !166, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !166, file: !163, line: 131, baseType: !202, size: 192, offset: 192)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !203)
!203 = !{!204, !205, !211}
!204 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !202, file: !141, line: 245, baseType: !172, size: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !202, file: !141, line: 246, baseType: !206, size: 32, offset: 64)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !207)
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!208 = !DISubroutineType(types: !209)
!209 = !{null, !210}
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 32)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !202, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !162, file: !163, line: 250, baseType: !213, size: 288, offset: 384)
!213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !215)
!214 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!215 = !{!216, !217, !218, !219, !220, !221, !222, !223, !224}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !213, file: !214, line: 26, baseType: !108, size: 32)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !213, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !213, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !213, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !213, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !213, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !213, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !213, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !213, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !162, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !162, file: !163, line: 256, baseType: !140, size: 64, offset: 704)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !162, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !162, file: !163, line: 300, baseType: !229, size: 96, offset: 800)
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !230)
!230 = !{!231, !232, !233}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !229, file: !163, line: 153, baseType: !22, size: 32)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !229, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !229, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !162, file: !163, line: 325, baseType: !235, size: 32, offset: 896)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !237)
!237 = !{!238, !247, !248}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !236, file: !137, line: 5074, baseType: !239, size: 96)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !241)
!240 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!241 = !{!242, !245, !246}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !239, file: !240, line: 57, baseType: !243, size: 32)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !240, line: 57, flags: DIFlagFwdDecl)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !239, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !239, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !236, file: !137, line: 5075, baseType: !140, size: 64, offset: 96)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !236, file: !137, line: 5076, baseType: !249, offset: 160)
!249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!250 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!251 = !{}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !162, file: !163, line: 343, baseType: !253, size: 64, offset: 928)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !254)
!254 = !{!255, !256}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !253, file: !214, line: 63, baseType: !108, size: 32)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !253, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !136, file: !137, line: 2727, baseType: !108, size: 32, offset: 96)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !136, file: !137, line: 2730, baseType: !103, size: 32, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !116, file: !117, line: 67, baseType: !260, size: 32, offset: 160)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 32)
!263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !264)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !117, line: 85, size: 96, elements: !265)
!265 = !{!266, !267, !284}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !264, file: !117, line: 91, baseType: !131, size: 8)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !264, file: !117, line: 93, baseType: !268, size: 32, offset: 32)
!268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !269)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !137, line: 4204, size: 320, elements: !271)
!271 = !{!272, !273, !274, !275, !276, !279, !280, !281, !282, !283}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !270, file: !137, line: 4206, baseType: !140, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !270, file: !137, line: 4208, baseType: !249, offset: 64)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !270, file: !137, line: 4210, baseType: !132, size: 32, offset: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !270, file: !137, line: 4212, baseType: !108, size: 32, offset: 96)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !270, file: !137, line: 4214, baseType: !277, size: 32, offset: 128)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !270, file: !137, line: 4216, baseType: !277, size: 32, offset: 160)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !270, file: !137, line: 4218, baseType: !277, size: 32, offset: 192)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !270, file: !137, line: 4220, baseType: !277, size: 32, offset: 224)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !270, file: !137, line: 4222, baseType: !108, size: 32, offset: 256)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !270, file: !137, line: 4227, baseType: !185, size: 8, offset: 288)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !264, file: !117, line: 96, baseType: !285, size: 32, offset: 64)
!285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !286)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 32)
!287 = !DISubroutineType(types: !288)
!288 = !{null, !289}
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!290 = !DIGlobalVariableExpression(var: !291, expr: !DIExpression())
!291 = distinct !DIGlobalVariable(name: "s1", scope: !27, file: !114, line: 126, type: !264, isLocal: false, isDefinition: true, align: 32)
!292 = !DIGlobalVariableExpression(var: !293, expr: !DIExpression())
!293 = distinct !DIGlobalVariable(name: "s2", scope: !27, file: !114, line: 129, type: !264, isLocal: false, isDefinition: true, align: 32)
!294 = !DIGlobalVariableExpression(var: !295, expr: !DIExpression())
!295 = distinct !DIGlobalVariable(name: "s3", scope: !27, file: !114, line: 131, type: !264, isLocal: false, isDefinition: true, align: 32)
!296 = !DIGlobalVariableExpression(var: !297, expr: !DIExpression())
!297 = distinct !DIGlobalVariable(name: "s4", scope: !27, file: !114, line: 132, type: !264, isLocal: false, isDefinition: true, align: 32)
!298 = !DIGlobalVariableExpression(var: !299, expr: !DIExpression())
!299 = distinct !DIGlobalVariable(name: "s5", scope: !27, file: !114, line: 134, type: !264, isLocal: false, isDefinition: true, align: 32)
!300 = !DIGlobalVariableExpression(var: !301, expr: !DIExpression())
!301 = distinct !DIGlobalVariable(name: "s6", scope: !27, file: !114, line: 135, type: !264, isLocal: false, isDefinition: true, align: 32)
!302 = !DIGlobalVariableExpression(var: !303, expr: !DIExpression())
!303 = distinct !DIGlobalVariable(name: "s7", scope: !27, file: !114, line: 136, type: !264, isLocal: false, isDefinition: true, align: 32)
!304 = !DIGlobalVariableExpression(var: !305, expr: !DIExpression())
!305 = distinct !DIGlobalVariable(name: "s8", scope: !27, file: !114, line: 137, type: !264, isLocal: false, isDefinition: true, align: 32)
!306 = !DIGlobalVariableExpression(var: !307, expr: !DIExpression())
!307 = distinct !DIGlobalVariable(name: "_k_thread_data_producer_thread_id", scope: !27, file: !114, line: 216, type: !308, isLocal: false, isDefinition: true, align: 32)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !137, line: 620, size: 384, elements: !309)
!309 = !{!310, !311, !319, !320, !325, !326, !327, !328, !329, !330, !332, !336}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !308, file: !137, line: 621, baseType: !161, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !308, file: !137, line: 622, baseType: !312, size: 32, offset: 32)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 32)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !314, line: 44, baseType: !315)
!314 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !316, line: 47, size: 8, elements: !317)
!316 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!317 = !{!318}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !315, file: !316, line: 48, baseType: !278, size: 8)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !308, file: !137, line: 623, baseType: !32, size: 32, offset: 64)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !308, file: !137, line: 624, baseType: !321, size: 32, offset: 96)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !314, line: 46, baseType: !322)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 32)
!323 = !DISubroutineType(types: !324)
!324 = !{null, !102, !102, !102}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !308, file: !137, line: 625, baseType: !102, size: 32, offset: 128)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !308, file: !137, line: 626, baseType: !102, size: 32, offset: 160)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !308, file: !137, line: 627, baseType: !102, size: 32, offset: 192)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !308, file: !137, line: 628, baseType: !103, size: 32, offset: 224)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !308, file: !137, line: 629, baseType: !108, size: 32, offset: 256)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !308, file: !137, line: 630, baseType: !331, size: 32, offset: 288)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !308, file: !137, line: 631, baseType: !333, size: 32, offset: 320)
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!334 = !DISubroutineType(types: !335)
!335 = !{null}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !308, file: !137, line: 632, baseType: !337, size: 32, offset: 352)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !278)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "producer_thread_id", scope: !27, file: !114, line: 216, type: !341, isLocal: false, isDefinition: true)
!341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !342)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !161)
!343 = !DIGlobalVariableExpression(var: !344, expr: !DIExpression())
!344 = distinct !DIGlobalVariable(name: "_k_thread_stack_producer_thread_id", scope: !27, file: !114, line: 216, type: !345, isLocal: false, isDefinition: true, align: 512)
!345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 8704, elements: !346)
!346 = !{!347}
!347 = !DISubrange(count: 1088)
!348 = !DIGlobalVariableExpression(var: !349, expr: !DIExpression())
!349 = distinct !DIGlobalVariable(name: "_k_thread_obj_producer_thread_id", scope: !27, file: !114, line: 216, type: !162, isLocal: false, isDefinition: true)
!350 = !DIGlobalVariableExpression(var: !351, expr: !DIExpression())
!351 = distinct !DIGlobalVariable(name: "_zbus_message_bm_channel", scope: !27, file: !114, line: 16, type: !352, isLocal: true, isDefinition: true)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "external_data_msg", file: !353, line: 10, size: 64, elements: !354)
!353 = !DIFile(filename: "zephyr/samples/subsys/zbus/benchmark/src/messages.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!354 = !{!355, !356}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !352, file: !353, line: 11, baseType: !102, size: 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !352, file: !353, line: 12, baseType: !132, size: 32, offset: 32)
!357 = !DIGlobalVariableExpression(var: !358, expr: !DIExpression())
!358 = distinct !DIGlobalVariable(name: "_zbus_observers_bm_channel", scope: !27, file: !114, line: 16, type: !359, isLocal: true, isDefinition: true)
!359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 288, elements: !360)
!360 = !{!361}
!361 = !DISubrange(count: 9)
!362 = !DIGlobalVariableExpression(var: !363, expr: !DIExpression())
!363 = distinct !DIGlobalVariable(name: "count", scope: !27, file: !114, line: 44, type: !109, isLocal: true, isDefinition: true)
!364 = !DIGlobalVariableExpression(var: !365, expr: !DIExpression())
!365 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !366, file: !381, line: 18, type: !382, isLocal: false, isDefinition: true)
!366 = distinct !DICompileUnit(language: DW_LANG_C99, file: !367, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !368, globals: !380, splitDebugInlining: false, nameTableKind: None)
!367 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!368 = !{!22, !102, !24, !369, !371, !373, !132, !103, !374, !375, !377, !378, !277, !379, !121, !337}
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 32)
!370 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 32)
!376 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!380 = !{!364}
!381 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !383)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !385)
!384 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!385 = !{!386, !387}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !383, file: !384, line: 17, baseType: !337, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !383, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!388 = !DIGlobalVariableExpression(var: !389, expr: !DIExpression())
!389 = distinct !DIGlobalVariable(name: "_char_out", scope: !390, file: !394, line: 54, type: !395, isLocal: false, isDefinition: true)
!390 = distinct !DICompileUnit(language: DW_LANG_C99, file: !391, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, globals: !393, splitDebugInlining: false, nameTableKind: None)
!391 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!392 = !{!102, !103}
!393 = !{!388}
!394 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 32)
!396 = !DISubroutineType(types: !397)
!397 = !{!103, !103}
!398 = !DIGlobalVariableExpression(var: !399, expr: !DIExpression())
!399 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !400, file: !417, line: 56, type: !418, isLocal: true, isDefinition: true, align: 32)
!400 = distinct !DICompileUnit(language: DW_LANG_C99, file: !401, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !402, globals: !416, splitDebugInlining: false, nameTableKind: None)
!401 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!402 = !{!403}
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 32)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !405, line: 258, baseType: !406)
!405 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f401xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 249, size: 224, elements: !407)
!407 = !{!408, !410, !411, !412, !413, !414, !415}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !406, file: !405, line: 251, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !108)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !406, file: !405, line: 252, baseType: !409, size: 32, offset: 32)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !406, file: !405, line: 253, baseType: !409, size: 32, offset: 64)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !406, file: !405, line: 254, baseType: !409, size: 32, offset: 96)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !406, file: !405, line: 255, baseType: !409, size: 32, offset: 128)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !406, file: !405, line: 256, baseType: !409, size: 32, offset: 160)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !406, file: !405, line: 257, baseType: !409, size: 32, offset: 192)
!416 = !{!398}
!417 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !419)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !421)
!420 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!421 = !{!422, !447}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !419, file: !420, line: 60, baseType: !423, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 32)
!424 = !DISubroutineType(types: !425)
!425 = !{!103, !426}
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !428)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !430)
!429 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!430 = !{!431, !432, !433, !434, !440, !441}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !428, file: !429, line: 380, baseType: !337, size: 32)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !428, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !428, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !428, file: !429, line: 386, baseType: !435, size: 32, offset: 96)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 32)
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !437)
!437 = !{!438, !439}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !436, file: !429, line: 359, baseType: !185, size: 8)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !436, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !428, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !428, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 32)
!443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !444)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !429, line: 43, baseType: !445)
!445 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !446)
!446 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !419, file: !420, line: 65, baseType: !426, size: 32, offset: 32)
!448 = !DIGlobalVariableExpression(var: !449, expr: !DIExpression())
!449 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !450, file: !453, line: 71, type: !454, isLocal: true, isDefinition: true, align: 32)
!450 = distinct !DICompileUnit(language: DW_LANG_C99, file: !451, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !452, splitDebugInlining: false, nameTableKind: None)
!451 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!452 = !{!448}
!453 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !455)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !456)
!456 = !{!457, !476}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !455, file: !420, line: 60, baseType: !458, size: 32)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 32)
!459 = !DISubroutineType(types: !460)
!460 = !{!103, !461}
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !463)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !464)
!464 = !{!465, !466, !467, !468, !474, !475}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !463, file: !429, line: 380, baseType: !337, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !463, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !463, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !463, file: !429, line: 386, baseType: !469, size: 32, offset: 96)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 32)
!470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !471)
!471 = !{!472, !473}
!472 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !470, file: !429, line: 359, baseType: !185, size: 8)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !470, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !463, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !463, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !455, file: !420, line: 65, baseType: !461, size: 32, offset: 32)
!477 = !DIGlobalVariableExpression(var: !478, expr: !DIExpression())
!478 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !479, file: !486, line: 17, type: !612, isLocal: false, isDefinition: true)
!479 = distinct !DICompileUnit(language: DW_LANG_C99, file: !480, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !481, globals: !482, splitDebugInlining: false, nameTableKind: None)
!480 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!481 = !{!132, !103, !108, !102}
!482 = !{!477, !483, !608}
!483 = !DIGlobalVariableExpression(var: !484, expr: !DIExpression())
!484 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !485, file: !486, line: 198, type: !594, isLocal: true, isDefinition: true)
!485 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !486, file: !486, line: 175, type: !487, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !479, retainedNodes: !589)
!486 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!487 = !DISubroutineType(types: !488)
!488 = !{null, !489}
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 32)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !491)
!491 = !{!492, !550, !562, !563, !564, !565, !571, !584}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !490, file: !163, line: 247, baseType: !493, size: 384)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !494)
!494 = !{!495, !519, !526, !527, !528, !537, !538, !539}
!495 = !DIDerivedType(tag: DW_TAG_member, scope: !493, file: !163, line: 60, baseType: !496, size: 64)
!496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !493, file: !163, line: 60, size: 64, elements: !497)
!497 = !{!498, !513}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !496, file: !163, line: 61, baseType: !499, size: 64)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !500)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !501)
!501 = !{!502, !508}
!502 = !DIDerivedType(tag: DW_TAG_member, scope: !500, file: !146, line: 38, baseType: !503, size: 32)
!503 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !500, file: !146, line: 38, size: 32, elements: !504)
!504 = !{!505, !507}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !503, file: !146, line: 39, baseType: !506, size: 32)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 32)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !503, file: !146, line: 40, baseType: !506, size: 32)
!508 = !DIDerivedType(tag: DW_TAG_member, scope: !500, file: !146, line: 42, baseType: !509, size: 32, offset: 32)
!509 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !500, file: !146, line: 42, size: 32, elements: !510)
!510 = !{!511, !512}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !509, file: !146, line: 43, baseType: !506, size: 32)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !509, file: !146, line: 44, baseType: !506, size: 32)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !496, file: !163, line: 62, baseType: !514, size: 64)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !515)
!515 = !{!516}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !514, file: !175, line: 50, baseType: !517, size: 64)
!517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !518, size: 64, elements: !180)
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !493, file: !163, line: 68, baseType: !520, size: 32, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 32)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !522)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !523)
!523 = !{!524}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !522, file: !141, line: 232, baseType: !525, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !500)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !493, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !493, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!528 = !DIDerivedType(tag: DW_TAG_member, scope: !493, file: !163, line: 90, baseType: !529, size: 16, offset: 112)
!529 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !493, file: !163, line: 90, size: 16, elements: !530)
!530 = !{!531, !536}
!531 = !DIDerivedType(tag: DW_TAG_member, scope: !529, file: !163, line: 91, baseType: !532, size: 16)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !529, file: !163, line: 91, size: 16, elements: !533)
!533 = !{!534, !535}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !532, file: !163, line: 96, baseType: !195, size: 8)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !532, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !529, file: !163, line: 100, baseType: !121, size: 16)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !493, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !493, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !493, file: !163, line: 131, baseType: !540, size: 192, offset: 192)
!540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !541)
!541 = !{!542, !543, !549}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !540, file: !141, line: 245, baseType: !499, size: 64)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !540, file: !141, line: 246, baseType: !544, size: 32, offset: 64)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !545)
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 32)
!546 = !DISubroutineType(types: !547)
!547 = !{null, !548}
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !540, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !490, file: !163, line: 250, baseType: !551, size: 288, offset: 384)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !552)
!552 = !{!553, !554, !555, !556, !557, !558, !559, !560, !561}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !551, file: !214, line: 26, baseType: !108, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !551, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !551, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !551, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !551, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !551, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !551, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !551, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !551, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !490, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !490, file: !163, line: 256, baseType: !521, size: 64, offset: 704)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !490, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !490, file: !163, line: 300, baseType: !566, size: 96, offset: 800)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !567)
!567 = !{!568, !569, !570}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !566, file: !163, line: 153, baseType: !22, size: 32)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !566, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !566, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !490, file: !163, line: 325, baseType: !572, size: 32, offset: 896)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 32)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !574)
!574 = !{!575, !581, !582}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !573, file: !137, line: 5074, baseType: !576, size: 96)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !577)
!577 = !{!578, !579, !580}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !576, file: !240, line: 57, baseType: !243, size: 32)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !576, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !576, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !573, file: !137, line: 5075, baseType: !521, size: 64, offset: 96)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !573, file: !137, line: 5076, baseType: !583, offset: 160)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !490, file: !163, line: 343, baseType: !585, size: 64, offset: 928)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !586)
!586 = !{!587, !588}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !585, file: !214, line: 63, baseType: !108, size: 32)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !585, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!589 = !{!590, !591, !592, !593}
!590 = !DILocalVariable(name: "thread", arg: 1, scope: !485, file: !486, line: 175, type: !489)
!591 = !DILocalVariable(name: "region_num", scope: !485, file: !486, line: 200, type: !185)
!592 = !DILocalVariable(name: "guard_start", scope: !485, file: !486, line: 265, type: !22)
!593 = !DILocalVariable(name: "guard_size", scope: !485, file: !486, line: 266, type: !132)
!594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !595, size: 96, elements: !606)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !596, line: 52, size: 96, elements: !597)
!596 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!597 = !{!598, !599, !600}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !595, file: !596, line: 53, baseType: !22, size: 32)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !595, file: !596, line: 54, baseType: !132, size: 32, offset: 32)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !595, file: !596, line: 55, baseType: !601, size: 32, offset: 64)
!601 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !602, line: 151, baseType: !603)
!602 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !602, line: 149, size: 32, elements: !604)
!604 = !{!605}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !603, file: !602, line: 150, baseType: !108, size: 32)
!606 = !{!607}
!607 = !DISubrange(count: 1)
!608 = !DIGlobalVariableExpression(var: !609, expr: !DIExpression())
!609 = distinct !DIGlobalVariable(name: "static_regions", scope: !479, file: !486, line: 62, type: !610, isLocal: true, isDefinition: true)
!610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !611, size: 96, elements: !606)
!611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !595)
!612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !613)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !614)
!614 = !{!615, !616}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !613, file: !384, line: 17, baseType: !337, size: 32)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !613, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!617 = !DIGlobalVariableExpression(var: !618, expr: !DIExpression())
!618 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !619, file: !652, line: 39, type: !185, isLocal: true, isDefinition: true)
!619 = distinct !DICompileUnit(language: DW_LANG_C99, file: !620, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !621, globals: !651, splitDebugInlining: false, nameTableKind: None)
!620 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!621 = !{!622, !102, !103, !639, !185}
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 32)
!623 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !624, line: 1226, baseType: !625)
!624 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 1213, size: 352, elements: !626)
!626 = !{!627, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !625, file: !624, line: 1215, baseType: !628, size: 32)
!628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !409)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !625, file: !624, line: 1216, baseType: !409, size: 32, offset: 32)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !625, file: !624, line: 1217, baseType: !409, size: 32, offset: 64)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !625, file: !624, line: 1218, baseType: !409, size: 32, offset: 96)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !625, file: !624, line: 1219, baseType: !409, size: 32, offset: 128)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !625, file: !624, line: 1220, baseType: !409, size: 32, offset: 160)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !625, file: !624, line: 1221, baseType: !409, size: 32, offset: 192)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !625, file: !624, line: 1222, baseType: !409, size: 32, offset: 224)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !625, file: !624, line: 1223, baseType: !409, size: 32, offset: 256)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !625, file: !624, line: 1224, baseType: !409, size: 32, offset: 288)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !625, file: !624, line: 1225, baseType: !409, size: 32, offset: 320)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 32)
!640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !641)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !642, line: 27, size: 96, elements: !643)
!642 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!643 = !{!644, !645, !646}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !641, file: !642, line: 29, baseType: !108, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !641, file: !642, line: 31, baseType: !337, size: 32, offset: 32)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !641, file: !642, line: 37, baseType: !647, size: 32, offset: 64)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !602, line: 146, baseType: !648)
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !602, line: 141, size: 32, elements: !649)
!649 = !{!650}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !648, file: !602, line: 143, baseType: !108, size: 32)
!651 = !{!617}
!652 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!653 = !DIGlobalVariableExpression(var: !654, expr: !DIExpression())
!654 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !655, file: !662, line: 21, type: !395, isLocal: true, isDefinition: true)
!655 = distinct !DICompileUnit(language: DW_LANG_C99, file: !656, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !657, globals: !661, splitDebugInlining: false, nameTableKind: None)
!656 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!657 = !{!658, !103, !102}
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 32)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !660, line: 22, baseType: !103)
!660 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!661 = !{!653}
!662 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!663 = !DIGlobalVariableExpression(var: !664, expr: !DIExpression())
!664 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !665, file: !670, line: 13, type: !687, isLocal: true, isDefinition: true)
!665 = distinct !DICompileUnit(language: DW_LANG_C99, file: !666, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !667, splitDebugInlining: false, nameTableKind: None)
!666 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!667 = !{!668, !663}
!668 = !DIGlobalVariableExpression(var: !669, expr: !DIExpression())
!669 = distinct !DIGlobalVariable(name: "mpu_config", scope: !665, file: !670, line: 37, type: !671, isLocal: false, isDefinition: true)
!670 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !672)
!672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !642, line: 41, size: 64, elements: !673)
!673 = !{!674, !675}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !672, file: !642, line: 43, baseType: !108, size: 32)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !672, file: !642, line: 45, baseType: !676, size: 32, offset: 32)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 32)
!677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !678)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !642, line: 27, size: 96, elements: !679)
!679 = !{!680, !681, !682}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !678, file: !642, line: 29, baseType: !108, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !678, file: !642, line: 31, baseType: !337, size: 32, offset: 32)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !678, file: !642, line: 37, baseType: !683, size: 32, offset: 64)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !602, line: 146, baseType: !684)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !602, line: 141, size: 32, elements: !685)
!685 = !{!686}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !684, file: !602, line: 143, baseType: !108, size: 32)
!687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !677, size: 192, elements: !180)
!688 = !DIGlobalVariableExpression(var: !689, expr: !DIExpression())
!689 = distinct !DIGlobalVariable(name: "log_const_zbus", scope: !690, file: !694, line: 10, type: !695, isLocal: false, isDefinition: true)
!690 = distinct !DICompileUnit(language: DW_LANG_C99, file: !691, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !692, globals: !693, splitDebugInlining: false, nameTableKind: None)
!691 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!692 = !{!104, !102, !103}
!693 = !{!688}
!694 = !DIFile(filename: "zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !696)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !697)
!697 = !{!698, !699}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !696, file: !384, line: 17, baseType: !337, size: 32)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !696, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!700 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression())
!701 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !702, file: !785, line: 72, type: !868, isLocal: true, isDefinition: true)
!702 = distinct !DICompileUnit(language: DW_LANG_C99, file: !703, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !704, retainedTypes: !771, globals: !782, splitDebugInlining: false, nameTableKind: None)
!703 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!704 = !{!30, !705}
!705 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !405, line: 65, baseType: !103, size: 32, elements: !706)
!706 = !{!707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770}
!707 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!708 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!709 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!710 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!711 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!712 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!713 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!714 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!715 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!716 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!717 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!718 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!719 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!720 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!721 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!722 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!723 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!724 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!725 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!726 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!727 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!728 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!729 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!730 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!731 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!732 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!733 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!734 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!735 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!736 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!737 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!738 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!739 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!740 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!741 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!742 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!743 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!744 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!745 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!746 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!747 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!748 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!749 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!750 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!751 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!752 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!753 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!754 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!755 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!756 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!757 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!758 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!759 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!760 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!761 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!762 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!763 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!764 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!765 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!766 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!767 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!768 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!769 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!770 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!771 = !{!132, !103, !102, !772}
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 32)
!773 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !405, line: 243, baseType: !774)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 235, size: 192, elements: !775)
!775 = !{!776, !777, !778, !779, !780, !781}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !774, file: !405, line: 237, baseType: !409, size: 32)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !774, file: !405, line: 238, baseType: !409, size: 32, offset: 32)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !774, file: !405, line: 239, baseType: !409, size: 32, offset: 64)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !774, file: !405, line: 240, baseType: !409, size: 32, offset: 96)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !774, file: !405, line: 241, baseType: !409, size: 32, offset: 128)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !774, file: !405, line: 242, baseType: !409, size: 32, offset: 160)
!782 = !{!783, !789, !805, !816, !833, !700, !835, !848, !850, !852, !854, !856, !858, !860, !862, !864, !866}
!783 = !DIGlobalVariableExpression(var: !784, expr: !DIExpression())
!784 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !702, file: !785, line: 424, type: !786, isLocal: false, isDefinition: true, align: 16)
!785 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 64, elements: !787)
!787 = !{!788}
!788 = !DISubrange(count: 4)
!789 = !DIGlobalVariableExpression(var: !790, expr: !DIExpression())
!790 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !702, file: !785, line: 424, type: !791, isLocal: false, isDefinition: true, align: 32)
!791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !792)
!792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !793)
!793 = !{!794, !795, !796, !797, !803, !804}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !792, file: !429, line: 380, baseType: !337, size: 32)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !792, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !792, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !792, file: !429, line: 386, baseType: !798, size: 32, offset: 96)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 32)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !800)
!800 = !{!801, !802}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !799, file: !429, line: 359, baseType: !185, size: 8)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !799, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !792, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !792, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!805 = !DIGlobalVariableExpression(var: !806, expr: !DIExpression())
!806 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !702, file: !785, line: 424, type: !807, isLocal: true, isDefinition: true, align: 32)
!807 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !808)
!808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !809)
!809 = !{!810, !815}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !808, file: !420, line: 60, baseType: !811, size: 32)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 32)
!812 = !DISubroutineType(types: !813)
!813 = !{!103, !814}
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 32)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !808, file: !420, line: 65, baseType: !814, size: 32, offset: 32)
!816 = !DIGlobalVariableExpression(var: !817, expr: !DIExpression())
!817 = distinct !DIGlobalVariable(name: "exti_data", scope: !702, file: !785, line: 423, type: !818, isLocal: true, isDefinition: true)
!818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !785, line: 107, size: 1472, elements: !819)
!819 = !{!820}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !818, file: !785, line: 109, baseType: !821, size: 1472)
!821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !822, size: 1472, elements: !831)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !785, line: 101, size: 64, elements: !823)
!823 = !{!824, !830}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !822, file: !785, line: 102, baseType: !825, size: 32)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !826, line: 63, baseType: !827)
!826 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 32)
!828 = !DISubroutineType(types: !829)
!829 = !{null, !103, !102}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !822, file: !785, line: 103, baseType: !102, size: 32, offset: 32)
!831 = !{!832}
!832 = !DISubrange(count: 23)
!833 = !DIGlobalVariableExpression(var: !834, expr: !DIExpression())
!834 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !702, file: !785, line: 424, type: !799, isLocal: true, isDefinition: true, align: 8)
!835 = !DIGlobalVariableExpression(var: !836, expr: !DIExpression())
!836 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !837, file: !785, line: 493, type: !842, isLocal: true, isDefinition: true, align: 32)
!837 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !785, file: !785, line: 460, type: !838, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !840)
!838 = !DISubroutineType(types: !839)
!839 = !{null, !814}
!840 = !{!841}
!841 = !DILocalVariable(name: "dev", arg: 1, scope: !837, file: !785, line: 460, type: !814)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !843)
!843 = !{!844, !845, !846, !847}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !842, file: !10, line: 55, baseType: !331, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !842, file: !10, line: 57, baseType: !331, size: 32, offset: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !842, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !842, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!848 = !DIGlobalVariableExpression(var: !849, expr: !DIExpression())
!849 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !837, file: !785, line: 497, type: !842, isLocal: true, isDefinition: true, align: 32)
!850 = !DIGlobalVariableExpression(var: !851, expr: !DIExpression())
!851 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !837, file: !785, line: 507, type: !842, isLocal: true, isDefinition: true, align: 32)
!852 = !DIGlobalVariableExpression(var: !853, expr: !DIExpression())
!853 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !837, file: !785, line: 512, type: !842, isLocal: true, isDefinition: true, align: 32)
!854 = !DIGlobalVariableExpression(var: !855, expr: !DIExpression())
!855 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !837, file: !785, line: 516, type: !842, isLocal: true, isDefinition: true, align: 32)
!856 = !DIGlobalVariableExpression(var: !857, expr: !DIExpression())
!857 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !837, file: !785, line: 523, type: !842, isLocal: true, isDefinition: true, align: 32)
!858 = !DIGlobalVariableExpression(var: !859, expr: !DIExpression())
!859 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !837, file: !785, line: 527, type: !842, isLocal: true, isDefinition: true, align: 32)
!860 = !DIGlobalVariableExpression(var: !861, expr: !DIExpression())
!861 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !837, file: !785, line: 581, type: !842, isLocal: true, isDefinition: true, align: 32)
!862 = !DIGlobalVariableExpression(var: !863, expr: !DIExpression())
!863 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !837, file: !785, line: 586, type: !842, isLocal: true, isDefinition: true, align: 32)
!864 = !DIGlobalVariableExpression(var: !865, expr: !DIExpression())
!865 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !837, file: !785, line: 591, type: !842, isLocal: true, isDefinition: true, align: 32)
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !837, file: !785, line: 595, type: !842, isLocal: true, isDefinition: true, align: 32)
!868 = !DICompositeType(tag: DW_TAG_array_type, baseType: !869, size: 736, elements: !831)
!869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !870)
!870 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !405, line: 133, baseType: !705)
!871 = !DIGlobalVariableExpression(var: !872, expr: !DIExpression())
!872 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !873, file: !878, line: 24, type: !904, isLocal: false, isDefinition: true, align: 16)
!873 = distinct !DICompileUnit(language: DW_LANG_C99, file: !874, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !875, splitDebugInlining: false, nameTableKind: None)
!874 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!875 = !{!876, !871, !882, !884, !886, !888, !890, !892, !894, !896, !898, !900, !902}
!876 = !DIGlobalVariableExpression(var: !877, expr: !DIExpression())
!877 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !873, file: !878, line: 19, type: !879, isLocal: false, isDefinition: true, align: 16)
!878 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!879 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 224, elements: !880)
!880 = !{!881}
!881 = !DISubrange(count: 14)
!882 = !DIGlobalVariableExpression(var: !883, expr: !DIExpression())
!883 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !873, file: !878, line: 31, type: !786, isLocal: false, isDefinition: true, align: 16)
!884 = !DIGlobalVariableExpression(var: !885, expr: !DIExpression())
!885 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !873, file: !878, line: 38, type: !786, isLocal: false, isDefinition: true, align: 16)
!886 = !DIGlobalVariableExpression(var: !887, expr: !DIExpression())
!887 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !873, file: !878, line: 45, type: !786, isLocal: false, isDefinition: true, align: 16)
!888 = !DIGlobalVariableExpression(var: !889, expr: !DIExpression())
!889 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !873, file: !878, line: 52, type: !786, isLocal: false, isDefinition: true, align: 16)
!890 = !DIGlobalVariableExpression(var: !891, expr: !DIExpression())
!891 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !873, file: !878, line: 59, type: !786, isLocal: false, isDefinition: true, align: 16)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !873, file: !878, line: 66, type: !786, isLocal: false, isDefinition: true, align: 16)
!894 = !DIGlobalVariableExpression(var: !895, expr: !DIExpression())
!895 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !873, file: !878, line: 73, type: !786, isLocal: false, isDefinition: true, align: 16)
!896 = !DIGlobalVariableExpression(var: !897, expr: !DIExpression())
!897 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !873, file: !878, line: 80, type: !786, isLocal: false, isDefinition: true, align: 16)
!898 = !DIGlobalVariableExpression(var: !899, expr: !DIExpression())
!899 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_50", scope: !873, file: !878, line: 87, type: !786, isLocal: false, isDefinition: true, align: 16)
!900 = !DIGlobalVariableExpression(var: !901, expr: !DIExpression())
!901 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !873, file: !878, line: 94, type: !786, isLocal: false, isDefinition: true, align: 16)
!902 = !DIGlobalVariableExpression(var: !903, expr: !DIExpression())
!903 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !873, file: !878, line: 101, type: !786, isLocal: false, isDefinition: true, align: 16)
!904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 48, elements: !905)
!905 = !{!906}
!906 = !DISubrange(count: 3)
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !909, file: !973, line: 398, type: !1006, isLocal: true, isDefinition: true)
!909 = distinct !DICompileUnit(language: DW_LANG_C99, file: !910, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !911, retainedTypes: !924, globals: !970, splitDebugInlining: false, nameTableKind: None)
!910 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!911 = !{!912, !30, !917}
!912 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !913, line: 197, baseType: !32, size: 32, elements: !914)
!913 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!914 = !{!915, !916}
!915 = !DIEnumerator(name: "SUCCESS", value: 0)
!916 = !DIEnumerator(name: "ERROR", value: 1)
!917 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !918, line: 44, baseType: !32, size: 32, elements: !919)
!918 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!919 = !{!920, !921, !922, !923}
!920 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!921 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!922 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!923 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!924 = !{!102, !103, !108, !925, !963, !969}
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 369, baseType: !927)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 335, size: 1152, elements: !928)
!928 = !{!929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !962}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !927, file: !405, line: 337, baseType: !409, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !927, file: !405, line: 338, baseType: !409, size: 32, offset: 32)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !927, file: !405, line: 339, baseType: !409, size: 32, offset: 64)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !927, file: !405, line: 340, baseType: !409, size: 32, offset: 96)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !927, file: !405, line: 341, baseType: !409, size: 32, offset: 128)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !927, file: !405, line: 342, baseType: !409, size: 32, offset: 160)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !927, file: !405, line: 343, baseType: !409, size: 32, offset: 192)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !927, file: !405, line: 344, baseType: !108, size: 32, offset: 224)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !927, file: !405, line: 345, baseType: !409, size: 32, offset: 256)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !927, file: !405, line: 346, baseType: !409, size: 32, offset: 288)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !927, file: !405, line: 347, baseType: !940, size: 64, offset: 320)
!940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 64, elements: !180)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !927, file: !405, line: 348, baseType: !409, size: 32, offset: 384)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !927, file: !405, line: 349, baseType: !409, size: 32, offset: 416)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !927, file: !405, line: 350, baseType: !409, size: 32, offset: 448)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !927, file: !405, line: 351, baseType: !108, size: 32, offset: 480)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !927, file: !405, line: 352, baseType: !409, size: 32, offset: 512)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !927, file: !405, line: 353, baseType: !409, size: 32, offset: 544)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !927, file: !405, line: 354, baseType: !940, size: 64, offset: 576)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !927, file: !405, line: 355, baseType: !409, size: 32, offset: 640)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !927, file: !405, line: 356, baseType: !409, size: 32, offset: 672)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !927, file: !405, line: 357, baseType: !409, size: 32, offset: 704)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !927, file: !405, line: 358, baseType: !108, size: 32, offset: 736)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !927, file: !405, line: 359, baseType: !409, size: 32, offset: 768)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !927, file: !405, line: 360, baseType: !409, size: 32, offset: 800)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !927, file: !405, line: 361, baseType: !940, size: 64, offset: 832)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !927, file: !405, line: 362, baseType: !409, size: 32, offset: 896)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !927, file: !405, line: 363, baseType: !409, size: 32, offset: 928)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !927, file: !405, line: 364, baseType: !940, size: 64, offset: 960)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !927, file: !405, line: 365, baseType: !409, size: 32, offset: 1024)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !927, file: !405, line: 366, baseType: !409, size: 32, offset: 1056)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !927, file: !405, line: 367, baseType: !961, size: 32, offset: 1088)
!961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 32, elements: !606)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !927, file: !405, line: 368, baseType: !409, size: 32, offset: 1120)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 32)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !965, line: 343, size: 64, elements: !966)
!965 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!966 = !{!967, !968}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !964, file: !965, line: 344, baseType: !108, size: 32)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !964, file: !965, line: 345, baseType: !108, size: 32, offset: 32)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!970 = !{!971, !977, !993, !1004, !907}
!971 = !DIGlobalVariableExpression(var: !972, expr: !DIExpression())
!972 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !909, file: !973, line: 752, type: !974, isLocal: false, isDefinition: true, align: 16)
!973 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 640, elements: !975)
!975 = !{!976}
!976 = !DISubrange(count: 40)
!977 = !DIGlobalVariableExpression(var: !978, expr: !DIExpression())
!978 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !909, file: !973, line: 752, type: !979, isLocal: false, isDefinition: true, align: 32)
!979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !980)
!980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !981)
!981 = !{!982, !983, !984, !985, !991, !992}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !980, file: !429, line: 380, baseType: !337, size: 32)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !980, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !980, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !980, file: !429, line: 386, baseType: !986, size: 32, offset: 96)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 32)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !988)
!988 = !{!989, !990}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !987, file: !429, line: 359, baseType: !185, size: 8)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !987, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !980, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !980, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!993 = !DIGlobalVariableExpression(var: !994, expr: !DIExpression())
!994 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !909, file: !973, line: 752, type: !995, isLocal: true, isDefinition: true, align: 32)
!995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !996)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !997)
!997 = !{!998, !1003}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !996, file: !420, line: 60, baseType: !999, size: 32)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 32)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!103, !1002}
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 32)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !996, file: !420, line: 65, baseType: !1002, size: 32, offset: 32)
!1004 = !DIGlobalVariableExpression(var: !1005, expr: !DIExpression())
!1005 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !909, file: !973, line: 752, type: !987, isLocal: true, isDefinition: true, align: 8)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !918, line: 100, size: 224, elements: !1007)
!1007 = !{!1008, !1014, !1015, !1024, !1029, !1034, !1040}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1006, file: !918, line: 101, baseType: !1009, size: 32)
!1009 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !918, line: 76, baseType: !1010)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 32)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!103, !1002, !1013}
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !918, line: 56, baseType: !102)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1006, file: !918, line: 102, baseType: !1009, size: 32, offset: 32)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1006, file: !918, line: 103, baseType: !1016, size: 32, offset: 64)
!1016 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !918, line: 83, baseType: !1017)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 32)
!1018 = !DISubroutineType(types: !1019)
!1019 = !{!103, !1002, !1013, !1020, !102}
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !918, line: 72, baseType: !1021)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32)
!1022 = !DISubroutineType(types: !1023)
!1023 = !{null, !1002, !1013, !102}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1006, file: !918, line: 104, baseType: !1025, size: 32, offset: 96)
!1025 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !918, line: 79, baseType: !1026)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 32)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!103, !1002, !1013, !969}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1006, file: !918, line: 105, baseType: !1030, size: 32, offset: 128)
!1030 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !918, line: 88, baseType: !1031)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 32)
!1032 = !DISubroutineType(types: !1033)
!1033 = !{!917, !1002, !1013}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1006, file: !918, line: 106, baseType: !1035, size: 32, offset: 160)
!1035 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !918, line: 92, baseType: !1036)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 32)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{!103, !1002, !1013, !1039}
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !918, line: 64, baseType: !102)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1006, file: !918, line: 107, baseType: !1041, size: 32, offset: 192)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !918, line: 96, baseType: !1042)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 32)
!1043 = !DISubroutineType(types: !1044)
!1044 = !{!103, !1002, !1013, !102}
!1045 = !DIGlobalVariableExpression(var: !1046, expr: !DIExpression())
!1046 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1047, file: !1104, line: 603, type: !1106, isLocal: true, isDefinition: true, align: 32)
!1047 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1048, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1049, globals: !1101, splitDebugInlining: false, nameTableKind: None)
!1048 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!1049 = !{!102, !103, !1050}
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 32)
!1051 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1052)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1053, line: 336, size: 160, elements: !1054)
!1053 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1054 = !{!1055, !1075, !1079, !1083, !1096}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1052, file: !1053, line: 365, baseType: !1056, size: 32)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{!103, !1059, !1074}
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 32)
!1060 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1061)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1062)
!1062 = !{!1063, !1064, !1065, !1066, !1072, !1073}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1061, file: !429, line: 380, baseType: !337, size: 32)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1061, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1061, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1061, file: !429, line: 386, baseType: !1067, size: 32, offset: 96)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 32)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1069)
!1069 = !{!1070, !1071}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1068, file: !429, line: 359, baseType: !185, size: 8)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1068, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1061, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1061, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1052, file: !1053, line: 366, baseType: !1076, size: 32, offset: 32)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 32)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{null, !1059, !186}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1052, file: !1053, line: 374, baseType: !1080, size: 32, offset: 64)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 32)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{!103, !1059}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1052, file: !1053, line: 377, baseType: !1084, size: 32, offset: 96)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{!103, !1059, !1087}
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 32)
!1088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1089)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1053, line: 122, size: 64, elements: !1090)
!1090 = !{!1091, !1092, !1093, !1094, !1095}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1089, file: !1053, line: 123, baseType: !108, size: 32)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1089, file: !1053, line: 124, baseType: !185, size: 8, offset: 32)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1089, file: !1053, line: 125, baseType: !185, size: 8, offset: 40)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1089, file: !1053, line: 126, baseType: !185, size: 8, offset: 48)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1089, file: !1053, line: 127, baseType: !185, size: 8, offset: 56)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1052, file: !1053, line: 379, baseType: !1097, size: 32, offset: 128)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 32)
!1098 = !DISubroutineType(types: !1099)
!1099 = !{!103, !1059, !1100}
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 32)
!1101 = !{!1045, !1102}
!1102 = !DIGlobalVariableExpression(var: !1103, expr: !DIExpression())
!1103 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1047, file: !1104, line: 38, type: !1105, isLocal: true, isDefinition: true)
!1104 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1059)
!1106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1107)
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !1108)
!1108 = !{!1109, !1110}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1107, file: !420, line: 60, baseType: !1080, size: 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1107, file: !420, line: 65, baseType: !1059, size: 32, offset: 32)
!1111 = !DIGlobalVariableExpression(var: !1112, expr: !DIExpression())
!1112 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1113, file: !1282, line: 762, type: !1394, isLocal: true, isDefinition: true)
!1113 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1114, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1115, retainedTypes: !1133, globals: !1279, splitDebugInlining: false, nameTableKind: None)
!1114 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!1115 = !{!30, !1116, !1122, !1127, !917}
!1116 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1117, line: 506, baseType: !32, size: 32, elements: !1118)
!1117 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1118 = !{!1119, !1120, !1121}
!1119 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1120 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1121 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1122 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1117, line: 512, baseType: !32, size: 32, elements: !1123)
!1123 = !{!1124, !1125, !1126}
!1124 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1125 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1126 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1127 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !826, line: 43, baseType: !32, size: 32, elements: !1128)
!1128 = !{!1129, !1130, !1131, !1132}
!1129 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1130 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1131 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1132 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1133 = !{!102, !103, !1134, !1204, !1209, !1169, !1122, !1116, !1214, !1215, !108, !1229, !1184, !277, !1239, !1240}
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 32)
!1135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1136)
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1117, line: 523, size: 288, elements: !1137)
!1137 = !{!1138, !1159, !1165, !1170, !1174, !1175, !1176, !1180, !1200}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1136, file: !1117, line: 524, baseType: !1139, size: 32)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 32)
!1140 = !DISubroutineType(types: !1141)
!1141 = !{!103, !1142, !1157, !1158}
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 32)
!1143 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1144)
!1144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1145)
!1145 = !{!1146, !1147, !1148, !1149, !1155, !1156}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1144, file: !429, line: 380, baseType: !337, size: 32)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1144, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1144, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1144, file: !429, line: 386, baseType: !1150, size: 32, offset: 96)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 32)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1152)
!1152 = !{!1153, !1154}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1151, file: !429, line: 359, baseType: !185, size: 8)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1151, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1144, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1144, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1157 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1117, line: 237, baseType: !185)
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1117, line: 257, baseType: !108)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1136, file: !1117, line: 530, baseType: !1160, size: 32, offset: 32)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 32)
!1161 = !DISubroutineType(types: !1162)
!1162 = !{!103, !1142, !1163}
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 32)
!1164 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1117, line: 229, baseType: !108)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1136, file: !1117, line: 532, baseType: !1166, size: 32, offset: 64)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 32)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{!103, !1142, !1169, !1164}
!1169 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1117, line: 216, baseType: !108)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1136, file: !1117, line: 535, baseType: !1171, size: 32, offset: 96)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 32)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{!103, !1142, !1169}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1136, file: !1117, line: 537, baseType: !1171, size: 32, offset: 128)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1136, file: !1117, line: 539, baseType: !1171, size: 32, offset: 160)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1136, file: !1117, line: 541, baseType: !1177, size: 32, offset: 192)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 32)
!1178 = !DISubroutineType(types: !1179)
!1179 = !{!103, !1142, !1157, !1116, !1122}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1136, file: !1117, line: 544, baseType: !1181, size: 32, offset: 224)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 32)
!1182 = !DISubroutineType(types: !1183)
!1183 = !{!103, !1142, !1184, !131}
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 32)
!1185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1117, line: 478, size: 96, elements: !1186)
!1186 = !{!1187, !1194, !1199}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1185, file: !1117, line: 482, baseType: !1188, size: 32)
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1189, line: 33, baseType: !1190)
!1189 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1189, line: 29, size: 32, elements: !1191)
!1191 = !{!1192}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1190, file: !1189, line: 30, baseType: !1193, size: 32)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1185, file: !1117, line: 485, baseType: !1195, size: 32, offset: 32)
!1195 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1117, line: 464, baseType: !1196)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 32)
!1197 = !DISubroutineType(types: !1198)
!1198 = !{null, !1142, !1184, !1169}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1185, file: !1117, line: 493, baseType: !1169, size: 32, offset: 64)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1136, file: !1117, line: 547, baseType: !1201, size: 32, offset: 256)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!108, !1142}
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 32)
!1205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1206)
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1117, line: 428, size: 32, elements: !1207)
!1207 = !{!1208}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1206, file: !1117, line: 434, baseType: !1169, size: 32)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 32)
!1210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1211)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1117, line: 441, size: 32, elements: !1212)
!1212 = !{!1213}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1211, file: !1117, line: 447, baseType: !1169, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 32)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 32)
!1216 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !405, line: 275, baseType: !1217)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 264, size: 320, elements: !1218)
!1218 = !{!1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1217, file: !405, line: 266, baseType: !409, size: 32)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1217, file: !405, line: 267, baseType: !409, size: 32, offset: 32)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1217, file: !405, line: 268, baseType: !409, size: 32, offset: 64)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1217, file: !405, line: 269, baseType: !409, size: 32, offset: 96)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1217, file: !405, line: 270, baseType: !409, size: 32, offset: 128)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1217, file: !405, line: 271, baseType: !409, size: 32, offset: 160)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1217, file: !405, line: 272, baseType: !409, size: 32, offset: 192)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1217, file: !405, line: 273, baseType: !409, size: 32, offset: 224)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1217, file: !405, line: 274, baseType: !1228, size: 64, offset: 256)
!1228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 64, elements: !180)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 32)
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !405, line: 288, baseType: !1231)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 281, size: 288, elements: !1232)
!1232 = !{!1233, !1234, !1235, !1237, !1238}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1231, file: !405, line: 283, baseType: !409, size: 32)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1231, file: !405, line: 284, baseType: !409, size: 32, offset: 32)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1231, file: !405, line: 285, baseType: !1236, size: 128, offset: 64)
!1236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 128, elements: !787)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1231, file: !405, line: 286, baseType: !940, size: 64, offset: 192)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1231, file: !405, line: 287, baseType: !409, size: 32, offset: 256)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 32)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 32)
!1241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1242)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !918, line: 100, size: 224, elements: !1243)
!1243 = !{!1244, !1249, !1250, !1259, !1264, !1269, !1274}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1242, file: !918, line: 101, baseType: !1245, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !918, line: 76, baseType: !1246)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 32)
!1247 = !DISubroutineType(types: !1248)
!1248 = !{!103, !1142, !1013}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1242, file: !918, line: 102, baseType: !1245, size: 32, offset: 32)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1242, file: !918, line: 103, baseType: !1251, size: 32, offset: 64)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !918, line: 83, baseType: !1252)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 32)
!1253 = !DISubroutineType(types: !1254)
!1254 = !{!103, !1142, !1013, !1255, !102}
!1255 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !918, line: 72, baseType: !1256)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 32)
!1257 = !DISubroutineType(types: !1258)
!1258 = !{null, !1142, !1013, !102}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1242, file: !918, line: 104, baseType: !1260, size: 32, offset: 96)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !918, line: 79, baseType: !1261)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 32)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!103, !1142, !1013, !969}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1242, file: !918, line: 105, baseType: !1265, size: 32, offset: 128)
!1265 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !918, line: 88, baseType: !1266)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 32)
!1267 = !DISubroutineType(types: !1268)
!1268 = !{!917, !1142, !1013}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1242, file: !918, line: 106, baseType: !1270, size: 32, offset: 160)
!1270 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !918, line: 92, baseType: !1271)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 32)
!1272 = !DISubroutineType(types: !1273)
!1273 = !{!103, !1142, !1013, !1039}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1242, file: !918, line: 107, baseType: !1275, size: 32, offset: 192)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !918, line: 96, baseType: !1276)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1277 = !DISubroutineType(types: !1278)
!1278 = !{!103, !1142, !1013, !102}
!1279 = !{!1280, !1286, !1288, !1298, !1300, !1302, !1304, !1309, !1311, !1313, !1318, !1320, !1322, !1324, !1326, !1328, !1330, !1332, !1334, !1336, !1338, !1340, !1342, !1344, !1346, !1360, !1362, !1364, !1366, !1368, !1370, !1372, !1374, !1376, !1378, !1380, !1382, !1384, !1386, !1388, !1111, !1390, !1392, !1405, !1407, !1409, !1411, !1413, !1415}
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1113, file: !1282, line: 762, type: !1283, isLocal: false, isDefinition: true, align: 16)
!1282 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 112, elements: !1284)
!1284 = !{!1285}
!1285 = !DISubrange(count: 7)
!1286 = !DIGlobalVariableExpression(var: !1287, expr: !DIExpression())
!1287 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !1113, file: !1282, line: 762, type: !1143, isLocal: false, isDefinition: true, align: 32)
!1288 = !DIGlobalVariableExpression(var: !1289, expr: !DIExpression())
!1289 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !1113, file: !1282, line: 762, type: !1290, isLocal: true, isDefinition: true, align: 32)
!1290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1291)
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !1292)
!1292 = !{!1293, !1297}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1291, file: !420, line: 60, baseType: !1294, size: 32)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 32)
!1295 = !DISubroutineType(types: !1296)
!1296 = !{!103, !1142}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1291, file: !420, line: 65, baseType: !1142, size: 32, offset: 32)
!1298 = !DIGlobalVariableExpression(var: !1299, expr: !DIExpression())
!1299 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !1113, file: !1282, line: 766, type: !1283, isLocal: false, isDefinition: true, align: 16)
!1300 = !DIGlobalVariableExpression(var: !1301, expr: !DIExpression())
!1301 = distinct !DIGlobalVariable(name: "__device_dts_ord_20", scope: !1113, file: !1282, line: 766, type: !1143, isLocal: false, isDefinition: true, align: 32)
!1302 = !DIGlobalVariableExpression(var: !1303, expr: !DIExpression())
!1303 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_20", scope: !1113, file: !1282, line: 766, type: !1290, isLocal: true, isDefinition: true, align: 32)
!1304 = !DIGlobalVariableExpression(var: !1305, expr: !DIExpression())
!1305 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1113, file: !1282, line: 770, type: !1306, isLocal: false, isDefinition: true, align: 16)
!1306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 80, elements: !1307)
!1307 = !{!1308}
!1308 = !DISubrange(count: 5)
!1309 = !DIGlobalVariableExpression(var: !1310, expr: !DIExpression())
!1310 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1113, file: !1282, line: 770, type: !1143, isLocal: false, isDefinition: true, align: 32)
!1311 = !DIGlobalVariableExpression(var: !1312, expr: !DIExpression())
!1312 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1113, file: !1282, line: 770, type: !1290, isLocal: true, isDefinition: true, align: 32)
!1313 = !DIGlobalVariableExpression(var: !1314, expr: !DIExpression())
!1314 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !1113, file: !1282, line: 774, type: !1315, isLocal: false, isDefinition: true, align: 16)
!1315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 96, elements: !1316)
!1316 = !{!1317}
!1317 = !DISubrange(count: 6)
!1318 = !DIGlobalVariableExpression(var: !1319, expr: !DIExpression())
!1319 = distinct !DIGlobalVariable(name: "__device_dts_ord_23", scope: !1113, file: !1282, line: 774, type: !1143, isLocal: false, isDefinition: true, align: 32)
!1320 = !DIGlobalVariableExpression(var: !1321, expr: !DIExpression())
!1321 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_23", scope: !1113, file: !1282, line: 774, type: !1290, isLocal: true, isDefinition: true, align: 32)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1113, file: !1282, line: 778, type: !1306, isLocal: false, isDefinition: true, align: 16)
!1324 = !DIGlobalVariableExpression(var: !1325, expr: !DIExpression())
!1325 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1113, file: !1282, line: 778, type: !1143, isLocal: false, isDefinition: true, align: 32)
!1326 = !DIGlobalVariableExpression(var: !1327, expr: !DIExpression())
!1327 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1113, file: !1282, line: 778, type: !1290, isLocal: true, isDefinition: true, align: 32)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1113, file: !1282, line: 782, type: !1306, isLocal: false, isDefinition: true, align: 16)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1113, file: !1282, line: 782, type: !1143, isLocal: false, isDefinition: true, align: 32)
!1332 = !DIGlobalVariableExpression(var: !1333, expr: !DIExpression())
!1333 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1113, file: !1282, line: 782, type: !1290, isLocal: true, isDefinition: true, align: 32)
!1334 = !DIGlobalVariableExpression(var: !1335, expr: !DIExpression())
!1335 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1113, file: !1282, line: 786, type: !1306, isLocal: false, isDefinition: true, align: 16)
!1336 = !DIGlobalVariableExpression(var: !1337, expr: !DIExpression())
!1337 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1113, file: !1282, line: 786, type: !1143, isLocal: false, isDefinition: true, align: 32)
!1338 = !DIGlobalVariableExpression(var: !1339, expr: !DIExpression())
!1339 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1113, file: !1282, line: 786, type: !1290, isLocal: true, isDefinition: true, align: 32)
!1340 = !DIGlobalVariableExpression(var: !1341, expr: !DIExpression())
!1341 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1113, file: !1282, line: 790, type: !1306, isLocal: false, isDefinition: true, align: 16)
!1342 = !DIGlobalVariableExpression(var: !1343, expr: !DIExpression())
!1343 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1113, file: !1282, line: 790, type: !1143, isLocal: false, isDefinition: true, align: 32)
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1113, file: !1282, line: 790, type: !1290, isLocal: true, isDefinition: true, align: 32)
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1113, file: !1282, line: 762, type: !1348, isLocal: true, isDefinition: true)
!1348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1349, line: 237, size: 128, elements: !1350)
!1349 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1350 = !{!1351, !1352, !1353}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1348, file: !1349, line: 239, baseType: !1211, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1348, file: !1349, line: 241, baseType: !1142, size: 32, offset: 32)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1348, file: !1349, line: 243, baseType: !1354, size: 64, offset: 64)
!1354 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1189, line: 40, baseType: !1355)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1189, line: 35, size: 64, elements: !1356)
!1356 = !{!1357, !1359}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1355, file: !1189, line: 36, baseType: !1358, size: 32)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 32)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1355, file: !1189, line: 37, baseType: !1358, size: 32, offset: 32)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !1113, file: !1282, line: 762, type: !1151, isLocal: true, isDefinition: true, align: 8)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1113, file: !1282, line: 766, type: !1348, isLocal: true, isDefinition: true)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_20", scope: !1113, file: !1282, line: 766, type: !1151, isLocal: true, isDefinition: true, align: 8)
!1366 = !DIGlobalVariableExpression(var: !1367, expr: !DIExpression())
!1367 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1113, file: !1282, line: 770, type: !1348, isLocal: true, isDefinition: true)
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1113, file: !1282, line: 770, type: !1151, isLocal: true, isDefinition: true, align: 8)
!1370 = !DIGlobalVariableExpression(var: !1371, expr: !DIExpression())
!1371 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1113, file: !1282, line: 774, type: !1348, isLocal: true, isDefinition: true)
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_23", scope: !1113, file: !1282, line: 774, type: !1151, isLocal: true, isDefinition: true, align: 8)
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1113, file: !1282, line: 778, type: !1348, isLocal: true, isDefinition: true)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1113, file: !1282, line: 778, type: !1151, isLocal: true, isDefinition: true, align: 8)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1113, file: !1282, line: 782, type: !1348, isLocal: true, isDefinition: true)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1113, file: !1282, line: 782, type: !1151, isLocal: true, isDefinition: true, align: 8)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1113, file: !1282, line: 786, type: !1348, isLocal: true, isDefinition: true)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1113, file: !1282, line: 786, type: !1151, isLocal: true, isDefinition: true, align: 8)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1113, file: !1282, line: 790, type: !1348, isLocal: true, isDefinition: true)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1113, file: !1282, line: 790, type: !1151, isLocal: true, isDefinition: true, align: 8)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1113, file: !1282, line: 656, type: !1135, isLocal: true, isDefinition: true)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1113, file: !1282, line: 766, type: !1394, isLocal: true, isDefinition: true)
!1394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1395)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1349, line: 224, size: 160, elements: !1396)
!1396 = !{!1397, !1398, !1399, !1400}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1395, file: !1349, line: 226, baseType: !1206, size: 32)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1395, file: !1349, line: 228, baseType: !969, size: 32, offset: 32)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1395, file: !1349, line: 230, baseType: !103, size: 32, offset: 64)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1395, file: !1349, line: 231, baseType: !1401, size: 64, offset: 96)
!1401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !965, line: 343, size: 64, elements: !1402)
!1402 = !{!1403, !1404}
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1401, file: !965, line: 344, baseType: !108, size: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1401, file: !965, line: 345, baseType: !108, size: 32, offset: 32)
!1405 = !DIGlobalVariableExpression(var: !1406, expr: !DIExpression())
!1406 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1113, file: !1282, line: 770, type: !1394, isLocal: true, isDefinition: true)
!1407 = !DIGlobalVariableExpression(var: !1408, expr: !DIExpression())
!1408 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1113, file: !1282, line: 774, type: !1394, isLocal: true, isDefinition: true)
!1409 = !DIGlobalVariableExpression(var: !1410, expr: !DIExpression())
!1410 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1113, file: !1282, line: 778, type: !1394, isLocal: true, isDefinition: true)
!1411 = !DIGlobalVariableExpression(var: !1412, expr: !DIExpression())
!1412 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1113, file: !1282, line: 782, type: !1394, isLocal: true, isDefinition: true)
!1413 = !DIGlobalVariableExpression(var: !1414, expr: !DIExpression())
!1414 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1113, file: !1282, line: 786, type: !1394, isLocal: true, isDefinition: true)
!1415 = !DIGlobalVariableExpression(var: !1416, expr: !DIExpression())
!1416 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1113, file: !1282, line: 790, type: !1394, isLocal: true, isDefinition: true)
!1417 = !DIGlobalVariableExpression(var: !1418, expr: !DIExpression())
!1418 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1419, file: !1558, line: 44, type: !1676, isLocal: false, isDefinition: true)
!1419 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1420, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1421, retainedTypes: !1454, globals: !1555, splitDebugInlining: false, nameTableKind: None)
!1420 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!1421 = !{!30, !1422, !1429, !1436, !1443, !1449, !917}
!1422 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1053, line: 47, baseType: !32, size: 32, elements: !1423)
!1423 = !{!1424, !1425, !1426, !1427, !1428}
!1424 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1425 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1426 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1427 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1428 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1429 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1053, line: 75, baseType: !32, size: 32, elements: !1430)
!1430 = !{!1431, !1432, !1433, !1434, !1435}
!1431 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1432 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1433 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1434 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1435 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1436 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1053, line: 92, baseType: !32, size: 32, elements: !1437)
!1437 = !{!1438, !1439, !1440, !1441, !1442}
!1438 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1439 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1440 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1441 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1442 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1443 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1053, line: 84, baseType: !32, size: 32, elements: !1444)
!1444 = !{!1445, !1446, !1447, !1448}
!1445 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1446 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1447 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1448 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1449 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1053, line: 107, baseType: !32, size: 32, elements: !1450)
!1450 = !{!1451, !1452, !1453}
!1451 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1452 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1453 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1454 = !{!102, !103, !1455, !186, !185, !1504, !108, !1013, !1515, !121, !109, !1554}
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 32)
!1456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1457)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1053, line: 336, size: 160, elements: !1458)
!1458 = !{!1459, !1478, !1482, !1486, !1499}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1457, file: !1053, line: 365, baseType: !1460, size: 32)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 32)
!1461 = !DISubroutineType(types: !1462)
!1462 = !{!103, !1463, !1074}
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 32)
!1464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1465)
!1465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1466)
!1466 = !{!1467, !1468, !1469, !1470, !1476, !1477}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1465, file: !429, line: 380, baseType: !337, size: 32)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1465, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1465, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1465, file: !429, line: 386, baseType: !1471, size: 32, offset: 96)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 32)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1473)
!1473 = !{!1474, !1475}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1472, file: !429, line: 359, baseType: !185, size: 8)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1472, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1465, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1465, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1457, file: !1053, line: 366, baseType: !1479, size: 32, offset: 32)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 32)
!1480 = !DISubroutineType(types: !1481)
!1481 = !{null, !1463, !186}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1457, file: !1053, line: 374, baseType: !1483, size: 32, offset: 64)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 32)
!1484 = !DISubroutineType(types: !1485)
!1485 = !{!103, !1463}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1457, file: !1053, line: 377, baseType: !1487, size: 32, offset: 96)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 32)
!1488 = !DISubroutineType(types: !1489)
!1489 = !{!103, !1463, !1490}
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 32)
!1491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1492)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1053, line: 122, size: 64, elements: !1493)
!1493 = !{!1494, !1495, !1496, !1497, !1498}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1492, file: !1053, line: 123, baseType: !108, size: 32)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1492, file: !1053, line: 124, baseType: !185, size: 8, offset: 32)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1492, file: !1053, line: 125, baseType: !185, size: 8, offset: 40)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1492, file: !1053, line: 126, baseType: !185, size: 8, offset: 48)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1492, file: !1053, line: 127, baseType: !185, size: 8, offset: 56)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1457, file: !1053, line: 379, baseType: !1500, size: 32, offset: 128)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 32)
!1501 = !DISubroutineType(types: !1502)
!1502 = !{!103, !1463, !1503}
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 32)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 32)
!1505 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !405, line: 507, baseType: !1506)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 498, size: 224, elements: !1507)
!1507 = !{!1508, !1509, !1510, !1511, !1512, !1513, !1514}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1506, file: !405, line: 500, baseType: !409, size: 32)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1506, file: !405, line: 501, baseType: !409, size: 32, offset: 32)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1506, file: !405, line: 502, baseType: !409, size: 32, offset: 64)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1506, file: !405, line: 503, baseType: !409, size: 32, offset: 96)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1506, file: !405, line: 504, baseType: !409, size: 32, offset: 128)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1506, file: !405, line: 505, baseType: !409, size: 32, offset: 160)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1506, file: !405, line: 506, baseType: !409, size: 32, offset: 192)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 32)
!1516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1517)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !918, line: 100, size: 224, elements: !1518)
!1518 = !{!1519, !1524, !1525, !1534, !1539, !1544, !1549}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1517, file: !918, line: 101, baseType: !1520, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !918, line: 76, baseType: !1521)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 32)
!1522 = !DISubroutineType(types: !1523)
!1523 = !{!103, !1463, !1013}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1517, file: !918, line: 102, baseType: !1520, size: 32, offset: 32)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1517, file: !918, line: 103, baseType: !1526, size: 32, offset: 64)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !918, line: 83, baseType: !1527)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 32)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{!103, !1463, !1013, !1530, !102}
!1530 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !918, line: 72, baseType: !1531)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 32)
!1532 = !DISubroutineType(types: !1533)
!1533 = !{null, !1463, !1013, !102}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1517, file: !918, line: 104, baseType: !1535, size: 32, offset: 96)
!1535 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !918, line: 79, baseType: !1536)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 32)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!103, !1463, !1013, !969}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1517, file: !918, line: 105, baseType: !1540, size: 32, offset: 128)
!1540 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !918, line: 88, baseType: !1541)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 32)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!917, !1463, !1013}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1517, file: !918, line: 106, baseType: !1545, size: 32, offset: 160)
!1545 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !918, line: 92, baseType: !1546)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 32)
!1547 = !DISubroutineType(types: !1548)
!1548 = !{!103, !1463, !1013, !1039}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1517, file: !918, line: 107, baseType: !1550, size: 32, offset: 192)
!1550 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !918, line: 96, baseType: !1551)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 32)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!103, !1463, !1013, !102}
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 32)
!1555 = !{!1417, !1556, !1562, !1564, !1571, !1573, !1575, !1577, !1579, !1581, !1583, !1585, !1587, !1589, !1633, !1636, !1638, !1641, !1644, !1646, !1652, !1654, !1656, !1658, !1660, !1662, !1664, !1666, !1668, !1670, !1672, !1674}
!1556 = !DIGlobalVariableExpression(var: !1557, expr: !DIExpression())
!1557 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !1419, file: !1558, line: 1914, type: !1559, isLocal: false, isDefinition: true, align: 16)
!1558 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 128, elements: !1560)
!1560 = !{!1561}
!1561 = !DISubrange(count: 8)
!1562 = !DIGlobalVariableExpression(var: !1563, expr: !DIExpression())
!1563 = distinct !DIGlobalVariable(name: "__device_dts_ord_47", scope: !1419, file: !1558, line: 1914, type: !1464, isLocal: false, isDefinition: true, align: 32)
!1564 = !DIGlobalVariableExpression(var: !1565, expr: !DIExpression())
!1565 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_47", scope: !1419, file: !1558, line: 1914, type: !1566, isLocal: true, isDefinition: true, align: 32)
!1566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1567)
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !1568)
!1568 = !{!1569, !1570}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1567, file: !420, line: 60, baseType: !1483, size: 32)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1567, file: !420, line: 65, baseType: !1463, size: 32, offset: 32)
!1571 = !DIGlobalVariableExpression(var: !1572, expr: !DIExpression())
!1572 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1419, file: !1558, line: 1914, type: !1559, isLocal: false, isDefinition: true, align: 16)
!1573 = !DIGlobalVariableExpression(var: !1574, expr: !DIExpression())
!1574 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1419, file: !1558, line: 1914, type: !1464, isLocal: false, isDefinition: true, align: 32)
!1575 = !DIGlobalVariableExpression(var: !1576, expr: !DIExpression())
!1576 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1419, file: !1558, line: 1914, type: !1566, isLocal: true, isDefinition: true, align: 32)
!1577 = !DIGlobalVariableExpression(var: !1578, expr: !DIExpression())
!1578 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_50", scope: !1419, file: !1558, line: 1914, type: !1559, isLocal: false, isDefinition: true, align: 16)
!1579 = !DIGlobalVariableExpression(var: !1580, expr: !DIExpression())
!1580 = distinct !DIGlobalVariable(name: "__device_dts_ord_50", scope: !1419, file: !1558, line: 1914, type: !1464, isLocal: false, isDefinition: true, align: 32)
!1581 = !DIGlobalVariableExpression(var: !1582, expr: !DIExpression())
!1582 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_50", scope: !1419, file: !1558, line: 1914, type: !1566, isLocal: true, isDefinition: true, align: 32)
!1583 = !DIGlobalVariableExpression(var: !1584, expr: !DIExpression())
!1584 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_47", scope: !1419, file: !1558, line: 1914, type: !1472, isLocal: true, isDefinition: true, align: 8)
!1585 = !DIGlobalVariableExpression(var: !1586, expr: !DIExpression())
!1586 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1419, file: !1558, line: 1914, type: !1472, isLocal: true, isDefinition: true, align: 8)
!1587 = !DIGlobalVariableExpression(var: !1588, expr: !DIExpression())
!1588 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_50", scope: !1419, file: !1558, line: 1914, type: !1472, isLocal: true, isDefinition: true, align: 8)
!1589 = !DIGlobalVariableExpression(var: !1590, expr: !DIExpression())
!1590 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1419, file: !1558, line: 1914, type: !1591, isLocal: true, isDefinition: true)
!1591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1592)
!1592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1593, line: 22, size: 224, elements: !1594)
!1593 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1594 = !{!1595, !1596, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1592, file: !1593, line: 24, baseType: !1504, size: 32)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1592, file: !1593, line: 26, baseType: !1597, size: 32, offset: 32)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 32)
!1598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1599)
!1599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !965, line: 343, size: 64, elements: !1600)
!1600 = !{!1601, !1602}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1599, file: !965, line: 344, baseType: !108, size: 32)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1599, file: !965, line: 345, baseType: !108, size: 32, offset: 32)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1592, file: !1593, line: 28, baseType: !132, size: 32, offset: 64)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1592, file: !1593, line: 30, baseType: !131, size: 8, offset: 96)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1592, file: !1593, line: 32, baseType: !103, size: 32, offset: 128)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1592, file: !1593, line: 34, baseType: !131, size: 8, offset: 160)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1592, file: !1593, line: 36, baseType: !131, size: 8, offset: 168)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1592, file: !1593, line: 38, baseType: !131, size: 8, offset: 176)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1592, file: !1593, line: 40, baseType: !131, size: 8, offset: 184)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1592, file: !1593, line: 41, baseType: !1611, size: 32, offset: 192)
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 32)
!1612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1613)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1614, line: 60, size: 64, elements: !1615)
!1614 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1615 = !{!1616, !1632}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1613, file: !1614, line: 69, baseType: !1617, size: 32)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 32)
!1618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1619)
!1619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1614, line: 50, size: 64, elements: !1620)
!1620 = !{!1621, !1630, !1631}
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1619, file: !1614, line: 52, baseType: !1622, size: 32)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 32)
!1623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1624)
!1624 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1625, line: 37, baseType: !1626)
!1625 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1625, line: 32, size: 64, elements: !1627)
!1627 = !{!1628, !1629}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1626, file: !1625, line: 34, baseType: !108, size: 32)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1626, file: !1625, line: 36, baseType: !108, size: 32, offset: 32)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1619, file: !1614, line: 54, baseType: !185, size: 8, offset: 32)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1619, file: !1614, line: 56, baseType: !185, size: 8, offset: 40)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1613, file: !1614, line: 71, baseType: !185, size: 8, offset: 32)
!1633 = !DIGlobalVariableExpression(var: !1634, expr: !DIExpression())
!1634 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1419, file: !1558, line: 1914, type: !1635, isLocal: true, isDefinition: true)
!1635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1598, size: 64, elements: !606)
!1636 = !DIGlobalVariableExpression(var: !1637, expr: !DIExpression())
!1637 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_47", scope: !1419, file: !1558, line: 1914, type: !1612, isLocal: true, isDefinition: true)
!1638 = !DIGlobalVariableExpression(var: !1639, expr: !DIExpression())
!1639 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_47", scope: !1419, file: !1558, line: 1914, type: !1640, isLocal: true, isDefinition: true)
!1640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1618, size: 64, elements: !606)
!1641 = !DIGlobalVariableExpression(var: !1642, expr: !DIExpression())
!1642 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_47", scope: !1419, file: !1558, line: 1914, type: !1643, isLocal: true, isDefinition: true)
!1643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1623, size: 128, elements: !180)
!1644 = !DIGlobalVariableExpression(var: !1645, expr: !DIExpression())
!1645 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1419, file: !1558, line: 1539, type: !1456, isLocal: true, isDefinition: true)
!1646 = !DIGlobalVariableExpression(var: !1647, expr: !DIExpression())
!1647 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1419, file: !1558, line: 1914, type: !1648, isLocal: true, isDefinition: true)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1593, line: 74, size: 64, elements: !1649)
!1649 = !{!1650, !1651}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1648, file: !1593, line: 76, baseType: !108, size: 32)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1648, file: !1593, line: 78, baseType: !1463, size: 32, offset: 32)
!1652 = !DIGlobalVariableExpression(var: !1653, expr: !DIExpression())
!1653 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1419, file: !1558, line: 1914, type: !1591, isLocal: true, isDefinition: true)
!1654 = !DIGlobalVariableExpression(var: !1655, expr: !DIExpression())
!1655 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1419, file: !1558, line: 1914, type: !1635, isLocal: true, isDefinition: true)
!1656 = !DIGlobalVariableExpression(var: !1657, expr: !DIExpression())
!1657 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1419, file: !1558, line: 1914, type: !1612, isLocal: true, isDefinition: true)
!1658 = !DIGlobalVariableExpression(var: !1659, expr: !DIExpression())
!1659 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1419, file: !1558, line: 1914, type: !1640, isLocal: true, isDefinition: true)
!1660 = !DIGlobalVariableExpression(var: !1661, expr: !DIExpression())
!1661 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1419, file: !1558, line: 1914, type: !1643, isLocal: true, isDefinition: true)
!1662 = !DIGlobalVariableExpression(var: !1663, expr: !DIExpression())
!1663 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1419, file: !1558, line: 1914, type: !1648, isLocal: true, isDefinition: true)
!1664 = !DIGlobalVariableExpression(var: !1665, expr: !DIExpression())
!1665 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1419, file: !1558, line: 1914, type: !1591, isLocal: true, isDefinition: true)
!1666 = !DIGlobalVariableExpression(var: !1667, expr: !DIExpression())
!1667 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1419, file: !1558, line: 1914, type: !1635, isLocal: true, isDefinition: true)
!1668 = !DIGlobalVariableExpression(var: !1669, expr: !DIExpression())
!1669 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_50", scope: !1419, file: !1558, line: 1914, type: !1612, isLocal: true, isDefinition: true)
!1670 = !DIGlobalVariableExpression(var: !1671, expr: !DIExpression())
!1671 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_50", scope: !1419, file: !1558, line: 1914, type: !1640, isLocal: true, isDefinition: true)
!1672 = !DIGlobalVariableExpression(var: !1673, expr: !DIExpression())
!1673 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_50", scope: !1419, file: !1558, line: 1914, type: !1643, isLocal: true, isDefinition: true)
!1674 = !DIGlobalVariableExpression(var: !1675, expr: !DIExpression())
!1675 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1419, file: !1558, line: 1914, type: !1648, isLocal: true, isDefinition: true)
!1676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1677)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !1678)
!1678 = !{!1679, !1680}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1677, file: !384, line: 17, baseType: !337, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1677, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!1681 = !DIGlobalVariableExpression(var: !1682, expr: !DIExpression())
!1682 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1683, file: !1761, line: 65, type: !409, isLocal: true, isDefinition: true)
!1683 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1684, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1685, retainedTypes: !1686, globals: !1758, splitDebugInlining: false, nameTableKind: None)
!1684 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!1685 = !{!705}
!1686 = !{!104, !1687, !331, !185, !108, !1695, !1726}
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 32)
!1688 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !624, line: 770, baseType: !1689)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 764, size: 128, elements: !1690)
!1690 = !{!1691, !1692, !1693, !1694}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1689, file: !624, line: 766, baseType: !409, size: 32)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1689, file: !624, line: 767, baseType: !409, size: 32, offset: 32)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1689, file: !624, line: 768, baseType: !409, size: 32, offset: 64)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1689, file: !624, line: 769, baseType: !628, size: 32, offset: 96)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 32)
!1696 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !624, line: 426, baseType: !1697)
!1697 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 411, size: 28704, elements: !1698)
!1698 = !{!1699, !1701, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1716, !1721, !1725}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1697, file: !624, line: 413, baseType: !1700, size: 256)
!1700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 256, elements: !1560)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1697, file: !624, line: 414, baseType: !1702, size: 768, offset: 256)
!1702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 768, elements: !1703)
!1703 = !{!1704}
!1704 = !DISubrange(count: 24)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1697, file: !624, line: 415, baseType: !1700, size: 256, offset: 1024)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1697, file: !624, line: 416, baseType: !1702, size: 768, offset: 1280)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1697, file: !624, line: 417, baseType: !1700, size: 256, offset: 2048)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1697, file: !624, line: 418, baseType: !1702, size: 768, offset: 2304)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1697, file: !624, line: 419, baseType: !1700, size: 256, offset: 3072)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1697, file: !624, line: 420, baseType: !1702, size: 768, offset: 3328)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1697, file: !624, line: 421, baseType: !1700, size: 256, offset: 4096)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1697, file: !624, line: 422, baseType: !1713, size: 1792, offset: 4352)
!1713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 1792, elements: !1714)
!1714 = !{!1715}
!1715 = !DISubrange(count: 56)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1697, file: !624, line: 423, baseType: !1717, size: 1920, offset: 6144)
!1717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1718, size: 1920, elements: !1719)
!1718 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !185)
!1719 = !{!1720}
!1720 = !DISubrange(count: 240)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1697, file: !624, line: 424, baseType: !1722, size: 20608, offset: 8064)
!1722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 20608, elements: !1723)
!1723 = !{!1724}
!1724 = !DISubrange(count: 644)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1697, file: !624, line: 425, baseType: !409, size: 32, offset: 28672)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 32)
!1727 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !1728)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !1729)
!1729 = !{!1730, !1731, !1732, !1733, !1734, !1735, !1736, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1749, !1750, !1751, !1753, !1755, !1757}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1728, file: !624, line: 447, baseType: !628, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1728, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1728, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1728, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1728, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1728, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1728, file: !624, line: 453, baseType: !1737, size: 96, offset: 192)
!1737 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1718, size: 96, elements: !1738)
!1738 = !{!1739}
!1739 = !DISubrange(count: 12)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1728, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1728, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1728, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1728, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1728, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1728, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1728, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1728, file: !624, line: 461, baseType: !1748, size: 64, offset: 512)
!1748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !628, size: 64, elements: !180)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1728, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1728, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1728, file: !624, line: 464, baseType: !1752, size: 128, offset: 640)
!1752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !628, size: 128, elements: !787)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1728, file: !624, line: 465, baseType: !1754, size: 160, offset: 768)
!1754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !628, size: 160, elements: !1307)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1728, file: !624, line: 466, baseType: !1756, size: 160, offset: 928)
!1756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 160, elements: !1307)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1728, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!1758 = !{!1759, !1785, !1788, !1790, !1792, !1681}
!1759 = !DIGlobalVariableExpression(var: !1760, expr: !DIExpression())
!1760 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1683, file: !1761, line: 285, type: !1762, isLocal: true, isDefinition: true, align: 32)
!1761 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1763)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !1764)
!1764 = !{!1765, !1784}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1763, file: !420, line: 60, baseType: !1766, size: 32)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 32)
!1767 = !DISubroutineType(types: !1768)
!1768 = !{!103, !1769}
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 32)
!1770 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1771)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1772)
!1772 = !{!1773, !1774, !1775, !1776, !1782, !1783}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1771, file: !429, line: 380, baseType: !337, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1771, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1771, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1771, file: !429, line: 386, baseType: !1777, size: 32, offset: 96)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 32)
!1778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1779)
!1779 = !{!1780, !1781}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1778, file: !429, line: 359, baseType: !185, size: 8)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1778, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1771, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1771, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1763, file: !420, line: 65, baseType: !1769, size: 32, offset: 32)
!1785 = !DIGlobalVariableExpression(var: !1786, expr: !DIExpression())
!1786 = distinct !DIGlobalVariable(name: "lock", scope: !1683, file: !1761, line: 34, type: !1787, isLocal: true, isDefinition: true)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!1788 = !DIGlobalVariableExpression(var: !1789, expr: !DIExpression())
!1789 = distinct !DIGlobalVariable(name: "last_load", scope: !1683, file: !1761, line: 36, type: !108, isLocal: true, isDefinition: true)
!1790 = !DIGlobalVariableExpression(var: !1791, expr: !DIExpression())
!1791 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1683, file: !1761, line: 48, type: !108, isLocal: true, isDefinition: true)
!1792 = !DIGlobalVariableExpression(var: !1793, expr: !DIExpression())
!1793 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1683, file: !1761, line: 54, type: !108, isLocal: true, isDefinition: true)
!1794 = !DIGlobalVariableExpression(var: !1795, expr: !DIExpression())
!1795 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1796, file: !1878, line: 22, type: !1880, isLocal: true, isDefinition: true)
!1796 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1797, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1798, retainedTypes: !1799, globals: !1875, splitDebugInlining: false, nameTableKind: None)
!1797 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!1798 = !{!1116, !1122}
!1799 = !{!1800, !1864, !1869, !1169, !1122, !1116, !1874, !102}
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 32)
!1801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1802)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1117, line: 523, size: 288, elements: !1803)
!1803 = !{!1804, !1823, !1827, !1831, !1835, !1836, !1837, !1841, !1860}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1802, file: !1117, line: 524, baseType: !1805, size: 32)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 32)
!1806 = !DISubroutineType(types: !1807)
!1807 = !{!103, !1808, !1157, !1158}
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 32)
!1809 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1810)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1811)
!1811 = !{!1812, !1813, !1814, !1815, !1821, !1822}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1810, file: !429, line: 380, baseType: !337, size: 32)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1810, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1810, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1810, file: !429, line: 386, baseType: !1816, size: 32, offset: 96)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 32)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1818)
!1818 = !{!1819, !1820}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1817, file: !429, line: 359, baseType: !185, size: 8)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1817, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1810, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1810, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1802, file: !1117, line: 530, baseType: !1824, size: 32, offset: 32)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 32)
!1825 = !DISubroutineType(types: !1826)
!1826 = !{!103, !1808, !1163}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1802, file: !1117, line: 532, baseType: !1828, size: 32, offset: 64)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 32)
!1829 = !DISubroutineType(types: !1830)
!1830 = !{!103, !1808, !1169, !1164}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1802, file: !1117, line: 535, baseType: !1832, size: 32, offset: 96)
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 32)
!1833 = !DISubroutineType(types: !1834)
!1834 = !{!103, !1808, !1169}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1802, file: !1117, line: 537, baseType: !1832, size: 32, offset: 128)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1802, file: !1117, line: 539, baseType: !1832, size: 32, offset: 160)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1802, file: !1117, line: 541, baseType: !1838, size: 32, offset: 192)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 32)
!1839 = !DISubroutineType(types: !1840)
!1840 = !{!103, !1808, !1157, !1116, !1122}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1802, file: !1117, line: 544, baseType: !1842, size: 32, offset: 224)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 32)
!1843 = !DISubroutineType(types: !1844)
!1844 = !{!103, !1808, !1845, !131}
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 32)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1117, line: 478, size: 96, elements: !1847)
!1847 = !{!1848, !1854, !1859}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1846, file: !1117, line: 482, baseType: !1849, size: 32)
!1849 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1189, line: 33, baseType: !1850)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1189, line: 29, size: 32, elements: !1851)
!1851 = !{!1852}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1850, file: !1189, line: 30, baseType: !1853, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 32)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1846, file: !1117, line: 485, baseType: !1855, size: 32, offset: 32)
!1855 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1117, line: 464, baseType: !1856)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 32)
!1857 = !DISubroutineType(types: !1858)
!1858 = !{null, !1808, !1845, !1169}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1846, file: !1117, line: 493, baseType: !1169, size: 32, offset: 64)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1802, file: !1117, line: 547, baseType: !1861, size: 32, offset: 256)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 32)
!1862 = !DISubroutineType(types: !1863)
!1863 = !{!108, !1808}
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 32)
!1865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1866)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1117, line: 428, size: 32, elements: !1867)
!1867 = !{!1868}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1866, file: !1117, line: 434, baseType: !1169, size: 32)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 32)
!1870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1871)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1117, line: 441, size: 32, elements: !1872)
!1872 = !{!1873}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1871, file: !1117, line: 447, baseType: !1169, size: 32)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 32)
!1875 = !{!1876, !1794}
!1876 = !DIGlobalVariableExpression(var: !1877, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1877 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1796, file: !1878, line: 37, type: !1879, isLocal: true, isDefinition: true)
!1878 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !132)
!1880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1881, size: 352, elements: !1882)
!1881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1808)
!1882 = !{!1883}
!1883 = !DISubrange(count: 11)
!1884 = !DIGlobalVariableExpression(var: !1885, expr: !DIExpression())
!1885 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1886, file: !1928, line: 139, type: !1935, isLocal: false, isDefinition: true)
!1886 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1887, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1888, globals: !1925, splitDebugInlining: false, nameTableKind: None)
!1887 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!1888 = !{!1889}
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 32)
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 369, baseType: !1891)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 335, size: 1152, elements: !1892)
!1892 = !{!1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1891, file: !405, line: 337, baseType: !409, size: 32)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1891, file: !405, line: 338, baseType: !409, size: 32, offset: 32)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1891, file: !405, line: 339, baseType: !409, size: 32, offset: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1891, file: !405, line: 340, baseType: !409, size: 32, offset: 96)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1891, file: !405, line: 341, baseType: !409, size: 32, offset: 128)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1891, file: !405, line: 342, baseType: !409, size: 32, offset: 160)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1891, file: !405, line: 343, baseType: !409, size: 32, offset: 192)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1891, file: !405, line: 344, baseType: !108, size: 32, offset: 224)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1891, file: !405, line: 345, baseType: !409, size: 32, offset: 256)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1891, file: !405, line: 346, baseType: !409, size: 32, offset: 288)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1891, file: !405, line: 347, baseType: !940, size: 64, offset: 320)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1891, file: !405, line: 348, baseType: !409, size: 32, offset: 384)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1891, file: !405, line: 349, baseType: !409, size: 32, offset: 416)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1891, file: !405, line: 350, baseType: !409, size: 32, offset: 448)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1891, file: !405, line: 351, baseType: !108, size: 32, offset: 480)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1891, file: !405, line: 352, baseType: !409, size: 32, offset: 512)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1891, file: !405, line: 353, baseType: !409, size: 32, offset: 544)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1891, file: !405, line: 354, baseType: !940, size: 64, offset: 576)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1891, file: !405, line: 355, baseType: !409, size: 32, offset: 640)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1891, file: !405, line: 356, baseType: !409, size: 32, offset: 672)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1891, file: !405, line: 357, baseType: !409, size: 32, offset: 704)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1891, file: !405, line: 358, baseType: !108, size: 32, offset: 736)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1891, file: !405, line: 359, baseType: !409, size: 32, offset: 768)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1891, file: !405, line: 360, baseType: !409, size: 32, offset: 800)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1891, file: !405, line: 361, baseType: !940, size: 64, offset: 832)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1891, file: !405, line: 362, baseType: !409, size: 32, offset: 896)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1891, file: !405, line: 363, baseType: !409, size: 32, offset: 928)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1891, file: !405, line: 364, baseType: !940, size: 64, offset: 960)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1891, file: !405, line: 365, baseType: !409, size: 32, offset: 1024)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1891, file: !405, line: 366, baseType: !409, size: 32, offset: 1056)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1891, file: !405, line: 367, baseType: !961, size: 32, offset: 1088)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1891, file: !405, line: 368, baseType: !409, size: 32, offset: 1120)
!1925 = !{!1926, !1929, !1884}
!1926 = !DIGlobalVariableExpression(var: !1927, expr: !DIExpression())
!1927 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1886, file: !1928, line: 137, type: !108, isLocal: false, isDefinition: true)
!1928 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1929 = !DIGlobalVariableExpression(var: !1930, expr: !DIExpression())
!1930 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1886, file: !1928, line: 138, type: !1931, isLocal: false, isDefinition: true)
!1931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1932, size: 128, elements: !1933)
!1932 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!1933 = !{!1934}
!1934 = !DISubrange(count: 16)
!1935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1932, size: 64, elements: !1560)
!1936 = !DIGlobalVariableExpression(var: !1937, expr: !DIExpression())
!1937 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1938, file: !1941, line: 23, type: !1942, isLocal: false, isDefinition: true)
!1938 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1939, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, globals: !1940, splitDebugInlining: false, nameTableKind: None)
!1939 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!1940 = !{!1936}
!1941 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1943 = !DIGlobalVariableExpression(var: !1944, expr: !DIExpression())
!1944 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1945, file: !1949, line: 37, type: !2198, isLocal: false, isDefinition: true)
!1945 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1946, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1947, retainedTypes: !1956, globals: !2029, splitDebugInlining: false, nameTableKind: None)
!1946 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!1947 = !{!1948, !30, !705}
!1948 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1949, line: 63, baseType: !32, size: 32, elements: !1950)
!1949 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1950 = !{!1951, !1952, !1953, !1954, !1955}
!1951 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1952 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1953 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1954 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1955 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1956 = !{!132, !102, !103, !1957, !277, !108, !1987, !331, !185, !2012}
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1959)
!1959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1960, line: 51, size: 64, elements: !1961)
!1960 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1961 = !{!1962, !1982}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1959, file: !1960, line: 52, baseType: !1963, size: 32)
!1963 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1960, line: 38, baseType: !1964)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 32)
!1965 = !DISubroutineType(types: !1966)
!1966 = !{!103, !1967, !379, !121}
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 32)
!1968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1969)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1970)
!1970 = !{!1971, !1972, !1973, !1974, !1980, !1981}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1969, file: !429, line: 380, baseType: !337, size: 32)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1969, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1969, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1969, file: !429, line: 386, baseType: !1975, size: 32, offset: 96)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 32)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1977)
!1977 = !{!1978, !1979}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1976, file: !429, line: 359, baseType: !185, size: 8)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1976, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1969, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1969, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1959, file: !1960, line: 53, baseType: !1983, size: 32, offset: 32)
!1983 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1960, line: 47, baseType: !1984)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 32)
!1985 = !DISubroutineType(types: !1986)
!1986 = !{!103, !1967, !379, !121, !108}
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 32)
!1988 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !1989)
!1989 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !1990)
!1990 = !{!1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1989, file: !624, line: 447, baseType: !628, size: 32)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1989, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1989, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1989, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1989, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1989, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1989, file: !624, line: 453, baseType: !1737, size: 96, offset: 192)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1989, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1989, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1989, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1989, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1989, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1989, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1989, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1989, file: !624, line: 461, baseType: !1748, size: 64, offset: 512)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1989, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1989, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1989, file: !624, line: 464, baseType: !1752, size: 128, offset: 640)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1989, file: !624, line: 465, baseType: !1754, size: 160, offset: 768)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1989, file: !624, line: 466, baseType: !1756, size: 160, offset: 928)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1989, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !624, line: 426, baseType: !2014)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 411, size: 28704, elements: !2015)
!2015 = !{!2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2014, file: !624, line: 413, baseType: !1700, size: 256)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2014, file: !624, line: 414, baseType: !1702, size: 768, offset: 256)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2014, file: !624, line: 415, baseType: !1700, size: 256, offset: 1024)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2014, file: !624, line: 416, baseType: !1702, size: 768, offset: 1280)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2014, file: !624, line: 417, baseType: !1700, size: 256, offset: 2048)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2014, file: !624, line: 418, baseType: !1702, size: 768, offset: 2304)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2014, file: !624, line: 419, baseType: !1700, size: 256, offset: 3072)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2014, file: !624, line: 420, baseType: !1702, size: 768, offset: 3328)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2014, file: !624, line: 421, baseType: !1700, size: 256, offset: 4096)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2014, file: !624, line: 422, baseType: !1713, size: 1792, offset: 4352)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2014, file: !624, line: 423, baseType: !1717, size: 1920, offset: 6144)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2014, file: !624, line: 424, baseType: !1722, size: 20608, offset: 8064)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2014, file: !624, line: 425, baseType: !409, size: 32, offset: 28672)
!2029 = !{!1943, !2030, !2152, !2158, !2160, !2163, !2168, !2170, !2175}
!2030 = !DIGlobalVariableExpression(var: !2031, expr: !DIExpression())
!2031 = distinct !DIGlobalVariable(name: "_kernel", scope: !1945, file: !1949, line: 40, type: !2032, isLocal: false, isDefinition: true)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !141, line: 158, size: 288, elements: !2033)
!2033 = !{!2034, !2147}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2032, file: !141, line: 159, baseType: !2035, size: 192)
!2035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2036, size: 192, elements: !606)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !141, line: 100, size: 192, elements: !2037)
!2037 = !{!2038, !2039, !2040, !2141, !2142, !2143, !2144}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2036, file: !141, line: 102, baseType: !108, size: 32)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2036, file: !141, line: 105, baseType: !277, size: 32, offset: 32)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2036, file: !141, line: 108, baseType: !2041, size: 32, offset: 64)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 32)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !2043)
!2043 = !{!2044, !2102, !2114, !2115, !2116, !2117, !2123, !2136}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2042, file: !163, line: 247, baseType: !2045, size: 384)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !2046)
!2046 = !{!2047, !2071, !2078, !2079, !2080, !2089, !2090, !2091}
!2047 = !DIDerivedType(tag: DW_TAG_member, scope: !2045, file: !163, line: 60, baseType: !2048, size: 64)
!2048 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2045, file: !163, line: 60, size: 64, elements: !2049)
!2049 = !{!2050, !2065}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2048, file: !163, line: 61, baseType: !2051, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2052)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2053)
!2053 = !{!2054, !2060}
!2054 = !DIDerivedType(tag: DW_TAG_member, scope: !2052, file: !146, line: 38, baseType: !2055, size: 32)
!2055 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2052, file: !146, line: 38, size: 32, elements: !2056)
!2056 = !{!2057, !2059}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2055, file: !146, line: 39, baseType: !2058, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 32)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2055, file: !146, line: 40, baseType: !2058, size: 32)
!2060 = !DIDerivedType(tag: DW_TAG_member, scope: !2052, file: !146, line: 42, baseType: !2061, size: 32, offset: 32)
!2061 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2052, file: !146, line: 42, size: 32, elements: !2062)
!2062 = !{!2063, !2064}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2061, file: !146, line: 43, baseType: !2058, size: 32)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2061, file: !146, line: 44, baseType: !2058, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2048, file: !163, line: 62, baseType: !2066, size: 64)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2067)
!2067 = !{!2068}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2066, file: !175, line: 50, baseType: !2069, size: 64)
!2069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2070, size: 64, elements: !180)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 32)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2045, file: !163, line: 68, baseType: !2072, size: 32, offset: 64)
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 32)
!2073 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2074)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2075)
!2075 = !{!2076}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2074, file: !141, line: 232, baseType: !2077, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2052)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2045, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2045, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2080 = !DIDerivedType(tag: DW_TAG_member, scope: !2045, file: !163, line: 90, baseType: !2081, size: 16, offset: 112)
!2081 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2045, file: !163, line: 90, size: 16, elements: !2082)
!2082 = !{!2083, !2088}
!2083 = !DIDerivedType(tag: DW_TAG_member, scope: !2081, file: !163, line: 91, baseType: !2084, size: 16)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2081, file: !163, line: 91, size: 16, elements: !2085)
!2085 = !{!2086, !2087}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2084, file: !163, line: 96, baseType: !195, size: 8)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2084, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2081, file: !163, line: 100, baseType: !121, size: 16)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2045, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2045, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2045, file: !163, line: 131, baseType: !2092, size: 192, offset: 192)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2093)
!2093 = !{!2094, !2095, !2101}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2092, file: !141, line: 245, baseType: !2051, size: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2092, file: !141, line: 246, baseType: !2096, size: 32, offset: 64)
!2096 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2097)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 32)
!2098 = !DISubroutineType(types: !2099)
!2099 = !{null, !2100}
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 32)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2092, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2042, file: !163, line: 250, baseType: !2103, size: 288, offset: 384)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2104)
!2104 = !{!2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2103, file: !214, line: 26, baseType: !108, size: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2103, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2103, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2103, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2103, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2103, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2103, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2103, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2103, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2042, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2042, file: !163, line: 256, baseType: !2073, size: 64, offset: 704)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2042, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2042, file: !163, line: 300, baseType: !2118, size: 96, offset: 800)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !2119)
!2119 = !{!2120, !2121, !2122}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2118, file: !163, line: 153, baseType: !22, size: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2118, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2118, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2042, file: !163, line: 325, baseType: !2124, size: 32, offset: 896)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 32)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2126)
!2126 = !{!2127, !2133, !2134}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2125, file: !137, line: 5074, baseType: !2128, size: 96)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2129)
!2129 = !{!2130, !2131, !2132}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2128, file: !240, line: 57, baseType: !243, size: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2128, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2128, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2125, file: !137, line: 5075, baseType: !2073, size: 64, offset: 96)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2125, file: !137, line: 5076, baseType: !2135, offset: 160)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2042, file: !163, line: 343, baseType: !2137, size: 64, offset: 928)
!2137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2138)
!2138 = !{!2139, !2140}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2137, file: !214, line: 63, baseType: !108, size: 32)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2137, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2036, file: !141, line: 111, baseType: !2041, size: 32, offset: 96)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2036, file: !141, line: 124, baseType: !103, size: 32, offset: 128)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2036, file: !141, line: 127, baseType: !185, size: 8, offset: 160)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2036, file: !141, line: 153, baseType: !2145, offset: 168)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2146, line: 33, elements: !251)
!2146 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2032, file: !141, line: 170, baseType: !2148, size: 96, offset: 192)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !141, line: 83, size: 96, elements: !2149)
!2149 = !{!2150, !2151}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2148, file: !141, line: 86, baseType: !2041, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2148, file: !141, line: 90, baseType: !2077, size: 64, offset: 32)
!2152 = !DIGlobalVariableExpression(var: !2153, expr: !DIExpression())
!2153 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1945, file: !1949, line: 43, type: !2154, isLocal: false, isDefinition: true, align: 512)
!2154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2155, size: 8704, elements: !346)
!2155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !316, line: 47, size: 8, elements: !2156)
!2156 = !{!2157}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2155, file: !316, line: 48, baseType: !278, size: 8)
!2158 = !DIGlobalVariableExpression(var: !2159, expr: !DIExpression())
!2159 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1945, file: !1949, line: 44, type: !2042, isLocal: false, isDefinition: true)
!2160 = !DIGlobalVariableExpression(var: !2161, expr: !DIExpression())
!2161 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1945, file: !1949, line: 48, type: !2162, isLocal: false, isDefinition: true)
!2162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2042, size: 1024, elements: !606)
!2163 = !DIGlobalVariableExpression(var: !2164, expr: !DIExpression())
!2164 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1945, file: !1949, line: 86, type: !2165, isLocal: false, isDefinition: true, align: 512)
!2165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2155, size: 16896, elements: !2166)
!2166 = !{!607, !2167}
!2167 = !DISubrange(count: 2112)
!2168 = !DIGlobalVariableExpression(var: !2169, expr: !DIExpression())
!2169 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1945, file: !1949, line: 217, type: !131, isLocal: false, isDefinition: true)
!2170 = !DIGlobalVariableExpression(var: !2171, expr: !DIExpression())
!2171 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1945, file: !1949, line: 50, type: !2172, isLocal: true, isDefinition: true, align: 512)
!2172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2155, size: 3072, elements: !2173)
!2173 = !{!607, !2174}
!2174 = !DISubrange(count: 384)
!2175 = !DIGlobalVariableExpression(var: !2176, expr: !DIExpression())
!2176 = distinct !DIGlobalVariable(name: "levels", scope: !2177, file: !1949, line: 232, type: !2197, isLocal: true, isDefinition: true)
!2177 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1949, file: !1949, line: 230, type: !2178, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !2180)
!2178 = !DISubroutineType(types: !2179)
!2179 = !{null, !1948}
!2180 = !{!2181, !2182, !2192, !2196}
!2181 = !DILocalVariable(name: "level", arg: 1, scope: !2177, file: !1949, line: 230, type: !1948)
!2182 = !DILocalVariable(name: "entry", scope: !2177, file: !1949, line: 244, type: !2183)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 32)
!2184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2185)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !2186)
!2186 = !{!2187, !2191}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2185, file: !420, line: 60, baseType: !2188, size: 32)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 32)
!2189 = !DISubroutineType(types: !2190)
!2190 = !{!103, !1967}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2185, file: !420, line: 65, baseType: !1967, size: 32, offset: 32)
!2192 = !DILocalVariable(name: "dev", scope: !2193, file: !1949, line: 247, type: !1967)
!2193 = distinct !DILexicalBlock(scope: !2194, file: !1949, line: 246, column: 64)
!2194 = distinct !DILexicalBlock(scope: !2195, file: !1949, line: 246, column: 2)
!2195 = distinct !DILexicalBlock(scope: !2177, file: !1949, line: 246, column: 2)
!2196 = !DILocalVariable(name: "rc", scope: !2193, file: !1949, line: 248, type: !103)
!2197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2183, size: 192, elements: !1316)
!2198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2199)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !2200)
!2200 = !{!2201, !2202}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2199, file: !384, line: 17, baseType: !337, size: 32)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2199, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!2203 = !DIGlobalVariableExpression(var: !2204, expr: !DIExpression())
!2204 = distinct !DIGlobalVariable(name: "states_str", scope: !2205, file: !2206, line: 276, type: !2327, isLocal: true, isDefinition: true)
!2205 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2206, file: !2206, line: 271, type: !2207, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !2318)
!2206 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2207 = !DISubroutineType(types: !2208)
!2208 = !{!337, !2209, !277, !132}
!2209 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !2210)
!2210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 32)
!2211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !2212)
!2212 = !{!2213, !2271, !2283, !2284, !2285, !2286, !2292, !2305}
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2211, file: !163, line: 247, baseType: !2214, size: 384)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !2215)
!2215 = !{!2216, !2240, !2247, !2248, !2249, !2258, !2259, !2260}
!2216 = !DIDerivedType(tag: DW_TAG_member, scope: !2214, file: !163, line: 60, baseType: !2217, size: 64)
!2217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2214, file: !163, line: 60, size: 64, elements: !2218)
!2218 = !{!2219, !2234}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2217, file: !163, line: 61, baseType: !2220, size: 64)
!2220 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2221)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2222)
!2222 = !{!2223, !2229}
!2223 = !DIDerivedType(tag: DW_TAG_member, scope: !2221, file: !146, line: 38, baseType: !2224, size: 32)
!2224 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2221, file: !146, line: 38, size: 32, elements: !2225)
!2225 = !{!2226, !2228}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2224, file: !146, line: 39, baseType: !2227, size: 32)
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 32)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2224, file: !146, line: 40, baseType: !2227, size: 32)
!2229 = !DIDerivedType(tag: DW_TAG_member, scope: !2221, file: !146, line: 42, baseType: !2230, size: 32, offset: 32)
!2230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2221, file: !146, line: 42, size: 32, elements: !2231)
!2231 = !{!2232, !2233}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2230, file: !146, line: 43, baseType: !2227, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2230, file: !146, line: 44, baseType: !2227, size: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2217, file: !163, line: 62, baseType: !2235, size: 64)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2236)
!2236 = !{!2237}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2235, file: !175, line: 50, baseType: !2238, size: 64)
!2238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2239, size: 64, elements: !180)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 32)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2214, file: !163, line: 68, baseType: !2241, size: 32, offset: 64)
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 32)
!2242 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2243)
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2244)
!2244 = !{!2245}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2243, file: !141, line: 232, baseType: !2246, size: 64)
!2246 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2221)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2214, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2214, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2249 = !DIDerivedType(tag: DW_TAG_member, scope: !2214, file: !163, line: 90, baseType: !2250, size: 16, offset: 112)
!2250 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2214, file: !163, line: 90, size: 16, elements: !2251)
!2251 = !{!2252, !2257}
!2252 = !DIDerivedType(tag: DW_TAG_member, scope: !2250, file: !163, line: 91, baseType: !2253, size: 16)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2250, file: !163, line: 91, size: 16, elements: !2254)
!2254 = !{!2255, !2256}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2253, file: !163, line: 96, baseType: !195, size: 8)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2253, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2250, file: !163, line: 100, baseType: !121, size: 16)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2214, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2214, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2214, file: !163, line: 131, baseType: !2261, size: 192, offset: 192)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2262)
!2262 = !{!2263, !2264, !2270}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2261, file: !141, line: 245, baseType: !2220, size: 64)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2261, file: !141, line: 246, baseType: !2265, size: 32, offset: 64)
!2265 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2266)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 32)
!2267 = !DISubroutineType(types: !2268)
!2268 = !{null, !2269}
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 32)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2261, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2211, file: !163, line: 250, baseType: !2272, size: 288, offset: 384)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2273)
!2273 = !{!2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2272, file: !214, line: 26, baseType: !108, size: 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2272, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2272, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2272, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2272, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2272, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2272, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2272, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2272, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2211, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2211, file: !163, line: 256, baseType: !2242, size: 64, offset: 704)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2211, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2211, file: !163, line: 300, baseType: !2287, size: 96, offset: 800)
!2287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !2288)
!2288 = !{!2289, !2290, !2291}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2287, file: !163, line: 153, baseType: !22, size: 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2287, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2287, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2211, file: !163, line: 325, baseType: !2293, size: 32, offset: 896)
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 32)
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2295)
!2295 = !{!2296, !2302, !2303}
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2294, file: !137, line: 5074, baseType: !2297, size: 96)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2298)
!2298 = !{!2299, !2300, !2301}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2297, file: !240, line: 57, baseType: !243, size: 32)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2297, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2297, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2294, file: !137, line: 5075, baseType: !2242, size: 64, offset: 96)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2294, file: !137, line: 5076, baseType: !2304, offset: 160)
!2304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2211, file: !163, line: 343, baseType: !2306, size: 64, offset: 928)
!2306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2307)
!2307 = !{!2308, !2309}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2306, file: !214, line: 63, baseType: !108, size: 32)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2306, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2310 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2311, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2312, globals: !2314, splitDebugInlining: false, nameTableKind: None)
!2311 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!2312 = !{!102, !337, !104, !185, !103, !2313, !24, !132, !277, !22, !108, !109}
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 32)
!2314 = !{!2203, !2315}
!2315 = !DIGlobalVariableExpression(var: !2316, expr: !DIExpression())
!2316 = distinct !DIGlobalVariable(name: "states_sz", scope: !2205, file: !2206, line: 279, type: !2317, isLocal: true, isDefinition: true)
!2317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1879, size: 256, elements: !1560)
!2318 = !{!2319, !2320, !2321, !2322, !2323, !2324, !2325}
!2319 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2205, file: !2206, line: 271, type: !2209)
!2320 = !DILocalVariable(name: "buf", arg: 2, scope: !2205, file: !2206, line: 271, type: !277)
!2321 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2205, file: !2206, line: 271, type: !132)
!2322 = !DILocalVariable(name: "off", scope: !2205, file: !2206, line: 273, type: !132)
!2323 = !DILocalVariable(name: "bit", scope: !2205, file: !2206, line: 274, type: !185)
!2324 = !DILocalVariable(name: "thread_state", scope: !2205, file: !2206, line: 275, type: !185)
!2325 = !DILocalVariable(name: "index", scope: !2326, file: !2206, line: 293, type: !185)
!2326 = distinct !DILexicalBlock(scope: !2205, file: !2206, line: 293, column: 2)
!2327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !337, size: 256, elements: !1560)
!2328 = !DIGlobalVariableExpression(var: !2329, expr: !DIExpression())
!2329 = distinct !DIGlobalVariable(name: "lock", scope: !2330, file: !2435, line: 47, type: !2428, isLocal: true, isDefinition: true)
!2330 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2331, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2332, globals: !2434, splitDebugInlining: false, nameTableKind: None)
!2331 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!2332 = !{!131, !102, !103, !2333, !2348}
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 32)
!2334 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2335)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2336)
!2336 = !{!2337, !2343}
!2337 = !DIDerivedType(tag: DW_TAG_member, scope: !2335, file: !146, line: 38, baseType: !2338, size: 32)
!2338 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2335, file: !146, line: 38, size: 32, elements: !2339)
!2339 = !{!2340, !2342}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2338, file: !146, line: 39, baseType: !2341, size: 32)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 32)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2338, file: !146, line: 40, baseType: !2341, size: 32)
!2343 = !DIDerivedType(tag: DW_TAG_member, scope: !2335, file: !146, line: 42, baseType: !2344, size: 32, offset: 32)
!2344 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2335, file: !146, line: 42, size: 32, elements: !2345)
!2345 = !{!2346, !2347}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2344, file: !146, line: 43, baseType: !2341, size: 32)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2344, file: !146, line: 44, baseType: !2341, size: 32)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 32)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !2350)
!2350 = !{!2351, !2395, !2407, !2408, !2409, !2410, !2416, !2429}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2349, file: !163, line: 247, baseType: !2352, size: 384)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !2353)
!2353 = !{!2354, !2364, !2371, !2372, !2373, !2382, !2383, !2384}
!2354 = !DIDerivedType(tag: DW_TAG_member, scope: !2352, file: !163, line: 60, baseType: !2355, size: 64)
!2355 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2352, file: !163, line: 60, size: 64, elements: !2356)
!2356 = !{!2357, !2358}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2355, file: !163, line: 61, baseType: !2334, size: 64)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2355, file: !163, line: 62, baseType: !2359, size: 64)
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2360)
!2360 = !{!2361}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2359, file: !175, line: 50, baseType: !2362, size: 64)
!2362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2363, size: 64, elements: !180)
!2363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2359, size: 32)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2352, file: !163, line: 68, baseType: !2365, size: 32, offset: 64)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 32)
!2366 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2367)
!2367 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2368)
!2368 = !{!2369}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2367, file: !141, line: 232, baseType: !2370, size: 64)
!2370 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2335)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2352, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2352, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2373 = !DIDerivedType(tag: DW_TAG_member, scope: !2352, file: !163, line: 90, baseType: !2374, size: 16, offset: 112)
!2374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2352, file: !163, line: 90, size: 16, elements: !2375)
!2375 = !{!2376, !2381}
!2376 = !DIDerivedType(tag: DW_TAG_member, scope: !2374, file: !163, line: 91, baseType: !2377, size: 16)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2374, file: !163, line: 91, size: 16, elements: !2378)
!2378 = !{!2379, !2380}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2377, file: !163, line: 96, baseType: !195, size: 8)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2377, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2374, file: !163, line: 100, baseType: !121, size: 16)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2352, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2352, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2352, file: !163, line: 131, baseType: !2385, size: 192, offset: 192)
!2385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2386)
!2386 = !{!2387, !2388, !2394}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2385, file: !141, line: 245, baseType: !2334, size: 64)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2385, file: !141, line: 246, baseType: !2389, size: 32, offset: 64)
!2389 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2390)
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 32)
!2391 = !DISubroutineType(types: !2392)
!2392 = !{null, !2393}
!2393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 32)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2385, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2349, file: !163, line: 250, baseType: !2396, size: 288, offset: 384)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2397)
!2397 = !{!2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2396, file: !214, line: 26, baseType: !108, size: 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2396, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2396, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2396, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2396, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2396, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2396, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2396, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2396, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2349, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2349, file: !163, line: 256, baseType: !2366, size: 64, offset: 704)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2349, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2349, file: !163, line: 300, baseType: !2411, size: 96, offset: 800)
!2411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !2412)
!2412 = !{!2413, !2414, !2415}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2411, file: !163, line: 153, baseType: !22, size: 32)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2411, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2411, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2349, file: !163, line: 325, baseType: !2417, size: 32, offset: 896)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 32)
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2419)
!2419 = !{!2420, !2426, !2427}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2418, file: !137, line: 5074, baseType: !2421, size: 96)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2422)
!2422 = !{!2423, !2424, !2425}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2421, file: !240, line: 57, baseType: !243, size: 32)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2421, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2421, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2418, file: !137, line: 5075, baseType: !2366, size: 64, offset: 96)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2418, file: !137, line: 5076, baseType: !2428, offset: 160)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2349, file: !163, line: 343, baseType: !2430, size: 64, offset: 928)
!2430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2431)
!2431 = !{!2432, !2433}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2430, file: !214, line: 63, baseType: !108, size: 32)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2430, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2434 = !{!2328}
!2435 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2436 = !DIGlobalVariableExpression(var: !2437, expr: !DIExpression())
!2437 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2438, file: !2546, line: 56, type: !2535, isLocal: false, isDefinition: true)
!2438 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2439, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2440, globals: !2543, splitDebugInlining: false, nameTableKind: None)
!2439 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!2440 = !{!2441, !277, !102, !2541, !379, !104, !331, !103, !108, !109, !2542}
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 32)
!2442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !2443)
!2443 = !{!2444, !2502, !2514, !2515, !2516, !2517, !2523, !2536}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2442, file: !163, line: 247, baseType: !2445, size: 384)
!2445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !2446)
!2446 = !{!2447, !2471, !2478, !2479, !2480, !2489, !2490, !2491}
!2447 = !DIDerivedType(tag: DW_TAG_member, scope: !2445, file: !163, line: 60, baseType: !2448, size: 64)
!2448 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2445, file: !163, line: 60, size: 64, elements: !2449)
!2449 = !{!2450, !2465}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2448, file: !163, line: 61, baseType: !2451, size: 64)
!2451 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2452)
!2452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2453)
!2453 = !{!2454, !2460}
!2454 = !DIDerivedType(tag: DW_TAG_member, scope: !2452, file: !146, line: 38, baseType: !2455, size: 32)
!2455 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2452, file: !146, line: 38, size: 32, elements: !2456)
!2456 = !{!2457, !2459}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2455, file: !146, line: 39, baseType: !2458, size: 32)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 32)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2455, file: !146, line: 40, baseType: !2458, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, scope: !2452, file: !146, line: 42, baseType: !2461, size: 32, offset: 32)
!2461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2452, file: !146, line: 42, size: 32, elements: !2462)
!2462 = !{!2463, !2464}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2461, file: !146, line: 43, baseType: !2458, size: 32)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2461, file: !146, line: 44, baseType: !2458, size: 32)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2448, file: !163, line: 62, baseType: !2466, size: 64)
!2466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2467)
!2467 = !{!2468}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2466, file: !175, line: 50, baseType: !2469, size: 64)
!2469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2470, size: 64, elements: !180)
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2466, size: 32)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2445, file: !163, line: 68, baseType: !2472, size: 32, offset: 64)
!2472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2473, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2474)
!2474 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2475)
!2475 = !{!2476}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2474, file: !141, line: 232, baseType: !2477, size: 64)
!2477 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2452)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2445, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2445, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2480 = !DIDerivedType(tag: DW_TAG_member, scope: !2445, file: !163, line: 90, baseType: !2481, size: 16, offset: 112)
!2481 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2445, file: !163, line: 90, size: 16, elements: !2482)
!2482 = !{!2483, !2488}
!2483 = !DIDerivedType(tag: DW_TAG_member, scope: !2481, file: !163, line: 91, baseType: !2484, size: 16)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2481, file: !163, line: 91, size: 16, elements: !2485)
!2485 = !{!2486, !2487}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2484, file: !163, line: 96, baseType: !195, size: 8)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2484, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2481, file: !163, line: 100, baseType: !121, size: 16)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2445, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2445, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2445, file: !163, line: 131, baseType: !2492, size: 192, offset: 192)
!2492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2493)
!2493 = !{!2494, !2495, !2501}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2492, file: !141, line: 245, baseType: !2451, size: 64)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2492, file: !141, line: 246, baseType: !2496, size: 32, offset: 64)
!2496 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2497)
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2498, size: 32)
!2498 = !DISubroutineType(types: !2499)
!2499 = !{null, !2500}
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2492, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2492, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2442, file: !163, line: 250, baseType: !2503, size: 288, offset: 384)
!2503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2504)
!2504 = !{!2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2503, file: !214, line: 26, baseType: !108, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2503, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2503, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2503, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2503, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2503, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2503, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2503, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2503, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2442, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2442, file: !163, line: 256, baseType: !2473, size: 64, offset: 704)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2442, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2442, file: !163, line: 300, baseType: !2518, size: 96, offset: 800)
!2518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !2519)
!2519 = !{!2520, !2521, !2522}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2518, file: !163, line: 153, baseType: !22, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2518, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2518, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2442, file: !163, line: 325, baseType: !2524, size: 32, offset: 896)
!2524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2525, size: 32)
!2525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2526)
!2526 = !{!2527, !2533, !2534}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2525, file: !137, line: 5074, baseType: !2528, size: 96)
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2529)
!2529 = !{!2530, !2531, !2532}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2528, file: !240, line: 57, baseType: !243, size: 32)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2528, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2528, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2525, file: !137, line: 5075, baseType: !2473, size: 64, offset: 96)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2525, file: !137, line: 5076, baseType: !2535, offset: 160)
!2535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2442, file: !163, line: 343, baseType: !2537, size: 64, offset: 928)
!2537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2538)
!2538 = !{!2539, !2540}
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2537, file: !214, line: 63, baseType: !108, size: 32)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2537, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 32)
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 32)
!2543 = !{!2436, !2544, !2547, !2549}
!2544 = !DIGlobalVariableExpression(var: !2545, expr: !DIExpression())
!2545 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2438, file: !2546, line: 404, type: !103, isLocal: true, isDefinition: true)
!2546 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2547 = !DIGlobalVariableExpression(var: !2548, expr: !DIExpression())
!2548 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2438, file: !2546, line: 405, type: !103, isLocal: true, isDefinition: true)
!2549 = !DIGlobalVariableExpression(var: !2550, expr: !DIExpression())
!2550 = distinct !DIGlobalVariable(name: "pending_current", scope: !2438, file: !2546, line: 425, type: !2441, isLocal: true, isDefinition: true)
!2551 = !DIGlobalVariableExpression(var: !2552, expr: !DIExpression())
!2552 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2553, file: !2583, line: 15, type: !109, isLocal: true, isDefinition: true)
!2553 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2554, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2555, globals: !2580, splitDebugInlining: false, nameTableKind: None)
!2554 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!2555 = !{!104, !102, !331, !108, !109, !103, !2556, !277, !106}
!2556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2557, size: 32)
!2557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2558)
!2558 = !{!2559, !2574, !2579}
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2557, file: !141, line: 245, baseType: !2560, size: 64)
!2560 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2561)
!2561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2562)
!2562 = !{!2563, !2569}
!2563 = !DIDerivedType(tag: DW_TAG_member, scope: !2561, file: !146, line: 38, baseType: !2564, size: 32)
!2564 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2561, file: !146, line: 38, size: 32, elements: !2565)
!2565 = !{!2566, !2568}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2564, file: !146, line: 39, baseType: !2567, size: 32)
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 32)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2564, file: !146, line: 40, baseType: !2567, size: 32)
!2569 = !DIDerivedType(tag: DW_TAG_member, scope: !2561, file: !146, line: 42, baseType: !2570, size: 32, offset: 32)
!2570 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2561, file: !146, line: 42, size: 32, elements: !2571)
!2571 = !{!2572, !2573}
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2570, file: !146, line: 43, baseType: !2567, size: 32)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2570, file: !146, line: 44, baseType: !2567, size: 32)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2557, file: !141, line: 246, baseType: !2575, size: 32, offset: 64)
!2575 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2576)
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2577, size: 32)
!2577 = !DISubroutineType(types: !2578)
!2578 = !{null, !2556}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2557, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2580 = !{!2551, !2581, !2585, !2587}
!2581 = !DIGlobalVariableExpression(var: !2582, expr: !DIExpression())
!2582 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2553, file: !2583, line: 19, type: !2584, isLocal: true, isDefinition: true)
!2583 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2585 = !DIGlobalVariableExpression(var: !2586, expr: !DIExpression())
!2586 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2553, file: !2583, line: 25, type: !103, isLocal: true, isDefinition: true)
!2587 = !DIGlobalVariableExpression(var: !2588, expr: !DIExpression())
!2588 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2553, file: !2583, line: 17, type: !2589, isLocal: true, isDefinition: true)
!2589 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2561)
!2590 = !DIGlobalVariableExpression(var: !2591, expr: !DIExpression())
!2591 = distinct !DIGlobalVariable(name: "kheap__system_heap", scope: !2592, file: !2597, line: 61, type: !2627, isLocal: false, isDefinition: true, align: 64)
!2592 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2593, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, globals: !2594, splitDebugInlining: false, nameTableKind: None)
!2593 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!2594 = !{!2595, !2590}
!2595 = !DIGlobalVariableExpression(var: !2596, expr: !DIExpression())
!2596 = distinct !DIGlobalVariable(name: "_system_heap", scope: !2592, file: !2597, line: 61, type: !2598, isLocal: false, isDefinition: true, align: 32)
!2597 = !DIFile(filename: "zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2599)
!2599 = !{!2600, !2606, !2625}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2598, file: !137, line: 5074, baseType: !2601, size: 96)
!2601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2602)
!2602 = !{!2603, !2604, !2605}
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2601, file: !240, line: 57, baseType: !243, size: 32)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2601, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2601, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2598, file: !137, line: 5075, baseType: !2607, size: 64, offset: 96)
!2607 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2608)
!2608 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2609)
!2609 = !{!2610}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2608, file: !141, line: 232, baseType: !2611, size: 64)
!2611 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2612)
!2612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2613)
!2613 = !{!2614, !2620}
!2614 = !DIDerivedType(tag: DW_TAG_member, scope: !2612, file: !146, line: 38, baseType: !2615, size: 32)
!2615 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2612, file: !146, line: 38, size: 32, elements: !2616)
!2616 = !{!2617, !2619}
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2615, file: !146, line: 39, baseType: !2618, size: 32)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2612, size: 32)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2615, file: !146, line: 40, baseType: !2618, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, scope: !2612, file: !146, line: 42, baseType: !2621, size: 32, offset: 32)
!2621 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2612, file: !146, line: 42, size: 32, elements: !2622)
!2622 = !{!2623, !2624}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2621, file: !146, line: 43, baseType: !2618, size: 32)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2621, file: !146, line: 44, baseType: !2618, size: 32)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2598, file: !137, line: 5076, baseType: !2626, offset: 160)
!2626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 8192, elements: !2628)
!2628 = !{!2629}
!2629 = !DISubrange(count: 1024)
!2630 = !DIGlobalVariableExpression(var: !2631, expr: !DIExpression())
!2631 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2632, file: !2651, line: 55, type: !2652, isLocal: true, isDefinition: true, align: 32)
!2632 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2633, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2634, globals: !2650, splitDebugInlining: false, nameTableKind: None)
!2633 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!2634 = !{!102, !104, !103, !2635}
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2636, size: 32)
!2636 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2637)
!2637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2638)
!2638 = !{!2639, !2645}
!2639 = !DIDerivedType(tag: DW_TAG_member, scope: !2637, file: !146, line: 38, baseType: !2640, size: 32)
!2640 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2637, file: !146, line: 38, size: 32, elements: !2641)
!2641 = !{!2642, !2644}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2640, file: !146, line: 39, baseType: !2643, size: 32)
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2637, size: 32)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2640, file: !146, line: 40, baseType: !2643, size: 32)
!2645 = !DIDerivedType(tag: DW_TAG_member, scope: !2637, file: !146, line: 42, baseType: !2646, size: 32, offset: 32)
!2646 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2637, file: !146, line: 42, size: 32, elements: !2647)
!2647 = !{!2648, !2649}
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2646, file: !146, line: 43, baseType: !2643, size: 32)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2646, file: !146, line: 44, baseType: !2643, size: 32)
!2650 = !{!2630}
!2651 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2653)
!2653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !2654)
!2654 = !{!2655, !2662}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2653, file: !420, line: 60, baseType: !2656, size: 32)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 32)
!2657 = !DISubroutineType(types: !2658)
!2658 = !{!103, !2659}
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 32)
!2660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2661)
!2661 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !420, line: 48, flags: DIFlagFwdDecl)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2653, file: !420, line: 65, baseType: !2659, size: 32, offset: 32)
!2663 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2664, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!2664 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!2665 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2666, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!2666 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!2667 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2668, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2669, retainedTypes: !2677, splitDebugInlining: false, nameTableKind: None)
!2668 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!2669 = !{!30, !2670}
!2670 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2671, line: 54, baseType: !32, size: 32, elements: !2672)
!2671 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2672 = !{!2673, !2674, !2675, !2676}
!2673 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2674 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2675 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2676 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2677 = !{!102, !132, !379, !24, !2678, !22, !2684, !103, !969, !2699}
!2678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2679, size: 32)
!2679 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2671, line: 58, baseType: !2680)
!2680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2671, line: 58, size: 64, elements: !2681)
!2681 = !{!2682}
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2680, file: !2671, line: 58, baseType: !2683, size: 64)
!2683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 64, elements: !1560)
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 32)
!2685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2671, line: 68, size: 128, elements: !2686)
!2686 = !{!2687, !2690, !2691, !2692}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2685, file: !2671, line: 69, baseType: !2688, size: 64)
!2688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2689, size: 64, elements: !180)
!2689 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2671, line: 61, baseType: !108)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2685, file: !2671, line: 70, baseType: !2689, size: 32, offset: 64)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2685, file: !2671, line: 71, baseType: !108, size: 32, offset: 96)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2685, file: !2671, line: 77, baseType: !2693, offset: 128)
!2693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2694, elements: !2697)
!2694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2671, line: 64, size: 32, elements: !2695)
!2695 = !{!2696}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2694, file: !2671, line: 65, baseType: !2689, size: 32)
!2697 = !{!2698}
!2698 = !DISubrange(count: 0)
!2699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!2700 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2701, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2702, retainedTypes: !2722, splitDebugInlining: false, nameTableKind: None)
!2701 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!2702 = !{!2703, !2711}
!2703 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2704, line: 69, baseType: !32, size: 32, elements: !2705)
!2704 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2705 = !{!2706, !2707, !2708, !2709, !2710}
!2706 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2707 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2708 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2709 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2710 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2704, line: 56, baseType: !32, size: 32, elements: !2712)
!2712 = !{!2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721}
!2713 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2714 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2715 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2716 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2717 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2718 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2719 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2720 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2721 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2722 = !{!103, !2703, !2711, !2723, !196, !446, !2725, !2726, !186, !122, !337, !132, !102, !22, !32, !374, !2728, !2729, !376, !375, !107, !377, !2724, !2730, !2731, !2732, !2733}
!2723 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2704, line: 31, baseType: !2724)
!2724 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !107)
!2725 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !133, line: 329, baseType: !32)
!2726 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2704, line: 32, baseType: !2727)
!2727 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !110)
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!2729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 32)
!2730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 32)
!2731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 32)
!2732 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !133, line: 145, baseType: !103)
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2732, size: 32)
!2734 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2735, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2735 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!2736 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2737, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2738, splitDebugInlining: false, nameTableKind: None)
!2737 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!2738 = !{!337, !186, !103, !32}
!2739 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2740, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2741, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!2740 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!2741 = !{!2742, !30}
!2742 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2743, line: 27, baseType: !32, size: 32, elements: !2744)
!2743 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2744 = !{!2745, !2746, !2747, !2748, !2749}
!2745 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2746 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2747 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2748 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2749 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2750 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2751, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2752, retainedTypes: !2753, splitDebugInlining: false, nameTableKind: None)
!2751 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!2752 = !{!705, !2742, !30}
!2753 = !{!870, !2754, !102, !103, !331, !108, !185, !2771}
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2755, size: 32)
!2755 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !624, line: 426, baseType: !2756)
!2756 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 411, size: 28704, elements: !2757)
!2757 = !{!2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2756, file: !624, line: 413, baseType: !1700, size: 256)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2756, file: !624, line: 414, baseType: !1702, size: 768, offset: 256)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2756, file: !624, line: 415, baseType: !1700, size: 256, offset: 1024)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2756, file: !624, line: 416, baseType: !1702, size: 768, offset: 1280)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2756, file: !624, line: 417, baseType: !1700, size: 256, offset: 2048)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2756, file: !624, line: 418, baseType: !1702, size: 768, offset: 2304)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2756, file: !624, line: 419, baseType: !1700, size: 256, offset: 3072)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2756, file: !624, line: 420, baseType: !1702, size: 768, offset: 3328)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2756, file: !624, line: 421, baseType: !1700, size: 256, offset: 4096)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2756, file: !624, line: 422, baseType: !1713, size: 1792, offset: 4352)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2756, file: !624, line: 423, baseType: !1717, size: 1920, offset: 6144)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2756, file: !624, line: 424, baseType: !1722, size: 20608, offset: 8064)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2756, file: !624, line: 425, baseType: !409, size: 32, offset: 28672)
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2773)
!2773 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2774)
!2774 = !{!2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2773, file: !624, line: 447, baseType: !628, size: 32)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2773, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2773, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2773, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2773, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2773, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2773, file: !624, line: 453, baseType: !1737, size: 96, offset: 192)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2773, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2773, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2773, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2773, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2773, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2773, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2773, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2773, file: !624, line: 461, baseType: !1748, size: 64, offset: 512)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2773, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2773, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2773, file: !624, line: 464, baseType: !1752, size: 128, offset: 640)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2773, file: !624, line: 465, baseType: !1754, size: 160, offset: 768)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2773, file: !624, line: 466, baseType: !1756, size: 160, offset: 928)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2773, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2796 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2797, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!2797 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!2798 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2799, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2800, splitDebugInlining: false, nameTableKind: None)
!2799 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!2800 = !{!102, !103, !22, !2801}
!2801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2802, size: 32)
!2802 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2803)
!2803 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2804)
!2804 = !{!2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825}
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2803, file: !624, line: 447, baseType: !628, size: 32)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2803, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2803, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2803, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2803, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2803, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2803, file: !624, line: 453, baseType: !1737, size: 96, offset: 192)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2803, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2803, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2803, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2803, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2803, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2803, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2803, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2803, file: !624, line: 461, baseType: !1748, size: 64, offset: 512)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2803, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2803, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2803, file: !624, line: 464, baseType: !1752, size: 128, offset: 640)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2803, file: !624, line: 465, baseType: !1754, size: 160, offset: 768)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2803, file: !624, line: 466, baseType: !1756, size: 160, offset: 928)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2803, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2826 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2827, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2828, splitDebugInlining: false, nameTableKind: None)
!2827 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!2828 = !{!2829, !102, !103}
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 32)
!2830 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2831)
!2831 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2832)
!2832 = !{!2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853}
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2831, file: !624, line: 447, baseType: !628, size: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2831, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2831, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2831, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2831, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2831, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2831, file: !624, line: 453, baseType: !1737, size: 96, offset: 192)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2831, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2831, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2831, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2831, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2831, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2831, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2831, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2831, file: !624, line: 461, baseType: !1748, size: 64, offset: 512)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2831, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2831, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2831, file: !624, line: 464, baseType: !1752, size: 128, offset: 640)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2831, file: !624, line: 465, baseType: !1754, size: 160, offset: 768)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2831, file: !624, line: 466, baseType: !1756, size: 160, offset: 928)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2831, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2854 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2855, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2856, splitDebugInlining: false, nameTableKind: None)
!2855 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!2856 = !{!2857, !108, !102, !103}
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2858, size: 32)
!2858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2859, line: 98, size: 256, elements: !2860)
!2859 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2860 = !{!2861, !2866, !2871, !2876, !2881, !2886, !2891, !2896}
!2861 = !DIDerivedType(tag: DW_TAG_member, scope: !2858, file: !2859, line: 99, baseType: !2862, size: 32)
!2862 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2858, file: !2859, line: 99, size: 32, elements: !2863)
!2863 = !{!2864, !2865}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2862, file: !2859, line: 99, baseType: !108, size: 32)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2862, file: !2859, line: 99, baseType: !108, size: 32)
!2866 = !DIDerivedType(tag: DW_TAG_member, scope: !2858, file: !2859, line: 100, baseType: !2867, size: 32, offset: 32)
!2867 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2858, file: !2859, line: 100, size: 32, elements: !2868)
!2868 = !{!2869, !2870}
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2867, file: !2859, line: 100, baseType: !108, size: 32)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2867, file: !2859, line: 100, baseType: !108, size: 32)
!2871 = !DIDerivedType(tag: DW_TAG_member, scope: !2858, file: !2859, line: 101, baseType: !2872, size: 32, offset: 64)
!2872 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2858, file: !2859, line: 101, size: 32, elements: !2873)
!2873 = !{!2874, !2875}
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2872, file: !2859, line: 101, baseType: !108, size: 32)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2872, file: !2859, line: 101, baseType: !108, size: 32)
!2876 = !DIDerivedType(tag: DW_TAG_member, scope: !2858, file: !2859, line: 102, baseType: !2877, size: 32, offset: 96)
!2877 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2858, file: !2859, line: 102, size: 32, elements: !2878)
!2878 = !{!2879, !2880}
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2877, file: !2859, line: 102, baseType: !108, size: 32)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2877, file: !2859, line: 102, baseType: !108, size: 32)
!2881 = !DIDerivedType(tag: DW_TAG_member, scope: !2858, file: !2859, line: 103, baseType: !2882, size: 32, offset: 128)
!2882 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2858, file: !2859, line: 103, size: 32, elements: !2883)
!2883 = !{!2884, !2885}
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2882, file: !2859, line: 103, baseType: !108, size: 32)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2882, file: !2859, line: 103, baseType: !108, size: 32)
!2886 = !DIDerivedType(tag: DW_TAG_member, scope: !2858, file: !2859, line: 104, baseType: !2887, size: 32, offset: 160)
!2887 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2858, file: !2859, line: 104, size: 32, elements: !2888)
!2888 = !{!2889, !2890}
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2887, file: !2859, line: 104, baseType: !108, size: 32)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2887, file: !2859, line: 104, baseType: !108, size: 32)
!2891 = !DIDerivedType(tag: DW_TAG_member, scope: !2858, file: !2859, line: 105, baseType: !2892, size: 32, offset: 192)
!2892 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2858, file: !2859, line: 105, size: 32, elements: !2893)
!2893 = !{!2894, !2895}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2892, file: !2859, line: 105, baseType: !108, size: 32)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2892, file: !2859, line: 105, baseType: !108, size: 32)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2858, file: !2859, line: 106, baseType: !108, size: 32, offset: 224)
!2897 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2898, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2741, retainedTypes: !2899, splitDebugInlining: false, nameTableKind: None)
!2898 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!2899 = !{!2900, !102, !103, !2925, !2699, !108}
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 32)
!2901 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2902)
!2902 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2903)
!2903 = !{!2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924}
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2902, file: !624, line: 447, baseType: !628, size: 32)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2902, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2902, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2902, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2902, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2902, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2902, file: !624, line: 453, baseType: !1737, size: 96, offset: 192)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2902, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2902, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2902, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2902, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2902, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2902, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2902, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2902, file: !624, line: 461, baseType: !1748, size: 64, offset: 512)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2902, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2902, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2902, file: !624, line: 464, baseType: !1752, size: 128, offset: 640)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2902, file: !624, line: 465, baseType: !1754, size: 160, offset: 768)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2902, file: !624, line: 466, baseType: !1756, size: 160, offset: 928)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2902, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2926, size: 32)
!2926 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2859, line: 141, baseType: !2927)
!2927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2859, line: 97, size: 256, elements: !2928)
!2928 = !{!2929}
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2927, file: !2859, line: 107, baseType: !2930, size: 256)
!2930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2859, line: 98, size: 256, elements: !2931)
!2931 = !{!2932, !2937, !2942, !2947, !2952, !2957, !2962, !2967}
!2932 = !DIDerivedType(tag: DW_TAG_member, scope: !2930, file: !2859, line: 99, baseType: !2933, size: 32)
!2933 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2930, file: !2859, line: 99, size: 32, elements: !2934)
!2934 = !{!2935, !2936}
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2933, file: !2859, line: 99, baseType: !108, size: 32)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2933, file: !2859, line: 99, baseType: !108, size: 32)
!2937 = !DIDerivedType(tag: DW_TAG_member, scope: !2930, file: !2859, line: 100, baseType: !2938, size: 32, offset: 32)
!2938 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2930, file: !2859, line: 100, size: 32, elements: !2939)
!2939 = !{!2940, !2941}
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2938, file: !2859, line: 100, baseType: !108, size: 32)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2938, file: !2859, line: 100, baseType: !108, size: 32)
!2942 = !DIDerivedType(tag: DW_TAG_member, scope: !2930, file: !2859, line: 101, baseType: !2943, size: 32, offset: 64)
!2943 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2930, file: !2859, line: 101, size: 32, elements: !2944)
!2944 = !{!2945, !2946}
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2943, file: !2859, line: 101, baseType: !108, size: 32)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2943, file: !2859, line: 101, baseType: !108, size: 32)
!2947 = !DIDerivedType(tag: DW_TAG_member, scope: !2930, file: !2859, line: 102, baseType: !2948, size: 32, offset: 96)
!2948 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2930, file: !2859, line: 102, size: 32, elements: !2949)
!2949 = !{!2950, !2951}
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2948, file: !2859, line: 102, baseType: !108, size: 32)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2948, file: !2859, line: 102, baseType: !108, size: 32)
!2952 = !DIDerivedType(tag: DW_TAG_member, scope: !2930, file: !2859, line: 103, baseType: !2953, size: 32, offset: 128)
!2953 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2930, file: !2859, line: 103, size: 32, elements: !2954)
!2954 = !{!2955, !2956}
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2953, file: !2859, line: 103, baseType: !108, size: 32)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2953, file: !2859, line: 103, baseType: !108, size: 32)
!2957 = !DIDerivedType(tag: DW_TAG_member, scope: !2930, file: !2859, line: 104, baseType: !2958, size: 32, offset: 160)
!2958 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2930, file: !2859, line: 104, size: 32, elements: !2959)
!2959 = !{!2960, !2961}
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2958, file: !2859, line: 104, baseType: !108, size: 32)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2958, file: !2859, line: 104, baseType: !108, size: 32)
!2962 = !DIDerivedType(tag: DW_TAG_member, scope: !2930, file: !2859, line: 105, baseType: !2963, size: 32, offset: 192)
!2963 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2930, file: !2859, line: 105, size: 32, elements: !2964)
!2964 = !{!2965, !2966}
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2963, file: !2859, line: 105, baseType: !108, size: 32)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2963, file: !2859, line: 105, baseType: !108, size: 32)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2930, file: !2859, line: 106, baseType: !108, size: 32, offset: 224)
!2968 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2969, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1685, retainedTypes: !2970, splitDebugInlining: false, nameTableKind: None)
!2969 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!2970 = !{!870, !331, !185, !108, !2971, !2988}
!2971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2972, size: 32)
!2972 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !624, line: 426, baseType: !2973)
!2973 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 411, size: 28704, elements: !2974)
!2974 = !{!2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987}
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2973, file: !624, line: 413, baseType: !1700, size: 256)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2973, file: !624, line: 414, baseType: !1702, size: 768, offset: 256)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2973, file: !624, line: 415, baseType: !1700, size: 256, offset: 1024)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2973, file: !624, line: 416, baseType: !1702, size: 768, offset: 1280)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2973, file: !624, line: 417, baseType: !1700, size: 256, offset: 2048)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2973, file: !624, line: 418, baseType: !1702, size: 768, offset: 2304)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2973, file: !624, line: 419, baseType: !1700, size: 256, offset: 3072)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2973, file: !624, line: 420, baseType: !1702, size: 768, offset: 3328)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2973, file: !624, line: 421, baseType: !1700, size: 256, offset: 4096)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2973, file: !624, line: 422, baseType: !1713, size: 1792, offset: 4352)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2973, file: !624, line: 423, baseType: !1717, size: 1920, offset: 6144)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2973, file: !624, line: 424, baseType: !1722, size: 20608, offset: 8064)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2973, file: !624, line: 425, baseType: !409, size: 32, offset: 28672)
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 32)
!2989 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2990)
!2990 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2991)
!2991 = !{!2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012}
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2990, file: !624, line: 447, baseType: !628, size: 32)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2990, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2990, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2990, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2990, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2990, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2990, file: !624, line: 453, baseType: !1737, size: 96, offset: 192)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2990, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2990, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2990, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2990, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2990, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2990, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2990, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2990, file: !624, line: 461, baseType: !1748, size: 64, offset: 512)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2990, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2990, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2990, file: !624, line: 464, baseType: !1752, size: 128, offset: 640)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2990, file: !624, line: 465, baseType: !1754, size: 160, offset: 768)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2990, file: !624, line: 466, baseType: !1756, size: 160, offset: 928)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2990, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!3013 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3014, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3015, splitDebugInlining: false, nameTableKind: None)
!3014 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!3015 = !{!3016, !102, !103}
!3016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3017, size: 32)
!3017 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !3018)
!3018 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !3019)
!3019 = !{!3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040}
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3018, file: !624, line: 447, baseType: !628, size: 32)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3018, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3018, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3018, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3018, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3018, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3018, file: !624, line: 453, baseType: !1737, size: 96, offset: 192)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3018, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3018, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3018, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3018, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3018, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3018, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3018, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3018, file: !624, line: 461, baseType: !1748, size: 64, offset: 512)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3018, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3018, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3018, file: !624, line: 464, baseType: !1752, size: 128, offset: 640)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3018, file: !624, line: 465, baseType: !1754, size: 160, offset: 768)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3018, file: !624, line: 466, baseType: !1756, size: 160, offset: 928)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3018, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!3041 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3042, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3043, splitDebugInlining: false, nameTableKind: None)
!3042 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!3043 = !{!278, !277, !132, !1074, !3044, !186, !102}
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 32)
!3045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!3046 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3047, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3048, splitDebugInlining: false, nameTableKind: None)
!3047 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!3048 = !{!3049}
!3049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3050, size: 32)
!3050 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 369, baseType: !3051)
!3051 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 335, size: 1152, elements: !3052)
!3052 = !{!3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3051, file: !405, line: 337, baseType: !409, size: 32)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3051, file: !405, line: 338, baseType: !409, size: 32, offset: 32)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3051, file: !405, line: 339, baseType: !409, size: 32, offset: 64)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3051, file: !405, line: 340, baseType: !409, size: 32, offset: 96)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3051, file: !405, line: 341, baseType: !409, size: 32, offset: 128)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3051, file: !405, line: 342, baseType: !409, size: 32, offset: 160)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3051, file: !405, line: 343, baseType: !409, size: 32, offset: 192)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3051, file: !405, line: 344, baseType: !108, size: 32, offset: 224)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3051, file: !405, line: 345, baseType: !409, size: 32, offset: 256)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3051, file: !405, line: 346, baseType: !409, size: 32, offset: 288)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3051, file: !405, line: 347, baseType: !940, size: 64, offset: 320)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3051, file: !405, line: 348, baseType: !409, size: 32, offset: 384)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3051, file: !405, line: 349, baseType: !409, size: 32, offset: 416)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3051, file: !405, line: 350, baseType: !409, size: 32, offset: 448)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3051, file: !405, line: 351, baseType: !108, size: 32, offset: 480)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3051, file: !405, line: 352, baseType: !409, size: 32, offset: 512)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3051, file: !405, line: 353, baseType: !409, size: 32, offset: 544)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3051, file: !405, line: 354, baseType: !940, size: 64, offset: 576)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3051, file: !405, line: 355, baseType: !409, size: 32, offset: 640)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3051, file: !405, line: 356, baseType: !409, size: 32, offset: 672)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3051, file: !405, line: 357, baseType: !409, size: 32, offset: 704)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3051, file: !405, line: 358, baseType: !108, size: 32, offset: 736)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3051, file: !405, line: 359, baseType: !409, size: 32, offset: 768)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3051, file: !405, line: 360, baseType: !409, size: 32, offset: 800)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3051, file: !405, line: 361, baseType: !940, size: 64, offset: 832)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3051, file: !405, line: 362, baseType: !409, size: 32, offset: 896)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3051, file: !405, line: 363, baseType: !409, size: 32, offset: 928)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3051, file: !405, line: 364, baseType: !940, size: 64, offset: 960)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3051, file: !405, line: 365, baseType: !409, size: 32, offset: 1024)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3051, file: !405, line: 366, baseType: !409, size: 32, offset: 1056)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3051, file: !405, line: 367, baseType: !961, size: 32, offset: 1088)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3051, file: !405, line: 368, baseType: !409, size: 32, offset: 1120)
!3085 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3086, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3086 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!3087 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3088, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3089, retainedTypes: !3105, splitDebugInlining: false, nameTableKind: None)
!3088 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!3089 = !{!3090, !3097, !3101}
!3090 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3091, line: 38, baseType: !32, size: 32, elements: !3092)
!3091 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3092 = !{!3093, !3094, !3095, !3096}
!3093 = !DIEnumerator(name: "HAL_OK", value: 0)
!3094 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3095 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3096 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3097 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !913, line: 184, baseType: !32, size: 32, elements: !3098)
!3098 = !{!3099, !3100}
!3099 = !DIEnumerator(name: "RESET", value: 0)
!3100 = !DIEnumerator(name: "SET", value: 1)
!3101 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !913, line: 190, baseType: !32, size: 32, elements: !3102)
!3102 = !{!3103, !3104}
!3103 = !DIEnumerator(name: "DISABLE", value: 0)
!3104 = !DIEnumerator(name: "ENABLE", value: 1)
!3105 = !{!102, !3106, !185, !108, !1554, !3142, !3148, !3159, !121, !3160, !109}
!3106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3107, size: 32)
!3107 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 369, baseType: !3108)
!3108 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 335, size: 1152, elements: !3109)
!3109 = !{!3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141}
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3108, file: !405, line: 337, baseType: !409, size: 32)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3108, file: !405, line: 338, baseType: !409, size: 32, offset: 32)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3108, file: !405, line: 339, baseType: !409, size: 32, offset: 64)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3108, file: !405, line: 340, baseType: !409, size: 32, offset: 96)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3108, file: !405, line: 341, baseType: !409, size: 32, offset: 128)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3108, file: !405, line: 342, baseType: !409, size: 32, offset: 160)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3108, file: !405, line: 343, baseType: !409, size: 32, offset: 192)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3108, file: !405, line: 344, baseType: !108, size: 32, offset: 224)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3108, file: !405, line: 345, baseType: !409, size: 32, offset: 256)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3108, file: !405, line: 346, baseType: !409, size: 32, offset: 288)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3108, file: !405, line: 347, baseType: !940, size: 64, offset: 320)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3108, file: !405, line: 348, baseType: !409, size: 32, offset: 384)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3108, file: !405, line: 349, baseType: !409, size: 32, offset: 416)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3108, file: !405, line: 350, baseType: !409, size: 32, offset: 448)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3108, file: !405, line: 351, baseType: !108, size: 32, offset: 480)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3108, file: !405, line: 352, baseType: !409, size: 32, offset: 512)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3108, file: !405, line: 353, baseType: !409, size: 32, offset: 544)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3108, file: !405, line: 354, baseType: !940, size: 64, offset: 576)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3108, file: !405, line: 355, baseType: !409, size: 32, offset: 640)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3108, file: !405, line: 356, baseType: !409, size: 32, offset: 672)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3108, file: !405, line: 357, baseType: !409, size: 32, offset: 704)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3108, file: !405, line: 358, baseType: !108, size: 32, offset: 736)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3108, file: !405, line: 359, baseType: !409, size: 32, offset: 768)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3108, file: !405, line: 360, baseType: !409, size: 32, offset: 800)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3108, file: !405, line: 361, baseType: !940, size: 64, offset: 832)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3108, file: !405, line: 362, baseType: !409, size: 32, offset: 896)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3108, file: !405, line: 363, baseType: !409, size: 32, offset: 928)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3108, file: !405, line: 364, baseType: !940, size: 64, offset: 960)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3108, file: !405, line: 365, baseType: !409, size: 32, offset: 1024)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3108, file: !405, line: 366, baseType: !409, size: 32, offset: 1056)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3108, file: !405, line: 367, baseType: !961, size: 32, offset: 1088)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3108, file: !405, line: 368, baseType: !409, size: 32, offset: 1120)
!3142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3143, size: 32)
!3143 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !405, line: 329, baseType: !3144)
!3144 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 325, size: 64, elements: !3145)
!3145 = !{!3146, !3147}
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3144, file: !405, line: 327, baseType: !409, size: 32)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3144, file: !405, line: 328, baseType: !409, size: 32, offset: 32)
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 32)
!3149 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !405, line: 258, baseType: !3150)
!3150 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 249, size: 224, elements: !3151)
!3151 = !{!3152, !3153, !3154, !3155, !3156, !3157, !3158}
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3150, file: !405, line: 251, baseType: !409, size: 32)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3150, file: !405, line: 252, baseType: !409, size: 32, offset: 32)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3150, file: !405, line: 253, baseType: !409, size: 32, offset: 64)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3150, file: !405, line: 254, baseType: !409, size: 32, offset: 96)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3150, file: !405, line: 255, baseType: !409, size: 32, offset: 128)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3150, file: !405, line: 256, baseType: !409, size: 32, offset: 160)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3150, file: !405, line: 257, baseType: !409, size: 32, offset: 192)
!3159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 32)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3161, size: 32)
!3161 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !405, line: 275, baseType: !3162)
!3162 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 264, size: 320, elements: !3163)
!3163 = !{!3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172}
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3162, file: !405, line: 266, baseType: !409, size: 32)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3162, file: !405, line: 267, baseType: !409, size: 32, offset: 32)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3162, file: !405, line: 268, baseType: !409, size: 32, offset: 64)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3162, file: !405, line: 269, baseType: !409, size: 32, offset: 96)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3162, file: !405, line: 270, baseType: !409, size: 32, offset: 128)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3162, file: !405, line: 271, baseType: !409, size: 32, offset: 160)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3162, file: !405, line: 272, baseType: !409, size: 32, offset: 192)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3162, file: !405, line: 273, baseType: !409, size: 32, offset: 224)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3162, file: !405, line: 274, baseType: !1228, size: 64, offset: 256)
!3173 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3174, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3175, retainedTypes: !3176, splitDebugInlining: false, nameTableKind: None)
!3174 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!3175 = !{!912}
!3176 = !{!3177, !108, !3185, !3191, !3202}
!3177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3178, size: 32)
!3178 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !624, line: 770, baseType: !3179)
!3179 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 764, size: 128, elements: !3180)
!3180 = !{!3181, !3182, !3183, !3184}
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3179, file: !624, line: 766, baseType: !409, size: 32)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3179, file: !624, line: 767, baseType: !409, size: 32, offset: 32)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3179, file: !624, line: 768, baseType: !409, size: 32, offset: 64)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3179, file: !624, line: 769, baseType: !628, size: 32, offset: 96)
!3185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3186, size: 32)
!3186 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !405, line: 329, baseType: !3187)
!3187 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 325, size: 64, elements: !3188)
!3188 = !{!3189, !3190}
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3187, file: !405, line: 327, baseType: !409, size: 32)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3187, file: !405, line: 328, baseType: !409, size: 32, offset: 32)
!3191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3192, size: 32)
!3192 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !405, line: 258, baseType: !3193)
!3193 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 249, size: 224, elements: !3194)
!3194 = !{!3195, !3196, !3197, !3198, !3199, !3200, !3201}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3193, file: !405, line: 251, baseType: !409, size: 32)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3193, file: !405, line: 252, baseType: !409, size: 32, offset: 32)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3193, file: !405, line: 253, baseType: !409, size: 32, offset: 64)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3193, file: !405, line: 254, baseType: !409, size: 32, offset: 96)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3193, file: !405, line: 255, baseType: !409, size: 32, offset: 128)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3193, file: !405, line: 256, baseType: !409, size: 32, offset: 160)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3193, file: !405, line: 257, baseType: !409, size: 32, offset: 192)
!3202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3203, size: 32)
!3203 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 369, baseType: !3204)
!3204 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 335, size: 1152, elements: !3205)
!3205 = !{!3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237}
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3204, file: !405, line: 337, baseType: !409, size: 32)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3204, file: !405, line: 338, baseType: !409, size: 32, offset: 32)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3204, file: !405, line: 339, baseType: !409, size: 32, offset: 64)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3204, file: !405, line: 340, baseType: !409, size: 32, offset: 96)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3204, file: !405, line: 341, baseType: !409, size: 32, offset: 128)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3204, file: !405, line: 342, baseType: !409, size: 32, offset: 160)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3204, file: !405, line: 343, baseType: !409, size: 32, offset: 192)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3204, file: !405, line: 344, baseType: !108, size: 32, offset: 224)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3204, file: !405, line: 345, baseType: !409, size: 32, offset: 256)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3204, file: !405, line: 346, baseType: !409, size: 32, offset: 288)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3204, file: !405, line: 347, baseType: !940, size: 64, offset: 320)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3204, file: !405, line: 348, baseType: !409, size: 32, offset: 384)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3204, file: !405, line: 349, baseType: !409, size: 32, offset: 416)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3204, file: !405, line: 350, baseType: !409, size: 32, offset: 448)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3204, file: !405, line: 351, baseType: !108, size: 32, offset: 480)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3204, file: !405, line: 352, baseType: !409, size: 32, offset: 512)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3204, file: !405, line: 353, baseType: !409, size: 32, offset: 544)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3204, file: !405, line: 354, baseType: !940, size: 64, offset: 576)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3204, file: !405, line: 355, baseType: !409, size: 32, offset: 640)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3204, file: !405, line: 356, baseType: !409, size: 32, offset: 672)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3204, file: !405, line: 357, baseType: !409, size: 32, offset: 704)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3204, file: !405, line: 358, baseType: !108, size: 32, offset: 736)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3204, file: !405, line: 359, baseType: !409, size: 32, offset: 768)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3204, file: !405, line: 360, baseType: !409, size: 32, offset: 800)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3204, file: !405, line: 361, baseType: !940, size: 64, offset: 832)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3204, file: !405, line: 362, baseType: !409, size: 32, offset: 896)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3204, file: !405, line: 363, baseType: !409, size: 32, offset: 928)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3204, file: !405, line: 364, baseType: !940, size: 64, offset: 960)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3204, file: !405, line: 365, baseType: !409, size: 32, offset: 1024)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3204, file: !405, line: 366, baseType: !409, size: 32, offset: 1056)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3204, file: !405, line: 367, baseType: !961, size: 32, offset: 1088)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3204, file: !405, line: 368, baseType: !409, size: 32, offset: 1120)
!3238 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3239, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3240, splitDebugInlining: false, nameTableKind: None)
!3239 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!3240 = !{!102, !132}
!3241 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3242, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3243, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!3242 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!3243 = !{!3244, !3251, !30}
!3244 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3245, line: 14, baseType: !32, size: 32, elements: !3246)
!3245 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3246 = !{!3247, !3248, !3249, !3250}
!3247 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3248 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3249 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3250 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3251 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3245, line: 42, baseType: !32, size: 32, elements: !3252)
!3252 = !{!3253, !3254, !3255, !3256, !3257, !3258}
!3253 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3254 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3255 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3256 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3257 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3258 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3259 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3260, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!3260 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!3261 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3262, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3263, splitDebugInlining: false, nameTableKind: None)
!3262 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!3263 = !{!102, !103, !3264, !3279}
!3264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3265, size: 32)
!3265 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !3266)
!3266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !3267)
!3267 = !{!3268, !3274}
!3268 = !DIDerivedType(tag: DW_TAG_member, scope: !3266, file: !146, line: 38, baseType: !3269, size: 32)
!3269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3266, file: !146, line: 38, size: 32, elements: !3270)
!3270 = !{!3271, !3273}
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3269, file: !146, line: 39, baseType: !3272, size: 32)
!3272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3266, size: 32)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3269, file: !146, line: 40, baseType: !3272, size: 32)
!3274 = !DIDerivedType(tag: DW_TAG_member, scope: !3266, file: !146, line: 42, baseType: !3275, size: 32, offset: 32)
!3275 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3266, file: !146, line: 42, size: 32, elements: !3276)
!3276 = !{!3277, !3278}
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3275, file: !146, line: 43, baseType: !3272, size: 32)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3275, file: !146, line: 44, baseType: !3272, size: 32)
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 32)
!3280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !3281)
!3281 = !{!3282, !3326, !3338, !3339, !3340, !3341, !3347, !3360}
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3280, file: !163, line: 247, baseType: !3283, size: 384)
!3283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !3284)
!3284 = !{!3285, !3295, !3302, !3303, !3304, !3313, !3314, !3315}
!3285 = !DIDerivedType(tag: DW_TAG_member, scope: !3283, file: !163, line: 60, baseType: !3286, size: 64)
!3286 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3283, file: !163, line: 60, size: 64, elements: !3287)
!3287 = !{!3288, !3289}
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3286, file: !163, line: 61, baseType: !3265, size: 64)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3286, file: !163, line: 62, baseType: !3290, size: 64)
!3290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !3291)
!3291 = !{!3292}
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3290, file: !175, line: 50, baseType: !3293, size: 64)
!3293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3294, size: 64, elements: !180)
!3294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3290, size: 32)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3283, file: !163, line: 68, baseType: !3296, size: 32, offset: 64)
!3296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3297, size: 32)
!3297 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !3298)
!3298 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !3299)
!3299 = !{!3300}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3298, file: !141, line: 232, baseType: !3301, size: 64)
!3301 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !3266)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3283, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3283, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!3304 = !DIDerivedType(tag: DW_TAG_member, scope: !3283, file: !163, line: 90, baseType: !3305, size: 16, offset: 112)
!3305 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3283, file: !163, line: 90, size: 16, elements: !3306)
!3306 = !{!3307, !3312}
!3307 = !DIDerivedType(tag: DW_TAG_member, scope: !3305, file: !163, line: 91, baseType: !3308, size: 16)
!3308 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3305, file: !163, line: 91, size: 16, elements: !3309)
!3309 = !{!3310, !3311}
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3308, file: !163, line: 96, baseType: !195, size: 8)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3308, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3305, file: !163, line: 100, baseType: !121, size: 16)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3283, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3283, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3283, file: !163, line: 131, baseType: !3316, size: 192, offset: 192)
!3316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !3317)
!3317 = !{!3318, !3319, !3325}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3316, file: !141, line: 245, baseType: !3265, size: 64)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3316, file: !141, line: 246, baseType: !3320, size: 32, offset: 64)
!3320 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !3321)
!3321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3322, size: 32)
!3322 = !DISubroutineType(types: !3323)
!3323 = !{null, !3324}
!3324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3316, size: 32)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3316, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3280, file: !163, line: 250, baseType: !3327, size: 288, offset: 384)
!3327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !3328)
!3328 = !{!3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337}
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3327, file: !214, line: 26, baseType: !108, size: 32)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3327, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3327, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3327, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3327, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3327, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3327, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3327, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3327, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3280, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3280, file: !163, line: 256, baseType: !3297, size: 64, offset: 704)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3280, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3280, file: !163, line: 300, baseType: !3342, size: 96, offset: 800)
!3342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !3343)
!3343 = !{!3344, !3345, !3346}
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3342, file: !163, line: 153, baseType: !22, size: 32)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3342, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3342, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3280, file: !163, line: 325, baseType: !3348, size: 32, offset: 896)
!3348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3349, size: 32)
!3349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !3350)
!3350 = !{!3351, !3357, !3358}
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3349, file: !137, line: 5074, baseType: !3352, size: 96)
!3352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !3353)
!3353 = !{!3354, !3355, !3356}
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3352, file: !240, line: 57, baseType: !243, size: 32)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3352, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3352, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3349, file: !137, line: 5075, baseType: !3297, size: 64, offset: 96)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3349, file: !137, line: 5076, baseType: !3359, offset: 160)
!3359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3280, file: !163, line: 343, baseType: !3361, size: 64, offset: 928)
!3361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !3362)
!3362 = !{!3363, !3364}
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3361, file: !214, line: 63, baseType: !108, size: 32)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3361, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!3365 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3366, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3367, splitDebugInlining: false, nameTableKind: None)
!3366 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!3367 = !{!22, !102, !103}
!3368 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3369, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!3369 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!3370 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3371, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!3371 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!3372 = !{!"Ubuntu clang version 14.0.6"}
!3373 = !{i32 7, !"Dwarf Version", i32 4}
!3374 = !{i32 2, !"Debug Info Version", i32 3}
!3375 = !{i32 1, !"wchar_size", i32 4}
!3376 = !{i32 1, !"min_enum_size", i32 4}
!3377 = !{i32 1, !"branch-target-enforcement", i32 0}
!3378 = !{i32 1, !"sign-return-address", i32 0}
!3379 = !{i32 1, !"sign-return-address-all", i32 0}
!3380 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3381 = !{i32 7, !"frame-pointer", i32 2}
!3382 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3383, file: !3383, line: 26, type: !334, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !251)
!3383 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3384 = !DILocation(line: 28, column: 1, scope: !3382)
!3385 = !{i64 2154440167, i64 2154440187, i64 2154440250}
!3386 = !DILocation(line: 29, column: 1, scope: !3382)
!3387 = !{i64 2154440582, i64 2154440602, i64 2154440665}
!3388 = !DILocation(line: 30, column: 1, scope: !3382)
!3389 = !{i64 2154441001, i64 2154441021, i64 2154441084}
!3390 = !DILocation(line: 31, column: 1, scope: !3382)
!3391 = !{i64 2154441420, i64 2154441440, i64 2154441503}
!3392 = !DILocation(line: 33, column: 1, scope: !3382)
!3393 = !{i64 2154441712, i64 2154441732, i64 2154441795}
!3394 = !DILocation(line: 35, column: 1, scope: !3382)
!3395 = !{i64 2154442037, i64 2154442057, i64 2154442120}
!3396 = !DILocation(line: 50, column: 1, scope: !3382)
!3397 = !{i64 2154442464, i64 2154442484, i64 2154442547}
!3398 = !DILocation(line: 54, column: 1, scope: !3382)
!3399 = !{i64 2154442903, i64 2154442923, i64 2154442986}
!3400 = !DILocation(line: 61, column: 1, scope: !3382)
!3401 = !{i64 2154443220, i64 2154443240, i64 2154443303}
!3402 = !DILocation(line: 63, column: 1, scope: !3382)
!3403 = !{i64 2154443600, i64 2154443620, i64 2154443683}
!3404 = !DILocation(line: 64, column: 1, scope: !3382)
!3405 = !{i64 2154444122, i64 2154444142, i64 2154444205}
!3406 = !DILocation(line: 65, column: 1, scope: !3382)
!3407 = !{i64 2154444620, i64 2154444640, i64 2154444703}
!3408 = !DILocation(line: 66, column: 1, scope: !3382)
!3409 = !{i64 2154445102, i64 2154445122, i64 2154445185}
!3410 = !DILocation(line: 67, column: 1, scope: !3382)
!3411 = !{i64 2154449670, i64 2154449690, i64 2154449753}
!3412 = !DILocation(line: 68, column: 1, scope: !3382)
!3413 = !{i64 2154450158, i64 2154450178, i64 2154450241}
!3414 = !DILocation(line: 70, column: 1, scope: !3382)
!3415 = !{i64 2154450626, i64 2154450646, i64 2154450709}
!3416 = !DILocation(line: 71, column: 1, scope: !3382)
!3417 = !{i64 2154451068, i64 2154451088, i64 2154451151}
!3418 = !DILocation(line: 72, column: 1, scope: !3382)
!3419 = !{i64 2154451526, i64 2154451546, i64 2154451609}
!3420 = !DILocation(line: 79, column: 1, scope: !3382)
!3421 = !{i64 2154451980, i64 2154452000, i64 2154452063}
!3422 = !DILocation(line: 80, column: 1, scope: !3382)
!3423 = !{i64 2154452491, i64 2154452511, i64 2154452574}
!3424 = !DILocation(line: 82, column: 1, scope: !3382)
!3425 = !{i64 2154452982, i64 2154453002, i64 2154453065}
!3426 = !DILocation(line: 97, column: 1, scope: !3382)
!3427 = !{i64 2154453319, i64 2154453339, i64 2154453402}
!3428 = !DILocation(line: 99, column: 1, scope: !3382)
!3429 = !{i64 2154453537, i64 2154453557, i64 2154453620}
!3430 = !DILocation(line: 102, column: 1, scope: !3382)
!3431 = !{i64 2154453794, i64 2154453814, i64 2154453877}
!3432 = !DILocation(line: 105, column: 1, scope: !3382)
!3433 = !{i64 2154454034, i64 2154454054, i64 2154454117}
!3434 = !DILocation(line: 115, column: 1, scope: !3382)
!3435 = !{i64 2154454373, i64 2154454393, i64 2154454456}
!3436 = !DILocation(line: 118, column: 1, scope: !3382)
!3437 = !{i64 2154454717, i64 2154454737, i64 2154454800}
!3438 = !DILocation(line: 32, column: 1, scope: !3439)
!3439 = !DILexicalBlockFile(scope: !3382, file: !3440, discriminator: 0)
!3440 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3441 = !{i64 2154455073, i64 2154455093, i64 2154455156}
!3442 = !DILocation(line: 33, column: 1, scope: !3439)
!3443 = !{i64 2154455585, i64 2154455605, i64 2154455668}
!3444 = !DILocation(line: 53, column: 1, scope: !3439)
!3445 = !{i64 2154456093, i64 2154456113, i64 2154456176}
!3446 = !DILocation(line: 54, column: 1, scope: !3439)
!3447 = !{i64 2154456511, i64 2154456531, i64 2154456594}
!3448 = !DILocation(line: 55, column: 1, scope: !3439)
!3449 = !{i64 2154456929, i64 2154456949, i64 2154457012}
!3450 = !DILocation(line: 56, column: 1, scope: !3439)
!3451 = !{i64 2154457347, i64 2154457367, i64 2154457430}
!3452 = !DILocation(line: 57, column: 1, scope: !3439)
!3453 = !{i64 2154457765, i64 2154457785, i64 2154457848}
!3454 = !DILocation(line: 58, column: 1, scope: !3439)
!3455 = !{i64 2154458183, i64 2154458203, i64 2154458266}
!3456 = !DILocation(line: 59, column: 1, scope: !3439)
!3457 = !{i64 2154458601, i64 2154458621, i64 2154458684}
!3458 = !DILocation(line: 60, column: 1, scope: !3439)
!3459 = !{i64 2154459025, i64 2154459045, i64 2154459108}
!3460 = !DILocation(line: 61, column: 1, scope: !3439)
!3461 = !{i64 2154463403, i64 2154463423, i64 2154463486}
!3462 = !DILocation(line: 70, column: 1, scope: !3439)
!3463 = !{i64 2154463632, i64 2154463652, i64 2154463715}
!3464 = !DILocation(line: 72, column: 1, scope: !3439)
!3465 = !{i64 2154463964, i64 2154463984, i64 2154464047}
!3466 = !DILocation(line: 73, column: 1, scope: !3439)
!3467 = !{i64 2154464414, i64 2154464434, i64 2154464497}
!3468 = !DILocation(line: 74, column: 1, scope: !3439)
!3469 = !{i64 2154464864, i64 2154464884, i64 2154464947}
!3470 = !DILocation(line: 75, column: 1, scope: !3439)
!3471 = !{i64 2154465314, i64 2154465334, i64 2154465397}
!3472 = !DILocation(line: 76, column: 1, scope: !3439)
!3473 = !{i64 2154465764, i64 2154465784, i64 2154465847}
!3474 = !DILocation(line: 77, column: 1, scope: !3439)
!3475 = !{i64 2154466214, i64 2154466234, i64 2154466297}
!3476 = !DILocation(line: 78, column: 1, scope: !3439)
!3477 = !{i64 2154466664, i64 2154466684, i64 2154466747}
!3478 = !DILocation(line: 79, column: 1, scope: !3439)
!3479 = !{i64 2154467114, i64 2154467134, i64 2154467197}
!3480 = !DILocation(line: 80, column: 1, scope: !3439)
!3481 = !{i64 2154467567, i64 2154467587, i64 2154467650}
!3482 = !DILocation(line: 84, column: 1, scope: !3439)
!3483 = !{i64 2154467899, i64 2154467919, i64 2154467982}
!3484 = !DILocation(line: 91, column: 1, scope: !3439)
!3485 = !{i64 2154468296, i64 2154468316, i64 2154468379}
!3486 = !DILocation(line: 93, column: 1, scope: !3439)
!3487 = !{i64 2154468663, i64 2154468683, i64 2154468746}
!3488 = !DILocation(line: 106, column: 1, scope: !3439)
!3489 = !{i64 2154468933, i64 2154468953, i64 2154469016}
!3490 = !DILocation(line: 11, column: 1, scope: !3491)
!3491 = !DILexicalBlockFile(scope: !3382, file: !3492, discriminator: 0)
!3492 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3493 = distinct !DISubprogram(name: "s_cb", scope: !114, file: !114, line: 152, type: !287, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3494)
!3494 = !{!3495, !3496, !3503}
!3495 = !DILocalVariable(name: "chan", arg: 1, scope: !3493, file: !114, line: 152, type: !289)
!3496 = !DILocalVariable(name: "msg_received", scope: !3493, file: !114, line: 154, type: !3497)
!3497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bm_msg", file: !353, line: 15, size: 2048, elements: !3498)
!3498 = !{!3499}
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !3497, file: !353, line: 16, baseType: !3500, size: 2048)
!3500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 2048, elements: !3501)
!3501 = !{!3502}
!3502 = !DISubrange(count: 256)
!3503 = !DILocalVariable(name: "actual_message_data", scope: !3493, file: !114, line: 155, type: !3504)
!3504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3505, size: 32)
!3505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!3506 = !DILocation(line: 0, scope: !3493)
!3507 = !DILocation(line: 154, column: 2, scope: !3493)
!3508 = !DILocation(line: 154, column: 16, scope: !3493)
!3509 = !DILocation(line: 155, column: 56, scope: !3493)
!3510 = !DILocation(line: 157, column: 45, scope: !3493)
!3511 = !DILocation(line: 157, column: 2, scope: !3493)
!3512 = !DILocation(line: 159, column: 8, scope: !3493)
!3513 = !DILocation(line: 160, column: 1, scope: !3493)
!3514 = distinct !DISubprogram(name: "zbus_chan_const_msg", scope: !117, file: !117, line: 416, type: !3515, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3517)
!3515 = !DISubroutineType(types: !3516)
!3516 = !{!13, !289}
!3517 = !{!3518}
!3518 = !DILocalVariable(name: "chan", arg: 1, scope: !3514, file: !117, line: 416, type: !289)
!3519 = !DILocation(line: 0, scope: !3514)
!3520 = !DILocation(line: 420, column: 15, scope: !3514)
!3521 = !DILocation(line: 420, column: 2, scope: !3514)
!3522 = distinct !DISubprogram(name: "producer_thread", scope: !114, file: !114, line: 164, type: !334, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3523)
!3523 = !{!3524, !3525, !3527, !3529, !3530, !3532, !3533, !3534}
!3524 = !DILocalVariable(name: "msg", scope: !3522, file: !114, line: 169, type: !3497)
!3525 = !DILocalVariable(name: "actual_message_data", scope: !3522, file: !114, line: 170, type: !3526)
!3526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 32)
!3527 = !DILocalVariable(name: "i", scope: !3528, file: !114, line: 172, type: !109)
!3528 = distinct !DILexicalBlock(scope: !3522, file: !114, line: 172, column: 2)
!3529 = !DILocalVariable(name: "start", scope: !3522, file: !114, line: 186, type: !108)
!3530 = !DILocalVariable(name: "internal_count", scope: !3531, file: !114, line: 188, type: !109)
!3531 = distinct !DILexicalBlock(scope: !3522, file: !114, line: 188, column: 2)
!3532 = !DILocalVariable(name: "duration", scope: !3522, file: !114, line: 200, type: !108)
!3533 = !DILocalVariable(name: "i", scope: !3522, file: !114, line: 206, type: !109)
!3534 = !DILocalVariable(name: "f", scope: !3522, file: !114, line: 207, type: !109)
!3535 = !DILocation(line: 166, column: 2, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3537, file: !114, line: 166, column: 2)
!3537 = distinct !DILexicalBlock(scope: !3538, file: !114, line: 166, column: 2)
!3538 = distinct !DILexicalBlock(scope: !3539, file: !114, line: 166, column: 2)
!3539 = distinct !DILexicalBlock(scope: !3522, file: !114, line: 166, column: 2)
!3540 = !DILocation(line: 169, column: 2, scope: !3522)
!3541 = !DILocation(line: 169, column: 16, scope: !3522)
!3542 = !DILocation(line: 0, scope: !3528)
!3543 = !DILocation(line: 172, column: 2, scope: !3528)
!3544 = !DILocation(line: 176, column: 2, scope: !3522)
!3545 = !DILocation(line: 0, scope: !3522)
!3546 = !DILocation(line: 179, column: 35, scope: !3522)
!3547 = !DILocation(line: 179, column: 33, scope: !3522)
!3548 = !DILocation(line: 181, column: 28, scope: !3522)
!3549 = !DILocation(line: 184, column: 2, scope: !3522)
!3550 = !DILocation(line: 186, column: 19, scope: !3522)
!3551 = !DILocation(line: 0, scope: !3531)
!3552 = !DILocation(line: 188, column: 2, scope: !3531)
!3553 = !DILocation(line: 173, column: 18, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3555, file: !114, line: 172, column: 62)
!3555 = distinct !DILexicalBlock(scope: !3528, file: !114, line: 172, column: 2)
!3556 = !DILocation(line: 173, column: 3, scope: !3554)
!3557 = !DILocation(line: 173, column: 16, scope: !3554)
!3558 = !DILocation(line: 172, column: 57, scope: !3555)
!3559 = !DILocation(line: 172, column: 52, scope: !3555)
!3560 = distinct !{!3560, !3543, !3561}
!3561 = !DILocation(line: 174, column: 2, scope: !3528)
!3562 = !DILocation(line: 200, column: 23, scope: !3522)
!3563 = !DILocation(line: 200, column: 41, scope: !3522)
!3564 = !DILocation(line: 202, column: 15, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3522, file: !114, line: 202, column: 6)
!3566 = !DILocation(line: 202, column: 6, scope: !3522)
!3567 = !DILocation(line: 190, column: 3, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3569, file: !114, line: 189, column: 49)
!3569 = distinct !DILexicalBlock(scope: !3531, file: !114, line: 188, column: 2)
!3570 = !DILocation(line: 194, column: 31, scope: !3568)
!3571 = !DILocation(line: 194, column: 3, scope: !3568)
!3572 = !DILocation(line: 196, column: 3, scope: !3568)
!3573 = !DILocation(line: 198, column: 33, scope: !3568)
!3574 = !DILocation(line: 198, column: 3, scope: !3568)
!3575 = !DILocation(line: 189, column: 22, scope: !3569)
!3576 = !DILocation(line: 188, column: 85, scope: !3569)
!3577 = distinct !{!3577, !3552, !3578}
!3578 = !DILocation(line: 199, column: 2, scope: !3531)
!3579 = !DILocation(line: 203, column: 3, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3581, file: !114, line: 203, column: 3)
!3581 = distinct !DILexicalBlock(scope: !3582, file: !114, line: 203, column: 3)
!3582 = distinct !DILexicalBlock(scope: !3583, file: !114, line: 203, column: 3)
!3583 = distinct !DILexicalBlock(scope: !3584, file: !114, line: 203, column: 3)
!3584 = distinct !DILexicalBlock(scope: !3565, file: !114, line: 202, column: 21)
!3585 = !DILocation(line: 204, column: 3, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3584, file: !114, line: 204, column: 3)
!3587 = !{i64 2154902026, i64 2154902042, i64 2154902068, i64 2154902096, i64 2154902116}
!3588 = !DILocation(line: 205, column: 2, scope: !3584)
!3589 = !DILocation(line: 206, column: 43, scope: !3522)
!3590 = !DILocation(line: 206, column: 41, scope: !3522)
!3591 = !DILocation(line: 207, column: 44, scope: !3522)
!3592 = !DILocation(line: 207, column: 56, scope: !3522)
!3593 = !DILocation(line: 209, column: 2, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3595, file: !114, line: 209, column: 2)
!3595 = distinct !DILexicalBlock(scope: !3596, file: !114, line: 209, column: 2)
!3596 = distinct !DILexicalBlock(scope: !3597, file: !114, line: 209, column: 2)
!3597 = distinct !DILexicalBlock(scope: !3522, file: !114, line: 209, column: 2)
!3598 = !DILocation(line: 210, column: 2, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3600, file: !114, line: 210, column: 2)
!3600 = distinct !DILexicalBlock(scope: !3601, file: !114, line: 210, column: 2)
!3601 = distinct !DILexicalBlock(scope: !3602, file: !114, line: 210, column: 2)
!3602 = distinct !DILexicalBlock(scope: !3522, file: !114, line: 210, column: 2)
!3603 = !DILocation(line: 211, column: 2, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3605, file: !114, line: 211, column: 2)
!3605 = distinct !DILexicalBlock(scope: !3606, file: !114, line: 211, column: 2)
!3606 = distinct !DILexicalBlock(scope: !3607, file: !114, line: 211, column: 2)
!3607 = distinct !DILexicalBlock(scope: !3522, file: !114, line: 211, column: 2)
!3608 = !DILocation(line: 213, column: 2, scope: !3522)
!3609 = !DILocation(line: 214, column: 1, scope: !3522)
!3610 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3611, file: !3611, line: 175, type: !3612, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3614)
!3611 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3612 = !DISubroutineType(types: !3613)
!3613 = !{!278, !103}
!3614 = !{!3615}
!3615 = !DILocalVariable(name: "level", arg: 1, scope: !3610, file: !3611, line: 175, type: !103)
!3616 = !DILocation(line: 0, scope: !3610)
!3617 = !DILocation(line: 177, column: 2, scope: !3610)
!3618 = !DILocation(line: 189, column: 1, scope: !3610)
!3619 = distinct !DISubprogram(name: "k_uptime_get_32", scope: !137, file: !137, line: 1640, type: !3620, scopeLine: 1641, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !251)
!3620 = !DISubroutineType(types: !3621)
!3621 = !{!108}
!3622 = !DILocation(line: 1642, column: 19, scope: !3619)
!3623 = !DILocation(line: 1642, column: 9, scope: !3619)
!3624 = !DILocation(line: 1642, column: 2, scope: !3619)
!3625 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3626, file: !3626, line: 403, type: !3627, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3629)
!3626 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3627 = !DISubroutineType(types: !3628)
!3628 = !{!109, !109}
!3629 = !{!3630}
!3630 = !DILocalVariable(name: "t", arg: 1, scope: !3625, file: !3626, line: 403, type: !109)
!3631 = !DILocation(line: 0, scope: !3625)
!3632 = !DILocation(line: 406, column: 2, scope: !3625)
!3633 = distinct !DISubprogram(name: "k_uptime_get", scope: !137, file: !137, line: 1616, type: !3634, scopeLine: 1617, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !251)
!3634 = !DISubroutineType(types: !3635)
!3635 = !{!106}
!3636 = !DILocation(line: 1618, column: 31, scope: !3633)
!3637 = !DILocation(line: 1618, column: 9, scope: !3633)
!3638 = !DILocation(line: 1618, column: 2, scope: !3633)
!3639 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !3640, file: !3640, line: 564, type: !3634, scopeLine: 565, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !251)
!3640 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!3641 = !DILocation(line: 573, column: 2, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3639, file: !3640, line: 573, column: 2)
!3643 = !{i64 2154168968}
!3644 = !DILocation(line: 574, column: 9, scope: !3639)
!3645 = !DILocation(line: 574, column: 2, scope: !3639)
!3646 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3626, file: !3626, line: 1103, type: !3627, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3647)
!3647 = !{!3648}
!3648 = !DILocalVariable(name: "t", arg: 1, scope: !3646, file: !3626, line: 1103, type: !109)
!3649 = !DILocation(line: 0, scope: !3646)
!3650 = !DILocalVariable(name: "t", arg: 1, scope: !3651, file: !3626, line: 102, type: !109)
!3651 = distinct !DISubprogram(name: "z_tmcvt", scope: !3626, file: !3626, line: 102, type: !3652, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3654)
!3652 = !DISubroutineType(types: !3653)
!3653 = !{!109, !109, !108, !108, !131, !131, !131, !131}
!3654 = !{!3650, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3662, !3663, !3664}
!3655 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3651, file: !3626, line: 102, type: !108)
!3656 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3651, file: !3626, line: 103, type: !108)
!3657 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3651, file: !3626, line: 103, type: !131)
!3658 = !DILocalVariable(name: "result32", arg: 5, scope: !3651, file: !3626, line: 104, type: !131)
!3659 = !DILocalVariable(name: "round_up", arg: 6, scope: !3651, file: !3626, line: 104, type: !131)
!3660 = !DILocalVariable(name: "round_off", arg: 7, scope: !3651, file: !3626, line: 105, type: !131)
!3661 = !DILocalVariable(name: "mul_ratio", scope: !3651, file: !3626, line: 107, type: !131)
!3662 = !DILocalVariable(name: "div_ratio", scope: !3651, file: !3626, line: 109, type: !131)
!3663 = !DILocalVariable(name: "off", scope: !3651, file: !3626, line: 116, type: !109)
!3664 = !DILocalVariable(name: "rdivisor", scope: !3665, file: !3626, line: 119, type: !108)
!3665 = distinct !DILexicalBlock(scope: !3666, file: !3626, line: 118, column: 18)
!3666 = distinct !DILexicalBlock(scope: !3651, file: !3626, line: 118, column: 6)
!3667 = !DILocation(line: 0, scope: !3651, inlinedAt: !3668)
!3668 = distinct !DILocation(line: 1106, column: 9, scope: !3646)
!3669 = !DILocation(line: 139, column: 13, scope: !3670, inlinedAt: !3668)
!3670 = distinct !DILexicalBlock(scope: !3671, file: !3626, line: 138, column: 10)
!3671 = distinct !DILexicalBlock(scope: !3672, file: !3626, line: 136, column: 7)
!3672 = distinct !DILexicalBlock(scope: !3673, file: !3626, line: 134, column: 17)
!3673 = distinct !DILexicalBlock(scope: !3651, file: !3626, line: 134, column: 6)
!3674 = !DILocation(line: 1106, column: 2, scope: !3646)
!3675 = distinct !DISubprogram(name: "cbvprintf_package", scope: !381, file: !381, line: 233, type: !3676, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !3685)
!3676 = !DISubroutineType(types: !3677)
!3677 = !{!103, !102, !132, !108, !337, !3678}
!3678 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3679, line: 99, baseType: !3680)
!3679 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3680 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3679, line: 40, baseType: !3681)
!3681 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !381, baseType: !3682)
!3682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3683)
!3683 = !{!3684}
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3682, file: !381, line: 18, baseType: !102, size: 32)
!3685 = !{!3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3721, !3730, !3733, !3734, !3737, !3740, !3743, !3746, !3752}
!3686 = !DILocalVariable(name: "packaged", arg: 1, scope: !3675, file: !381, line: 233, type: !102)
!3687 = !DILocalVariable(name: "len", arg: 2, scope: !3675, file: !381, line: 233, type: !132)
!3688 = !DILocalVariable(name: "flags", arg: 3, scope: !3675, file: !381, line: 233, type: !108)
!3689 = !DILocalVariable(name: "fmt", arg: 4, scope: !3675, file: !381, line: 234, type: !337)
!3690 = !DILocalVariable(name: "ap", arg: 5, scope: !3675, file: !381, line: 234, type: !3678)
!3691 = !DILocalVariable(name: "buf0", scope: !3675, file: !381, line: 247, type: !379)
!3692 = !DILocalVariable(name: "buf", scope: !3675, file: !381, line: 248, type: !379)
!3693 = !DILocalVariable(name: "size", scope: !3675, file: !381, line: 249, type: !32)
!3694 = !DILocalVariable(name: "align", scope: !3675, file: !381, line: 250, type: !32)
!3695 = !DILocalVariable(name: "str_ptr_pos", scope: !3675, file: !381, line: 251, type: !3696)
!3696 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 128, elements: !1933)
!3697 = !DILocalVariable(name: "str_ptr_arg", scope: !3675, file: !381, line: 252, type: !3696)
!3698 = !DILocalVariable(name: "s_idx", scope: !3675, file: !381, line: 253, type: !32)
!3699 = !DILocalVariable(name: "s_rw_cnt", scope: !3675, file: !381, line: 254, type: !32)
!3700 = !DILocalVariable(name: "s_ro_cnt", scope: !3675, file: !381, line: 255, type: !32)
!3701 = !DILocalVariable(name: "arg_idx", scope: !3675, file: !381, line: 256, type: !103)
!3702 = !DILocalVariable(name: "i", scope: !3675, file: !381, line: 257, type: !32)
!3703 = !DILocalVariable(name: "s", scope: !3675, file: !381, line: 258, type: !337)
!3704 = !DILocalVariable(name: "parsing", scope: !3675, file: !381, line: 259, type: !131)
!3705 = !DILocalVariable(name: "rws_pos_en", scope: !3675, file: !381, line: 263, type: !131)
!3706 = !DILocalVariable(name: "fros_cnt", scope: !3675, file: !381, line: 268, type: !103)
!3707 = !DILocalVariable(name: "is_str_arg", scope: !3675, file: !381, line: 269, type: !131)
!3708 = !DILocalVariable(name: "pkg_hdr", scope: !3675, file: !381, line: 270, type: !3709)
!3709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3710, size: 32)
!3710 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3711, line: 78, size: 32, elements: !3712)
!3711 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3712 = !{!3713, !3720}
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3710, file: !3711, line: 80, baseType: !3714, size: 32)
!3714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3711, line: 45, size: 32, elements: !3715)
!3715 = !{!3716, !3717, !3718, !3719}
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3714, file: !3711, line: 47, baseType: !185, size: 8)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3714, file: !3711, line: 50, baseType: !185, size: 8, offset: 8)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3714, file: !3711, line: 53, baseType: !185, size: 8, offset: 16)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3714, file: !3711, line: 56, baseType: !185, size: 8, offset: 24)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3710, file: !3711, line: 82, baseType: !102, size: 32)
!3721 = !DILocalVariable(name: "v", scope: !3722, file: !381, line: 567, type: !3726)
!3722 = distinct !DILexicalBlock(scope: !3723, file: !381, line: 562, column: 14)
!3723 = distinct !DILexicalBlock(scope: !3724, file: !381, line: 481, column: 18)
!3724 = distinct !DILexicalBlock(scope: !3725, file: !381, line: 466, column: 3)
!3725 = distinct !DILexicalBlock(scope: !3675, file: !381, line: 343, column: 15)
!3726 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3675, file: !381, line: 567, size: 64, elements: !3727)
!3727 = !{!3728, !3729}
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3726, file: !381, line: 567, baseType: !372, size: 64)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3726, file: !381, line: 567, baseType: !370, size: 64)
!3730 = !DILocalVariable(name: "is_ro", scope: !3731, file: !381, line: 620, type: !131)
!3731 = distinct !DILexicalBlock(scope: !3732, file: !381, line: 613, column: 19)
!3732 = distinct !DILexicalBlock(scope: !3725, file: !381, line: 613, column: 7)
!3733 = !DILocalVariable(name: "do_ro", scope: !3731, file: !381, line: 621, type: !131)
!3734 = !DILocalVariable(name: "s_ptr_idx", scope: !3735, file: !381, line: 626, type: !108)
!3735 = distinct !DILexicalBlock(scope: !3736, file: !381, line: 625, column: 11)
!3736 = distinct !DILexicalBlock(scope: !3731, file: !381, line: 623, column: 8)
!3737 = !DILocalVariable(name: "v", scope: !3738, file: !381, line: 684, type: !103)
!3738 = distinct !DILexicalBlock(scope: !3739, file: !381, line: 683, column: 35)
!3739 = distinct !DILexicalBlock(scope: !3732, file: !381, line: 683, column: 14)
!3740 = !DILocalVariable(name: "v", scope: !3741, file: !381, line: 691, type: !376)
!3741 = distinct !DILexicalBlock(scope: !3742, file: !381, line: 690, column: 36)
!3742 = distinct !DILexicalBlock(scope: !3739, file: !381, line: 690, column: 14)
!3743 = !DILocalVariable(name: "v", scope: !3744, file: !381, line: 698, type: !107)
!3744 = distinct !DILexicalBlock(scope: !3745, file: !381, line: 697, column: 41)
!3745 = distinct !DILexicalBlock(scope: !3742, file: !381, line: 697, column: 14)
!3746 = !DILocalVariable(name: "pos", scope: !3747, file: !381, line: 762, type: !185)
!3747 = distinct !DILexicalBlock(scope: !3748, file: !381, line: 757, column: 31)
!3748 = distinct !DILexicalBlock(scope: !3749, file: !381, line: 757, column: 3)
!3749 = distinct !DILexicalBlock(scope: !3750, file: !381, line: 757, column: 3)
!3750 = distinct !DILexicalBlock(scope: !3751, file: !381, line: 756, column: 16)
!3751 = distinct !DILexicalBlock(scope: !3675, file: !381, line: 756, column: 6)
!3752 = !DILabel(scope: !3731, name: "process_string", file: !381, line: 615)
!3753 = !DILocation(line: 0, scope: !3675)
!3754 = !DILocation(line: 251, column: 2, scope: !3675)
!3755 = !DILocation(line: 251, column: 10, scope: !3675)
!3756 = !DILocation(line: 252, column: 2, scope: !3675)
!3757 = !DILocation(line: 252, column: 10, scope: !3675)
!3758 = !DILocation(line: 263, column: 29, scope: !3675)
!3759 = !DILocation(line: 263, column: 21, scope: !3675)
!3760 = !DILocation(line: 268, column: 21, scope: !3675)
!3761 = !DILocation(line: 268, column: 19, scope: !3675)
!3762 = !DILocation(line: 273, column: 6, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3675, file: !381, line: 273, column: 6)
!3764 = !DILocation(line: 273, column: 26, scope: !3763)
!3765 = !DILocation(line: 273, column: 6, scope: !3675)
!3766 = !DILocation(line: 297, column: 6, scope: !3675)
!3767 = !DILocation(line: 305, column: 11, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3675, file: !381, line: 305, column: 6)
!3769 = !DILocation(line: 305, column: 6, scope: !3675)
!3770 = !DILocation(line: 327, column: 19, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3675, file: !381, line: 327, column: 6)
!3772 = !DILocation(line: 327, column: 22, scope: !3771)
!3773 = !DILocation(line: 327, column: 33, scope: !3771)
!3774 = !DILocation(line: 327, column: 50, scope: !3771)
!3775 = !DILocation(line: 327, column: 6, scope: !3675)
!3776 = !DILocation(line: 338, column: 9, scope: !3675)
!3777 = !DILocation(line: 341, column: 2, scope: !3675)
!3778 = !DILocation(line: 472, column: 8, scope: !3724)
!3779 = !DILocation(line: 473, column: 14, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3781, file: !381, line: 473, column: 9)
!3781 = distinct !DILexicalBlock(scope: !3782, file: !381, line: 472, column: 18)
!3782 = distinct !DILexicalBlock(scope: !3724, file: !381, line: 472, column: 8)
!3783 = !DILocation(line: 473, column: 9, scope: !3781)
!3784 = !DILocation(line: 479, column: 5, scope: !3781)
!3785 = !DILocation(line: 468, column: 9, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3724, file: !381, line: 468, column: 8)
!3787 = !DILocation(line: 468, column: 8, scope: !3786)
!3788 = !DILocation(line: 468, column: 15, scope: !3786)
!3789 = !DILocation(line: 468, column: 8, scope: !3724)
!3790 = distinct !{!3790, !3791, !3792}
!3791 = !DILocation(line: 343, column: 2, scope: !3675)
!3792 = !DILocation(line: 712, column: 2, scope: !3675)
!3793 = !DILocation(line: 481, column: 4, scope: !3724)
!3794 = !DILocation(line: 484, column: 12, scope: !3723)
!3795 = !DILocation(line: 485, column: 5, scope: !3723)
!3796 = !DILocation(line: 505, column: 5, scope: !3723)
!3797 = !DILocation(line: 518, column: 5, scope: !3723)
!3798 = !DILocation(line: 523, column: 5, scope: !3723)
!3799 = !DILocation(line: 532, column: 9, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3723, file: !381, line: 532, column: 9)
!3801 = !DILocation(line: 532, column: 17, scope: !3800)
!3802 = !DILocation(line: 532, column: 9, scope: !3723)
!3803 = !DILocation(line: 533, column: 10, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3805, file: !381, line: 533, column: 10)
!3805 = distinct !DILexicalBlock(scope: !3800, file: !381, line: 532, column: 25)
!3806 = !DILocation(line: 533, column: 18, scope: !3804)
!3807 = !DILocation(line: 0, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3722, file: !381, line: 569, column: 9)
!3809 = !DILocation(line: 0, scope: !3722)
!3810 = !DILocation(line: 579, column: 20, scope: !3722)
!3811 = !DILocation(line: 579, column: 11, scope: !3722)
!3812 = !DILocation(line: 580, column: 9, scope: !3722)
!3813 = !DILocation(line: 582, column: 21, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3815, file: !381, line: 582, column: 10)
!3815 = distinct !DILexicalBlock(scope: !3816, file: !381, line: 580, column: 23)
!3816 = distinct !DILexicalBlock(scope: !3722, file: !381, line: 580, column: 9)
!3817 = !DILocation(line: 582, column: 28, scope: !3814)
!3818 = !DILocation(line: 582, column: 10, scope: !3815)
!3819 = !DILocation(line: 0, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3821, file: !381, line: 587, column: 17)
!3821 = distinct !DILexicalBlock(scope: !3815, file: !381, line: 585, column: 10)
!3822 = !DILocation(line: 593, column: 9, scope: !3722)
!3823 = !DILocation(line: 600, column: 5, scope: !3723)
!3824 = !DILocation(line: 605, column: 18, scope: !3725)
!3825 = !DILocation(line: 605, column: 9, scope: !3725)
!3826 = !DILocation(line: 608, column: 20, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3725, file: !381, line: 608, column: 7)
!3828 = !DILocation(line: 608, column: 23, scope: !3827)
!3829 = !DILocation(line: 608, column: 34, scope: !3827)
!3830 = !DILocation(line: 608, column: 41, scope: !3827)
!3831 = !DILocation(line: 608, column: 7, scope: !3725)
!3832 = !DILocation(line: 613, column: 7, scope: !3725)
!3833 = !DILocation(line: 614, column: 8, scope: !3731)
!3834 = !DILocation(line: 614, column: 4, scope: !3731)
!3835 = !DILocation(line: 255, column: 15, scope: !3675)
!3836 = !DILocation(line: 256, column: 6, scope: !3675)
!3837 = !DILocation(line: 254, column: 15, scope: !3675)
!3838 = !DILocation(line: 253, column: 15, scope: !3675)
!3839 = !DILocation(line: 320, column: 7, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3768, file: !381, line: 305, column: 20)
!3841 = !DILocation(line: 615, column: 1, scope: !3731)
!3842 = !DILocation(line: 616, column: 8, scope: !3731)
!3843 = !DILocation(line: 617, column: 5, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3845, file: !381, line: 616, column: 22)
!3845 = distinct !DILexicalBlock(scope: !3731, file: !381, line: 616, column: 8)
!3846 = !DILocation(line: 617, column: 25, scope: !3844)
!3847 = !DILocation(line: 618, column: 4, scope: !3844)
!3848 = !DILocation(line: 620, column: 26, scope: !3731)
!3849 = !DILocation(line: 620, column: 29, scope: !3731)
!3850 = !DILocation(line: 620, column: 17, scope: !3731)
!3851 = !DILocation(line: 620, column: 43, scope: !3731)
!3852 = !DILocation(line: 0, scope: !3731)
!3853 = !DILocation(line: 623, column: 14, scope: !3736)
!3854 = !DILocation(line: 626, column: 26, scope: !3735)
!3855 = !DILocation(line: 626, column: 37, scope: !3735)
!3856 = !DILocation(line: 0, scope: !3735)
!3857 = !DILocation(line: 634, column: 15, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3735, file: !381, line: 634, column: 9)
!3859 = !DILocation(line: 644, column: 9, scope: !3735)
!3860 = !DILocation(line: 649, column: 27, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3862, file: !381, line: 644, column: 23)
!3862 = distinct !DILexicalBlock(scope: !3735, file: !381, line: 644, column: 9)
!3863 = !DILocation(line: 649, column: 6, scope: !3861)
!3864 = !DILocation(line: 649, column: 25, scope: !3861)
!3865 = !DILocation(line: 650, column: 27, scope: !3861)
!3866 = !DILocation(line: 650, column: 6, scope: !3861)
!3867 = !DILocation(line: 650, column: 25, scope: !3861)
!3868 = !DILocation(line: 651, column: 10, scope: !3861)
!3869 = !DILocation(line: 653, column: 26, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3871, file: !381, line: 651, column: 17)
!3871 = distinct !DILexicalBlock(scope: !3861, file: !381, line: 651, column: 10)
!3872 = !DILocation(line: 654, column: 15, scope: !3870)
!3873 = !DILocation(line: 655, column: 6, scope: !3870)
!3874 = !DILocation(line: 656, column: 15, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3871, file: !381, line: 655, column: 13)
!3876 = !DILocation(line: 658, column: 16, scope: !3862)
!3877 = !DILocation(line: 663, column: 10, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3879, file: !381, line: 658, column: 23)
!3879 = distinct !DILexicalBlock(scope: !3862, file: !381, line: 658, column: 16)
!3880 = !DILocation(line: 664, column: 5, scope: !3878)
!3881 = !DILocation(line: 664, column: 16, scope: !3879)
!3882 = !DILocation(line: 669, column: 10, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3884, file: !381, line: 664, column: 28)
!3884 = distinct !DILexicalBlock(scope: !3879, file: !381, line: 664, column: 16)
!3885 = !DILocation(line: 670, column: 5, scope: !3883)
!3886 = !DILocation(line: 675, column: 13, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3884, file: !381, line: 670, column: 12)
!3888 = !DILocation(line: 675, column: 27, scope: !3887)
!3889 = !DILocation(line: 675, column: 10, scope: !3887)
!3890 = !DILocation(line: 678, column: 10, scope: !3735)
!3891 = !DILocation(line: 680, column: 8, scope: !3731)
!3892 = !DILocation(line: 683, column: 14, scope: !3732)
!3893 = !DILocation(line: 684, column: 12, scope: !3738)
!3894 = !DILocation(line: 0, scope: !3738)
!3895 = !DILocation(line: 686, column: 8, scope: !3738)
!3896 = !DILocation(line: 687, column: 5, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3898, file: !381, line: 686, column: 22)
!3898 = distinct !DILexicalBlock(scope: !3738, file: !381, line: 686, column: 8)
!3899 = !DILocation(line: 687, column: 17, scope: !3897)
!3900 = !DILocation(line: 688, column: 4, scope: !3897)
!3901 = !DILocation(line: 698, column: 18, scope: !3744)
!3902 = !DILocation(line: 0, scope: !3744)
!3903 = !DILocation(line: 700, column: 8, scope: !3744)
!3904 = !DILocation(line: 704, column: 6, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3906, file: !381, line: 703, column: 12)
!3906 = distinct !DILexicalBlock(scope: !3907, file: !381, line: 701, column: 9)
!3907 = distinct !DILexicalBlock(scope: !3908, file: !381, line: 700, column: 22)
!3908 = distinct !DILexicalBlock(scope: !3744, file: !381, line: 700, column: 8)
!3909 = !DILocation(line: 704, column: 24, scope: !3905)
!3910 = !DILocation(line: 706, column: 4, scope: !3907)
!3911 = !DILocation(line: 0, scope: !3739)
!3912 = !DILocation(line: 0, scope: !3725)
!3913 = !DILocation(line: 720, column: 6, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3675, file: !381, line: 720, column: 6)
!3915 = !DILocation(line: 720, column: 17, scope: !3914)
!3916 = !DILocation(line: 720, column: 31, scope: !3914)
!3917 = !DILocation(line: 720, column: 6, scope: !3675)
!3918 = !DILocation(line: 729, column: 6, scope: !3675)
!3919 = !DILocation(line: 730, column: 21, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3921, file: !381, line: 729, column: 20)
!3921 = distinct !DILexicalBlock(scope: !3675, file: !381, line: 729, column: 6)
!3922 = !DILocation(line: 730, column: 27, scope: !3920)
!3923 = !DILocation(line: 730, column: 3, scope: !3920)
!3924 = !DILocation(line: 737, column: 22, scope: !3675)
!3925 = !DILocation(line: 737, column: 20, scope: !3675)
!3926 = !DILocation(line: 0, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3675, file: !381, line: 739, column: 6)
!3928 = !DILocation(line: 745, column: 17, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !3927, file: !381, line: 743, column: 9)
!3930 = !DILocation(line: 745, column: 25, scope: !3929)
!3931 = !DILocation(line: 746, column: 17, scope: !3929)
!3932 = !DILocation(line: 746, column: 28, scope: !3929)
!3933 = !DILocation(line: 749, column: 29, scope: !3675)
!3934 = !DILocation(line: 749, column: 16, scope: !3675)
!3935 = !DILocation(line: 749, column: 27, scope: !3675)
!3936 = !DILocation(line: 756, column: 6, scope: !3751)
!3937 = !DILocation(line: 756, column: 6, scope: !3675)
!3938 = !DILocation(line: 757, column: 3, scope: !3749)
!3939 = !DILocation(line: 758, column: 10, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3747, file: !381, line: 758, column: 8)
!3941 = !DILocation(line: 758, column: 25, scope: !3940)
!3942 = !DILocation(line: 758, column: 8, scope: !3747)
!3943 = !DILocation(line: 0, scope: !3747)
!3944 = !DILocation(line: 765, column: 8, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3747, file: !381, line: 765, column: 8)
!3946 = !DILocation(line: 765, column: 19, scope: !3945)
!3947 = !DILocation(line: 765, column: 23, scope: !3945)
!3948 = !DILocation(line: 765, column: 8, scope: !3747)
!3949 = !DILocation(line: 762, column: 33, scope: !3747)
!3950 = !DILocation(line: 769, column: 8, scope: !3747)
!3951 = !DILocation(line: 769, column: 11, scope: !3747)
!3952 = !DILocation(line: 757, column: 27, scope: !3748)
!3953 = !DILocation(line: 757, column: 17, scope: !3748)
!3954 = distinct !{!3954, !3938, !3955}
!3955 = !DILocation(line: 770, column: 3, scope: !3749)
!3956 = !DILocation(line: 774, column: 16, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3958, file: !381, line: 774, column: 2)
!3958 = distinct !DILexicalBlock(scope: !3675, file: !381, line: 774, column: 2)
!3959 = !DILocation(line: 774, column: 2, scope: !3958)
!3960 = !DILocation(line: 776, column: 16, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3962, file: !381, line: 776, column: 7)
!3962 = distinct !DILexicalBlock(scope: !3957, file: !381, line: 774, column: 30)
!3963 = !DILocation(line: 776, column: 19, scope: !3961)
!3964 = !DILocation(line: 776, column: 34, scope: !3961)
!3965 = !DILocation(line: 776, column: 7, scope: !3962)
!3966 = !DILocation(line: 780, column: 7, scope: !3962)
!3967 = !DILocation(line: 782, column: 13, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3969, file: !381, line: 780, column: 19)
!3969 = distinct !DILexicalBlock(scope: !3962, file: !381, line: 780, column: 7)
!3970 = !DILocation(line: 782, column: 8, scope: !3968)
!3971 = !DILocation(line: 782, column: 11, scope: !3968)
!3972 = !DILocation(line: 783, column: 3, scope: !3968)
!3973 = !DILocation(line: 785, column: 26, scope: !3974)
!3974 = distinct !DILexicalBlock(scope: !3969, file: !381, line: 783, column: 10)
!3975 = !DILocation(line: 785, column: 41, scope: !3974)
!3976 = !DILocation(line: 785, column: 24, scope: !3974)
!3977 = !DILocation(line: 785, column: 8, scope: !3974)
!3978 = !DILocation(line: 787, column: 52, scope: !3974)
!3979 = !DILocation(line: 789, column: 11, scope: !3974)
!3980 = !DILocation(line: 789, column: 21, scope: !3974)
!3981 = !DILocation(line: 0, scope: !3969)
!3982 = !DILocation(line: 793, column: 7, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3962, file: !381, line: 793, column: 7)
!3984 = !DILocation(line: 793, column: 18, scope: !3983)
!3985 = !DILocation(line: 793, column: 22, scope: !3983)
!3986 = !DILocation(line: 793, column: 29, scope: !3983)
!3987 = !DILocation(line: 793, column: 7, scope: !3962)
!3988 = !DILocation(line: 797, column: 12, scope: !3962)
!3989 = !DILocation(line: 797, column: 7, scope: !3962)
!3990 = !DILocation(line: 797, column: 10, scope: !3962)
!3991 = !DILocation(line: 799, column: 3, scope: !3962)
!3992 = !DILocation(line: 800, column: 7, scope: !3962)
!3993 = !DILocation(line: 801, column: 2, scope: !3962)
!3994 = !DILocation(line: 338, column: 4, scope: !3675)
!3995 = !DILocation(line: 774, column: 26, scope: !3957)
!3996 = distinct !{!3996, !3959, !3997}
!3997 = !DILocation(line: 801, column: 2, scope: !3958)
!3998 = !DILocation(line: 808, column: 9, scope: !3675)
!3999 = !DILocation(line: 808, column: 2, scope: !3675)
!4000 = !DILocation(line: 813, column: 1, scope: !3675)
!4001 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !381, file: !381, line: 33, type: !4002, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4004)
!4002 = !DISubroutineType(types: !4003)
!4003 = !{!131, !337}
!4004 = !{!4005}
!4005 = !DILocalVariable(name: "addr", arg: 1, scope: !4001, file: !381, line: 33, type: !337)
!4006 = !DILocation(line: 0, scope: !4001)
!4007 = !DILocation(line: 41, column: 9, scope: !4001)
!4008 = !DILocation(line: 41, column: 2, scope: !4001)
!4009 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4010, file: !4010, line: 24, type: !4011, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4013)
!4010 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4011 = !DISubroutineType(types: !4012)
!4012 = !{!131, !13}
!4013 = !{!4014}
!4014 = !DILocalVariable(name: "addr", arg: 1, scope: !4009, file: !4010, line: 24, type: !13)
!4015 = !DILocation(line: 0, scope: !4009)
!4016 = !DILocation(line: 49, column: 30, scope: !4009)
!4017 = !DILocation(line: 49, column: 57, scope: !4009)
!4018 = !DILocation(line: 49, column: 2, scope: !4009)
!4019 = distinct !DISubprogram(name: "cbprintf_package", scope: !381, file: !381, line: 815, type: !4020, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4022)
!4020 = !DISubroutineType(types: !4021)
!4021 = !{!103, !102, !132, !108, !337, null}
!4022 = !{!4023, !4024, !4025, !4026, !4027, !4028}
!4023 = !DILocalVariable(name: "packaged", arg: 1, scope: !4019, file: !381, line: 815, type: !102)
!4024 = !DILocalVariable(name: "len", arg: 2, scope: !4019, file: !381, line: 815, type: !132)
!4025 = !DILocalVariable(name: "flags", arg: 3, scope: !4019, file: !381, line: 815, type: !108)
!4026 = !DILocalVariable(name: "format", arg: 4, scope: !4019, file: !381, line: 816, type: !337)
!4027 = !DILocalVariable(name: "ap", scope: !4019, file: !381, line: 818, type: !3678)
!4028 = !DILocalVariable(name: "ret", scope: !4019, file: !381, line: 819, type: !103)
!4029 = !DILocation(line: 0, scope: !4019)
!4030 = !DILocation(line: 818, column: 2, scope: !4019)
!4031 = !DILocation(line: 818, column: 10, scope: !4019)
!4032 = !DILocation(line: 821, column: 2, scope: !4019)
!4033 = !DILocation(line: 822, column: 8, scope: !4019)
!4034 = !DILocation(line: 823, column: 2, scope: !4019)
!4035 = !DILocation(line: 825, column: 1, scope: !4019)
!4036 = !DILocation(line: 824, column: 2, scope: !4019)
!4037 = distinct !DISubprogram(name: "cbpprintf_external", scope: !381, file: !381, line: 827, type: !4038, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4048)
!4038 = !DISubroutineType(types: !4039)
!4039 = !{!103, !4040, !4044, !102, !102}
!4040 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3711, line: 297, baseType: !4041)
!4041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4042, size: 32)
!4042 = !DISubroutineType(types: !4043)
!4043 = !{!103, null}
!4044 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3711, line: 328, baseType: !4045)
!4045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4046, size: 32)
!4046 = !DISubroutineType(types: !4047)
!4047 = !{!103, !4040, !102, !337, !3678}
!4048 = !{!4049, !4050, !4051, !4052, !4053, !4054, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4067}
!4049 = !DILocalVariable(name: "out", arg: 1, scope: !4037, file: !381, line: 827, type: !4040)
!4050 = !DILocalVariable(name: "formatter", arg: 2, scope: !4037, file: !381, line: 828, type: !4044)
!4051 = !DILocalVariable(name: "ctx", arg: 3, scope: !4037, file: !381, line: 829, type: !102)
!4052 = !DILocalVariable(name: "packaged", arg: 4, scope: !4037, file: !381, line: 829, type: !102)
!4053 = !DILocalVariable(name: "buf", scope: !4037, file: !381, line: 831, type: !379)
!4054 = !DILocalVariable(name: "hdr", scope: !4037, file: !381, line: 832, type: !4055)
!4055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4056, size: 32)
!4056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3711, line: 96, size: 64, elements: !4057)
!4057 = !{!4058, !4059}
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4056, file: !3711, line: 98, baseType: !3710, size: 32)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4056, file: !3711, line: 101, baseType: !277, size: 32, offset: 32)
!4060 = !DILocalVariable(name: "s", scope: !4037, file: !381, line: 833, type: !277)
!4061 = !DILocalVariable(name: "ps", scope: !4037, file: !381, line: 833, type: !378)
!4062 = !DILocalVariable(name: "i", scope: !4037, file: !381, line: 834, type: !32)
!4063 = !DILocalVariable(name: "args_size", scope: !4037, file: !381, line: 834, type: !32)
!4064 = !DILocalVariable(name: "s_nbr", scope: !4037, file: !381, line: 834, type: !32)
!4065 = !DILocalVariable(name: "ros_nbr", scope: !4037, file: !381, line: 834, type: !32)
!4066 = !DILocalVariable(name: "rws_nbr", scope: !4037, file: !381, line: 834, type: !32)
!4067 = !DILocalVariable(name: "s_idx", scope: !4037, file: !381, line: 834, type: !32)
!4068 = !DILocation(line: 0, scope: !4037)
!4069 = !DILocation(line: 836, column: 10, scope: !4070)
!4070 = distinct !DILexicalBlock(scope: !4037, file: !381, line: 836, column: 6)
!4071 = !DILocation(line: 836, column: 6, scope: !4037)
!4072 = !DILocation(line: 842, column: 28, scope: !4037)
!4073 = !DILocation(line: 842, column: 14, scope: !4037)
!4074 = !DILocation(line: 852, column: 16, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4076, file: !381, line: 852, column: 2)
!4076 = distinct !DILexicalBlock(scope: !4037, file: !381, line: 852, column: 2)
!4077 = !DILocation(line: 852, column: 2, scope: !4076)
!4078 = !DILocation(line: 841, column: 28, scope: !4037)
!4079 = !DILocation(line: 841, column: 14, scope: !4037)
!4080 = !DILocation(line: 841, column: 32, scope: !4037)
!4081 = !DILocation(line: 847, column: 19, scope: !4037)
!4082 = !DILocation(line: 843, column: 28, scope: !4037)
!4083 = !DILocation(line: 843, column: 14, scope: !4037)
!4084 = !DILocation(line: 847, column: 31, scope: !4037)
!4085 = !DILocation(line: 844, column: 28, scope: !4037)
!4086 = !DILocation(line: 844, column: 14, scope: !4037)
!4087 = !DILocation(line: 847, column: 45, scope: !4037)
!4088 = !DILocation(line: 847, column: 41, scope: !4037)
!4089 = !DILocation(line: 854, column: 24, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4075, file: !381, line: 852, column: 30)
!4091 = !DILocation(line: 854, column: 11, scope: !4090)
!4092 = !DILocation(line: 855, column: 30, scope: !4090)
!4093 = !DILocation(line: 855, column: 22, scope: !4090)
!4094 = !DILocation(line: 855, column: 8, scope: !4090)
!4095 = !DILocation(line: 857, column: 7, scope: !4090)
!4096 = !DILocation(line: 859, column: 8, scope: !4090)
!4097 = !DILocation(line: 859, column: 18, scope: !4090)
!4098 = !DILocation(line: 859, column: 5, scope: !4090)
!4099 = !DILocation(line: 852, column: 26, scope: !4075)
!4100 = distinct !{!4100, !4077, !4101}
!4101 = !DILocation(line: 860, column: 2, scope: !4076)
!4102 = !DILocation(line: 863, column: 6, scope: !4037)
!4103 = !DILocation(line: 866, column: 56, scope: !4037)
!4104 = !DILocation(line: 866, column: 9, scope: !4037)
!4105 = !DILocation(line: 866, column: 2, scope: !4037)
!4106 = !DILocation(line: 867, column: 1, scope: !4037)
!4107 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !381, file: !381, line: 179, type: !4108, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4110)
!4108 = !DISubroutineType(types: !4109)
!4109 = !{!103, !4040, !4044, !102, !337, !102}
!4110 = !{!4111, !4112, !4113, !4114, !4115, !4116}
!4111 = !DILocalVariable(name: "out", arg: 1, scope: !4107, file: !381, line: 179, type: !4040)
!4112 = !DILocalVariable(name: "formatter", arg: 2, scope: !4107, file: !381, line: 180, type: !4044)
!4113 = !DILocalVariable(name: "ctx", arg: 3, scope: !4107, file: !381, line: 181, type: !102)
!4114 = !DILocalVariable(name: "fmt", arg: 4, scope: !4107, file: !381, line: 182, type: !337)
!4115 = !DILocalVariable(name: "buf", arg: 5, scope: !4107, file: !381, line: 182, type: !102)
!4116 = !DILocalVariable(name: "u", scope: !4107, file: !381, line: 187, type: !4117)
!4117 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4107, file: !381, line: 184, size: 32, elements: !4118)
!4118 = !{!4119, !4120}
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4117, file: !381, line: 185, baseType: !3678, size: 32)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4117, file: !381, line: 186, baseType: !102, size: 32)
!4121 = !DILocation(line: 0, scope: !4107)
!4122 = !DILocation(line: 191, column: 9, scope: !4107)
!4123 = !DILocation(line: 191, column: 2, scope: !4107)
!4124 = distinct !DISubprogram(name: "is_ptr", scope: !381, file: !381, line: 881, type: !4125, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4127)
!4125 = !DISubroutineType(types: !4126)
!4126 = !{!131, !337, !103}
!4127 = !{!4128, !4129, !4130, !4131, !4132}
!4128 = !DILocalVariable(name: "fmt", arg: 1, scope: !4124, file: !381, line: 881, type: !337)
!4129 = !DILocalVariable(name: "n", arg: 2, scope: !4124, file: !381, line: 881, type: !103)
!4130 = !DILocalVariable(name: "c", scope: !4124, file: !381, line: 883, type: !278)
!4131 = !DILocalVariable(name: "mod", scope: !4124, file: !381, line: 884, type: !131)
!4132 = !DILocalVariable(name: "cnt", scope: !4124, file: !381, line: 885, type: !103)
!4133 = !DILocation(line: 0, scope: !4124)
!4134 = !DILocation(line: 887, column: 14, scope: !4124)
!4135 = !DILocation(line: 887, column: 22, scope: !4124)
!4136 = !DILocation(line: 887, column: 2, scope: !4124)
!4137 = !DILocation(line: 887, column: 18, scope: !4124)
!4138 = !DILocation(line: 888, column: 7, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4124, file: !381, line: 887, column: 31)
!4140 = !DILocation(line: 889, column: 12, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4142, file: !381, line: 889, column: 8)
!4142 = distinct !DILexicalBlock(scope: !4143, file: !381, line: 888, column: 12)
!4143 = distinct !DILexicalBlock(scope: !4139, file: !381, line: 888, column: 7)
!4144 = !DILocation(line: 889, column: 8, scope: !4142)
!4145 = !DILocation(line: 890, column: 11, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4147, file: !381, line: 890, column: 9)
!4147 = distinct !DILexicalBlock(scope: !4141, file: !381, line: 889, column: 18)
!4148 = !DILocation(line: 890, column: 9, scope: !4147)
!4149 = !DILocation(line: 892, column: 16, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4146, file: !381, line: 892, column: 16)
!4151 = !DILocation(line: 892, column: 16, scope: !4146)
!4152 = !DILocation(line: 895, column: 15, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4141, file: !381, line: 895, column: 15)
!4154 = !DILocation(line: 895, column: 15, scope: !4141)
!4155 = !DILocation(line: 900, column: 9, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4139, file: !381, line: 900, column: 7)
!4157 = !DILocation(line: 900, column: 7, scope: !4139)
!4158 = distinct !{!4158, !4136, !4159}
!4159 = !DILocation(line: 903, column: 2, scope: !4124)
!4160 = !DILocation(line: 906, column: 1, scope: !4124)
!4161 = distinct !DISubprogram(name: "is_fmt_spec", scope: !381, file: !381, line: 873, type: !4162, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4164)
!4162 = !DISubroutineType(types: !4163)
!4163 = !{!131, !278}
!4164 = !{!4165}
!4165 = !DILocalVariable(name: "c", arg: 1, scope: !4161, file: !381, line: 873, type: !278)
!4166 = !DILocation(line: 0, scope: !4161)
!4167 = !DILocation(line: 875, column: 19, scope: !4161)
!4168 = !DILocation(line: 875, column: 2, scope: !4161)
!4169 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !381, file: !381, line: 908, type: !4170, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4176)
!4170 = !DISubroutineType(types: !4171)
!4171 = !{!103, !102, !132, !4172, !102, !108, !2699, !132}
!4172 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3711, line: 308, baseType: !4173)
!4173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4174, size: 32)
!4174 = !DISubroutineType(types: !4175)
!4175 = !{!103, !13, !132, !102}
!4176 = !{!4177, !4178, !4179, !4180, !4181, !4182, !4183, !4184, !4185, !4186, !4187, !4188, !4189, !4190, !4191, !4192, !4194, !4195, !4196, !4197, !4198, !4204, !4207, !4208, !4209, !4211, !4214, !4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4227, !4230, !4231, !4232, !4233, !4234, !4235, !4237, !4240, !4241, !4242}
!4177 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4169, file: !381, line: 908, type: !102)
!4178 = !DILocalVariable(name: "in_len", arg: 2, scope: !4169, file: !381, line: 909, type: !132)
!4179 = !DILocalVariable(name: "cb", arg: 3, scope: !4169, file: !381, line: 910, type: !4172)
!4180 = !DILocalVariable(name: "ctx", arg: 4, scope: !4169, file: !381, line: 911, type: !102)
!4181 = !DILocalVariable(name: "flags", arg: 5, scope: !4169, file: !381, line: 912, type: !108)
!4182 = !DILocalVariable(name: "strl", arg: 6, scope: !4169, file: !381, line: 913, type: !2699)
!4183 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4169, file: !381, line: 914, type: !132)
!4184 = !DILocalVariable(name: "buf", scope: !4169, file: !381, line: 918, type: !379)
!4185 = !DILocalVariable(name: "buf32", scope: !4169, file: !381, line: 919, type: !969)
!4186 = !DILocalVariable(name: "args_size", scope: !4169, file: !381, line: 920, type: !32)
!4187 = !DILocalVariable(name: "ros_nbr", scope: !4169, file: !381, line: 920, type: !32)
!4188 = !DILocalVariable(name: "rws_nbr", scope: !4169, file: !381, line: 920, type: !32)
!4189 = !DILocalVariable(name: "fmt_present", scope: !4169, file: !381, line: 921, type: !131)
!4190 = !DILocalVariable(name: "rw_cpy", scope: !4169, file: !381, line: 922, type: !131)
!4191 = !DILocalVariable(name: "ro_cpy", scope: !4169, file: !381, line: 923, type: !131)
!4192 = !DILocalVariable(name: "in_desc", scope: !4169, file: !381, line: 924, type: !4193)
!4193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3714, size: 32)
!4194 = !DILocalVariable(name: "out_len", scope: !4169, file: !381, line: 960, type: !103)
!4195 = !DILocalVariable(name: "fmt", scope: !4169, file: !381, line: 965, type: !337)
!4196 = !DILocalVariable(name: "str_pos", scope: !4169, file: !381, line: 966, type: !379)
!4197 = !DILocalVariable(name: "strl_cnt", scope: !4169, file: !381, line: 967, type: !132)
!4198 = !DILocalVariable(name: "i", scope: !4199, file: !381, line: 973, type: !103)
!4199 = distinct !DILexicalBlock(scope: !4200, file: !381, line: 973, column: 4)
!4200 = distinct !DILexicalBlock(scope: !4201, file: !381, line: 972, column: 15)
!4201 = distinct !DILexicalBlock(scope: !4202, file: !381, line: 972, column: 7)
!4202 = distinct !DILexicalBlock(scope: !4203, file: !381, line: 970, column: 18)
!4203 = distinct !DILexicalBlock(scope: !4169, file: !381, line: 970, column: 6)
!4204 = !DILocalVariable(name: "str", scope: !4205, file: !381, line: 974, type: !337)
!4205 = distinct !DILexicalBlock(scope: !4206, file: !381, line: 973, column: 38)
!4206 = distinct !DILexicalBlock(scope: !4199, file: !381, line: 973, column: 4)
!4207 = !DILocalVariable(name: "len", scope: !4205, file: !381, line: 975, type: !103)
!4208 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4202, file: !381, line: 990, type: !131)
!4209 = !DILocalVariable(name: "i", scope: !4210, file: !381, line: 995, type: !103)
!4210 = distinct !DILexicalBlock(scope: !4202, file: !381, line: 995, column: 3)
!4211 = !DILocalVariable(name: "arg_idx", scope: !4212, file: !381, line: 996, type: !185)
!4212 = distinct !DILexicalBlock(scope: !4213, file: !381, line: 995, column: 37)
!4213 = distinct !DILexicalBlock(scope: !4210, file: !381, line: 995, column: 3)
!4214 = !DILocalVariable(name: "arg_pos", scope: !4212, file: !381, line: 997, type: !185)
!4215 = !DILocalVariable(name: "str", scope: !4212, file: !381, line: 998, type: !337)
!4216 = !DILocalVariable(name: "is_ro", scope: !4212, file: !381, line: 999, type: !131)
!4217 = !DILocalVariable(name: "len", scope: !4212, file: !381, line: 1000, type: !103)
!4218 = !DILocalVariable(name: "out_desc", scope: !4169, file: !381, line: 1038, type: !3714)
!4219 = !DILocalVariable(name: "cpy_str_pos", scope: !4169, file: !381, line: 1040, type: !3696)
!4220 = !DILocalVariable(name: "keep_str_pos", scope: !4169, file: !381, line: 1042, type: !3696)
!4221 = !DILocalVariable(name: "scpy_cnt", scope: !4169, file: !381, line: 1043, type: !185)
!4222 = !DILocalVariable(name: "keep_cnt", scope: !4169, file: !381, line: 1044, type: !185)
!4223 = !DILocalVariable(name: "dst", scope: !4169, file: !381, line: 1045, type: !379)
!4224 = !DILocalVariable(name: "rv", scope: !4169, file: !381, line: 1046, type: !103)
!4225 = !DILocalVariable(name: "i", scope: !4226, file: !381, line: 1074, type: !103)
!4226 = distinct !DILexicalBlock(scope: !4169, file: !381, line: 1074, column: 2)
!4227 = !DILocalVariable(name: "arg_idx", scope: !4228, file: !381, line: 1075, type: !185)
!4228 = distinct !DILexicalBlock(scope: !4229, file: !381, line: 1074, column: 36)
!4229 = distinct !DILexicalBlock(scope: !4226, file: !381, line: 1074, column: 2)
!4230 = !DILocalVariable(name: "arg_pos", scope: !4228, file: !381, line: 1076, type: !185)
!4231 = !DILocalVariable(name: "str", scope: !4228, file: !381, line: 1077, type: !337)
!4232 = !DILocalVariable(name: "is_ro", scope: !4228, file: !381, line: 1078, type: !131)
!4233 = !DILocalVariable(name: "in_desc_backup", scope: !4169, file: !381, line: 1114, type: !3714)
!4234 = !DILocalVariable(name: "strs_len", scope: !4169, file: !381, line: 1134, type: !132)
!4235 = !DILocalVariable(name: "i", scope: !4236, file: !381, line: 1143, type: !103)
!4236 = distinct !DILexicalBlock(scope: !4169, file: !381, line: 1143, column: 2)
!4237 = !DILocalVariable(name: "loc", scope: !4238, file: !381, line: 1144, type: !185)
!4238 = distinct !DILexicalBlock(scope: !4239, file: !381, line: 1143, column: 37)
!4239 = distinct !DILexicalBlock(scope: !4236, file: !381, line: 1143, column: 2)
!4240 = !DILocalVariable(name: "str", scope: !4238, file: !381, line: 1145, type: !337)
!4241 = !DILocalVariable(name: "str_len", scope: !4238, file: !381, line: 1146, type: !121)
!4242 = !DILabel(scope: !4243, name: "calculate_string_length", file: !381, line: 1021)
!4243 = distinct !DILexicalBlock(scope: !4244, file: !381, line: 1020, column: 56)
!4244 = distinct !DILexicalBlock(scope: !4245, file: !381, line: 1020, column: 15)
!4245 = distinct !DILexicalBlock(scope: !4212, file: !381, line: 1014, column: 8)
!4246 = !DILocation(line: 0, scope: !4169)
!4247 = !DILocation(line: 919, column: 20, scope: !4169)
!4248 = !DILocation(line: 921, column: 27, scope: !4169)
!4249 = !DILocation(line: 921, column: 21, scope: !4169)
!4250 = !DILocation(line: 926, column: 18, scope: !4169)
!4251 = !DILocation(line: 926, column: 11, scope: !4169)
!4252 = !DILocation(line: 926, column: 34, scope: !4169)
!4253 = !DILocation(line: 931, column: 21, scope: !4169)
!4254 = !DILocation(line: 931, column: 12, scope: !4169)
!4255 = !DILocation(line: 932, column: 11, scope: !4169)
!4256 = !DILocation(line: 932, column: 19, scope: !4169)
!4257 = !DILocation(line: 938, column: 21, scope: !4169)
!4258 = !DILocation(line: 938, column: 12, scope: !4169)
!4259 = !DILocation(line: 939, column: 19, scope: !4169)
!4260 = !DILocation(line: 939, column: 23, scope: !4169)
!4261 = !DILocation(line: 946, column: 14, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4169, file: !381, line: 946, column: 6)
!4263 = !DILocation(line: 947, column: 7, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4265, file: !381, line: 947, column: 7)
!4265 = distinct !DILexicalBlock(scope: !4262, file: !381, line: 946, column: 26)
!4266 = !DILocation(line: 947, column: 7, scope: !4265)
!4267 = !DILocation(line: 948, column: 4, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4264, file: !381, line: 947, column: 11)
!4269 = !DILocation(line: 949, column: 3, scope: !4268)
!4270 = !DILocation(line: 958, column: 23, scope: !4169)
!4271 = !DILocation(line: 958, column: 14, scope: !4169)
!4272 = !DILocation(line: 958, column: 27, scope: !4169)
!4273 = !DILocation(line: 965, column: 41, scope: !4169)
!4274 = !DILocation(line: 965, column: 20, scope: !4169)
!4275 = !DILocation(line: 966, column: 22, scope: !4169)
!4276 = !DILocation(line: 970, column: 9, scope: !4203)
!4277 = !DILocation(line: 970, column: 6, scope: !4169)
!4278 = !DILocation(line: 972, column: 7, scope: !4202)
!4279 = !DILocation(line: 0, scope: !4199)
!4280 = !DILocation(line: 973, column: 4, scope: !4199)
!4281 = !DILocation(line: 974, column: 46, scope: !4205)
!4282 = !DILocation(line: 974, column: 40, scope: !4205)
!4283 = !DILocation(line: 974, column: 23, scope: !4205)
!4284 = !DILocation(line: 0, scope: !4205)
!4285 = !DILocation(line: 975, column: 15, scope: !4205)
!4286 = !DILocation(line: 978, column: 14, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4205, file: !381, line: 978, column: 9)
!4288 = !DILocation(line: 979, column: 25, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4287, file: !381, line: 978, column: 38)
!4290 = !DILocation(line: 979, column: 19, scope: !4289)
!4291 = !DILocation(line: 979, column: 6, scope: !4289)
!4292 = !DILocation(line: 979, column: 23, scope: !4289)
!4293 = !DILocation(line: 980, column: 5, scope: !4289)
!4294 = !DILocation(line: 981, column: 13, scope: !4205)
!4295 = !DILocation(line: 982, column: 12, scope: !4205)
!4296 = !DILocation(line: 973, column: 34, scope: !4206)
!4297 = !DILocation(line: 973, column: 22, scope: !4206)
!4298 = distinct !{!4298, !4280, !4299}
!4299 = !DILocation(line: 983, column: 4, scope: !4199)
!4300 = !DILocation(line: 985, column: 16, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4302, file: !381, line: 985, column: 8)
!4302 = distinct !DILexicalBlock(scope: !4201, file: !381, line: 984, column: 10)
!4303 = !DILocation(line: 967, column: 9, scope: !4169)
!4304 = !DILocation(line: 971, column: 11, scope: !4202)
!4305 = !DILocation(line: 0, scope: !4202)
!4306 = !DILocation(line: 0, scope: !4210)
!4307 = !DILocation(line: 995, column: 21, scope: !4213)
!4308 = !DILocation(line: 995, column: 3, scope: !4210)
!4309 = !DILocation(line: 990, column: 34, scope: !4202)
!4310 = !DILocation(line: 990, column: 26, scope: !4202)
!4311 = !DILocation(line: 996, column: 30, scope: !4212)
!4312 = !DILocation(line: 0, scope: !4212)
!4313 = !DILocation(line: 997, column: 30, scope: !4212)
!4314 = !DILocation(line: 997, column: 22, scope: !4212)
!4315 = !DILocation(line: 998, column: 39, scope: !4212)
!4316 = !DILocation(line: 998, column: 22, scope: !4212)
!4317 = !DILocation(line: 999, column: 17, scope: !4212)
!4318 = !DILocation(line: 1002, column: 20, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !4212, file: !381, line: 1002, column: 8)
!4320 = !DILocation(line: 996, column: 22, scope: !4212)
!4321 = !DILocation(line: 1002, column: 35, scope: !4319)
!4322 = !DILocation(line: 1002, column: 23, scope: !4319)
!4323 = !DILocation(line: 1002, column: 8, scope: !4212)
!4324 = !DILocation(line: 1003, column: 5, scope: !4325)
!4325 = distinct !DILexicalBlock(scope: !4326, file: !381, line: 1003, column: 5)
!4326 = distinct !DILexicalBlock(scope: !4327, file: !381, line: 1003, column: 5)
!4327 = distinct !DILexicalBlock(scope: !4328, file: !381, line: 1003, column: 5)
!4328 = distinct !DILexicalBlock(scope: !4329, file: !381, line: 1003, column: 5)
!4329 = distinct !DILexicalBlock(scope: !4319, file: !381, line: 1002, column: 45)
!4330 = !DILocation(line: 1010, column: 13, scope: !4329)
!4331 = !DILocation(line: 1011, column: 5, scope: !4329)
!4332 = !DILocation(line: 1014, column: 8, scope: !4212)
!4333 = !DILocation(line: 1015, column: 9, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4245, file: !381, line: 1014, column: 15)
!4335 = !DILocation(line: 1018, column: 14, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4337, file: !381, line: 1017, column: 12)
!4337 = distinct !DILexicalBlock(scope: !4334, file: !381, line: 1015, column: 9)
!4338 = !DILocation(line: 1020, column: 4, scope: !4334)
!4339 = !DILocation(line: 1020, column: 15, scope: !4245)
!4340 = !DILocation(line: 1021, column: 1, scope: !4243)
!4341 = !DILocation(line: 1022, column: 11, scope: !4243)
!4342 = !DILocation(line: 1025, column: 14, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4243, file: !381, line: 1025, column: 9)
!4344 = !DILocation(line: 1026, column: 25, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4343, file: !381, line: 1025, column: 38)
!4346 = !DILocation(line: 1026, column: 19, scope: !4345)
!4347 = !DILocation(line: 1026, column: 6, scope: !4345)
!4348 = !DILocation(line: 1026, column: 23, scope: !4345)
!4349 = !DILocation(line: 1027, column: 5, scope: !4345)
!4350 = !DILocation(line: 1031, column: 21, scope: !4243)
!4351 = !DILocation(line: 1031, column: 13, scope: !4243)
!4352 = !DILocation(line: 1032, column: 4, scope: !4243)
!4353 = !DILocation(line: 995, column: 33, scope: !4213)
!4354 = distinct !{!4354, !4308, !4355}
!4355 = !DILocation(line: 1033, column: 3, scope: !4210)
!4356 = !DILocation(line: 1040, column: 10, scope: !4169)
!4357 = !DILocation(line: 1042, column: 10, scope: !4169)
!4358 = !DILocation(line: 1052, column: 6, scope: !4169)
!4359 = !DILocation(line: 1055, column: 9, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4361, file: !381, line: 1052, column: 14)
!4361 = distinct !DILexicalBlock(scope: !4169, file: !381, line: 1052, column: 6)
!4362 = !DILocation(line: 1056, column: 2, scope: !4360)
!4363 = !DILocation(line: 1056, column: 21, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4361, file: !381, line: 1056, column: 13)
!4365 = !DILocation(line: 1066, column: 3, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4367, file: !381, line: 1065, column: 11)
!4367 = distinct !DILexicalBlock(scope: !4169, file: !381, line: 1065, column: 6)
!4368 = !DILocation(line: 1067, column: 2, scope: !4366)
!4369 = !DILocation(line: 1068, column: 10, scope: !4169)
!4370 = !DILocation(line: 0, scope: !4226)
!4371 = !DILocation(line: 1074, column: 20, scope: !4229)
!4372 = !DILocation(line: 1074, column: 2, scope: !4226)
!4373 = !DILocation(line: 1110, column: 24, scope: !4169)
!4374 = !DILocation(line: 1053, column: 12, scope: !4360)
!4375 = !DILocation(line: 1054, column: 12, scope: !4360)
!4376 = !DILocation(line: 1108, column: 30, scope: !4169)
!4377 = !DILocation(line: 1108, column: 40, scope: !4169)
!4378 = !DILocation(line: 1108, column: 38, scope: !4169)
!4379 = !DILocation(line: 1109, column: 31, scope: !4169)
!4380 = !DILocation(line: 1109, column: 24, scope: !4169)
!4381 = !DILocation(line: 1110, column: 31, scope: !4169)
!4382 = !DILocation(line: 1114, column: 31, scope: !4169)
!4383 = !DILocation(line: 1114, column: 48, scope: !4169)
!4384 = !DILocation(line: 1115, column: 13, scope: !4169)
!4385 = !DILocation(line: 1118, column: 7, scope: !4169)
!4386 = !DILocation(line: 1119, column: 9, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4169, file: !381, line: 1119, column: 6)
!4388 = !DILocation(line: 1119, column: 6, scope: !4169)
!4389 = !DILocation(line: 1075, column: 29, scope: !4228)
!4390 = !DILocation(line: 1075, column: 21, scope: !4228)
!4391 = !DILocation(line: 0, scope: !4228)
!4392 = !DILocation(line: 1076, column: 29, scope: !4228)
!4393 = !DILocation(line: 1076, column: 21, scope: !4228)
!4394 = !DILocation(line: 1077, column: 38, scope: !4228)
!4395 = !DILocation(line: 1077, column: 21, scope: !4228)
!4396 = !DILocation(line: 1078, column: 16, scope: !4228)
!4397 = !DILocation(line: 1080, column: 19, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4228, file: !381, line: 1080, column: 7)
!4399 = !DILocation(line: 1080, column: 34, scope: !4398)
!4400 = !DILocation(line: 1080, column: 22, scope: !4398)
!4401 = !DILocation(line: 1080, column: 7, scope: !4228)
!4402 = !DILocation(line: 1084, column: 7, scope: !4228)
!4403 = !DILocation(line: 1085, column: 8, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4405, file: !381, line: 1084, column: 14)
!4405 = distinct !DILexicalBlock(scope: !4228, file: !381, line: 1084, column: 7)
!4406 = !DILocation(line: 1087, column: 25, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4408, file: !381, line: 1085, column: 49)
!4408 = distinct !DILexicalBlock(scope: !4404, file: !381, line: 1085, column: 8)
!4409 = !DILocation(line: 1088, column: 4, scope: !4407)
!4410 = !DILocation(line: 1088, column: 15, scope: !4408)
!4411 = !DILocation(line: 1090, column: 26, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4413, file: !381, line: 1088, column: 61)
!4413 = distinct !DILexicalBlock(scope: !4408, file: !381, line: 1088, column: 15)
!4414 = !DILocation(line: 1091, column: 4, scope: !4412)
!4415 = !DILocation(line: 1095, column: 8, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4405, file: !381, line: 1094, column: 10)
!4417 = !DILocation(line: 1097, column: 25, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4419, file: !381, line: 1095, column: 49)
!4419 = distinct !DILexicalBlock(scope: !4416, file: !381, line: 1095, column: 8)
!4420 = !DILocation(line: 1098, column: 4, scope: !4418)
!4421 = !DILocation(line: 1100, column: 26, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4419, file: !381, line: 1098, column: 11)
!4423 = !DILocation(line: 1100, column: 5, scope: !4422)
!4424 = !DILocation(line: 1100, column: 30, scope: !4422)
!4425 = !DILocation(line: 1101, column: 26, scope: !4422)
!4426 = !DILocation(line: 0, scope: !4405)
!4427 = !DILocation(line: 1074, column: 32, scope: !4229)
!4428 = distinct !{!4428, !4372, !4429}
!4429 = !DILocation(line: 1104, column: 2, scope: !4226)
!4430 = !DILocation(line: 1124, column: 13, scope: !4169)
!4431 = !DILocation(line: 1127, column: 10, scope: !4169)
!4432 = !DILocation(line: 1127, column: 7, scope: !4169)
!4433 = !DILocation(line: 1128, column: 9, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4169, file: !381, line: 1128, column: 6)
!4435 = !DILocation(line: 1128, column: 6, scope: !4169)
!4436 = !DILocation(line: 1134, column: 27, scope: !4169)
!4437 = !DILocation(line: 1136, column: 7, scope: !4169)
!4438 = !DILocation(line: 1137, column: 9, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4169, file: !381, line: 1137, column: 6)
!4440 = !DILocation(line: 1137, column: 6, scope: !4169)
!4441 = !DILocation(line: 1131, column: 10, scope: !4169)
!4442 = !DILocation(line: 1140, column: 10, scope: !4169)
!4443 = !DILocation(line: 0, scope: !4236)
!4444 = !DILocation(line: 1143, column: 20, scope: !4239)
!4445 = !DILocation(line: 1143, column: 2, scope: !4236)
!4446 = !DILocation(line: 1144, column: 3, scope: !4238)
!4447 = !DILocation(line: 1144, column: 17, scope: !4238)
!4448 = !DILocation(line: 0, scope: !4238)
!4449 = !DILocation(line: 1144, column: 11, scope: !4238)
!4450 = !DILocation(line: 1145, column: 38, scope: !4238)
!4451 = !DILocation(line: 1145, column: 21, scope: !4238)
!4452 = !DILocation(line: 1146, column: 22, scope: !4238)
!4453 = !DILocation(line: 1146, column: 29, scope: !4238)
!4454 = !DILocation(line: 1148, column: 8, scope: !4238)
!4455 = !DILocation(line: 1149, column: 10, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4238, file: !381, line: 1149, column: 7)
!4457 = !DILocation(line: 1149, column: 7, scope: !4238)
!4458 = !DILocation(line: 1154, column: 8, scope: !4238)
!4459 = !DILocation(line: 1155, column: 10, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4238, file: !381, line: 1155, column: 7)
!4461 = !DILocation(line: 1155, column: 7, scope: !4238)
!4462 = !DILocation(line: 1159, column: 2, scope: !4239)
!4463 = !DILocation(line: 1152, column: 11, scope: !4238)
!4464 = !DILocation(line: 1158, column: 11, scope: !4238)
!4465 = !DILocation(line: 1143, column: 33, scope: !4239)
!4466 = distinct !{!4466, !4445, !4467}
!4467 = !DILocation(line: 1159, column: 2, scope: !4236)
!4468 = !DILocation(line: 1162, column: 8, scope: !4169)
!4469 = !DILocation(line: 1164, column: 2, scope: !4169)
!4470 = !DILocation(line: 1165, column: 1, scope: !4169)
!4471 = distinct !DISubprogram(name: "get_package_len", scope: !381, file: !381, line: 196, type: !4472, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4474)
!4472 = !DISubroutineType(types: !4473)
!4473 = !{!132, !102}
!4474 = !{!4475, !4476, !4477, !4478, !4479, !4480, !4481}
!4475 = !DILocalVariable(name: "packaged", arg: 1, scope: !4471, file: !381, line: 196, type: !102)
!4476 = !DILocalVariable(name: "buf", scope: !4471, file: !381, line: 200, type: !379)
!4477 = !DILocalVariable(name: "start", scope: !4471, file: !381, line: 201, type: !379)
!4478 = !DILocalVariable(name: "args_size", scope: !4471, file: !381, line: 202, type: !32)
!4479 = !DILocalVariable(name: "s_nbr", scope: !4471, file: !381, line: 202, type: !32)
!4480 = !DILocalVariable(name: "ros_nbr", scope: !4471, file: !381, line: 202, type: !32)
!4481 = !DILocalVariable(name: "i", scope: !4482, file: !381, line: 215, type: !103)
!4482 = distinct !DILexicalBlock(scope: !4471, file: !381, line: 215, column: 2)
!4483 = !DILocation(line: 0, scope: !4471)
!4484 = !DILocation(line: 204, column: 14, scope: !4471)
!4485 = !DILocation(line: 204, column: 21, scope: !4471)
!4486 = !DILocation(line: 205, column: 14, scope: !4471)
!4487 = !DILocation(line: 206, column: 14, scope: !4471)
!4488 = !DILocation(line: 209, column: 6, scope: !4471)
!4489 = !DILocation(line: 212, column: 6, scope: !4471)
!4490 = !DILocation(line: 0, scope: !4482)
!4491 = !DILocation(line: 215, column: 20, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4482, file: !381, line: 215, column: 2)
!4493 = !DILocation(line: 215, column: 2, scope: !4482)
!4494 = !DILocation(line: 220, column: 33, scope: !4471)
!4495 = !DILocation(line: 220, column: 2, scope: !4471)
!4496 = !DILocation(line: 216, column: 6, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4492, file: !381, line: 215, column: 34)
!4498 = !DILocation(line: 217, column: 10, scope: !4497)
!4499 = !DILocation(line: 217, column: 36, scope: !4497)
!4500 = !DILocation(line: 217, column: 7, scope: !4497)
!4501 = !DILocation(line: 215, column: 30, scope: !4492)
!4502 = distinct !{!4502, !4493, !4503}
!4503 = !DILocation(line: 218, column: 2, scope: !4482)
!4504 = distinct !DISubprogram(name: "append_string", scope: !381, file: !381, line: 223, type: !4505, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4507)
!4505 = !DISubroutineType(types: !4506)
!4506 = !{!103, !4172, !102, !337, !121}
!4507 = !{!4508, !4509, !4510, !4511}
!4508 = !DILocalVariable(name: "cb", arg: 1, scope: !4504, file: !381, line: 223, type: !4172)
!4509 = !DILocalVariable(name: "ctx", arg: 2, scope: !4504, file: !381, line: 223, type: !102)
!4510 = !DILocalVariable(name: "str", arg: 3, scope: !4504, file: !381, line: 223, type: !337)
!4511 = !DILocalVariable(name: "strl", arg: 4, scope: !4504, file: !381, line: 223, type: !121)
!4512 = !DILocation(line: 0, scope: !4504)
!4513 = !DILocation(line: 225, column: 9, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4504, file: !381, line: 225, column: 6)
!4515 = !DILocation(line: 225, column: 6, scope: !4504)
!4516 = !DILocation(line: 226, column: 14, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4514, file: !381, line: 225, column: 18)
!4518 = !DILocation(line: 226, column: 12, scope: !4517)
!4519 = !DILocation(line: 226, column: 3, scope: !4517)
!4520 = !DILocation(line: 229, column: 14, scope: !4504)
!4521 = !DILocation(line: 229, column: 9, scope: !4504)
!4522 = !DILocation(line: 229, column: 27, scope: !4504)
!4523 = !DILocation(line: 229, column: 39, scope: !4504)
!4524 = !DILocation(line: 230, column: 17, scope: !4504)
!4525 = !DILocation(line: 230, column: 9, scope: !4504)
!4526 = !DILocation(line: 230, column: 2, scope: !4504)
!4527 = !DILocation(line: 231, column: 1, scope: !4504)
!4528 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !394, file: !394, line: 45, type: !396, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4529)
!4529 = !{!4530}
!4530 = !DILocalVariable(name: "c", arg: 1, scope: !4528, file: !394, line: 45, type: !103)
!4531 = !DILocation(line: 0, scope: !4528)
!4532 = !DILocation(line: 50, column: 2, scope: !4528)
!4533 = distinct !DISubprogram(name: "__printk_hook_install", scope: !394, file: !394, line: 63, type: !4534, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4536)
!4534 = !DISubroutineType(types: !4535)
!4535 = !{null, !395}
!4536 = !{!4537}
!4537 = !DILocalVariable(name: "fn", arg: 1, scope: !4533, file: !394, line: 63, type: !395)
!4538 = !DILocation(line: 0, scope: !4533)
!4539 = !DILocation(line: 65, column: 12, scope: !4533)
!4540 = !DILocation(line: 66, column: 1, scope: !4533)
!4541 = distinct !DISubprogram(name: "__printk_get_hook", scope: !394, file: !394, line: 76, type: !4542, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !251)
!4542 = !DISubroutineType(types: !4543)
!4543 = !{!102}
!4544 = !DILocation(line: 78, column: 9, scope: !4541)
!4545 = !DILocation(line: 78, column: 2, scope: !4541)
!4546 = distinct !DISubprogram(name: "vprintk", scope: !394, file: !394, line: 113, type: !4547, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4555)
!4547 = !DISubroutineType(types: !4548)
!4548 = !{null, !337, !4549}
!4549 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3679, line: 99, baseType: !4550)
!4550 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3679, line: 40, baseType: !4551)
!4551 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !394, baseType: !4552)
!4552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4553)
!4553 = !{!4554}
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4552, file: !394, line: 79, baseType: !102, size: 32)
!4555 = !{!4556, !4557, !4558}
!4556 = !DILocalVariable(name: "fmt", arg: 1, scope: !4546, file: !394, line: 113, type: !337)
!4557 = !DILocalVariable(name: "ap", arg: 2, scope: !4546, file: !394, line: 113, type: !4549)
!4558 = !DILocalVariable(name: "ctx", scope: !4559, file: !394, line: 121, type: !4561)
!4559 = distinct !DILexicalBlock(scope: !4560, file: !394, line: 120, column: 27)
!4560 = distinct !DILexicalBlock(scope: !4546, file: !394, line: 120, column: 6)
!4561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !394, line: 81, size: 32, elements: !4562)
!4562 = !{!4563, !4564}
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4561, file: !394, line: 85, baseType: !32, size: 32)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4561, file: !394, line: 86, baseType: !4565, offset: 32)
!4565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, elements: !2697)
!4566 = !DILocation(line: 0, scope: !4546)
!4567 = !DILocation(line: 148, column: 3, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4560, file: !394, line: 138, column: 9)
!4569 = !DILocation(line: 155, column: 1, scope: !4546)
!4570 = distinct !DISubprogram(name: "char_out", scope: !394, file: !394, line: 107, type: !4571, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4573)
!4571 = !DISubroutineType(types: !4572)
!4572 = !{!103, !103, !102}
!4573 = !{!4574, !4575}
!4574 = !DILocalVariable(name: "c", arg: 1, scope: !4570, file: !394, line: 107, type: !103)
!4575 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4570, file: !394, line: 107, type: !102)
!4576 = !DILocation(line: 0, scope: !4570)
!4577 = !DILocation(line: 110, column: 9, scope: !4570)
!4578 = !DILocation(line: 110, column: 2, scope: !4570)
!4579 = distinct !DISubprogram(name: "cbvprintf", scope: !3711, file: !3711, line: 739, type: !4580, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4582)
!4580 = !DISubroutineType(types: !4581)
!4581 = !{!103, !4040, !102, !337, !4549}
!4582 = !{!4583, !4584, !4585, !4586}
!4583 = !DILocalVariable(name: "out", arg: 1, scope: !4579, file: !3711, line: 739, type: !4040)
!4584 = !DILocalVariable(name: "ctx", arg: 2, scope: !4579, file: !3711, line: 739, type: !102)
!4585 = !DILocalVariable(name: "format", arg: 3, scope: !4579, file: !3711, line: 739, type: !337)
!4586 = !DILocalVariable(name: "ap", arg: 4, scope: !4579, file: !3711, line: 739, type: !4549)
!4587 = !DILocation(line: 0, scope: !4579)
!4588 = !DILocation(line: 741, column: 9, scope: !4579)
!4589 = !DILocation(line: 741, column: 2, scope: !4579)
!4590 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !394, file: !394, line: 157, type: !4591, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4593)
!4591 = !DISubroutineType(types: !4592)
!4592 = !{null, !277, !132}
!4593 = !{!4594, !4595, !4596}
!4594 = !DILocalVariable(name: "c", arg: 1, scope: !4590, file: !394, line: 157, type: !277)
!4595 = !DILocalVariable(name: "n", arg: 2, scope: !4590, file: !394, line: 157, type: !132)
!4596 = !DILocalVariable(name: "i", scope: !4590, file: !394, line: 159, type: !132)
!4597 = !DILocation(line: 0, scope: !4590)
!4598 = !DILocation(line: 164, column: 16, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4600, file: !394, line: 164, column: 2)
!4600 = distinct !DILexicalBlock(scope: !4590, file: !394, line: 164, column: 2)
!4601 = !DILocation(line: 164, column: 2, scope: !4600)
!4602 = !DILocation(line: 165, column: 3, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4599, file: !394, line: 164, column: 26)
!4604 = !DILocation(line: 165, column: 13, scope: !4603)
!4605 = !DILocation(line: 164, column: 22, scope: !4599)
!4606 = distinct !{!4606, !4601, !4607}
!4607 = !DILocation(line: 166, column: 2, scope: !4600)
!4608 = !DILocation(line: 171, column: 1, scope: !4590)
!4609 = distinct !DISubprogram(name: "printk", scope: !394, file: !394, line: 203, type: !4610, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4612)
!4610 = !DISubroutineType(types: !4611)
!4611 = !{null, !337, null}
!4612 = !{!4613, !4614}
!4613 = !DILocalVariable(name: "fmt", arg: 1, scope: !4609, file: !394, line: 203, type: !337)
!4614 = !DILocalVariable(name: "ap", scope: !4609, file: !394, line: 205, type: !4549)
!4615 = !DILocation(line: 0, scope: !4609)
!4616 = !DILocation(line: 205, column: 2, scope: !4609)
!4617 = !DILocation(line: 205, column: 10, scope: !4609)
!4618 = !DILocation(line: 207, column: 2, scope: !4609)
!4619 = !DILocation(line: 209, column: 2, scope: !4609)
!4620 = !DILocation(line: 211, column: 2, scope: !4609)
!4621 = !DILocation(line: 212, column: 1, scope: !4609)
!4622 = distinct !DISubprogram(name: "snprintk", scope: !394, file: !394, line: 239, type: !4623, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4625)
!4623 = !DISubroutineType(types: !4624)
!4624 = !{!103, !277, !132, !337, null}
!4625 = !{!4626, !4627, !4628, !4629, !4630}
!4626 = !DILocalVariable(name: "str", arg: 1, scope: !4622, file: !394, line: 239, type: !277)
!4627 = !DILocalVariable(name: "size", arg: 2, scope: !4622, file: !394, line: 239, type: !132)
!4628 = !DILocalVariable(name: "fmt", arg: 3, scope: !4622, file: !394, line: 239, type: !337)
!4629 = !DILocalVariable(name: "ap", scope: !4622, file: !394, line: 241, type: !4549)
!4630 = !DILocalVariable(name: "ret", scope: !4622, file: !394, line: 242, type: !103)
!4631 = !DILocation(line: 0, scope: !4622)
!4632 = !DILocation(line: 241, column: 2, scope: !4622)
!4633 = !DILocation(line: 241, column: 10, scope: !4622)
!4634 = !DILocation(line: 244, column: 2, scope: !4622)
!4635 = !DILocation(line: 245, column: 8, scope: !4622)
!4636 = !DILocation(line: 246, column: 2, scope: !4622)
!4637 = !DILocation(line: 249, column: 1, scope: !4622)
!4638 = !DILocation(line: 248, column: 2, scope: !4622)
!4639 = distinct !DISubprogram(name: "vsnprintk", scope: !394, file: !394, line: 251, type: !4640, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4642)
!4640 = !DISubroutineType(types: !4641)
!4641 = !{!103, !277, !132, !337, !4549}
!4642 = !{!4643, !4644, !4645, !4646, !4647}
!4643 = !DILocalVariable(name: "str", arg: 1, scope: !4639, file: !394, line: 251, type: !277)
!4644 = !DILocalVariable(name: "size", arg: 2, scope: !4639, file: !394, line: 251, type: !132)
!4645 = !DILocalVariable(name: "fmt", arg: 3, scope: !4639, file: !394, line: 251, type: !337)
!4646 = !DILocalVariable(name: "ap", arg: 4, scope: !4639, file: !394, line: 251, type: !4549)
!4647 = !DILocalVariable(name: "ctx", scope: !4639, file: !394, line: 253, type: !4648)
!4648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !394, line: 217, size: 96, elements: !4649)
!4649 = !{!4650, !4651, !4652}
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4648, file: !394, line: 218, baseType: !277, size: 32)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4648, file: !394, line: 219, baseType: !103, size: 32, offset: 32)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4648, file: !394, line: 220, baseType: !103, size: 32, offset: 64)
!4653 = !DILocation(line: 0, scope: !4639)
!4654 = !DILocation(line: 253, column: 2, scope: !4639)
!4655 = !DILocation(line: 253, column: 21, scope: !4639)
!4656 = !DILocation(line: 253, column: 27, scope: !4639)
!4657 = !DILocation(line: 255, column: 2, scope: !4639)
!4658 = !DILocation(line: 257, column: 10, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4639, file: !394, line: 257, column: 6)
!4660 = !DILocation(line: 257, column: 22, scope: !4659)
!4661 = !DILocation(line: 257, column: 16, scope: !4659)
!4662 = !DILocation(line: 257, column: 6, scope: !4639)
!4663 = !DILocation(line: 258, column: 3, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4659, file: !394, line: 257, column: 27)
!4665 = !DILocation(line: 258, column: 18, scope: !4664)
!4666 = !DILocation(line: 259, column: 2, scope: !4664)
!4667 = !DILocation(line: 262, column: 1, scope: !4639)
!4668 = !DILocation(line: 261, column: 2, scope: !4639)
!4669 = distinct !DISubprogram(name: "str_out", scope: !394, file: !394, line: 223, type: !4670, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4673)
!4670 = !DISubroutineType(types: !4671)
!4671 = !{!103, !103, !4672}
!4672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4648, size: 32)
!4673 = !{!4674, !4675}
!4674 = !DILocalVariable(name: "c", arg: 1, scope: !4669, file: !394, line: 223, type: !103)
!4675 = !DILocalVariable(name: "ctx", arg: 2, scope: !4669, file: !394, line: 223, type: !4672)
!4676 = !DILocation(line: 0, scope: !4669)
!4677 = !DILocation(line: 225, column: 11, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4669, file: !394, line: 225, column: 6)
!4679 = !DILocation(line: 225, column: 15, scope: !4678)
!4680 = !DILocation(line: 0, scope: !4678)
!4681 = !DILocation(line: 225, column: 23, scope: !4678)
!4682 = !DILocation(line: 225, column: 45, scope: !4678)
!4683 = !DILocation(line: 225, column: 37, scope: !4678)
!4684 = !DILocation(line: 225, column: 6, scope: !4669)
!4685 = !DILocation(line: 226, column: 8, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4678, file: !394, line: 225, column: 50)
!4687 = !DILocation(line: 226, column: 13, scope: !4686)
!4688 = !DILocation(line: 227, column: 3, scope: !4686)
!4689 = !DILocation(line: 230, column: 29, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4669, file: !394, line: 230, column: 6)
!4691 = !DILocation(line: 230, column: 17, scope: !4690)
!4692 = !DILocation(line: 230, column: 6, scope: !4669)
!4693 = !DILocation(line: 231, column: 22, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4690, file: !394, line: 230, column: 34)
!4695 = !DILocation(line: 231, column: 3, scope: !4694)
!4696 = !DILocation(line: 231, column: 26, scope: !4694)
!4697 = !DILocation(line: 232, column: 2, scope: !4694)
!4698 = !DILocation(line: 233, column: 28, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4690, file: !394, line: 232, column: 9)
!4700 = !DILocation(line: 233, column: 22, scope: !4699)
!4701 = !DILocation(line: 233, column: 3, scope: !4699)
!4702 = !DILocation(line: 233, column: 26, scope: !4699)
!4703 = !DILocation(line: 237, column: 1, scope: !4669)
!4704 = distinct !DISubprogram(name: "z_thread_entry", scope: !4705, file: !4705, line: 30, type: !4706, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2665, retainedNodes: !4708)
!4705 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4706 = !DISubroutineType(types: !4707)
!4707 = !{null, !321, !102, !102, !102}
!4708 = !{!4709, !4710, !4711, !4712}
!4709 = !DILocalVariable(name: "entry", arg: 1, scope: !4704, file: !4705, line: 30, type: !321)
!4710 = !DILocalVariable(name: "p1", arg: 2, scope: !4704, file: !4705, line: 31, type: !102)
!4711 = !DILocalVariable(name: "p2", arg: 3, scope: !4704, file: !4705, line: 31, type: !102)
!4712 = !DILocalVariable(name: "p3", arg: 4, scope: !4704, file: !4705, line: 31, type: !102)
!4713 = !DILocation(line: 0, scope: !4704)
!4714 = !DILocation(line: 36, column: 2, scope: !4704)
!4715 = !DILocation(line: 38, column: 17, scope: !4704)
!4716 = !DILocation(line: 38, column: 2, scope: !4704)
!4717 = !DILocation(line: 45, column: 2, scope: !4704)
!4718 = distinct !DISubprogram(name: "k_current_get", scope: !137, file: !137, line: 530, type: !4719, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2665, retainedNodes: !251)
!4719 = !DISubroutineType(types: !4720)
!4720 = !{!4721}
!4721 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !4722)
!4722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4723, size: 32)
!4723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !4724)
!4724 = !{!4725, !4783, !4795, !4796, !4797, !4798, !4804, !4817}
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4723, file: !163, line: 247, baseType: !4726, size: 384)
!4726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !4727)
!4727 = !{!4728, !4752, !4759, !4760, !4761, !4770, !4771, !4772}
!4728 = !DIDerivedType(tag: DW_TAG_member, scope: !4726, file: !163, line: 60, baseType: !4729, size: 64)
!4729 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4726, file: !163, line: 60, size: 64, elements: !4730)
!4730 = !{!4731, !4746}
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4729, file: !163, line: 61, baseType: !4732, size: 64)
!4732 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !4733)
!4733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !4734)
!4734 = !{!4735, !4741}
!4735 = !DIDerivedType(tag: DW_TAG_member, scope: !4733, file: !146, line: 38, baseType: !4736, size: 32)
!4736 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4733, file: !146, line: 38, size: 32, elements: !4737)
!4737 = !{!4738, !4740}
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4736, file: !146, line: 39, baseType: !4739, size: 32)
!4739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4733, size: 32)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4736, file: !146, line: 40, baseType: !4739, size: 32)
!4741 = !DIDerivedType(tag: DW_TAG_member, scope: !4733, file: !146, line: 42, baseType: !4742, size: 32, offset: 32)
!4742 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4733, file: !146, line: 42, size: 32, elements: !4743)
!4743 = !{!4744, !4745}
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4742, file: !146, line: 43, baseType: !4739, size: 32)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4742, file: !146, line: 44, baseType: !4739, size: 32)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4729, file: !163, line: 62, baseType: !4747, size: 64)
!4747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !4748)
!4748 = !{!4749}
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4747, file: !175, line: 50, baseType: !4750, size: 64)
!4750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4751, size: 64, elements: !180)
!4751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4747, size: 32)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4726, file: !163, line: 68, baseType: !4753, size: 32, offset: 64)
!4753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4754, size: 32)
!4754 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !4755)
!4755 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !4756)
!4756 = !{!4757}
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4755, file: !141, line: 232, baseType: !4758, size: 64)
!4758 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !4733)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4726, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4726, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!4761 = !DIDerivedType(tag: DW_TAG_member, scope: !4726, file: !163, line: 90, baseType: !4762, size: 16, offset: 112)
!4762 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4726, file: !163, line: 90, size: 16, elements: !4763)
!4763 = !{!4764, !4769}
!4764 = !DIDerivedType(tag: DW_TAG_member, scope: !4762, file: !163, line: 91, baseType: !4765, size: 16)
!4765 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4762, file: !163, line: 91, size: 16, elements: !4766)
!4766 = !{!4767, !4768}
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4765, file: !163, line: 96, baseType: !195, size: 8)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4765, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4762, file: !163, line: 100, baseType: !121, size: 16)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4726, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4726, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4726, file: !163, line: 131, baseType: !4773, size: 192, offset: 192)
!4773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !4774)
!4774 = !{!4775, !4776, !4782}
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4773, file: !141, line: 245, baseType: !4732, size: 64)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4773, file: !141, line: 246, baseType: !4777, size: 32, offset: 64)
!4777 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !4778)
!4778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4779, size: 32)
!4779 = !DISubroutineType(types: !4780)
!4780 = !{null, !4781}
!4781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4773, size: 32)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4773, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4723, file: !163, line: 250, baseType: !4784, size: 288, offset: 384)
!4784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !4785)
!4785 = !{!4786, !4787, !4788, !4789, !4790, !4791, !4792, !4793, !4794}
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4784, file: !214, line: 26, baseType: !108, size: 32)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4784, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4784, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4784, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4784, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4784, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4784, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4784, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4784, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4723, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4723, file: !163, line: 256, baseType: !4754, size: 64, offset: 704)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4723, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4723, file: !163, line: 300, baseType: !4799, size: 96, offset: 800)
!4799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !4800)
!4800 = !{!4801, !4802, !4803}
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4799, file: !163, line: 153, baseType: !22, size: 32)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4799, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4799, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4723, file: !163, line: 325, baseType: !4805, size: 32, offset: 896)
!4805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4806, size: 32)
!4806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !4807)
!4807 = !{!4808, !4814, !4815}
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4806, file: !137, line: 5074, baseType: !4809, size: 96)
!4809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !4810)
!4810 = !{!4811, !4812, !4813}
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4809, file: !240, line: 57, baseType: !243, size: 32)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4809, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4809, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4806, file: !137, line: 5075, baseType: !4754, size: 64, offset: 96)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4806, file: !137, line: 5076, baseType: !4816, offset: 160)
!4816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4723, file: !163, line: 343, baseType: !4818, size: 64, offset: 928)
!4818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !4819)
!4819 = !{!4820, !4821}
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4818, file: !214, line: 63, baseType: !108, size: 32)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4818, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!4822 = !DILocation(line: 535, column: 9, scope: !4718)
!4823 = !DILocation(line: 535, column: 2, scope: !4718)
!4824 = distinct !DISubprogram(name: "k_thread_abort", scope: !3640, file: !3640, line: 188, type: !4825, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2665, retainedNodes: !4827)
!4825 = !DISubroutineType(types: !4826)
!4826 = !{null, !4721}
!4827 = !{!4828}
!4828 = !DILocalVariable(name: "thread", arg: 1, scope: !4824, file: !3640, line: 188, type: !4721)
!4829 = !DILocation(line: 0, scope: !4824)
!4830 = !DILocation(line: 197, column: 2, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4824, file: !3640, line: 197, column: 2)
!4832 = !{i64 2154148234}
!4833 = !DILocation(line: 198, column: 2, scope: !4824)
!4834 = !DILocation(line: 199, column: 1, scope: !4824)
!4835 = distinct !DISubprogram(name: "z_current_get", scope: !3640, file: !3640, line: 173, type: !4719, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2665, retainedNodes: !251)
!4836 = !DILocation(line: 180, column: 2, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4835, file: !3640, line: 180, column: 2)
!4838 = !{i64 2154148166}
!4839 = !DILocation(line: 181, column: 9, scope: !4835)
!4840 = !DILocation(line: 181, column: 2, scope: !4835)
!4841 = distinct !DISubprogram(name: "sys_heap_free", scope: !4842, file: !4842, line: 163, type: !4843, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !4851)
!4842 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4843 = !DISubroutineType(types: !4844)
!4844 = !{null, !4845, !102}
!4845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4846, size: 32)
!4846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !4847)
!4847 = !{!4848, !4849, !4850}
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4846, file: !240, line: 57, baseType: !2684, size: 32)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4846, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4846, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!4851 = !{!4852, !4853, !4854, !4855}
!4852 = !DILocalVariable(name: "heap", arg: 1, scope: !4841, file: !4842, line: 163, type: !4845)
!4853 = !DILocalVariable(name: "mem", arg: 2, scope: !4841, file: !4842, line: 163, type: !102)
!4854 = !DILocalVariable(name: "h", scope: !4841, file: !4842, line: 168, type: !2684)
!4855 = !DILocalVariable(name: "c", scope: !4841, file: !4842, line: 169, type: !2689)
!4856 = !DILocation(line: 0, scope: !4841)
!4857 = !DILocation(line: 165, column: 10, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4841, file: !4842, line: 165, column: 6)
!4859 = !DILocation(line: 165, column: 6, scope: !4841)
!4860 = !DILocation(line: 168, column: 27, scope: !4841)
!4861 = !DILocation(line: 169, column: 16, scope: !4841)
!4862 = !{i32 0, i32 536870912}
!4863 = !DILocation(line: 187, column: 2, scope: !4841)
!4864 = !DILocation(line: 197, column: 2, scope: !4841)
!4865 = !DILocation(line: 198, column: 1, scope: !4841)
!4866 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !4842, file: !4842, line: 157, type: !4867, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !4869)
!4867 = !DISubroutineType(types: !4868)
!4868 = !{!2689, !2684, !102}
!4869 = !{!4870, !4871, !4872, !4873}
!4870 = !DILocalVariable(name: "h", arg: 1, scope: !4866, file: !4842, line: 157, type: !2684)
!4871 = !DILocalVariable(name: "p", arg: 2, scope: !4866, file: !4842, line: 157, type: !102)
!4872 = !DILocalVariable(name: "mem", scope: !4866, file: !4842, line: 159, type: !379)
!4873 = !DILocalVariable(name: "base", scope: !4866, file: !4842, line: 159, type: !379)
!4874 = !DILocation(line: 0, scope: !4866)
!4875 = !DILocation(line: 159, column: 39, scope: !4866)
!4876 = !DILocation(line: 160, column: 14, scope: !4866)
!4877 = !DILocation(line: 160, column: 38, scope: !4866)
!4878 = !DILocation(line: 160, column: 46, scope: !4866)
!4879 = !DILocation(line: 160, column: 2, scope: !4866)
!4880 = distinct !DISubprogram(name: "set_chunk_used", scope: !2671, file: !2671, line: 147, type: !4881, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !4883)
!4881 = !DISubroutineType(types: !4882)
!4882 = !{null, !2684, !2689, !131}
!4883 = !{!4884, !4885, !4886, !4887, !4888}
!4884 = !DILocalVariable(name: "h", arg: 1, scope: !4880, file: !2671, line: 147, type: !2684)
!4885 = !DILocalVariable(name: "c", arg: 2, scope: !4880, file: !2671, line: 147, type: !2689)
!4886 = !DILocalVariable(name: "used", arg: 3, scope: !4880, file: !2671, line: 147, type: !131)
!4887 = !DILocalVariable(name: "buf", scope: !4880, file: !2671, line: 149, type: !2678)
!4888 = !DILocalVariable(name: "cmem", scope: !4880, file: !2671, line: 150, type: !102)
!4889 = !DILocation(line: 0, scope: !4880)
!4890 = !DILocation(line: 149, column: 22, scope: !4880)
!4891 = !DILocation(line: 0, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4893, file: !2671, line: 159, column: 7)
!4893 = distinct !DILexicalBlock(scope: !4894, file: !2671, line: 158, column: 9)
!4894 = distinct !DILexicalBlock(scope: !4880, file: !2671, line: 152, column: 6)
!4895 = !DILocation(line: 159, column: 7, scope: !4893)
!4896 = !DILocation(line: 165, column: 1, scope: !4880)
!4897 = distinct !DISubprogram(name: "free_chunk", scope: !4842, file: !4842, line: 133, type: !4898, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !4900)
!4898 = !DISubroutineType(types: !4899)
!4899 = !{null, !2684, !2689}
!4900 = !{!4901, !4902}
!4901 = !DILocalVariable(name: "h", arg: 1, scope: !4897, file: !4842, line: 133, type: !2684)
!4902 = !DILocalVariable(name: "c", arg: 2, scope: !4897, file: !4842, line: 133, type: !2689)
!4903 = !DILocation(line: 0, scope: !4897)
!4904 = !DILocation(line: 136, column: 21, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4897, file: !4842, line: 136, column: 6)
!4906 = !DILocation(line: 136, column: 7, scope: !4905)
!4907 = !DILocation(line: 136, column: 6, scope: !4897)
!4908 = !DILocation(line: 137, column: 3, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4905, file: !4842, line: 136, column: 41)
!4910 = !DILocation(line: 138, column: 22, scope: !4909)
!4911 = !DILocation(line: 138, column: 3, scope: !4909)
!4912 = !DILocation(line: 139, column: 2, scope: !4909)
!4913 = !DILocation(line: 142, column: 21, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4897, file: !4842, line: 142, column: 6)
!4915 = !{i32 -65535, i32 536903678}
!4916 = !DILocation(line: 142, column: 7, scope: !4914)
!4917 = !DILocation(line: 142, column: 6, scope: !4897)
!4918 = !DILocation(line: 143, column: 3, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4914, file: !4842, line: 142, column: 40)
!4920 = !DILocation(line: 144, column: 19, scope: !4919)
!4921 = !DILocation(line: 144, column: 3, scope: !4919)
!4922 = !DILocation(line: 145, column: 7, scope: !4919)
!4923 = !DILocation(line: 146, column: 2, scope: !4919)
!4924 = !DILocation(line: 148, column: 2, scope: !4897)
!4925 = !DILocation(line: 149, column: 1, scope: !4897)
!4926 = distinct !DISubprogram(name: "right_chunk", scope: !2671, file: !2671, line: 204, type: !4927, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !4929)
!4927 = !DISubroutineType(types: !4928)
!4928 = !{!2689, !2684, !2689}
!4929 = !{!4930, !4931}
!4930 = !DILocalVariable(name: "h", arg: 1, scope: !4926, file: !2671, line: 204, type: !2684)
!4931 = !DILocalVariable(name: "c", arg: 2, scope: !4926, file: !2671, line: 204, type: !2689)
!4932 = !DILocation(line: 0, scope: !4926)
!4933 = !DILocation(line: 206, column: 13, scope: !4926)
!4934 = !DILocation(line: 206, column: 11, scope: !4926)
!4935 = !DILocation(line: 206, column: 2, scope: !4926)
!4936 = distinct !DISubprogram(name: "chunk_used", scope: !2671, file: !2671, line: 137, type: !4937, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !4939)
!4937 = !DISubroutineType(types: !4938)
!4938 = !{!131, !2684, !2689}
!4939 = !{!4940, !4941}
!4940 = !DILocalVariable(name: "h", arg: 1, scope: !4936, file: !2671, line: 137, type: !2684)
!4941 = !DILocalVariable(name: "c", arg: 2, scope: !4936, file: !2671, line: 137, type: !2689)
!4942 = !DILocation(line: 0, scope: !4936)
!4943 = !DILocation(line: 139, column: 9, scope: !4936)
!4944 = !DILocation(line: 139, column: 42, scope: !4936)
!4945 = !DILocation(line: 139, column: 2, scope: !4936)
!4946 = distinct !DISubprogram(name: "free_list_remove", scope: !4842, file: !4842, line: 60, type: !4898, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !4947)
!4947 = !{!4948, !4949, !4950}
!4948 = !DILocalVariable(name: "h", arg: 1, scope: !4946, file: !4842, line: 60, type: !2684)
!4949 = !DILocalVariable(name: "c", arg: 2, scope: !4946, file: !4842, line: 60, type: !2689)
!4950 = !DILocalVariable(name: "bidx", scope: !4951, file: !4842, line: 63, type: !103)
!4951 = distinct !DILexicalBlock(scope: !4952, file: !4842, line: 62, column: 31)
!4952 = distinct !DILexicalBlock(scope: !4946, file: !4842, line: 62, column: 6)
!4953 = !DILocation(line: 0, scope: !4946)
!4954 = !DILocation(line: 63, column: 28, scope: !4951)
!4955 = !{i32 0, i32 32768}
!4956 = !DILocation(line: 63, column: 14, scope: !4951)
!4957 = !DILocation(line: 0, scope: !4951)
!4958 = !DILocation(line: 64, column: 3, scope: !4951)
!4959 = !DILocation(line: 66, column: 1, scope: !4946)
!4960 = distinct !DISubprogram(name: "merge_chunks", scope: !4842, file: !4842, line: 125, type: !4961, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !4963)
!4961 = !DISubroutineType(types: !4962)
!4962 = !{null, !2684, !2689, !2689}
!4963 = !{!4964, !4965, !4966, !4967}
!4964 = !DILocalVariable(name: "h", arg: 1, scope: !4960, file: !4842, line: 125, type: !2684)
!4965 = !DILocalVariable(name: "lc", arg: 2, scope: !4960, file: !4842, line: 125, type: !2689)
!4966 = !DILocalVariable(name: "rc", arg: 3, scope: !4960, file: !4842, line: 125, type: !2689)
!4967 = !DILocalVariable(name: "newsz", scope: !4960, file: !4842, line: 127, type: !4968)
!4968 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2671, line: 62, baseType: !108)
!4969 = !DILocation(line: 0, scope: !4960)
!4970 = !DILocation(line: 127, column: 20, scope: !4960)
!4971 = !DILocation(line: 127, column: 40, scope: !4960)
!4972 = !DILocation(line: 127, column: 38, scope: !4960)
!4973 = !DILocation(line: 129, column: 2, scope: !4960)
!4974 = !DILocation(line: 130, column: 25, scope: !4960)
!4975 = !DILocation(line: 130, column: 2, scope: !4960)
!4976 = !DILocation(line: 131, column: 1, scope: !4960)
!4977 = distinct !DISubprogram(name: "left_chunk", scope: !2671, file: !2671, line: 199, type: !4927, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !4978)
!4978 = !{!4979, !4980}
!4979 = !DILocalVariable(name: "h", arg: 1, scope: !4977, file: !2671, line: 199, type: !2684)
!4980 = !DILocalVariable(name: "c", arg: 2, scope: !4977, file: !2671, line: 199, type: !2689)
!4981 = !DILocation(line: 0, scope: !4977)
!4982 = !DILocation(line: 201, column: 13, scope: !4977)
!4983 = !DILocation(line: 201, column: 11, scope: !4977)
!4984 = !DILocation(line: 201, column: 2, scope: !4977)
!4985 = distinct !DISubprogram(name: "free_list_add", scope: !4842, file: !4842, line: 98, type: !4898, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !4986)
!4986 = !{!4987, !4988, !4989}
!4987 = !DILocalVariable(name: "h", arg: 1, scope: !4985, file: !4842, line: 98, type: !2684)
!4988 = !DILocalVariable(name: "c", arg: 2, scope: !4985, file: !4842, line: 98, type: !2689)
!4989 = !DILocalVariable(name: "bidx", scope: !4990, file: !4842, line: 101, type: !103)
!4990 = distinct !DILexicalBlock(scope: !4991, file: !4842, line: 100, column: 31)
!4991 = distinct !DILexicalBlock(scope: !4985, file: !4842, line: 100, column: 6)
!4992 = !DILocation(line: 0, scope: !4985)
!4993 = !DILocation(line: 101, column: 28, scope: !4990)
!4994 = !DILocation(line: 101, column: 14, scope: !4990)
!4995 = !DILocation(line: 0, scope: !4990)
!4996 = !DILocation(line: 102, column: 3, scope: !4990)
!4997 = !DILocation(line: 104, column: 1, scope: !4985)
!4998 = distinct !DISubprogram(name: "chunk_size", scope: !2671, file: !2671, line: 142, type: !4999, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5001)
!4999 = !DISubroutineType(types: !5000)
!5000 = !{!4968, !2684, !2689}
!5001 = !{!5002, !5003}
!5002 = !DILocalVariable(name: "h", arg: 1, scope: !4998, file: !2671, line: 142, type: !2684)
!5003 = !DILocalVariable(name: "c", arg: 2, scope: !4998, file: !2671, line: 142, type: !2689)
!5004 = !DILocation(line: 0, scope: !4998)
!5005 = !DILocation(line: 144, column: 9, scope: !4998)
!5006 = !DILocation(line: 144, column: 42, scope: !4998)
!5007 = !DILocation(line: 144, column: 2, scope: !4998)
!5008 = distinct !DISubprogram(name: "bucket_idx", scope: !2671, file: !2671, line: 250, type: !5009, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5011)
!5009 = !DISubroutineType(types: !5010)
!5010 = !{!103, !2684, !4968}
!5011 = !{!5012, !5013, !5014}
!5012 = !DILocalVariable(name: "h", arg: 1, scope: !5008, file: !2671, line: 250, type: !2684)
!5013 = !DILocalVariable(name: "sz", arg: 2, scope: !5008, file: !2671, line: 250, type: !4968)
!5014 = !DILocalVariable(name: "usable_sz", scope: !5008, file: !2671, line: 252, type: !32)
!5015 = !DILocation(line: 0, scope: !5008)
!5016 = !DILocation(line: 252, column: 32, scope: !5008)
!5017 = !DILocation(line: 252, column: 30, scope: !5008)
!5018 = !DILocation(line: 252, column: 50, scope: !5008)
!5019 = !DILocation(line: 253, column: 14, scope: !5008)
!5020 = !{i32 0, i32 33}
!5021 = !DILocation(line: 253, column: 12, scope: !5008)
!5022 = !DILocation(line: 253, column: 2, scope: !5008)
!5023 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !4842, file: !4842, line: 68, type: !5024, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5026)
!5024 = !DISubroutineType(types: !5025)
!5025 = !{null, !2684, !2689, !103}
!5026 = !{!5027, !5028, !5029, !5030, !5032, !5035}
!5027 = !DILocalVariable(name: "h", arg: 1, scope: !5023, file: !4842, line: 68, type: !2684)
!5028 = !DILocalVariable(name: "c", arg: 2, scope: !5023, file: !4842, line: 68, type: !2689)
!5029 = !DILocalVariable(name: "bidx", arg: 3, scope: !5023, file: !4842, line: 68, type: !103)
!5030 = !DILocalVariable(name: "b", scope: !5023, file: !4842, line: 70, type: !5031)
!5031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2694, size: 32)
!5032 = !DILocalVariable(name: "second", scope: !5033, file: !4842, line: 84, type: !2689)
!5033 = distinct !DILexicalBlock(scope: !5034, file: !4842, line: 80, column: 9)
!5034 = distinct !DILexicalBlock(scope: !5023, file: !4842, line: 72, column: 6)
!5035 = !DILocalVariable(name: "first", scope: !5033, file: !4842, line: 85, type: !2689)
!5036 = !DILocation(line: 0, scope: !5023)
!5037 = !DILocation(line: 72, column: 9, scope: !5034)
!5038 = !DILocation(line: 72, column: 14, scope: !5034)
!5039 = !DILocation(line: 72, column: 6, scope: !5023)
!5040 = !DILocation(line: 76, column: 23, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5034, file: !4842, line: 72, column: 21)
!5042 = !DILocation(line: 76, column: 6, scope: !5041)
!5043 = !DILocation(line: 76, column: 20, scope: !5041)
!5044 = !DILocation(line: 77, column: 11, scope: !5041)
!5045 = !DILocation(line: 78, column: 3, scope: !5041)
!5046 = !DILocation(line: 79, column: 3, scope: !5041)
!5047 = !DILocation(line: 80, column: 2, scope: !5041)
!5048 = !DILocation(line: 0, scope: !5033)
!5049 = !DILocation(line: 85, column: 21, scope: !5033)
!5050 = !{i32 0, i32 65536}
!5051 = !DILocation(line: 87, column: 3, scope: !5033)
!5052 = !DILocation(line: 88, column: 3, scope: !5033)
!5053 = !DILocation(line: 89, column: 3, scope: !5033)
!5054 = !DILocation(line: 90, column: 3, scope: !5033)
!5055 = !DILocation(line: 96, column: 1, scope: !5023)
!5056 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2671, file: !2671, line: 187, type: !4961, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5057)
!5057 = !{!5058, !5059, !5060}
!5058 = !DILocalVariable(name: "h", arg: 1, scope: !5056, file: !2671, line: 187, type: !2684)
!5059 = !DILocalVariable(name: "c", arg: 2, scope: !5056, file: !2671, line: 187, type: !2689)
!5060 = !DILocalVariable(name: "prev", arg: 3, scope: !5056, file: !2671, line: 188, type: !2689)
!5061 = !DILocation(line: 0, scope: !5056)
!5062 = !DILocation(line: 190, column: 2, scope: !5056)
!5063 = !DILocation(line: 191, column: 1, scope: !5056)
!5064 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2671, file: !2671, line: 193, type: !4961, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5065)
!5065 = !{!5066, !5067, !5068}
!5066 = !DILocalVariable(name: "h", arg: 1, scope: !5064, file: !2671, line: 193, type: !2684)
!5067 = !DILocalVariable(name: "c", arg: 2, scope: !5064, file: !2671, line: 193, type: !2689)
!5068 = !DILocalVariable(name: "next", arg: 3, scope: !5064, file: !2671, line: 194, type: !2689)
!5069 = !DILocation(line: 0, scope: !5064)
!5070 = !DILocation(line: 196, column: 2, scope: !5064)
!5071 = !DILocation(line: 197, column: 1, scope: !5064)
!5072 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2671, file: !2671, line: 177, type: !4927, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5073)
!5073 = !{!5074, !5075}
!5074 = !DILocalVariable(name: "h", arg: 1, scope: !5072, file: !2671, line: 177, type: !2684)
!5075 = !DILocalVariable(name: "c", arg: 2, scope: !5072, file: !2671, line: 177, type: !2689)
!5076 = !DILocation(line: 0, scope: !5072)
!5077 = !DILocation(line: 179, column: 9, scope: !5072)
!5078 = !DILocation(line: 179, column: 2, scope: !5072)
!5079 = distinct !DISubprogram(name: "chunk_field", scope: !2671, file: !2671, line: 107, type: !5080, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5082)
!5080 = !DISubroutineType(types: !5081)
!5081 = !{!2689, !2684, !2689, !2670}
!5082 = !{!5083, !5084, !5085, !5086, !5087}
!5083 = !DILocalVariable(name: "h", arg: 1, scope: !5079, file: !2671, line: 107, type: !2684)
!5084 = !DILocalVariable(name: "c", arg: 2, scope: !5079, file: !2671, line: 107, type: !2689)
!5085 = !DILocalVariable(name: "f", arg: 3, scope: !5079, file: !2671, line: 108, type: !2670)
!5086 = !DILocalVariable(name: "buf", scope: !5079, file: !2671, line: 110, type: !2678)
!5087 = !DILocalVariable(name: "cmem", scope: !5079, file: !2671, line: 111, type: !102)
!5088 = !DILocation(line: 0, scope: !5079)
!5089 = !DILocation(line: 110, column: 22, scope: !5079)
!5090 = !DILocation(line: 111, column: 15, scope: !5079)
!5091 = !DILocation(line: 116, column: 11, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5093, file: !2671, line: 115, column: 9)
!5093 = distinct !DILexicalBlock(scope: !5079, file: !2671, line: 113, column: 6)
!5094 = !DILocation(line: 116, column: 10, scope: !5092)
!5095 = !DILocation(line: 118, column: 1, scope: !5079)
!5096 = distinct !DISubprogram(name: "chunk_buf", scope: !2671, file: !2671, line: 101, type: !5097, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5099)
!5097 = !DISubroutineType(types: !5098)
!5098 = !{!2678, !2684}
!5099 = !{!5100}
!5100 = !DILocalVariable(name: "h", arg: 1, scope: !5096, file: !2671, line: 101, type: !2684)
!5101 = !DILocation(line: 0, scope: !5096)
!5102 = !DILocation(line: 104, column: 9, scope: !5096)
!5103 = !DILocation(line: 104, column: 2, scope: !5096)
!5104 = distinct !DISubprogram(name: "chunk_set", scope: !2671, file: !2671, line: 120, type: !5105, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5107)
!5105 = !DISubroutineType(types: !5106)
!5106 = !{null, !2684, !2689, !2670, !2689}
!5107 = !{!5108, !5109, !5110, !5111, !5112, !5113}
!5108 = !DILocalVariable(name: "h", arg: 1, scope: !5104, file: !2671, line: 120, type: !2684)
!5109 = !DILocalVariable(name: "c", arg: 2, scope: !5104, file: !2671, line: 120, type: !2689)
!5110 = !DILocalVariable(name: "f", arg: 3, scope: !5104, file: !2671, line: 121, type: !2670)
!5111 = !DILocalVariable(name: "val", arg: 4, scope: !5104, file: !2671, line: 121, type: !2689)
!5112 = !DILocalVariable(name: "buf", scope: !5104, file: !2671, line: 125, type: !2678)
!5113 = !DILocalVariable(name: "cmem", scope: !5104, file: !2671, line: 126, type: !102)
!5114 = !DILocation(line: 0, scope: !5104)
!5115 = !DILocation(line: 125, column: 22, scope: !5104)
!5116 = !DILocation(line: 126, column: 15, scope: !5104)
!5117 = !DILocation(line: 133, column: 27, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5119, file: !2671, line: 131, column: 9)
!5119 = distinct !DILexicalBlock(scope: !5104, file: !2671, line: 128, column: 6)
!5120 = !DILocation(line: 133, column: 4, scope: !5118)
!5121 = !DILocation(line: 133, column: 3, scope: !5118)
!5122 = !DILocation(line: 133, column: 25, scope: !5118)
!5123 = !DILocation(line: 135, column: 1, scope: !5104)
!5124 = distinct !DISubprogram(name: "min_chunk_size", scope: !2671, file: !2671, line: 240, type: !5125, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5127)
!5125 = !DISubroutineType(types: !5126)
!5126 = !{!4968, !2684}
!5127 = !{!5128}
!5128 = !DILocalVariable(name: "h", arg: 1, scope: !5124, file: !2671, line: 240, type: !2684)
!5129 = !DILocation(line: 0, scope: !5124)
!5130 = !DILocation(line: 242, column: 9, scope: !5124)
!5131 = !DILocation(line: 242, column: 2, scope: !5124)
!5132 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2671, file: !2671, line: 235, type: !5133, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5135)
!5133 = !DISubroutineType(types: !5134)
!5134 = !{!4968, !2684, !132}
!5135 = !{!5136, !5137}
!5136 = !DILocalVariable(name: "h", arg: 1, scope: !5132, file: !2671, line: 235, type: !2684)
!5137 = !DILocalVariable(name: "bytes", arg: 2, scope: !5132, file: !2671, line: 235, type: !132)
!5138 = !DILocation(line: 0, scope: !5132)
!5139 = !DILocation(line: 237, column: 39, scope: !5132)
!5140 = !DILocation(line: 237, column: 9, scope: !5132)
!5141 = !DILocation(line: 237, column: 2, scope: !5132)
!5142 = distinct !DISubprogram(name: "chunksz", scope: !2671, file: !2671, line: 230, type: !5143, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5145)
!5143 = !DISubroutineType(types: !5144)
!5144 = !{!4968, !132}
!5145 = !{!5146}
!5146 = !DILocalVariable(name: "bytes", arg: 1, scope: !5142, file: !2671, line: 230, type: !132)
!5147 = !DILocation(line: 0, scope: !5142)
!5148 = !DILocation(line: 232, column: 29, scope: !5142)
!5149 = !DILocation(line: 232, column: 35, scope: !5142)
!5150 = !DILocation(line: 232, column: 2, scope: !5142)
!5151 = distinct !DISubprogram(name: "set_chunk_size", scope: !2671, file: !2671, line: 172, type: !5152, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5154)
!5152 = !DISubroutineType(types: !5153)
!5153 = !{null, !2684, !2689, !4968}
!5154 = !{!5155, !5156, !5157}
!5155 = !DILocalVariable(name: "h", arg: 1, scope: !5151, file: !2671, line: 172, type: !2684)
!5156 = !DILocalVariable(name: "c", arg: 2, scope: !5151, file: !2671, line: 172, type: !2689)
!5157 = !DILocalVariable(name: "size", arg: 3, scope: !5151, file: !2671, line: 172, type: !4968)
!5158 = !DILocation(line: 0, scope: !5151)
!5159 = !DILocation(line: 174, column: 38, scope: !5151)
!5160 = !DILocation(line: 174, column: 2, scope: !5151)
!5161 = !DILocation(line: 175, column: 1, scope: !5151)
!5162 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2671, file: !2671, line: 209, type: !5152, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5163)
!5163 = !{!5164, !5165, !5166}
!5164 = !DILocalVariable(name: "h", arg: 1, scope: !5162, file: !2671, line: 209, type: !2684)
!5165 = !DILocalVariable(name: "c", arg: 2, scope: !5162, file: !2671, line: 209, type: !2689)
!5166 = !DILocalVariable(name: "size", arg: 3, scope: !5162, file: !2671, line: 210, type: !4968)
!5167 = !DILocation(line: 0, scope: !5162)
!5168 = !DILocation(line: 212, column: 2, scope: !5162)
!5169 = !DILocation(line: 213, column: 1, scope: !5162)
!5170 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !4842, file: !4842, line: 34, type: !5024, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5171)
!5171 = !{!5172, !5173, !5174, !5175, !5176, !5179}
!5172 = !DILocalVariable(name: "h", arg: 1, scope: !5170, file: !4842, line: 34, type: !2684)
!5173 = !DILocalVariable(name: "c", arg: 2, scope: !5170, file: !4842, line: 34, type: !2689)
!5174 = !DILocalVariable(name: "bidx", arg: 3, scope: !5170, file: !4842, line: 34, type: !103)
!5175 = !DILocalVariable(name: "b", scope: !5170, file: !4842, line: 36, type: !5031)
!5176 = !DILocalVariable(name: "first", scope: !5177, file: !4842, line: 47, type: !2689)
!5177 = distinct !DILexicalBlock(scope: !5178, file: !4842, line: 46, column: 9)
!5178 = distinct !DILexicalBlock(scope: !5170, file: !4842, line: 42, column: 6)
!5179 = !DILocalVariable(name: "second", scope: !5177, file: !4842, line: 48, type: !2689)
!5180 = !DILocation(line: 0, scope: !5170)
!5181 = !DILocation(line: 36, column: 29, scope: !5170)
!5182 = !DILocation(line: 42, column: 6, scope: !5178)
!5183 = !DILocation(line: 42, column: 28, scope: !5178)
!5184 = !DILocation(line: 42, column: 6, scope: !5170)
!5185 = !DILocation(line: 44, column: 24, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5178, file: !4842, line: 42, column: 34)
!5187 = !DILocation(line: 44, column: 23, scope: !5186)
!5188 = !DILocation(line: 44, column: 6, scope: !5186)
!5189 = !DILocation(line: 44, column: 20, scope: !5186)
!5190 = !DILocation(line: 45, column: 6, scope: !5186)
!5191 = !DILocation(line: 45, column: 11, scope: !5186)
!5192 = !DILocation(line: 46, column: 2, scope: !5186)
!5193 = !DILocation(line: 47, column: 21, scope: !5177)
!5194 = !DILocation(line: 0, scope: !5177)
!5195 = !DILocation(line: 50, column: 6, scope: !5177)
!5196 = !DILocation(line: 50, column: 11, scope: !5177)
!5197 = !DILocation(line: 51, column: 3, scope: !5177)
!5198 = !DILocation(line: 52, column: 3, scope: !5177)
!5199 = !DILocation(line: 58, column: 1, scope: !5170)
!5200 = distinct !DISubprogram(name: "next_free_chunk", scope: !2671, file: !2671, line: 182, type: !4927, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5201)
!5201 = !{!5202, !5203}
!5202 = !DILocalVariable(name: "h", arg: 1, scope: !5200, file: !2671, line: 182, type: !2684)
!5203 = !DILocalVariable(name: "c", arg: 2, scope: !5200, file: !2671, line: 182, type: !2689)
!5204 = !DILocation(line: 0, scope: !5200)
!5205 = !DILocation(line: 184, column: 9, scope: !5200)
!5206 = !DILocation(line: 184, column: 2, scope: !5200)
!5207 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !4842, file: !4842, line: 200, type: !5208, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5210)
!5208 = !DISubroutineType(types: !5209)
!5209 = !{!132, !4845, !102}
!5210 = !{!5211, !5212, !5213, !5214, !5215, !5216, !5217}
!5211 = !DILocalVariable(name: "heap", arg: 1, scope: !5207, file: !4842, line: 200, type: !4845)
!5212 = !DILocalVariable(name: "mem", arg: 2, scope: !5207, file: !4842, line: 200, type: !102)
!5213 = !DILocalVariable(name: "h", scope: !5207, file: !4842, line: 202, type: !2684)
!5214 = !DILocalVariable(name: "c", scope: !5207, file: !4842, line: 203, type: !2689)
!5215 = !DILocalVariable(name: "addr", scope: !5207, file: !4842, line: 204, type: !132)
!5216 = !DILocalVariable(name: "chunk_base", scope: !5207, file: !4842, line: 205, type: !132)
!5217 = !DILocalVariable(name: "chunk_sz", scope: !5207, file: !4842, line: 206, type: !132)
!5218 = !DILocation(line: 0, scope: !5207)
!5219 = !DILocation(line: 202, column: 27, scope: !5207)
!5220 = !DILocation(line: 203, column: 16, scope: !5207)
!5221 = !DILocation(line: 204, column: 16, scope: !5207)
!5222 = !DILocation(line: 205, column: 31, scope: !5207)
!5223 = !DILocation(line: 205, column: 22, scope: !5207)
!5224 = !DILocation(line: 206, column: 20, scope: !5207)
!5225 = !DILocation(line: 206, column: 37, scope: !5207)
!5226 = !DILocation(line: 208, column: 26, scope: !5207)
!5227 = !DILocation(line: 208, column: 18, scope: !5207)
!5228 = !DILocation(line: 208, column: 2, scope: !5207)
!5229 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !4842, file: !4842, line: 263, type: !5230, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5232)
!5230 = !DISubroutineType(types: !5231)
!5231 = !{!102, !4845, !132}
!5232 = !{!5233, !5234, !5235, !5236, !5237, !5238}
!5233 = !DILocalVariable(name: "heap", arg: 1, scope: !5229, file: !4842, line: 263, type: !4845)
!5234 = !DILocalVariable(name: "bytes", arg: 2, scope: !5229, file: !4842, line: 263, type: !132)
!5235 = !DILocalVariable(name: "h", scope: !5229, file: !4842, line: 265, type: !2684)
!5236 = !DILocalVariable(name: "mem", scope: !5229, file: !4842, line: 266, type: !102)
!5237 = !DILocalVariable(name: "chunk_sz", scope: !5229, file: !4842, line: 272, type: !4968)
!5238 = !DILocalVariable(name: "c", scope: !5229, file: !4842, line: 273, type: !2689)
!5239 = !DILocation(line: 0, scope: !5229)
!5240 = !DILocation(line: 265, column: 27, scope: !5229)
!5241 = !DILocation(line: 268, column: 12, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5229, file: !4842, line: 268, column: 6)
!5243 = !DILocation(line: 268, column: 18, scope: !5242)
!5244 = !DILocation(line: 268, column: 21, scope: !5242)
!5245 = !DILocation(line: 268, column: 6, scope: !5229)
!5246 = !DILocation(line: 272, column: 23, scope: !5229)
!5247 = !DILocation(line: 273, column: 16, scope: !5229)
!5248 = !DILocation(line: 274, column: 8, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5229, file: !4842, line: 274, column: 6)
!5250 = !DILocation(line: 274, column: 6, scope: !5229)
!5251 = !DILocation(line: 279, column: 6, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5229, file: !4842, line: 279, column: 6)
!5253 = !DILocation(line: 279, column: 23, scope: !5252)
!5254 = !DILocation(line: 279, column: 6, scope: !5229)
!5255 = !DILocation(line: 280, column: 24, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5252, file: !4842, line: 279, column: 35)
!5257 = !DILocation(line: 280, column: 3, scope: !5256)
!5258 = !DILocation(line: 281, column: 3, scope: !5256)
!5259 = !DILocation(line: 282, column: 2, scope: !5256)
!5260 = !DILocation(line: 284, column: 2, scope: !5229)
!5261 = !DILocation(line: 286, column: 8, scope: !5229)
!5262 = !DILocation(line: 298, column: 2, scope: !5229)
!5263 = !DILocation(line: 299, column: 1, scope: !5229)
!5264 = distinct !DISubprogram(name: "size_too_big", scope: !2671, file: !2671, line: 256, type: !5265, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5267)
!5265 = !DISubroutineType(types: !5266)
!5266 = !{!131, !2684, !132}
!5267 = !{!5268, !5269}
!5268 = !DILocalVariable(name: "h", arg: 1, scope: !5264, file: !2671, line: 256, type: !2684)
!5269 = !DILocalVariable(name: "bytes", arg: 2, scope: !5264, file: !2671, line: 256, type: !132)
!5270 = !DILocation(line: 0, scope: !5264)
!5271 = !DILocation(line: 262, column: 16, scope: !5264)
!5272 = !DILocation(line: 262, column: 36, scope: !5264)
!5273 = !DILocation(line: 262, column: 30, scope: !5264)
!5274 = !DILocation(line: 262, column: 2, scope: !5264)
!5275 = distinct !DISubprogram(name: "alloc_chunk", scope: !4842, file: !4842, line: 211, type: !5276, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5278)
!5276 = !DISubroutineType(types: !5277)
!5277 = !{!2689, !2684, !4968}
!5278 = !{!5279, !5280, !5281, !5282, !5283, !5286, !5287, !5289, !5290, !5293}
!5279 = !DILocalVariable(name: "h", arg: 1, scope: !5275, file: !4842, line: 211, type: !2684)
!5280 = !DILocalVariable(name: "sz", arg: 2, scope: !5275, file: !4842, line: 211, type: !4968)
!5281 = !DILocalVariable(name: "bi", scope: !5275, file: !4842, line: 213, type: !103)
!5282 = !DILocalVariable(name: "b", scope: !5275, file: !4842, line: 214, type: !5031)
!5283 = !DILocalVariable(name: "first", scope: !5284, file: !4842, line: 233, type: !2689)
!5284 = distinct !DILexicalBlock(scope: !5285, file: !4842, line: 232, column: 15)
!5285 = distinct !DILexicalBlock(scope: !5275, file: !4842, line: 232, column: 6)
!5286 = !DILocalVariable(name: "i", scope: !5284, file: !4842, line: 234, type: !103)
!5287 = !DILocalVariable(name: "c", scope: !5288, file: !4842, line: 236, type: !2689)
!5288 = distinct !DILexicalBlock(scope: !5284, file: !4842, line: 235, column: 6)
!5289 = !DILocalVariable(name: "bmask", scope: !5275, file: !4842, line: 249, type: !108)
!5290 = !DILocalVariable(name: "minbucket", scope: !5291, file: !4842, line: 252, type: !103)
!5291 = distinct !DILexicalBlock(scope: !5292, file: !4842, line: 251, column: 19)
!5292 = distinct !DILexicalBlock(scope: !5275, file: !4842, line: 251, column: 6)
!5293 = !DILocalVariable(name: "c", scope: !5291, file: !4842, line: 253, type: !2689)
!5294 = !DILocation(line: 0, scope: !5275)
!5295 = !DILocation(line: 213, column: 11, scope: !5275)
!5296 = !DILocation(line: 232, column: 9, scope: !5285)
!5297 = !DILocation(line: 232, column: 6, scope: !5285)
!5298 = !DILocation(line: 232, column: 6, scope: !5275)
!5299 = !DILocation(line: 236, column: 21, scope: !5288)
!5300 = !DILocation(line: 0, scope: !5284)
!5301 = !DILocation(line: 0, scope: !5288)
!5302 = !DILocation(line: 237, column: 8, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5288, file: !4842, line: 237, column: 8)
!5304 = !DILocation(line: 237, column: 25, scope: !5303)
!5305 = !DILocation(line: 237, column: 8, scope: !5288)
!5306 = !DILocation(line: 238, column: 5, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5303, file: !4842, line: 237, column: 32)
!5308 = !DILocation(line: 241, column: 14, scope: !5288)
!5309 = !DILocation(line: 241, column: 12, scope: !5288)
!5310 = !DILocation(line: 243, column: 12, scope: !5284)
!5311 = !DILocation(line: 243, column: 16, scope: !5284)
!5312 = distinct !{!5312, !5313, !5314}
!5313 = !DILocation(line: 235, column: 3, scope: !5284)
!5314 = !DILocation(line: 243, column: 35, scope: !5284)
!5315 = !DILocation(line: 249, column: 22, scope: !5275)
!5316 = !DILocation(line: 249, column: 39, scope: !5275)
!5317 = !DILocation(line: 249, column: 36, scope: !5275)
!5318 = !DILocation(line: 251, column: 12, scope: !5292)
!5319 = !DILocation(line: 251, column: 6, scope: !5275)
!5320 = !DILocation(line: 252, column: 19, scope: !5291)
!5321 = !DILocation(line: 0, scope: !5291)
!5322 = !DILocation(line: 253, column: 39, scope: !5291)
!5323 = !DILocation(line: 255, column: 3, scope: !5291)
!5324 = !DILocation(line: 261, column: 1, scope: !5275)
!5325 = distinct !DISubprogram(name: "split_chunks", scope: !4842, file: !4842, line: 109, type: !4961, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5326)
!5326 = !{!5327, !5328, !5329, !5330, !5331, !5332}
!5327 = !DILocalVariable(name: "h", arg: 1, scope: !5325, file: !4842, line: 109, type: !2684)
!5328 = !DILocalVariable(name: "lc", arg: 2, scope: !5325, file: !4842, line: 109, type: !2689)
!5329 = !DILocalVariable(name: "rc", arg: 3, scope: !5325, file: !4842, line: 109, type: !2689)
!5330 = !DILocalVariable(name: "sz0", scope: !5325, file: !4842, line: 114, type: !4968)
!5331 = !DILocalVariable(name: "lsz", scope: !5325, file: !4842, line: 115, type: !4968)
!5332 = !DILocalVariable(name: "rsz", scope: !5325, file: !4842, line: 116, type: !4968)
!5333 = !DILocation(line: 0, scope: !5325)
!5334 = !DILocation(line: 114, column: 18, scope: !5325)
!5335 = !DILocation(line: 115, column: 21, scope: !5325)
!5336 = !DILocation(line: 116, column: 22, scope: !5325)
!5337 = !DILocation(line: 118, column: 2, scope: !5325)
!5338 = !DILocation(line: 119, column: 2, scope: !5325)
!5339 = !DILocation(line: 120, column: 2, scope: !5325)
!5340 = !DILocation(line: 121, column: 25, scope: !5325)
!5341 = !DILocation(line: 121, column: 2, scope: !5325)
!5342 = !DILocation(line: 122, column: 1, scope: !5325)
!5343 = distinct !DISubprogram(name: "chunk_mem", scope: !4842, file: !4842, line: 24, type: !5344, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5346)
!5344 = !DISubroutineType(types: !5345)
!5345 = !{!102, !2684, !2689}
!5346 = !{!5347, !5348, !5349, !5350}
!5347 = !DILocalVariable(name: "h", arg: 1, scope: !5343, file: !4842, line: 24, type: !2684)
!5348 = !DILocalVariable(name: "c", arg: 2, scope: !5343, file: !4842, line: 24, type: !2689)
!5349 = !DILocalVariable(name: "buf", scope: !5343, file: !4842, line: 26, type: !2678)
!5350 = !DILocalVariable(name: "ret", scope: !5343, file: !4842, line: 27, type: !379)
!5351 = !DILocation(line: 0, scope: !5343)
!5352 = !DILocation(line: 26, column: 22, scope: !5343)
!5353 = !DILocation(line: 27, column: 38, scope: !5343)
!5354 = !DILocation(line: 31, column: 2, scope: !5343)
!5355 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !4842, file: !4842, line: 301, type: !5356, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5358)
!5356 = !DISubroutineType(types: !5357)
!5357 = !{!102, !4845, !132, !132}
!5358 = !{!5359, !5360, !5361, !5362, !5363, !5364, !5365, !5366, !5367, !5368, !5369, !5370}
!5359 = !DILocalVariable(name: "heap", arg: 1, scope: !5355, file: !4842, line: 301, type: !4845)
!5360 = !DILocalVariable(name: "align", arg: 2, scope: !5355, file: !4842, line: 301, type: !132)
!5361 = !DILocalVariable(name: "bytes", arg: 3, scope: !5355, file: !4842, line: 301, type: !132)
!5362 = !DILocalVariable(name: "h", scope: !5355, file: !4842, line: 303, type: !2684)
!5363 = !DILocalVariable(name: "gap", scope: !5355, file: !4842, line: 304, type: !132)
!5364 = !DILocalVariable(name: "rew", scope: !5355, file: !4842, line: 304, type: !132)
!5365 = !DILocalVariable(name: "padded_sz", scope: !5355, file: !4842, line: 335, type: !4968)
!5366 = !DILocalVariable(name: "c0", scope: !5355, file: !4842, line: 336, type: !2689)
!5367 = !DILocalVariable(name: "mem", scope: !5355, file: !4842, line: 341, type: !379)
!5368 = !DILocalVariable(name: "end", scope: !5355, file: !4842, line: 345, type: !2678)
!5369 = !DILocalVariable(name: "c", scope: !5355, file: !4842, line: 348, type: !2689)
!5370 = !DILocalVariable(name: "c_end", scope: !5355, file: !4842, line: 349, type: !2689)
!5371 = !DILocation(line: 0, scope: !5355)
!5372 = !DILocation(line: 303, column: 27, scope: !5355)
!5373 = !DILocation(line: 313, column: 16, scope: !5355)
!5374 = !DILocation(line: 313, column: 14, scope: !5355)
!5375 = !DILocation(line: 314, column: 12, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5355, file: !4842, line: 314, column: 6)
!5377 = !DILocation(line: 314, column: 6, scope: !5355)
!5378 = !DILocation(line: 315, column: 9, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5376, file: !4842, line: 314, column: 20)
!5380 = !DILocation(line: 316, column: 9, scope: !5379)
!5381 = !DILocation(line: 318, column: 13, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5383, file: !4842, line: 318, column: 7)
!5383 = distinct !DILexicalBlock(scope: !5376, file: !4842, line: 317, column: 9)
!5384 = !DILocation(line: 318, column: 7, scope: !5383)
!5385 = !DILocation(line: 319, column: 11, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5382, file: !4842, line: 318, column: 39)
!5387 = !DILocation(line: 319, column: 4, scope: !5386)
!5388 = !DILocation(line: 0, scope: !5376)
!5389 = !DILocation(line: 326, column: 12, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5355, file: !4842, line: 326, column: 6)
!5391 = !DILocation(line: 326, column: 17, scope: !5390)
!5392 = !DILocation(line: 326, column: 20, scope: !5390)
!5393 = !DILocation(line: 326, column: 6, scope: !5355)
!5394 = !DILocation(line: 335, column: 50, scope: !5355)
!5395 = !DILocation(line: 335, column: 58, scope: !5355)
!5396 = !DILocation(line: 335, column: 24, scope: !5355)
!5397 = !DILocation(line: 336, column: 17, scope: !5355)
!5398 = !DILocation(line: 338, column: 9, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5355, file: !4842, line: 338, column: 6)
!5400 = !DILocation(line: 338, column: 6, scope: !5355)
!5401 = !DILocation(line: 341, column: 17, scope: !5355)
!5402 = !DILocation(line: 344, column: 20, scope: !5355)
!5403 = !DILocation(line: 344, column: 8, scope: !5355)
!5404 = !DILocation(line: 344, column: 47, scope: !5355)
!5405 = !DILocation(line: 345, column: 39, scope: !5355)
!5406 = !DILocation(line: 348, column: 16, scope: !5355)
!5407 = !DILocation(line: 349, column: 26, scope: !5355)
!5408 = !DILocation(line: 349, column: 24, scope: !5355)
!5409 = !DILocation(line: 353, column: 8, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5355, file: !4842, line: 353, column: 6)
!5411 = !DILocation(line: 353, column: 6, scope: !5355)
!5412 = !DILocation(line: 354, column: 3, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5410, file: !4842, line: 353, column: 14)
!5414 = !DILocation(line: 355, column: 3, scope: !5413)
!5415 = !DILocation(line: 356, column: 2, scope: !5413)
!5416 = !DILocation(line: 359, column: 6, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5355, file: !4842, line: 359, column: 6)
!5418 = !DILocation(line: 359, column: 24, scope: !5417)
!5419 = !DILocation(line: 359, column: 6, scope: !5355)
!5420 = !DILocation(line: 360, column: 3, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5417, file: !4842, line: 359, column: 33)
!5422 = !DILocation(line: 361, column: 3, scope: !5421)
!5423 = !DILocation(line: 362, column: 2, scope: !5421)
!5424 = !DILocation(line: 364, column: 2, scope: !5355)
!5425 = !DILocation(line: 377, column: 1, scope: !5355)
!5426 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !4842, file: !4842, line: 379, type: !5427, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5429)
!5427 = !DISubroutineType(types: !5428)
!5428 = !{!102, !4845, !102, !132, !132}
!5429 = !{!5430, !5431, !5432, !5433, !5434, !5435, !5436, !5437, !5438, !5439, !5445, !5446}
!5430 = !DILocalVariable(name: "heap", arg: 1, scope: !5426, file: !4842, line: 379, type: !4845)
!5431 = !DILocalVariable(name: "ptr", arg: 2, scope: !5426, file: !4842, line: 379, type: !102)
!5432 = !DILocalVariable(name: "align", arg: 3, scope: !5426, file: !4842, line: 380, type: !132)
!5433 = !DILocalVariable(name: "bytes", arg: 4, scope: !5426, file: !4842, line: 380, type: !132)
!5434 = !DILocalVariable(name: "h", scope: !5426, file: !4842, line: 382, type: !2684)
!5435 = !DILocalVariable(name: "c", scope: !5426, file: !4842, line: 399, type: !2689)
!5436 = !DILocalVariable(name: "rc", scope: !5426, file: !4842, line: 400, type: !2689)
!5437 = !DILocalVariable(name: "align_gap", scope: !5426, file: !4842, line: 401, type: !132)
!5438 = !DILocalVariable(name: "chunks_need", scope: !5426, file: !4842, line: 402, type: !4968)
!5439 = !DILocalVariable(name: "split_size", scope: !5440, file: !4842, line: 435, type: !4968)
!5440 = distinct !DILexicalBlock(scope: !5441, file: !4842, line: 433, column: 61)
!5441 = distinct !DILexicalBlock(scope: !5442, file: !4842, line: 432, column: 13)
!5442 = distinct !DILexicalBlock(scope: !5443, file: !4842, line: 409, column: 13)
!5443 = distinct !DILexicalBlock(scope: !5444, file: !4842, line: 406, column: 13)
!5444 = distinct !DILexicalBlock(scope: !5426, file: !4842, line: 404, column: 6)
!5445 = !DILocalVariable(name: "ptr2", scope: !5426, file: !4842, line: 474, type: !102)
!5446 = !DILocalVariable(name: "prev_size", scope: !5447, file: !4842, line: 477, type: !132)
!5447 = distinct !DILexicalBlock(scope: !5448, file: !4842, line: 476, column: 20)
!5448 = distinct !DILexicalBlock(scope: !5426, file: !4842, line: 476, column: 6)
!5449 = !DILocation(line: 0, scope: !5426)
!5450 = !DILocation(line: 382, column: 27, scope: !5426)
!5451 = !DILocation(line: 385, column: 10, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5426, file: !4842, line: 385, column: 6)
!5453 = !DILocation(line: 385, column: 6, scope: !5426)
!5454 = !DILocation(line: 386, column: 10, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5452, file: !4842, line: 385, column: 19)
!5456 = !DILocation(line: 386, column: 3, scope: !5455)
!5457 = !DILocation(line: 388, column: 12, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5426, file: !4842, line: 388, column: 6)
!5459 = !DILocation(line: 388, column: 6, scope: !5426)
!5460 = !DILocation(line: 389, column: 3, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5458, file: !4842, line: 388, column: 18)
!5462 = !DILocation(line: 390, column: 3, scope: !5461)
!5463 = !DILocation(line: 395, column: 6, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5426, file: !4842, line: 395, column: 6)
!5465 = !DILocation(line: 395, column: 6, scope: !5426)
!5466 = !DILocation(line: 399, column: 16, scope: !5426)
!5467 = !DILocation(line: 400, column: 17, scope: !5426)
!5468 = !DILocation(line: 401, column: 49, scope: !5426)
!5469 = !DILocation(line: 401, column: 36, scope: !5426)
!5470 = !DILocation(line: 402, column: 52, scope: !5426)
!5471 = !DILocation(line: 402, column: 26, scope: !5426)
!5472 = !DILocation(line: 404, column: 6, scope: !5444)
!5473 = !DILocation(line: 404, column: 12, scope: !5444)
!5474 = !DILocation(line: 404, column: 40, scope: !5444)
!5475 = !DILocation(line: 404, column: 31, scope: !5444)
!5476 = !DILocation(line: 404, column: 6, scope: !5426)
!5477 = !DILocation(line: 406, column: 13, scope: !5443)
!5478 = !DILocation(line: 406, column: 30, scope: !5443)
!5479 = !DILocation(line: 406, column: 13, scope: !5444)
!5480 = !DILocation(line: 409, column: 30, scope: !5442)
!5481 = !DILocation(line: 409, column: 13, scope: !5443)
!5482 = !DILocation(line: 420, column: 24, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5442, file: !4842, line: 409, column: 45)
!5484 = !DILocation(line: 420, column: 3, scope: !5483)
!5485 = !DILocation(line: 421, column: 3, scope: !5483)
!5486 = !DILocation(line: 422, column: 3, scope: !5483)
!5487 = !DILocation(line: 431, column: 3, scope: !5483)
!5488 = !DILocation(line: 432, column: 14, scope: !5441)
!5489 = !DILocation(line: 432, column: 32, scope: !5441)
!5490 = !DILocation(line: 433, column: 26, scope: !5441)
!5491 = !DILocation(line: 433, column: 24, scope: !5441)
!5492 = !DILocation(line: 433, column: 44, scope: !5441)
!5493 = !DILocation(line: 432, column: 13, scope: !5442)
!5494 = !DILocation(line: 435, column: 38, scope: !5440)
!5495 = !DILocation(line: 0, scope: !5440)
!5496 = !DILocation(line: 445, column: 3, scope: !5440)
!5497 = !DILocation(line: 447, column: 20, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5440, file: !4842, line: 447, column: 7)
!5499 = !DILocation(line: 447, column: 18, scope: !5498)
!5500 = !DILocation(line: 447, column: 7, scope: !5440)
!5501 = !DILocation(line: 448, column: 27, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5498, file: !4842, line: 447, column: 39)
!5503 = !DILocation(line: 448, column: 4, scope: !5502)
!5504 = !DILocation(line: 449, column: 4, scope: !5502)
!5505 = !DILocation(line: 450, column: 3, scope: !5502)
!5506 = !DILocation(line: 452, column: 3, scope: !5440)
!5507 = !DILocation(line: 453, column: 3, scope: !5440)
!5508 = !DILocation(line: 474, column: 15, scope: !5426)
!5509 = !DILocation(line: 476, column: 11, scope: !5448)
!5510 = !DILocation(line: 476, column: 6, scope: !5426)
!5511 = !DILocation(line: 477, column: 42, scope: !5447)
!5512 = !DILocation(line: 477, column: 22, scope: !5447)
!5513 = !DILocation(line: 477, column: 60, scope: !5447)
!5514 = !DILocation(line: 0, scope: !5447)
!5515 = !DILocation(line: 479, column: 21, scope: !5447)
!5516 = !DILocation(line: 479, column: 3, scope: !5447)
!5517 = !DILocation(line: 480, column: 3, scope: !5447)
!5518 = !DILocation(line: 481, column: 2, scope: !5447)
!5519 = !DILocation(line: 483, column: 1, scope: !5426)
!5520 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2671, file: !2671, line: 245, type: !5521, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5523)
!5521 = !DISubroutineType(types: !5522)
!5522 = !{!132, !2684, !4968}
!5523 = !{!5524, !5525}
!5524 = !DILocalVariable(name: "h", arg: 1, scope: !5520, file: !2671, line: 245, type: !2684)
!5525 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !5520, file: !2671, line: 245, type: !4968)
!5526 = !DILocation(line: 0, scope: !5520)
!5527 = !DILocation(line: 247, column: 20, scope: !5520)
!5528 = !DILocation(line: 247, column: 33, scope: !5520)
!5529 = !DILocation(line: 247, column: 2, scope: !5520)
!5530 = distinct !DISubprogram(name: "sys_heap_init", scope: !4842, file: !4842, line: 485, type: !5531, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !5533)
!5531 = !DISubroutineType(types: !5532)
!5532 = !{null, !4845, !102, !132}
!5533 = !{!5534, !5535, !5536, !5537, !5538, !5539, !5540, !5541, !5542, !5543}
!5534 = !DILocalVariable(name: "heap", arg: 1, scope: !5530, file: !4842, line: 485, type: !4845)
!5535 = !DILocalVariable(name: "mem", arg: 2, scope: !5530, file: !4842, line: 485, type: !102)
!5536 = !DILocalVariable(name: "bytes", arg: 3, scope: !5530, file: !4842, line: 485, type: !132)
!5537 = !DILocalVariable(name: "addr", scope: !5530, file: !4842, line: 502, type: !22)
!5538 = !DILocalVariable(name: "end", scope: !5530, file: !4842, line: 503, type: !22)
!5539 = !DILocalVariable(name: "heap_sz", scope: !5530, file: !4842, line: 504, type: !4968)
!5540 = !DILocalVariable(name: "h", scope: !5530, file: !4842, line: 509, type: !2684)
!5541 = !DILocalVariable(name: "nb_buckets", scope: !5530, file: !4842, line: 520, type: !103)
!5542 = !DILocalVariable(name: "chunk0_size", scope: !5530, file: !4842, line: 521, type: !4968)
!5543 = !DILocalVariable(name: "i", scope: !5544, file: !4842, line: 526, type: !103)
!5544 = distinct !DILexicalBlock(scope: !5530, file: !4842, line: 526, column: 2)
!5545 = !DILocation(line: 0, scope: !5530)
!5546 = !DILocation(line: 499, column: 8, scope: !5530)
!5547 = !DILocation(line: 502, column: 19, scope: !5530)
!5548 = !DILocation(line: 503, column: 18, scope: !5530)
!5549 = !DILocation(line: 504, column: 27, scope: !5530)
!5550 = !DILocation(line: 504, column: 35, scope: !5530)
!5551 = !DILocation(line: 509, column: 21, scope: !5530)
!5552 = !DILocation(line: 510, column: 8, scope: !5530)
!5553 = !DILocation(line: 510, column: 13, scope: !5530)
!5554 = !DILocation(line: 511, column: 5, scope: !5530)
!5555 = !DILocation(line: 511, column: 15, scope: !5530)
!5556 = !DILocation(line: 512, column: 5, scope: !5530)
!5557 = !DILocation(line: 512, column: 19, scope: !5530)
!5558 = !DILocation(line: 520, column: 19, scope: !5530)
!5559 = !DILocation(line: 522, column: 21, scope: !5530)
!5560 = !DILocation(line: 521, column: 56, scope: !5530)
!5561 = !DILocation(line: 521, column: 26, scope: !5530)
!5562 = !DILocation(line: 0, scope: !5544)
!5563 = !DILocation(line: 526, column: 20, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5544, file: !4842, line: 526, column: 2)
!5565 = !DILocation(line: 526, column: 2, scope: !5544)
!5566 = !DILocation(line: 531, column: 2, scope: !5530)
!5567 = !DILocation(line: 532, column: 2, scope: !5530)
!5568 = !DILocation(line: 533, column: 2, scope: !5530)
!5569 = !DILocation(line: 536, column: 41, scope: !5530)
!5570 = !DILocation(line: 536, column: 2, scope: !5530)
!5571 = !DILocation(line: 537, column: 2, scope: !5530)
!5572 = !DILocation(line: 540, column: 2, scope: !5530)
!5573 = !DILocation(line: 541, column: 2, scope: !5530)
!5574 = !DILocation(line: 542, column: 2, scope: !5530)
!5575 = !DILocation(line: 544, column: 2, scope: !5530)
!5576 = !DILocation(line: 545, column: 1, scope: !5530)
!5577 = !DILocation(line: 527, column: 17, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5564, file: !4842, line: 526, column: 39)
!5579 = !DILocation(line: 527, column: 22, scope: !5578)
!5580 = !DILocation(line: 526, column: 35, scope: !5564)
!5581 = distinct !{!5581, !5565, !5582}
!5582 = !DILocation(line: 528, column: 2, scope: !5544)
!5583 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2704, file: !2704, line: 1338, type: !5584, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2700, retainedNodes: !5592)
!5584 = !DISubroutineType(types: !5585)
!5585 = !{!103, !4040, !102, !337, !5586, !108}
!5586 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3679, line: 99, baseType: !5587)
!5587 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3679, line: 40, baseType: !5588)
!5588 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2704, baseType: !5589)
!5589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5590)
!5590 = !{!5591}
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5589, file: !2704, baseType: !102, size: 32)
!5592 = !{!5593, !5594, !5595, !5596, !5597, !5598, !5602, !5603, !5604, !5606, !5611, !5654, !5657, !5660, !5661, !5662, !5663, !5664, !5665, !5666, !5669, !5670, !5671, !5675, !5678, !5680, !5683, !5684, !5685, !5690, !5696, !5699, !5703, !5709, !5713, !5716, !5718, !5721}
!5593 = !DILocalVariable(name: "out", arg: 1, scope: !5583, file: !2704, line: 1338, type: !4040)
!5594 = !DILocalVariable(name: "ctx", arg: 2, scope: !5583, file: !2704, line: 1338, type: !102)
!5595 = !DILocalVariable(name: "fp", arg: 3, scope: !5583, file: !2704, line: 1338, type: !337)
!5596 = !DILocalVariable(name: "ap", arg: 4, scope: !5583, file: !2704, line: 1339, type: !5586)
!5597 = !DILocalVariable(name: "flags", arg: 5, scope: !5583, file: !2704, line: 1339, type: !108)
!5598 = !DILocalVariable(name: "buf", scope: !5583, file: !2704, line: 1341, type: !5599)
!5599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 176, elements: !5600)
!5600 = !{!5601}
!5601 = !DISubrange(count: 22)
!5602 = !DILocalVariable(name: "count", scope: !5583, file: !2704, line: 1342, type: !132)
!5603 = !DILocalVariable(name: "sint", scope: !5583, file: !2704, line: 1343, type: !2723)
!5604 = !DILocalVariable(name: "tagged_ap", scope: !5583, file: !2704, line: 1345, type: !5605)
!5605 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!5606 = !DILocalVariable(name: "rc", scope: !5607, file: !2704, line: 1377, type: !103)
!5607 = distinct !DILexicalBlock(scope: !5608, file: !2704, line: 1377, column: 4)
!5608 = distinct !DILexicalBlock(scope: !5609, file: !2704, line: 1376, column: 19)
!5609 = distinct !DILexicalBlock(scope: !5610, file: !2704, line: 1376, column: 7)
!5610 = distinct !DILexicalBlock(scope: !5583, file: !2704, line: 1375, column: 19)
!5611 = !DILocalVariable(name: "state", scope: !5610, file: !2704, line: 1395, type: !5612)
!5612 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5583, file: !2704, line: 1392, size: 192, elements: !5613)
!5613 = !{!5614, !5622}
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5612, file: !2704, line: 1393, baseType: !5615, size: 64)
!5615 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2704, line: 166, size: 64, elements: !5616)
!5616 = !{!5617, !5618, !5619, !5620, !5621}
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5615, file: !2704, line: 168, baseType: !2723, size: 64)
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5615, file: !2704, line: 171, baseType: !2726, size: 64)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5615, file: !2704, line: 174, baseType: !372, size: 64)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5615, file: !2704, line: 177, baseType: !370, size: 64)
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5615, file: !2704, line: 180, baseType: !102, size: 32)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5612, file: !2704, line: 1394, baseType: !5623, size: 96, offset: 64)
!5623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2704, line: 189, size: 96, elements: !5624)
!5624 = !{!5625, !5626, !5627, !5628, !5629, !5630, !5631, !5632, !5633, !5634, !5635, !5636, !5637, !5638, !5639, !5640, !5641, !5642, !5643, !5644, !5649}
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5623, file: !2704, line: 191, baseType: !131, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5623, file: !2704, line: 194, baseType: !131, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5623, file: !2704, line: 197, baseType: !131, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5623, file: !2704, line: 200, baseType: !131, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5623, file: !2704, line: 203, baseType: !131, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5623, file: !2704, line: 206, baseType: !131, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5623, file: !2704, line: 209, baseType: !131, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5623, file: !2704, line: 212, baseType: !131, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5623, file: !2704, line: 219, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5623, file: !2704, line: 222, baseType: !131, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5623, file: !2704, line: 229, baseType: !131, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5623, file: !2704, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5623, file: !2704, line: 238, baseType: !131, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5623, file: !2704, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5623, file: !2704, line: 244, baseType: !131, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5623, file: !2704, line: 247, baseType: !131, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5623, file: !2704, line: 252, baseType: !131, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5623, file: !2704, line: 257, baseType: !131, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5623, file: !2704, line: 260, baseType: !186, size: 8, offset: 24)
!5644 = !DIDerivedType(tag: DW_TAG_member, scope: !5623, file: !2704, line: 262, baseType: !5645, size: 32, offset: 32)
!5645 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5623, file: !2704, line: 262, size: 32, elements: !5646)
!5646 = !{!5647, !5648}
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5645, file: !2704, line: 267, baseType: !103, size: 32)
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5645, file: !2704, line: 289, baseType: !103, size: 32)
!5649 = !DIDerivedType(tag: DW_TAG_member, scope: !5623, file: !2704, line: 292, baseType: !5650, size: 32, offset: 64)
!5650 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5623, file: !2704, line: 292, size: 32, elements: !5651)
!5651 = !{!5652, !5653}
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5650, file: !2704, line: 297, baseType: !103, size: 32)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5650, file: !2704, line: 306, baseType: !103, size: 32)
!5654 = !DILocalVariable(name: "conv", scope: !5610, file: !2704, line: 1400, type: !5655)
!5655 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5656)
!5656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5623, size: 32)
!5657 = !DILocalVariable(name: "value", scope: !5610, file: !2704, line: 1401, type: !5658)
!5658 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5659)
!5659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5615, size: 32)
!5660 = !DILocalVariable(name: "sp", scope: !5610, file: !2704, line: 1402, type: !337)
!5661 = !DILocalVariable(name: "width", scope: !5610, file: !2704, line: 1403, type: !103)
!5662 = !DILocalVariable(name: "precision", scope: !5610, file: !2704, line: 1404, type: !103)
!5663 = !DILocalVariable(name: "bps", scope: !5610, file: !2704, line: 1405, type: !337)
!5664 = !DILocalVariable(name: "bpe", scope: !5610, file: !2704, line: 1406, type: !337)
!5665 = !DILocalVariable(name: "sign", scope: !5610, file: !2704, line: 1407, type: !278)
!5666 = !DILocalVariable(name: "arg", scope: !5667, file: !2704, line: 1432, type: !103)
!5667 = distinct !DILexicalBlock(scope: !5668, file: !2704, line: 1431, column: 24)
!5668 = distinct !DILexicalBlock(scope: !5610, file: !2704, line: 1431, column: 7)
!5669 = !DILocalVariable(name: "specifier_cat", scope: !5610, file: !2704, line: 1468, type: !2703)
!5670 = !DILocalVariable(name: "length_mod", scope: !5610, file: !2704, line: 1470, type: !2711)
!5671 = !DILocalVariable(name: "rc", scope: !5672, file: !2704, line: 1575, type: !103)
!5672 = distinct !DILexicalBlock(scope: !5673, file: !2704, line: 1575, column: 4)
!5673 = distinct !DILexicalBlock(scope: !5674, file: !2704, line: 1574, column: 43)
!5674 = distinct !DILexicalBlock(scope: !5610, file: !2704, line: 1574, column: 7)
!5675 = !DILocalVariable(name: "rc", scope: !5676, file: !2704, line: 1584, type: !103)
!5676 = distinct !DILexicalBlock(scope: !5677, file: !2704, line: 1584, column: 4)
!5677 = distinct !DILexicalBlock(scope: !5610, file: !2704, line: 1582, column: 28)
!5678 = !DILocalVariable(name: "len", scope: !5679, file: !2704, line: 1589, type: !132)
!5679 = distinct !DILexicalBlock(scope: !5677, file: !2704, line: 1586, column: 13)
!5680 = !DILocalVariable(name: "len", scope: !5681, file: !2704, line: 1641, type: !132)
!5681 = distinct !DILexicalBlock(scope: !5682, file: !2704, line: 1640, column: 24)
!5682 = distinct !DILexicalBlock(scope: !5677, file: !2704, line: 1640, column: 8)
!5683 = !DILocalVariable(name: "nj_len", scope: !5610, file: !2704, line: 1722, type: !132)
!5684 = !DILocalVariable(name: "pad_len", scope: !5610, file: !2704, line: 1723, type: !103)
!5685 = !DILocalVariable(name: "pad", scope: !5686, file: !2704, line: 1751, type: !278)
!5686 = distinct !DILexicalBlock(scope: !5687, file: !2704, line: 1750, column: 26)
!5687 = distinct !DILexicalBlock(scope: !5688, file: !2704, line: 1750, column: 8)
!5688 = distinct !DILexicalBlock(scope: !5689, file: !2704, line: 1747, column: 18)
!5689 = distinct !DILexicalBlock(scope: !5610, file: !2704, line: 1747, column: 7)
!5690 = !DILocalVariable(name: "rc", scope: !5691, file: !2704, line: 1758, type: !103)
!5691 = distinct !DILexicalBlock(scope: !5692, file: !2704, line: 1758, column: 7)
!5692 = distinct !DILexicalBlock(scope: !5693, file: !2704, line: 1757, column: 21)
!5693 = distinct !DILexicalBlock(scope: !5694, file: !2704, line: 1757, column: 10)
!5694 = distinct !DILexicalBlock(scope: !5695, file: !2704, line: 1756, column: 26)
!5695 = distinct !DILexicalBlock(scope: !5686, file: !2704, line: 1756, column: 9)
!5696 = !DILocalVariable(name: "rc", scope: !5697, file: !2704, line: 1765, type: !103)
!5697 = distinct !DILexicalBlock(scope: !5698, file: !2704, line: 1765, column: 6)
!5698 = distinct !DILexicalBlock(scope: !5686, file: !2704, line: 1764, column: 25)
!5699 = !DILocalVariable(name: "rc", scope: !5700, file: !2704, line: 1774, type: !103)
!5700 = distinct !DILexicalBlock(scope: !5701, file: !2704, line: 1774, column: 4)
!5701 = distinct !DILexicalBlock(scope: !5702, file: !2704, line: 1773, column: 18)
!5702 = distinct !DILexicalBlock(scope: !5610, file: !2704, line: 1773, column: 7)
!5703 = !DILocalVariable(name: "rc", scope: !5704, file: !2704, line: 1819, type: !103)
!5704 = distinct !DILexicalBlock(scope: !5705, file: !2704, line: 1819, column: 5)
!5705 = distinct !DILexicalBlock(scope: !5706, file: !2704, line: 1818, column: 44)
!5706 = distinct !DILexicalBlock(scope: !5707, file: !2704, line: 1818, column: 8)
!5707 = distinct !DILexicalBlock(scope: !5708, file: !2704, line: 1817, column: 10)
!5708 = distinct !DILexicalBlock(scope: !5610, file: !2704, line: 1777, column: 7)
!5709 = !DILocalVariable(name: "rc", scope: !5710, file: !2704, line: 1823, type: !103)
!5710 = distinct !DILexicalBlock(scope: !5711, file: !2704, line: 1823, column: 5)
!5711 = distinct !DILexicalBlock(scope: !5712, file: !2704, line: 1822, column: 26)
!5712 = distinct !DILexicalBlock(scope: !5707, file: !2704, line: 1822, column: 8)
!5713 = !DILocalVariable(name: "rc", scope: !5714, file: !2704, line: 1828, type: !103)
!5714 = distinct !DILexicalBlock(scope: !5715, file: !2704, line: 1828, column: 5)
!5715 = distinct !DILexicalBlock(scope: !5707, file: !2704, line: 1827, column: 26)
!5716 = !DILocalVariable(name: "rc", scope: !5717, file: !2704, line: 1831, type: !103)
!5717 = distinct !DILexicalBlock(scope: !5707, file: !2704, line: 1831, column: 4)
!5718 = !DILocalVariable(name: "rc", scope: !5719, file: !2704, line: 1836, type: !103)
!5719 = distinct !DILexicalBlock(scope: !5720, file: !2704, line: 1836, column: 4)
!5720 = distinct !DILexicalBlock(scope: !5610, file: !2704, line: 1835, column: 21)
!5721 = !DILabel(scope: !5677, name: "prec_int_pad0", file: !2704, line: 1634)
!5722 = !DILocation(line: 0, scope: !5583)
!5723 = !DILocation(line: 1341, column: 2, scope: !5583)
!5724 = !DILocation(line: 1341, column: 7, scope: !5583)
!5725 = !DILocation(line: 1375, column: 2, scope: !5583)
!5726 = !DILocation(line: 1342, column: 9, scope: !5583)
!5727 = !DILocation(line: 1375, column: 9, scope: !5583)
!5728 = !DILocation(line: 1377, column: 4, scope: !5607)
!5729 = !DILocation(line: 0, scope: !5607)
!5730 = !DILocation(line: 1377, column: 4, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5607, file: !2704, line: 1377, column: 4)
!5732 = distinct !{!5732, !5725, !5733}
!5733 = !DILocation(line: 1839, column: 2, scope: !5583)
!5734 = !DILocation(line: 1392, column: 3, scope: !5610)
!5735 = !DILocation(line: 1395, column: 5, scope: !5610)
!5736 = !DILocation(line: 0, scope: !5610)
!5737 = !DILocation(line: 1409, column: 8, scope: !5610)
!5738 = !DILocation(line: 1414, column: 13, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5610, file: !2704, line: 1414, column: 7)
!5740 = !DILocation(line: 1414, column: 7, scope: !5610)
!5741 = !DILocation(line: 1415, column: 12, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5739, file: !2704, line: 1414, column: 25)
!5743 = !DILocation(line: 1417, column: 14, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5742, file: !2704, line: 1417, column: 8)
!5745 = !DILocation(line: 1417, column: 8, scope: !5742)
!5746 = !DILocation(line: 1418, column: 21, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5744, file: !2704, line: 1417, column: 19)
!5748 = !DILocation(line: 1419, column: 13, scope: !5747)
!5749 = !DILocation(line: 1420, column: 4, scope: !5747)
!5750 = !DILocation(line: 1421, column: 20, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5739, file: !2704, line: 1421, column: 14)
!5752 = !DILocation(line: 1421, column: 14, scope: !5739)
!5753 = !DILocation(line: 1431, column: 13, scope: !5668)
!5754 = !DILocation(line: 1431, column: 7, scope: !5610)
!5755 = !DILocation(line: 1432, column: 14, scope: !5667)
!5756 = !DILocation(line: 0, scope: !5667)
!5757 = !DILocation(line: 1434, column: 12, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5667, file: !2704, line: 1434, column: 8)
!5759 = !DILocation(line: 1434, column: 8, scope: !5667)
!5760 = !DILocation(line: 1435, column: 24, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5758, file: !2704, line: 1434, column: 17)
!5762 = !DILocation(line: 1436, column: 4, scope: !5761)
!5763 = !DILocation(line: 1439, column: 20, scope: !5764)
!5764 = distinct !DILexicalBlock(scope: !5668, file: !2704, line: 1439, column: 14)
!5765 = !DILocation(line: 1439, column: 14, scope: !5668)
!5766 = !DILocation(line: 1469, column: 37, scope: !5610)
!5767 = !DILocation(line: 1448, column: 20, scope: !5610)
!5768 = !DILocation(line: 1449, column: 22, scope: !5610)
!5769 = !DILocation(line: 1471, column: 34, scope: !5610)
!5770 = !DILocation(line: 1478, column: 7, scope: !5610)
!5771 = !DILocation(line: 1479, column: 4, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5773, file: !2704, line: 1478, column: 40)
!5773 = distinct !DILexicalBlock(scope: !5610, file: !2704, line: 1478, column: 7)
!5774 = !DILocation(line: 1484, column: 19, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5772, file: !2704, line: 1479, column: 24)
!5776 = !DILocation(line: 1484, column: 17, scope: !5775)
!5777 = !DILocation(line: 1485, column: 5, scope: !5775)
!5778 = !DILocation(line: 1492, column: 20, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5780, file: !2704, line: 1491, column: 12)
!5780 = distinct !DILexicalBlock(scope: !5775, file: !2704, line: 1487, column: 9)
!5781 = !DILocation(line: 1492, column: 18, scope: !5779)
!5782 = !DILocation(line: 1494, column: 5, scope: !5775)
!5783 = !DILocation(line: 1497, column: 23, scope: !5775)
!5784 = !DILocation(line: 1496, column: 17, scope: !5775)
!5785 = !DILocation(line: 1498, column: 5, scope: !5775)
!5786 = !DILocation(line: 1501, column: 23, scope: !5775)
!5787 = !DILocation(line: 1500, column: 17, scope: !5775)
!5788 = !DILocation(line: 1502, column: 5, scope: !5775)
!5789 = !DILocation(line: 1513, column: 23, scope: !5775)
!5790 = !DILocation(line: 1513, column: 6, scope: !5775)
!5791 = !DILocation(line: 1512, column: 17, scope: !5775)
!5792 = !DILocation(line: 1514, column: 5, scope: !5775)
!5793 = !DILocation(line: 0, scope: !5775)
!5794 = !DILocation(line: 1516, column: 8, scope: !5772)
!5795 = !DILocation(line: 1517, column: 19, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5797, file: !2704, line: 1516, column: 33)
!5797 = distinct !DILexicalBlock(scope: !5772, file: !2704, line: 1516, column: 8)
!5798 = !DILocation(line: 1517, column: 17, scope: !5796)
!5799 = !DILocation(line: 1518, column: 4, scope: !5796)
!5800 = !DILocation(line: 1519, column: 19, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5802, file: !2704, line: 1518, column: 39)
!5802 = distinct !DILexicalBlock(scope: !5797, file: !2704, line: 1518, column: 15)
!5803 = !DILocation(line: 1519, column: 17, scope: !5801)
!5804 = !DILocation(line: 1520, column: 4, scope: !5801)
!5805 = !DILocation(line: 1522, column: 4, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5807, file: !2704, line: 1521, column: 47)
!5807 = distinct !DILexicalBlock(scope: !5773, file: !2704, line: 1521, column: 14)
!5808 = !DILocation(line: 1527, column: 19, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5806, file: !2704, line: 1522, column: 24)
!5810 = !DILocation(line: 1527, column: 17, scope: !5809)
!5811 = !DILocation(line: 1528, column: 5, scope: !5809)
!5812 = !DILocation(line: 0, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5809, file: !2704, line: 1530, column: 9)
!5814 = !DILocation(line: 1540, column: 23, scope: !5809)
!5815 = !DILocation(line: 1539, column: 17, scope: !5809)
!5816 = !DILocation(line: 1542, column: 5, scope: !5809)
!5817 = !DILocation(line: 1545, column: 23, scope: !5809)
!5818 = !DILocation(line: 1544, column: 17, scope: !5809)
!5819 = !DILocation(line: 1547, column: 5, scope: !5809)
!5820 = !DILocation(line: 1551, column: 23, scope: !5809)
!5821 = !DILocation(line: 1551, column: 6, scope: !5809)
!5822 = !DILocation(line: 1550, column: 17, scope: !5809)
!5823 = !DILocation(line: 1552, column: 5, scope: !5809)
!5824 = !DILocation(line: 0, scope: !5809)
!5825 = !DILocation(line: 1554, column: 8, scope: !5806)
!5826 = !DILocation(line: 1555, column: 19, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5828, file: !2704, line: 1554, column: 33)
!5828 = distinct !DILexicalBlock(scope: !5806, file: !2704, line: 1554, column: 8)
!5829 = !DILocation(line: 1555, column: 17, scope: !5827)
!5830 = !DILocation(line: 1556, column: 4, scope: !5827)
!5831 = !DILocation(line: 1557, column: 19, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5833, file: !2704, line: 1556, column: 39)
!5833 = distinct !DILexicalBlock(scope: !5828, file: !2704, line: 1556, column: 15)
!5834 = !DILocation(line: 1557, column: 17, scope: !5832)
!5835 = !DILocation(line: 1558, column: 4, scope: !5832)
!5836 = !DILocation(line: 0, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5838, file: !2704, line: 1560, column: 8)
!5838 = distinct !DILexicalBlock(scope: !5839, file: !2704, line: 1559, column: 45)
!5839 = distinct !DILexicalBlock(scope: !5807, file: !2704, line: 1559, column: 14)
!5840 = !DILocation(line: 1566, column: 17, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5842, file: !2704, line: 1565, column: 46)
!5842 = distinct !DILexicalBlock(scope: !5839, file: !2704, line: 1565, column: 14)
!5843 = !DILocation(line: 1566, column: 15, scope: !5841)
!5844 = !DILocation(line: 1567, column: 3, scope: !5841)
!5845 = !DILocation(line: 1574, column: 21, scope: !5674)
!5846 = !DILocation(line: 1575, column: 4, scope: !5672)
!5847 = !DILocation(line: 0, scope: !5672)
!5848 = !DILocation(line: 1575, column: 4, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5672, file: !2704, line: 1575, column: 4)
!5850 = !DILocation(line: 1582, column: 17, scope: !5610)
!5851 = !DILocation(line: 1582, column: 3, scope: !5610)
!5852 = !DILocation(line: 1584, column: 4, scope: !5676)
!5853 = !DILocation(line: 0, scope: !5676)
!5854 = !DILocation(line: 1584, column: 4, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5676, file: !2704, line: 1584, column: 4)
!5856 = !DILocation(line: 1587, column: 31, scope: !5679)
!5857 = !DILocation(line: 1591, column: 18, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5679, file: !2704, line: 1591, column: 8)
!5859 = !DILocation(line: 1591, column: 8, scope: !5679)
!5860 = !DILocation(line: 1592, column: 11, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5858, file: !2704, line: 1591, column: 24)
!5862 = !DILocation(line: 0, scope: !5679)
!5863 = !DILocation(line: 1593, column: 4, scope: !5861)
!5864 = !DILocation(line: 1594, column: 11, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5858, file: !2704, line: 1593, column: 11)
!5866 = !DILocation(line: 1604, column: 51, scope: !5677)
!5867 = !DILocation(line: 1604, column: 13, scope: !5677)
!5868 = !DILocation(line: 1604, column: 11, scope: !5677)
!5869 = !DILocation(line: 1606, column: 4, scope: !5677)
!5870 = !DILocation(line: 1609, column: 14, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5677, file: !2704, line: 1609, column: 8)
!5872 = !DILocation(line: 1609, column: 8, scope: !5677)
!5873 = !DILocation(line: 1619, column: 18, scope: !5677)
!5874 = !DILocation(line: 1620, column: 13, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5677, file: !2704, line: 1620, column: 8)
!5876 = !DILocation(line: 1620, column: 8, scope: !5677)
!5877 = !DILocation(line: 1622, column: 36, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5875, file: !2704, line: 1620, column: 18)
!5879 = !DILocation(line: 1622, column: 17, scope: !5878)
!5880 = !DILocation(line: 1623, column: 4, scope: !5878)
!5881 = !DILocation(line: 1632, column: 29, scope: !5677)
!5882 = !DILocation(line: 1632, column: 10, scope: !5677)
!5883 = !DILocation(line: 1632, column: 4, scope: !5677)
!5884 = !DILocation(line: 1407, column: 8, scope: !5610)
!5885 = !DILocation(line: 0, scope: !5677)
!5886 = !DILocation(line: 1634, column: 3, scope: !5677)
!5887 = !DILocation(line: 1640, column: 18, scope: !5682)
!5888 = !DILocation(line: 1640, column: 8, scope: !5677)
!5889 = !DILocation(line: 1729, column: 13, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5610, file: !2704, line: 1729, column: 7)
!5891 = !DILocation(line: 1641, column: 22, scope: !5681)
!5892 = !DILocation(line: 0, scope: !5681)
!5893 = !DILocation(line: 1646, column: 21, scope: !5681)
!5894 = !DILocation(line: 1649, column: 13, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5681, file: !2704, line: 1649, column: 9)
!5896 = !DILocation(line: 1649, column: 9, scope: !5681)
!5897 = !DILocation(line: 1650, column: 35, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5895, file: !2704, line: 1649, column: 34)
!5899 = !DILocation(line: 1650, column: 23, scope: !5898)
!5900 = !DILocation(line: 1651, column: 5, scope: !5898)
!5901 = !DILocation(line: 1660, column: 15, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5677, file: !2704, line: 1660, column: 8)
!5903 = !DILocation(line: 1660, column: 19, scope: !5902)
!5904 = !DILocation(line: 1660, column: 8, scope: !5677)
!5905 = !DILocation(line: 1661, column: 23, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5902, file: !2704, line: 1660, column: 28)
!5907 = !DILocation(line: 1661, column: 11, scope: !5906)
!5908 = !DILocation(line: 1665, column: 22, scope: !5906)
!5909 = !DILocation(line: 1666, column: 21, scope: !5906)
!5910 = !DILocation(line: 1668, column: 5, scope: !5906)
!5911 = !DILocation(line: 1677, column: 30, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5913, file: !2704, line: 1676, column: 49)
!5913 = distinct !DILexicalBlock(scope: !5677, file: !2704, line: 1676, column: 8)
!5914 = !DILocation(line: 1677, column: 5, scope: !5912)
!5915 = !DILocation(line: 1680, column: 4, scope: !5677)
!5916 = !DILocation(line: 0, scope: !5858)
!5917 = !DILocation(line: 1597, column: 14, scope: !5679)
!5918 = !DILocation(line: 1699, column: 11, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5610, file: !2704, line: 1699, column: 7)
!5920 = !DILocation(line: 1699, column: 7, scope: !5610)
!5921 = !DILocation(line: 1725, column: 7, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5610, file: !2704, line: 1725, column: 7)
!5923 = !DILocation(line: 1725, column: 12, scope: !5922)
!5924 = !DILocation(line: 1747, column: 13, scope: !5689)
!5925 = !DILocation(line: 1747, column: 7, scope: !5610)
!5926 = !DILocation(line: 1722, column: 24, scope: !5610)
!5927 = !DILocation(line: 1725, column: 7, scope: !5610)
!5928 = !DILocation(line: 1729, column: 7, scope: !5610)
!5929 = !DILocation(line: 1736, column: 13, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5610, file: !2704, line: 1736, column: 7)
!5931 = !DILocation(line: 1735, column: 19, scope: !5610)
!5932 = !DILocation(line: 1736, column: 7, scope: !5610)
!5933 = !DILocation(line: 1748, column: 10, scope: !5688)
!5934 = !DILocation(line: 1750, column: 15, scope: !5687)
!5935 = !DILocation(line: 1750, column: 8, scope: !5688)
!5936 = !DILocation(line: 0, scope: !5686)
!5937 = !DILocation(line: 1756, column: 15, scope: !5695)
!5938 = !DILocation(line: 1756, column: 9, scope: !5686)
!5939 = !DILocation(line: 1758, column: 7, scope: !5691)
!5940 = !DILocation(line: 0, scope: !5691)
!5941 = !DILocation(line: 1758, column: 7, scope: !5942)
!5942 = distinct !DILexicalBlock(scope: !5691, file: !2704, line: 1758, column: 7)
!5943 = !DILocation(line: 1764, column: 5, scope: !5686)
!5944 = !DILocation(line: 0, scope: !5688)
!5945 = !DILocation(line: 1764, column: 20, scope: !5686)
!5946 = !DILocation(line: 1764, column: 17, scope: !5686)
!5947 = !DILocation(line: 1765, column: 6, scope: !5697)
!5948 = !DILocation(line: 0, scope: !5697)
!5949 = !DILocation(line: 1765, column: 6, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5697, file: !2704, line: 1765, column: 6)
!5951 = distinct !{!5951, !5943, !5952}
!5952 = !DILocation(line: 1766, column: 5, scope: !5686)
!5953 = !DILocation(line: 1773, column: 12, scope: !5702)
!5954 = !DILocation(line: 1773, column: 7, scope: !5610)
!5955 = !DILocation(line: 1773, column: 7, scope: !5702)
!5956 = !DILocation(line: 1774, column: 4, scope: !5700)
!5957 = !DILocation(line: 0, scope: !5700)
!5958 = !DILocation(line: 1774, column: 4, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5700, file: !2704, line: 1774, column: 4)
!5960 = !DILocation(line: 1818, column: 8, scope: !5706)
!5961 = !DILocation(line: 1818, column: 27, scope: !5706)
!5962 = !DILocation(line: 1818, column: 25, scope: !5706)
!5963 = !DILocation(line: 1818, column: 8, scope: !5707)
!5964 = !DILocation(line: 1819, column: 5, scope: !5704)
!5965 = !DILocation(line: 0, scope: !5704)
!5966 = !DILocation(line: 1819, column: 5, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5704, file: !2704, line: 1819, column: 5)
!5968 = !DILocation(line: 1822, column: 14, scope: !5712)
!5969 = !DILocation(line: 1822, column: 8, scope: !5707)
!5970 = !DILocation(line: 1823, column: 5, scope: !5710)
!5971 = !DILocation(line: 0, scope: !5710)
!5972 = !DILocation(line: 1823, column: 5, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5710, file: !2704, line: 1823, column: 5)
!5974 = !DILocation(line: 1826, column: 20, scope: !5707)
!5975 = !DILocation(line: 1827, column: 4, scope: !5707)
!5976 = !DILocation(line: 0, scope: !5707)
!5977 = !DILocation(line: 1827, column: 21, scope: !5707)
!5978 = !DILocation(line: 1827, column: 18, scope: !5707)
!5979 = !DILocation(line: 1828, column: 5, scope: !5714)
!5980 = !DILocation(line: 0, scope: !5714)
!5981 = !DILocation(line: 1828, column: 5, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5714, file: !2704, line: 1828, column: 5)
!5983 = distinct !{!5983, !5975, !5984}
!5984 = !DILocation(line: 1829, column: 4, scope: !5707)
!5985 = !DILocation(line: 1831, column: 4, scope: !5717)
!5986 = !DILocation(line: 0, scope: !5717)
!5987 = !DILocation(line: 1831, column: 4, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5717, file: !2704, line: 1831, column: 4)
!5989 = !DILocation(line: 1835, column: 16, scope: !5610)
!5990 = !DILocation(line: 1835, column: 3, scope: !5610)
!5991 = !DILocation(line: 1836, column: 4, scope: !5719)
!5992 = !DILocation(line: 0, scope: !5719)
!5993 = !DILocation(line: 1836, column: 4, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5719, file: !2704, line: 1836, column: 4)
!5995 = !DILocation(line: 1837, column: 4, scope: !5720)
!5996 = distinct !{!5996, !5990, !5997}
!5997 = !DILocation(line: 1838, column: 3, scope: !5610)
!5998 = !DILocation(line: 1844, column: 1, scope: !5583)
!5999 = distinct !DISubprogram(name: "extract_conversion", scope: !2704, file: !2704, line: 642, type: !6000, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2700, retainedNodes: !6002)
!6000 = !DISubroutineType(types: !6001)
!6001 = !{!337, !5656, !337}
!6002 = !{!6003, !6004}
!6003 = !DILocalVariable(name: "conv", arg: 1, scope: !5999, file: !2704, line: 642, type: !5656)
!6004 = !DILocalVariable(name: "sp", arg: 2, scope: !5999, file: !2704, line: 643, type: !337)
!6005 = !DILocation(line: 0, scope: !5999)
!6006 = !DILocation(line: 645, column: 10, scope: !5999)
!6007 = !DILocation(line: 653, column: 2, scope: !5999)
!6008 = !DILocation(line: 654, column: 6, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !5999, file: !2704, line: 654, column: 6)
!6010 = !DILocation(line: 654, column: 10, scope: !6009)
!6011 = !DILocation(line: 654, column: 6, scope: !5999)
!6012 = !DILocation(line: 655, column: 24, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6009, file: !2704, line: 654, column: 18)
!6014 = !DILocation(line: 655, column: 19, scope: !6013)
!6015 = !DILocation(line: 656, column: 3, scope: !6013)
!6016 = !DILocation(line: 659, column: 7, scope: !5999)
!6017 = !DILocation(line: 660, column: 7, scope: !5999)
!6018 = !DILocation(line: 661, column: 7, scope: !5999)
!6019 = !DILocation(line: 662, column: 7, scope: !5999)
!6020 = !DILocation(line: 663, column: 7, scope: !5999)
!6021 = !DILocation(line: 665, column: 2, scope: !5999)
!6022 = !DILocation(line: 666, column: 1, scope: !5999)
!6023 = distinct !DISubprogram(name: "outs", scope: !2704, file: !2704, line: 1319, type: !6024, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2700, retainedNodes: !6026)
!6024 = !DISubroutineType(types: !6025)
!6025 = !{!103, !4040, !102, !337, !337}
!6026 = !{!6027, !6028, !6029, !6030, !6031, !6032}
!6027 = !DILocalVariable(name: "out", arg: 1, scope: !6023, file: !2704, line: 1319, type: !4040)
!6028 = !DILocalVariable(name: "ctx", arg: 2, scope: !6023, file: !2704, line: 1320, type: !102)
!6029 = !DILocalVariable(name: "sp", arg: 3, scope: !6023, file: !2704, line: 1321, type: !337)
!6030 = !DILocalVariable(name: "ep", arg: 4, scope: !6023, file: !2704, line: 1322, type: !337)
!6031 = !DILocalVariable(name: "count", scope: !6023, file: !2704, line: 1324, type: !132)
!6032 = !DILocalVariable(name: "rc", scope: !6033, file: !2704, line: 1327, type: !103)
!6033 = distinct !DILexicalBlock(scope: !6023, file: !2704, line: 1326, column: 45)
!6034 = !DILocation(line: 0, scope: !6023)
!6035 = !DILocation(line: 1326, column: 2, scope: !6023)
!6036 = !DILocation(line: 1324, column: 9, scope: !6023)
!6037 = !DILocation(line: 1326, column: 13, scope: !6023)
!6038 = !DILocation(line: 1326, column: 19, scope: !6023)
!6039 = !DILocation(line: 1327, column: 21, scope: !6033)
!6040 = !DILocation(line: 1326, column: 36, scope: !6023)
!6041 = !DILocation(line: 1326, column: 39, scope: !6023)
!6042 = !DILocation(line: 1327, column: 24, scope: !6033)
!6043 = !DILocation(line: 1327, column: 16, scope: !6033)
!6044 = !DILocation(line: 1327, column: 12, scope: !6033)
!6045 = !DILocation(line: 0, scope: !6033)
!6046 = !DILocation(line: 1329, column: 10, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6033, file: !2704, line: 1329, column: 7)
!6048 = !DILocation(line: 1329, column: 7, scope: !6033)
!6049 = distinct !{!6049, !6035, !6050}
!6050 = !DILocation(line: 1333, column: 2, scope: !6023)
!6051 = !DILocation(line: 1336, column: 1, scope: !6023)
!6052 = distinct !DISubprogram(name: "encode_uint", scope: !2704, file: !2704, line: 788, type: !6053, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2700, retainedNodes: !6055)
!6053 = !DISubroutineType(types: !6054)
!6054 = !{!277, !2726, !5656, !277, !337}
!6055 = !{!6056, !6057, !6058, !6059, !6060, !6061, !6063, !6064}
!6056 = !DILocalVariable(name: "value", arg: 1, scope: !6052, file: !2704, line: 788, type: !2726)
!6057 = !DILocalVariable(name: "conv", arg: 2, scope: !6052, file: !2704, line: 789, type: !5656)
!6058 = !DILocalVariable(name: "bps", arg: 3, scope: !6052, file: !2704, line: 790, type: !277)
!6059 = !DILocalVariable(name: "bpe", arg: 4, scope: !6052, file: !2704, line: 791, type: !337)
!6060 = !DILocalVariable(name: "upcase", scope: !6052, file: !2704, line: 793, type: !131)
!6061 = !DILocalVariable(name: "radix", scope: !6052, file: !2704, line: 794, type: !6062)
!6062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6063 = !DILocalVariable(name: "bp", scope: !6052, file: !2704, line: 795, type: !277)
!6064 = !DILocalVariable(name: "lsv", scope: !6065, file: !2704, line: 798, type: !32)
!6065 = distinct !DILexicalBlock(scope: !6052, file: !2704, line: 797, column: 5)
!6066 = !DILocation(line: 0, scope: !6052)
!6067 = !DILocation(line: 793, column: 35, scope: !6052)
!6068 = !DILocation(line: 793, column: 24, scope: !6052)
!6069 = !DILocation(line: 793, column: 16, scope: !6052)
!6070 = !DILocation(line: 794, column: 29, scope: !6052)
!6071 = !DILocation(line: 795, column: 24, scope: !6052)
!6072 = !DILocation(line: 795, column: 17, scope: !6052)
!6073 = !DILocation(line: 797, column: 2, scope: !6052)
!6074 = !DILocation(line: 802, column: 9, scope: !6065)
!6075 = !DILocation(line: 798, column: 22, scope: !6065)
!6076 = !DILocation(line: 0, scope: !6065)
!6077 = !DILocation(line: 800, column: 16, scope: !6065)
!6078 = !DILocation(line: 800, column: 11, scope: !6065)
!6079 = !DILocation(line: 800, column: 4, scope: !6065)
!6080 = !DILocation(line: 800, column: 9, scope: !6065)
!6081 = !DILocation(line: 803, column: 18, scope: !6052)
!6082 = !DILocation(line: 803, column: 24, scope: !6052)
!6083 = !DILocation(line: 803, column: 2, scope: !6065)
!6084 = distinct !{!6084, !6073, !6085}
!6085 = !DILocation(line: 803, column: 37, scope: !6052)
!6086 = !DILocation(line: 808, column: 12, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !6052, file: !2704, line: 808, column: 6)
!6088 = !DILocation(line: 808, column: 6, scope: !6052)
!6089 = !DILocation(line: 809, column: 7, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !6087, file: !2704, line: 808, column: 23)
!6091 = !DILocation(line: 813, column: 3, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6093, file: !2704, line: 811, column: 27)
!6093 = distinct !DILexicalBlock(scope: !6094, file: !2704, line: 811, column: 14)
!6094 = distinct !DILexicalBlock(scope: !6090, file: !2704, line: 809, column: 7)
!6095 = !DILocation(line: 0, scope: !6094)
!6096 = !DILocation(line: 818, column: 2, scope: !6052)
!6097 = distinct !DISubprogram(name: "store_count", scope: !2704, file: !2704, line: 1280, type: !6098, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2700, retainedNodes: !6102)
!6098 = !DISubroutineType(types: !6099)
!6099 = !{null, !6100, !102, !103}
!6100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6101, size: 32)
!6101 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5623)
!6102 = !{!6103, !6104, !6105}
!6103 = !DILocalVariable(name: "conv", arg: 1, scope: !6097, file: !2704, line: 1280, type: !6100)
!6104 = !DILocalVariable(name: "dp", arg: 2, scope: !6097, file: !2704, line: 1281, type: !102)
!6105 = !DILocalVariable(name: "count", arg: 3, scope: !6097, file: !2704, line: 1282, type: !103)
!6106 = !DILocation(line: 0, scope: !6097)
!6107 = !DILocation(line: 1284, column: 38, scope: !6097)
!6108 = !DILocation(line: 1284, column: 2, scope: !6097)
!6109 = !DILocation(line: 1286, column: 4, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6097, file: !2704, line: 1284, column: 50)
!6111 = !DILocation(line: 1286, column: 14, scope: !6110)
!6112 = !DILocation(line: 1287, column: 3, scope: !6110)
!6113 = !DILocation(line: 1289, column: 24, scope: !6110)
!6114 = !DILocation(line: 1289, column: 22, scope: !6110)
!6115 = !DILocation(line: 1290, column: 3, scope: !6110)
!6116 = !DILocation(line: 1292, column: 18, scope: !6110)
!6117 = !DILocation(line: 1292, column: 4, scope: !6110)
!6118 = !DILocation(line: 1292, column: 16, scope: !6110)
!6119 = !DILocation(line: 1293, column: 3, scope: !6110)
!6120 = !DILocation(line: 1295, column: 4, scope: !6110)
!6121 = !DILocation(line: 1295, column: 15, scope: !6110)
!6122 = !DILocation(line: 1296, column: 3, scope: !6110)
!6123 = !DILocation(line: 1298, column: 22, scope: !6110)
!6124 = !DILocation(line: 1298, column: 4, scope: !6110)
!6125 = !DILocation(line: 1298, column: 20, scope: !6110)
!6126 = !DILocation(line: 1299, column: 3, scope: !6110)
!6127 = !DILocation(line: 1301, column: 21, scope: !6110)
!6128 = !DILocation(line: 1301, column: 4, scope: !6110)
!6129 = !DILocation(line: 1301, column: 19, scope: !6110)
!6130 = !DILocation(line: 1302, column: 3, scope: !6110)
!6131 = !DILocation(line: 1304, column: 4, scope: !6110)
!6132 = !DILocation(line: 1304, column: 17, scope: !6110)
!6133 = !DILocation(line: 1305, column: 3, scope: !6110)
!6134 = !DILocation(line: 1307, column: 4, scope: !6110)
!6135 = !DILocation(line: 1307, column: 20, scope: !6110)
!6136 = !DILocation(line: 1308, column: 3, scope: !6110)
!6137 = !DILocation(line: 1316, column: 1, scope: !6097)
!6138 = distinct !DISubprogram(name: "isupper", scope: !6139, file: !6139, line: 16, type: !396, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2700, retainedNodes: !6140)
!6139 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6140 = !{!6141}
!6141 = !DILocalVariable(name: "a", arg: 1, scope: !6138, file: !6139, line: 16, type: !103)
!6142 = !DILocation(line: 0, scope: !6138)
!6143 = !DILocation(line: 18, column: 29, scope: !6138)
!6144 = !DILocation(line: 18, column: 45, scope: !6138)
!6145 = !DILocation(line: 18, column: 2, scope: !6138)
!6146 = distinct !DISubprogram(name: "conversion_radix", scope: !2704, file: !2704, line: 761, type: !6147, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2700, retainedNodes: !6149)
!6147 = !DISubroutineType(types: !6148)
!6148 = !{!132, !278}
!6149 = !{!6150}
!6150 = !DILocalVariable(name: "specifier", arg: 1, scope: !6146, file: !2704, line: 761, type: !278)
!6151 = !DILocation(line: 0, scope: !6146)
!6152 = !DILocation(line: 763, column: 2, scope: !6146)
!6153 = !DILocation(line: 770, column: 3, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6146, file: !2704, line: 763, column: 21)
!6155 = !DILocation(line: 774, column: 3, scope: !6154)
!6156 = !DILocation(line: 0, scope: !6154)
!6157 = !DILocation(line: 776, column: 1, scope: !6146)
!6158 = distinct !DISubprogram(name: "extract_flags", scope: !2704, file: !2704, line: 339, type: !6000, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2700, retainedNodes: !6159)
!6159 = !{!6160, !6161, !6162}
!6160 = !DILocalVariable(name: "conv", arg: 1, scope: !6158, file: !2704, line: 339, type: !5656)
!6161 = !DILocalVariable(name: "sp", arg: 2, scope: !6158, file: !2704, line: 340, type: !337)
!6162 = !DILocalVariable(name: "loop", scope: !6158, file: !2704, line: 342, type: !131)
!6163 = !DILocation(line: 0, scope: !6158)
!6164 = !DILocation(line: 344, column: 2, scope: !6158)
!6165 = !DILocation(line: 345, column: 11, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6158, file: !2704, line: 344, column: 5)
!6167 = !DILocation(line: 345, column: 3, scope: !6166)
!6168 = !DILocation(line: 351, column: 4, scope: !6169)
!6169 = distinct !DILexicalBlock(scope: !6166, file: !2704, line: 345, column: 16)
!6170 = !DILocation(line: 354, column: 4, scope: !6169)
!6171 = !DILocation(line: 357, column: 4, scope: !6169)
!6172 = !DILocation(line: 360, column: 4, scope: !6169)
!6173 = !DILocation(line: 0, scope: !6169)
!6174 = !DILocation(line: 370, column: 12, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6158, file: !2704, line: 370, column: 6)
!6176 = !DILocation(line: 370, column: 22, scope: !6175)
!6177 = !DILocation(line: 371, column: 19, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6175, file: !2704, line: 370, column: 42)
!6179 = !DILocation(line: 372, column: 2, scope: !6178)
!6180 = !DILocation(line: 376, column: 2, scope: !6158)
!6181 = distinct !DISubprogram(name: "extract_width", scope: !2704, file: !2704, line: 388, type: !6000, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2700, retainedNodes: !6182)
!6182 = !{!6183, !6184, !6185, !6186}
!6183 = !DILocalVariable(name: "conv", arg: 1, scope: !6181, file: !2704, line: 388, type: !5656)
!6184 = !DILocalVariable(name: "sp", arg: 2, scope: !6181, file: !2704, line: 389, type: !337)
!6185 = !DILocalVariable(name: "wp", scope: !6181, file: !2704, line: 398, type: !337)
!6186 = !DILocalVariable(name: "width", scope: !6181, file: !2704, line: 399, type: !132)
!6187 = !DILocation(line: 0, scope: !6181)
!6188 = !DILocation(line: 391, column: 8, scope: !6181)
!6189 = !DILocation(line: 391, column: 22, scope: !6181)
!6190 = !DILocation(line: 393, column: 6, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6181, file: !2704, line: 393, column: 6)
!6192 = !DILocation(line: 393, column: 10, scope: !6191)
!6193 = !DILocation(line: 393, column: 6, scope: !6181)
!6194 = !DILocation(line: 394, column: 20, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6191, file: !2704, line: 393, column: 18)
!6196 = !DILocation(line: 395, column: 10, scope: !6195)
!6197 = !DILocation(line: 395, column: 3, scope: !6195)
!6198 = !DILocation(line: 399, column: 17, scope: !6181)
!6199 = !DILocation(line: 401, column: 6, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6181, file: !2704, line: 401, column: 6)
!6201 = !DILocation(line: 401, column: 9, scope: !6200)
!6202 = !DILocation(line: 401, column: 6, scope: !6181)
!6203 = !DILocation(line: 402, column: 23, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6200, file: !2704, line: 401, column: 16)
!6205 = !DILocation(line: 403, column: 9, scope: !6204)
!6206 = !DILocation(line: 403, column: 21, scope: !6204)
!6207 = !DILocation(line: 405, column: 11, scope: !6204)
!6208 = !DILocation(line: 404, column: 21, scope: !6204)
!6209 = !DILocation(line: 406, column: 2, scope: !6204)
!6210 = !DILocation(line: 409, column: 1, scope: !6181)
!6211 = distinct !DISubprogram(name: "extract_prec", scope: !2704, file: !2704, line: 420, type: !6000, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2700, retainedNodes: !6212)
!6212 = !{!6213, !6214, !6215}
!6213 = !DILocalVariable(name: "conv", arg: 1, scope: !6211, file: !2704, line: 420, type: !5656)
!6214 = !DILocalVariable(name: "sp", arg: 2, scope: !6211, file: !2704, line: 421, type: !337)
!6215 = !DILocalVariable(name: "prec", scope: !6211, file: !2704, line: 435, type: !132)
!6216 = !DILocation(line: 0, scope: !6211)
!6217 = !DILocation(line: 423, column: 24, scope: !6211)
!6218 = !DILocation(line: 423, column: 28, scope: !6211)
!6219 = !DILocation(line: 423, column: 8, scope: !6211)
!6220 = !DILocation(line: 423, column: 21, scope: !6211)
!6221 = !DILocation(line: 425, column: 6, scope: !6211)
!6222 = !DILocation(line: 428, column: 2, scope: !6211)
!6223 = !DILocation(line: 430, column: 6, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6211, file: !2704, line: 430, column: 6)
!6225 = !DILocation(line: 430, column: 10, scope: !6224)
!6226 = !DILocation(line: 430, column: 6, scope: !6211)
!6227 = !DILocation(line: 431, column: 19, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6224, file: !2704, line: 430, column: 18)
!6229 = !DILocation(line: 432, column: 10, scope: !6228)
!6230 = !DILocation(line: 432, column: 3, scope: !6228)
!6231 = !DILocation(line: 435, column: 16, scope: !6211)
!6232 = !DILocation(line: 437, column: 8, scope: !6211)
!6233 = !DILocation(line: 437, column: 19, scope: !6211)
!6234 = !DILocation(line: 439, column: 10, scope: !6211)
!6235 = !DILocation(line: 438, column: 20, scope: !6211)
!6236 = !DILocation(line: 441, column: 9, scope: !6211)
!6237 = !DILocation(line: 442, column: 1, scope: !6211)
!6238 = distinct !DISubprogram(name: "extract_length", scope: !2704, file: !2704, line: 453, type: !6000, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2700, retainedNodes: !6239)
!6239 = !{!6240, !6241}
!6240 = !DILocalVariable(name: "conv", arg: 1, scope: !6238, file: !2704, line: 453, type: !5656)
!6241 = !DILocalVariable(name: "sp", arg: 2, scope: !6238, file: !2704, line: 454, type: !337)
!6242 = !DILocation(line: 0, scope: !6238)
!6243 = !DILocation(line: 456, column: 10, scope: !6238)
!6244 = !DILocation(line: 456, column: 2, scope: !6238)
!6245 = !DILocation(line: 458, column: 8, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6247, file: !2704, line: 458, column: 7)
!6247 = distinct !DILexicalBlock(scope: !6238, file: !2704, line: 456, column: 15)
!6248 = !DILocation(line: 458, column: 7, scope: !6246)
!6249 = !DILocation(line: 458, column: 13, scope: !6246)
!6250 = !DILocation(line: 0, scope: !6246)
!6251 = !DILocation(line: 458, column: 7, scope: !6247)
!6252 = !DILocation(line: 459, column: 21, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6246, file: !2704, line: 458, column: 21)
!6254 = !DILocation(line: 460, column: 4, scope: !6253)
!6255 = !DILocation(line: 461, column: 3, scope: !6253)
!6256 = !DILocation(line: 462, column: 21, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6246, file: !2704, line: 461, column: 10)
!6258 = !DILocation(line: 466, column: 8, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6247, file: !2704, line: 466, column: 7)
!6260 = !DILocation(line: 466, column: 7, scope: !6259)
!6261 = !DILocation(line: 466, column: 13, scope: !6259)
!6262 = !DILocation(line: 0, scope: !6259)
!6263 = !DILocation(line: 466, column: 7, scope: !6247)
!6264 = !DILocation(line: 467, column: 21, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6259, file: !2704, line: 466, column: 21)
!6266 = !DILocation(line: 468, column: 4, scope: !6265)
!6267 = !DILocation(line: 469, column: 3, scope: !6265)
!6268 = !DILocation(line: 470, column: 21, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6259, file: !2704, line: 469, column: 10)
!6270 = !DILocation(line: 474, column: 9, scope: !6247)
!6271 = !DILocation(line: 474, column: 20, scope: !6247)
!6272 = !DILocation(line: 475, column: 3, scope: !6247)
!6273 = !DILocation(line: 476, column: 3, scope: !6247)
!6274 = !DILocation(line: 478, column: 9, scope: !6247)
!6275 = !DILocation(line: 478, column: 20, scope: !6247)
!6276 = !DILocation(line: 479, column: 3, scope: !6247)
!6277 = !DILocation(line: 480, column: 3, scope: !6247)
!6278 = !DILocation(line: 482, column: 9, scope: !6247)
!6279 = !DILocation(line: 482, column: 20, scope: !6247)
!6280 = !DILocation(line: 483, column: 3, scope: !6247)
!6281 = !DILocation(line: 484, column: 3, scope: !6247)
!6282 = !DILocation(line: 486, column: 9, scope: !6247)
!6283 = !DILocation(line: 486, column: 20, scope: !6247)
!6284 = !DILocation(line: 487, column: 3, scope: !6247)
!6285 = !DILocation(line: 492, column: 21, scope: !6247)
!6286 = !DILocation(line: 493, column: 3, scope: !6247)
!6287 = !DILocation(line: 495, column: 9, scope: !6247)
!6288 = !DILocation(line: 495, column: 20, scope: !6247)
!6289 = !DILocation(line: 496, column: 3, scope: !6247)
!6290 = !DILocation(line: 498, column: 2, scope: !6238)
!6291 = distinct !DISubprogram(name: "extract_specifier", scope: !2704, file: !2704, line: 513, type: !6000, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2700, retainedNodes: !6292)
!6292 = !{!6293, !6294, !6295, !6296}
!6293 = !DILocalVariable(name: "conv", arg: 1, scope: !6291, file: !2704, line: 513, type: !5656)
!6294 = !DILocalVariable(name: "sp", arg: 2, scope: !6291, file: !2704, line: 514, type: !337)
!6295 = !DILocalVariable(name: "unsupported", scope: !6291, file: !2704, line: 516, type: !131)
!6296 = !DILabel(scope: !6297, name: "int_conv", file: !2704, line: 526)
!6297 = distinct !DILexicalBlock(scope: !6291, file: !2704, line: 520, column: 27)
!6298 = !DILocation(line: 0, scope: !6291)
!6299 = !DILocation(line: 518, column: 20, scope: !6291)
!6300 = !DILocation(line: 518, column: 8, scope: !6291)
!6301 = !DILocation(line: 518, column: 18, scope: !6291)
!6302 = !DILocation(line: 520, column: 2, scope: !6291)
!6303 = !DILocation(line: 525, column: 3, scope: !6297)
!6304 = !DILocation(line: 0, scope: !6297)
!6305 = !DILocation(line: 526, column: 1, scope: !6297)
!6306 = !DILocation(line: 528, column: 24, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6297, file: !2704, line: 528, column: 7)
!6308 = !DILocation(line: 528, column: 7, scope: !6297)
!6309 = !DILocation(line: 535, column: 23, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6297, file: !2704, line: 535, column: 7)
!6311 = !DILocation(line: 535, column: 7, scope: !6297)
!6312 = !DILocation(line: 536, column: 36, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6310, file: !2704, line: 535, column: 31)
!6314 = !DILocation(line: 537, column: 3, scope: !6313)
!6315 = !DILocation(line: 570, column: 9, scope: !6297)
!6316 = !DILocation(line: 570, column: 23, scope: !6297)
!6317 = !DILocation(line: 575, column: 4, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6319, file: !2704, line: 573, column: 48)
!6319 = distinct !DILexicalBlock(scope: !6297, file: !2704, line: 573, column: 7)
!6320 = !DILocation(line: 603, column: 9, scope: !6297)
!6321 = !DILocation(line: 603, column: 23, scope: !6297)
!6322 = !DILocation(line: 605, column: 24, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6297, file: !2704, line: 605, column: 7)
!6324 = !DILocation(line: 605, column: 7, scope: !6297)
!6325 = !DILocation(line: 612, column: 9, scope: !6297)
!6326 = !DILocation(line: 612, column: 23, scope: !6297)
!6327 = !DILocation(line: 619, column: 24, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6297, file: !2704, line: 619, column: 7)
!6329 = !DILocation(line: 619, column: 7, scope: !6297)
!6330 = !DILocation(line: 625, column: 9, scope: !6297)
!6331 = !DILocation(line: 625, column: 17, scope: !6297)
!6332 = !DILocation(line: 626, column: 3, scope: !6297)
!6333 = !DILocation(line: 629, column: 20, scope: !6291)
!6334 = !DILocation(line: 629, column: 8, scope: !6291)
!6335 = !DILocation(line: 518, column: 23, scope: !6291)
!6336 = !DILocation(line: 631, column: 2, scope: !6291)
!6337 = distinct !DISubprogram(name: "extract_decimal", scope: !2704, file: !2704, line: 318, type: !6338, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2700, retainedNodes: !6340)
!6338 = !DISubroutineType(types: !6339)
!6339 = !{!132, !373}
!6340 = !{!6341, !6342, !6343}
!6341 = !DILocalVariable(name: "str", arg: 1, scope: !6337, file: !2704, line: 318, type: !373)
!6342 = !DILocalVariable(name: "sp", scope: !6337, file: !2704, line: 320, type: !337)
!6343 = !DILocalVariable(name: "val", scope: !6337, file: !2704, line: 321, type: !132)
!6344 = !DILocation(line: 0, scope: !6337)
!6345 = !DILocation(line: 320, column: 19, scope: !6337)
!6346 = !DILocation(line: 323, column: 37, scope: !6337)
!6347 = !DILocation(line: 323, column: 17, scope: !6337)
!6348 = !DILocation(line: 323, column: 9, scope: !6337)
!6349 = !DILocation(line: 323, column: 2, scope: !6337)
!6350 = !DILocation(line: 324, column: 13, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6337, file: !2704, line: 323, column: 43)
!6352 = !DILocation(line: 324, column: 24, scope: !6351)
!6353 = !DILocation(line: 324, column: 19, scope: !6351)
!6354 = !DILocation(line: 324, column: 27, scope: !6351)
!6355 = distinct !{!6355, !6349, !6356}
!6356 = !DILocation(line: 325, column: 2, scope: !6337)
!6357 = !DILocation(line: 326, column: 7, scope: !6337)
!6358 = !DILocation(line: 327, column: 2, scope: !6337)
!6359 = distinct !DISubprogram(name: "isdigit", scope: !6139, file: !6139, line: 43, type: !396, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2700, retainedNodes: !6360)
!6360 = !{!6361}
!6361 = !DILocalVariable(name: "a", arg: 1, scope: !6359, file: !6139, line: 43, type: !103)
!6362 = !DILocation(line: 0, scope: !6359)
!6363 = !DILocation(line: 45, column: 29, scope: !6359)
!6364 = !DILocation(line: 45, column: 45, scope: !6359)
!6365 = !DILocation(line: 45, column: 2, scope: !6359)
!6366 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6367, file: !6367, line: 9, type: !334, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !251)
!6367 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!6368 = !DILocation(line: 11, column: 1, scope: !6366)
!6369 = !{i64 2147564971, i64 2147565014, i64 2147565054}
!6370 = !DILocation(line: 12, column: 1, scope: !6366)
!6371 = !{i64 2147569233, i64 2147569276, i64 2147569316}
!6372 = !DILocation(line: 13, column: 1, scope: !6366)
!6373 = !{i64 2147569414, i64 2147569457, i64 2147569497}
!6374 = !DILocation(line: 14, column: 1, scope: !6366)
!6375 = !{i64 2147569580, i64 2147569623, i64 2147569663}
!6376 = !DILocation(line: 15, column: 1, scope: !6366)
!6377 = !{i64 2147569789, i64 2147569832, i64 2147569872}
!6378 = !DILocation(line: 16, column: 1, scope: !6366)
!6379 = !{i64 2147569958, i64 2147570001, i64 2147570041}
!6380 = !DILocation(line: 17, column: 1, scope: !6366)
!6381 = !{i64 2147570121, i64 2147570164, i64 2147570204}
!6382 = !DILocation(line: 18, column: 1, scope: !6366)
!6383 = !{i64 2147570305, i64 2147570348, i64 2147570388}
!6384 = !DILocation(line: 19, column: 1, scope: !6366)
!6385 = !{i64 2147570484, i64 2147570527, i64 2147570567}
!6386 = !DILocation(line: 20, column: 1, scope: !6366)
!6387 = !{i64 2147570726, i64 2147570769, i64 2147570809}
!6388 = !DILocation(line: 21, column: 1, scope: !6366)
!6389 = !{i64 2147570961, i64 2147571004, i64 2147571044}
!6390 = !DILocation(line: 22, column: 1, scope: !6366)
!6391 = !{i64 2147571147, i64 2147571190, i64 2147571230}
!6392 = !DILocation(line: 23, column: 1, scope: !6366)
!6393 = !{i64 2147571363, i64 2147571406, i64 2147571446}
!6394 = !DILocation(line: 24, column: 1, scope: !6366)
!6395 = !{i64 2147571566, i64 2147571609, i64 2147571649}
!6396 = !DILocation(line: 25, column: 1, scope: !6366)
!6397 = !{i64 2147571769, i64 2147571812, i64 2147571852}
!6398 = !DILocation(line: 26, column: 1, scope: !6366)
!6399 = !{i64 2147571944, i64 2147571987, i64 2147572027}
!6400 = !DILocation(line: 27, column: 1, scope: !6366)
!6401 = !{i64 2147572155, i64 2147572198, i64 2147572238}
!6402 = !DILocation(line: 28, column: 1, scope: !6366)
!6403 = !{i64 2147572359, i64 2147572402, i64 2147572442}
!6404 = !DILocation(line: 29, column: 1, scope: !6366)
!6405 = !{i64 2147572552, i64 2147572595, i64 2147572635}
!6406 = !DILocation(line: 30, column: 1, scope: !6366)
!6407 = !{i64 2147572754, i64 2147572797, i64 2147572837}
!6408 = !DILocation(line: 31, column: 1, scope: !6366)
!6409 = !{i64 2147572953, i64 2147572996, i64 2147573036}
!6410 = !DILocation(line: 32, column: 1, scope: !6366)
!6411 = !{i64 2147573180, i64 2147573223, i64 2147573263}
!6412 = !DILocation(line: 33, column: 1, scope: !6366)
!6413 = !{i64 2147573382, i64 2147573425, i64 2147573465}
!6414 = !DILocation(line: 34, column: 1, scope: !6366)
!6415 = !{i64 2147573597, i64 2147573640, i64 2147573680}
!6416 = !DILocation(line: 35, column: 1, scope: !6366)
!6417 = !{i64 2147573769, i64 2147573812, i64 2147573852}
!6418 = !DILocation(line: 36, column: 1, scope: !6366)
!6419 = !{i64 2147573971, i64 2147574014, i64 2147574054}
!6420 = !DILocation(line: 37, column: 1, scope: !6366)
!6421 = !{i64 2147574197, i64 2147574240, i64 2147574280}
!6422 = !DILocation(line: 38, column: 1, scope: !6366)
!6423 = !{i64 2147574396, i64 2147574439, i64 2147574479}
!6424 = !DILocation(line: 39, column: 1, scope: !6366)
!6425 = !{i64 2147574571, i64 2147574614, i64 2147574654}
!6426 = !DILocation(line: 40, column: 1, scope: !6366)
!6427 = !{i64 2147574824, i64 2147574867, i64 2147574907}
!6428 = !DILocation(line: 41, column: 1, scope: !6366)
!6429 = !{i64 2147575065, i64 2147575108, i64 2147575148}
!6430 = !DILocation(line: 42, column: 1, scope: !6366)
!6431 = !{i64 2147575300, i64 2147575343, i64 2147575383}
!6432 = !DILocation(line: 43, column: 1, scope: !6366)
!6433 = !{i64 2147575532, i64 2147575575, i64 2147575615}
!6434 = !DILocation(line: 44, column: 1, scope: !6366)
!6435 = !{i64 2147575779, i64 2147575822, i64 2147575862}
!6436 = !DILocation(line: 45, column: 1, scope: !6366)
!6437 = !{i64 2147576005, i64 2147576048, i64 2147576088}
!6438 = !DILocation(line: 46, column: 1, scope: !6366)
!6439 = !{i64 2147576231, i64 2147576274, i64 2147576314}
!6440 = !DILocation(line: 47, column: 1, scope: !6366)
!6441 = !{i64 2147576490, i64 2147576533, i64 2147576573}
!6442 = !DILocation(line: 48, column: 1, scope: !6366)
!6443 = !{i64 2147576716, i64 2147576759, i64 2147576799}
!6444 = !DILocation(line: 49, column: 1, scope: !6366)
!6445 = !{i64 2147576951, i64 2147576994, i64 2147577034}
!6446 = !DILocation(line: 50, column: 1, scope: !6366)
!6447 = !{i64 2147577189, i64 2147577232, i64 2147577272}
!6448 = !DILocation(line: 51, column: 1, scope: !6366)
!6449 = !{i64 2147577463, i64 2147577506, i64 2147577546}
!6450 = !DILocation(line: 52, column: 1, scope: !6366)
!6451 = !{i64 2147577701, i64 2147577744, i64 2147577784}
!6452 = !DILocation(line: 53, column: 1, scope: !6366)
!6453 = !{i64 2147577954, i64 2147577997, i64 2147578037}
!6454 = !DILocation(line: 54, column: 1, scope: !6366)
!6455 = !{i64 2147582259, i64 2147582302, i64 2147582342}
!6456 = !DILocation(line: 55, column: 1, scope: !6366)
!6457 = !{i64 2147582509, i64 2147582552, i64 2147582592}
!6458 = !DILocation(line: 56, column: 1, scope: !6366)
!6459 = !{i64 2147582750, i64 2147582793, i64 2147582833}
!6460 = !DILocation(line: 57, column: 1, scope: !6366)
!6461 = !{i64 2147582997, i64 2147583040, i64 2147583080}
!6462 = !DILocation(line: 58, column: 1, scope: !6366)
!6463 = !{i64 2147583232, i64 2147583275, i64 2147583315}
!6464 = !DILocation(line: 59, column: 1, scope: !6366)
!6465 = !{i64 2147583467, i64 2147583510, i64 2147583550}
!6466 = !DILocation(line: 60, column: 1, scope: !6366)
!6467 = !{i64 2147583702, i64 2147583745, i64 2147583785}
!6468 = !DILocation(line: 61, column: 1, scope: !6366)
!6469 = !{i64 2147583940, i64 2147583983, i64 2147584023}
!6470 = !DILocation(line: 62, column: 1, scope: !6366)
!6471 = !{i64 2147584181, i64 2147584224, i64 2147584264}
!6472 = !DILocation(line: 63, column: 1, scope: !6366)
!6473 = !{i64 2147584461, i64 2147584504, i64 2147584544}
!6474 = !DILocation(line: 64, column: 1, scope: !6366)
!6475 = !{i64 2147584720, i64 2147584763, i64 2147584803}
!6476 = !DILocation(line: 65, column: 1, scope: !6366)
!6477 = !{i64 2147584958, i64 2147585001, i64 2147585041}
!6478 = !DILocation(line: 66, column: 1, scope: !6366)
!6479 = !{i64 2147585208, i64 2147585251, i64 2147585291}
!6480 = !DILocation(line: 67, column: 1, scope: !6366)
!6481 = !{i64 2147585437, i64 2147585480, i64 2147585520}
!6482 = !DILocation(line: 68, column: 1, scope: !6366)
!6483 = !{i64 2147585645, i64 2147585688, i64 2147585728}
!6484 = !DILocation(line: 69, column: 1, scope: !6366)
!6485 = !{i64 2147585856, i64 2147585899, i64 2147585939}
!6486 = !DILocation(line: 70, column: 1, scope: !6366)
!6487 = !{i64 2147586091, i64 2147586134, i64 2147586174}
!6488 = !DILocation(line: 71, column: 1, scope: !6366)
!6489 = !{i64 2147586320, i64 2147586363, i64 2147586403}
!6490 = !DILocation(line: 72, column: 1, scope: !6366)
!6491 = !{i64 2147586537, i64 2147586580, i64 2147586620}
!6492 = !DILocation(line: 73, column: 1, scope: !6366)
!6493 = !{i64 2147586766, i64 2147586809, i64 2147586849}
!6494 = !DILocation(line: 74, column: 1, scope: !6366)
!6495 = !{i64 2147587004, i64 2147587047, i64 2147587087}
!6496 = !DILocation(line: 75, column: 1, scope: !6366)
!6497 = !{i64 2147587236, i64 2147587279, i64 2147587319}
!6498 = !DILocation(line: 76, column: 1, scope: !6366)
!6499 = !{i64 2147587462, i64 2147587505, i64 2147587545}
!6500 = !DILocation(line: 77, column: 1, scope: !6366)
!6501 = !{i64 2147587679, i64 2147587722, i64 2147587762}
!6502 = !DILocation(line: 78, column: 1, scope: !6366)
!6503 = !{i64 2147587911, i64 2147587954, i64 2147587994}
!6504 = !DILocation(line: 79, column: 1, scope: !6366)
!6505 = !{i64 2147588137, i64 2147588180, i64 2147588220}
!6506 = !DILocation(line: 80, column: 1, scope: !6366)
!6507 = !{i64 2147588351, i64 2147588394, i64 2147588434}
!6508 = !DILocation(line: 81, column: 1, scope: !6366)
!6509 = !{i64 2147588571, i64 2147588614, i64 2147588654}
!6510 = !DILocation(line: 82, column: 1, scope: !6366)
!6511 = !{i64 2147588803, i64 2147588846, i64 2147588886}
!6512 = !DILocation(line: 83, column: 1, scope: !6366)
!6513 = !{i64 2147589011, i64 2147589054, i64 2147589094}
!6514 = !DILocation(line: 84, column: 1, scope: !6366)
!6515 = !{i64 2147589216, i64 2147589259, i64 2147589299}
!6516 = !DILocation(line: 85, column: 1, scope: !6366)
!6517 = !{i64 2147589433, i64 2147589476, i64 2147589516}
!6518 = !DILocation(line: 86, column: 1, scope: !6366)
!6519 = !{i64 2147589647, i64 2147589690, i64 2147589730}
!6520 = !DILocation(line: 87, column: 1, scope: !6366)
!6521 = !{i64 2147589873, i64 2147589916, i64 2147589956}
!6522 = !DILocation(line: 88, column: 1, scope: !6366)
!6523 = !{i64 2147590093, i64 2147590136, i64 2147590176}
!6524 = !DILocation(line: 89, column: 1, scope: !6366)
!6525 = !{i64 2147594359, i64 2147594402, i64 2147594442}
!6526 = !DILocation(line: 90, column: 1, scope: !6366)
!6527 = !{i64 2147594591, i64 2147594634, i64 2147594674}
!6528 = !DILocation(line: 91, column: 1, scope: !6366)
!6529 = !{i64 2147594826, i64 2147594869, i64 2147594909}
!6530 = !DILocation(line: 92, column: 1, scope: !6366)
!6531 = !{i64 2147595076, i64 2147595119, i64 2147595159}
!6532 = !DILocation(line: 93, column: 1, scope: !6366)
!6533 = !{i64 2147595326, i64 2147595369, i64 2147595409}
!6534 = !DILocation(line: 94, column: 1, scope: !6366)
!6535 = !{i64 2147595564, i64 2147595607, i64 2147595647}
!6536 = !DILocation(line: 95, column: 1, scope: !6366)
!6537 = !{i64 2147595775, i64 2147595818, i64 2147595858}
!6538 = !DILocation(line: 96, column: 1, scope: !6366)
!6539 = !{i64 2147595992, i64 2147596035, i64 2147596075}
!6540 = !DILocation(line: 97, column: 1, scope: !6366)
!6541 = !{i64 2147596188, i64 2147596231, i64 2147596271}
!6542 = !DILocation(line: 98, column: 1, scope: !6366)
!6543 = !{i64 2147596390, i64 2147596433, i64 2147596473}
!6544 = !DILocation(line: 99, column: 1, scope: !6366)
!6545 = !{i64 2147596583, i64 2147596626, i64 2147596666}
!6546 = !DILocation(line: 100, column: 1, scope: !6366)
!6547 = !{i64 2147596791, i64 2147596834, i64 2147596874}
!6548 = !DILocation(line: 101, column: 1, scope: !6366)
!6549 = !{i64 2147596987, i64 2147597030, i64 2147597070}
!6550 = !DILocation(line: 102, column: 1, scope: !6366)
!6551 = !{i64 2147597189, i64 2147597232, i64 2147597272}
!6552 = !DILocation(line: 103, column: 1, scope: !6366)
!6553 = !{i64 2147597400, i64 2147597443, i64 2147597483}
!6554 = !DILocation(line: 104, column: 1, scope: !6366)
!6555 = !{i64 2147597599, i64 2147597642, i64 2147597682}
!6556 = !DILocation(line: 105, column: 1, scope: !6366)
!6557 = !{i64 2147597774, i64 2147597817, i64 2147597857}
!6558 = !DILocation(line: 106, column: 1, scope: !6366)
!6559 = !{i64 2147597958, i64 2147598001, i64 2147598041}
!6560 = !DILocation(line: 107, column: 1, scope: !6366)
!6561 = !{i64 2147598160, i64 2147598203, i64 2147598243}
!6562 = !DILocation(line: 108, column: 1, scope: !6366)
!6563 = !{i64 2147598359, i64 2147598402, i64 2147598442}
!6564 = !DILocation(line: 109, column: 1, scope: !6366)
!6565 = !{i64 2147598564, i64 2147598607, i64 2147598647}
!6566 = !DILocation(line: 110, column: 1, scope: !6366)
!6567 = !{i64 2147598757, i64 2147598800, i64 2147598840}
!6568 = !DILocation(line: 111, column: 1, scope: !6366)
!6569 = !{i64 2147598923, i64 2147598966, i64 2147599006}
!6570 = !DILocation(line: 112, column: 1, scope: !6366)
!6571 = !{i64 2147599107, i64 2147599150, i64 2147599190}
!6572 = !DILocation(line: 113, column: 1, scope: !6366)
!6573 = !{i64 2147599297, i64 2147599340, i64 2147599380}
!6574 = !DILocation(line: 114, column: 1, scope: !6366)
!6575 = !{i64 2147599481, i64 2147599524, i64 2147599564}
!6576 = !DILocation(line: 115, column: 1, scope: !6366)
!6577 = !{i64 2147599695, i64 2147599738, i64 2147599778}
!6578 = !DILocation(line: 116, column: 1, scope: !6366)
!6579 = !{i64 2147599906, i64 2147599949, i64 2147599989}
!6580 = !DILocation(line: 117, column: 1, scope: !6366)
!6581 = !{i64 2147600129, i64 2147600172, i64 2147600212}
!6582 = !DILocation(line: 118, column: 1, scope: !6366)
!6583 = !{i64 2147600313, i64 2147600356, i64 2147600396}
!6584 = !DILocation(line: 119, column: 1, scope: !6366)
!6585 = !{i64 2147600527, i64 2147600570, i64 2147600610}
!6586 = !DILocation(line: 120, column: 1, scope: !6366)
!6587 = !{i64 2147600693, i64 2147600736, i64 2147600776}
!6588 = !DILocation(line: 121, column: 1, scope: !6366)
!6589 = !{i64 2147600874, i64 2147600917, i64 2147600957}
!6590 = !DILocation(line: 122, column: 1, scope: !6366)
!6591 = !{i64 2147601067, i64 2147601110, i64 2147601150}
!6592 = !DILocation(line: 123, column: 1, scope: !6366)
!6593 = !{i64 2147601293, i64 2147601336, i64 2147601376}
!6594 = !DILocation(line: 124, column: 1, scope: !6366)
!6595 = !{i64 2147601507, i64 2147601550, i64 2147601590}
!6596 = !DILocation(line: 125, column: 1, scope: !6366)
!6597 = !{i64 2147601733, i64 2147601776, i64 2147601816}
!6598 = !DILocation(line: 126, column: 1, scope: !6366)
!6599 = !{i64 2147601950, i64 2147601993, i64 2147602033}
!6600 = !DILocation(line: 127, column: 1, scope: !6366)
!6601 = !{i64 2147602227, i64 2147602270, i64 2147602310}
!6602 = !DILocation(line: 128, column: 1, scope: !6366)
!6603 = !{i64 2147602453, i64 2147602496, i64 2147602536}
!6604 = !DILocation(line: 129, column: 1, scope: !6366)
!6605 = !{i64 2147602661, i64 2147602704, i64 2147602744}
!6606 = !DILocation(line: 130, column: 1, scope: !6366)
!6607 = !{i64 2147602857, i64 2147602900, i64 2147602940}
!6608 = !DILocation(line: 131, column: 1, scope: !6366)
!6609 = !{i64 2147603122, i64 2147603165, i64 2147603205}
!6610 = !DILocation(line: 132, column: 1, scope: !6366)
!6611 = !{i64 2147603336, i64 2147603379, i64 2147603419}
!6612 = !DILocation(line: 133, column: 1, scope: !6366)
!6613 = !{i64 2147607572, i64 2147607615, i64 2147607655}
!6614 = !DILocation(line: 134, column: 1, scope: !6366)
!6615 = !{i64 2147607826, i64 2147607869, i64 2147607909}
!6616 = !DILocation(line: 135, column: 1, scope: !6366)
!6617 = !{i64 2147608025, i64 2147608068, i64 2147608108}
!6618 = !DILocation(line: 136, column: 1, scope: !6366)
!6619 = !{i64 2147608267, i64 2147608310, i64 2147608350}
!6620 = !DILocation(line: 137, column: 1, scope: !6366)
!6621 = !{i64 2147608430, i64 2147608473, i64 2147608513}
!6622 = !DILocation(line: 138, column: 1, scope: !6366)
!6623 = !{i64 2147608617, i64 2147608660, i64 2147608700}
!6624 = !DILocation(line: 139, column: 1, scope: !6366)
!6625 = !{i64 2147608825, i64 2147608868, i64 2147608908}
!6626 = !DILocation(line: 140, column: 1, scope: !6366)
!6627 = !{i64 2147609021, i64 2147609064, i64 2147609104}
!6628 = !DILocation(line: 141, column: 1, scope: !6366)
!6629 = !{i64 2147609214, i64 2147609257, i64 2147609297}
!6630 = !DILocation(line: 142, column: 1, scope: !6366)
!6631 = !{i64 2147609396, i64 2147609439, i64 2147609479}
!6632 = !DILocation(line: 143, column: 1, scope: !6366)
!6633 = !{i64 2147609610, i64 2147609653, i64 2147609693}
!6634 = !DILocation(line: 144, column: 1, scope: !6366)
!6635 = !{i64 2147609821, i64 2147609864, i64 2147609904}
!6636 = !DILocation(line: 145, column: 1, scope: !6366)
!6637 = !{i64 2147610041, i64 2147610084, i64 2147610124}
!6638 = !DILocation(line: 146, column: 1, scope: !6366)
!6639 = !{i64 2147610248, i64 2147610291, i64 2147610331}
!6640 = !DILocation(line: 147, column: 1, scope: !6366)
!6641 = !{i64 2147610521, i64 2147610564, i64 2147610604}
!6642 = !DILocation(line: 148, column: 1, scope: !6366)
!6643 = !{i64 2147610769, i64 2147610812, i64 2147610852}
!6644 = !DILocation(line: 149, column: 1, scope: !6366)
!6645 = !{i64 2147610968, i64 2147611011, i64 2147611051}
!6646 = !DILocation(line: 150, column: 1, scope: !6366)
!6647 = !{i64 2147611203, i64 2147611246, i64 2147611286}
!6648 = !DILocation(line: 151, column: 1, scope: !6366)
!6649 = !{i64 2147611453, i64 2147611496, i64 2147611536}
!6650 = !DILocation(line: 152, column: 1, scope: !6366)
!6651 = !{i64 2147611655, i64 2147611698, i64 2147611738}
!6652 = !DILocation(line: 153, column: 1, scope: !6366)
!6653 = !{i64 2147611878, i64 2147611921, i64 2147611961}
!6654 = !DILocation(line: 154, column: 1, scope: !6366)
!6655 = !{i64 2147612092, i64 2147612135, i64 2147612175}
!6656 = !DILocation(line: 155, column: 1, scope: !6366)
!6657 = !{i64 2147612336, i64 2147612379, i64 2147612419}
!6658 = !DILocation(line: 156, column: 1, scope: !6366)
!6659 = !{i64 2147612565, i64 2147612608, i64 2147612648}
!6660 = !DILocation(line: 157, column: 1, scope: !6366)
!6661 = !{i64 2147612794, i64 2147612837, i64 2147612877}
!6662 = !DILocation(line: 158, column: 1, scope: !6366)
!6663 = !{i64 2147613002, i64 2147613045, i64 2147613085}
!6664 = !DILocation(line: 159, column: 1, scope: !6366)
!6665 = !{i64 2147613240, i64 2147613283, i64 2147613323}
!6666 = !DILocation(line: 160, column: 1, scope: !6366)
!6667 = !{i64 2147613466, i64 2147613509, i64 2147613549}
!6668 = !DILocation(line: 161, column: 1, scope: !6366)
!6669 = !{i64 2147613725, i64 2147613768, i64 2147613808}
!6670 = !DILocation(line: 162, column: 1, scope: !6366)
!6671 = !{i64 2147613945, i64 2147613988, i64 2147614028}
!6672 = !DILocation(line: 163, column: 1, scope: !6366)
!6673 = !{i64 2147614177, i64 2147614220, i64 2147614260}
!6674 = !DILocation(line: 164, column: 1, scope: !6366)
!6675 = !{i64 2147614418, i64 2147614461, i64 2147614501}
!6676 = !DILocation(line: 165, column: 1, scope: !6366)
!6677 = !{i64 2147614659, i64 2147614702, i64 2147614742}
!6678 = !DILocation(line: 166, column: 1, scope: !6366)
!6679 = !{i64 2147614882, i64 2147614925, i64 2147614965}
!6680 = !DILocation(line: 167, column: 1, scope: !6366)
!6681 = !{i64 2147615099, i64 2147615142, i64 2147615182}
!6682 = !DILocation(line: 168, column: 1, scope: !6366)
!6683 = !{i64 2147615340, i64 2147615383, i64 2147615423}
!6684 = !DILocation(line: 169, column: 1, scope: !6366)
!6685 = !{i64 2147615527, i64 2147615570, i64 2147615610}
!6686 = !DILocation(line: 170, column: 1, scope: !6366)
!6687 = !{i64 2147615714, i64 2147615757, i64 2147615797}
!6688 = !DILocation(line: 171, column: 1, scope: !6366)
!6689 = !{i64 2147615877, i64 2147615920, i64 2147615960}
!6690 = !DILocation(line: 172, column: 1, scope: !6366)
!6691 = !{i64 2147616082, i64 2147616125, i64 2147616165}
!6692 = !DILocation(line: 173, column: 1, scope: !6366)
!6693 = !{i64 2147620336, i64 2147620379, i64 2147620419}
!6694 = !DILocation(line: 174, column: 1, scope: !6366)
!6695 = !{i64 2147620595, i64 2147620638, i64 2147620678}
!6696 = !DILocation(line: 175, column: 1, scope: !6366)
!6697 = !{i64 2147620818, i64 2147620861, i64 2147620901}
!6698 = !DILocation(line: 176, column: 1, scope: !6366)
!6699 = !{i64 2147621047, i64 2147621090, i64 2147621130}
!6700 = !DILocation(line: 177, column: 1, scope: !6366)
!6701 = !{i64 2147621261, i64 2147621304, i64 2147621344}
!6702 = !DILocation(line: 178, column: 1, scope: !6366)
!6703 = !{i64 2147621463, i64 2147621506, i64 2147621546}
!6704 = !DILocation(line: 179, column: 1, scope: !6366)
!6705 = !{i64 2147621659, i64 2147621702, i64 2147621742}
!6706 = !DILocation(line: 180, column: 1, scope: !6366)
!6707 = !{i64 2147621871, i64 2147621914, i64 2147621954}
!6708 = !DILocation(line: 181, column: 1, scope: !6366)
!6709 = !{i64 2147622092, i64 2147622135, i64 2147622175}
!6710 = !DILocation(line: 182, column: 1, scope: !6366)
!6711 = !{i64 2147622306, i64 2147622349, i64 2147622389}
!6712 = !DILocation(line: 183, column: 1, scope: !6366)
!6713 = !{i64 2147622496, i64 2147622539, i64 2147622579}
!6714 = !DILocation(line: 184, column: 1, scope: !6366)
!6715 = !{i64 2147622695, i64 2147622738, i64 2147622778}
!6716 = !DILocation(line: 185, column: 1, scope: !6366)
!6717 = !{i64 2147622900, i64 2147622943, i64 2147622983}
!6718 = !DILocation(line: 186, column: 1, scope: !6366)
!6719 = !{i64 2147623120, i64 2147623163, i64 2147623203}
!6720 = !DILocation(line: 187, column: 1, scope: !6366)
!6721 = !{i64 2147623321, i64 2147623364, i64 2147623404}
!6722 = !DILocation(line: 188, column: 1, scope: !6366)
!6723 = !{i64 2147623520, i64 2147623563, i64 2147623603}
!6724 = !DILocation(line: 189, column: 1, scope: !6366)
!6725 = !{i64 2147623725, i64 2147623768, i64 2147623808}
!6726 = !DILocation(line: 190, column: 1, scope: !6366)
!6727 = !{i64 2147623894, i64 2147623937, i64 2147623977}
!6728 = !DILocation(line: 191, column: 1, scope: !6366)
!6729 = !{i64 2147624078, i64 2147624121, i64 2147624161}
!6730 = !DILocation(line: 192, column: 1, scope: !6366)
!6731 = !{i64 2147624262, i64 2147624305, i64 2147624345}
!6732 = !DILocation(line: 193, column: 1, scope: !6366)
!6733 = !{i64 2147624449, i64 2147624492, i64 2147624532}
!6734 = !DILocation(line: 194, column: 1, scope: !6366)
!6735 = !{i64 2147624633, i64 2147624676, i64 2147624716}
!6736 = !DILocation(line: 195, column: 1, scope: !6366)
!6737 = !{i64 2147624871, i64 2147624914, i64 2147624954}
!6738 = !DILocation(line: 196, column: 1, scope: !6366)
!6739 = !{i64 2147625101, i64 2147625144, i64 2147625184}
!6740 = !DILocation(line: 197, column: 1, scope: !6366)
!6741 = !{i64 2147625330, i64 2147625373, i64 2147625413}
!6742 = !DILocation(line: 198, column: 1, scope: !6366)
!6743 = !{i64 2147625517, i64 2147625560, i64 2147625600}
!6744 = !DILocation(line: 199, column: 1, scope: !6366)
!6745 = !{i64 2147625713, i64 2147625756, i64 2147625796}
!6746 = !DILocation(line: 200, column: 1, scope: !6366)
!6747 = !{i64 2147625921, i64 2147625964, i64 2147626004}
!6748 = !DILocation(line: 201, column: 1, scope: !6366)
!6749 = !{i64 2147626133, i64 2147626176, i64 2147626216}
!6750 = !DILocation(line: 202, column: 1, scope: !6366)
!6751 = !{i64 2147626332, i64 2147626375, i64 2147626415}
!6752 = !DILocation(line: 203, column: 1, scope: !6366)
!6753 = !{i64 2147626570, i64 2147626613, i64 2147626653}
!6754 = !DILocation(line: 204, column: 1, scope: !6366)
!6755 = !{i64 2147626766, i64 2147626809, i64 2147626849}
!6756 = !DILocation(line: 205, column: 1, scope: !6366)
!6757 = !{i64 2147626968, i64 2147627011, i64 2147627051}
!6758 = !DILocation(line: 206, column: 1, scope: !6366)
!6759 = !{i64 2147627161, i64 2147627204, i64 2147627244}
!6760 = !DILocation(line: 207, column: 1, scope: !6366)
!6761 = !{i64 2147627395, i64 2147627438, i64 2147627478}
!6762 = !DILocation(line: 208, column: 1, scope: !6366)
!6763 = !{i64 2147627558, i64 2147627601, i64 2147627641}
!6764 = !DILocation(line: 209, column: 1, scope: !6366)
!6765 = !{i64 2147627797, i64 2147627840, i64 2147627880}
!6766 = !DILocation(line: 210, column: 1, scope: !6366)
!6767 = !{i64 2147628036, i64 2147628079, i64 2147628119}
!6768 = !DILocation(line: 211, column: 1, scope: !6366)
!6769 = !{i64 2147628272, i64 2147628315, i64 2147628355}
!6770 = !DILocation(line: 212, column: 1, scope: !6366)
!6771 = !{i64 2147628502, i64 2147628545, i64 2147628585}
!6772 = !DILocation(line: 213, column: 1, scope: !6366)
!6773 = !{i64 2147628689, i64 2147628732, i64 2147628772}
!6774 = !DILocation(line: 214, column: 1, scope: !6366)
!6775 = !{i64 2147628888, i64 2147628931, i64 2147628971}
!6776 = !DILocation(line: 215, column: 1, scope: !6366)
!6777 = !{i64 2147629159, i64 2147629202, i64 2147629242}
!6778 = !DILocation(line: 216, column: 1, scope: !6366)
!6779 = !{i64 2147633395, i64 2147633438, i64 2147633478}
!6780 = !DILocation(line: 217, column: 1, scope: !6366)
!6781 = !{i64 2147633629, i64 2147633672, i64 2147633712}
!6782 = !DILocation(line: 218, column: 1, scope: !6366)
!6783 = !{i64 2147633837, i64 2147633880, i64 2147633920}
!6784 = !DILocation(line: 219, column: 1, scope: !6366)
!6785 = !{i64 2147634055, i64 2147634098, i64 2147634138}
!6786 = !DILocation(line: 220, column: 1, scope: !6366)
!6787 = !{i64 2147634245, i64 2147634288, i64 2147634328}
!6788 = !DILocation(line: 221, column: 1, scope: !6366)
!6789 = !{i64 2147634477, i64 2147634520, i64 2147634560}
!6790 = !DILocation(line: 222, column: 1, scope: !6366)
!6791 = !{i64 2147634697, i64 2147634740, i64 2147634780}
!6792 = !DILocation(line: 223, column: 1, scope: !6366)
!6793 = !{i64 2147634893, i64 2147634936, i64 2147634976}
!6794 = !DILocation(line: 224, column: 1, scope: !6366)
!6795 = !{i64 2147635099, i64 2147635142, i64 2147635182}
!6796 = !DILocation(line: 225, column: 1, scope: !6366)
!6797 = !{i64 2147635304, i64 2147635347, i64 2147635387}
!6798 = !DILocation(line: 226, column: 1, scope: !6366)
!6799 = !{i64 2147635530, i64 2147635573, i64 2147635613}
!6800 = !DILocation(line: 227, column: 1, scope: !6366)
!6801 = !{i64 2147635738, i64 2147635781, i64 2147635821}
!6802 = !DILocation(line: 228, column: 1, scope: !6366)
!6803 = !{i64 2147635934, i64 2147635977, i64 2147636017}
!6804 = !DILocation(line: 229, column: 1, scope: !6366)
!6805 = !{i64 2147636166, i64 2147636209, i64 2147636249}
!6806 = !DILocation(line: 230, column: 1, scope: !6366)
!6807 = !{i64 2147636350, i64 2147636393, i64 2147636433}
!6808 = !DILocation(line: 231, column: 1, scope: !6366)
!6809 = !{i64 2147636559, i64 2147636602, i64 2147636642}
!6810 = !DILocation(line: 232, column: 1, scope: !6366)
!6811 = !{i64 2147636767, i64 2147636810, i64 2147636850}
!6812 = !DILocation(line: 233, column: 1, scope: !6366)
!6813 = !{i64 2147636963, i64 2147637006, i64 2147637046}
!6814 = !DILocation(line: 234, column: 1, scope: !6366)
!6815 = !{i64 2147637147, i64 2147637190, i64 2147637230}
!6816 = !DILocation(line: 235, column: 1, scope: !6366)
!6817 = !{i64 2147637373, i64 2147637416, i64 2147637456}
!6818 = !DILocation(line: 236, column: 1, scope: !6366)
!6819 = !{i64 2147637599, i64 2147637642, i64 2147637682}
!6820 = !DILocation(line: 237, column: 1, scope: !6366)
!6821 = !{i64 2147637825, i64 2147637868, i64 2147637908}
!6822 = !DILocation(line: 238, column: 1, scope: !6366)
!6823 = !{i64 2147638051, i64 2147638094, i64 2147638134}
!6824 = !DILocation(line: 239, column: 1, scope: !6366)
!6825 = !{i64 2147638277, i64 2147638320, i64 2147638360}
!6826 = !DILocation(line: 240, column: 1, scope: !6366)
!6827 = !{i64 2147638509, i64 2147638552, i64 2147638592}
!6828 = !DILocation(line: 241, column: 1, scope: !6366)
!6829 = !{i64 2147638747, i64 2147638790, i64 2147638830}
!6830 = !DILocation(line: 242, column: 1, scope: !6366)
!6831 = !{i64 2147638967, i64 2147639010, i64 2147639050}
!6832 = !DILocation(line: 243, column: 1, scope: !6366)
!6833 = !{i64 2147639211, i64 2147639254, i64 2147639294}
!6834 = !DILocation(line: 244, column: 1, scope: !6366)
!6835 = !{i64 2147639452, i64 2147639495, i64 2147639535}
!6836 = !DILocation(line: 245, column: 1, scope: !6366)
!6837 = !{i64 2147639687, i64 2147639730, i64 2147639770}
!6838 = !DILocation(line: 246, column: 1, scope: !6366)
!6839 = !{i64 2147639919, i64 2147639962, i64 2147640002}
!6840 = !DILocation(line: 247, column: 1, scope: !6366)
!6841 = !{i64 2147640121, i64 2147640164, i64 2147640204}
!6842 = !DILocation(line: 248, column: 1, scope: !6366)
!6843 = !{i64 2147640371, i64 2147640414, i64 2147640454}
!6844 = !DILocation(line: 249, column: 1, scope: !6366)
!6845 = !{i64 2147640609, i64 2147640652, i64 2147640692}
!6846 = !DILocation(line: 250, column: 1, scope: !6366)
!6847 = !{i64 2147640817, i64 2147640860, i64 2147640900}
!6848 = !DILocation(line: 251, column: 1, scope: !6366)
!6849 = !{i64 2147641013, i64 2147641056, i64 2147641096}
!6850 = !DILocation(line: 252, column: 1, scope: !6366)
!6851 = !{i64 2147641197, i64 2147641240, i64 2147641280}
!6852 = !DILocation(line: 253, column: 1, scope: !6366)
!6853 = !{i64 2147641414, i64 2147641457, i64 2147641497}
!6854 = !DILocation(line: 254, column: 1, scope: !6366)
!6855 = !{i64 2147641619, i64 2147641662, i64 2147641702}
!6856 = !DILocation(line: 255, column: 1, scope: !6366)
!6857 = !{i64 2147641854, i64 2147641897, i64 2147641937}
!6858 = !DILocation(line: 256, column: 1, scope: !6366)
!6859 = !{i64 2147646138, i64 2147646181, i64 2147646221}
!6860 = !DILocation(line: 257, column: 1, scope: !6366)
!6861 = !{i64 2147646362, i64 2147646405, i64 2147646445}
!6862 = !DILocation(line: 258, column: 1, scope: !6366)
!6863 = !{i64 2147646600, i64 2147646643, i64 2147646683}
!6864 = !DILocation(line: 259, column: 1, scope: !6366)
!6865 = !{i64 2147646838, i64 2147646881, i64 2147646921}
!6866 = !DILocation(line: 260, column: 1, scope: !6366)
!6867 = !{i64 2147647055, i64 2147647098, i64 2147647138}
!6868 = !DILocation(line: 261, column: 1, scope: !6366)
!6869 = !{i64 2147647260, i64 2147647303, i64 2147647343}
!6870 = !DILocation(line: 262, column: 1, scope: !6366)
!6871 = !{i64 2147647453, i64 2147647496, i64 2147647536}
!6872 = !DILocation(line: 263, column: 1, scope: !6366)
!6873 = !{i64 2147647706, i64 2147647749, i64 2147647789}
!6874 = !DILocation(line: 264, column: 1, scope: !6366)
!6875 = !{i64 2147647914, i64 2147647957, i64 2147647997}
!6876 = !DILocation(line: 265, column: 1, scope: !6366)
!6877 = !{i64 2147648110, i64 2147648153, i64 2147648193}
!6878 = !DILocation(line: 266, column: 1, scope: !6366)
!6879 = !{i64 2147648324, i64 2147648367, i64 2147648407}
!6880 = !DILocation(line: 267, column: 1, scope: !6366)
!6881 = !{i64 2147648532, i64 2147648575, i64 2147648615}
!6882 = !DILocation(line: 268, column: 1, scope: !6366)
!6883 = !{i64 2147648722, i64 2147648765, i64 2147648805}
!6884 = !DILocation(line: 269, column: 1, scope: !6366)
!6885 = !{i64 2147648936, i64 2147648979, i64 2147649019}
!6886 = !DILocation(line: 270, column: 1, scope: !6366)
!6887 = !{i64 2147649198, i64 2147649241, i64 2147649281}
!6888 = !DILocation(line: 271, column: 1, scope: !6366)
!6889 = !{i64 2147649409, i64 2147649452, i64 2147649492}
!6890 = !DILocation(line: 272, column: 1, scope: !6366)
!6891 = !{i64 2147649653, i64 2147649696, i64 2147649736}
!6892 = !DILocation(line: 273, column: 1, scope: !6366)
!6893 = !{i64 2147649864, i64 2147649907, i64 2147649947}
!6894 = !DILocation(line: 274, column: 1, scope: !6366)
!6895 = !{i64 2147650093, i64 2147650136, i64 2147650176}
!6896 = !DILocation(line: 275, column: 1, scope: !6366)
!6897 = !{i64 2147650358, i64 2147650401, i64 2147650441}
!6898 = !DILocation(line: 276, column: 1, scope: !6366)
!6899 = !{i64 2147650563, i64 2147650606, i64 2147650646}
!6900 = !DILocation(line: 277, column: 1, scope: !6366)
!6901 = !{i64 2147650759, i64 2147650802, i64 2147650842}
!6902 = !DILocation(line: 278, column: 1, scope: !6366)
!6903 = !{i64 2147650982, i64 2147651025, i64 2147651065}
!6904 = !DILocation(line: 279, column: 1, scope: !6366)
!6905 = !{i64 2147651145, i64 2147651188, i64 2147651228}
!6906 = !DILocation(line: 280, column: 1, scope: !6366)
!6907 = !{i64 2147651350, i64 2147651393, i64 2147651433}
!6908 = !DILocation(line: 281, column: 1, scope: !6366)
!6909 = !{i64 2147651570, i64 2147651613, i64 2147651653}
!6910 = !DILocation(line: 282, column: 1, scope: !6366)
!6911 = !{i64 2147651784, i64 2147651827, i64 2147651867}
!6912 = !DILocation(line: 283, column: 1, scope: !6366)
!6913 = !{i64 2147652028, i64 2147652071, i64 2147652111}
!6914 = !DILocation(line: 284, column: 1, scope: !6366)
!6915 = !{i64 2147652260, i64 2147652303, i64 2147652343}
!6916 = !DILocation(line: 285, column: 1, scope: !6366)
!6917 = !{i64 2147652474, i64 2147652517, i64 2147652557}
!6918 = !DILocation(line: 286, column: 1, scope: !6366)
!6919 = !{i64 2147652685, i64 2147652728, i64 2147652768}
!6920 = !DILocation(line: 287, column: 1, scope: !6366)
!6921 = !{i64 2147652878, i64 2147652921, i64 2147652961}
!6922 = !DILocation(line: 288, column: 1, scope: !6366)
!6923 = !{i64 2147653077, i64 2147653120, i64 2147653160}
!6924 = !DILocation(line: 289, column: 1, scope: !6366)
!6925 = !{i64 2147653249, i64 2147653292, i64 2147653332}
!6926 = !DILocation(line: 290, column: 1, scope: !6366)
!6927 = !{i64 2147653442, i64 2147653485, i64 2147653525}
!6928 = !DILocation(line: 291, column: 1, scope: !6366)
!6929 = !{i64 2147653638, i64 2147653681, i64 2147653721}
!6930 = !DILocation(line: 292, column: 1, scope: !6366)
!6931 = !{i64 2147653801, i64 2147653844, i64 2147653884}
!6932 = !DILocation(line: 293, column: 1, scope: !6366)
!6933 = !{i64 2147654003, i64 2147654046, i64 2147654086}
!6934 = !DILocation(line: 294, column: 1, scope: !6366)
!6935 = !{i64 2147654208, i64 2147654251, i64 2147654291}
!6936 = !DILocation(line: 295, column: 1, scope: !6366)
!6937 = !{i64 2147654416, i64 2147654459, i64 2147654499}
!6938 = !DILocation(line: 296, column: 1, scope: !6366)
!6939 = !{i64 2147654609, i64 2147654652, i64 2147654692}
!6940 = !DILocation(line: 297, column: 1, scope: !6366)
!6941 = !{i64 2147654796, i64 2147654839, i64 2147654879}
!6942 = !DILocation(line: 298, column: 1, scope: !6366)
!6943 = !{i64 2147655023, i64 2147655066, i64 2147655106}
!6944 = !DILocation(line: 299, column: 1, scope: !6366)
!6945 = !{i64 2147659250, i64 2147659293, i64 2147659333}
!6946 = !DILocation(line: 300, column: 1, scope: !6366)
!6947 = !{i64 2147659488, i64 2147659531, i64 2147659571}
!6948 = !DILocation(line: 301, column: 1, scope: !6366)
!6949 = !{i64 2147659738, i64 2147659781, i64 2147659821}
!6950 = !DILocation(line: 302, column: 1, scope: !6366)
!6951 = !{i64 2147659946, i64 2147659989, i64 2147660029}
!6952 = !DILocation(line: 303, column: 1, scope: !6366)
!6953 = !{i64 2147660142, i64 2147660185, i64 2147660225}
!6954 = !DILocation(line: 304, column: 1, scope: !6366)
!6955 = !{i64 2147660359, i64 2147660402, i64 2147660442}
!6956 = !DILocation(line: 305, column: 1, scope: !6366)
!6957 = !{i64 2147660651, i64 2147660694, i64 2147660734}
!6958 = !DILocation(line: 306, column: 1, scope: !6366)
!6959 = !{i64 2147660883, i64 2147660926, i64 2147660966}
!6960 = !DILocation(line: 307, column: 1, scope: !6366)
!6961 = !{i64 2147661100, i64 2147661143, i64 2147661183}
!6962 = !DILocation(line: 308, column: 1, scope: !6366)
!6963 = !{i64 2147661307, i64 2147661350, i64 2147661390}
!6964 = !DILocation(line: 309, column: 1, scope: !6366)
!6965 = !{i64 2147661508, i64 2147661551, i64 2147661591}
!6966 = !DILocation(line: 310, column: 1, scope: !6366)
!6967 = !{i64 2147661740, i64 2147661783, i64 2147661823}
!6968 = !DILocation(line: 311, column: 1, scope: !6366)
!6969 = !{i64 2147661948, i64 2147661991, i64 2147662031}
!6970 = !DILocation(line: 312, column: 1, scope: !6366)
!6971 = !{i64 2147662138, i64 2147662181, i64 2147662221}
!6972 = !DILocation(line: 313, column: 1, scope: !6366)
!6973 = !{i64 2147662364, i64 2147662407, i64 2147662447}
!6974 = !DILocation(line: 314, column: 1, scope: !6366)
!6975 = !{i64 2147662553, i64 2147662596, i64 2147662636}
!6976 = !DILocation(line: 315, column: 1, scope: !6366)
!6977 = !{i64 2147662824, i64 2147662867, i64 2147662907}
!6978 = !DILocation(line: 316, column: 1, scope: !6366)
!6979 = !{i64 2147663044, i64 2147663087, i64 2147663127}
!6980 = !DILocation(line: 317, column: 1, scope: !6366)
!6981 = !{i64 2147663297, i64 2147663340, i64 2147663380}
!6982 = !DILocation(line: 318, column: 1, scope: !6366)
!6983 = !{i64 2147663505, i64 2147663548, i64 2147663588}
!6984 = !DILocation(line: 319, column: 1, scope: !6366)
!6985 = !{i64 2147663737, i64 2147663780, i64 2147663820}
!6986 = !DILocation(line: 320, column: 1, scope: !6366)
!6987 = !{i64 2147663948, i64 2147663991, i64 2147664031}
!6988 = !DILocation(line: 321, column: 1, scope: !6366)
!6989 = !{i64 2147664138, i64 2147664181, i64 2147664221}
!6990 = !DILocation(line: 322, column: 1, scope: !6366)
!6991 = !{i64 2147664352, i64 2147664395, i64 2147664435}
!6992 = !DILocation(line: 323, column: 1, scope: !6366)
!6993 = !{i64 2147664551, i64 2147664594, i64 2147664634}
!6994 = !DILocation(line: 324, column: 1, scope: !6366)
!6995 = !{i64 2147664738, i64 2147664781, i64 2147664821}
!6996 = !DILocation(line: 325, column: 1, scope: !6366)
!6997 = !{i64 2147664946, i64 2147664989, i64 2147665029}
!6998 = !DILocation(line: 326, column: 1, scope: !6366)
!6999 = !{i64 2147665175, i64 2147665218, i64 2147665258}
!7000 = !DILocation(line: 327, column: 1, scope: !6366)
!7001 = !{i64 2147665377, i64 2147665420, i64 2147665460}
!7002 = !DILocation(line: 328, column: 1, scope: !6366)
!7003 = !{i64 2147665576, i64 2147665619, i64 2147665659}
!7004 = !DILocation(line: 329, column: 1, scope: !6366)
!7005 = !{i64 2147665793, i64 2147665836, i64 2147665876}
!7006 = !DILocation(line: 331, column: 1, scope: !6366)
!7007 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !417, file: !417, line: 30, type: !424, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !7008)
!7008 = !{!7009, !7010}
!7009 = !DILocalVariable(name: "arg", arg: 1, scope: !7007, file: !417, line: 30, type: !426)
!7010 = !DILocalVariable(name: "key", scope: !7007, file: !417, line: 32, type: !108)
!7011 = !DILocation(line: 0, scope: !7007)
!7012 = !DILocation(line: 37, column: 2, scope: !7007)
!7013 = !DILocation(line: 38, column: 2, scope: !7007)
!7014 = !DILocation(line: 55, column: 2, scope: !7015, inlinedAt: !7022)
!7015 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7016, file: !7016, line: 42, type: !7017, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !7019)
!7016 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7017 = !DISubroutineType(types: !7018)
!7018 = !{!32}
!7019 = !{!7020, !7021}
!7020 = !DILocalVariable(name: "key", scope: !7015, file: !7016, line: 44, type: !32)
!7021 = !DILocalVariable(name: "tmp", scope: !7015, file: !7016, line: 53, type: !32)
!7022 = distinct !DILocation(line: 40, column: 8, scope: !7007)
!7023 = !{i64 1934168}
!7024 = !DILocation(line: 0, scope: !7015, inlinedAt: !7022)
!7025 = !DILocalVariable(name: "key", arg: 1, scope: !7026, file: !7016, line: 84, type: !32)
!7026 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7016, file: !7016, line: 84, type: !7027, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !7029)
!7027 = !DISubroutineType(types: !7028)
!7028 = !{null, !32}
!7029 = !{!7025}
!7030 = !DILocation(line: 0, scope: !7026, inlinedAt: !7031)
!7031 = distinct !DILocation(line: 47, column: 2, scope: !7007)
!7032 = !DILocation(line: 95, column: 2, scope: !7026, inlinedAt: !7031)
!7033 = !{i64 1934985}
!7034 = !DILocation(line: 51, column: 18, scope: !7007)
!7035 = !DILocation(line: 53, column: 2, scope: !7007)
!7036 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !7037, file: !7037, line: 1609, type: !334, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !251)
!7037 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7038 = !DILocation(line: 1611, column: 3, scope: !7036)
!7039 = !DILocation(line: 1612, column: 1, scope: !7036)
!7040 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !7037, file: !7037, line: 1629, type: !334, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !251)
!7041 = !DILocation(line: 1631, column: 3, scope: !7040)
!7042 = !DILocation(line: 1632, column: 1, scope: !7040)
!7043 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !453, file: !453, line: 26, type: !459, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !450, retainedNodes: !7044)
!7044 = !{!7045}
!7045 = !DILocalVariable(name: "dev", arg: 1, scope: !7043, file: !453, line: 26, type: !461)
!7046 = !DILocation(line: 0, scope: !7043)
!7047 = !DILocation(line: 68, column: 2, scope: !7043)
!7048 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !7049, file: !7049, line: 14, type: !4610, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !7050)
!7049 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7050 = !{!7051, !7052}
!7051 = !DILocalVariable(name: "fmt", arg: 1, scope: !7048, file: !7049, line: 14, type: !337)
!7052 = !DILocalVariable(name: "ap", scope: !7048, file: !7049, line: 16, type: !7053)
!7053 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3679, line: 99, baseType: !7054)
!7054 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3679, line: 40, baseType: !7055)
!7055 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7049, baseType: !7056)
!7056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7057)
!7057 = !{!7058}
!7058 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7056, file: !7049, line: 16, baseType: !102, size: 32)
!7059 = !DILocation(line: 0, scope: !7048)
!7060 = !DILocation(line: 16, column: 2, scope: !7048)
!7061 = !DILocation(line: 16, column: 10, scope: !7048)
!7062 = !DILocation(line: 18, column: 2, scope: !7048)
!7063 = !DILocation(line: 19, column: 2, scope: !7048)
!7064 = !DILocation(line: 20, column: 2, scope: !7048)
!7065 = !DILocation(line: 21, column: 1, scope: !7048)
!7066 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !7049, file: !7049, line: 23, type: !7067, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !7069)
!7067 = !DISubroutineType(types: !7068)
!7068 = !{null, !337, !7053}
!7069 = !{!7070, !7071}
!7070 = !DILocalVariable(name: "fmt", arg: 1, scope: !7066, file: !7049, line: 23, type: !337)
!7071 = !DILocalVariable(name: "ap", arg: 2, scope: !7066, file: !7049, line: 23, type: !7053)
!7072 = !DILocation(line: 0, scope: !7066)
!7073 = !DILocation(line: 25, column: 2, scope: !7066)
!7074 = !DILocation(line: 26, column: 1, scope: !7066)
!7075 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !7049, file: !7049, line: 52, type: !7076, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !7078)
!7076 = !DISubroutineType(types: !7077)
!7077 = !{null, !103, !13, !132}
!7078 = !{!7079, !7080, !7081, !7082}
!7079 = !DILocalVariable(name: "level", arg: 1, scope: !7075, file: !7049, line: 52, type: !103)
!7080 = !DILocalVariable(name: "data", arg: 2, scope: !7075, file: !7049, line: 52, type: !13)
!7081 = !DILocalVariable(name: "size", arg: 3, scope: !7075, file: !7049, line: 52, type: !132)
!7082 = !DILocalVariable(name: "data_buffer", scope: !7075, file: !7049, line: 54, type: !337)
!7083 = !DILocation(line: 0, scope: !7075)
!7084 = !DILocation(line: 55, column: 14, scope: !7075)
!7085 = !DILocation(line: 55, column: 2, scope: !7075)
!7086 = !DILocation(line: 56, column: 3, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7075, file: !7049, line: 55, column: 20)
!7088 = !DILocation(line: 57, column: 3, scope: !7087)
!7089 = !DILocation(line: 59, column: 7, scope: !7087)
!7090 = distinct !{!7090, !7085, !7091}
!7091 = !DILocation(line: 65, column: 2, scope: !7075)
!7092 = !DILocation(line: 66, column: 1, scope: !7075)
!7093 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3611, file: !3611, line: 175, type: !3612, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !7094)
!7094 = !{!7095}
!7095 = !DILocalVariable(name: "level", arg: 1, scope: !7093, file: !3611, line: 175, type: !103)
!7096 = !DILocation(line: 0, scope: !7093)
!7097 = !DILocation(line: 177, column: 2, scope: !7093)
!7098 = !DILocation(line: 189, column: 1, scope: !7093)
!7099 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !7049, file: !7049, line: 28, type: !7100, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !7102)
!7100 = !DISubroutineType(types: !7101)
!7101 = !{null, !337, !132}
!7102 = !{!7103, !7104, !7105, !7107, !7109}
!7103 = !DILocalVariable(name: "data", arg: 1, scope: !7099, file: !7049, line: 28, type: !337)
!7104 = !DILocalVariable(name: "length", arg: 2, scope: !7099, file: !7049, line: 28, type: !132)
!7105 = !DILocalVariable(name: "i", scope: !7106, file: !7049, line: 30, type: !132)
!7106 = distinct !DILexicalBlock(scope: !7099, file: !7049, line: 30, column: 2)
!7107 = !DILocalVariable(name: "i", scope: !7108, file: !7049, line: 40, type: !132)
!7108 = distinct !DILexicalBlock(scope: !7099, file: !7049, line: 40, column: 2)
!7109 = !DILocalVariable(name: "c", scope: !7110, file: !7049, line: 42, type: !186)
!7110 = distinct !DILexicalBlock(scope: !7111, file: !7049, line: 41, column: 19)
!7111 = distinct !DILexicalBlock(scope: !7112, file: !7049, line: 41, column: 7)
!7112 = distinct !DILexicalBlock(scope: !7113, file: !7049, line: 40, column: 54)
!7113 = distinct !DILexicalBlock(scope: !7108, file: !7049, line: 40, column: 2)
!7114 = !DILocation(line: 0, scope: !7099)
!7115 = !DILocation(line: 0, scope: !7106)
!7116 = !DILocation(line: 30, column: 2, scope: !7106)
!7117 = !DILocation(line: 38, column: 2, scope: !7099)
!7118 = !DILocation(line: 0, scope: !7108)
!7119 = !DILocation(line: 40, column: 2, scope: !7108)
!7120 = !DILocation(line: 31, column: 9, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7122, file: !7049, line: 31, column: 7)
!7122 = distinct !DILexicalBlock(scope: !7123, file: !7049, line: 30, column: 54)
!7123 = distinct !DILexicalBlock(scope: !7106, file: !7049, line: 30, column: 2)
!7124 = !DILocation(line: 31, column: 7, scope: !7122)
!7125 = !DILocation(line: 32, column: 35, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7121, file: !7049, line: 31, column: 19)
!7127 = !DILocation(line: 32, column: 20, scope: !7126)
!7128 = !DILocation(line: 32, column: 4, scope: !7126)
!7129 = !DILocation(line: 33, column: 3, scope: !7126)
!7130 = !DILocation(line: 34, column: 4, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7121, file: !7049, line: 33, column: 10)
!7132 = !DILocation(line: 30, column: 50, scope: !7123)
!7133 = !DILocation(line: 30, column: 24, scope: !7123)
!7134 = distinct !{!7134, !7116, !7135}
!7135 = !DILocation(line: 36, column: 2, scope: !7106)
!7136 = !DILocation(line: 49, column: 2, scope: !7099)
!7137 = !DILocation(line: 50, column: 1, scope: !7099)
!7138 = !DILocation(line: 41, column: 9, scope: !7111)
!7139 = !DILocation(line: 41, column: 7, scope: !7112)
!7140 = !DILocation(line: 42, column: 22, scope: !7110)
!7141 = !DILocation(line: 0, scope: !7110)
!7142 = !DILocation(line: 44, column: 25, scope: !7110)
!7143 = !DILocation(line: 44, column: 17, scope: !7110)
!7144 = !DILocation(line: 44, column: 33, scope: !7110)
!7145 = !DILocation(line: 44, column: 4, scope: !7110)
!7146 = !DILocation(line: 45, column: 3, scope: !7110)
!7147 = !DILocation(line: 46, column: 4, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7111, file: !7049, line: 45, column: 10)
!7149 = !DILocation(line: 40, column: 50, scope: !7113)
!7150 = !DILocation(line: 40, column: 24, scope: !7113)
!7151 = distinct !{!7151, !7119, !7152}
!7152 = !DILocation(line: 48, column: 2, scope: !7108)
!7153 = distinct !DISubprogram(name: "isprint", scope: !6139, file: !6139, line: 37, type: !396, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !7154)
!7154 = !{!7155}
!7155 = !DILocalVariable(name: "c", arg: 1, scope: !7153, file: !6139, line: 37, type: !103)
!7156 = !DILocation(line: 0, scope: !7153)
!7157 = !DILocation(line: 39, column: 38, scope: !7153)
!7158 = !DILocation(line: 39, column: 2, scope: !7153)
!7159 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7160, file: !7160, line: 57, type: !7161, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !7207)
!7160 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7161 = !DISubroutineType(types: !7162)
!7162 = !{null, !32, !7163}
!7163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7164, size: 32)
!7164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7165)
!7165 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2859, line: 141, baseType: !7166)
!7166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2859, line: 97, size: 256, elements: !7167)
!7167 = !{!7168}
!7168 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7166, file: !2859, line: 107, baseType: !7169, size: 256)
!7169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2859, line: 98, size: 256, elements: !7170)
!7170 = !{!7171, !7176, !7181, !7186, !7191, !7196, !7201, !7206}
!7171 = !DIDerivedType(tag: DW_TAG_member, scope: !7169, file: !2859, line: 99, baseType: !7172, size: 32)
!7172 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7169, file: !2859, line: 99, size: 32, elements: !7173)
!7173 = !{!7174, !7175}
!7174 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7172, file: !2859, line: 99, baseType: !108, size: 32)
!7175 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7172, file: !2859, line: 99, baseType: !108, size: 32)
!7176 = !DIDerivedType(tag: DW_TAG_member, scope: !7169, file: !2859, line: 100, baseType: !7177, size: 32, offset: 32)
!7177 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7169, file: !2859, line: 100, size: 32, elements: !7178)
!7178 = !{!7179, !7180}
!7179 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7177, file: !2859, line: 100, baseType: !108, size: 32)
!7180 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7177, file: !2859, line: 100, baseType: !108, size: 32)
!7181 = !DIDerivedType(tag: DW_TAG_member, scope: !7169, file: !2859, line: 101, baseType: !7182, size: 32, offset: 64)
!7182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7169, file: !2859, line: 101, size: 32, elements: !7183)
!7183 = !{!7184, !7185}
!7184 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7182, file: !2859, line: 101, baseType: !108, size: 32)
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7182, file: !2859, line: 101, baseType: !108, size: 32)
!7186 = !DIDerivedType(tag: DW_TAG_member, scope: !7169, file: !2859, line: 102, baseType: !7187, size: 32, offset: 96)
!7187 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7169, file: !2859, line: 102, size: 32, elements: !7188)
!7188 = !{!7189, !7190}
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7187, file: !2859, line: 102, baseType: !108, size: 32)
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7187, file: !2859, line: 102, baseType: !108, size: 32)
!7191 = !DIDerivedType(tag: DW_TAG_member, scope: !7169, file: !2859, line: 103, baseType: !7192, size: 32, offset: 128)
!7192 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7169, file: !2859, line: 103, size: 32, elements: !7193)
!7193 = !{!7194, !7195}
!7194 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7192, file: !2859, line: 103, baseType: !108, size: 32)
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7192, file: !2859, line: 103, baseType: !108, size: 32)
!7196 = !DIDerivedType(tag: DW_TAG_member, scope: !7169, file: !2859, line: 104, baseType: !7197, size: 32, offset: 160)
!7197 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7169, file: !2859, line: 104, size: 32, elements: !7198)
!7198 = !{!7199, !7200}
!7199 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7197, file: !2859, line: 104, baseType: !108, size: 32)
!7200 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7197, file: !2859, line: 104, baseType: !108, size: 32)
!7201 = !DIDerivedType(tag: DW_TAG_member, scope: !7169, file: !2859, line: 105, baseType: !7202, size: 32, offset: 192)
!7202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7169, file: !2859, line: 105, size: 32, elements: !7203)
!7203 = !{!7204, !7205}
!7204 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7202, file: !2859, line: 105, baseType: !108, size: 32)
!7205 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7202, file: !2859, line: 105, baseType: !108, size: 32)
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7169, file: !2859, line: 106, baseType: !108, size: 32, offset: 224)
!7207 = !{!7208, !7209}
!7208 = !DILocalVariable(name: "reason", arg: 1, scope: !7159, file: !7160, line: 57, type: !32)
!7209 = !DILocalVariable(name: "esf", arg: 2, scope: !7159, file: !7160, line: 57, type: !7163)
!7210 = !DILocation(line: 0, scope: !7159)
!7211 = !DILocation(line: 60, column: 10, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7159, file: !7160, line: 60, column: 6)
!7213 = !DILocation(line: 60, column: 6, scope: !7159)
!7214 = !DILocation(line: 61, column: 3, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7212, file: !7160, line: 60, column: 19)
!7216 = !DILocation(line: 62, column: 2, scope: !7215)
!7217 = !DILocation(line: 63, column: 2, scope: !7159)
!7218 = !DILocation(line: 64, column: 1, scope: !7159)
!7219 = distinct !DISubprogram(name: "esf_dump", scope: !7160, file: !7160, line: 20, type: !7220, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !7222)
!7220 = !DISubroutineType(types: !7221)
!7221 = !{null, !7163}
!7222 = !{!7223}
!7223 = !DILocalVariable(name: "esf", arg: 1, scope: !7219, file: !7160, line: 20, type: !7163)
!7224 = !DILocation(line: 0, scope: !7219)
!7225 = !DILocation(line: 22, column: 2, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7227, file: !7160, line: 22, column: 2)
!7227 = distinct !DILexicalBlock(scope: !7228, file: !7160, line: 22, column: 2)
!7228 = distinct !DILexicalBlock(scope: !7229, file: !7160, line: 22, column: 2)
!7229 = distinct !DILexicalBlock(scope: !7219, file: !7160, line: 22, column: 2)
!7230 = !DILocation(line: 24, column: 2, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7232, file: !7160, line: 24, column: 2)
!7232 = distinct !DILexicalBlock(scope: !7233, file: !7160, line: 24, column: 2)
!7233 = distinct !DILexicalBlock(scope: !7234, file: !7160, line: 24, column: 2)
!7234 = distinct !DILexicalBlock(scope: !7219, file: !7160, line: 24, column: 2)
!7235 = !DILocation(line: 26, column: 2, scope: !7236)
!7236 = distinct !DILexicalBlock(scope: !7237, file: !7160, line: 26, column: 2)
!7237 = distinct !DILexicalBlock(scope: !7238, file: !7160, line: 26, column: 2)
!7238 = distinct !DILexicalBlock(scope: !7239, file: !7160, line: 26, column: 2)
!7239 = distinct !DILexicalBlock(scope: !7219, file: !7160, line: 26, column: 2)
!7240 = !DILocation(line: 53, column: 2, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7242, file: !7160, line: 53, column: 2)
!7242 = distinct !DILexicalBlock(scope: !7243, file: !7160, line: 53, column: 2)
!7243 = distinct !DILexicalBlock(scope: !7244, file: !7160, line: 53, column: 2)
!7244 = distinct !DILexicalBlock(scope: !7219, file: !7160, line: 53, column: 2)
!7245 = !DILocation(line: 55, column: 1, scope: !7219)
!7246 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7160, file: !7160, line: 82, type: !7247, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !7262)
!7247 = !DISubroutineType(types: !7248)
!7248 = !{null, !7163, !7249}
!7249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7250, size: 32)
!7250 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !214, line: 37, baseType: !7251)
!7251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !7252)
!7252 = !{!7253, !7254, !7255, !7256, !7257, !7258, !7259, !7260, !7261}
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7251, file: !214, line: 26, baseType: !108, size: 32)
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7251, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7251, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7251, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7251, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7251, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7251, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7251, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7251, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!7262 = !{!7263, !7264, !7265}
!7263 = !DILocalVariable(name: "esf", arg: 1, scope: !7246, file: !7160, line: 82, type: !7163)
!7264 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7246, file: !7160, line: 82, type: !7249)
!7265 = !DILocalVariable(name: "reason", scope: !7246, file: !7160, line: 88, type: !32)
!7266 = !DILocation(line: 0, scope: !7246)
!7267 = !DILocation(line: 88, column: 35, scope: !7246)
!7268 = !DILocation(line: 108, column: 2, scope: !7246)
!7269 = !DILocation(line: 131, column: 1, scope: !7246)
!7270 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7160, file: !7160, line: 133, type: !7271, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !7273)
!7271 = !DISubroutineType(types: !7272)
!7272 = !{null, !102}
!7273 = !{!7274, !7275, !7276}
!7274 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7270, file: !7160, line: 133, type: !102)
!7275 = !DILocalVariable(name: "ssf_contents", scope: !7270, file: !7160, line: 135, type: !969)
!7276 = !DILocalVariable(name: "oops_esf", scope: !7270, file: !7160, line: 136, type: !7165)
!7277 = !DILocation(line: 0, scope: !7270)
!7278 = !DILocation(line: 136, column: 2, scope: !7270)
!7279 = !DILocation(line: 136, column: 15, scope: !7270)
!7280 = !DILocation(line: 139, column: 22, scope: !7270)
!7281 = !DILocation(line: 139, column: 17, scope: !7270)
!7282 = !DILocation(line: 139, column: 20, scope: !7270)
!7283 = !DILocation(line: 141, column: 2, scope: !7270)
!7284 = !DILocation(line: 142, column: 2, scope: !7270)
!7285 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7286, file: !7286, line: 40, type: !7027, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !7287)
!7286 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7287 = !{!7288}
!7288 = !DILocalVariable(name: "irq", arg: 1, scope: !7285, file: !7286, line: 40, type: !32)
!7289 = !DILocation(line: 0, scope: !7285)
!7290 = !DILocation(line: 42, column: 2, scope: !7285)
!7291 = !DILocation(line: 43, column: 1, scope: !7285)
!7292 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !624, file: !624, line: 1684, type: !7293, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !7295)
!7293 = !DISubroutineType(types: !7294)
!7294 = !{null, !870}
!7295 = !{!7296}
!7296 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7292, file: !624, line: 1684, type: !870)
!7297 = !DILocation(line: 0, scope: !7292)
!7298 = !DILocation(line: 1686, column: 23, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7292, file: !624, line: 1686, column: 7)
!7300 = !DILocation(line: 1686, column: 7, scope: !7292)
!7301 = !DILocation(line: 1688, column: 5, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7299, file: !624, line: 1687, column: 3)
!7303 = !{i64 2150442633}
!7304 = !DILocation(line: 1689, column: 81, scope: !7302)
!7305 = !DILocation(line: 1689, column: 60, scope: !7302)
!7306 = !DILocation(line: 1689, column: 34, scope: !7302)
!7307 = !DILocation(line: 1689, column: 5, scope: !7302)
!7308 = !DILocation(line: 1689, column: 43, scope: !7302)
!7309 = !DILocation(line: 1690, column: 5, scope: !7302)
!7310 = !{i64 2150442747}
!7311 = !DILocation(line: 1691, column: 3, scope: !7302)
!7312 = !DILocation(line: 1692, column: 1, scope: !7292)
!7313 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7286, file: !7286, line: 45, type: !7027, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !7314)
!7314 = !{!7315}
!7315 = !DILocalVariable(name: "irq", arg: 1, scope: !7313, file: !7286, line: 45, type: !32)
!7316 = !DILocation(line: 0, scope: !7313)
!7317 = !DILocation(line: 47, column: 2, scope: !7313)
!7318 = !DILocation(line: 48, column: 1, scope: !7313)
!7319 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !624, file: !624, line: 1722, type: !7293, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !7320)
!7320 = !{!7321}
!7321 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7319, file: !624, line: 1722, type: !870)
!7322 = !DILocation(line: 0, scope: !7319)
!7323 = !DILocation(line: 1724, column: 23, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7319, file: !624, line: 1724, column: 7)
!7325 = !DILocation(line: 1724, column: 7, scope: !7319)
!7326 = !DILocation(line: 1726, column: 81, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7324, file: !624, line: 1725, column: 3)
!7328 = !DILocation(line: 1726, column: 60, scope: !7327)
!7329 = !DILocation(line: 1726, column: 34, scope: !7327)
!7330 = !DILocation(line: 1726, column: 5, scope: !7327)
!7331 = !DILocation(line: 1726, column: 43, scope: !7327)
!7332 = !DILocation(line: 271, column: 3, scope: !7333, inlinedAt: !7335)
!7333 = distinct !DISubprogram(name: "__DSB", scope: !7334, file: !7334, line: 269, type: !334, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !251)
!7334 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7335 = distinct !DILocation(line: 1727, column: 5, scope: !7327)
!7336 = !{i64 2897016}
!7337 = !DILocation(line: 260, column: 3, scope: !7338, inlinedAt: !7339)
!7338 = distinct !DISubprogram(name: "__ISB", scope: !7334, file: !7334, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !251)
!7339 = distinct !DILocation(line: 1728, column: 5, scope: !7327)
!7340 = !{i64 2896733}
!7341 = !DILocation(line: 1729, column: 3, scope: !7327)
!7342 = !DILocation(line: 1730, column: 1, scope: !7319)
!7343 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7286, file: !7286, line: 50, type: !7344, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !7346)
!7344 = !DISubroutineType(types: !7345)
!7345 = !{!103, !32}
!7346 = !{!7347}
!7347 = !DILocalVariable(name: "irq", arg: 1, scope: !7343, file: !7286, line: 50, type: !32)
!7348 = !DILocation(line: 0, scope: !7343)
!7349 = !DILocation(line: 52, column: 20, scope: !7343)
!7350 = !DILocation(line: 52, column: 9, scope: !7343)
!7351 = !DILocation(line: 52, column: 41, scope: !7343)
!7352 = !DILocation(line: 52, column: 39, scope: !7343)
!7353 = !DILocation(line: 52, column: 2, scope: !7343)
!7354 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7286, file: !7286, line: 64, type: !7355, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !7357)
!7355 = !DISubroutineType(types: !7356)
!7356 = !{null, !32, !32, !108}
!7357 = !{!7358, !7359, !7360}
!7358 = !DILocalVariable(name: "irq", arg: 1, scope: !7354, file: !7286, line: 64, type: !32)
!7359 = !DILocalVariable(name: "prio", arg: 2, scope: !7354, file: !7286, line: 64, type: !32)
!7360 = !DILocalVariable(name: "flags", arg: 3, scope: !7354, file: !7286, line: 64, type: !108)
!7361 = !DILocation(line: 0, scope: !7354)
!7362 = !DILocation(line: 83, column: 8, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7364, file: !7286, line: 82, column: 9)
!7364 = distinct !DILexicalBlock(scope: !7354, file: !7286, line: 76, column: 6)
!7365 = !DILocation(line: 95, column: 2, scope: !7354)
!7366 = !DILocation(line: 96, column: 1, scope: !7354)
!7367 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !624, file: !624, line: 1814, type: !7368, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !7370)
!7368 = !DISubroutineType(types: !7369)
!7369 = !{null, !870, !108}
!7370 = !{!7371, !7372}
!7371 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7367, file: !624, line: 1814, type: !870)
!7372 = !DILocalVariable(name: "priority", arg: 2, scope: !7367, file: !624, line: 1814, type: !108)
!7373 = !DILocation(line: 0, scope: !7367)
!7374 = !DILocation(line: 0, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7367, file: !624, line: 1816, column: 7)
!7376 = !DILocation(line: 1816, column: 7, scope: !7367)
!7377 = !DILocation(line: 1824, column: 1, scope: !7367)
!7378 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7286, file: !7286, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !7379)
!7379 = !{!7380}
!7380 = !DILocalVariable(name: "unused", arg: 1, scope: !7378, file: !7286, line: 155, type: !13)
!7381 = !DILocation(line: 0, scope: !7378)
!7382 = !DILocation(line: 159, column: 2, scope: !7378)
!7383 = !DILocation(line: 160, column: 1, scope: !7378)
!7384 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7385, file: !7385, line: 87, type: !334, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2796, retainedNodes: !251)
!7385 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7386 = !DILocation(line: 89, column: 2, scope: !7384)
!7387 = !DILocation(line: 90, column: 2, scope: !7384)
!7388 = !DILocation(line: 91, column: 1, scope: !7384)
!7389 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7385, file: !7385, line: 23, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!7390 = !DISubprogram(name: "z_arm_int_exit", scope: !7391, file: !7391, line: 153, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!7391 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7392 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7393, file: !7393, line: 256, type: !334, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !251)
!7393 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7394 = !DILocation(line: 258, column: 2, scope: !7392)
!7395 = !DILocation(line: 260, column: 2, scope: !7392)
!7396 = !DILocation(line: 262, column: 2, scope: !7392)
!7397 = !DILocation(line: 263, column: 2, scope: !7392)
!7398 = !DILocation(line: 267, column: 2, scope: !7392)
!7399 = !DILocation(line: 268, column: 2, scope: !7392)
!7400 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7393, file: !7393, line: 53, type: !334, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !251)
!7401 = !DILocation(line: 55, column: 12, scope: !7400)
!7402 = !DILocation(line: 271, column: 3, scope: !7403, inlinedAt: !7404)
!7403 = distinct !DISubprogram(name: "__DSB", scope: !7334, file: !7334, line: 269, type: !334, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !251)
!7404 = distinct !DILocation(line: 56, column: 2, scope: !7400)
!7405 = !{i64 2895687}
!7406 = !DILocation(line: 260, column: 3, scope: !7407, inlinedAt: !7408)
!7407 = distinct !DISubprogram(name: "__ISB", scope: !7334, file: !7334, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !251)
!7408 = distinct !DILocation(line: 57, column: 2, scope: !7400)
!7409 = !{i64 2895404}
!7410 = !DILocation(line: 58, column: 1, scope: !7400)
!7411 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7393, file: !7393, line: 96, type: !334, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !251)
!7412 = !DILocation(line: 103, column: 13, scope: !7411)
!7413 = !DILocation(line: 975, column: 3, scope: !7414, inlinedAt: !7417)
!7414 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7334, file: !7334, line: 971, type: !3620, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !7415)
!7415 = !{!7416}
!7416 = !DILocalVariable(name: "result", scope: !7414, file: !7334, line: 973, type: !108)
!7417 = distinct !DILocation(line: 189, column: 16, scope: !7411)
!7418 = !{i64 2916517}
!7419 = !DILocation(line: 0, scope: !7414, inlinedAt: !7417)
!7420 = !DILocation(line: 189, column: 32, scope: !7411)
!7421 = !DILocalVariable(name: "control", arg: 1, scope: !7422, file: !7334, line: 1001, type: !108)
!7422 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7334, file: !7334, line: 1001, type: !7423, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !7425)
!7423 = !DISubroutineType(types: !7424)
!7424 = !{null, !108}
!7425 = !{!7421}
!7426 = !DILocation(line: 0, scope: !7422, inlinedAt: !7427)
!7427 = distinct !DILocation(line: 189, column: 2, scope: !7411)
!7428 = !DILocation(line: 1003, column: 3, scope: !7422, inlinedAt: !7427)
!7429 = !{i64 2917237}
!7430 = !DILocation(line: 260, column: 3, scope: !7407, inlinedAt: !7431)
!7431 = distinct !DILocation(line: 1004, column: 3, scope: !7422, inlinedAt: !7427)
!7432 = !DILocation(line: 191, column: 1, scope: !7411)
!7433 = distinct !DISubprogram(name: "arch_swap", scope: !7434, file: !7434, line: 33, type: !7344, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !7435)
!7434 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7435 = !{!7436}
!7436 = !DILocalVariable(name: "key", arg: 1, scope: !7433, file: !7434, line: 33, type: !32)
!7437 = !DILocation(line: 0, scope: !7433)
!7438 = !DILocation(line: 36, column: 2, scope: !7433)
!7439 = !DILocation(line: 36, column: 17, scope: !7433)
!7440 = !DILocation(line: 36, column: 25, scope: !7433)
!7441 = !DILocation(line: 37, column: 37, scope: !7433)
!7442 = !DILocation(line: 37, column: 17, scope: !7433)
!7443 = !DILocation(line: 37, column: 35, scope: !7433)
!7444 = !DILocation(line: 41, column: 12, scope: !7433)
!7445 = !DILocalVariable(name: "key", arg: 1, scope: !7446, file: !7016, line: 84, type: !32)
!7446 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7016, file: !7016, line: 84, type: !7027, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !7447)
!7447 = !{!7445}
!7448 = !DILocation(line: 0, scope: !7446, inlinedAt: !7449)
!7449 = distinct !DILocation(line: 44, column: 2, scope: !7433)
!7450 = !DILocation(line: 95, column: 2, scope: !7446, inlinedAt: !7449)
!7451 = !{i64 2038047}
!7452 = !DILocation(line: 53, column: 9, scope: !7433)
!7453 = !DILocation(line: 53, column: 24, scope: !7433)
!7454 = !DILocation(line: 53, column: 2, scope: !7433)
!7455 = distinct !DISubprogram(name: "arch_new_thread", scope: !7456, file: !7456, line: 56, type: !7457, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2854, retainedNodes: !7564)
!7456 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7457 = !DISubroutineType(types: !7458)
!7458 = !{null, !7459, !7559, !277, !321, !102, !102, !102}
!7459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7460, size: 32)
!7460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !7461)
!7461 = !{!7462, !7520, !7532, !7533, !7534, !7535, !7541, !7554}
!7462 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7460, file: !163, line: 247, baseType: !7463, size: 384)
!7463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !7464)
!7464 = !{!7465, !7489, !7496, !7497, !7498, !7507, !7508, !7509}
!7465 = !DIDerivedType(tag: DW_TAG_member, scope: !7463, file: !163, line: 60, baseType: !7466, size: 64)
!7466 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7463, file: !163, line: 60, size: 64, elements: !7467)
!7467 = !{!7468, !7483}
!7468 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7466, file: !163, line: 61, baseType: !7469, size: 64)
!7469 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !7470)
!7470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !7471)
!7471 = !{!7472, !7478}
!7472 = !DIDerivedType(tag: DW_TAG_member, scope: !7470, file: !146, line: 38, baseType: !7473, size: 32)
!7473 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7470, file: !146, line: 38, size: 32, elements: !7474)
!7474 = !{!7475, !7477}
!7475 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7473, file: !146, line: 39, baseType: !7476, size: 32)
!7476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7470, size: 32)
!7477 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7473, file: !146, line: 40, baseType: !7476, size: 32)
!7478 = !DIDerivedType(tag: DW_TAG_member, scope: !7470, file: !146, line: 42, baseType: !7479, size: 32, offset: 32)
!7479 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7470, file: !146, line: 42, size: 32, elements: !7480)
!7480 = !{!7481, !7482}
!7481 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7479, file: !146, line: 43, baseType: !7476, size: 32)
!7482 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7479, file: !146, line: 44, baseType: !7476, size: 32)
!7483 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7466, file: !163, line: 62, baseType: !7484, size: 64)
!7484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !7485)
!7485 = !{!7486}
!7486 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7484, file: !175, line: 50, baseType: !7487, size: 64)
!7487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7488, size: 64, elements: !180)
!7488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7484, size: 32)
!7489 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7463, file: !163, line: 68, baseType: !7490, size: 32, offset: 64)
!7490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7491, size: 32)
!7491 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !7492)
!7492 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !7493)
!7493 = !{!7494}
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7492, file: !141, line: 232, baseType: !7495, size: 64)
!7495 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !7470)
!7496 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7463, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!7497 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7463, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!7498 = !DIDerivedType(tag: DW_TAG_member, scope: !7463, file: !163, line: 90, baseType: !7499, size: 16, offset: 112)
!7499 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7463, file: !163, line: 90, size: 16, elements: !7500)
!7500 = !{!7501, !7506}
!7501 = !DIDerivedType(tag: DW_TAG_member, scope: !7499, file: !163, line: 91, baseType: !7502, size: 16)
!7502 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7499, file: !163, line: 91, size: 16, elements: !7503)
!7503 = !{!7504, !7505}
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7502, file: !163, line: 96, baseType: !195, size: 8)
!7505 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7502, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!7506 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7499, file: !163, line: 100, baseType: !121, size: 16)
!7507 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7463, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!7508 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7463, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7463, file: !163, line: 131, baseType: !7510, size: 192, offset: 192)
!7510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !7511)
!7511 = !{!7512, !7513, !7519}
!7512 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7510, file: !141, line: 245, baseType: !7469, size: 64)
!7513 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7510, file: !141, line: 246, baseType: !7514, size: 32, offset: 64)
!7514 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !7515)
!7515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7516, size: 32)
!7516 = !DISubroutineType(types: !7517)
!7517 = !{null, !7518}
!7518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7510, size: 32)
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7510, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7460, file: !163, line: 250, baseType: !7521, size: 288, offset: 384)
!7521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !7522)
!7522 = !{!7523, !7524, !7525, !7526, !7527, !7528, !7529, !7530, !7531}
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7521, file: !214, line: 26, baseType: !108, size: 32)
!7524 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7521, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!7525 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7521, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!7526 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7521, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!7527 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7521, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7521, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7521, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!7530 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7521, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!7531 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7521, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7460, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!7533 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7460, file: !163, line: 256, baseType: !7491, size: 64, offset: 704)
!7534 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7460, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!7535 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7460, file: !163, line: 300, baseType: !7536, size: 96, offset: 800)
!7536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !7537)
!7537 = !{!7538, !7539, !7540}
!7538 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7536, file: !163, line: 153, baseType: !22, size: 32)
!7539 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7536, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!7540 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7536, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!7541 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7460, file: !163, line: 325, baseType: !7542, size: 32, offset: 896)
!7542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7543, size: 32)
!7543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !7544)
!7544 = !{!7545, !7551, !7552}
!7545 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7543, file: !137, line: 5074, baseType: !7546, size: 96)
!7546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !7547)
!7547 = !{!7548, !7549, !7550}
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7546, file: !240, line: 57, baseType: !243, size: 32)
!7549 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7546, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!7550 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7546, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7543, file: !137, line: 5075, baseType: !7491, size: 64, offset: 96)
!7552 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7543, file: !137, line: 5076, baseType: !7553, offset: 160)
!7553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!7554 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7460, file: !163, line: 343, baseType: !7555, size: 64, offset: 928)
!7555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !7556)
!7556 = !{!7557, !7558}
!7557 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7555, file: !214, line: 63, baseType: !108, size: 32)
!7558 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7555, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!7559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7560, size: 32)
!7560 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !314, line: 44, baseType: !7561)
!7561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !316, line: 47, size: 8, elements: !7562)
!7562 = !{!7563}
!7563 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7561, file: !316, line: 48, baseType: !278, size: 8)
!7564 = !{!7565, !7566, !7567, !7568, !7569, !7570, !7571, !7572}
!7565 = !DILocalVariable(name: "thread", arg: 1, scope: !7455, file: !7456, line: 56, type: !7459)
!7566 = !DILocalVariable(name: "stack", arg: 2, scope: !7455, file: !7456, line: 56, type: !7559)
!7567 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7455, file: !7456, line: 57, type: !277)
!7568 = !DILocalVariable(name: "entry", arg: 4, scope: !7455, file: !7456, line: 57, type: !321)
!7569 = !DILocalVariable(name: "p1", arg: 5, scope: !7455, file: !7456, line: 58, type: !102)
!7570 = !DILocalVariable(name: "p2", arg: 6, scope: !7455, file: !7456, line: 58, type: !102)
!7571 = !DILocalVariable(name: "p3", arg: 7, scope: !7455, file: !7456, line: 58, type: !102)
!7572 = !DILocalVariable(name: "iframe", scope: !7455, file: !7456, line: 60, type: !2857)
!7573 = !DILocation(line: 0, scope: !7455)
!7574 = !DILocation(line: 85, column: 11, scope: !7455)
!7575 = !DILocation(line: 93, column: 10, scope: !7455)
!7576 = !DILocation(line: 98, column: 13, scope: !7455)
!7577 = !DILocation(line: 100, column: 15, scope: !7455)
!7578 = !DILocation(line: 100, column: 10, scope: !7455)
!7579 = !DILocation(line: 100, column: 13, scope: !7455)
!7580 = !DILocation(line: 101, column: 15, scope: !7455)
!7581 = !DILocation(line: 101, column: 10, scope: !7455)
!7582 = !DILocation(line: 101, column: 13, scope: !7455)
!7583 = !DILocation(line: 102, column: 15, scope: !7455)
!7584 = !DILocation(line: 102, column: 10, scope: !7455)
!7585 = !DILocation(line: 102, column: 13, scope: !7455)
!7586 = !DILocation(line: 103, column: 15, scope: !7455)
!7587 = !DILocation(line: 103, column: 10, scope: !7455)
!7588 = !DILocation(line: 103, column: 13, scope: !7455)
!7589 = !DILocation(line: 106, column: 10, scope: !7455)
!7590 = !DILocation(line: 106, column: 15, scope: !7455)
!7591 = !DILocation(line: 122, column: 29, scope: !7455)
!7592 = !DILocation(line: 122, column: 23, scope: !7455)
!7593 = !DILocation(line: 122, column: 27, scope: !7455)
!7594 = !DILocation(line: 123, column: 15, scope: !7455)
!7595 = !DILocation(line: 123, column: 23, scope: !7455)
!7596 = !DILocation(line: 143, column: 1, scope: !7455)
!7597 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7456, file: !7456, line: 385, type: !7598, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2854, retainedNodes: !7601)
!7598 = !DISubroutineType(types: !7599)
!7599 = !{!108, !7600, !7600}
!7600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!7601 = !{!7602, !7603, !7604, !7607}
!7602 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7597, file: !7456, line: 385, type: !7600)
!7603 = !DILocalVariable(name: "psp", arg: 2, scope: !7597, file: !7456, line: 385, type: !7600)
!7604 = !DILocalVariable(name: "thread", scope: !7597, file: !7456, line: 388, type: !7605)
!7605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7606, size: 32)
!7606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7460)
!7607 = !DILocalVariable(name: "guard_len", scope: !7597, file: !7456, line: 405, type: !108)
!7608 = !DILocation(line: 0, scope: !7597)
!7609 = !DILocation(line: 388, column: 34, scope: !7597)
!7610 = !DILocation(line: 390, column: 13, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7597, file: !7456, line: 390, column: 6)
!7612 = !DILocation(line: 390, column: 6, scope: !7597)
!7613 = !DILocation(line: 438, column: 6, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7597, file: !7456, line: 438, column: 6)
!7615 = !DILocation(line: 438, column: 6, scope: !7597)
!7616 = !DILocation(line: 442, column: 3, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7614, file: !7456, line: 440, column: 22)
!7618 = !DILocation(line: 455, column: 1, scope: !7597)
!7619 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7456, file: !7456, line: 530, type: !7620, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2854, retainedNodes: !7622)
!7620 = !DISubroutineType(types: !7621)
!7621 = !{null, !7459, !277, !321}
!7622 = !{!7623, !7624, !7625}
!7623 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7619, file: !7456, line: 530, type: !7459)
!7624 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7619, file: !7456, line: 530, type: !277)
!7625 = !DILocalVariable(name: "_main", arg: 3, scope: !7619, file: !7456, line: 531, type: !321)
!7626 = !DILocation(line: 0, scope: !7619)
!7627 = !DILocation(line: 535, column: 11, scope: !7619)
!7628 = !DILocation(line: 560, column: 2, scope: !7619)
!7629 = !DILocation(line: 576, column: 2, scope: !7619)
!7630 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7631 = !DILocation(line: 603, column: 2, scope: !7619)
!7632 = distinct !DISubprogram(name: "z_arm_fault", scope: !7633, file: !7633, line: 1036, type: !7634, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7649)
!7633 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7634 = !DISubroutineType(types: !7635)
!7635 = !{null, !108, !108, !108, !7636}
!7636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7637, size: 32)
!7637 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !214, line: 37, baseType: !7638)
!7638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !7639)
!7639 = !{!7640, !7641, !7642, !7643, !7644, !7645, !7646, !7647, !7648}
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7638, file: !214, line: 26, baseType: !108, size: 32)
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7638, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!7642 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7638, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!7643 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7638, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!7644 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7638, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!7645 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7638, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!7646 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7638, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!7647 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7638, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!7648 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7638, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!7649 = !{!7650, !7651, !7652, !7653, !7654, !7655, !7656, !7657, !7658, !7659}
!7650 = !DILocalVariable(name: "msp", arg: 1, scope: !7632, file: !7633, line: 1036, type: !108)
!7651 = !DILocalVariable(name: "psp", arg: 2, scope: !7632, file: !7633, line: 1036, type: !108)
!7652 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7632, file: !7633, line: 1036, type: !108)
!7653 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7632, file: !7633, line: 1037, type: !7636)
!7654 = !DILocalVariable(name: "reason", scope: !7632, file: !7633, line: 1039, type: !108)
!7655 = !DILocalVariable(name: "fault", scope: !7632, file: !7633, line: 1040, type: !103)
!7656 = !DILocalVariable(name: "recoverable", scope: !7632, file: !7633, line: 1041, type: !131)
!7657 = !DILocalVariable(name: "nested_exc", scope: !7632, file: !7633, line: 1041, type: !131)
!7658 = !DILocalVariable(name: "esf", scope: !7632, file: !7633, line: 1042, type: !2925)
!7659 = !DILocalVariable(name: "esf_copy", scope: !7632, file: !7633, line: 1047, type: !2926)
!7660 = !DILocation(line: 0, scope: !7632)
!7661 = !DILocation(line: 1040, column: 19, scope: !7632)
!7662 = !DILocation(line: 1040, column: 24, scope: !7632)
!7663 = !DILocation(line: 1041, column: 2, scope: !7632)
!7664 = !DILocation(line: 1047, column: 2, scope: !7632)
!7665 = !DILocation(line: 1047, column: 15, scope: !7632)
!7666 = !DILocalVariable(name: "key", arg: 1, scope: !7667, file: !7016, line: 84, type: !32)
!7667 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7016, file: !7016, line: 84, type: !7027, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7668)
!7668 = !{!7666}
!7669 = !DILocation(line: 0, scope: !7667, inlinedAt: !7670)
!7670 = distinct !DILocation(line: 1050, column: 2, scope: !7632)
!7671 = !DILocation(line: 95, column: 2, scope: !7667, inlinedAt: !7670)
!7672 = !{i64 2071291}
!7673 = !DILocation(line: 1055, column: 9, scope: !7632)
!7674 = !DILocation(line: 1063, column: 11, scope: !7632)
!7675 = !DILocation(line: 1064, column: 6, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7632, file: !7633, line: 1064, column: 6)
!7677 = !{i8 0, i8 2}
!7678 = !DILocation(line: 1064, column: 6, scope: !7632)
!7679 = !DILocation(line: 1070, column: 20, scope: !7632)
!7680 = !DILocation(line: 1070, column: 2, scope: !7632)
!7681 = !DILocation(line: 1089, column: 6, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7632, file: !7633, line: 1089, column: 6)
!7683 = !DILocation(line: 0, scope: !7682)
!7684 = !DILocation(line: 1089, column: 6, scope: !7632)
!7685 = !DILocation(line: 1090, column: 28, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !7687, file: !7633, line: 1090, column: 7)
!7687 = distinct !DILexicalBlock(scope: !7682, file: !7633, line: 1089, column: 18)
!7688 = !DILocation(line: 1090, column: 44, scope: !7686)
!7689 = !DILocation(line: 1090, column: 7, scope: !7687)
!7690 = !DILocation(line: 1091, column: 24, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7686, file: !7633, line: 1090, column: 50)
!7692 = !DILocation(line: 1092, column: 3, scope: !7691)
!7693 = !DILocation(line: 1094, column: 23, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7682, file: !7633, line: 1093, column: 9)
!7695 = !DILocation(line: 1097, column: 2, scope: !7632)
!7696 = !DILocation(line: 1098, column: 1, scope: !7632)
!7697 = distinct !DISubprogram(name: "get_esf", scope: !7633, file: !7633, line: 894, type: !7698, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7701)
!7698 = !DISubroutineType(types: !7699)
!7699 = !{!2925, !108, !108, !108, !7700}
!7700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!7701 = !{!7702, !7703, !7704, !7705, !7706, !7707}
!7702 = !DILocalVariable(name: "msp", arg: 1, scope: !7697, file: !7633, line: 894, type: !108)
!7703 = !DILocalVariable(name: "psp", arg: 2, scope: !7697, file: !7633, line: 894, type: !108)
!7704 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7697, file: !7633, line: 894, type: !108)
!7705 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7697, file: !7633, line: 895, type: !7700)
!7706 = !DILocalVariable(name: "alternative_state_exc", scope: !7697, file: !7633, line: 897, type: !131)
!7707 = !DILocalVariable(name: "ptr_esf", scope: !7697, file: !7633, line: 898, type: !2925)
!7708 = !DILocation(line: 0, scope: !7697)
!7709 = !DILocation(line: 900, column: 14, scope: !7697)
!7710 = !DILocation(line: 902, column: 49, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7697, file: !7633, line: 902, column: 6)
!7712 = !DILocation(line: 902, column: 6, scope: !7697)
!7713 = !DILocation(line: 983, column: 44, scope: !7714)
!7714 = distinct !DILexicalBlock(scope: !7697, file: !7633, line: 983, column: 6)
!7715 = !DILocation(line: 985, column: 3, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7717, file: !7633, line: 985, column: 3)
!7717 = distinct !DILexicalBlock(scope: !7718, file: !7633, line: 985, column: 3)
!7718 = distinct !DILexicalBlock(scope: !7719, file: !7633, line: 985, column: 3)
!7719 = distinct !DILexicalBlock(scope: !7720, file: !7633, line: 985, column: 3)
!7720 = distinct !DILexicalBlock(scope: !7714, file: !7633, line: 984, column: 47)
!7721 = !DILocation(line: 986, column: 3, scope: !7720)
!7722 = !DILocation(line: 983, column: 18, scope: !7714)
!7723 = !DILocation(line: 991, column: 7, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7725, file: !7633, line: 990, column: 30)
!7725 = distinct !DILexicalBlock(scope: !7697, file: !7633, line: 990, column: 6)
!7726 = !DILocation(line: 998, column: 16, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7728, file: !7633, line: 995, column: 10)
!7728 = distinct !DILexicalBlock(scope: !7724, file: !7633, line: 991, column: 7)
!7729 = !DILocation(line: 1002, column: 2, scope: !7697)
!7730 = !DILocation(line: 1003, column: 1, scope: !7697)
!7731 = distinct !DISubprogram(name: "fault_handle", scope: !7633, file: !7633, line: 786, type: !7732, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7734)
!7732 = !DISubroutineType(types: !7733)
!7733 = !{!108, !2925, !103, !7700}
!7734 = !{!7735, !7736, !7737, !7738}
!7735 = !DILocalVariable(name: "esf", arg: 1, scope: !7731, file: !7633, line: 786, type: !2925)
!7736 = !DILocalVariable(name: "fault", arg: 2, scope: !7731, file: !7633, line: 786, type: !103)
!7737 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7731, file: !7633, line: 786, type: !7700)
!7738 = !DILocalVariable(name: "reason", scope: !7731, file: !7633, line: 788, type: !108)
!7739 = !DILocation(line: 0, scope: !7731)
!7740 = !DILocation(line: 790, column: 15, scope: !7731)
!7741 = !DILocation(line: 792, column: 2, scope: !7731)
!7742 = !DILocation(line: 794, column: 12, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7731, file: !7633, line: 792, column: 17)
!7744 = !DILocation(line: 795, column: 3, scope: !7743)
!7745 = !DILocation(line: 800, column: 12, scope: !7743)
!7746 = !DILocation(line: 801, column: 3, scope: !7743)
!7747 = !DILocation(line: 803, column: 12, scope: !7743)
!7748 = !DILocation(line: 804, column: 3, scope: !7743)
!7749 = !DILocation(line: 806, column: 12, scope: !7743)
!7750 = !DILocation(line: 807, column: 3, scope: !7743)
!7751 = !DILocation(line: 814, column: 3, scope: !7743)
!7752 = !DILocation(line: 815, column: 3, scope: !7743)
!7753 = !DILocation(line: 820, column: 3, scope: !7743)
!7754 = !DILocation(line: 821, column: 3, scope: !7743)
!7755 = !DILocation(line: 829, column: 2, scope: !7731)
!7756 = distinct !DISubprogram(name: "hard_fault", scope: !7633, file: !7633, line: 709, type: !7757, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7759)
!7757 = !DISubroutineType(types: !7758)
!7758 = !{!108, !2925, !7700}
!7759 = !{!7760, !7761, !7762}
!7760 = !DILocalVariable(name: "esf", arg: 1, scope: !7756, file: !7633, line: 709, type: !2925)
!7761 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7756, file: !7633, line: 709, type: !7700)
!7762 = !DILocalVariable(name: "reason", scope: !7756, file: !7633, line: 711, type: !108)
!7763 = !DILocation(line: 0, scope: !7756)
!7764 = !DILocation(line: 713, column: 2, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7766, file: !7633, line: 713, column: 2)
!7766 = distinct !DILexicalBlock(scope: !7767, file: !7633, line: 713, column: 2)
!7767 = distinct !DILexicalBlock(scope: !7768, file: !7633, line: 713, column: 2)
!7768 = distinct !DILexicalBlock(scope: !7756, file: !7633, line: 713, column: 2)
!7769 = !DILocation(line: 732, column: 15, scope: !7756)
!7770 = !DILocation(line: 734, column: 12, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7756, file: !7633, line: 734, column: 6)
!7772 = !DILocation(line: 734, column: 17, scope: !7771)
!7773 = !DILocation(line: 734, column: 41, scope: !7771)
!7774 = !DILocation(line: 734, column: 6, scope: !7756)
!7775 = !DILocation(line: 735, column: 3, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7777, file: !7633, line: 735, column: 3)
!7777 = distinct !DILexicalBlock(scope: !7778, file: !7633, line: 735, column: 3)
!7778 = distinct !DILexicalBlock(scope: !7779, file: !7633, line: 735, column: 3)
!7779 = distinct !DILexicalBlock(scope: !7780, file: !7633, line: 735, column: 3)
!7780 = distinct !DILexicalBlock(scope: !7771, file: !7633, line: 734, column: 47)
!7781 = !DILocation(line: 736, column: 2, scope: !7780)
!7782 = !DILocation(line: 736, column: 19, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7771, file: !7633, line: 736, column: 13)
!7784 = !DILocation(line: 736, column: 49, scope: !7783)
!7785 = !DILocation(line: 736, column: 13, scope: !7771)
!7786 = !DILocation(line: 737, column: 3, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7788, file: !7633, line: 737, column: 3)
!7788 = distinct !DILexicalBlock(scope: !7789, file: !7633, line: 737, column: 3)
!7789 = distinct !DILexicalBlock(scope: !7790, file: !7633, line: 737, column: 3)
!7790 = distinct !DILexicalBlock(scope: !7791, file: !7633, line: 737, column: 3)
!7791 = distinct !DILexicalBlock(scope: !7783, file: !7633, line: 736, column: 55)
!7792 = !DILocation(line: 738, column: 2, scope: !7791)
!7793 = !DILocation(line: 738, column: 19, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7783, file: !7633, line: 738, column: 13)
!7795 = !DILocation(line: 738, column: 24, scope: !7794)
!7796 = !DILocation(line: 738, column: 47, scope: !7794)
!7797 = !DILocation(line: 738, column: 13, scope: !7783)
!7798 = !DILocation(line: 739, column: 3, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7800, file: !7633, line: 739, column: 3)
!7800 = distinct !DILexicalBlock(scope: !7801, file: !7633, line: 739, column: 3)
!7801 = distinct !DILexicalBlock(scope: !7802, file: !7633, line: 739, column: 3)
!7802 = distinct !DILexicalBlock(scope: !7803, file: !7633, line: 739, column: 3)
!7803 = distinct !DILexicalBlock(scope: !7794, file: !7633, line: 738, column: 53)
!7804 = !DILocation(line: 740, column: 7, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7803, file: !7633, line: 740, column: 7)
!7806 = !DILocation(line: 740, column: 7, scope: !7803)
!7807 = !DILocation(line: 741, column: 4, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7809, file: !7633, line: 741, column: 4)
!7809 = distinct !DILexicalBlock(scope: !7810, file: !7633, line: 741, column: 4)
!7810 = distinct !DILexicalBlock(scope: !7811, file: !7633, line: 741, column: 4)
!7811 = distinct !DILexicalBlock(scope: !7812, file: !7633, line: 741, column: 4)
!7812 = distinct !DILexicalBlock(scope: !7805, file: !7633, line: 740, column: 38)
!7813 = !DILocation(line: 742, column: 24, scope: !7812)
!7814 = !DILocation(line: 743, column: 3, scope: !7812)
!7815 = !DILocation(line: 743, column: 20, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7805, file: !7633, line: 743, column: 14)
!7817 = !DILocation(line: 743, column: 25, scope: !7816)
!7818 = !DILocation(line: 743, column: 52, scope: !7816)
!7819 = !DILocation(line: 743, column: 14, scope: !7805)
!7820 = !DILocation(line: 744, column: 13, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7816, file: !7633, line: 743, column: 58)
!7822 = !DILocation(line: 745, column: 3, scope: !7821)
!7823 = !DILocation(line: 745, column: 20, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7816, file: !7633, line: 745, column: 14)
!7825 = !DILocation(line: 745, column: 25, scope: !7824)
!7826 = !DILocation(line: 745, column: 52, scope: !7824)
!7827 = !DILocation(line: 745, column: 14, scope: !7816)
!7828 = !DILocation(line: 746, column: 13, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7824, file: !7633, line: 745, column: 58)
!7830 = !DILocation(line: 747, column: 3, scope: !7829)
!7831 = !DILocation(line: 747, column: 20, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7824, file: !7633, line: 747, column: 14)
!7833 = !DILocation(line: 747, column: 52, scope: !7832)
!7834 = !DILocation(line: 747, column: 14, scope: !7824)
!7835 = !DILocation(line: 748, column: 13, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7832, file: !7633, line: 747, column: 58)
!7837 = !DILocation(line: 753, column: 3, scope: !7836)
!7838 = !DILocation(line: 766, column: 2, scope: !7756)
!7839 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7633, file: !7633, line: 229, type: !7732, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7840)
!7840 = !{!7841, !7842, !7843, !7844, !7845, !7846, !7849}
!7841 = !DILocalVariable(name: "esf", arg: 1, scope: !7839, file: !7633, line: 229, type: !2925)
!7842 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7839, file: !7633, line: 229, type: !103)
!7843 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7839, file: !7633, line: 230, type: !7700)
!7844 = !DILocalVariable(name: "reason", scope: !7839, file: !7633, line: 232, type: !108)
!7845 = !DILocalVariable(name: "mmfar", scope: !7839, file: !7633, line: 233, type: !108)
!7846 = !DILocalVariable(name: "temp", scope: !7847, file: !7633, line: 254, type: !108)
!7847 = distinct !DILexicalBlock(scope: !7848, file: !7633, line: 244, column: 48)
!7848 = distinct !DILexicalBlock(scope: !7839, file: !7633, line: 244, column: 6)
!7849 = !DILocalVariable(name: "min_stack_ptr", scope: !7850, file: !7633, line: 309, type: !108)
!7850 = distinct !DILexicalBlock(scope: !7851, file: !7633, line: 308, column: 43)
!7851 = distinct !DILexicalBlock(scope: !7852, file: !7633, line: 308, column: 7)
!7852 = distinct !DILexicalBlock(scope: !7853, file: !7633, line: 289, column: 40)
!7853 = distinct !DILexicalBlock(scope: !7839, file: !7633, line: 288, column: 6)
!7854 = !DILocation(line: 0, scope: !7839)
!7855 = !DILocation(line: 235, column: 2, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7857, file: !7633, line: 235, column: 2)
!7857 = distinct !DILexicalBlock(scope: !7858, file: !7633, line: 235, column: 2)
!7858 = distinct !DILexicalBlock(scope: !7859, file: !7633, line: 235, column: 2)
!7859 = distinct !DILexicalBlock(scope: !7839, file: !7633, line: 235, column: 2)
!7860 = !DILocation(line: 237, column: 12, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7839, file: !7633, line: 237, column: 6)
!7862 = !DILocation(line: 237, column: 17, scope: !7861)
!7863 = !DILocation(line: 237, column: 41, scope: !7861)
!7864 = !DILocation(line: 237, column: 6, scope: !7839)
!7865 = !DILocation(line: 238, column: 3, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7867, file: !7633, line: 238, column: 3)
!7867 = distinct !DILexicalBlock(scope: !7868, file: !7633, line: 238, column: 3)
!7868 = distinct !DILexicalBlock(scope: !7869, file: !7633, line: 238, column: 3)
!7869 = distinct !DILexicalBlock(scope: !7870, file: !7633, line: 238, column: 3)
!7870 = distinct !DILexicalBlock(scope: !7861, file: !7633, line: 237, column: 47)
!7871 = !DILocation(line: 240, column: 2, scope: !7870)
!7872 = !DILocation(line: 241, column: 12, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7839, file: !7633, line: 241, column: 6)
!7874 = !DILocation(line: 241, column: 17, scope: !7873)
!7875 = !DILocation(line: 241, column: 43, scope: !7873)
!7876 = !DILocation(line: 241, column: 6, scope: !7839)
!7877 = !DILocation(line: 242, column: 3, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !7879, file: !7633, line: 242, column: 3)
!7879 = distinct !DILexicalBlock(scope: !7880, file: !7633, line: 242, column: 3)
!7880 = distinct !DILexicalBlock(scope: !7881, file: !7633, line: 242, column: 3)
!7881 = distinct !DILexicalBlock(scope: !7882, file: !7633, line: 242, column: 3)
!7882 = distinct !DILexicalBlock(scope: !7873, file: !7633, line: 241, column: 49)
!7883 = !DILocation(line: 243, column: 2, scope: !7882)
!7884 = !DILocation(line: 244, column: 12, scope: !7848)
!7885 = !DILocation(line: 244, column: 17, scope: !7848)
!7886 = !DILocation(line: 244, column: 42, scope: !7848)
!7887 = !DILocation(line: 244, column: 6, scope: !7839)
!7888 = !DILocation(line: 245, column: 3, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7890, file: !7633, line: 245, column: 3)
!7890 = distinct !DILexicalBlock(scope: !7891, file: !7633, line: 245, column: 3)
!7891 = distinct !DILexicalBlock(scope: !7892, file: !7633, line: 245, column: 3)
!7892 = distinct !DILexicalBlock(scope: !7847, file: !7633, line: 245, column: 3)
!7893 = !DILocation(line: 254, column: 24, scope: !7847)
!7894 = !DILocation(line: 0, scope: !7847)
!7895 = !DILocation(line: 256, column: 13, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7847, file: !7633, line: 256, column: 7)
!7897 = !DILocation(line: 256, column: 18, scope: !7896)
!7898 = !DILocation(line: 256, column: 44, scope: !7896)
!7899 = !DILocation(line: 256, column: 7, scope: !7847)
!7900 = !DILocation(line: 258, column: 4, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7902, file: !7633, line: 258, column: 4)
!7902 = distinct !DILexicalBlock(scope: !7903, file: !7633, line: 258, column: 4)
!7903 = distinct !DILexicalBlock(scope: !7904, file: !7633, line: 258, column: 4)
!7904 = distinct !DILexicalBlock(scope: !7905, file: !7633, line: 258, column: 4)
!7905 = distinct !DILexicalBlock(scope: !7896, file: !7633, line: 256, column: 50)
!7906 = !DILocation(line: 259, column: 24, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7905, file: !7633, line: 259, column: 8)
!7908 = !DILocation(line: 259, column: 8, scope: !7905)
!7909 = !DILocation(line: 261, column: 15, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7907, file: !7633, line: 259, column: 30)
!7911 = !DILocation(line: 262, column: 4, scope: !7910)
!7912 = !DILocation(line: 265, column: 12, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7839, file: !7633, line: 265, column: 6)
!7914 = !DILocation(line: 265, column: 17, scope: !7913)
!7915 = !DILocation(line: 265, column: 42, scope: !7913)
!7916 = !DILocation(line: 265, column: 6, scope: !7839)
!7917 = !DILocation(line: 266, column: 3, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7919, file: !7633, line: 266, column: 3)
!7919 = distinct !DILexicalBlock(scope: !7920, file: !7633, line: 266, column: 3)
!7920 = distinct !DILexicalBlock(scope: !7921, file: !7633, line: 266, column: 3)
!7921 = distinct !DILexicalBlock(scope: !7922, file: !7633, line: 266, column: 3)
!7922 = distinct !DILexicalBlock(scope: !7913, file: !7633, line: 265, column: 48)
!7923 = !DILocation(line: 267, column: 2, scope: !7922)
!7924 = !DILocation(line: 269, column: 12, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7839, file: !7633, line: 269, column: 6)
!7926 = !DILocation(line: 269, column: 17, scope: !7925)
!7927 = !DILocation(line: 269, column: 41, scope: !7925)
!7928 = !DILocation(line: 269, column: 6, scope: !7839)
!7929 = !DILocation(line: 270, column: 3, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7931, file: !7633, line: 270, column: 3)
!7931 = distinct !DILexicalBlock(scope: !7932, file: !7633, line: 270, column: 3)
!7932 = distinct !DILexicalBlock(scope: !7933, file: !7633, line: 270, column: 3)
!7933 = distinct !DILexicalBlock(scope: !7934, file: !7633, line: 270, column: 3)
!7934 = distinct !DILexicalBlock(scope: !7925, file: !7633, line: 269, column: 47)
!7935 = !DILocation(line: 272, column: 2, scope: !7934)
!7936 = !DILocation(line: 288, column: 12, scope: !7853)
!7937 = !DILocation(line: 288, column: 17, scope: !7853)
!7938 = !DILocation(line: 288, column: 41, scope: !7853)
!7939 = !DILocation(line: 289, column: 9, scope: !7853)
!7940 = !DILocation(line: 289, column: 14, scope: !7853)
!7941 = !DILocation(line: 288, column: 6, scope: !7839)
!7942 = !DILocation(line: 308, column: 12, scope: !7851)
!7943 = !DILocation(line: 308, column: 17, scope: !7851)
!7944 = !DILocation(line: 308, column: 7, scope: !7852)
!7945 = !DILocation(line: 310, column: 6, scope: !7850)
!7946 = !DILocation(line: 309, column: 29, scope: !7850)
!7947 = !DILocation(line: 0, scope: !7850)
!7948 = !DILocation(line: 312, column: 8, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7850, file: !7633, line: 312, column: 8)
!7950 = !DILocation(line: 312, column: 8, scope: !7850)
!7951 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7952, file: !7334, line: 1099, type: !108)
!7952 = distinct !DISubprogram(name: "__set_PSP", scope: !7334, file: !7334, line: 1099, type: !7423, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7953)
!7953 = !{!7951}
!7954 = !DILocation(line: 0, scope: !7952, inlinedAt: !7955)
!7955 = distinct !DILocation(line: 338, column: 5, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !7949, file: !7633, line: 312, column: 23)
!7957 = !DILocation(line: 1101, column: 3, scope: !7952, inlinedAt: !7955)
!7958 = !{i64 2946656}
!7959 = !DILocation(line: 341, column: 4, scope: !7956)
!7960 = !DILocation(line: 360, column: 12, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7839, file: !7633, line: 360, column: 6)
!7962 = !DILocation(line: 360, column: 17, scope: !7961)
!7963 = !DILocation(line: 360, column: 41, scope: !7961)
!7964 = !DILocation(line: 360, column: 6, scope: !7839)
!7965 = !DILocation(line: 361, column: 14, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7961, file: !7633, line: 360, column: 47)
!7967 = !DILocation(line: 362, column: 2, scope: !7966)
!7968 = !DILocation(line: 366, column: 12, scope: !7839)
!7969 = !DILocation(line: 369, column: 15, scope: !7839)
!7970 = !DILocation(line: 371, column: 2, scope: !7839)
!7971 = distinct !DISubprogram(name: "bus_fault", scope: !7633, file: !7633, line: 383, type: !7972, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7974)
!7972 = !DISubroutineType(types: !7973)
!7973 = !{!103, !2925, !103, !7700}
!7974 = !{!7975, !7976, !7977, !7978, !7979}
!7975 = !DILocalVariable(name: "esf", arg: 1, scope: !7971, file: !7633, line: 383, type: !2925)
!7976 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7971, file: !7633, line: 383, type: !103)
!7977 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7971, file: !7633, line: 383, type: !7700)
!7978 = !DILocalVariable(name: "reason", scope: !7971, file: !7633, line: 385, type: !108)
!7979 = !DILocalVariable(name: "bfar", scope: !7980, file: !7633, line: 405, type: !108)
!7980 = distinct !DILexicalBlock(scope: !7981, file: !7633, line: 395, column: 42)
!7981 = distinct !DILexicalBlock(scope: !7971, file: !7633, line: 395, column: 6)
!7982 = !DILocation(line: 0, scope: !7971)
!7983 = !DILocation(line: 387, column: 2, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7985, file: !7633, line: 387, column: 2)
!7985 = distinct !DILexicalBlock(scope: !7986, file: !7633, line: 387, column: 2)
!7986 = distinct !DILexicalBlock(scope: !7987, file: !7633, line: 387, column: 2)
!7987 = distinct !DILexicalBlock(scope: !7971, file: !7633, line: 387, column: 2)
!7988 = !DILocation(line: 389, column: 11, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7971, file: !7633, line: 389, column: 6)
!7990 = !DILocation(line: 389, column: 16, scope: !7989)
!7991 = !DILocation(line: 389, column: 6, scope: !7971)
!7992 = !DILocation(line: 390, column: 3, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7994, file: !7633, line: 390, column: 3)
!7994 = distinct !DILexicalBlock(scope: !7995, file: !7633, line: 390, column: 3)
!7995 = distinct !DILexicalBlock(scope: !7996, file: !7633, line: 390, column: 3)
!7996 = distinct !DILexicalBlock(scope: !7997, file: !7633, line: 390, column: 3)
!7997 = distinct !DILexicalBlock(scope: !7989, file: !7633, line: 389, column: 39)
!7998 = !DILocation(line: 391, column: 2, scope: !7997)
!7999 = !DILocation(line: 392, column: 11, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7971, file: !7633, line: 392, column: 6)
!8001 = !DILocation(line: 392, column: 16, scope: !8000)
!8002 = !DILocation(line: 392, column: 6, scope: !7971)
!8003 = !DILocation(line: 393, column: 3, scope: !8004)
!8004 = distinct !DILexicalBlock(scope: !8005, file: !7633, line: 393, column: 3)
!8005 = distinct !DILexicalBlock(scope: !8006, file: !7633, line: 393, column: 3)
!8006 = distinct !DILexicalBlock(scope: !8007, file: !7633, line: 393, column: 3)
!8007 = distinct !DILexicalBlock(scope: !8008, file: !7633, line: 393, column: 3)
!8008 = distinct !DILexicalBlock(scope: !8000, file: !7633, line: 392, column: 41)
!8009 = !DILocation(line: 394, column: 2, scope: !8008)
!8010 = !DILocation(line: 395, column: 11, scope: !7981)
!8011 = !DILocation(line: 395, column: 16, scope: !7981)
!8012 = !DILocation(line: 395, column: 6, scope: !7971)
!8013 = !DILocation(line: 396, column: 3, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8015, file: !7633, line: 396, column: 3)
!8015 = distinct !DILexicalBlock(scope: !8016, file: !7633, line: 396, column: 3)
!8016 = distinct !DILexicalBlock(scope: !8017, file: !7633, line: 396, column: 3)
!8017 = distinct !DILexicalBlock(scope: !7980, file: !7633, line: 396, column: 3)
!8018 = !DILocation(line: 405, column: 3, scope: !7980)
!8019 = !DILocation(line: 0, scope: !7980)
!8020 = !DILocation(line: 407, column: 13, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !7980, file: !7633, line: 407, column: 7)
!8022 = !DILocation(line: 407, column: 18, scope: !8021)
!8023 = !DILocation(line: 407, column: 44, scope: !8021)
!8024 = !DILocation(line: 407, column: 7, scope: !7980)
!8025 = !DILocation(line: 408, column: 4, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8027, file: !7633, line: 408, column: 4)
!8027 = distinct !DILexicalBlock(scope: !8028, file: !7633, line: 408, column: 4)
!8028 = distinct !DILexicalBlock(scope: !8029, file: !7633, line: 408, column: 4)
!8029 = distinct !DILexicalBlock(scope: !8030, file: !7633, line: 408, column: 4)
!8030 = distinct !DILexicalBlock(scope: !8021, file: !7633, line: 407, column: 50)
!8031 = !DILocation(line: 409, column: 24, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8030, file: !7633, line: 409, column: 8)
!8033 = !DILocation(line: 409, column: 8, scope: !8030)
!8034 = !DILocation(line: 411, column: 15, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8032, file: !7633, line: 409, column: 30)
!8036 = !DILocation(line: 412, column: 4, scope: !8035)
!8037 = !DILocation(line: 415, column: 11, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !7971, file: !7633, line: 415, column: 6)
!8039 = !DILocation(line: 415, column: 16, scope: !8038)
!8040 = !DILocation(line: 415, column: 6, scope: !7971)
!8041 = !DILocation(line: 416, column: 3, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8043, file: !7633, line: 416, column: 3)
!8043 = distinct !DILexicalBlock(scope: !8044, file: !7633, line: 416, column: 3)
!8044 = distinct !DILexicalBlock(scope: !8045, file: !7633, line: 416, column: 3)
!8045 = distinct !DILexicalBlock(scope: !8046, file: !7633, line: 416, column: 3)
!8046 = distinct !DILexicalBlock(scope: !8038, file: !7633, line: 415, column: 44)
!8047 = !DILocation(line: 417, column: 2, scope: !8046)
!8048 = !DILocation(line: 418, column: 12, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !7971, file: !7633, line: 418, column: 6)
!8050 = !DILocation(line: 418, column: 17, scope: !8049)
!8051 = !DILocation(line: 418, column: 41, scope: !8049)
!8052 = !DILocation(line: 418, column: 6, scope: !7971)
!8053 = !DILocation(line: 423, column: 18, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8049, file: !7633, line: 423, column: 13)
!8055 = !DILocation(line: 423, column: 23, scope: !8054)
!8056 = !DILocation(line: 423, column: 13, scope: !8049)
!8057 = !DILocation(line: 0, scope: !8049)
!8058 = !DILocation(line: 524, column: 12, scope: !7971)
!8059 = !DILocation(line: 526, column: 15, scope: !7971)
!8060 = !DILocation(line: 528, column: 2, scope: !7971)
!8061 = distinct !DISubprogram(name: "usage_fault", scope: !7633, file: !7633, line: 539, type: !8062, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !8066)
!8062 = !DISubroutineType(types: !8063)
!8063 = !{!108, !8064}
!8064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8065, size: 32)
!8065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2926)
!8066 = !{!8067, !8068}
!8067 = !DILocalVariable(name: "esf", arg: 1, scope: !8061, file: !7633, line: 539, type: !8064)
!8068 = !DILocalVariable(name: "reason", scope: !8061, file: !7633, line: 541, type: !108)
!8069 = !DILocation(line: 0, scope: !8061)
!8070 = !DILocation(line: 543, column: 2, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8072, file: !7633, line: 543, column: 2)
!8072 = distinct !DILexicalBlock(scope: !8073, file: !7633, line: 543, column: 2)
!8073 = distinct !DILexicalBlock(scope: !8074, file: !7633, line: 543, column: 2)
!8074 = distinct !DILexicalBlock(scope: !8061, file: !7633, line: 543, column: 2)
!8075 = !DILocation(line: 546, column: 12, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8061, file: !7633, line: 546, column: 6)
!8077 = !DILocation(line: 546, column: 17, scope: !8076)
!8078 = !DILocation(line: 546, column: 43, scope: !8076)
!8079 = !DILocation(line: 546, column: 6, scope: !8061)
!8080 = !DILocation(line: 547, column: 3, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8082, file: !7633, line: 547, column: 3)
!8082 = distinct !DILexicalBlock(scope: !8083, file: !7633, line: 547, column: 3)
!8083 = distinct !DILexicalBlock(scope: !8084, file: !7633, line: 547, column: 3)
!8084 = distinct !DILexicalBlock(scope: !8085, file: !7633, line: 547, column: 3)
!8085 = distinct !DILexicalBlock(scope: !8076, file: !7633, line: 546, column: 49)
!8086 = !DILocation(line: 548, column: 2, scope: !8085)
!8087 = !DILocation(line: 549, column: 12, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8061, file: !7633, line: 549, column: 6)
!8089 = !DILocation(line: 549, column: 17, scope: !8088)
!8090 = !DILocation(line: 549, column: 43, scope: !8088)
!8091 = !DILocation(line: 549, column: 6, scope: !8061)
!8092 = !DILocation(line: 550, column: 3, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8094, file: !7633, line: 550, column: 3)
!8094 = distinct !DILexicalBlock(scope: !8095, file: !7633, line: 550, column: 3)
!8095 = distinct !DILexicalBlock(scope: !8096, file: !7633, line: 550, column: 3)
!8096 = distinct !DILexicalBlock(scope: !8097, file: !7633, line: 550, column: 3)
!8097 = distinct !DILexicalBlock(scope: !8088, file: !7633, line: 549, column: 49)
!8098 = !DILocation(line: 551, column: 2, scope: !8097)
!8099 = !DILocation(line: 567, column: 12, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8061, file: !7633, line: 567, column: 6)
!8101 = !DILocation(line: 567, column: 17, scope: !8100)
!8102 = !DILocation(line: 567, column: 38, scope: !8100)
!8103 = !DILocation(line: 567, column: 6, scope: !8061)
!8104 = !DILocation(line: 568, column: 3, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8106, file: !7633, line: 568, column: 3)
!8106 = distinct !DILexicalBlock(scope: !8107, file: !7633, line: 568, column: 3)
!8107 = distinct !DILexicalBlock(scope: !8108, file: !7633, line: 568, column: 3)
!8108 = distinct !DILexicalBlock(scope: !8109, file: !7633, line: 568, column: 3)
!8109 = distinct !DILexicalBlock(scope: !8100, file: !7633, line: 567, column: 44)
!8110 = !DILocation(line: 569, column: 2, scope: !8109)
!8111 = !DILocation(line: 570, column: 12, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8061, file: !7633, line: 570, column: 6)
!8113 = !DILocation(line: 570, column: 17, scope: !8112)
!8114 = !DILocation(line: 570, column: 39, scope: !8112)
!8115 = !DILocation(line: 570, column: 6, scope: !8061)
!8116 = !DILocation(line: 571, column: 3, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8118, file: !7633, line: 571, column: 3)
!8118 = distinct !DILexicalBlock(scope: !8119, file: !7633, line: 571, column: 3)
!8119 = distinct !DILexicalBlock(scope: !8120, file: !7633, line: 571, column: 3)
!8120 = distinct !DILexicalBlock(scope: !8121, file: !7633, line: 571, column: 3)
!8121 = distinct !DILexicalBlock(scope: !8112, file: !7633, line: 570, column: 45)
!8122 = !DILocation(line: 572, column: 2, scope: !8121)
!8123 = !DILocation(line: 573, column: 12, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8061, file: !7633, line: 573, column: 6)
!8125 = !DILocation(line: 573, column: 17, scope: !8124)
!8126 = !DILocation(line: 573, column: 42, scope: !8124)
!8127 = !DILocation(line: 573, column: 6, scope: !8061)
!8128 = !DILocation(line: 574, column: 3, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8130, file: !7633, line: 574, column: 3)
!8130 = distinct !DILexicalBlock(scope: !8131, file: !7633, line: 574, column: 3)
!8131 = distinct !DILexicalBlock(scope: !8132, file: !7633, line: 574, column: 3)
!8132 = distinct !DILexicalBlock(scope: !8133, file: !7633, line: 574, column: 3)
!8133 = distinct !DILexicalBlock(scope: !8124, file: !7633, line: 573, column: 48)
!8134 = !DILocation(line: 575, column: 2, scope: !8133)
!8135 = !DILocation(line: 576, column: 12, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8061, file: !7633, line: 576, column: 6)
!8137 = !DILocation(line: 576, column: 17, scope: !8136)
!8138 = !DILocation(line: 576, column: 44, scope: !8136)
!8139 = !DILocation(line: 576, column: 6, scope: !8061)
!8140 = !DILocation(line: 577, column: 3, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8142, file: !7633, line: 577, column: 3)
!8142 = distinct !DILexicalBlock(scope: !8143, file: !7633, line: 577, column: 3)
!8143 = distinct !DILexicalBlock(scope: !8144, file: !7633, line: 577, column: 3)
!8144 = distinct !DILexicalBlock(scope: !8145, file: !7633, line: 577, column: 3)
!8145 = distinct !DILexicalBlock(scope: !8136, file: !7633, line: 576, column: 50)
!8146 = !DILocation(line: 578, column: 2, scope: !8145)
!8147 = !DILocation(line: 581, column: 12, scope: !8061)
!8148 = !DILocation(line: 583, column: 2, scope: !8061)
!8149 = distinct !DISubprogram(name: "debug_monitor", scope: !7633, file: !7633, line: 632, type: !8150, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !8152)
!8150 = !DISubroutineType(types: !8151)
!8151 = !{null, !2925, !7700}
!8152 = !{!8153, !8154}
!8153 = !DILocalVariable(name: "esf", arg: 1, scope: !8149, file: !7633, line: 632, type: !2925)
!8154 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8149, file: !7633, line: 632, type: !7700)
!8155 = !DILocation(line: 0, scope: !8149)
!8156 = !DILocation(line: 634, column: 15, scope: !8149)
!8157 = !DILocation(line: 636, column: 2, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8159, file: !7633, line: 636, column: 2)
!8159 = distinct !DILexicalBlock(scope: !8160, file: !7633, line: 636, column: 2)
!8160 = distinct !DILexicalBlock(scope: !8161, file: !7633, line: 636, column: 2)
!8161 = distinct !DILexicalBlock(scope: !8149, file: !7633, line: 636, column: 2)
!8162 = !DILocation(line: 652, column: 1, scope: !8149)
!8163 = distinct !DISubprogram(name: "reserved_exception", scope: !7633, file: !7633, line: 776, type: !8164, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !8166)
!8164 = !DISubroutineType(types: !8165)
!8165 = !{null, !8064, !103}
!8166 = !{!8167, !8168}
!8167 = !DILocalVariable(name: "esf", arg: 1, scope: !8163, file: !7633, line: 776, type: !8064)
!8168 = !DILocalVariable(name: "fault", arg: 2, scope: !8163, file: !7633, line: 776, type: !103)
!8169 = !DILocation(line: 0, scope: !8163)
!8170 = !DILocation(line: 780, column: 2, scope: !8171)
!8171 = distinct !DILexicalBlock(scope: !8172, file: !7633, line: 780, column: 2)
!8172 = distinct !DILexicalBlock(scope: !8173, file: !7633, line: 780, column: 2)
!8173 = distinct !DILexicalBlock(scope: !8174, file: !7633, line: 780, column: 2)
!8174 = distinct !DILexicalBlock(scope: !8163, file: !7633, line: 780, column: 2)
!8175 = !DILocation(line: 783, column: 1, scope: !8163)
!8176 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7633, file: !7633, line: 658, type: !8177, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !8179)
!8177 = !DISubroutineType(types: !8178)
!8178 = !{!131, !2925}
!8179 = !{!8180, !8181, !8182}
!8180 = !DILocalVariable(name: "esf", arg: 1, scope: !8176, file: !7633, line: 658, type: !2925)
!8181 = !DILocalVariable(name: "ret_addr", scope: !8176, file: !7633, line: 660, type: !2699)
!8182 = !DILocalVariable(name: "fault_insn", scope: !8176, file: !7633, line: 686, type: !121)
!8183 = !DILocation(line: 0, scope: !8176)
!8184 = !DILocation(line: 660, column: 46, scope: !8176)
!8185 = !DILocation(line: 660, column: 23, scope: !8176)
!8186 = !DILocation(line: 682, column: 11, scope: !8176)
!8187 = !DILocation(line: 271, column: 3, scope: !8188, inlinedAt: !8189)
!8188 = distinct !DISubprogram(name: "__DSB", scope: !7334, file: !7334, line: 269, type: !334, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !251)
!8189 = distinct !DILocation(line: 683, column: 2, scope: !8176)
!8190 = !{i64 2922791}
!8191 = !DILocation(line: 260, column: 3, scope: !8192, inlinedAt: !8193)
!8192 = distinct !DISubprogram(name: "__ISB", scope: !7334, file: !7334, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !251)
!8193 = distinct !DILocation(line: 684, column: 2, scope: !8176)
!8194 = !{i64 2922508}
!8195 = !DILocation(line: 686, column: 35, scope: !8176)
!8196 = !DILocation(line: 686, column: 24, scope: !8176)
!8197 = !DILocation(line: 688, column: 11, scope: !8176)
!8198 = !DILocation(line: 271, column: 3, scope: !8188, inlinedAt: !8199)
!8199 = distinct !DILocation(line: 689, column: 2, scope: !8176)
!8200 = !DILocation(line: 260, column: 3, scope: !8192, inlinedAt: !8201)
!8201 = distinct !DILocation(line: 690, column: 2, scope: !8176)
!8202 = !DILocation(line: 693, column: 45, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8176, file: !7633, line: 693, column: 6)
!8204 = !DILocation(line: 699, column: 1, scope: !8176)
!8205 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7633, file: !7633, line: 1107, type: !334, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !251)
!8206 = !DILocation(line: 1111, column: 11, scope: !8205)
!8207 = !DILocation(line: 1136, column: 1, scope: !8205)
!8208 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8209, file: !8209, line: 26, type: !334, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2968, retainedNodes: !8210)
!8209 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8210 = !{!8211}
!8211 = !DILocalVariable(name: "irq", scope: !8208, file: !8209, line: 28, type: !103)
!8212 = !DILocation(line: 0, scope: !8208)
!8213 = !DILocation(line: 30, column: 2, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8208, file: !8209, line: 30, column: 2)
!8215 = !DILocation(line: 31, column: 3, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8217, file: !8209, line: 30, column: 39)
!8217 = distinct !DILexicalBlock(scope: !8214, file: !8209, line: 30, column: 2)
!8218 = !DILocation(line: 30, column: 35, scope: !8217)
!8219 = !DILocation(line: 30, column: 13, scope: !8217)
!8220 = distinct !{!8220, !8213, !8221}
!8221 = !DILocation(line: 32, column: 2, scope: !8214)
!8222 = !DILocation(line: 33, column: 1, scope: !8208)
!8223 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !624, file: !624, line: 1814, type: !7368, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2968, retainedNodes: !8224)
!8224 = !{!8225, !8226}
!8225 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8223, file: !624, line: 1814, type: !870)
!8226 = !DILocalVariable(name: "priority", arg: 2, scope: !8223, file: !624, line: 1814, type: !108)
!8227 = !DILocation(line: 0, scope: !8223)
!8228 = !DILocation(line: 1816, column: 7, scope: !8223)
!8229 = !DILocation(line: 0, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8223, file: !624, line: 1816, column: 7)
!8231 = !DILocation(line: 1824, column: 1, scope: !8223)
!8232 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8233, file: !8233, line: 27, type: !8234, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !8337)
!8233 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8234 = !DISubroutineType(types: !8235)
!8235 = !{null, !8236}
!8236 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !8237)
!8237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8238, size: 32)
!8238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !8239)
!8239 = !{!8240, !8298, !8310, !8311, !8312, !8313, !8319, !8332}
!8240 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8238, file: !163, line: 247, baseType: !8241, size: 384)
!8241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !8242)
!8242 = !{!8243, !8267, !8274, !8275, !8276, !8285, !8286, !8287}
!8243 = !DIDerivedType(tag: DW_TAG_member, scope: !8241, file: !163, line: 60, baseType: !8244, size: 64)
!8244 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8241, file: !163, line: 60, size: 64, elements: !8245)
!8245 = !{!8246, !8261}
!8246 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8244, file: !163, line: 61, baseType: !8247, size: 64)
!8247 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !8248)
!8248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !8249)
!8249 = !{!8250, !8256}
!8250 = !DIDerivedType(tag: DW_TAG_member, scope: !8248, file: !146, line: 38, baseType: !8251, size: 32)
!8251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8248, file: !146, line: 38, size: 32, elements: !8252)
!8252 = !{!8253, !8255}
!8253 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8251, file: !146, line: 39, baseType: !8254, size: 32)
!8254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8248, size: 32)
!8255 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8251, file: !146, line: 40, baseType: !8254, size: 32)
!8256 = !DIDerivedType(tag: DW_TAG_member, scope: !8248, file: !146, line: 42, baseType: !8257, size: 32, offset: 32)
!8257 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8248, file: !146, line: 42, size: 32, elements: !8258)
!8258 = !{!8259, !8260}
!8259 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8257, file: !146, line: 43, baseType: !8254, size: 32)
!8260 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8257, file: !146, line: 44, baseType: !8254, size: 32)
!8261 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8244, file: !163, line: 62, baseType: !8262, size: 64)
!8262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !8263)
!8263 = !{!8264}
!8264 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8262, file: !175, line: 50, baseType: !8265, size: 64)
!8265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8266, size: 64, elements: !180)
!8266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8262, size: 32)
!8267 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8241, file: !163, line: 68, baseType: !8268, size: 32, offset: 64)
!8268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8269, size: 32)
!8269 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !8270)
!8270 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !8271)
!8271 = !{!8272}
!8272 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8270, file: !141, line: 232, baseType: !8273, size: 64)
!8273 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !8248)
!8274 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8241, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!8275 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8241, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!8276 = !DIDerivedType(tag: DW_TAG_member, scope: !8241, file: !163, line: 90, baseType: !8277, size: 16, offset: 112)
!8277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8241, file: !163, line: 90, size: 16, elements: !8278)
!8278 = !{!8279, !8284}
!8279 = !DIDerivedType(tag: DW_TAG_member, scope: !8277, file: !163, line: 91, baseType: !8280, size: 16)
!8280 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8277, file: !163, line: 91, size: 16, elements: !8281)
!8281 = !{!8282, !8283}
!8282 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8280, file: !163, line: 96, baseType: !195, size: 8)
!8283 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8280, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!8284 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8277, file: !163, line: 100, baseType: !121, size: 16)
!8285 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8241, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!8286 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8241, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!8287 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8241, file: !163, line: 131, baseType: !8288, size: 192, offset: 192)
!8288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !8289)
!8289 = !{!8290, !8291, !8297}
!8290 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8288, file: !141, line: 245, baseType: !8247, size: 64)
!8291 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8288, file: !141, line: 246, baseType: !8292, size: 32, offset: 64)
!8292 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !8293)
!8293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8294, size: 32)
!8294 = !DISubroutineType(types: !8295)
!8295 = !{null, !8296}
!8296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8288, size: 32)
!8297 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8288, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!8298 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8238, file: !163, line: 250, baseType: !8299, size: 288, offset: 384)
!8299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !8300)
!8300 = !{!8301, !8302, !8303, !8304, !8305, !8306, !8307, !8308, !8309}
!8301 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8299, file: !214, line: 26, baseType: !108, size: 32)
!8302 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8299, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!8303 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8299, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!8304 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8299, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!8305 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8299, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!8306 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8299, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!8307 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8299, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!8308 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8299, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!8309 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8299, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!8310 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8238, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!8311 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8238, file: !163, line: 256, baseType: !8269, size: 64, offset: 704)
!8312 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8238, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!8313 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8238, file: !163, line: 300, baseType: !8314, size: 96, offset: 800)
!8314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !8315)
!8315 = !{!8316, !8317, !8318}
!8316 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8314, file: !163, line: 153, baseType: !22, size: 32)
!8317 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8314, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!8318 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8314, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!8319 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8238, file: !163, line: 325, baseType: !8320, size: 32, offset: 896)
!8320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8321, size: 32)
!8321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !8322)
!8322 = !{!8323, !8329, !8330}
!8323 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8321, file: !137, line: 5074, baseType: !8324, size: 96)
!8324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !8325)
!8325 = !{!8326, !8327, !8328}
!8326 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8324, file: !240, line: 57, baseType: !243, size: 32)
!8327 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8324, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!8328 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8324, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!8329 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8321, file: !137, line: 5075, baseType: !8269, size: 64, offset: 96)
!8330 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8321, file: !137, line: 5076, baseType: !8331, offset: 160)
!8331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!8332 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8238, file: !163, line: 343, baseType: !8333, size: 64, offset: 928)
!8333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !8334)
!8334 = !{!8335, !8336}
!8335 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8333, file: !214, line: 63, baseType: !108, size: 32)
!8336 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8333, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!8337 = !{!8338}
!8338 = !DILocalVariable(name: "thread", arg: 1, scope: !8232, file: !8233, line: 27, type: !8236)
!8339 = !DILocation(line: 0, scope: !8232)
!8340 = !DILocation(line: 29, column: 6, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8232, file: !8233, line: 29, column: 6)
!8342 = !DILocation(line: 29, column: 15, scope: !8341)
!8343 = !DILocation(line: 29, column: 6, scope: !8232)
!8344 = !DILocation(line: 1031, column: 3, scope: !8345, inlinedAt: !8348)
!8345 = distinct !DISubprogram(name: "__get_IPSR", scope: !7334, file: !7334, line: 1027, type: !3620, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !8346)
!8346 = !{!8347}
!8347 = !DILocalVariable(name: "result", scope: !8345, file: !7334, line: 1029, type: !108)
!8348 = distinct !DILocation(line: 48, column: 10, scope: !8349, inlinedAt: !8353)
!8349 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8350, file: !8350, line: 46, type: !8351, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !251)
!8350 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8351 = !DISubroutineType(types: !8352)
!8352 = !{!131}
!8353 = distinct !DILocation(line: 30, column: 7, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8355, file: !8233, line: 30, column: 7)
!8355 = distinct !DILexicalBlock(scope: !8341, file: !8233, line: 29, column: 26)
!8356 = !{i64 2911639}
!8357 = !DILocation(line: 0, scope: !8345, inlinedAt: !8348)
!8358 = !DILocation(line: 48, column: 9, scope: !8349, inlinedAt: !8353)
!8359 = !DILocation(line: 30, column: 7, scope: !8355)
!8360 = !DILocation(line: 42, column: 14, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8354, file: !8233, line: 30, column: 25)
!8362 = !DILocation(line: 48, column: 15, scope: !8361)
!8363 = !DILocation(line: 49, column: 3, scope: !8361)
!8364 = !DILocation(line: 52, column: 2, scope: !8232)
!8365 = !DILocation(line: 53, column: 1, scope: !8232)
!8366 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !486, file: !486, line: 127, type: !334, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !479, retainedNodes: !251)
!8367 = !DILocation(line: 134, column: 2, scope: !8366)
!8368 = !DILocation(line: 156, column: 1, scope: !8366)
!8369 = !DILocation(line: 0, scope: !485)
!8370 = !DILocation(line: 289, column: 36, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !485, file: !486, line: 285, column: 2)
!8372 = !DILocation(line: 289, column: 42, scope: !8371)
!8373 = !DILocation(line: 300, column: 36, scope: !485)
!8374 = !DILocation(line: 301, column: 35, scope: !485)
!8375 = !DILocation(line: 302, column: 37, scope: !485)
!8376 = !DILocation(line: 311, column: 2, scope: !485)
!8377 = !DILocation(line: 316, column: 1, scope: !485)
!8378 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !652, file: !652, line: 180, type: !334, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !251)
!8379 = !DILocation(line: 188, column: 12, scope: !8378)
!8380 = !DILocation(line: 271, column: 3, scope: !8381, inlinedAt: !8382)
!8381 = distinct !DISubprogram(name: "__DSB", scope: !7334, file: !7334, line: 269, type: !334, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !251)
!8382 = distinct !DILocation(line: 192, column: 2, scope: !8378)
!8383 = !{i64 3084678}
!8384 = !DILocation(line: 260, column: 3, scope: !8385, inlinedAt: !8386)
!8385 = distinct !DISubprogram(name: "__ISB", scope: !7334, file: !7334, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !251)
!8386 = distinct !DILocation(line: 193, column: 2, scope: !8378)
!8387 = !{i64 3084395}
!8388 = !DILocation(line: 194, column: 1, scope: !8378)
!8389 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !652, file: !652, line: 199, type: !334, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !251)
!8390 = !DILocation(line: 282, column: 3, scope: !8391, inlinedAt: !8392)
!8391 = distinct !DISubprogram(name: "__DMB", scope: !7334, file: !7334, line: 280, type: !334, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !251)
!8392 = distinct !DILocation(line: 202, column: 2, scope: !8389)
!8393 = !{i64 3084954}
!8394 = !DILocation(line: 205, column: 12, scope: !8389)
!8395 = !DILocation(line: 206, column: 1, scope: !8389)
!8396 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !652, file: !652, line: 275, type: !8397, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8410)
!8397 = !DISubroutineType(types: !8398)
!8398 = !{null, !8399, !1932, !7600, !7600}
!8399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8400, size: 32)
!8400 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8401)
!8401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !596, line: 52, size: 96, elements: !8402)
!8402 = !{!8403, !8404, !8405}
!8403 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8401, file: !596, line: 53, baseType: !22, size: 32)
!8404 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8401, file: !596, line: 54, baseType: !132, size: 32, offset: 32)
!8405 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8401, file: !596, line: 55, baseType: !8406, size: 32, offset: 64)
!8406 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !602, line: 151, baseType: !8407)
!8407 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !602, line: 149, size: 32, elements: !8408)
!8408 = !{!8409}
!8409 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8407, file: !602, line: 150, baseType: !108, size: 32)
!8410 = !{!8411, !8412, !8413, !8414}
!8411 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8396, file: !652, line: 276, type: !8399)
!8412 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8396, file: !652, line: 276, type: !1932)
!8413 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8396, file: !652, line: 277, type: !7600)
!8414 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8396, file: !652, line: 277, type: !7600)
!8415 = !DILocation(line: 0, scope: !8396)
!8416 = !DILocation(line: 279, column: 6, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8396, file: !652, line: 279, column: 6)
!8418 = !DILocation(line: 285, column: 1, scope: !8396)
!8419 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8420, file: !8420, line: 220, type: !8421, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8423)
!8420 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8421 = !DISubroutineType(types: !8422)
!8422 = !{!103, !8399, !1932, !7600, !7600}
!8423 = !{!8424, !8425, !8426, !8427, !8428}
!8424 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8419, file: !8420, line: 221, type: !8399)
!8425 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8419, file: !8420, line: 221, type: !1932)
!8426 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8419, file: !8420, line: 222, type: !7600)
!8427 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8419, file: !8420, line: 223, type: !7600)
!8428 = !DILocalVariable(name: "mpu_reg_index", scope: !8419, file: !8420, line: 225, type: !103)
!8429 = !DILocation(line: 0, scope: !8419)
!8430 = !DILocation(line: 225, column: 22, scope: !8419)
!8431 = !DILocation(line: 233, column: 18, scope: !8419)
!8432 = !DILocation(line: 236, column: 23, scope: !8419)
!8433 = !DILocation(line: 236, column: 21, scope: !8419)
!8434 = !DILocation(line: 238, column: 2, scope: !8419)
!8435 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !652, file: !652, line: 105, type: !8436, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8438)
!8436 = !DISubroutineType(types: !8437)
!8437 = !{!103, !8399, !185, !185, !131}
!8438 = !{!8439, !8440, !8441, !8442, !8443, !8444}
!8439 = !DILocalVariable(name: "regions", arg: 1, scope: !8435, file: !652, line: 106, type: !8399)
!8440 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8435, file: !652, line: 106, type: !185)
!8441 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !8435, file: !652, line: 106, type: !185)
!8442 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !8435, file: !652, line: 107, type: !131)
!8443 = !DILocalVariable(name: "i", scope: !8435, file: !652, line: 109, type: !103)
!8444 = !DILocalVariable(name: "reg_index", scope: !8435, file: !652, line: 110, type: !103)
!8445 = !DILocation(line: 0, scope: !8435)
!8446 = !DILocation(line: 110, column: 18, scope: !8435)
!8447 = !DILocation(line: 112, column: 16, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8449, file: !652, line: 112, column: 2)
!8449 = distinct !DILexicalBlock(scope: !8435, file: !652, line: 112, column: 2)
!8450 = !DILocation(line: 112, column: 2, scope: !8449)
!8451 = !DILocation(line: 113, column: 7, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8453, file: !652, line: 113, column: 7)
!8453 = distinct !DILexicalBlock(scope: !8448, file: !652, line: 112, column: 36)
!8454 = !DILocation(line: 113, column: 18, scope: !8452)
!8455 = !DILocation(line: 113, column: 23, scope: !8452)
!8456 = !DILocation(line: 113, column: 7, scope: !8453)
!8457 = !DILocation(line: 118, column: 23, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8453, file: !652, line: 118, column: 7)
!8459 = !DILocation(line: 119, column: 7, scope: !8458)
!8460 = !DILocation(line: 118, column: 7, scope: !8453)
!8461 = !DILocation(line: 120, column: 4, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8463, file: !652, line: 120, column: 4)
!8463 = distinct !DILexicalBlock(scope: !8464, file: !652, line: 120, column: 4)
!8464 = distinct !DILexicalBlock(scope: !8465, file: !652, line: 120, column: 4)
!8465 = distinct !DILexicalBlock(scope: !8466, file: !652, line: 120, column: 4)
!8466 = distinct !DILexicalBlock(scope: !8458, file: !652, line: 119, column: 45)
!8467 = !DILocation(line: 121, column: 4, scope: !8466)
!8468 = !DILocation(line: 124, column: 36, scope: !8453)
!8469 = !DILocation(line: 124, column: 15, scope: !8453)
!8470 = !DILocation(line: 126, column: 17, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8453, file: !652, line: 126, column: 7)
!8472 = !DILocation(line: 126, column: 7, scope: !8453)
!8473 = !DILocation(line: 131, column: 12, scope: !8453)
!8474 = !DILocation(line: 132, column: 2, scope: !8453)
!8475 = !DILocation(line: 112, column: 32, scope: !8448)
!8476 = distinct !{!8476, !8450, !8477}
!8477 = !DILocation(line: 132, column: 2, scope: !8449)
!8478 = !DILocation(line: 135, column: 1, scope: !8435)
!8479 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8420, file: !8420, line: 63, type: !8480, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8482)
!8480 = !DISubroutineType(types: !8481)
!8481 = !{!103, !8399}
!8482 = !{!8483, !8484}
!8483 = !DILocalVariable(name: "part", arg: 1, scope: !8479, file: !8420, line: 63, type: !8399)
!8484 = !DILocalVariable(name: "partition_is_valid", scope: !8479, file: !8420, line: 70, type: !103)
!8485 = !DILocation(line: 0, scope: !8479)
!8486 = !DILocation(line: 71, column: 11, scope: !8479)
!8487 = !DILocation(line: 71, column: 37, scope: !8479)
!8488 = !DILocation(line: 72, column: 3, scope: !8479)
!8489 = !DILocation(line: 71, column: 30, scope: !8479)
!8490 = !DILocation(line: 75, column: 11, scope: !8479)
!8491 = !DILocation(line: 75, column: 17, scope: !8479)
!8492 = !DILocation(line: 75, column: 38, scope: !8479)
!8493 = !DILocation(line: 77, column: 2, scope: !8479)
!8494 = distinct !DISubprogram(name: "mpu_configure_region", scope: !652, file: !652, line: 79, type: !8495, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8497)
!8495 = !DISubroutineType(types: !8496)
!8496 = !{!103, !1932, !8399}
!8497 = !{!8498, !8499, !8500}
!8498 = !DILocalVariable(name: "index", arg: 1, scope: !8494, file: !652, line: 79, type: !1932)
!8499 = !DILocalVariable(name: "new_region", arg: 2, scope: !8494, file: !652, line: 80, type: !8399)
!8500 = !DILocalVariable(name: "region_conf", scope: !8494, file: !652, line: 82, type: !641)
!8501 = !DILocation(line: 0, scope: !8494)
!8502 = !DILocation(line: 82, column: 2, scope: !8494)
!8503 = !DILocation(line: 82, column: 24, scope: !8494)
!8504 = !DILocation(line: 87, column: 33, scope: !8494)
!8505 = !DILocation(line: 87, column: 14, scope: !8494)
!8506 = !DILocation(line: 87, column: 19, scope: !8494)
!8507 = !DILocation(line: 91, column: 55, scope: !8494)
!8508 = !DILocation(line: 92, column: 16, scope: !8494)
!8509 = !DILocation(line: 92, column: 53, scope: !8494)
!8510 = !DILocation(line: 91, column: 2, scope: !8494)
!8511 = !DILocation(line: 95, column: 9, scope: !8494)
!8512 = !DILocation(line: 97, column: 1, scope: !8494)
!8513 = !DILocation(line: 95, column: 2, scope: !8494)
!8514 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8420, file: !8420, line: 113, type: !8515, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8520)
!8515 = !DISubroutineType(types: !8516)
!8516 = !{null, !8517, !8518, !108, !108}
!8517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 32)
!8518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8519, size: 32)
!8519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8406)
!8520 = !{!8521, !8522, !8523, !8524}
!8521 = !DILocalVariable(name: "p_attr", arg: 1, scope: !8514, file: !8420, line: 114, type: !8517)
!8522 = !DILocalVariable(name: "attr", arg: 2, scope: !8514, file: !8420, line: 115, type: !8518)
!8523 = !DILocalVariable(name: "base", arg: 3, scope: !8514, file: !8420, line: 115, type: !108)
!8524 = !DILocalVariable(name: "size", arg: 4, scope: !8514, file: !8420, line: 115, type: !108)
!8525 = !DILocation(line: 0, scope: !8514)
!8526 = !DILocation(line: 127, column: 23, scope: !8514)
!8527 = !DILocation(line: 127, column: 35, scope: !8514)
!8528 = !DILocation(line: 127, column: 33, scope: !8514)
!8529 = !DILocation(line: 127, column: 10, scope: !8514)
!8530 = !DILocation(line: 127, column: 15, scope: !8514)
!8531 = !DILocation(line: 129, column: 1, scope: !8514)
!8532 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !652, file: !652, line: 57, type: !8533, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8535)
!8533 = !DISubroutineType(types: !8534)
!8534 = !{!103, !1932, !639}
!8535 = !{!8536, !8537}
!8536 = !DILocalVariable(name: "index", arg: 1, scope: !8532, file: !652, line: 57, type: !1932)
!8537 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8532, file: !652, line: 58, type: !639)
!8538 = !DILocation(line: 0, scope: !8532)
!8539 = !DILocation(line: 61, column: 6, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8532, file: !652, line: 61, column: 6)
!8541 = !DILocation(line: 61, column: 12, scope: !8540)
!8542 = !DILocation(line: 61, column: 6, scope: !8532)
!8543 = !DILocation(line: 64, column: 3, scope: !8544)
!8544 = distinct !DILexicalBlock(scope: !8545, file: !652, line: 64, column: 3)
!8545 = distinct !DILexicalBlock(scope: !8546, file: !652, line: 64, column: 3)
!8546 = distinct !DILexicalBlock(scope: !8547, file: !652, line: 64, column: 3)
!8547 = distinct !DILexicalBlock(scope: !8548, file: !652, line: 64, column: 3)
!8548 = distinct !DILexicalBlock(scope: !8540, file: !652, line: 61, column: 40)
!8549 = !DILocation(line: 65, column: 3, scope: !8548)
!8550 = !DILocation(line: 71, column: 2, scope: !8532)
!8551 = !DILocation(line: 73, column: 2, scope: !8532)
!8552 = !DILocation(line: 74, column: 1, scope: !8532)
!8553 = distinct !DISubprogram(name: "region_init", scope: !8420, file: !8420, line: 29, type: !8554, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8556)
!8554 = !DISubroutineType(types: !8555)
!8555 = !{null, !7600, !639}
!8556 = !{!8557, !8558}
!8557 = !DILocalVariable(name: "index", arg: 1, scope: !8553, file: !8420, line: 29, type: !7600)
!8558 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8553, file: !8420, line: 30, type: !639)
!8559 = !DILocation(line: 0, scope: !8553)
!8560 = !DILocation(line: 33, column: 2, scope: !8553)
!8561 = !DILocation(line: 47, column: 28, scope: !8553)
!8562 = !DILocation(line: 47, column: 33, scope: !8553)
!8563 = !DILocation(line: 48, column: 26, scope: !8553)
!8564 = !DILocation(line: 47, column: 12, scope: !8553)
!8565 = !DILocation(line: 49, column: 32, scope: !8553)
!8566 = !DILocation(line: 49, column: 37, scope: !8553)
!8567 = !DILocation(line: 49, column: 12, scope: !8553)
!8568 = !DILocation(line: 53, column: 1, scope: !8553)
!8569 = distinct !DISubprogram(name: "set_region_number", scope: !8570, file: !8570, line: 32, type: !7423, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8571)
!8570 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8571 = !{!8572}
!8572 = !DILocalVariable(name: "index", arg: 1, scope: !8569, file: !8570, line: 32, type: !108)
!8573 = !DILocation(line: 0, scope: !8569)
!8574 = !DILocation(line: 34, column: 11, scope: !8569)
!8575 = !DILocation(line: 35, column: 1, scope: !8569)
!8576 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8420, file: !8420, line: 88, type: !8577, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8579)
!8577 = !DISubroutineType(types: !8578)
!8578 = !{!108, !108}
!8579 = !{!8580}
!8580 = !DILocalVariable(name: "size", arg: 1, scope: !8576, file: !8420, line: 88, type: !108)
!8581 = !DILocation(line: 0, scope: !8576)
!8582 = !DILocation(line: 91, column: 11, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8576, file: !8420, line: 91, column: 6)
!8584 = !DILocation(line: 91, column: 6, scope: !8576)
!8585 = !DILocation(line: 100, column: 11, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8576, file: !8420, line: 100, column: 6)
!8587 = !DILocation(line: 100, column: 6, scope: !8576)
!8588 = !DILocation(line: 104, column: 35, scope: !8576)
!8589 = !DILocation(line: 104, column: 16, scope: !8576)
!8590 = !DILocation(line: 104, column: 50, scope: !8576)
!8591 = !DILocation(line: 104, column: 72, scope: !8576)
!8592 = !DILocation(line: 104, column: 2, scope: !8576)
!8593 = !DILocation(line: 106, column: 1, scope: !8576)
!8594 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !652, file: !652, line: 307, type: !8595, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8597)
!8595 = !DISubroutineType(types: !8596)
!8596 = !{null, !8399, !185}
!8597 = !{!8598, !8599}
!8598 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8594, file: !652, line: 308, type: !8399)
!8599 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8594, file: !652, line: 308, type: !185)
!8600 = !DILocation(line: 0, scope: !8594)
!8601 = !DILocation(line: 310, column: 6, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8594, file: !652, line: 310, column: 6)
!8603 = !DILocation(line: 316, column: 1, scope: !8594)
!8604 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8420, file: !8420, line: 249, type: !8605, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8607)
!8605 = !DISubroutineType(types: !8606)
!8606 = !{!103, !8399, !185}
!8607 = !{!8608, !8609, !8610, !8611}
!8608 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8604, file: !8420, line: 250, type: !8399)
!8609 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8604, file: !8420, line: 250, type: !185)
!8610 = !DILocalVariable(name: "mpu_reg_index", scope: !8604, file: !8420, line: 252, type: !103)
!8611 = !DILocalVariable(name: "i", scope: !8612, file: !8420, line: 264, type: !103)
!8612 = distinct !DILexicalBlock(scope: !8613, file: !8420, line: 264, column: 3)
!8613 = distinct !DILexicalBlock(scope: !8614, file: !8420, line: 261, column: 32)
!8614 = distinct !DILexicalBlock(scope: !8604, file: !8420, line: 261, column: 6)
!8615 = !DILocation(line: 0, scope: !8604)
!8616 = !DILocation(line: 252, column: 22, scope: !8604)
!8617 = !DILocation(line: 258, column: 18, scope: !8604)
!8618 = !DILocation(line: 261, column: 20, scope: !8614)
!8619 = !DILocation(line: 261, column: 6, scope: !8604)
!8620 = !DILocation(line: 0, scope: !8612)
!8621 = !DILocation(line: 265, column: 4, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8623, file: !8420, line: 264, column: 59)
!8623 = distinct !DILexicalBlock(scope: !8612, file: !8420, line: 264, column: 3)
!8624 = !DILocation(line: 264, column: 55, scope: !8623)
!8625 = !DILocation(line: 264, column: 33, scope: !8623)
!8626 = !DILocation(line: 264, column: 3, scope: !8612)
!8627 = distinct !{!8627, !8626, !8628}
!8628 = !DILocation(line: 266, column: 3, scope: !8612)
!8629 = !DILocation(line: 269, column: 2, scope: !8604)
!8630 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !8631, file: !8631, line: 218, type: !7423, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8632)
!8631 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8632 = !{!8633}
!8633 = !DILocalVariable(name: "rnr", arg: 1, scope: !8630, file: !8631, line: 218, type: !108)
!8634 = !DILocation(line: 0, scope: !8630)
!8635 = !DILocation(line: 220, column: 12, scope: !8630)
!8636 = !DILocation(line: 221, column: 13, scope: !8630)
!8637 = !DILocation(line: 222, column: 1, scope: !8630)
!8638 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !652, file: !652, line: 326, type: !8639, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8641)
!8639 = !DISubroutineType(types: !8640)
!8640 = !{!103}
!8641 = !{!8642}
!8642 = !DILocalVariable(name: "r_index", scope: !8638, file: !652, line: 328, type: !108)
!8643 = !DILocation(line: 330, column: 17, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8638, file: !652, line: 330, column: 6)
!8645 = !DILocation(line: 330, column: 29, scope: !8644)
!8646 = !DILocation(line: 330, column: 6, scope: !8638)
!8647 = !DILocation(line: 347, column: 2, scope: !8638)
!8648 = !DILocation(line: 0, scope: !8638)
!8649 = !DILocation(line: 364, column: 29, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8651, file: !652, line: 364, column: 2)
!8651 = distinct !DILexicalBlock(scope: !8638, file: !652, line: 364, column: 2)
!8652 = !DILocation(line: 364, column: 2, scope: !8651)
!8653 = !DILocation(line: 365, column: 25, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8650, file: !652, line: 364, column: 66)
!8655 = !DILocation(line: 365, column: 3, scope: !8654)
!8656 = !DILocation(line: 364, column: 62, scope: !8650)
!8657 = distinct !{!8657, !8652, !8658}
!8658 = !DILocation(line: 366, column: 2, scope: !8651)
!8659 = !DILocation(line: 369, column: 23, scope: !8638)
!8660 = !DILocation(line: 369, column: 21, scope: !8638)
!8661 = !DILocation(line: 372, column: 2, scope: !8638)
!8662 = !DILocation(line: 443, column: 2, scope: !8638)
!8663 = !DILocation(line: 444, column: 1, scope: !8638)
!8664 = distinct !DISubprogram(name: "strcpy", scope: !8665, file: !8665, line: 20, type: !8666, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !8670)
!8665 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8666 = !DISubroutineType(types: !8667)
!8667 = !{!277, !8668, !8669}
!8668 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !277)
!8669 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !337)
!8670 = !{!8671, !8672, !8673}
!8671 = !DILocalVariable(name: "d", arg: 1, scope: !8664, file: !8665, line: 20, type: !8668)
!8672 = !DILocalVariable(name: "s", arg: 2, scope: !8664, file: !8665, line: 20, type: !8669)
!8673 = !DILocalVariable(name: "dest", scope: !8664, file: !8665, line: 22, type: !277)
!8674 = !DILocation(line: 0, scope: !8664)
!8675 = !DILocation(line: 24, column: 9, scope: !8664)
!8676 = !DILocation(line: 24, column: 12, scope: !8664)
!8677 = !DILocation(line: 24, column: 2, scope: !8664)
!8678 = !DILocation(line: 25, column: 6, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8664, file: !8665, line: 24, column: 21)
!8680 = !DILocation(line: 26, column: 4, scope: !8679)
!8681 = !DILocation(line: 27, column: 4, scope: !8679)
!8682 = distinct !{!8682, !8677, !8683}
!8683 = !DILocation(line: 28, column: 2, scope: !8664)
!8684 = !DILocation(line: 30, column: 5, scope: !8664)
!8685 = !DILocation(line: 32, column: 2, scope: !8664)
!8686 = distinct !DISubprogram(name: "strncpy", scope: !8665, file: !8665, line: 42, type: !8687, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !8689)
!8687 = !DISubroutineType(types: !8688)
!8688 = !{!277, !8668, !8669, !132}
!8689 = !{!8690, !8691, !8692, !8693}
!8690 = !DILocalVariable(name: "d", arg: 1, scope: !8686, file: !8665, line: 42, type: !8668)
!8691 = !DILocalVariable(name: "s", arg: 2, scope: !8686, file: !8665, line: 42, type: !8669)
!8692 = !DILocalVariable(name: "n", arg: 3, scope: !8686, file: !8665, line: 42, type: !132)
!8693 = !DILocalVariable(name: "dest", scope: !8686, file: !8665, line: 44, type: !277)
!8694 = !DILocation(line: 0, scope: !8686)
!8695 = !DILocation(line: 46, column: 12, scope: !8686)
!8696 = !DILocation(line: 46, column: 17, scope: !8686)
!8697 = !DILocation(line: 46, column: 20, scope: !8686)
!8698 = !DILocation(line: 46, column: 23, scope: !8686)
!8699 = !DILocation(line: 46, column: 2, scope: !8686)
!8700 = !DILocation(line: 47, column: 6, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8686, file: !8665, line: 46, column: 32)
!8702 = !DILocation(line: 48, column: 4, scope: !8701)
!8703 = !DILocation(line: 49, column: 4, scope: !8701)
!8704 = !DILocation(line: 50, column: 4, scope: !8701)
!8705 = distinct !{!8705, !8699, !8706}
!8706 = !DILocation(line: 51, column: 2, scope: !8686)
!8707 = !DILocation(line: 54, column: 6, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8686, file: !8665, line: 53, column: 16)
!8709 = !DILocation(line: 55, column: 4, scope: !8708)
!8710 = !DILocation(line: 56, column: 4, scope: !8708)
!8711 = !DILocation(line: 53, column: 11, scope: !8686)
!8712 = !DILocation(line: 53, column: 2, scope: !8686)
!8713 = distinct !{!8713, !8712, !8714}
!8714 = !DILocation(line: 57, column: 2, scope: !8686)
!8715 = !DILocation(line: 59, column: 2, scope: !8686)
!8716 = distinct !DISubprogram(name: "strchr", scope: !8665, file: !8665, line: 69, type: !8717, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !8719)
!8717 = !DISubroutineType(types: !8718)
!8718 = !{!277, !337, !103}
!8719 = !{!8720, !8721, !8722}
!8720 = !DILocalVariable(name: "s", arg: 1, scope: !8716, file: !8665, line: 69, type: !337)
!8721 = !DILocalVariable(name: "c", arg: 2, scope: !8716, file: !8665, line: 69, type: !103)
!8722 = !DILocalVariable(name: "tmp", scope: !8716, file: !8665, line: 71, type: !278)
!8723 = !DILocation(line: 0, scope: !8716)
!8724 = !DILocation(line: 73, column: 2, scope: !8716)
!8725 = !DILocation(line: 73, column: 10, scope: !8716)
!8726 = !DILocation(line: 73, column: 13, scope: !8716)
!8727 = !DILocation(line: 73, column: 21, scope: !8716)
!8728 = !DILocation(line: 74, column: 4, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !8716, file: !8665, line: 73, column: 38)
!8730 = distinct !{!8730, !8724, !8731}
!8731 = !DILocation(line: 75, column: 2, scope: !8716)
!8732 = !DILocation(line: 77, column: 9, scope: !8716)
!8733 = !DILocation(line: 77, column: 2, scope: !8716)
!8734 = distinct !DISubprogram(name: "strrchr", scope: !8665, file: !8665, line: 87, type: !8717, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !8735)
!8735 = !{!8736, !8737, !8738}
!8736 = !DILocalVariable(name: "s", arg: 1, scope: !8734, file: !8665, line: 87, type: !337)
!8737 = !DILocalVariable(name: "c", arg: 2, scope: !8734, file: !8665, line: 87, type: !103)
!8738 = !DILocalVariable(name: "match", scope: !8734, file: !8665, line: 89, type: !277)
!8739 = !DILocation(line: 0, scope: !8734)
!8740 = !DILocation(line: 91, column: 2, scope: !8734)
!8741 = !DILocation(line: 92, column: 7, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8743, file: !8665, line: 92, column: 7)
!8743 = distinct !DILexicalBlock(scope: !8734, file: !8665, line: 91, column: 5)
!8744 = !DILocation(line: 92, column: 10, scope: !8742)
!8745 = !DILocation(line: 92, column: 7, scope: !8743)
!8746 = !DILocation(line: 95, column: 13, scope: !8734)
!8747 = !DILocation(line: 95, column: 2, scope: !8743)
!8748 = distinct !{!8748, !8740, !8749}
!8749 = !DILocation(line: 95, column: 15, scope: !8734)
!8750 = !DILocation(line: 97, column: 2, scope: !8734)
!8751 = distinct !DISubprogram(name: "strlen", scope: !8665, file: !8665, line: 107, type: !8752, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !8754)
!8752 = !DISubroutineType(types: !8753)
!8753 = !{!132, !337}
!8754 = !{!8755, !8756}
!8755 = !DILocalVariable(name: "s", arg: 1, scope: !8751, file: !8665, line: 107, type: !337)
!8756 = !DILocalVariable(name: "n", scope: !8751, file: !8665, line: 109, type: !132)
!8757 = !DILocation(line: 0, scope: !8751)
!8758 = !DILocation(line: 111, column: 9, scope: !8751)
!8759 = !DILocation(line: 111, column: 12, scope: !8751)
!8760 = !DILocation(line: 111, column: 2, scope: !8751)
!8761 = !DILocation(line: 112, column: 4, scope: !8762)
!8762 = distinct !DILexicalBlock(scope: !8751, file: !8665, line: 111, column: 21)
!8763 = !DILocation(line: 113, column: 4, scope: !8762)
!8764 = distinct !{!8764, !8760, !8765}
!8765 = !DILocation(line: 114, column: 2, scope: !8751)
!8766 = !DILocation(line: 116, column: 2, scope: !8751)
!8767 = distinct !DISubprogram(name: "strnlen", scope: !8665, file: !8665, line: 126, type: !8768, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !8770)
!8768 = !DISubroutineType(types: !8769)
!8769 = !{!132, !337, !132}
!8770 = !{!8771, !8772, !8773}
!8771 = !DILocalVariable(name: "s", arg: 1, scope: !8767, file: !8665, line: 126, type: !337)
!8772 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8767, file: !8665, line: 126, type: !132)
!8773 = !DILocalVariable(name: "n", scope: !8767, file: !8665, line: 128, type: !132)
!8774 = !DILocation(line: 0, scope: !8767)
!8775 = !DILocation(line: 130, column: 9, scope: !8767)
!8776 = !DILocation(line: 130, column: 12, scope: !8767)
!8777 = !DILocation(line: 130, column: 20, scope: !8767)
!8778 = !DILocation(line: 130, column: 2, scope: !8767)
!8779 = !DILocation(line: 131, column: 4, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8767, file: !8665, line: 130, column: 35)
!8781 = !DILocation(line: 132, column: 4, scope: !8780)
!8782 = distinct !{!8782, !8778, !8783}
!8783 = !DILocation(line: 133, column: 2, scope: !8767)
!8784 = !DILocation(line: 135, column: 2, scope: !8767)
!8785 = distinct !DISubprogram(name: "strcmp", scope: !8665, file: !8665, line: 145, type: !8786, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !8788)
!8786 = !DISubroutineType(types: !8787)
!8787 = !{!103, !337, !337}
!8788 = !{!8789, !8790}
!8789 = !DILocalVariable(name: "s1", arg: 1, scope: !8785, file: !8665, line: 145, type: !337)
!8790 = !DILocalVariable(name: "s2", arg: 2, scope: !8785, file: !8665, line: 145, type: !337)
!8791 = !DILocation(line: 0, scope: !8785)
!8792 = !DILocation(line: 147, column: 10, scope: !8785)
!8793 = !DILocation(line: 147, column: 17, scope: !8785)
!8794 = !DILocation(line: 147, column: 14, scope: !8785)
!8795 = !DILocation(line: 147, column: 22, scope: !8785)
!8796 = !DILocation(line: 148, column: 5, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !8785, file: !8665, line: 147, column: 40)
!8798 = !DILocation(line: 149, column: 5, scope: !8797)
!8799 = distinct !{!8799, !8800, !8801}
!8800 = !DILocation(line: 147, column: 2, scope: !8785)
!8801 = !DILocation(line: 150, column: 2, scope: !8785)
!8802 = !DILocation(line: 152, column: 9, scope: !8785)
!8803 = !DILocation(line: 152, column: 15, scope: !8785)
!8804 = !DILocation(line: 152, column: 13, scope: !8785)
!8805 = !DILocation(line: 152, column: 2, scope: !8785)
!8806 = distinct !DISubprogram(name: "strncmp", scope: !8665, file: !8665, line: 162, type: !8807, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !8809)
!8807 = !DISubroutineType(types: !8808)
!8808 = !{!103, !337, !337, !132}
!8809 = !{!8810, !8811, !8812}
!8810 = !DILocalVariable(name: "s1", arg: 1, scope: !8806, file: !8665, line: 162, type: !337)
!8811 = !DILocalVariable(name: "s2", arg: 2, scope: !8806, file: !8665, line: 162, type: !337)
!8812 = !DILocalVariable(name: "n", arg: 3, scope: !8806, file: !8665, line: 162, type: !132)
!8813 = !DILocation(line: 0, scope: !8806)
!8814 = !DILocation(line: 164, column: 17, scope: !8806)
!8815 = !DILocation(line: 164, column: 21, scope: !8806)
!8816 = !DILocation(line: 164, column: 28, scope: !8806)
!8817 = !DILocation(line: 164, column: 25, scope: !8806)
!8818 = !DILocation(line: 164, column: 33, scope: !8806)
!8819 = !DILocation(line: 165, column: 5, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8806, file: !8665, line: 164, column: 51)
!8821 = !DILocation(line: 166, column: 5, scope: !8820)
!8822 = !DILocation(line: 167, column: 4, scope: !8820)
!8823 = distinct !{!8823, !8824, !8825}
!8824 = !DILocation(line: 164, column: 2, scope: !8806)
!8825 = !DILocation(line: 168, column: 2, scope: !8806)
!8826 = !DILocation(line: 170, column: 25, scope: !8806)
!8827 = !DILocation(line: 170, column: 31, scope: !8806)
!8828 = !DILocation(line: 170, column: 29, scope: !8806)
!8829 = !DILocation(line: 170, column: 9, scope: !8806)
!8830 = !DILocation(line: 170, column: 2, scope: !8806)
!8831 = distinct !DISubprogram(name: "strtok_r", scope: !8665, file: !8665, line: 180, type: !8832, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !8834)
!8832 = !DISubroutineType(types: !8833)
!8833 = !{!277, !277, !337, !378}
!8834 = !{!8835, !8836, !8837, !8838, !8839}
!8835 = !DILocalVariable(name: "str", arg: 1, scope: !8831, file: !8665, line: 180, type: !277)
!8836 = !DILocalVariable(name: "sep", arg: 2, scope: !8831, file: !8665, line: 180, type: !337)
!8837 = !DILocalVariable(name: "state", arg: 3, scope: !8831, file: !8665, line: 180, type: !378)
!8838 = !DILocalVariable(name: "start", scope: !8831, file: !8665, line: 182, type: !277)
!8839 = !DILocalVariable(name: "end", scope: !8831, file: !8665, line: 182, type: !277)
!8840 = !DILocation(line: 0, scope: !8831)
!8841 = !DILocation(line: 184, column: 10, scope: !8831)
!8842 = !DILocation(line: 184, column: 22, scope: !8831)
!8843 = !DILocation(line: 187, column: 9, scope: !8831)
!8844 = !DILocation(line: 187, column: 16, scope: !8831)
!8845 = !DILocation(line: 187, column: 19, scope: !8831)
!8846 = !DILocation(line: 187, column: 2, scope: !8831)
!8847 = !DILocation(line: 188, column: 8, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8831, file: !8665, line: 187, column: 40)
!8849 = distinct !{!8849, !8846, !8850}
!8850 = !DILocation(line: 189, column: 2, scope: !8831)
!8851 = !DILocation(line: 198, column: 9, scope: !8831)
!8852 = !DILocation(line: 198, column: 18, scope: !8831)
!8853 = !DILocation(line: 198, column: 17, scope: !8831)
!8854 = !DILocation(line: 198, column: 2, scope: !8831)
!8855 = !DILocation(line: 199, column: 6, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8831, file: !8665, line: 198, column: 37)
!8857 = !DILocation(line: 198, column: 14, scope: !8831)
!8858 = distinct !{!8858, !8854, !8859}
!8859 = !DILocation(line: 200, column: 2, scope: !8831)
!8860 = !DILocation(line: 203, column: 8, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8862, file: !8665, line: 202, column: 20)
!8862 = distinct !DILexicalBlock(scope: !8831, file: !8665, line: 202, column: 6)
!8863 = !DILocation(line: 204, column: 16, scope: !8861)
!8864 = !DILocation(line: 205, column: 2, scope: !8861)
!8865 = !DILocation(line: 210, column: 1, scope: !8831)
!8866 = distinct !DISubprogram(name: "strcat", scope: !8665, file: !8665, line: 212, type: !8666, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !8867)
!8867 = !{!8868, !8869}
!8868 = !DILocalVariable(name: "dest", arg: 1, scope: !8866, file: !8665, line: 212, type: !8668)
!8869 = !DILocalVariable(name: "src", arg: 2, scope: !8866, file: !8665, line: 212, type: !8669)
!8870 = !DILocation(line: 0, scope: !8866)
!8871 = !DILocation(line: 214, column: 16, scope: !8866)
!8872 = !DILocation(line: 214, column: 14, scope: !8866)
!8873 = !DILocation(line: 214, column: 2, scope: !8866)
!8874 = !DILocation(line: 215, column: 2, scope: !8866)
!8875 = distinct !DISubprogram(name: "strncat", scope: !8665, file: !8665, line: 218, type: !8687, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !8876)
!8876 = !{!8877, !8878, !8879, !8880, !8881}
!8877 = !DILocalVariable(name: "dest", arg: 1, scope: !8875, file: !8665, line: 218, type: !8668)
!8878 = !DILocalVariable(name: "src", arg: 2, scope: !8875, file: !8665, line: 218, type: !8669)
!8879 = !DILocalVariable(name: "n", arg: 3, scope: !8875, file: !8665, line: 219, type: !132)
!8880 = !DILocalVariable(name: "orig_dest", scope: !8875, file: !8665, line: 221, type: !277)
!8881 = !DILocalVariable(name: "len", scope: !8875, file: !8665, line: 222, type: !132)
!8882 = !DILocation(line: 0, scope: !8875)
!8883 = !DILocation(line: 222, column: 15, scope: !8875)
!8884 = !DILocation(line: 224, column: 7, scope: !8875)
!8885 = !DILocation(line: 225, column: 14, scope: !8875)
!8886 = !DILocation(line: 225, column: 19, scope: !8875)
!8887 = !DILocation(line: 225, column: 11, scope: !8875)
!8888 = !DILocation(line: 225, column: 23, scope: !8875)
!8889 = !DILocation(line: 225, column: 28, scope: !8875)
!8890 = !DILocation(line: 225, column: 2, scope: !8875)
!8891 = !DILocation(line: 226, column: 17, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8875, file: !8665, line: 225, column: 38)
!8893 = !DILocation(line: 226, column: 8, scope: !8892)
!8894 = !DILocation(line: 226, column: 11, scope: !8892)
!8895 = distinct !{!8895, !8890, !8896}
!8896 = !DILocation(line: 227, column: 2, scope: !8875)
!8897 = !DILocation(line: 228, column: 8, scope: !8875)
!8898 = !DILocation(line: 230, column: 2, scope: !8875)
!8899 = distinct !DISubprogram(name: "memcmp", scope: !8665, file: !8665, line: 239, type: !8900, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !8902)
!8900 = !DISubroutineType(types: !8901)
!8901 = !{!103, !13, !13, !132}
!8902 = !{!8903, !8904, !8905, !8906, !8907}
!8903 = !DILocalVariable(name: "m1", arg: 1, scope: !8899, file: !8665, line: 239, type: !13)
!8904 = !DILocalVariable(name: "m2", arg: 2, scope: !8899, file: !8665, line: 239, type: !13)
!8905 = !DILocalVariable(name: "n", arg: 3, scope: !8899, file: !8665, line: 239, type: !132)
!8906 = !DILocalVariable(name: "c1", scope: !8899, file: !8665, line: 241, type: !337)
!8907 = !DILocalVariable(name: "c2", scope: !8899, file: !8665, line: 242, type: !337)
!8908 = !DILocation(line: 0, scope: !8899)
!8909 = !DILocation(line: 244, column: 7, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8899, file: !8665, line: 244, column: 6)
!8911 = !DILocation(line: 244, column: 6, scope: !8899)
!8912 = !DILocation(line: 248, column: 10, scope: !8899)
!8913 = !DILocation(line: 248, column: 14, scope: !8899)
!8914 = !DILocation(line: 248, column: 19, scope: !8899)
!8915 = !DILocation(line: 248, column: 2, scope: !8899)
!8916 = !DILocation(line: 248, column: 23, scope: !8899)
!8917 = !DILocation(line: 248, column: 30, scope: !8899)
!8918 = !DILocation(line: 248, column: 27, scope: !8899)
!8919 = !DILocation(line: 249, column: 5, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8899, file: !8665, line: 248, column: 36)
!8921 = !DILocation(line: 250, column: 5, scope: !8920)
!8922 = distinct !{!8922, !8915, !8923}
!8923 = !DILocation(line: 251, column: 2, scope: !8899)
!8924 = !DILocation(line: 253, column: 9, scope: !8899)
!8925 = !DILocation(line: 253, column: 15, scope: !8899)
!8926 = !DILocation(line: 253, column: 13, scope: !8899)
!8927 = !DILocation(line: 253, column: 2, scope: !8899)
!8928 = !DILocation(line: 254, column: 1, scope: !8899)
!8929 = distinct !DISubprogram(name: "memmove", scope: !8665, file: !8665, line: 263, type: !8930, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !8932)
!8930 = !DISubroutineType(types: !8931)
!8931 = !{!102, !102, !13, !132}
!8932 = !{!8933, !8934, !8935, !8936, !8937}
!8933 = !DILocalVariable(name: "d", arg: 1, scope: !8929, file: !8665, line: 263, type: !102)
!8934 = !DILocalVariable(name: "s", arg: 2, scope: !8929, file: !8665, line: 263, type: !13)
!8935 = !DILocalVariable(name: "n", arg: 3, scope: !8929, file: !8665, line: 263, type: !132)
!8936 = !DILocalVariable(name: "dest", scope: !8929, file: !8665, line: 265, type: !277)
!8937 = !DILocalVariable(name: "src", scope: !8929, file: !8665, line: 266, type: !337)
!8938 = !DILocation(line: 0, scope: !8929)
!8939 = !DILocation(line: 268, column: 21, scope: !8940)
!8940 = distinct !DILexicalBlock(scope: !8929, file: !8665, line: 268, column: 6)
!8941 = !DILocation(line: 268, column: 28, scope: !8940)
!8942 = !DILocation(line: 268, column: 6, scope: !8929)
!8943 = !DILocation(line: 280, column: 12, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !8940, file: !8665, line: 278, column: 9)
!8945 = !DILocation(line: 280, column: 3, scope: !8944)
!8946 = !DILocation(line: 275, column: 5, scope: !8947)
!8947 = distinct !DILexicalBlock(scope: !8948, file: !8665, line: 274, column: 17)
!8948 = distinct !DILexicalBlock(scope: !8940, file: !8665, line: 268, column: 33)
!8949 = !DILocation(line: 276, column: 14, scope: !8947)
!8950 = !DILocation(line: 276, column: 4, scope: !8947)
!8951 = !DILocation(line: 276, column: 12, scope: !8947)
!8952 = !DILocation(line: 274, column: 12, scope: !8948)
!8953 = !DILocation(line: 274, column: 3, scope: !8948)
!8954 = distinct !{!8954, !8953, !8955}
!8955 = !DILocation(line: 277, column: 3, scope: !8948)
!8956 = !DILocation(line: 281, column: 12, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8944, file: !8665, line: 280, column: 17)
!8958 = !DILocation(line: 281, column: 10, scope: !8957)
!8959 = !DILocation(line: 282, column: 8, scope: !8957)
!8960 = !DILocation(line: 283, column: 7, scope: !8957)
!8961 = !DILocation(line: 284, column: 5, scope: !8957)
!8962 = distinct !{!8962, !8945, !8963}
!8963 = !DILocation(line: 285, column: 3, scope: !8944)
!8964 = !DILocation(line: 288, column: 2, scope: !8929)
!8965 = distinct !DISubprogram(name: "memcpy", scope: !8665, file: !8665, line: 298, type: !8966, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !8970)
!8966 = !DISubroutineType(types: !8967)
!8967 = !{!102, !8968, !8969, !132}
!8968 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!8969 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8970 = !{!8971, !8972, !8973, !8974, !8975}
!8971 = !DILocalVariable(name: "d", arg: 1, scope: !8965, file: !8665, line: 298, type: !8968)
!8972 = !DILocalVariable(name: "s", arg: 2, scope: !8965, file: !8665, line: 298, type: !8969)
!8973 = !DILocalVariable(name: "n", arg: 3, scope: !8965, file: !8665, line: 298, type: !132)
!8974 = !DILocalVariable(name: "d_byte", scope: !8965, file: !8665, line: 302, type: !1074)
!8975 = !DILocalVariable(name: "s_byte", scope: !8965, file: !8665, line: 303, type: !3044)
!8976 = !DILocation(line: 0, scope: !8965)
!8977 = !DILocation(line: 337, column: 11, scope: !8965)
!8978 = !DILocation(line: 337, column: 2, scope: !8965)
!8979 = !DILocation(line: 338, column: 25, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8965, file: !8665, line: 337, column: 16)
!8981 = !DILocation(line: 338, column: 17, scope: !8980)
!8982 = !DILocation(line: 338, column: 11, scope: !8980)
!8983 = !DILocation(line: 338, column: 15, scope: !8980)
!8984 = !DILocation(line: 339, column: 4, scope: !8980)
!8985 = distinct !{!8985, !8978, !8986}
!8986 = !DILocation(line: 340, column: 2, scope: !8965)
!8987 = !DILocation(line: 342, column: 2, scope: !8965)
!8988 = distinct !DISubprogram(name: "memset", scope: !8665, file: !8665, line: 352, type: !8989, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !8991)
!8989 = !DISubroutineType(types: !8990)
!8990 = !{!102, !102, !103, !132}
!8991 = !{!8992, !8993, !8994, !8995, !8996}
!8992 = !DILocalVariable(name: "buf", arg: 1, scope: !8988, file: !8665, line: 352, type: !102)
!8993 = !DILocalVariable(name: "c", arg: 2, scope: !8988, file: !8665, line: 352, type: !103)
!8994 = !DILocalVariable(name: "n", arg: 3, scope: !8988, file: !8665, line: 352, type: !132)
!8995 = !DILocalVariable(name: "d_byte", scope: !8988, file: !8665, line: 356, type: !1074)
!8996 = !DILocalVariable(name: "c_byte", scope: !8988, file: !8665, line: 357, type: !186)
!8997 = !DILocation(line: 0, scope: !8988)
!8998 = !DILocation(line: 357, column: 25, scope: !8988)
!8999 = !DILocation(line: 389, column: 11, scope: !8988)
!9000 = !DILocation(line: 389, column: 2, scope: !8988)
!9001 = !DILocation(line: 390, column: 11, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8988, file: !8665, line: 389, column: 16)
!9003 = !DILocation(line: 390, column: 15, scope: !9002)
!9004 = !DILocation(line: 391, column: 4, scope: !9002)
!9005 = distinct !{!9005, !9000, !9006}
!9006 = !DILocation(line: 392, column: 2, scope: !8988)
!9007 = !DILocation(line: 394, column: 2, scope: !8988)
!9008 = distinct !DISubprogram(name: "memchr", scope: !8665, file: !8665, line: 404, type: !9009, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !9011)
!9009 = !DISubroutineType(types: !9010)
!9010 = !{!102, !13, !103, !132}
!9011 = !{!9012, !9013, !9014, !9015}
!9012 = !DILocalVariable(name: "s", arg: 1, scope: !9008, file: !8665, line: 404, type: !13)
!9013 = !DILocalVariable(name: "c", arg: 2, scope: !9008, file: !8665, line: 404, type: !103)
!9014 = !DILocalVariable(name: "n", arg: 3, scope: !9008, file: !8665, line: 404, type: !132)
!9015 = !DILocalVariable(name: "p", scope: !9016, file: !8665, line: 407, type: !3044)
!9016 = distinct !DILexicalBlock(scope: !9017, file: !8665, line: 406, column: 14)
!9017 = distinct !DILexicalBlock(scope: !9008, file: !8665, line: 406, column: 6)
!9018 = !DILocation(line: 0, scope: !9008)
!9019 = !DILocation(line: 406, column: 8, scope: !9017)
!9020 = !DILocation(line: 406, column: 6, scope: !9008)
!9021 = !DILocation(line: 409, column: 3, scope: !9016)
!9022 = !DILocation(line: 0, scope: !9016)
!9023 = !DILocation(line: 410, column: 8, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9025, file: !8665, line: 410, column: 8)
!9025 = distinct !DILexicalBlock(scope: !9016, file: !8665, line: 409, column: 6)
!9026 = !DILocation(line: 410, column: 13, scope: !9024)
!9027 = !DILocation(line: 410, column: 8, scope: !9025)
!9028 = distinct !{!9028, !9021, !9029}
!9029 = !DILocation(line: 414, column: 20, scope: !9016)
!9030 = !DILocation(line: 417, column: 2, scope: !9008)
!9031 = !DILocation(line: 418, column: 1, scope: !9008)
!9032 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !662, file: !662, line: 23, type: !4534, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9033)
!9033 = !{!9034}
!9034 = !DILocalVariable(name: "hook", arg: 1, scope: !9032, file: !662, line: 23, type: !395)
!9035 = !DILocation(line: 0, scope: !9032)
!9036 = !DILocation(line: 25, column: 15, scope: !9032)
!9037 = !DILocation(line: 26, column: 1, scope: !9032)
!9038 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !662, file: !662, line: 14, type: !396, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9039)
!9039 = !{!9040}
!9040 = !DILocalVariable(name: "c", arg: 1, scope: !9038, file: !662, line: 14, type: !103)
!9041 = !DILocation(line: 0, scope: !9038)
!9042 = !DILocation(line: 18, column: 2, scope: !9038)
!9043 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !662, file: !662, line: 28, type: !9044, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9046)
!9044 = !DISubroutineType(types: !9045)
!9045 = !{!103, !103, !658}
!9046 = !{!9047, !9048}
!9047 = !DILocalVariable(name: "c", arg: 1, scope: !9043, file: !662, line: 28, type: !103)
!9048 = !DILocalVariable(name: "stream", arg: 2, scope: !9043, file: !662, line: 28, type: !658)
!9049 = !DILocation(line: 0, scope: !9043)
!9050 = !DILocation(line: 30, column: 27, scope: !9043)
!9051 = !DILocation(line: 30, column: 50, scope: !9043)
!9052 = !DILocation(line: 30, column: 9, scope: !9043)
!9053 = !DILocation(line: 30, column: 2, scope: !9043)
!9054 = distinct !DISubprogram(name: "fputc", scope: !662, file: !662, line: 41, type: !9044, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9055)
!9055 = !{!9056, !9057}
!9056 = !DILocalVariable(name: "c", arg: 1, scope: !9054, file: !662, line: 41, type: !103)
!9057 = !DILocalVariable(name: "stream", arg: 2, scope: !9054, file: !662, line: 41, type: !658)
!9058 = !DILocation(line: 0, scope: !9054)
!9059 = !DILocation(line: 43, column: 9, scope: !9054)
!9060 = !DILocation(line: 43, column: 2, scope: !9054)
!9061 = distinct !DISubprogram(name: "zephyr_fputc", scope: !9062, file: !9062, line: 72, type: !9044, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9063)
!9062 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!9063 = !{!9064, !9065}
!9064 = !DILocalVariable(name: "c", arg: 1, scope: !9061, file: !9062, line: 72, type: !103)
!9065 = !DILocalVariable(name: "stream", arg: 2, scope: !9061, file: !9062, line: 72, type: !658)
!9066 = !DILocation(line: 0, scope: !9061)
!9067 = !DILocation(line: 81, column: 2, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9061, file: !9062, line: 81, column: 2)
!9069 = !{i64 2154213783}
!9070 = !DILocation(line: 82, column: 9, scope: !9061)
!9071 = !DILocation(line: 82, column: 2, scope: !9061)
!9072 = distinct !DISubprogram(name: "fputs", scope: !662, file: !662, line: 46, type: !9073, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9076)
!9073 = !DISubroutineType(types: !9074)
!9074 = !{!103, !8669, !9075}
!9075 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !658)
!9076 = !{!9077, !9078, !9079, !9080}
!9077 = !DILocalVariable(name: "s", arg: 1, scope: !9072, file: !662, line: 46, type: !8669)
!9078 = !DILocalVariable(name: "stream", arg: 2, scope: !9072, file: !662, line: 46, type: !9075)
!9079 = !DILocalVariable(name: "len", scope: !9072, file: !662, line: 48, type: !103)
!9080 = !DILocalVariable(name: "ret", scope: !9072, file: !662, line: 49, type: !103)
!9081 = !DILocation(line: 0, scope: !9072)
!9082 = !DILocation(line: 48, column: 12, scope: !9072)
!9083 = !DILocation(line: 51, column: 8, scope: !9072)
!9084 = !DILocation(line: 53, column: 13, scope: !9072)
!9085 = !DILocation(line: 53, column: 9, scope: !9072)
!9086 = !DILocation(line: 53, column: 2, scope: !9072)
!9087 = distinct !DISubprogram(name: "fwrite", scope: !662, file: !662, line: 99, type: !9088, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9090)
!9088 = !DISubroutineType(types: !9089)
!9089 = !{!132, !8969, !132, !132, !9075}
!9090 = !{!9091, !9092, !9093, !9094}
!9091 = !DILocalVariable(name: "ptr", arg: 1, scope: !9087, file: !662, line: 99, type: !8969)
!9092 = !DILocalVariable(name: "size", arg: 2, scope: !9087, file: !662, line: 99, type: !132)
!9093 = !DILocalVariable(name: "nitems", arg: 3, scope: !9087, file: !662, line: 99, type: !132)
!9094 = !DILocalVariable(name: "stream", arg: 4, scope: !9087, file: !662, line: 100, type: !9075)
!9095 = !DILocation(line: 0, scope: !9087)
!9096 = !DILocation(line: 102, column: 9, scope: !9087)
!9097 = !DILocation(line: 102, column: 2, scope: !9087)
!9098 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !9062, file: !9062, line: 96, type: !9088, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9099)
!9099 = !{!9100, !9101, !9102, !9103}
!9100 = !DILocalVariable(name: "ptr", arg: 1, scope: !9098, file: !9062, line: 96, type: !8969)
!9101 = !DILocalVariable(name: "size", arg: 2, scope: !9098, file: !9062, line: 96, type: !132)
!9102 = !DILocalVariable(name: "nitems", arg: 3, scope: !9098, file: !9062, line: 96, type: !132)
!9103 = !DILocalVariable(name: "stream", arg: 4, scope: !9098, file: !9062, line: 96, type: !9075)
!9104 = !DILocation(line: 0, scope: !9098)
!9105 = !DILocation(line: 107, column: 2, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9098, file: !9062, line: 107, column: 2)
!9107 = !{i64 2154213887}
!9108 = !DILocation(line: 108, column: 9, scope: !9098)
!9109 = !DILocation(line: 108, column: 2, scope: !9098)
!9110 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !662, file: !662, line: 56, type: !9088, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9111)
!9111 = !{!9112, !9113, !9114, !9115, !9116, !9117, !9118, !9119}
!9112 = !DILocalVariable(name: "ptr", arg: 1, scope: !9110, file: !662, line: 56, type: !8969)
!9113 = !DILocalVariable(name: "size", arg: 2, scope: !9110, file: !662, line: 56, type: !132)
!9114 = !DILocalVariable(name: "nitems", arg: 3, scope: !9110, file: !662, line: 57, type: !132)
!9115 = !DILocalVariable(name: "stream", arg: 4, scope: !9110, file: !662, line: 57, type: !9075)
!9116 = !DILocalVariable(name: "i", scope: !9110, file: !662, line: 59, type: !132)
!9117 = !DILocalVariable(name: "j", scope: !9110, file: !662, line: 60, type: !132)
!9118 = !DILocalVariable(name: "p", scope: !9110, file: !662, line: 61, type: !3044)
!9119 = !DILabel(scope: !9110, name: "done", file: !662, line: 82)
!9120 = !DILocation(line: 0, scope: !9110)
!9121 = !DILocation(line: 63, column: 14, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9110, file: !662, line: 63, column: 6)
!9123 = !DILocation(line: 63, column: 24, scope: !9122)
!9124 = !DILocation(line: 72, column: 3, scope: !9125)
!9125 = distinct !DILexicalBlock(scope: !9110, file: !662, line: 70, column: 5)
!9126 = !DILocation(line: 0, scope: !9125)
!9127 = !DILocation(line: 73, column: 8, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9129, file: !662, line: 73, column: 8)
!9129 = distinct !DILexicalBlock(scope: !9125, file: !662, line: 72, column: 6)
!9130 = !DILocation(line: 73, column: 29, scope: !9128)
!9131 = !DILocation(line: 73, column: 27, scope: !9128)
!9132 = !DILocation(line: 73, column: 21, scope: !9128)
!9133 = !DILocation(line: 73, column: 33, scope: !9128)
!9134 = !DILocation(line: 73, column: 8, scope: !9129)
!9135 = !DILocation(line: 76, column: 5, scope: !9129)
!9136 = !DILocation(line: 77, column: 14, scope: !9125)
!9137 = !DILocation(line: 77, column: 3, scope: !9129)
!9138 = distinct !{!9138, !9124, !9139}
!9139 = !DILocation(line: 77, column: 17, scope: !9125)
!9140 = !DILocation(line: 79, column: 4, scope: !9125)
!9141 = !DILocation(line: 80, column: 13, scope: !9110)
!9142 = !DILocation(line: 80, column: 2, scope: !9125)
!9143 = distinct !{!9143, !9144, !9145}
!9144 = !DILocation(line: 70, column: 2, scope: !9110)
!9145 = !DILocation(line: 80, column: 16, scope: !9110)
!9146 = !DILocation(line: 82, column: 1, scope: !9110)
!9147 = !DILocation(line: 83, column: 17, scope: !9110)
!9148 = !DILocation(line: 83, column: 2, scope: !9110)
!9149 = !DILocation(line: 84, column: 1, scope: !9110)
!9150 = distinct !DISubprogram(name: "puts", scope: !662, file: !662, line: 106, type: !9151, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9153)
!9151 = !DISubroutineType(types: !9152)
!9152 = !{!103, !337}
!9153 = !{!9154}
!9154 = !DILocalVariable(name: "s", arg: 1, scope: !9150, file: !662, line: 106, type: !337)
!9155 = !DILocation(line: 0, scope: !9150)
!9156 = !DILocation(line: 108, column: 6, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9150, file: !662, line: 108, column: 6)
!9158 = !DILocation(line: 108, column: 23, scope: !9157)
!9159 = !DILocation(line: 108, column: 6, scope: !9150)
!9160 = !DILocation(line: 112, column: 9, scope: !9150)
!9161 = !DILocation(line: 112, column: 29, scope: !9150)
!9162 = !DILocation(line: 112, column: 2, scope: !9150)
!9163 = !DILocation(line: 113, column: 1, scope: !9150)
!9164 = distinct !DISubprogram(name: "_zbus_timeout_remainder", scope: !694, file: !694, line: 12, type: !9165, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9171)
!9165 = !DISubroutineType(types: !9166)
!9166 = !{!9167, !109}
!9167 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !9168)
!9168 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !9169)
!9169 = !{!9170}
!9170 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9168, file: !105, line: 66, baseType: !104, size: 64)
!9171 = !{!9172, !9173}
!9172 = !DILocalVariable(name: "end_ticks", arg: 1, scope: !9164, file: !694, line: 12, type: !109)
!9173 = !DILocalVariable(name: "now_ticks", scope: !9164, file: !694, line: 14, type: !106)
!9174 = !DILocation(line: 0, scope: !9164)
!9175 = !DILocation(line: 14, column: 22, scope: !9164)
!9176 = !DILocation(line: 16, column: 9, scope: !9164)
!9177 = !DILocation(line: 17, column: 1, scope: !9164)
!9178 = distinct !DISubprogram(name: "zbus_chan_pub", scope: !694, file: !694, line: 103, type: !9179, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9325)
!9179 = !DISubroutineType(types: !9180)
!9180 = !{!103, !9181, !13, !9167}
!9181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9182, size: 32)
!9182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9183)
!9183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !117, line: 29, size: 192, elements: !9184)
!9184 = !{!9185, !9186, !9187, !9188, !9189, !9297}
!9185 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !9183, file: !117, line: 35, baseType: !120, size: 16)
!9186 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !9183, file: !117, line: 40, baseType: !124, size: 32, offset: 32)
!9187 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !9183, file: !117, line: 45, baseType: !124, size: 32, offset: 64)
!9188 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !9183, file: !117, line: 51, baseType: !127, size: 32, offset: 96)
!9189 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !9183, file: !117, line: 56, baseType: !9190, size: 32, offset: 128)
!9190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9191, size: 32)
!9191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !137, line: 2720, size: 160, elements: !9192)
!9192 = !{!9193, !9212, !9295, !9296}
!9193 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9191, file: !137, line: 2722, baseType: !9194, size: 64)
!9194 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !9195)
!9195 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !9196)
!9196 = !{!9197}
!9197 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9195, file: !141, line: 232, baseType: !9198, size: 64)
!9198 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !9199)
!9199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !9200)
!9200 = !{!9201, !9207}
!9201 = !DIDerivedType(tag: DW_TAG_member, scope: !9199, file: !146, line: 38, baseType: !9202, size: 32)
!9202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9199, file: !146, line: 38, size: 32, elements: !9203)
!9203 = !{!9204, !9206}
!9204 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9202, file: !146, line: 39, baseType: !9205, size: 32)
!9205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9199, size: 32)
!9206 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9202, file: !146, line: 40, baseType: !9205, size: 32)
!9207 = !DIDerivedType(tag: DW_TAG_member, scope: !9199, file: !146, line: 42, baseType: !9208, size: 32, offset: 32)
!9208 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9199, file: !146, line: 42, size: 32, elements: !9209)
!9209 = !{!9210, !9211}
!9210 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9208, file: !146, line: 43, baseType: !9205, size: 32)
!9211 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9208, file: !146, line: 44, baseType: !9205, size: 32)
!9212 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9191, file: !137, line: 2724, baseType: !9213, size: 32, offset: 64)
!9213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9214, size: 32)
!9214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !9215)
!9215 = !{!9216, !9256, !9268, !9269, !9270, !9271, !9277, !9290}
!9216 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9214, file: !163, line: 247, baseType: !9217, size: 384)
!9217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !9218)
!9218 = !{!9219, !9230, !9232, !9233, !9234, !9243, !9244, !9245}
!9219 = !DIDerivedType(tag: DW_TAG_member, scope: !9217, file: !163, line: 60, baseType: !9220, size: 64)
!9220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9217, file: !163, line: 60, size: 64, elements: !9221)
!9221 = !{!9222, !9224}
!9222 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9220, file: !163, line: 61, baseType: !9223, size: 64)
!9223 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !9199)
!9224 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9220, file: !163, line: 62, baseType: !9225, size: 64)
!9225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !9226)
!9226 = !{!9227}
!9227 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9225, file: !175, line: 50, baseType: !9228, size: 64)
!9228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9229, size: 64, elements: !180)
!9229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9225, size: 32)
!9230 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9217, file: !163, line: 68, baseType: !9231, size: 32, offset: 64)
!9231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9194, size: 32)
!9232 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9217, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!9233 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9217, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!9234 = !DIDerivedType(tag: DW_TAG_member, scope: !9217, file: !163, line: 90, baseType: !9235, size: 16, offset: 112)
!9235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9217, file: !163, line: 90, size: 16, elements: !9236)
!9236 = !{!9237, !9242}
!9237 = !DIDerivedType(tag: DW_TAG_member, scope: !9235, file: !163, line: 91, baseType: !9238, size: 16)
!9238 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9235, file: !163, line: 91, size: 16, elements: !9239)
!9239 = !{!9240, !9241}
!9240 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9238, file: !163, line: 96, baseType: !195, size: 8)
!9241 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9238, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!9242 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9235, file: !163, line: 100, baseType: !121, size: 16)
!9243 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9217, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!9244 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9217, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!9245 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9217, file: !163, line: 131, baseType: !9246, size: 192, offset: 192)
!9246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !9247)
!9247 = !{!9248, !9249, !9255}
!9248 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9246, file: !141, line: 245, baseType: !9223, size: 64)
!9249 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9246, file: !141, line: 246, baseType: !9250, size: 32, offset: 64)
!9250 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !9251)
!9251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9252, size: 32)
!9252 = !DISubroutineType(types: !9253)
!9253 = !{null, !9254}
!9254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9246, size: 32)
!9255 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9246, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!9256 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9214, file: !163, line: 250, baseType: !9257, size: 288, offset: 384)
!9257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !9258)
!9258 = !{!9259, !9260, !9261, !9262, !9263, !9264, !9265, !9266, !9267}
!9259 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9257, file: !214, line: 26, baseType: !108, size: 32)
!9260 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9257, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!9261 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9257, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!9262 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9257, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!9263 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9257, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!9264 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9257, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!9265 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9257, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!9266 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9257, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!9267 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9257, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!9268 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9214, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!9269 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9214, file: !163, line: 256, baseType: !9194, size: 64, offset: 704)
!9270 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9214, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!9271 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9214, file: !163, line: 300, baseType: !9272, size: 96, offset: 800)
!9272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !9273)
!9273 = !{!9274, !9275, !9276}
!9274 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9272, file: !163, line: 153, baseType: !22, size: 32)
!9275 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9272, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!9276 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9272, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!9277 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9214, file: !163, line: 325, baseType: !9278, size: 32, offset: 896)
!9278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9279, size: 32)
!9279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !9280)
!9280 = !{!9281, !9287, !9288}
!9281 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9279, file: !137, line: 5074, baseType: !9282, size: 96)
!9282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !9283)
!9283 = !{!9284, !9285, !9286}
!9284 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9282, file: !240, line: 57, baseType: !243, size: 32)
!9285 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9282, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9282, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9279, file: !137, line: 5075, baseType: !9194, size: 64, offset: 96)
!9288 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9279, file: !137, line: 5076, baseType: !9289, offset: 160)
!9289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!9290 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9214, file: !163, line: 343, baseType: !9291, size: 64, offset: 928)
!9291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !9292)
!9292 = !{!9293, !9294}
!9293 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9291, file: !214, line: 63, baseType: !108, size: 32)
!9294 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9291, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!9295 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !9191, file: !137, line: 2727, baseType: !108, size: 32, offset: 96)
!9296 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !9191, file: !137, line: 2730, baseType: !103, size: 32, offset: 128)
!9297 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !9183, file: !117, line: 67, baseType: !9298, size: 32, offset: 160)
!9298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9299, size: 32)
!9299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9300)
!9300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9301, size: 32)
!9301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9302)
!9302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !117, line: 85, size: 96, elements: !9303)
!9303 = !{!9304, !9305, !9320}
!9304 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !9302, file: !117, line: 91, baseType: !131, size: 8)
!9305 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !9302, file: !117, line: 93, baseType: !9306, size: 32, offset: 32)
!9306 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9307)
!9307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9308, size: 32)
!9308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !137, line: 4204, size: 320, elements: !9309)
!9309 = !{!9310, !9311, !9312, !9313, !9314, !9315, !9316, !9317, !9318, !9319}
!9310 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9308, file: !137, line: 4206, baseType: !9194, size: 64)
!9311 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9308, file: !137, line: 4208, baseType: !9289, offset: 64)
!9312 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !9308, file: !137, line: 4210, baseType: !132, size: 32, offset: 64)
!9313 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !9308, file: !137, line: 4212, baseType: !108, size: 32, offset: 96)
!9314 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !9308, file: !137, line: 4214, baseType: !277, size: 32, offset: 128)
!9315 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !9308, file: !137, line: 4216, baseType: !277, size: 32, offset: 160)
!9316 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !9308, file: !137, line: 4218, baseType: !277, size: 32, offset: 192)
!9317 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !9308, file: !137, line: 4220, baseType: !277, size: 32, offset: 224)
!9318 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !9308, file: !137, line: 4222, baseType: !108, size: 32, offset: 256)
!9319 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9308, file: !137, line: 4227, baseType: !185, size: 8, offset: 288)
!9320 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !9302, file: !117, line: 96, baseType: !9321, size: 32, offset: 64)
!9321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9322)
!9322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9323, size: 32)
!9323 = !DISubroutineType(types: !9324)
!9324 = !{null, !9181}
!9325 = !{!9326, !9327, !9328, !9329, !9330}
!9326 = !DILocalVariable(name: "chan", arg: 1, scope: !9178, file: !694, line: 103, type: !9181)
!9327 = !DILocalVariable(name: "msg", arg: 2, scope: !9178, file: !694, line: 103, type: !13)
!9328 = !DILocalVariable(name: "timeout", arg: 3, scope: !9178, file: !694, line: 103, type: !9167)
!9329 = !DILocalVariable(name: "err", scope: !9178, file: !694, line: 105, type: !103)
!9330 = !DILocalVariable(name: "end_ticks", scope: !9178, file: !694, line: 106, type: !109)
!9331 = !DILocation(line: 0, scope: !9178)
!9332 = !DILocation(line: 106, column: 23, scope: !9178)
!9333 = !DILocation(line: 112, column: 12, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9178, file: !694, line: 112, column: 6)
!9335 = !DILocation(line: 112, column: 22, scope: !9334)
!9336 = !DILocation(line: 112, column: 30, scope: !9334)
!9337 = !DILocation(line: 112, column: 61, scope: !9334)
!9338 = !DILocation(line: 112, column: 55, scope: !9334)
!9339 = !DILocation(line: 112, column: 34, scope: !9334)
!9340 = !DILocation(line: 112, column: 6, scope: !9178)
!9341 = !DILocation(line: 116, column: 27, scope: !9178)
!9342 = !DILocation(line: 116, column: 8, scope: !9178)
!9343 = !DILocation(line: 117, column: 6, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9178, file: !694, line: 117, column: 6)
!9345 = !DILocation(line: 117, column: 6, scope: !9178)
!9346 = !DILocation(line: 121, column: 15, scope: !9178)
!9347 = !DILocation(line: 121, column: 35, scope: !9178)
!9348 = !DILocation(line: 121, column: 29, scope: !9178)
!9349 = !DILocation(line: 121, column: 2, scope: !9178)
!9350 = !DILocation(line: 123, column: 8, scope: !9178)
!9351 = !DILocation(line: 125, column: 23, scope: !9178)
!9352 = !DILocation(line: 125, column: 2, scope: !9178)
!9353 = !DILocation(line: 127, column: 2, scope: !9178)
!9354 = !DILocation(line: 128, column: 1, scope: !9178)
!9355 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3640, file: !3640, line: 927, type: !9356, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9358)
!9356 = !DISubroutineType(types: !9357)
!9357 = !{!103, !9190, !9167}
!9358 = !{!9359, !9360}
!9359 = !DILocalVariable(name: "mutex", arg: 1, scope: !9355, file: !3640, line: 927, type: !9190)
!9360 = !DILocalVariable(name: "timeout", arg: 2, scope: !9355, file: !3640, line: 927, type: !9167)
!9361 = !DILocation(line: 0, scope: !9355)
!9362 = !DILocation(line: 936, column: 2, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !9355, file: !3640, line: 936, column: 2)
!9364 = !{i64 2154155344}
!9365 = !DILocation(line: 937, column: 9, scope: !9355)
!9366 = !DILocation(line: 937, column: 2, scope: !9355)
!9367 = distinct !DISubprogram(name: "_zbus_notify_observers", scope: !694, file: !694, line: 66, type: !9368, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9370)
!9368 = !DISubroutineType(types: !9369)
!9369 = !{!103, !9181, !109}
!9370 = !{!9371, !9372, !9373, !9374, !9375, !9377}
!9371 = !DILocalVariable(name: "chan", arg: 1, scope: !9367, file: !694, line: 66, type: !9181)
!9372 = !DILocalVariable(name: "end_ticks", arg: 2, scope: !9367, file: !694, line: 66, type: !109)
!9373 = !DILocalVariable(name: "last_error", scope: !9367, file: !694, line: 68, type: !103)
!9374 = !DILocalVariable(name: "err", scope: !9367, file: !694, line: 68, type: !103)
!9375 = !DILocalVariable(name: "obs", scope: !9376, file: !694, line: 70, type: !9298)
!9376 = distinct !DILexicalBlock(scope: !9367, file: !694, line: 70, column: 2)
!9377 = !DILocalVariable(name: "obs", scope: !9378, file: !694, line: 81, type: !9298)
!9378 = distinct !DILexicalBlock(scope: !9367, file: !694, line: 81, column: 2)
!9379 = !DILocation(line: 0, scope: !9367)
!9380 = !DILocation(line: 70, column: 54, scope: !9376)
!9381 = !DILocation(line: 0, scope: !9376)
!9382 = !DILocation(line: 70, column: 65, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9376, file: !694, line: 70, column: 2)
!9384 = !DILocation(line: 70, column: 70, scope: !9383)
!9385 = !DILocation(line: 70, column: 2, scope: !9376)
!9386 = !DILocation(line: 81, column: 54, scope: !9378)
!9387 = !DILocation(line: 81, column: 65, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9378, file: !694, line: 81, column: 2)
!9389 = !DILocation(line: 0, scope: !9378)
!9390 = !DILocation(line: 81, column: 70, scope: !9388)
!9391 = !DILocation(line: 81, column: 2, scope: !9378)
!9392 = !DILocation(line: 71, column: 15, scope: !9393)
!9393 = distinct !DILexicalBlock(scope: !9394, file: !694, line: 71, column: 7)
!9394 = distinct !DILexicalBlock(scope: !9383, file: !694, line: 70, column: 86)
!9395 = !DILocation(line: 71, column: 23, scope: !9393)
!9396 = !DILocation(line: 71, column: 35, scope: !9393)
!9397 = !DILocation(line: 71, column: 44, scope: !9393)
!9398 = !DILocation(line: 71, column: 7, scope: !9394)
!9399 = !DILocation(line: 72, column: 4, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9393, file: !694, line: 71, column: 54)
!9401 = !DILocation(line: 73, column: 3, scope: !9400)
!9402 = !DILocation(line: 70, column: 79, scope: !9383)
!9403 = distinct !{!9403, !9385, !9404}
!9404 = !DILocation(line: 74, column: 2, scope: !9376)
!9405 = !DILocation(line: 100, column: 2, scope: !9367)
!9406 = !DILocation(line: 82, column: 15, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9408, file: !694, line: 82, column: 7)
!9408 = distinct !DILexicalBlock(scope: !9388, file: !694, line: 81, column: 86)
!9409 = !DILocation(line: 82, column: 23, scope: !9407)
!9410 = !DILocation(line: 82, column: 35, scope: !9407)
!9411 = !DILocation(line: 82, column: 41, scope: !9407)
!9412 = !DILocation(line: 82, column: 7, scope: !9408)
!9413 = !DILocation(line: 83, column: 43, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9407, file: !694, line: 82, column: 51)
!9415 = !DILocation(line: 83, column: 10, scope: !9414)
!9416 = !DILocation(line: 86, column: 8, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9414, file: !694, line: 86, column: 8)
!9418 = !DILocation(line: 86, column: 8, scope: !9414)
!9419 = !DILocation(line: 87, column: 5, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9421, file: !694, line: 87, column: 5)
!9421 = distinct !DILexicalBlock(scope: !9422, file: !694, line: 87, column: 5)
!9422 = distinct !DILexicalBlock(scope: !9423, file: !694, line: 87, column: 5)
!9423 = distinct !DILexicalBlock(scope: !9424, file: !694, line: 87, column: 5)
!9424 = distinct !DILexicalBlock(scope: !9417, file: !694, line: 86, column: 13)
!9425 = !DILocation(line: 90, column: 4, scope: !9424)
!9426 = !DILocation(line: 81, column: 79, scope: !9388)
!9427 = distinct !{!9427, !9391, !9428}
!9428 = !DILocation(line: 92, column: 2, scope: !9378)
!9429 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3640, file: !3640, line: 944, type: !9430, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9432)
!9430 = !DISubroutineType(types: !9431)
!9431 = !{!103, !9190}
!9432 = !{!9433}
!9433 = !DILocalVariable(name: "mutex", arg: 1, scope: !9429, file: !3640, line: 944, type: !9190)
!9434 = !DILocation(line: 0, scope: !9429)
!9435 = !DILocation(line: 952, column: 2, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9429, file: !3640, line: 952, column: 2)
!9437 = !{i64 2154155412}
!9438 = !DILocation(line: 953, column: 9, scope: !9429)
!9439 = !DILocation(line: 953, column: 2, scope: !9429)
!9440 = distinct !DISubprogram(name: "k_msgq_put", scope: !3640, file: !3640, line: 1129, type: !9441, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9443)
!9441 = !DISubroutineType(types: !9442)
!9442 = !{!103, !9307, !13, !9167}
!9443 = !{!9444, !9445, !9446}
!9444 = !DILocalVariable(name: "msgq", arg: 1, scope: !9440, file: !3640, line: 1129, type: !9307)
!9445 = !DILocalVariable(name: "data", arg: 2, scope: !9440, file: !3640, line: 1129, type: !13)
!9446 = !DILocalVariable(name: "timeout", arg: 3, scope: !9440, file: !3640, line: 1129, type: !9167)
!9447 = !DILocation(line: 0, scope: !9440)
!9448 = !DILocation(line: 1139, column: 2, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9440, file: !3640, line: 1139, column: 2)
!9450 = !{i64 2154156160}
!9451 = !DILocation(line: 1140, column: 9, scope: !9440)
!9452 = !DILocation(line: 1140, column: 2, scope: !9440)
!9453 = distinct !DISubprogram(name: "zbus_chan_read", scope: !694, file: !694, line: 130, type: !9454, scopeLine: 131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9456)
!9454 = !DISubroutineType(types: !9455)
!9455 = !{!103, !9181, !102, !9167}
!9456 = !{!9457, !9458, !9459, !9460}
!9457 = !DILocalVariable(name: "chan", arg: 1, scope: !9453, file: !694, line: 130, type: !9181)
!9458 = !DILocalVariable(name: "msg", arg: 2, scope: !9453, file: !694, line: 130, type: !102)
!9459 = !DILocalVariable(name: "timeout", arg: 3, scope: !9453, file: !694, line: 130, type: !9167)
!9460 = !DILocalVariable(name: "err", scope: !9453, file: !694, line: 132, type: !103)
!9461 = !DILocation(line: 0, scope: !9453)
!9462 = !DILocation(line: 138, column: 27, scope: !9453)
!9463 = !DILocation(line: 138, column: 8, scope: !9453)
!9464 = !DILocation(line: 139, column: 6, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9453, file: !694, line: 139, column: 6)
!9466 = !DILocation(line: 139, column: 6, scope: !9453)
!9467 = !DILocation(line: 143, column: 20, scope: !9453)
!9468 = !DILocation(line: 143, column: 35, scope: !9453)
!9469 = !DILocation(line: 143, column: 29, scope: !9453)
!9470 = !DILocation(line: 143, column: 2, scope: !9453)
!9471 = !DILocation(line: 145, column: 30, scope: !9453)
!9472 = !DILocation(line: 145, column: 9, scope: !9453)
!9473 = !DILocation(line: 145, column: 2, scope: !9453)
!9474 = !DILocation(line: 146, column: 1, scope: !9453)
!9475 = distinct !DISubprogram(name: "zbus_chan_notify", scope: !694, file: !694, line: 148, type: !9476, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9478)
!9476 = !DISubroutineType(types: !9477)
!9477 = !{!103, !9181, !9167}
!9478 = !{!9479, !9480, !9481, !9482}
!9479 = !DILocalVariable(name: "chan", arg: 1, scope: !9475, file: !694, line: 148, type: !9181)
!9480 = !DILocalVariable(name: "timeout", arg: 2, scope: !9475, file: !694, line: 148, type: !9167)
!9481 = !DILocalVariable(name: "err", scope: !9475, file: !694, line: 150, type: !103)
!9482 = !DILocalVariable(name: "end_ticks", scope: !9475, file: !694, line: 151, type: !109)
!9483 = !DILocation(line: 0, scope: !9475)
!9484 = !DILocation(line: 151, column: 23, scope: !9475)
!9485 = !DILocation(line: 156, column: 27, scope: !9475)
!9486 = !DILocation(line: 156, column: 8, scope: !9475)
!9487 = !DILocation(line: 157, column: 6, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9475, file: !694, line: 157, column: 6)
!9489 = !DILocation(line: 157, column: 6, scope: !9475)
!9490 = !DILocation(line: 161, column: 8, scope: !9475)
!9491 = !DILocation(line: 163, column: 23, scope: !9475)
!9492 = !DILocation(line: 163, column: 2, scope: !9475)
!9493 = !DILocation(line: 165, column: 2, scope: !9475)
!9494 = !DILocation(line: 166, column: 1, scope: !9475)
!9495 = distinct !DISubprogram(name: "zbus_chan_claim", scope: !694, file: !694, line: 168, type: !9476, scopeLine: 169, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9496)
!9496 = !{!9497, !9498, !9499}
!9497 = !DILocalVariable(name: "chan", arg: 1, scope: !9495, file: !694, line: 168, type: !9181)
!9498 = !DILocalVariable(name: "timeout", arg: 2, scope: !9495, file: !694, line: 168, type: !9167)
!9499 = !DILocalVariable(name: "err", scope: !9495, file: !694, line: 173, type: !103)
!9500 = !DILocation(line: 0, scope: !9495)
!9501 = !DILocation(line: 173, column: 31, scope: !9495)
!9502 = !DILocation(line: 173, column: 12, scope: !9495)
!9503 = !DILocation(line: 180, column: 1, scope: !9495)
!9504 = distinct !DISubprogram(name: "zbus_chan_finish", scope: !694, file: !694, line: 182, type: !9505, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9507)
!9505 = !DISubroutineType(types: !9506)
!9506 = !{!103, !9181}
!9507 = !{!9508, !9509}
!9508 = !DILocalVariable(name: "chan", arg: 1, scope: !9504, file: !694, line: 182, type: !9181)
!9509 = !DILocalVariable(name: "err", scope: !9504, file: !694, line: 187, type: !103)
!9510 = !DILocation(line: 0, scope: !9504)
!9511 = !DILocation(line: 187, column: 33, scope: !9504)
!9512 = !DILocation(line: 187, column: 12, scope: !9504)
!9513 = !DILocation(line: 189, column: 2, scope: !9504)
!9514 = distinct !DISubprogram(name: "zbus_sub_wait", scope: !694, file: !694, line: 192, type: !9515, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9518)
!9515 = !DISubroutineType(types: !9516)
!9516 = !{!103, !9300, !9517, !9167}
!9517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9181, size: 32)
!9518 = !{!9519, !9520, !9521}
!9519 = !DILocalVariable(name: "sub", arg: 1, scope: !9514, file: !694, line: 192, type: !9300)
!9520 = !DILocalVariable(name: "chan", arg: 2, scope: !9514, file: !694, line: 192, type: !9517)
!9521 = !DILocalVariable(name: "timeout", arg: 3, scope: !9514, file: !694, line: 193, type: !9167)
!9522 = !DILocation(line: 0, scope: !9514)
!9523 = !DILocation(line: 199, column: 11, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9514, file: !694, line: 199, column: 6)
!9525 = !DILocation(line: 199, column: 17, scope: !9524)
!9526 = !DILocation(line: 199, column: 6, scope: !9514)
!9527 = !DILocation(line: 203, column: 32, scope: !9514)
!9528 = !DILocation(line: 203, column: 9, scope: !9514)
!9529 = !DILocation(line: 203, column: 2, scope: !9514)
!9530 = !DILocation(line: 204, column: 1, scope: !9514)
!9531 = distinct !DISubprogram(name: "k_msgq_get", scope: !3640, file: !3640, line: 1147, type: !9532, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9534)
!9532 = !DISubroutineType(types: !9533)
!9533 = !{!103, !9307, !102, !9167}
!9534 = !{!9535, !9536, !9537}
!9535 = !DILocalVariable(name: "msgq", arg: 1, scope: !9531, file: !3640, line: 1147, type: !9307)
!9536 = !DILocalVariable(name: "data", arg: 2, scope: !9531, file: !3640, line: 1147, type: !102)
!9537 = !DILocalVariable(name: "timeout", arg: 3, scope: !9531, file: !3640, line: 1147, type: !9167)
!9538 = !DILocation(line: 0, scope: !9531)
!9539 = !DILocation(line: 1157, column: 2, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9531, file: !3640, line: 1157, column: 2)
!9541 = !{i64 2154156228}
!9542 = !DILocation(line: 1158, column: 9, scope: !9531)
!9543 = !DILocation(line: 1158, column: 2, scope: !9531)
!9544 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !785, file: !785, line: 368, type: !838, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9545)
!9545 = !{!9546}
!9546 = !DILocalVariable(name: "dev", arg: 1, scope: !9544, file: !785, line: 368, type: !814)
!9547 = !DILocation(line: 0, scope: !9544)
!9548 = !DILocation(line: 370, column: 2, scope: !9544)
!9549 = !DILocation(line: 371, column: 1, scope: !9544)
!9550 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !785, file: !785, line: 243, type: !9551, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9553)
!9551 = !DISubroutineType(types: !9552)
!9552 = !{null, !103, !103, !814}
!9553 = !{!9554, !9555, !9556, !9557, !9559}
!9554 = !DILocalVariable(name: "min", arg: 1, scope: !9550, file: !785, line: 243, type: !103)
!9555 = !DILocalVariable(name: "max", arg: 2, scope: !9550, file: !785, line: 243, type: !103)
!9556 = !DILocalVariable(name: "dev", arg: 3, scope: !9550, file: !785, line: 243, type: !814)
!9557 = !DILocalVariable(name: "data", scope: !9550, file: !785, line: 245, type: !9558)
!9558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 32)
!9559 = !DILocalVariable(name: "line", scope: !9550, file: !785, line: 246, type: !103)
!9560 = !DILocation(line: 0, scope: !9550)
!9561 = !DILocation(line: 245, column: 38, scope: !9550)
!9562 = !DILocation(line: 249, column: 24, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9564, file: !785, line: 249, column: 2)
!9564 = distinct !DILexicalBlock(scope: !9550, file: !785, line: 249, column: 2)
!9565 = !DILocation(line: 249, column: 2, scope: !9564)
!9566 = !DILocation(line: 251, column: 7, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9568, file: !785, line: 251, column: 7)
!9568 = distinct !DILexicalBlock(scope: !9563, file: !785, line: 249, column: 39)
!9569 = !DILocation(line: 251, column: 7, scope: !9568)
!9570 = !DILocation(line: 253, column: 4, scope: !9571)
!9571 = distinct !DILexicalBlock(scope: !9567, file: !785, line: 251, column: 36)
!9572 = !DILocation(line: 256, column: 24, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9571, file: !785, line: 256, column: 8)
!9574 = !DILocation(line: 256, column: 9, scope: !9573)
!9575 = !DILocation(line: 256, column: 8, scope: !9571)
!9576 = !DILocation(line: 260, column: 43, scope: !9571)
!9577 = !DILocation(line: 260, column: 4, scope: !9571)
!9578 = !DILocation(line: 261, column: 3, scope: !9571)
!9579 = !DILocation(line: 249, column: 35, scope: !9563)
!9580 = distinct !{!9580, !9565, !9581}
!9581 = !DILocation(line: 262, column: 2, scope: !9564)
!9582 = !DILocation(line: 263, column: 1, scope: !9550)
!9583 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !785, file: !785, line: 158, type: !396, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9584)
!9584 = !{!9585}
!9585 = !DILocalVariable(name: "line", arg: 1, scope: !9583, file: !785, line: 158, type: !103)
!9586 = !DILocation(line: 0, scope: !9583)
!9587 = !DILocation(line: 170, column: 38, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9589, file: !785, line: 160, column: 17)
!9589 = distinct !DILexicalBlock(scope: !9583, file: !785, line: 160, column: 6)
!9590 = !DILocation(line: 170, column: 10, scope: !9588)
!9591 = !DILocation(line: 176, column: 1, scope: !9583)
!9592 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !785, file: !785, line: 183, type: !9593, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9595)
!9593 = !DISubroutineType(types: !9594)
!9594 = !{null, !103}
!9595 = !{!9596}
!9596 = !DILocalVariable(name: "line", arg: 1, scope: !9592, file: !785, line: 183, type: !103)
!9597 = !DILocation(line: 0, scope: !9592)
!9598 = !DILocation(line: 195, column: 28, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9600, file: !785, line: 185, column: 17)
!9600 = distinct !DILexicalBlock(scope: !9592, file: !785, line: 185, column: 6)
!9601 = !DILocation(line: 195, column: 3, scope: !9599)
!9602 = !DILocation(line: 200, column: 1, scope: !9592)
!9603 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9604, file: !9604, line: 910, type: !7423, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9605)
!9604 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9605 = !{!9606}
!9606 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9603, file: !9604, line: 910, type: !108)
!9607 = !DILocation(line: 0, scope: !9603)
!9608 = !DILocation(line: 912, column: 3, scope: !9603)
!9609 = !DILocation(line: 913, column: 1, scope: !9603)
!9610 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9604, file: !9604, line: 834, type: !8577, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9611)
!9611 = !{!9612}
!9612 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9610, file: !9604, line: 834, type: !108)
!9613 = !DILocation(line: 0, scope: !9610)
!9614 = !DILocation(line: 836, column: 11, scope: !9610)
!9615 = !DILocation(line: 836, column: 40, scope: !9610)
!9616 = !DILocation(line: 836, column: 3, scope: !9610)
!9617 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !785, file: !785, line: 304, type: !838, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9618)
!9618 = !{!9619}
!9619 = !DILocalVariable(name: "dev", arg: 1, scope: !9617, file: !785, line: 304, type: !814)
!9620 = !DILocation(line: 0, scope: !9617)
!9621 = !DILocation(line: 306, column: 2, scope: !9617)
!9622 = !DILocation(line: 307, column: 1, scope: !9617)
!9623 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !785, file: !785, line: 299, type: !838, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9624)
!9624 = !{!9625}
!9625 = !DILocalVariable(name: "dev", arg: 1, scope: !9623, file: !785, line: 299, type: !814)
!9626 = !DILocation(line: 0, scope: !9623)
!9627 = !DILocation(line: 301, column: 2, scope: !9623)
!9628 = !DILocation(line: 302, column: 1, scope: !9623)
!9629 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !785, file: !785, line: 294, type: !838, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9630)
!9630 = !{!9631}
!9631 = !DILocalVariable(name: "dev", arg: 1, scope: !9629, file: !785, line: 294, type: !814)
!9632 = !DILocation(line: 0, scope: !9629)
!9633 = !DILocation(line: 296, column: 2, scope: !9629)
!9634 = !DILocation(line: 297, column: 1, scope: !9629)
!9635 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !785, file: !785, line: 397, type: !838, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9636)
!9636 = !{!9637}
!9637 = !DILocalVariable(name: "dev", arg: 1, scope: !9635, file: !785, line: 397, type: !814)
!9638 = !DILocation(line: 0, scope: !9635)
!9639 = !DILocation(line: 399, column: 2, scope: !9635)
!9640 = !DILocation(line: 400, column: 1, scope: !9635)
!9641 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !785, file: !785, line: 392, type: !838, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9642)
!9642 = !{!9643}
!9643 = !DILocalVariable(name: "dev", arg: 1, scope: !9641, file: !785, line: 392, type: !814)
!9644 = !DILocation(line: 0, scope: !9641)
!9645 = !DILocation(line: 394, column: 2, scope: !9641)
!9646 = !DILocation(line: 395, column: 1, scope: !9641)
!9647 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !785, file: !785, line: 289, type: !838, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9648)
!9648 = !{!9649}
!9649 = !DILocalVariable(name: "dev", arg: 1, scope: !9647, file: !785, line: 289, type: !814)
!9650 = !DILocation(line: 0, scope: !9647)
!9651 = !DILocation(line: 291, column: 2, scope: !9647)
!9652 = !DILocation(line: 292, column: 1, scope: !9647)
!9653 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !785, file: !785, line: 387, type: !838, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9654)
!9654 = !{!9655}
!9655 = !DILocalVariable(name: "dev", arg: 1, scope: !9653, file: !785, line: 387, type: !814)
!9656 = !DILocation(line: 0, scope: !9653)
!9657 = !DILocation(line: 389, column: 2, scope: !9653)
!9658 = !DILocation(line: 390, column: 1, scope: !9653)
!9659 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !785, file: !785, line: 382, type: !838, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9660)
!9660 = !{!9661}
!9661 = !DILocalVariable(name: "dev", arg: 1, scope: !9659, file: !785, line: 382, type: !814)
!9662 = !DILocation(line: 0, scope: !9659)
!9663 = !DILocation(line: 384, column: 2, scope: !9659)
!9664 = !DILocation(line: 385, column: 1, scope: !9659)
!9665 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !785, file: !785, line: 373, type: !838, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9666)
!9666 = !{!9667}
!9667 = !DILocalVariable(name: "dev", arg: 1, scope: !9665, file: !785, line: 373, type: !814)
!9668 = !DILocation(line: 0, scope: !9665)
!9669 = !DILocation(line: 375, column: 2, scope: !9665)
!9670 = !DILocation(line: 376, column: 1, scope: !9665)
!9671 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !785, file: !785, line: 284, type: !838, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9672)
!9672 = !{!9673}
!9673 = !DILocalVariable(name: "dev", arg: 1, scope: !9671, file: !785, line: 284, type: !814)
!9674 = !DILocation(line: 0, scope: !9671)
!9675 = !DILocation(line: 286, column: 2, scope: !9671)
!9676 = !DILocation(line: 287, column: 1, scope: !9671)
!9677 = distinct !DISubprogram(name: "stm32_exti_init", scope: !785, file: !785, line: 416, type: !812, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9678)
!9678 = !{!9679}
!9679 = !DILocalVariable(name: "dev", arg: 1, scope: !9677, file: !785, line: 416, type: !814)
!9680 = !DILocation(line: 0, scope: !9677)
!9681 = !DILocation(line: 418, column: 2, scope: !9677)
!9682 = !DILocation(line: 420, column: 2, scope: !9677)
!9683 = !DILocation(line: 0, scope: !837)
!9684 = !DILocation(line: 493, column: 2, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !837, file: !785, line: 493, column: 2)
!9686 = !DILocation(line: 497, column: 2, scope: !9687)
!9687 = distinct !DILexicalBlock(scope: !837, file: !785, line: 497, column: 2)
!9688 = !DILocation(line: 507, column: 2, scope: !9689)
!9689 = distinct !DILexicalBlock(scope: !837, file: !785, line: 507, column: 2)
!9690 = !DILocation(line: 512, column: 2, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !837, file: !785, line: 512, column: 2)
!9692 = !DILocation(line: 516, column: 2, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !837, file: !785, line: 516, column: 2)
!9694 = !DILocation(line: 523, column: 2, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !837, file: !785, line: 523, column: 2)
!9696 = !DILocation(line: 527, column: 2, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !837, file: !785, line: 527, column: 2)
!9698 = !DILocation(line: 581, column: 2, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !837, file: !785, line: 581, column: 2)
!9700 = !DILocation(line: 586, column: 2, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !837, file: !785, line: 586, column: 2)
!9702 = !DILocation(line: 591, column: 2, scope: !9703)
!9703 = distinct !DILexicalBlock(scope: !837, file: !785, line: 591, column: 2)
!9704 = !DILocation(line: 595, column: 2, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !837, file: !785, line: 595, column: 2)
!9706 = !DILocation(line: 607, column: 1, scope: !837)
!9707 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !785, file: !785, line: 112, type: !9593, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9708)
!9708 = !{!9709, !9710}
!9709 = !DILocalVariable(name: "line", arg: 1, scope: !9707, file: !785, line: 112, type: !103)
!9710 = !DILocalVariable(name: "irqnum", scope: !9707, file: !785, line: 114, type: !103)
!9711 = !DILocation(line: 0, scope: !9707)
!9712 = !DILocation(line: 121, column: 11, scope: !9707)
!9713 = !DILocation(line: 130, column: 26, scope: !9707)
!9714 = !DILocation(line: 130, column: 2, scope: !9707)
!9715 = !DILocation(line: 134, column: 2, scope: !9707)
!9716 = !DILocation(line: 135, column: 1, scope: !9707)
!9717 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9604, file: !9604, line: 268, type: !7423, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9718)
!9718 = !{!9719}
!9719 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9717, file: !9604, line: 268, type: !108)
!9720 = !DILocation(line: 0, scope: !9717)
!9721 = !DILocation(line: 270, column: 3, scope: !9717)
!9722 = !DILocation(line: 271, column: 1, scope: !9717)
!9723 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !785, file: !785, line: 137, type: !9593, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9724)
!9724 = !{!9725}
!9725 = !DILocalVariable(name: "line", arg: 1, scope: !9723, file: !785, line: 137, type: !103)
!9726 = !DILocation(line: 0, scope: !9723)
!9727 = !DILocation(line: 141, column: 11, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !9723, file: !785, line: 141, column: 6)
!9729 = !DILocation(line: 141, column: 6, scope: !9723)
!9730 = !DILocation(line: 145, column: 28, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9728, file: !785, line: 141, column: 17)
!9732 = !DILocation(line: 145, column: 3, scope: !9731)
!9733 = !DILocation(line: 147, column: 2, scope: !9731)
!9734 = !DILocation(line: 151, column: 1, scope: !9723)
!9735 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9604, file: !9604, line: 309, type: !7423, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9736)
!9736 = !{!9737}
!9737 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9735, file: !9604, line: 309, type: !108)
!9738 = !DILocation(line: 0, scope: !9735)
!9739 = !DILocation(line: 311, column: 3, scope: !9735)
!9740 = !DILocation(line: 312, column: 1, scope: !9735)
!9741 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !785, file: !785, line: 202, type: !9742, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9744)
!9742 = !DISubroutineType(types: !9743)
!9743 = !{null, !103, !103}
!9744 = !{!9745, !9746}
!9745 = !DILocalVariable(name: "line", arg: 1, scope: !9741, file: !785, line: 202, type: !103)
!9746 = !DILocalVariable(name: "trigger", arg: 2, scope: !9741, file: !785, line: 202, type: !103)
!9747 = !DILocation(line: 0, scope: !9741)
!9748 = !DILocation(line: 211, column: 2, scope: !9741)
!9749 = !DILocation(line: 213, column: 36, scope: !9750)
!9750 = distinct !DILexicalBlock(scope: !9741, file: !785, line: 211, column: 19)
!9751 = !DILocation(line: 213, column: 3, scope: !9750)
!9752 = !DILocation(line: 214, column: 3, scope: !9750)
!9753 = !DILocation(line: 215, column: 3, scope: !9750)
!9754 = !DILocation(line: 217, column: 35, scope: !9750)
!9755 = !DILocation(line: 217, column: 3, scope: !9750)
!9756 = !DILocation(line: 218, column: 3, scope: !9750)
!9757 = !DILocation(line: 219, column: 3, scope: !9750)
!9758 = !DILocation(line: 221, column: 36, scope: !9750)
!9759 = !DILocation(line: 221, column: 3, scope: !9750)
!9760 = !DILocation(line: 222, column: 3, scope: !9750)
!9761 = !DILocation(line: 223, column: 3, scope: !9750)
!9762 = !DILocation(line: 225, column: 35, scope: !9750)
!9763 = !DILocation(line: 225, column: 3, scope: !9750)
!9764 = !DILocation(line: 226, column: 3, scope: !9750)
!9765 = !DILocation(line: 227, column: 3, scope: !9750)
!9766 = !DILocation(line: 232, column: 1, scope: !9741)
!9767 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9604, file: !9604, line: 573, type: !7423, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9768)
!9768 = !{!9769}
!9769 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9767, file: !9604, line: 573, type: !108)
!9770 = !DILocation(line: 0, scope: !9767)
!9771 = !DILocation(line: 575, column: 3, scope: !9767)
!9772 = !DILocation(line: 577, column: 1, scope: !9767)
!9773 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9604, file: !9604, line: 703, type: !7423, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9774)
!9774 = !{!9775}
!9775 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9773, file: !9604, line: 703, type: !108)
!9776 = !DILocation(line: 0, scope: !9773)
!9777 = !DILocation(line: 705, column: 3, scope: !9773)
!9778 = !DILocation(line: 706, column: 1, scope: !9773)
!9779 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9604, file: !9604, line: 529, type: !7423, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9780)
!9780 = !{!9781}
!9781 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9779, file: !9604, line: 529, type: !108)
!9782 = !DILocation(line: 0, scope: !9779)
!9783 = !DILocation(line: 531, column: 3, scope: !9779)
!9784 = !DILocation(line: 533, column: 1, scope: !9779)
!9785 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9604, file: !9604, line: 661, type: !7423, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9786)
!9786 = !{!9787}
!9787 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9785, file: !9604, line: 661, type: !108)
!9788 = !DILocation(line: 0, scope: !9785)
!9789 = !DILocation(line: 663, column: 3, scope: !9785)
!9790 = !DILocation(line: 664, column: 1, scope: !9785)
!9791 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !785, file: !785, line: 433, type: !9792, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9794)
!9792 = !DISubroutineType(types: !9793)
!9793 = !{!103, !103, !825, !102}
!9794 = !{!9795, !9796, !9797, !9798, !9800}
!9795 = !DILocalVariable(name: "line", arg: 1, scope: !9791, file: !785, line: 433, type: !103)
!9796 = !DILocalVariable(name: "cb", arg: 2, scope: !9791, file: !785, line: 433, type: !825)
!9797 = !DILocalVariable(name: "arg", arg: 3, scope: !9791, file: !785, line: 433, type: !102)
!9798 = !DILocalVariable(name: "dev", scope: !9791, file: !785, line: 435, type: !9799)
!9799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !814)
!9800 = !DILocalVariable(name: "data", scope: !9791, file: !785, line: 436, type: !9558)
!9801 = !DILocation(line: 0, scope: !9791)
!9802 = !DILocation(line: 438, column: 21, scope: !9803)
!9803 = distinct !DILexicalBlock(scope: !9791, file: !785, line: 438, column: 6)
!9804 = !DILocation(line: 438, column: 6, scope: !9803)
!9805 = !DILocation(line: 438, column: 6, scope: !9791)
!9806 = !DILocation(line: 442, column: 20, scope: !9791)
!9807 = !DILocation(line: 443, column: 17, scope: !9791)
!9808 = !DILocation(line: 443, column: 22, scope: !9791)
!9809 = !DILocation(line: 445, column: 2, scope: !9791)
!9810 = !DILocation(line: 446, column: 1, scope: !9791)
!9811 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !785, file: !785, line: 448, type: !9593, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9812)
!9812 = !{!9813, !9814, !9815}
!9813 = !DILocalVariable(name: "line", arg: 1, scope: !9811, file: !785, line: 448, type: !103)
!9814 = !DILocalVariable(name: "dev", scope: !9811, file: !785, line: 450, type: !9799)
!9815 = !DILocalVariable(name: "data", scope: !9811, file: !785, line: 451, type: !9558)
!9816 = !DILocation(line: 0, scope: !9811)
!9817 = !DILocation(line: 453, column: 17, scope: !9811)
!9818 = !DILocation(line: 453, column: 20, scope: !9811)
!9819 = !DILocation(line: 454, column: 17, scope: !9811)
!9820 = !DILocation(line: 454, column: 22, scope: !9811)
!9821 = !DILocation(line: 455, column: 1, scope: !9811)
!9822 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !973, file: !973, line: 183, type: !1011, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !9823)
!9823 = !{!9824, !9825, !9826, !9827, !9828}
!9824 = !DILocalVariable(name: "dev", arg: 1, scope: !9822, file: !973, line: 183, type: !1002)
!9825 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9822, file: !973, line: 184, type: !1013)
!9826 = !DILocalVariable(name: "pclken", scope: !9822, file: !973, line: 186, type: !963)
!9827 = !DILocalVariable(name: "reg", scope: !9822, file: !973, line: 187, type: !1554)
!9828 = !DILocalVariable(name: "reg_val", scope: !9822, file: !973, line: 188, type: !108)
!9829 = !DILocation(line: 0, scope: !9822)
!9830 = !DILocation(line: 192, column: 6, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9822, file: !973, line: 192, column: 6)
!9832 = !DILocation(line: 192, column: 6, scope: !9822)
!9833 = !DILocation(line: 197, column: 52, scope: !9822)
!9834 = !DILocation(line: 197, column: 8, scope: !9822)
!9835 = !DILocation(line: 198, column: 12, scope: !9822)
!9836 = !DILocation(line: 199, column: 21, scope: !9822)
!9837 = !DILocation(line: 199, column: 10, scope: !9822)
!9838 = !DILocation(line: 200, column: 7, scope: !9822)
!9839 = !DILocation(line: 202, column: 2, scope: !9822)
!9840 = !DILocation(line: 203, column: 1, scope: !9822)
!9841 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !973, file: !973, line: 205, type: !1011, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !9842)
!9842 = !{!9843, !9844, !9845, !9846, !9847}
!9843 = !DILocalVariable(name: "dev", arg: 1, scope: !9841, file: !973, line: 205, type: !1002)
!9844 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9841, file: !973, line: 206, type: !1013)
!9845 = !DILocalVariable(name: "pclken", scope: !9841, file: !973, line: 208, type: !963)
!9846 = !DILocalVariable(name: "reg", scope: !9841, file: !973, line: 209, type: !1554)
!9847 = !DILocalVariable(name: "reg_val", scope: !9841, file: !973, line: 210, type: !108)
!9848 = !DILocation(line: 0, scope: !9841)
!9849 = !DILocation(line: 214, column: 6, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9841, file: !973, line: 214, column: 6)
!9851 = !DILocation(line: 214, column: 6, scope: !9841)
!9852 = !DILocation(line: 219, column: 52, scope: !9841)
!9853 = !DILocation(line: 219, column: 8, scope: !9841)
!9854 = !DILocation(line: 220, column: 12, scope: !9841)
!9855 = !DILocation(line: 221, column: 22, scope: !9841)
!9856 = !DILocation(line: 221, column: 13, scope: !9841)
!9857 = !DILocation(line: 221, column: 10, scope: !9841)
!9858 = !DILocation(line: 222, column: 7, scope: !9841)
!9859 = !DILocation(line: 224, column: 2, scope: !9841)
!9860 = !DILocation(line: 225, column: 1, scope: !9841)
!9861 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !973, file: !973, line: 262, type: !1027, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !9862)
!9862 = !{!9863, !9864, !9865, !9866, !9867, !9868, !9869, !9870}
!9863 = !DILocalVariable(name: "clock", arg: 1, scope: !9861, file: !973, line: 262, type: !1002)
!9864 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9861, file: !973, line: 263, type: !1013)
!9865 = !DILocalVariable(name: "rate", arg: 3, scope: !9861, file: !973, line: 264, type: !969)
!9866 = !DILocalVariable(name: "pclken", scope: !9861, file: !973, line: 266, type: !963)
!9867 = !DILocalVariable(name: "ahb_clock", scope: !9861, file: !973, line: 273, type: !108)
!9868 = !DILocalVariable(name: "apb1_clock", scope: !9861, file: !973, line: 274, type: !108)
!9869 = !DILocalVariable(name: "apb2_clock", scope: !9861, file: !973, line: 276, type: !108)
!9870 = !DILocalVariable(name: "ahb3_clock", scope: !9861, file: !973, line: 286, type: !108)
!9871 = !DILocation(line: 0, scope: !9861)
!9872 = !DILocation(line: 273, column: 23, scope: !9861)
!9873 = !DILocation(line: 299, column: 18, scope: !9861)
!9874 = !DILocation(line: 299, column: 2, scope: !9861)
!9875 = !DILocation(line: 274, column: 24, scope: !9861)
!9876 = !DILocation(line: 319, column: 3, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9861, file: !973, line: 299, column: 23)
!9878 = !DILocation(line: 276, column: 24, scope: !9861)
!9879 = !DILocation(line: 323, column: 3, scope: !9877)
!9880 = !DILocation(line: 346, column: 33, scope: !9877)
!9881 = !DILocation(line: 346, column: 11, scope: !9877)
!9882 = !DILocation(line: 350, column: 3, scope: !9877)
!9883 = !DILocation(line: 354, column: 33, scope: !9877)
!9884 = !DILocation(line: 354, column: 11, scope: !9877)
!9885 = !DILocation(line: 358, column: 3, scope: !9877)
!9886 = !DILocation(line: 374, column: 3, scope: !9877)
!9887 = !DILocation(line: 379, column: 3, scope: !9877)
!9888 = !DILocation(line: 0, scope: !9877)
!9889 = !DILocation(line: 396, column: 1, scope: !9861)
!9890 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !973, file: !973, line: 227, type: !1043, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !9891)
!9891 = !{!9892, !9893, !9894, !9895, !9896, !9897, !9898, !9899}
!9892 = !DILocalVariable(name: "dev", arg: 1, scope: !9890, file: !973, line: 227, type: !1002)
!9893 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9890, file: !973, line: 228, type: !1013)
!9894 = !DILocalVariable(name: "data", arg: 3, scope: !9890, file: !973, line: 229, type: !102)
!9895 = !DILocalVariable(name: "pclken", scope: !9890, file: !973, line: 233, type: !963)
!9896 = !DILocalVariable(name: "reg", scope: !9890, file: !973, line: 234, type: !1554)
!9897 = !DILocalVariable(name: "reg_val", scope: !9890, file: !973, line: 235, type: !108)
!9898 = !DILocalVariable(name: "dt_val", scope: !9890, file: !973, line: 235, type: !108)
!9899 = !DILocalVariable(name: "err", scope: !9890, file: !973, line: 236, type: !103)
!9900 = !DILocation(line: 0, scope: !9890)
!9901 = !DILocation(line: 241, column: 30, scope: !9890)
!9902 = !DILocation(line: 241, column: 8, scope: !9890)
!9903 = !DILocation(line: 242, column: 10, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9890, file: !973, line: 242, column: 6)
!9905 = !DILocation(line: 242, column: 6, scope: !9890)
!9906 = !DILocation(line: 247, column: 11, scope: !9890)
!9907 = !DILocation(line: 248, column: 6, scope: !9890)
!9908 = !DILocation(line: 247, column: 44, scope: !9890)
!9909 = !DILocation(line: 250, column: 6, scope: !9890)
!9910 = !DILocation(line: 249, column: 52, scope: !9890)
!9911 = !DILocation(line: 249, column: 8, scope: !9890)
!9912 = !DILocation(line: 251, column: 12, scope: !9890)
!9913 = !DILocation(line: 252, column: 10, scope: !9890)
!9914 = !DILocation(line: 253, column: 7, scope: !9890)
!9915 = !DILocation(line: 255, column: 2, scope: !9890)
!9916 = !DILocation(line: 260, column: 1, scope: !9890)
!9917 = distinct !DISubprogram(name: "enabled_clock", scope: !973, file: !973, line: 100, type: !9918, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !9920)
!9918 = !DISubroutineType(types: !9919)
!9919 = !{!103, !108}
!9920 = !{!9921, !9922}
!9921 = !DILocalVariable(name: "src_clk", arg: 1, scope: !9917, file: !973, line: 100, type: !108)
!9922 = !DILocalVariable(name: "r", scope: !9917, file: !973, line: 102, type: !103)
!9923 = !DILocation(line: 0, scope: !9917)
!9924 = !DILocation(line: 104, column: 2, scope: !9917)
!9925 = !DILocation(line: 180, column: 2, scope: !9917)
!9926 = !DILocation(line: 181, column: 1, scope: !9917)
!9927 = distinct !DISubprogram(name: "get_bus_clock", scope: !973, file: !973, line: 79, type: !9928, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !9930)
!9928 = !DISubroutineType(types: !9929)
!9929 = !{!108, !108, !108}
!9930 = !{!9931, !9932}
!9931 = !DILocalVariable(name: "clock", arg: 1, scope: !9927, file: !973, line: 79, type: !108)
!9932 = !DILocalVariable(name: "prescaler", arg: 2, scope: !9927, file: !973, line: 79, type: !108)
!9933 = !DILocation(line: 0, scope: !9927)
!9934 = !DILocation(line: 81, column: 15, scope: !9927)
!9935 = !DILocation(line: 81, column: 2, scope: !9927)
!9936 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !973, file: !973, line: 68, type: !9937, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !9939)
!9937 = !DISubroutineType(types: !9938)
!9938 = !{!108, !108, !103, !103, !103}
!9939 = !{!9940, !9941, !9942, !9943}
!9940 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !9936, file: !973, line: 68, type: !108)
!9941 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !9936, file: !973, line: 69, type: !103)
!9942 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !9936, file: !973, line: 70, type: !103)
!9943 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !9936, file: !973, line: 71, type: !103)
!9944 = !DILocation(line: 0, scope: !9936)
!9945 = !DILocation(line: 75, column: 22, scope: !9936)
!9946 = !DILocation(line: 76, column: 13, scope: !9936)
!9947 = !DILocation(line: 75, column: 34, scope: !9936)
!9948 = !DILocation(line: 75, column: 2, scope: !9936)
!9949 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !973, file: !973, line: 641, type: !1000, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !9950)
!9950 = !{!9951, !9952, !9953}
!9951 = !DILocalVariable(name: "dev", arg: 1, scope: !9949, file: !973, line: 641, type: !1002)
!9952 = !DILocalVariable(name: "old_flash_freq", scope: !9949, file: !973, line: 664, type: !108)
!9953 = !DILocalVariable(name: "new_flash_freq", scope: !9949, file: !973, line: 665, type: !108)
!9954 = !DILocation(line: 0, scope: !9949)
!9955 = !DILocation(line: 646, column: 2, scope: !9949)
!9956 = !DILocation(line: 667, column: 19, scope: !9949)
!9957 = !DILocation(line: 674, column: 21, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9949, file: !973, line: 674, column: 6)
!9959 = !DILocation(line: 674, column: 6, scope: !9949)
!9960 = !DILocation(line: 675, column: 3, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9958, file: !973, line: 674, column: 59)
!9962 = !DILocation(line: 676, column: 2, scope: !9961)
!9963 = !DILocation(line: 680, column: 2, scope: !9949)
!9964 = !DILocation(line: 683, column: 2, scope: !9949)
!9965 = !DILocation(line: 690, column: 3, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9967, file: !973, line: 689, column: 9)
!9967 = distinct !DILexicalBlock(scope: !9949, file: !973, line: 685, column: 6)
!9968 = !DILocation(line: 695, column: 2, scope: !9949)
!9969 = !DILocation(line: 696, column: 2, scope: !9949)
!9970 = !DILocation(line: 696, column: 9, scope: !9949)
!9971 = !DILocation(line: 696, column: 34, scope: !9949)
!9972 = distinct !{!9972, !9969, !9973}
!9973 = !DILocation(line: 697, column: 2, scope: !9949)
!9974 = !DILocation(line: 720, column: 21, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9949, file: !973, line: 720, column: 6)
!9976 = !DILocation(line: 720, column: 6, scope: !9949)
!9977 = !DILocation(line: 721, column: 3, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9975, file: !973, line: 720, column: 60)
!9979 = !DILocation(line: 722, column: 2, scope: !9978)
!9980 = !DILocation(line: 725, column: 18, scope: !9949)
!9981 = !DILocation(line: 728, column: 2, scope: !9949)
!9982 = !DILocation(line: 730, column: 2, scope: !9949)
!9983 = !DILocation(line: 745, column: 2, scope: !9949)
!9984 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !9985, file: !9985, line: 3275, type: !3620, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !251)
!9985 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9986 = !DILocation(line: 3277, column: 21, scope: !9984)
!9987 = !DILocation(line: 3277, column: 3, scope: !9984)
!9988 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !973, file: !973, line: 507, type: !334, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !251)
!9989 = !DILocation(line: 516, column: 4, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !9991, file: !973, line: 515, column: 10)
!9991 = distinct !DILexicalBlock(scope: !9992, file: !973, line: 513, column: 7)
!9992 = distinct !DILexicalBlock(scope: !9993, file: !973, line: 510, column: 37)
!9993 = distinct !DILexicalBlock(scope: !9988, file: !973, line: 510, column: 6)
!9994 = !DILocation(line: 526, column: 3, scope: !9992)
!9995 = !DILocation(line: 527, column: 3, scope: !9992)
!9996 = !DILocation(line: 527, column: 10, scope: !9992)
!9997 = !DILocation(line: 527, column: 31, scope: !9992)
!9998 = distinct !{!9998, !9995, !9999}
!9999 = !DILocation(line: 529, column: 3, scope: !9992)
!10000 = !DILocation(line: 583, column: 3, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !10002, file: !973, line: 577, column: 37)
!10002 = distinct !DILexicalBlock(scope: !9988, file: !973, line: 577, column: 6)
!10003 = !DILocation(line: 584, column: 3, scope: !10001)
!10004 = !DILocation(line: 584, column: 10, scope: !10001)
!10005 = !DILocation(line: 584, column: 31, scope: !10001)
!10006 = distinct !{!10006, !10003, !10007}
!10007 = !DILocation(line: 585, column: 3, scope: !10001)
!10008 = !DILocation(line: 627, column: 1, scope: !9988)
!10009 = distinct !DISubprogram(name: "set_up_plls", scope: !973, file: !973, line: 448, type: !334, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !251)
!10010 = !DILocation(line: 460, column: 6, scope: !10011)
!10011 = distinct !DILexicalBlock(scope: !10009, file: !973, line: 460, column: 6)
!10012 = !DILocation(line: 460, column: 31, scope: !10011)
!10013 = !DILocation(line: 460, column: 6, scope: !10009)
!10014 = !DILocation(line: 461, column: 3, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !10011, file: !973, line: 460, column: 67)
!10016 = !DILocation(line: 462, column: 3, scope: !10015)
!10017 = !DILocation(line: 463, column: 2, scope: !10015)
!10018 = !DILocation(line: 464, column: 2, scope: !10009)
!10019 = !DILocation(line: 488, column: 2, scope: !10009)
!10020 = !DILocation(line: 492, column: 2, scope: !10009)
!10021 = !DILocation(line: 496, column: 2, scope: !10009)
!10022 = !DILocation(line: 499, column: 2, scope: !10009)
!10023 = !DILocation(line: 500, column: 2, scope: !10009)
!10024 = !DILocation(line: 500, column: 9, scope: !10009)
!10025 = !DILocation(line: 500, column: 30, scope: !10009)
!10026 = distinct !{!10026, !10023, !10027}
!10027 = !DILocation(line: 502, column: 2, scope: !10009)
!10028 = !DILocation(line: 505, column: 1, scope: !10009)
!10029 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9985, file: !9985, line: 3224, type: !7423, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !10030)
!10030 = !{!10031}
!10031 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10029, file: !9985, line: 3224, type: !108)
!10032 = !DILocation(line: 0, scope: !10029)
!10033 = !DILocation(line: 3226, column: 3, scope: !10029)
!10034 = !DILocation(line: 3227, column: 1, scope: !10029)
!10035 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9985, file: !9985, line: 3188, type: !7423, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !10036)
!10036 = !{!10037}
!10037 = !DILocalVariable(name: "Source", arg: 1, scope: !10035, file: !9985, line: 3188, type: !108)
!10038 = !DILocation(line: 0, scope: !10035)
!10039 = !DILocation(line: 3190, column: 3, scope: !10035)
!10040 = !DILocation(line: 3191, column: 1, scope: !10035)
!10041 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9985, file: !9985, line: 3204, type: !3620, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !251)
!10042 = !DILocation(line: 3206, column: 21, scope: !10041)
!10043 = !DILocation(line: 3206, column: 3, scope: !10041)
!10044 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9985, file: !9985, line: 3240, type: !7423, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !10045)
!10045 = !{!10046}
!10046 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10044, file: !9985, line: 3240, type: !108)
!10047 = !DILocation(line: 0, scope: !10044)
!10048 = !DILocation(line: 3242, column: 3, scope: !10044)
!10049 = !DILocation(line: 3243, column: 1, scope: !10044)
!10050 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9985, file: !9985, line: 3256, type: !7423, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !10051)
!10051 = !{!10052}
!10052 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10050, file: !9985, line: 3256, type: !108)
!10053 = !DILocation(line: 0, scope: !10050)
!10054 = !DILocation(line: 3258, column: 3, scope: !10050)
!10055 = !DILocation(line: 3259, column: 1, scope: !10050)
!10056 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !973, file: !973, line: 409, type: !334, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !251)
!10057 = !DILocation(line: 412, column: 6, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10056, file: !973, line: 412, column: 6)
!10059 = !DILocation(line: 412, column: 27, scope: !10058)
!10060 = !DILocation(line: 412, column: 6, scope: !10056)
!10061 = !DILocation(line: 414, column: 3, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !10058, file: !973, line: 412, column: 33)
!10063 = !DILocation(line: 415, column: 3, scope: !10062)
!10064 = !DILocation(line: 415, column: 10, scope: !10062)
!10065 = !DILocation(line: 415, column: 31, scope: !10062)
!10066 = distinct !{!10066, !10063, !10067}
!10067 = !DILocation(line: 417, column: 3, scope: !10062)
!10068 = !DILocation(line: 421, column: 2, scope: !10056)
!10069 = !DILocation(line: 422, column: 2, scope: !10056)
!10070 = !DILocation(line: 422, column: 9, scope: !10056)
!10071 = !DILocation(line: 422, column: 34, scope: !10056)
!10072 = distinct !{!10072, !10069, !10073}
!10073 = !DILocation(line: 423, column: 2, scope: !10056)
!10074 = !DILocation(line: 424, column: 1, scope: !10056)
!10075 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !9985, file: !9985, line: 4195, type: !334, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !251)
!10076 = !DILocation(line: 4197, column: 3, scope: !10075)
!10077 = !DILocation(line: 4198, column: 1, scope: !10075)
!10078 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9985, file: !9985, line: 4184, type: !334, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !251)
!10079 = !DILocation(line: 4186, column: 3, scope: !10078)
!10080 = !DILocation(line: 4187, column: 1, scope: !10078)
!10081 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9985, file: !9985, line: 4205, type: !3620, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !251)
!10082 = !DILocation(line: 4207, column: 11, scope: !10081)
!10083 = !DILocation(line: 4207, column: 44, scope: !10081)
!10084 = !DILocation(line: 4207, column: 3, scope: !10081)
!10085 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9985, file: !9985, line: 3007, type: !3620, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !251)
!10086 = !DILocation(line: 3009, column: 11, scope: !10085)
!10087 = !DILocation(line: 3009, column: 44, scope: !10085)
!10088 = !DILocation(line: 3009, column: 3, scope: !10085)
!10089 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9985, file: !9985, line: 2987, type: !334, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !251)
!10090 = !DILocation(line: 2989, column: 3, scope: !10089)
!10091 = !DILocation(line: 2990, column: 1, scope: !10089)
!10092 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9985, file: !9985, line: 2939, type: !334, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !251)
!10093 = !DILocation(line: 2941, column: 3, scope: !10092)
!10094 = !DILocation(line: 2942, column: 1, scope: !10092)
!10095 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9985, file: !9985, line: 2949, type: !334, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !251)
!10096 = !DILocation(line: 2951, column: 3, scope: !10095)
!10097 = !DILocation(line: 2952, column: 1, scope: !10095)
!10098 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9985, file: !9985, line: 2969, type: !3620, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !251)
!10099 = !DILocation(line: 2971, column: 11, scope: !10098)
!10100 = !DILocation(line: 2971, column: 44, scope: !10098)
!10101 = !DILocation(line: 2971, column: 3, scope: !10098)
!10102 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !9985, file: !9985, line: 3143, type: !334, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !251)
!10103 = !DILocation(line: 3145, column: 3, scope: !10102)
!10104 = !DILocation(line: 3146, column: 1, scope: !10102)
!10105 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !9985, file: !9985, line: 3163, type: !3620, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !251)
!10106 = !DILocation(line: 3165, column: 11, scope: !10105)
!10107 = !DILocation(line: 3165, column: 46, scope: !10105)
!10108 = !DILocation(line: 3165, column: 3, scope: !10105)
!10109 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10110, file: !10110, line: 40, type: !3620, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !251)
!10110 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10111 = !DILocation(line: 45, column: 3, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10113, file: !10110, line: 44, column: 44)
!10113 = distinct !DILexicalBlock(scope: !10114, file: !10110, line: 44, column: 13)
!10114 = distinct !DILexicalBlock(scope: !10109, file: !10110, line: 42, column: 6)
!10115 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10110, file: !10110, line: 56, type: !334, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !251)
!10116 = !DILocation(line: 58, column: 2, scope: !10115)
!10117 = !DILocation(line: 62, column: 1, scope: !10115)
!10118 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9985, file: !9985, line: 4304, type: !10119, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !10121)
!10119 = !DISubroutineType(types: !10120)
!10120 = !{null, !108, !108, !108, !108}
!10121 = !{!10122, !10123, !10124, !10125}
!10122 = !DILocalVariable(name: "Source", arg: 1, scope: !10118, file: !9985, line: 4304, type: !108)
!10123 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10118, file: !9985, line: 4304, type: !108)
!10124 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10118, file: !9985, line: 4304, type: !108)
!10125 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10118, file: !9985, line: 4304, type: !108)
!10126 = !DILocation(line: 0, scope: !10118)
!10127 = !DILocation(line: 4306, column: 3, scope: !10118)
!10128 = !DILocation(line: 4308, column: 3, scope: !10118)
!10129 = !DILocation(line: 4312, column: 1, scope: !10118)
!10130 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10110, file: !10110, line: 69, type: !334, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !251)
!10131 = !DILocation(line: 72, column: 2, scope: !10130)
!10132 = !DILocation(line: 73, column: 1, scope: !10130)
!10133 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10134, file: !10134, line: 1185, type: !7423, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !10135)
!10134 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10135 = !{!10136, !10137}
!10136 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10133, file: !10134, line: 1185, type: !108)
!10137 = !DILocalVariable(name: "tmpreg", scope: !10133, file: !10134, line: 1187, type: !409)
!10138 = !DILocation(line: 0, scope: !10133)
!10139 = !DILocation(line: 1187, column: 3, scope: !10133)
!10140 = !DILocation(line: 1187, column: 17, scope: !10133)
!10141 = !DILocation(line: 1188, column: 3, scope: !10133)
!10142 = !DILocation(line: 1190, column: 12, scope: !10133)
!10143 = !DILocation(line: 1190, column: 10, scope: !10133)
!10144 = !DILocation(line: 1191, column: 9, scope: !10133)
!10145 = !DILocation(line: 1192, column: 1, scope: !10133)
!10146 = distinct !DISubprogram(name: "uart_console_init", scope: !1104, file: !1104, line: 588, type: !1081, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1047, retainedNodes: !10147)
!10147 = !{!10148}
!10148 = !DILocalVariable(name: "arg", arg: 1, scope: !10146, file: !1104, line: 588, type: !1059)
!10149 = !DILocation(line: 0, scope: !10146)
!10150 = !DILocation(line: 593, column: 7, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !10146, file: !1104, line: 593, column: 6)
!10152 = !DILocation(line: 593, column: 6, scope: !10146)
!10153 = !DILocation(line: 597, column: 2, scope: !10146)
!10154 = !DILocation(line: 599, column: 2, scope: !10146)
!10155 = !DILocation(line: 600, column: 1, scope: !10146)
!10156 = distinct !DISubprogram(name: "device_is_ready", scope: !10157, file: !10157, line: 47, type: !10158, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1047, retainedNodes: !10160)
!10157 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!10158 = !DISubroutineType(types: !10159)
!10159 = !{!131, !1059}
!10160 = !{!10161}
!10161 = !DILocalVariable(name: "dev", arg: 1, scope: !10156, file: !10157, line: 47, type: !1059)
!10162 = !DILocation(line: 0, scope: !10156)
!10163 = !DILocation(line: 55, column: 2, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10156, file: !10157, line: 55, column: 2)
!10165 = !{i64 2154366074}
!10166 = !DILocation(line: 56, column: 9, scope: !10156)
!10167 = !DILocation(line: 56, column: 2, scope: !10156)
!10168 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1104, file: !1104, line: 573, type: !334, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1047, retainedNodes: !251)
!10169 = !DILocation(line: 576, column: 2, scope: !10168)
!10170 = !DILocation(line: 579, column: 2, scope: !10168)
!10171 = !DILocation(line: 581, column: 1, scope: !10168)
!10172 = distinct !DISubprogram(name: "console_out", scope: !1104, file: !1104, line: 77, type: !396, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1047, retainedNodes: !10173)
!10173 = !{!10174}
!10174 = !DILocalVariable(name: "c", arg: 1, scope: !10172, file: !1104, line: 77, type: !103)
!10175 = !DILocation(line: 0, scope: !10172)
!10176 = !DILocation(line: 89, column: 11, scope: !10177)
!10177 = distinct !DILexicalBlock(scope: !10172, file: !1104, line: 89, column: 6)
!10178 = !DILocation(line: 89, column: 6, scope: !10172)
!10179 = !DILocation(line: 90, column: 3, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10177, file: !1104, line: 89, column: 17)
!10181 = !DILocation(line: 91, column: 2, scope: !10180)
!10182 = !DILocation(line: 92, column: 34, scope: !10172)
!10183 = !DILocation(line: 92, column: 2, scope: !10172)
!10184 = !DILocation(line: 94, column: 2, scope: !10172)
!10185 = distinct !DISubprogram(name: "uart_poll_out", scope: !10186, file: !10186, line: 95, type: !1077, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1047, retainedNodes: !10187)
!10186 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/benchmark")
!10187 = !{!10188, !10189}
!10188 = !DILocalVariable(name: "dev", arg: 1, scope: !10185, file: !10186, line: 95, type: !1059)
!10189 = !DILocalVariable(name: "out_char", arg: 2, scope: !10185, file: !10186, line: 95, type: !186)
!10190 = !DILocation(line: 0, scope: !10185)
!10191 = !DILocation(line: 105, column: 2, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10185, file: !10186, line: 105, column: 2)
!10193 = !{i64 2154449465}
!10194 = !DILocation(line: 106, column: 2, scope: !10185)
!10195 = !DILocation(line: 107, column: 1, scope: !10185)
!10196 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1053, file: !1053, line: 574, type: !1077, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1047, retainedNodes: !10197)
!10197 = !{!10198, !10199, !10200}
!10198 = !DILocalVariable(name: "dev", arg: 1, scope: !10196, file: !1053, line: 574, type: !1059)
!10199 = !DILocalVariable(name: "out_char", arg: 2, scope: !10196, file: !1053, line: 575, type: !186)
!10200 = !DILocalVariable(name: "api", scope: !10196, file: !1053, line: 577, type: !1050)
!10201 = !DILocation(line: 0, scope: !10196)
!10202 = !DILocation(line: 578, column: 40, scope: !10196)
!10203 = !DILocation(line: 580, column: 7, scope: !10196)
!10204 = !DILocation(line: 580, column: 2, scope: !10196)
!10205 = !DILocation(line: 581, column: 1, scope: !10196)
!10206 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !429, file: !429, line: 730, type: !10158, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1047, retainedNodes: !10207)
!10207 = !{!10208}
!10208 = !DILocalVariable(name: "dev", arg: 1, scope: !10206, file: !429, line: 730, type: !1059)
!10209 = !DILocation(line: 0, scope: !10206)
!10210 = !DILocation(line: 732, column: 9, scope: !10206)
!10211 = !DILocation(line: 732, column: 2, scope: !10206)
!10212 = distinct !DISubprogram(name: "uart_register_input", scope: !1104, file: !1104, line: 560, type: !10213, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1047, retainedNodes: !10258)
!10213 = !DISubroutineType(types: !10214)
!10214 = !{null, !10215, !10215, !10255}
!10215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10216, size: 32)
!10216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !137, line: 2208, size: 128, elements: !10217)
!10217 = !{!10218}
!10218 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10216, file: !137, line: 2209, baseType: !10219, size: 128)
!10219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !137, line: 1709, size: 128, elements: !10220)
!10220 = !{!10221, !10234, !10236}
!10221 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10219, file: !137, line: 1710, baseType: !10222, size: 64)
!10222 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10223, line: 46, baseType: !10224)
!10223 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10223, line: 41, size: 64, elements: !10225)
!10225 = !{!10226, !10233}
!10226 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10224, file: !10223, line: 42, baseType: !10227, size: 32)
!10227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10228, size: 32)
!10228 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10223, line: 39, baseType: !10229)
!10229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10223, line: 35, size: 32, elements: !10230)
!10230 = !{!10231}
!10231 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10229, file: !10223, line: 36, baseType: !10232, size: 32)
!10232 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10223, line: 32, baseType: !108)
!10233 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10224, file: !10223, line: 43, baseType: !10227, size: 32, offset: 32)
!10234 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10219, file: !137, line: 1711, baseType: !10235, offset: 64)
!10235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!10236 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10219, file: !137, line: 1712, baseType: !10237, size: 64, offset: 64)
!10237 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !10238)
!10238 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !10239)
!10239 = !{!10240}
!10240 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10238, file: !141, line: 232, baseType: !10241, size: 64)
!10241 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !10242)
!10242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !10243)
!10243 = !{!10244, !10250}
!10244 = !DIDerivedType(tag: DW_TAG_member, scope: !10242, file: !146, line: 38, baseType: !10245, size: 32)
!10245 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10242, file: !146, line: 38, size: 32, elements: !10246)
!10246 = !{!10247, !10249}
!10247 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10245, file: !146, line: 39, baseType: !10248, size: 32)
!10248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10242, size: 32)
!10249 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10245, file: !146, line: 40, baseType: !10248, size: 32)
!10250 = !DIDerivedType(tag: DW_TAG_member, scope: !10242, file: !146, line: 42, baseType: !10251, size: 32, offset: 32)
!10251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10242, file: !146, line: 42, size: 32, elements: !10252)
!10252 = !{!10253, !10254}
!10253 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10251, file: !146, line: 43, baseType: !10248, size: 32)
!10254 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10251, file: !146, line: 44, baseType: !10248, size: 32)
!10255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10256, size: 32)
!10256 = !DISubroutineType(types: !10257)
!10257 = !{!185, !277, !185}
!10258 = !{!10259, !10260, !10261}
!10259 = !DILocalVariable(name: "avail", arg: 1, scope: !10212, file: !1104, line: 560, type: !10215)
!10260 = !DILocalVariable(name: "lines", arg: 2, scope: !10212, file: !1104, line: 560, type: !10215)
!10261 = !DILocalVariable(name: "completion", arg: 3, scope: !10212, file: !1104, line: 561, type: !10255)
!10262 = !DILocation(line: 0, scope: !10212)
!10263 = !DILocation(line: 566, column: 1, scope: !10212)
!10264 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1282, file: !1282, line: 523, type: !1140, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10265)
!10265 = !{!10266, !10267, !10268, !10269, !10270}
!10266 = !DILocalVariable(name: "dev", arg: 1, scope: !10264, file: !1282, line: 523, type: !1142)
!10267 = !DILocalVariable(name: "pin", arg: 2, scope: !10264, file: !1282, line: 524, type: !1157)
!10268 = !DILocalVariable(name: "flags", arg: 3, scope: !10264, file: !1282, line: 524, type: !1158)
!10269 = !DILocalVariable(name: "err", scope: !10264, file: !1282, line: 526, type: !103)
!10270 = !DILocalVariable(name: "pincfg", scope: !10264, file: !1282, line: 527, type: !103)
!10271 = !DILocation(line: 0, scope: !10264)
!10272 = !DILocation(line: 527, column: 2, scope: !10264)
!10273 = !DILocation(line: 532, column: 8, scope: !10264)
!10274 = !DILocation(line: 533, column: 10, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !10264, file: !1282, line: 533, column: 6)
!10276 = !DILocation(line: 533, column: 6, scope: !10264)
!10277 = !DILocation(line: 543, column: 13, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10264, file: !1282, line: 543, column: 6)
!10279 = !DILocation(line: 543, column: 28, scope: !10278)
!10280 = !DILocation(line: 543, column: 6, scope: !10264)
!10281 = !DILocation(line: 544, column: 14, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10283, file: !1282, line: 544, column: 7)
!10283 = distinct !DILexicalBlock(scope: !10278, file: !1282, line: 543, column: 34)
!10284 = !DILocation(line: 544, column: 39, scope: !10282)
!10285 = !DILocation(line: 544, column: 7, scope: !10283)
!10286 = !DILocation(line: 545, column: 38, scope: !10287)
!10287 = distinct !DILexicalBlock(scope: !10282, file: !1282, line: 544, column: 45)
!10288 = !DILocation(line: 545, column: 4, scope: !10287)
!10289 = !DILocation(line: 546, column: 3, scope: !10287)
!10290 = !DILocation(line: 546, column: 21, scope: !10291)
!10291 = distinct !DILexicalBlock(scope: !10282, file: !1282, line: 546, column: 14)
!10292 = !DILocation(line: 546, column: 45, scope: !10291)
!10293 = !DILocation(line: 546, column: 14, scope: !10282)
!10294 = !DILocation(line: 547, column: 40, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10291, file: !1282, line: 546, column: 51)
!10296 = !DILocation(line: 547, column: 4, scope: !10295)
!10297 = !DILocation(line: 548, column: 3, scope: !10295)
!10298 = !DILocation(line: 551, column: 32, scope: !10264)
!10299 = !DILocation(line: 551, column: 37, scope: !10264)
!10300 = !DILocation(line: 551, column: 2, scope: !10264)
!10301 = !DILocation(line: 554, column: 6, scope: !10264)
!10302 = !DILocation(line: 562, column: 1, scope: !10264)
!10303 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1282, file: !1282, line: 410, type: !10304, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10306)
!10304 = !DISubroutineType(types: !10305)
!10305 = !{!103, !1142, !969}
!10306 = !{!10307, !10308, !10309, !10311}
!10307 = !DILocalVariable(name: "dev", arg: 1, scope: !10303, file: !1282, line: 410, type: !1142)
!10308 = !DILocalVariable(name: "value", arg: 2, scope: !10303, file: !1282, line: 410, type: !969)
!10309 = !DILocalVariable(name: "cfg", scope: !10303, file: !1282, line: 412, type: !10310)
!10310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 32)
!10311 = !DILocalVariable(name: "gpio", scope: !10303, file: !1282, line: 413, type: !1215)
!10312 = !DILocation(line: 0, scope: !10303)
!10313 = !DILocation(line: 412, column: 45, scope: !10303)
!10314 = !DILocation(line: 413, column: 44, scope: !10303)
!10315 = !DILocation(line: 415, column: 11, scope: !10303)
!10316 = !DILocation(line: 415, column: 9, scope: !10303)
!10317 = !DILocation(line: 417, column: 2, scope: !10303)
!10318 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1282, file: !1282, line: 420, type: !1167, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10319)
!10319 = !{!10320, !10321, !10322, !10323, !10324, !10325}
!10320 = !DILocalVariable(name: "dev", arg: 1, scope: !10318, file: !1282, line: 420, type: !1142)
!10321 = !DILocalVariable(name: "mask", arg: 2, scope: !10318, file: !1282, line: 421, type: !1169)
!10322 = !DILocalVariable(name: "value", arg: 3, scope: !10318, file: !1282, line: 422, type: !1164)
!10323 = !DILocalVariable(name: "cfg", scope: !10318, file: !1282, line: 424, type: !10310)
!10324 = !DILocalVariable(name: "gpio", scope: !10318, file: !1282, line: 425, type: !1215)
!10325 = !DILocalVariable(name: "port_value", scope: !10318, file: !1282, line: 426, type: !108)
!10326 = !DILocation(line: 0, scope: !10318)
!10327 = !DILocation(line: 424, column: 45, scope: !10318)
!10328 = !DILocation(line: 425, column: 44, scope: !10318)
!10329 = !DILocation(line: 430, column: 15, scope: !10318)
!10330 = !DILocation(line: 431, column: 46, scope: !10318)
!10331 = !DILocation(line: 431, column: 44, scope: !10318)
!10332 = !DILocation(line: 431, column: 61, scope: !10318)
!10333 = !DILocation(line: 431, column: 53, scope: !10318)
!10334 = !DILocation(line: 431, column: 2, scope: !10318)
!10335 = !DILocation(line: 435, column: 2, scope: !10318)
!10336 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1282, file: !1282, line: 438, type: !1172, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10337)
!10337 = !{!10338, !10339, !10340, !10341}
!10338 = !DILocalVariable(name: "dev", arg: 1, scope: !10336, file: !1282, line: 438, type: !1142)
!10339 = !DILocalVariable(name: "pins", arg: 2, scope: !10336, file: !1282, line: 439, type: !1169)
!10340 = !DILocalVariable(name: "cfg", scope: !10336, file: !1282, line: 441, type: !10310)
!10341 = !DILocalVariable(name: "gpio", scope: !10336, file: !1282, line: 442, type: !1215)
!10342 = !DILocation(line: 0, scope: !10336)
!10343 = !DILocation(line: 441, column: 45, scope: !10336)
!10344 = !DILocation(line: 442, column: 44, scope: !10336)
!10345 = !DILocation(line: 448, column: 2, scope: !10336)
!10346 = !DILocation(line: 450, column: 2, scope: !10336)
!10347 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1282, file: !1282, line: 453, type: !1172, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10348)
!10348 = !{!10349, !10350, !10351, !10352}
!10349 = !DILocalVariable(name: "dev", arg: 1, scope: !10347, file: !1282, line: 453, type: !1142)
!10350 = !DILocalVariable(name: "pins", arg: 2, scope: !10347, file: !1282, line: 454, type: !1169)
!10351 = !DILocalVariable(name: "cfg", scope: !10347, file: !1282, line: 456, type: !10310)
!10352 = !DILocalVariable(name: "gpio", scope: !10347, file: !1282, line: 457, type: !1215)
!10353 = !DILocation(line: 0, scope: !10347)
!10354 = !DILocation(line: 456, column: 45, scope: !10347)
!10355 = !DILocation(line: 457, column: 44, scope: !10347)
!10356 = !DILocation(line: 467, column: 2, scope: !10347)
!10357 = !DILocation(line: 470, column: 2, scope: !10347)
!10358 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1282, file: !1282, line: 473, type: !1172, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10359)
!10359 = !{!10360, !10361, !10362, !10363}
!10360 = !DILocalVariable(name: "dev", arg: 1, scope: !10358, file: !1282, line: 473, type: !1142)
!10361 = !DILocalVariable(name: "pins", arg: 2, scope: !10358, file: !1282, line: 474, type: !1169)
!10362 = !DILocalVariable(name: "cfg", scope: !10358, file: !1282, line: 476, type: !10310)
!10363 = !DILocalVariable(name: "gpio", scope: !10358, file: !1282, line: 477, type: !1215)
!10364 = !DILocation(line: 0, scope: !10358)
!10365 = !DILocation(line: 476, column: 45, scope: !10358)
!10366 = !DILocation(line: 477, column: 44, scope: !10358)
!10367 = !DILocation(line: 484, column: 2, scope: !10358)
!10368 = !DILocation(line: 487, column: 2, scope: !10358)
!10369 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1282, file: !1282, line: 594, type: !1178, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10370)
!10370 = !{!10371, !10372, !10373, !10374, !10375, !10376, !10378, !10379, !10380}
!10371 = !DILocalVariable(name: "dev", arg: 1, scope: !10369, file: !1282, line: 594, type: !1142)
!10372 = !DILocalVariable(name: "pin", arg: 2, scope: !10369, file: !1282, line: 595, type: !1157)
!10373 = !DILocalVariable(name: "mode", arg: 3, scope: !10369, file: !1282, line: 596, type: !1116)
!10374 = !DILocalVariable(name: "trig", arg: 4, scope: !10369, file: !1282, line: 597, type: !1122)
!10375 = !DILocalVariable(name: "cfg", scope: !10369, file: !1282, line: 599, type: !10310)
!10376 = !DILocalVariable(name: "data", scope: !10369, file: !1282, line: 600, type: !10377)
!10377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 32)
!10378 = !DILocalVariable(name: "edge", scope: !10369, file: !1282, line: 601, type: !103)
!10379 = !DILocalVariable(name: "err", scope: !10369, file: !1282, line: 602, type: !103)
!10380 = !DILabel(scope: !10369, name: "exit", file: !1282, line: 643)
!10381 = !DILocation(line: 0, scope: !10369)
!10382 = !DILocation(line: 599, column: 45, scope: !10369)
!10383 = !DILocation(line: 604, column: 6, scope: !10369)
!10384 = !DILocation(line: 605, column: 34, scope: !10385)
!10385 = distinct !DILexicalBlock(scope: !10386, file: !1282, line: 605, column: 7)
!10386 = distinct !DILexicalBlock(scope: !10387, file: !1282, line: 604, column: 38)
!10387 = distinct !DILexicalBlock(scope: !10369, file: !1282, line: 604, column: 6)
!10388 = !DILocation(line: 605, column: 7, scope: !10385)
!10389 = !DILocation(line: 605, column: 47, scope: !10385)
!10390 = !DILocation(line: 605, column: 39, scope: !10385)
!10391 = !DILocation(line: 605, column: 7, scope: !10386)
!10392 = !DILocation(line: 606, column: 4, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10385, file: !1282, line: 605, column: 53)
!10394 = !DILocation(line: 607, column: 4, scope: !10393)
!10395 = !DILocation(line: 608, column: 4, scope: !10393)
!10396 = !DILocation(line: 609, column: 3, scope: !10393)
!10397 = !DILocation(line: 600, column: 38, scope: !10369)
!10398 = !DILocation(line: 620, column: 30, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10369, file: !1282, line: 620, column: 6)
!10400 = !DILocation(line: 620, column: 6, scope: !10399)
!10401 = !DILocation(line: 620, column: 57, scope: !10399)
!10402 = !DILocation(line: 620, column: 6, scope: !10369)
!10403 = !DILocation(line: 625, column: 29, scope: !10369)
!10404 = !DILocation(line: 625, column: 2, scope: !10369)
!10405 = !DILocation(line: 627, column: 2, scope: !10369)
!10406 = !DILocation(line: 630, column: 3, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !10369, file: !1282, line: 627, column: 16)
!10408 = !DILocation(line: 633, column: 3, scope: !10407)
!10409 = !DILocation(line: 636, column: 3, scope: !10407)
!10410 = !DILocation(line: 639, column: 2, scope: !10369)
!10411 = !DILocation(line: 641, column: 2, scope: !10369)
!10412 = !DILocation(line: 643, column: 1, scope: !10369)
!10413 = !DILocation(line: 644, column: 2, scope: !10369)
!10414 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1282, file: !1282, line: 647, type: !1182, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10415)
!10415 = !{!10416, !10417, !10418, !10419}
!10416 = !DILocalVariable(name: "dev", arg: 1, scope: !10414, file: !1282, line: 647, type: !1142)
!10417 = !DILocalVariable(name: "callback", arg: 2, scope: !10414, file: !1282, line: 648, type: !1184)
!10418 = !DILocalVariable(name: "set", arg: 3, scope: !10414, file: !1282, line: 649, type: !131)
!10419 = !DILocalVariable(name: "data", scope: !10414, file: !1282, line: 651, type: !10377)
!10420 = !DILocation(line: 0, scope: !10414)
!10421 = !DILocation(line: 651, column: 38, scope: !10414)
!10422 = !DILocation(line: 653, column: 37, scope: !10414)
!10423 = !DILocation(line: 653, column: 9, scope: !10414)
!10424 = !DILocation(line: 653, column: 2, scope: !10414)
!10425 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10426, file: !10426, line: 38, type: !10427, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10430)
!10426 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10427 = !DISubroutineType(types: !10428)
!10428 = !{!103, !10429, !1184, !131}
!10429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 32)
!10430 = !{!10431, !10432, !10433}
!10431 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10425, file: !10426, line: 38, type: !10429)
!10432 = !DILocalVariable(name: "callback", arg: 2, scope: !10425, file: !10426, line: 39, type: !1184)
!10433 = !DILocalVariable(name: "set", arg: 3, scope: !10425, file: !10426, line: 40, type: !131)
!10434 = !DILocation(line: 0, scope: !10425)
!10435 = !DILocation(line: 45, column: 7, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10425, file: !10426, line: 45, column: 6)
!10437 = !DILocation(line: 45, column: 6, scope: !10425)
!10438 = !DILocation(line: 46, column: 56, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10440, file: !10426, line: 46, column: 7)
!10440 = distinct !DILexicalBlock(scope: !10436, file: !10426, line: 45, column: 38)
!10441 = !DILocation(line: 46, column: 8, scope: !10439)
!10442 = !DILocation(line: 46, column: 7, scope: !10440)
!10443 = !DILocation(line: 51, column: 13, scope: !10436)
!10444 = !DILocation(line: 56, column: 43, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10446, file: !10426, line: 55, column: 11)
!10446 = distinct !DILexicalBlock(scope: !10425, file: !10426, line: 55, column: 6)
!10447 = !DILocation(line: 56, column: 3, scope: !10445)
!10448 = !DILocation(line: 57, column: 2, scope: !10445)
!10449 = !DILocation(line: 60, column: 1, scope: !10425)
!10450 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1189, file: !1189, line: 261, type: !10451, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10453)
!10451 = !DISubroutineType(types: !10452)
!10452 = !{!131, !10429}
!10453 = !{!10454}
!10454 = !DILocalVariable(name: "list", arg: 1, scope: !10450, file: !1189, line: 261, type: !10429)
!10455 = !DILocation(line: 0, scope: !10450)
!10456 = !DILocation(line: 261, column: 1, scope: !10450)
!10457 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1189, file: !1189, line: 417, type: !10458, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10460)
!10458 = !DISubroutineType(types: !10459)
!10459 = !{!131, !10429, !1358}
!10460 = !{!10461, !10462, !10463, !10464}
!10461 = !DILocalVariable(name: "list", arg: 1, scope: !10457, file: !1189, line: 417, type: !10429)
!10462 = !DILocalVariable(name: "node", arg: 2, scope: !10457, file: !1189, line: 417, type: !1358)
!10463 = !DILocalVariable(name: "prev", scope: !10457, file: !1189, line: 417, type: !1358)
!10464 = !DILocalVariable(name: "test", scope: !10457, file: !1189, line: 417, type: !1358)
!10465 = !DILocation(line: 0, scope: !10457)
!10466 = !DILocation(line: 417, column: 1, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10457, file: !1189, line: 417, column: 1)
!10468 = !DILocation(line: 417, column: 1, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10467, file: !1189, line: 417, column: 1)
!10470 = !DILocation(line: 417, column: 1, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10472, file: !1189, line: 417, column: 1)
!10472 = distinct !DILexicalBlock(scope: !10469, file: !1189, line: 417, column: 1)
!10473 = !DILocation(line: 417, column: 1, scope: !10472)
!10474 = distinct !{!10474, !10466, !10466}
!10475 = !DILocation(line: 417, column: 1, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10471, file: !1189, line: 417, column: 1)
!10477 = !DILocation(line: 417, column: 1, scope: !10457)
!10478 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1189, file: !1189, line: 298, type: !10479, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10481)
!10479 = !DISubroutineType(types: !10480)
!10480 = !{null, !10429, !1358}
!10481 = !{!10482, !10483}
!10482 = !DILocalVariable(name: "list", arg: 1, scope: !10478, file: !1189, line: 298, type: !10429)
!10483 = !DILocalVariable(name: "node", arg: 2, scope: !10478, file: !1189, line: 298, type: !1358)
!10484 = !DILocation(line: 0, scope: !10478)
!10485 = !DILocation(line: 298, column: 1, scope: !10478)
!10486 = !DILocation(line: 298, column: 1, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10478, file: !1189, line: 298, column: 1)
!10488 = !DILocation(line: 298, column: 1, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10487, file: !1189, line: 298, column: 1)
!10490 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1189, file: !1189, line: 231, type: !10491, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10493)
!10491 = !DISubroutineType(types: !10492)
!10492 = !{!1358, !10429}
!10493 = !{!10494}
!10494 = !DILocalVariable(name: "list", arg: 1, scope: !10490, file: !1189, line: 231, type: !10429)
!10495 = !DILocation(line: 0, scope: !10490)
!10496 = !DILocation(line: 233, column: 15, scope: !10490)
!10497 = !DILocation(line: 233, column: 2, scope: !10490)
!10498 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1189, file: !1189, line: 209, type: !10499, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10501)
!10499 = !DISubroutineType(types: !10500)
!10500 = !{null, !1358, !1358}
!10501 = !{!10502, !10503}
!10502 = !DILocalVariable(name: "parent", arg: 1, scope: !10498, file: !1189, line: 209, type: !1358)
!10503 = !DILocalVariable(name: "child", arg: 2, scope: !10498, file: !1189, line: 209, type: !1358)
!10504 = !DILocation(line: 0, scope: !10498)
!10505 = !DILocation(line: 211, column: 10, scope: !10498)
!10506 = !DILocation(line: 211, column: 15, scope: !10498)
!10507 = !DILocation(line: 212, column: 1, scope: !10498)
!10508 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1189, file: !1189, line: 214, type: !10479, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10509)
!10509 = !{!10510, !10511}
!10510 = !DILocalVariable(name: "list", arg: 1, scope: !10508, file: !1189, line: 214, type: !10429)
!10511 = !DILocalVariable(name: "node", arg: 2, scope: !10508, file: !1189, line: 214, type: !1358)
!10512 = !DILocation(line: 0, scope: !10508)
!10513 = !DILocation(line: 216, column: 8, scope: !10508)
!10514 = !DILocation(line: 216, column: 13, scope: !10508)
!10515 = !DILocation(line: 217, column: 1, scope: !10508)
!10516 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1189, file: !1189, line: 243, type: !10491, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10517)
!10517 = !{!10518}
!10518 = !DILocalVariable(name: "list", arg: 1, scope: !10516, file: !1189, line: 243, type: !10429)
!10519 = !DILocation(line: 0, scope: !10516)
!10520 = !DILocation(line: 245, column: 15, scope: !10516)
!10521 = !DILocation(line: 245, column: 2, scope: !10516)
!10522 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1189, file: !1189, line: 219, type: !10479, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10523)
!10523 = !{!10524, !10525}
!10524 = !DILocalVariable(name: "list", arg: 1, scope: !10522, file: !1189, line: 219, type: !10429)
!10525 = !DILocalVariable(name: "node", arg: 2, scope: !10522, file: !1189, line: 219, type: !1358)
!10526 = !DILocation(line: 0, scope: !10522)
!10527 = !DILocation(line: 221, column: 8, scope: !10522)
!10528 = !DILocation(line: 221, column: 13, scope: !10522)
!10529 = !DILocation(line: 222, column: 1, scope: !10522)
!10530 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1189, file: !1189, line: 401, type: !10531, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10533)
!10531 = !DISubroutineType(types: !10532)
!10532 = !{null, !10429, !1358, !1358}
!10533 = !{!10534, !10535, !10536}
!10534 = !DILocalVariable(name: "list", arg: 1, scope: !10530, file: !1189, line: 401, type: !10429)
!10535 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10530, file: !1189, line: 401, type: !1358)
!10536 = !DILocalVariable(name: "node", arg: 3, scope: !10530, file: !1189, line: 401, type: !1358)
!10537 = !DILocation(line: 0, scope: !10530)
!10538 = !DILocation(line: 401, column: 1, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10530, file: !1189, line: 401, column: 1)
!10540 = !DILocation(line: 0, scope: !10539)
!10541 = !DILocation(line: 401, column: 1, scope: !10530)
!10542 = !DILocation(line: 401, column: 1, scope: !10543)
!10543 = distinct !DILexicalBlock(scope: !10539, file: !1189, line: 401, column: 1)
!10544 = !DILocation(line: 401, column: 1, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10543, file: !1189, line: 401, column: 1)
!10546 = !DILocation(line: 401, column: 1, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10545, file: !1189, line: 401, column: 1)
!10548 = !DILocation(line: 401, column: 1, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10539, file: !1189, line: 401, column: 1)
!10550 = !DILocation(line: 401, column: 1, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10549, file: !1189, line: 401, column: 1)
!10552 = !DILocation(line: 401, column: 1, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10551, file: !1189, line: 401, column: 1)
!10554 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1189, file: !1189, line: 285, type: !10555, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10557)
!10555 = !DISubroutineType(types: !10556)
!10556 = !{!1358, !1358}
!10557 = !{!10558}
!10558 = !DILocalVariable(name: "node", arg: 1, scope: !10554, file: !1189, line: 285, type: !1358)
!10559 = !DILocation(line: 0, scope: !10554)
!10560 = !DILocation(line: 285, column: 1, scope: !10554)
!10561 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1189, file: !1189, line: 274, type: !10555, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10562)
!10562 = !{!10563}
!10563 = !DILocalVariable(name: "node", arg: 1, scope: !10561, file: !1189, line: 274, type: !1358)
!10564 = !DILocation(line: 0, scope: !10561)
!10565 = !DILocation(line: 274, column: 1, scope: !10561)
!10566 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1189, file: !1189, line: 204, type: !10555, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10567)
!10567 = !{!10568}
!10568 = !DILocalVariable(name: "node", arg: 1, scope: !10566, file: !1189, line: 204, type: !1358)
!10569 = !DILocation(line: 0, scope: !10566)
!10570 = !DILocation(line: 206, column: 15, scope: !10566)
!10571 = !DILocation(line: 206, column: 2, scope: !10566)
!10572 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1282, file: !1282, line: 342, type: !396, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10573)
!10573 = !{!10574, !10575, !10576}
!10574 = !DILocalVariable(name: "pin", arg: 1, scope: !10572, file: !1282, line: 342, type: !103)
!10575 = !DILocalVariable(name: "line", scope: !10572, file: !1282, line: 344, type: !108)
!10576 = !DILocalVariable(name: "port", scope: !10572, file: !1282, line: 345, type: !103)
!10577 = !DILocation(line: 0, scope: !10572)
!10578 = !DILocation(line: 344, column: 18, scope: !10572)
!10579 = !{i32 983040, i32 0}
!10580 = !DILocation(line: 356, column: 9, scope: !10572)
!10581 = !DILocation(line: 370, column: 2, scope: !10572)
!10582 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1282, file: !1282, line: 37, type: !828, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10583)
!10583 = !{!10584, !10585, !10586}
!10584 = !DILocalVariable(name: "line", arg: 1, scope: !10582, file: !1282, line: 37, type: !103)
!10585 = !DILocalVariable(name: "arg", arg: 2, scope: !10582, file: !1282, line: 37, type: !102)
!10586 = !DILocalVariable(name: "data", scope: !10582, file: !1282, line: 39, type: !10377)
!10587 = !DILocation(line: 0, scope: !10582)
!10588 = !DILocation(line: 41, column: 29, scope: !10582)
!10589 = !DILocation(line: 41, column: 39, scope: !10582)
!10590 = !DILocation(line: 41, column: 44, scope: !10582)
!10591 = !DILocation(line: 41, column: 2, scope: !10582)
!10592 = !DILocation(line: 42, column: 1, scope: !10582)
!10593 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1282, file: !1282, line: 376, type: !10594, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10596)
!10594 = !DISubroutineType(types: !10595)
!10595 = !{!103, !103, !103}
!10596 = !{!10597, !10598, !10599, !10601, !10602}
!10597 = !DILocalVariable(name: "port", arg: 1, scope: !10593, file: !1282, line: 376, type: !103)
!10598 = !DILocalVariable(name: "pin", arg: 2, scope: !10593, file: !1282, line: 376, type: !103)
!10599 = !DILocalVariable(name: "clk", scope: !10593, file: !1282, line: 386, type: !10600)
!10600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1142)
!10601 = !DILocalVariable(name: "pclken", scope: !10593, file: !1282, line: 387, type: !1401)
!10602 = !DILocalVariable(name: "ret", scope: !10593, file: !1282, line: 396, type: !103)
!10603 = !DILocation(line: 0, scope: !10593)
!10604 = !DILocation(line: 387, column: 2, scope: !10593)
!10605 = !DILocation(line: 387, column: 22, scope: !10593)
!10606 = !DILocation(line: 399, column: 8, scope: !10593)
!10607 = !DILocation(line: 400, column: 10, scope: !10608)
!10608 = distinct !DILexicalBlock(scope: !10593, file: !1282, line: 400, column: 6)
!10609 = !DILocation(line: 400, column: 6, scope: !10593)
!10610 = !DILocation(line: 405, column: 2, scope: !10593)
!10611 = !DILocation(line: 407, column: 2, scope: !10593)
!10612 = !DILocation(line: 408, column: 1, scope: !10593)
!10613 = distinct !DISubprogram(name: "clock_control_on", scope: !918, file: !918, line: 123, type: !1247, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10614)
!10614 = !{!10615, !10616, !10617}
!10615 = !DILocalVariable(name: "dev", arg: 1, scope: !10613, file: !918, line: 123, type: !1142)
!10616 = !DILocalVariable(name: "sys", arg: 2, scope: !10613, file: !918, line: 124, type: !1013)
!10617 = !DILocalVariable(name: "api", scope: !10613, file: !918, line: 126, type: !1240)
!10618 = !DILocation(line: 0, scope: !10613)
!10619 = !DILocation(line: 127, column: 49, scope: !10613)
!10620 = !DILocation(line: 129, column: 14, scope: !10613)
!10621 = !DILocation(line: 129, column: 9, scope: !10613)
!10622 = !DILocation(line: 129, column: 2, scope: !10613)
!10623 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1282, file: !1282, line: 311, type: !9742, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10624)
!10624 = !{!10625, !10626, !10627}
!10625 = !DILocalVariable(name: "port", arg: 1, scope: !10623, file: !1282, line: 311, type: !103)
!10626 = !DILocalVariable(name: "pin", arg: 2, scope: !10623, file: !1282, line: 311, type: !103)
!10627 = !DILocalVariable(name: "line", scope: !10623, file: !1282, line: 313, type: !108)
!10628 = !DILocation(line: 0, scope: !10623)
!10629 = !DILocation(line: 313, column: 18, scope: !10623)
!10630 = !DILocation(line: 337, column: 2, scope: !10623)
!10631 = !DILocation(line: 340, column: 1, scope: !10623)
!10632 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1282, file: !1282, line: 295, type: !10633, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10635)
!10633 = !DISubroutineType(types: !10634)
!10634 = !{!108, !103}
!10635 = !{!10636}
!10636 = !DILocalVariable(name: "pin", arg: 1, scope: !10632, file: !1282, line: 295, type: !103)
!10637 = !DILocation(line: 0, scope: !10632)
!10638 = !DILocation(line: 307, column: 46, scope: !10632)
!10639 = !DILocation(line: 307, column: 27, scope: !10632)
!10640 = !DILocation(line: 307, column: 32, scope: !10632)
!10641 = !DILocation(line: 307, column: 14, scope: !10632)
!10642 = !DILocation(line: 307, column: 39, scope: !10632)
!10643 = !DILocation(line: 307, column: 2, scope: !10632)
!10644 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !7037, file: !7037, line: 671, type: !10645, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10647)
!10645 = !DISubroutineType(types: !10646)
!10646 = !{null, !108, !108}
!10647 = !{!10648, !10649}
!10648 = !DILocalVariable(name: "Port", arg: 1, scope: !10644, file: !7037, line: 671, type: !108)
!10649 = !DILocalVariable(name: "Line", arg: 2, scope: !10644, file: !7037, line: 671, type: !108)
!10650 = !DILocation(line: 0, scope: !10644)
!10651 = !DILocation(line: 673, column: 3, scope: !10644)
!10652 = !DILocalVariable(name: "value", arg: 1, scope: !10653, file: !7334, line: 373, type: !108)
!10653 = distinct !DISubprogram(name: "__RBIT", scope: !7334, file: !7334, line: 373, type: !8577, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10654)
!10654 = !{!10652, !10655}
!10655 = !DILocalVariable(name: "result", scope: !10653, file: !7334, line: 375, type: !108)
!10656 = !DILocation(line: 0, scope: !10653, inlinedAt: !10657)
!10657 = distinct !DILocation(line: 673, column: 3, scope: !10644)
!10658 = !DILocation(line: 380, column: 4, scope: !10653, inlinedAt: !10657)
!10659 = !{i64 2918939}
!10660 = !DILocalVariable(name: "value", arg: 1, scope: !10661, file: !7334, line: 403, type: !108)
!10661 = distinct !DISubprogram(name: "__CLZ", scope: !7334, file: !7334, line: 403, type: !10662, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10664)
!10662 = !DISubroutineType(types: !10663)
!10663 = !{!185, !108}
!10664 = !{!10660}
!10665 = !DILocation(line: 0, scope: !10661, inlinedAt: !10666)
!10666 = distinct !DILocation(line: 673, column: 3, scope: !10644)
!10667 = !DILocation(line: 414, column: 7, scope: !10661, inlinedAt: !10666)
!10668 = !DILocation(line: 674, column: 1, scope: !10644)
!10669 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10426, file: !10426, line: 69, type: !10670, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10672)
!10670 = !DISubroutineType(types: !10671)
!10671 = !{null, !10429, !1142, !108}
!10672 = !{!10673, !10674, !10675, !10676, !10677}
!10673 = !DILocalVariable(name: "list", arg: 1, scope: !10669, file: !10426, line: 69, type: !10429)
!10674 = !DILocalVariable(name: "port", arg: 2, scope: !10669, file: !10426, line: 70, type: !1142)
!10675 = !DILocalVariable(name: "pins", arg: 3, scope: !10669, file: !10426, line: 71, type: !108)
!10676 = !DILocalVariable(name: "cb", scope: !10669, file: !10426, line: 73, type: !1184)
!10677 = !DILocalVariable(name: "tmp", scope: !10669, file: !10426, line: 73, type: !1184)
!10678 = !DILocation(line: 0, scope: !10669)
!10679 = !DILocation(line: 75, column: 2, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10669, file: !10426, line: 75, column: 2)
!10681 = !DILocation(line: 0, scope: !10680)
!10682 = !DILocation(line: 76, column: 11, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10684, file: !10426, line: 76, column: 7)
!10684 = distinct !DILexicalBlock(scope: !10685, file: !10426, line: 75, column: 57)
!10685 = distinct !DILexicalBlock(scope: !10680, file: !10426, line: 75, column: 2)
!10686 = !DILocation(line: 76, column: 20, scope: !10683)
!10687 = !DILocation(line: 76, column: 7, scope: !10684)
!10688 = !DILocation(line: 78, column: 8, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10683, file: !10426, line: 76, column: 28)
!10690 = !DILocation(line: 78, column: 4, scope: !10689)
!10691 = !DILocation(line: 79, column: 3, scope: !10689)
!10692 = !DILocation(line: 75, column: 2, scope: !10685)
!10693 = !DILocation(line: 81, column: 1, scope: !10669)
!10694 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !7037, file: !7037, line: 710, type: !8577, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10695)
!10695 = !{!10696}
!10696 = !DILocalVariable(name: "Line", arg: 1, scope: !10694, file: !7037, line: 710, type: !108)
!10697 = !DILocation(line: 0, scope: !10694)
!10698 = !DILocation(line: 712, column: 21, scope: !10694)
!10699 = !DILocation(line: 0, scope: !10653, inlinedAt: !10700)
!10700 = distinct !DILocation(line: 712, column: 76, scope: !10694)
!10701 = !DILocation(line: 380, column: 4, scope: !10653, inlinedAt: !10700)
!10702 = !DILocation(line: 0, scope: !10661, inlinedAt: !10703)
!10703 = distinct !DILocation(line: 712, column: 76, scope: !10694)
!10704 = !DILocation(line: 414, column: 7, scope: !10661, inlinedAt: !10703)
!10705 = !DILocation(line: 712, column: 73, scope: !10694)
!10706 = !DILocation(line: 712, column: 3, scope: !10694)
!10707 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10708, file: !10708, line: 910, type: !10709, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10711)
!10708 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10709 = !DISubroutineType(types: !10710)
!10710 = !{null, !1215, !108}
!10711 = !{!10712, !10713}
!10712 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10707, file: !10708, line: 910, type: !1215)
!10713 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10707, file: !10708, line: 910, type: !108)
!10714 = !DILocation(line: 0, scope: !10707)
!10715 = !DILocation(line: 912, column: 3, scope: !10707)
!10716 = !DILocation(line: 913, column: 1, scope: !10707)
!10717 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10708, file: !10708, line: 823, type: !10718, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10720)
!10718 = !DISubroutineType(types: !10719)
!10719 = !{!108, !1215}
!10720 = !{!10721}
!10721 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10717, file: !10708, line: 823, type: !1215)
!10722 = !DILocation(line: 0, scope: !10717)
!10723 = !DILocation(line: 825, column: 21, scope: !10717)
!10724 = !DILocation(line: 825, column: 3, scope: !10717)
!10725 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10708, file: !10708, line: 812, type: !10709, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10726)
!10726 = !{!10727, !10728}
!10727 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10725, file: !10708, line: 812, type: !1215)
!10728 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10725, file: !10708, line: 812, type: !108)
!10729 = !DILocation(line: 0, scope: !10725)
!10730 = !DILocation(line: 814, column: 3, scope: !10725)
!10731 = !DILocation(line: 815, column: 1, scope: !10725)
!10732 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10708, file: !10708, line: 771, type: !10718, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10733)
!10733 = !{!10734}
!10734 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10732, file: !10708, line: 771, type: !1215)
!10735 = !DILocation(line: 0, scope: !10732)
!10736 = !DILocation(line: 773, column: 21, scope: !10732)
!10737 = !DILocation(line: 773, column: 3, scope: !10732)
!10738 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1282, file: !1282, line: 47, type: !10739, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10741)
!10739 = !DISubroutineType(types: !10740)
!10740 = !{!103, !1158, !374}
!10741 = !{!10742, !10743}
!10742 = !DILocalVariable(name: "flags", arg: 1, scope: !10738, file: !1282, line: 47, type: !1158)
!10743 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10738, file: !1282, line: 47, type: !374)
!10744 = !DILocation(line: 0, scope: !10738)
!10745 = !DILocation(line: 50, column: 13, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !10738, file: !1282, line: 50, column: 6)
!10747 = !DILocation(line: 50, column: 28, scope: !10746)
!10748 = !DILocation(line: 50, column: 6, scope: !10738)
!10749 = !DILocation(line: 53, column: 11, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !10746, file: !1282, line: 50, column: 34)
!10751 = !DILocation(line: 55, column: 14, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10750, file: !1282, line: 55, column: 7)
!10753 = !DILocation(line: 55, column: 35, scope: !10752)
!10754 = !DILocation(line: 55, column: 7, scope: !10750)
!10755 = !DILocation(line: 56, column: 14, scope: !10756)
!10756 = distinct !DILexicalBlock(scope: !10757, file: !1282, line: 56, column: 8)
!10757 = distinct !DILexicalBlock(scope: !10752, file: !1282, line: 55, column: 41)
!10758 = !DILocation(line: 56, column: 8, scope: !10757)
!10759 = !DILocation(line: 0, scope: !10752)
!10760 = !DILocation(line: 66, column: 14, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10750, file: !1282, line: 66, column: 7)
!10762 = !DILocation(line: 66, column: 30, scope: !10761)
!10763 = !DILocation(line: 66, column: 7, scope: !10750)
!10764 = !DILocation(line: 67, column: 12, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10761, file: !1282, line: 66, column: 36)
!10766 = !DILocation(line: 68, column: 3, scope: !10765)
!10767 = !DILocation(line: 68, column: 21, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10761, file: !1282, line: 68, column: 14)
!10769 = !DILocation(line: 68, column: 39, scope: !10768)
!10770 = !DILocation(line: 68, column: 14, scope: !10761)
!10771 = !DILocation(line: 69, column: 12, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10768, file: !1282, line: 68, column: 45)
!10773 = !DILocation(line: 70, column: 3, scope: !10772)
!10774 = !DILocation(line: 72, column: 21, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10746, file: !1282, line: 72, column: 14)
!10776 = !DILocation(line: 72, column: 35, scope: !10775)
!10777 = !DILocation(line: 72, column: 14, scope: !10746)
!10778 = !DILocation(line: 77, column: 14, scope: !10779)
!10779 = distinct !DILexicalBlock(scope: !10780, file: !1282, line: 77, column: 7)
!10780 = distinct !DILexicalBlock(scope: !10775, file: !1282, line: 72, column: 41)
!10781 = !DILocation(line: 77, column: 30, scope: !10779)
!10782 = !DILocation(line: 77, column: 7, scope: !10780)
!10783 = !DILocation(line: 0, scope: !10746)
!10784 = !DILocation(line: 90, column: 1, scope: !10738)
!10785 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1282, file: !1282, line: 157, type: !10786, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10788)
!10786 = !DISubroutineType(types: !10787)
!10787 = !{null, !1142, !103, !103, !103}
!10788 = !{!10789, !10790, !10791, !10792, !10793, !10794, !10795, !10796, !10797, !10798, !10799}
!10789 = !DILocalVariable(name: "dev", arg: 1, scope: !10785, file: !1282, line: 157, type: !1142)
!10790 = !DILocalVariable(name: "pin", arg: 2, scope: !10785, file: !1282, line: 157, type: !103)
!10791 = !DILocalVariable(name: "conf", arg: 3, scope: !10785, file: !1282, line: 158, type: !103)
!10792 = !DILocalVariable(name: "func", arg: 4, scope: !10785, file: !1282, line: 158, type: !103)
!10793 = !DILocalVariable(name: "cfg", scope: !10785, file: !1282, line: 160, type: !10310)
!10794 = !DILocalVariable(name: "gpio", scope: !10785, file: !1282, line: 161, type: !1215)
!10795 = !DILocalVariable(name: "pin_ll", scope: !10785, file: !1282, line: 163, type: !103)
!10796 = !DILocalVariable(name: "mode", scope: !10785, file: !1282, line: 227, type: !32)
!10797 = !DILocalVariable(name: "otype", scope: !10785, file: !1282, line: 227, type: !32)
!10798 = !DILocalVariable(name: "ospeed", scope: !10785, file: !1282, line: 227, type: !32)
!10799 = !DILocalVariable(name: "pupd", scope: !10785, file: !1282, line: 227, type: !32)
!10800 = !DILocation(line: 0, scope: !10785)
!10801 = !DILocation(line: 160, column: 45, scope: !10785)
!10802 = !DILocation(line: 161, column: 44, scope: !10785)
!10803 = !DILocation(line: 163, column: 15, scope: !10785)
!10804 = !DILocation(line: 229, column: 14, scope: !10785)
!10805 = !DILocation(line: 246, column: 47, scope: !10785)
!10806 = !DILocation(line: 246, column: 2, scope: !10785)
!10807 = !DILocation(line: 248, column: 43, scope: !10785)
!10808 = !DILocation(line: 248, column: 2, scope: !10785)
!10809 = !DILocation(line: 250, column: 40, scope: !10785)
!10810 = !DILocation(line: 250, column: 2, scope: !10785)
!10811 = !DILocation(line: 252, column: 11, scope: !10812)
!10812 = distinct !DILexicalBlock(scope: !10785, file: !1282, line: 252, column: 6)
!10813 = !DILocation(line: 252, column: 6, scope: !10785)
!10814 = !DILocation(line: 253, column: 11, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10816, file: !1282, line: 253, column: 7)
!10816 = distinct !DILexicalBlock(scope: !10812, file: !1282, line: 252, column: 36)
!10817 = !DILocation(line: 253, column: 7, scope: !10816)
!10818 = !DILocation(line: 254, column: 4, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10815, file: !1282, line: 253, column: 16)
!10820 = !DILocation(line: 255, column: 3, scope: !10819)
!10821 = !DILocation(line: 256, column: 4, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !10815, file: !1282, line: 255, column: 10)
!10823 = !DILocation(line: 260, column: 40, scope: !10785)
!10824 = !DILocation(line: 260, column: 2, scope: !10785)
!10825 = !DILocation(line: 265, column: 1, scope: !10785)
!10826 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1282, file: !1282, line: 137, type: !10633, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10827)
!10827 = !{!10828, !10829}
!10828 = !DILocalVariable(name: "pin", arg: 1, scope: !10826, file: !1282, line: 137, type: !103)
!10829 = !DILocalVariable(name: "pinval", scope: !10826, file: !1282, line: 139, type: !108)
!10830 = !DILocation(line: 0, scope: !10826)
!10831 = !DILocation(line: 149, column: 13, scope: !10826)
!10832 = !DILocation(line: 151, column: 2, scope: !10826)
!10833 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10708, file: !10708, line: 342, type: !10834, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10836)
!10834 = !DISubroutineType(types: !10835)
!10835 = !{null, !1215, !108, !108}
!10836 = !{!10837, !10838, !10839}
!10837 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10833, file: !10708, line: 342, type: !1215)
!10838 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10833, file: !10708, line: 342, type: !108)
!10839 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10833, file: !10708, line: 342, type: !108)
!10840 = !DILocation(line: 0, scope: !10833)
!10841 = !DILocation(line: 344, column: 3, scope: !10833)
!10842 = !DILocation(line: 345, column: 1, scope: !10833)
!10843 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10708, file: !10708, line: 413, type: !10834, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10844)
!10844 = !{!10845, !10846, !10847}
!10845 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10843, file: !10708, line: 413, type: !1215)
!10846 = !DILocalVariable(name: "Pin", arg: 2, scope: !10843, file: !10708, line: 413, type: !108)
!10847 = !DILocalVariable(name: "Speed", arg: 3, scope: !10843, file: !10708, line: 413, type: !108)
!10848 = !DILocation(line: 0, scope: !10843)
!10849 = !DILocation(line: 415, column: 3, scope: !10843)
!10850 = !DILocation(line: 0, scope: !10653, inlinedAt: !10851)
!10851 = distinct !DILocation(line: 415, column: 3, scope: !10843)
!10852 = !DILocation(line: 380, column: 4, scope: !10653, inlinedAt: !10851)
!10853 = !DILocation(line: 0, scope: !10661, inlinedAt: !10854)
!10854 = distinct !DILocation(line: 415, column: 3, scope: !10843)
!10855 = !DILocation(line: 414, column: 7, scope: !10661, inlinedAt: !10854)
!10856 = !DILocation(line: 0, scope: !10653, inlinedAt: !10857)
!10857 = distinct !DILocation(line: 415, column: 3, scope: !10843)
!10858 = !DILocation(line: 0, scope: !10661, inlinedAt: !10859)
!10859 = distinct !DILocation(line: 415, column: 3, scope: !10843)
!10860 = !DILocation(line: 417, column: 1, scope: !10843)
!10861 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10708, file: !10708, line: 484, type: !10834, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10862)
!10862 = !{!10863, !10864, !10865}
!10863 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10861, file: !10708, line: 484, type: !1215)
!10864 = !DILocalVariable(name: "Pin", arg: 2, scope: !10861, file: !10708, line: 484, type: !108)
!10865 = !DILocalVariable(name: "Pull", arg: 3, scope: !10861, file: !10708, line: 484, type: !108)
!10866 = !DILocation(line: 0, scope: !10861)
!10867 = !DILocation(line: 486, column: 3, scope: !10861)
!10868 = !DILocation(line: 0, scope: !10653, inlinedAt: !10869)
!10869 = distinct !DILocation(line: 486, column: 3, scope: !10861)
!10870 = !DILocation(line: 380, column: 4, scope: !10653, inlinedAt: !10869)
!10871 = !DILocation(line: 0, scope: !10661, inlinedAt: !10872)
!10872 = distinct !DILocation(line: 486, column: 3, scope: !10861)
!10873 = !DILocation(line: 414, column: 7, scope: !10661, inlinedAt: !10872)
!10874 = !DILocation(line: 0, scope: !10653, inlinedAt: !10875)
!10875 = distinct !DILocation(line: 486, column: 3, scope: !10861)
!10876 = !DILocation(line: 0, scope: !10661, inlinedAt: !10877)
!10877 = distinct !DILocation(line: 486, column: 3, scope: !10861)
!10878 = !DILocation(line: 487, column: 1, scope: !10861)
!10879 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10708, file: !10708, line: 556, type: !10834, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10880)
!10880 = !{!10881, !10882, !10883}
!10881 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10879, file: !10708, line: 556, type: !1215)
!10882 = !DILocalVariable(name: "Pin", arg: 2, scope: !10879, file: !10708, line: 556, type: !108)
!10883 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10879, file: !10708, line: 556, type: !108)
!10884 = !DILocation(line: 0, scope: !10879)
!10885 = !DILocation(line: 558, column: 3, scope: !10879)
!10886 = !DILocation(line: 0, scope: !10653, inlinedAt: !10887)
!10887 = distinct !DILocation(line: 558, column: 3, scope: !10879)
!10888 = !DILocation(line: 380, column: 4, scope: !10653, inlinedAt: !10887)
!10889 = !DILocation(line: 0, scope: !10661, inlinedAt: !10890)
!10890 = distinct !DILocation(line: 558, column: 3, scope: !10879)
!10891 = !DILocation(line: 414, column: 7, scope: !10661, inlinedAt: !10890)
!10892 = !DILocation(line: 0, scope: !10653, inlinedAt: !10893)
!10893 = distinct !DILocation(line: 558, column: 3, scope: !10879)
!10894 = !DILocation(line: 0, scope: !10661, inlinedAt: !10895)
!10895 = distinct !DILocation(line: 558, column: 3, scope: !10879)
!10896 = !DILocation(line: 560, column: 1, scope: !10879)
!10897 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10708, file: !10708, line: 633, type: !10834, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10898)
!10898 = !{!10899, !10900, !10901}
!10899 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10897, file: !10708, line: 633, type: !1215)
!10900 = !DILocalVariable(name: "Pin", arg: 2, scope: !10897, file: !10708, line: 633, type: !108)
!10901 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10897, file: !10708, line: 633, type: !108)
!10902 = !DILocation(line: 0, scope: !10897)
!10903 = !DILocation(line: 635, column: 3, scope: !10897)
!10904 = !DILocation(line: 0, scope: !10653, inlinedAt: !10905)
!10905 = distinct !DILocation(line: 635, column: 3, scope: !10897)
!10906 = !DILocation(line: 380, column: 4, scope: !10653, inlinedAt: !10905)
!10907 = !DILocation(line: 0, scope: !10661, inlinedAt: !10908)
!10908 = distinct !DILocation(line: 635, column: 3, scope: !10897)
!10909 = !DILocation(line: 414, column: 7, scope: !10661, inlinedAt: !10908)
!10910 = !DILocation(line: 0, scope: !10653, inlinedAt: !10911)
!10911 = distinct !DILocation(line: 635, column: 3, scope: !10897)
!10912 = !DILocation(line: 0, scope: !10661, inlinedAt: !10913)
!10913 = distinct !DILocation(line: 635, column: 3, scope: !10897)
!10914 = !DILocation(line: 637, column: 1, scope: !10897)
!10915 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10708, file: !10708, line: 273, type: !10834, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10916)
!10916 = !{!10917, !10918, !10919}
!10917 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10915, file: !10708, line: 273, type: !1215)
!10918 = !DILocalVariable(name: "Pin", arg: 2, scope: !10915, file: !10708, line: 273, type: !108)
!10919 = !DILocalVariable(name: "Mode", arg: 3, scope: !10915, file: !10708, line: 273, type: !108)
!10920 = !DILocation(line: 0, scope: !10915)
!10921 = !DILocation(line: 275, column: 3, scope: !10915)
!10922 = !DILocation(line: 0, scope: !10653, inlinedAt: !10923)
!10923 = distinct !DILocation(line: 275, column: 3, scope: !10915)
!10924 = !DILocation(line: 380, column: 4, scope: !10653, inlinedAt: !10923)
!10925 = !DILocation(line: 0, scope: !10661, inlinedAt: !10926)
!10926 = distinct !DILocation(line: 275, column: 3, scope: !10915)
!10927 = !DILocation(line: 414, column: 7, scope: !10661, inlinedAt: !10926)
!10928 = !DILocation(line: 0, scope: !10653, inlinedAt: !10929)
!10929 = distinct !DILocation(line: 275, column: 3, scope: !10915)
!10930 = !DILocation(line: 0, scope: !10661, inlinedAt: !10931)
!10931 = distinct !DILocation(line: 275, column: 3, scope: !10915)
!10932 = !DILocation(line: 276, column: 1, scope: !10915)
!10933 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1282, file: !1282, line: 698, type: !1295, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10934)
!10934 = !{!10935, !10936, !10937}
!10935 = !DILocalVariable(name: "dev", arg: 1, scope: !10933, file: !1282, line: 698, type: !1142)
!10936 = !DILocalVariable(name: "data", scope: !10933, file: !1282, line: 700, type: !10377)
!10937 = !DILocalVariable(name: "ret", scope: !10933, file: !1282, line: 701, type: !103)
!10938 = !DILocation(line: 0, scope: !10933)
!10939 = !DILocation(line: 700, column: 38, scope: !10933)
!10940 = !DILocation(line: 703, column: 8, scope: !10933)
!10941 = !DILocation(line: 703, column: 12, scope: !10933)
!10942 = !DILocation(line: 705, column: 7, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !10933, file: !1282, line: 705, column: 6)
!10944 = !DILocation(line: 705, column: 6, scope: !10933)
!10945 = !DILocation(line: 722, column: 8, scope: !10933)
!10946 = !DILocation(line: 723, column: 10, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10933, file: !1282, line: 723, column: 6)
!10948 = !DILocation(line: 723, column: 6, scope: !10933)
!10949 = !DILocation(line: 731, column: 1, scope: !10933)
!10950 = distinct !DISubprogram(name: "device_is_ready", scope: !10157, file: !10157, line: 47, type: !10951, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10953)
!10951 = !DISubroutineType(types: !10952)
!10952 = !{!131, !1142}
!10953 = !{!10954}
!10954 = !DILocalVariable(name: "dev", arg: 1, scope: !10950, file: !10157, line: 47, type: !1142)
!10955 = !DILocation(line: 0, scope: !10950)
!10956 = !DILocation(line: 55, column: 2, scope: !10957)
!10957 = distinct !DILexicalBlock(scope: !10950, file: !10157, line: 55, column: 2)
!10958 = !{i64 2154357281}
!10959 = !DILocation(line: 56, column: 9, scope: !10950)
!10960 = !DILocation(line: 56, column: 2, scope: !10950)
!10961 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1282, file: !1282, line: 270, type: !10962, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10964)
!10962 = !DISubroutineType(types: !10963)
!10963 = !{!103, !1142, !131}
!10964 = !{!10965, !10966, !10967, !10968, !10969}
!10965 = !DILocalVariable(name: "dev", arg: 1, scope: !10961, file: !1282, line: 270, type: !1142)
!10966 = !DILocalVariable(name: "on", arg: 2, scope: !10961, file: !1282, line: 270, type: !131)
!10967 = !DILocalVariable(name: "cfg", scope: !10961, file: !1282, line: 272, type: !10310)
!10968 = !DILocalVariable(name: "ret", scope: !10961, file: !1282, line: 273, type: !103)
!10969 = !DILocalVariable(name: "clk", scope: !10961, file: !1282, line: 278, type: !10600)
!10970 = !DILocation(line: 0, scope: !10961)
!10971 = !DILocation(line: 272, column: 45, scope: !10961)
!10972 = !DILocation(line: 282, column: 38, scope: !10973)
!10973 = distinct !DILexicalBlock(scope: !10974, file: !1282, line: 280, column: 10)
!10974 = distinct !DILexicalBlock(scope: !10961, file: !1282, line: 280, column: 6)
!10975 = !DILocation(line: 282, column: 6, scope: !10973)
!10976 = !DILocation(line: 281, column: 9, scope: !10973)
!10977 = !DILocation(line: 293, column: 1, scope: !10961)
!10978 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !429, file: !429, line: 730, type: !10951, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10979)
!10979 = !{!10980}
!10980 = !DILocalVariable(name: "dev", arg: 1, scope: !10978, file: !429, line: 730, type: !1142)
!10981 = !DILocation(line: 0, scope: !10978)
!10982 = !DILocation(line: 732, column: 9, scope: !10978)
!10983 = !DILocation(line: 732, column: 2, scope: !10978)
!10984 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1282, file: !1282, line: 496, type: !10985, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10987)
!10985 = !DISubroutineType(types: !10986)
!10986 = !{!103, !1142, !103, !103, !103}
!10987 = !{!10988, !10989, !10990, !10991, !10992, !10993}
!10988 = !DILocalVariable(name: "dev", arg: 1, scope: !10984, file: !1282, line: 496, type: !1142)
!10989 = !DILocalVariable(name: "pin", arg: 2, scope: !10984, file: !1282, line: 496, type: !103)
!10990 = !DILocalVariable(name: "conf", arg: 3, scope: !10984, file: !1282, line: 496, type: !103)
!10991 = !DILocalVariable(name: "func", arg: 4, scope: !10984, file: !1282, line: 496, type: !103)
!10992 = !DILocalVariable(name: "ret", scope: !10984, file: !1282, line: 498, type: !103)
!10993 = !DILocalVariable(name: "gpio_out", scope: !10994, file: !1282, line: 508, type: !108)
!10994 = distinct !DILexicalBlock(scope: !10995, file: !1282, line: 507, column: 27)
!10995 = distinct !DILexicalBlock(scope: !10984, file: !1282, line: 507, column: 6)
!10996 = !DILocation(line: 0, scope: !10984)
!10997 = !DILocation(line: 505, column: 2, scope: !10984)
!10998 = !DILocation(line: 507, column: 11, scope: !10995)
!10999 = !DILocation(line: 507, column: 6, scope: !10984)
!11000 = !DILocation(line: 508, column: 28, scope: !10994)
!11001 = !DILocation(line: 0, scope: !10994)
!11002 = !DILocation(line: 510, column: 16, scope: !11003)
!11003 = distinct !DILexicalBlock(scope: !10994, file: !1282, line: 510, column: 7)
!11004 = !DILocation(line: 0, scope: !11003)
!11005 = !DILocation(line: 510, column: 7, scope: !10994)
!11006 = !DILocation(line: 511, column: 4, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !11003, file: !1282, line: 510, column: 32)
!11008 = !DILocation(line: 512, column: 3, scope: !11007)
!11009 = !DILocation(line: 513, column: 4, scope: !11010)
!11010 = distinct !DILexicalBlock(scope: !11011, file: !1282, line: 512, column: 39)
!11011 = distinct !DILexicalBlock(scope: !11003, file: !1282, line: 512, column: 14)
!11012 = !DILocation(line: 514, column: 3, scope: !11010)
!11013 = !DILocation(line: 518, column: 1, scope: !10984)
!11014 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1558, file: !1558, line: 526, type: !1461, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11015)
!11015 = !{!11016, !11017, !11018}
!11016 = !DILocalVariable(name: "dev", arg: 1, scope: !11014, file: !1558, line: 526, type: !1463)
!11017 = !DILocalVariable(name: "c", arg: 2, scope: !11014, file: !1558, line: 526, type: !1074)
!11018 = !DILocalVariable(name: "config", scope: !11014, file: !1558, line: 528, type: !11019)
!11019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 32)
!11020 = !DILocation(line: 0, scope: !11014)
!11021 = !DILocation(line: 528, column: 48, scope: !11014)
!11022 = !DILocation(line: 531, column: 40, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !11014, file: !1558, line: 531, column: 6)
!11024 = !DILocation(line: 531, column: 6, scope: !11023)
!11025 = !DILocation(line: 531, column: 6, scope: !11014)
!11026 = !DILocation(line: 532, column: 34, scope: !11027)
!11027 = distinct !DILexicalBlock(scope: !11023, file: !1558, line: 531, column: 48)
!11028 = !DILocation(line: 532, column: 3, scope: !11027)
!11029 = !DILocation(line: 533, column: 2, scope: !11027)
!11030 = !DILocation(line: 539, column: 42, scope: !11031)
!11031 = distinct !DILexicalBlock(scope: !11014, file: !1558, line: 539, column: 6)
!11032 = !DILocation(line: 539, column: 7, scope: !11031)
!11033 = !DILocation(line: 539, column: 6, scope: !11014)
!11034 = !DILocation(line: 543, column: 52, scope: !11014)
!11035 = !DILocation(line: 543, column: 22, scope: !11014)
!11036 = !DILocation(line: 543, column: 5, scope: !11014)
!11037 = !DILocation(line: 545, column: 2, scope: !11014)
!11038 = !DILocation(line: 546, column: 1, scope: !11014)
!11039 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1558, file: !1558, line: 548, type: !1480, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11040)
!11040 = !{!11041, !11042, !11043, !11044}
!11041 = !DILocalVariable(name: "dev", arg: 1, scope: !11039, file: !1558, line: 548, type: !1463)
!11042 = !DILocalVariable(name: "c", arg: 2, scope: !11039, file: !1558, line: 549, type: !186)
!11043 = !DILocalVariable(name: "config", scope: !11039, file: !1558, line: 551, type: !11019)
!11044 = !DILocalVariable(name: "key", scope: !11039, file: !1558, line: 555, type: !32)
!11045 = !DILocation(line: 0, scope: !11039)
!11046 = !DILocation(line: 551, column: 48, scope: !11039)
!11047 = !DILocation(line: 562, column: 2, scope: !11039)
!11048 = !DILocation(line: 563, column: 41, scope: !11049)
!11049 = distinct !DILexicalBlock(scope: !11050, file: !1558, line: 563, column: 7)
!11050 = distinct !DILexicalBlock(scope: !11039, file: !1558, line: 562, column: 12)
!11051 = !DILocation(line: 563, column: 7, scope: !11049)
!11052 = !DILocation(line: 563, column: 7, scope: !11050)
!11053 = !DILocation(line: 55, column: 2, scope: !11054, inlinedAt: !11058)
!11054 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7016, file: !7016, line: 42, type: !7017, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11055)
!11055 = !{!11056, !11057}
!11056 = !DILocalVariable(name: "key", scope: !11054, file: !7016, line: 44, type: !32)
!11057 = !DILocalVariable(name: "tmp", scope: !11054, file: !7016, line: 53, type: !32)
!11058 = distinct !DILocation(line: 564, column: 10, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11049, file: !1558, line: 563, column: 49)
!11060 = !{i64 2087648}
!11061 = !DILocation(line: 0, scope: !11054, inlinedAt: !11058)
!11062 = !DILocation(line: 565, column: 42, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11059, file: !1558, line: 565, column: 8)
!11064 = !DILocation(line: 565, column: 8, scope: !11063)
!11065 = !DILocation(line: 565, column: 8, scope: !11059)
!11066 = !DILocalVariable(name: "key", arg: 1, scope: !11067, file: !7016, line: 84, type: !32)
!11067 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7016, file: !7016, line: 84, type: !7027, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11068)
!11068 = !{!11066}
!11069 = !DILocation(line: 0, scope: !11067, inlinedAt: !11070)
!11070 = distinct !DILocation(line: 568, column: 4, scope: !11059)
!11071 = !DILocation(line: 95, column: 2, scope: !11067, inlinedAt: !11070)
!11072 = !{i64 2088465}
!11073 = !DILocation(line: 569, column: 3, scope: !11059)
!11074 = distinct !{!11074, !11047, !11075}
!11075 = !DILocation(line: 570, column: 2, scope: !11039)
!11076 = !DILocation(line: 592, column: 33, scope: !11039)
!11077 = !DILocation(line: 592, column: 2, scope: !11039)
!11078 = !DILocation(line: 0, scope: !11067, inlinedAt: !11079)
!11079 = distinct !DILocation(line: 593, column: 2, scope: !11039)
!11080 = !DILocation(line: 95, column: 2, scope: !11067, inlinedAt: !11079)
!11081 = !DILocation(line: 594, column: 1, scope: !11039)
!11082 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1558, file: !1558, line: 596, type: !1484, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11083)
!11083 = !{!11084, !11085, !11086}
!11084 = !DILocalVariable(name: "dev", arg: 1, scope: !11082, file: !1558, line: 596, type: !1463)
!11085 = !DILocalVariable(name: "config", scope: !11082, file: !1558, line: 598, type: !11019)
!11086 = !DILocalVariable(name: "err", scope: !11082, file: !1558, line: 599, type: !108)
!11087 = !DILocation(line: 0, scope: !11082)
!11088 = !DILocation(line: 598, column: 48, scope: !11082)
!11089 = !DILocation(line: 606, column: 40, scope: !11090)
!11090 = distinct !DILexicalBlock(scope: !11082, file: !1558, line: 606, column: 6)
!11091 = !DILocation(line: 606, column: 6, scope: !11090)
!11092 = !DILocation(line: 606, column: 6, scope: !11082)
!11093 = !DILocation(line: 610, column: 39, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !11082, file: !1558, line: 610, column: 6)
!11095 = !DILocation(line: 610, column: 6, scope: !11094)
!11096 = !DILocation(line: 610, column: 6, scope: !11082)
!11097 = !DILocation(line: 614, column: 39, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !11082, file: !1558, line: 614, column: 6)
!11099 = !DILocation(line: 614, column: 6, scope: !11098)
!11100 = !DILocation(line: 614, column: 6, scope: !11082)
!11101 = !DILocation(line: 619, column: 40, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11082, file: !1558, line: 619, column: 6)
!11103 = !DILocation(line: 619, column: 6, scope: !11102)
!11104 = !DILocation(line: 619, column: 6, scope: !11082)
!11105 = !DILocation(line: 623, column: 10, scope: !11106)
!11106 = distinct !DILexicalBlock(scope: !11082, file: !1558, line: 623, column: 6)
!11107 = !DILocation(line: 623, column: 6, scope: !11082)
!11108 = !DILocation(line: 624, column: 34, scope: !11109)
!11109 = distinct !DILexicalBlock(scope: !11106, file: !1558, line: 623, column: 24)
!11110 = !DILocation(line: 624, column: 3, scope: !11109)
!11111 = !DILocation(line: 625, column: 2, scope: !11109)
!11112 = !DILocation(line: 632, column: 10, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11082, file: !1558, line: 632, column: 6)
!11114 = !DILocation(line: 632, column: 6, scope: !11082)
!11115 = !DILocation(line: 633, column: 34, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !11113, file: !1558, line: 632, column: 32)
!11117 = !DILocation(line: 633, column: 3, scope: !11116)
!11118 = !DILocation(line: 634, column: 2, scope: !11116)
!11119 = !DILocation(line: 636, column: 10, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11082, file: !1558, line: 636, column: 6)
!11121 = !DILocation(line: 636, column: 6, scope: !11082)
!11122 = !DILocation(line: 637, column: 33, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !11120, file: !1558, line: 636, column: 31)
!11124 = !DILocation(line: 637, column: 3, scope: !11123)
!11125 = !DILocation(line: 638, column: 2, scope: !11123)
!11126 = !DILocation(line: 640, column: 10, scope: !11127)
!11127 = distinct !DILexicalBlock(scope: !11082, file: !1558, line: 640, column: 6)
!11128 = !DILocation(line: 640, column: 6, scope: !11082)
!11129 = !DILocation(line: 641, column: 33, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11127, file: !1558, line: 640, column: 32)
!11131 = !DILocation(line: 641, column: 3, scope: !11130)
!11132 = !DILocation(line: 642, column: 2, scope: !11130)
!11133 = !DILocation(line: 646, column: 32, scope: !11082)
!11134 = !DILocation(line: 646, column: 2, scope: !11082)
!11135 = !DILocation(line: 648, column: 2, scope: !11082)
!11136 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1558, file: !1558, line: 419, type: !1488, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11137)
!11137 = !{!11138, !11139, !11140, !11141, !11143, !11144, !11145, !11146}
!11138 = !DILocalVariable(name: "dev", arg: 1, scope: !11136, file: !1558, line: 419, type: !1463)
!11139 = !DILocalVariable(name: "cfg", arg: 2, scope: !11136, file: !1558, line: 420, type: !1490)
!11140 = !DILocalVariable(name: "config", scope: !11136, file: !1558, line: 422, type: !11019)
!11141 = !DILocalVariable(name: "data", scope: !11136, file: !1558, line: 423, type: !11142)
!11142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 32)
!11143 = !DILocalVariable(name: "parity", scope: !11136, file: !1558, line: 424, type: !7600)
!11144 = !DILocalVariable(name: "stopbits", scope: !11136, file: !1558, line: 425, type: !7600)
!11145 = !DILocalVariable(name: "databits", scope: !11136, file: !1558, line: 426, type: !7600)
!11146 = !DILocalVariable(name: "flowctrl", scope: !11136, file: !1558, line: 428, type: !7600)
!11147 = !DILocation(line: 0, scope: !11136)
!11148 = !DILocation(line: 422, column: 48, scope: !11136)
!11149 = !DILocation(line: 423, column: 38, scope: !11136)
!11150 = !DILocation(line: 424, column: 56, scope: !11136)
!11151 = !DILocation(line: 424, column: 51, scope: !11136)
!11152 = !DILocation(line: 424, column: 26, scope: !11136)
!11153 = !DILocation(line: 425, column: 60, scope: !11136)
!11154 = !DILocation(line: 425, column: 55, scope: !11136)
!11155 = !DILocation(line: 425, column: 28, scope: !11136)
!11156 = !DILocation(line: 426, column: 60, scope: !11136)
!11157 = !DILocation(line: 426, column: 55, scope: !11136)
!11158 = !DILocation(line: 426, column: 28, scope: !11136)
!11159 = !DILocation(line: 428, column: 58, scope: !11136)
!11160 = !DILocation(line: 428, column: 53, scope: !11136)
!11161 = !DILocation(line: 428, column: 28, scope: !11136)
!11162 = !DILocation(line: 431, column: 44, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11136, file: !1558, line: 431, column: 6)
!11164 = !DILocation(line: 438, column: 22, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11136, file: !1558, line: 437, column: 6)
!11166 = !DILocation(line: 437, column: 6, scope: !11136)
!11167 = !DILocation(line: 448, column: 6, scope: !11136)
!11168 = !DILocation(line: 465, column: 47, scope: !11169)
!11169 = distinct !DILexicalBlock(scope: !11136, file: !1558, line: 465, column: 6)
!11170 = !DILocation(line: 475, column: 21, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11136, file: !1558, line: 475, column: 6)
!11172 = !DILocation(line: 475, column: 6, scope: !11136)
!11173 = !DILocation(line: 476, column: 8, scope: !11174)
!11174 = distinct !DILexicalBlock(scope: !11175, file: !1558, line: 476, column: 7)
!11175 = distinct !DILexicalBlock(scope: !11171, file: !1558, line: 475, column: 49)
!11176 = !DILocation(line: 477, column: 34, scope: !11174)
!11177 = !DILocation(line: 476, column: 7, scope: !11175)
!11178 = !DILocation(line: 482, column: 27, scope: !11136)
!11179 = !DILocation(line: 482, column: 2, scope: !11136)
!11180 = !DILocation(line: 484, column: 16, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11136, file: !1558, line: 484, column: 6)
!11182 = !DILocation(line: 484, column: 13, scope: !11181)
!11183 = !DILocation(line: 484, column: 6, scope: !11136)
!11184 = !DILocation(line: 485, column: 3, scope: !11185)
!11185 = distinct !DILexicalBlock(scope: !11181, file: !1558, line: 484, column: 44)
!11186 = !DILocation(line: 486, column: 2, scope: !11185)
!11187 = !DILocation(line: 488, column: 18, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11136, file: !1558, line: 488, column: 6)
!11189 = !DILocation(line: 488, column: 15, scope: !11188)
!11190 = !DILocation(line: 488, column: 6, scope: !11136)
!11191 = !DILocation(line: 489, column: 3, scope: !11192)
!11192 = distinct !DILexicalBlock(scope: !11188, file: !1558, line: 488, column: 48)
!11193 = !DILocation(line: 490, column: 2, scope: !11192)
!11194 = !DILocation(line: 492, column: 18, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11136, file: !1558, line: 492, column: 6)
!11196 = !DILocation(line: 492, column: 15, scope: !11195)
!11197 = !DILocation(line: 492, column: 6, scope: !11136)
!11198 = !DILocation(line: 493, column: 3, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11195, file: !1558, line: 492, column: 48)
!11200 = !DILocation(line: 494, column: 2, scope: !11199)
!11201 = !DILocation(line: 496, column: 18, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11136, file: !1558, line: 496, column: 6)
!11203 = !DILocation(line: 496, column: 15, scope: !11202)
!11204 = !DILocation(line: 496, column: 6, scope: !11136)
!11205 = !DILocation(line: 497, column: 3, scope: !11206)
!11206 = distinct !DILexicalBlock(scope: !11202, file: !1558, line: 496, column: 46)
!11207 = !DILocation(line: 498, column: 2, scope: !11206)
!11208 = !DILocation(line: 500, column: 11, scope: !11209)
!11209 = distinct !DILexicalBlock(scope: !11136, file: !1558, line: 500, column: 6)
!11210 = !DILocation(line: 500, column: 29, scope: !11209)
!11211 = !DILocation(line: 500, column: 20, scope: !11209)
!11212 = !DILocation(line: 500, column: 6, scope: !11136)
!11213 = !DILocation(line: 501, column: 3, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11209, file: !1558, line: 500, column: 40)
!11215 = !DILocation(line: 502, column: 26, scope: !11214)
!11216 = !DILocation(line: 502, column: 19, scope: !11214)
!11217 = !DILocation(line: 503, column: 2, scope: !11214)
!11218 = !DILocation(line: 505, column: 26, scope: !11136)
!11219 = !DILocation(line: 505, column: 2, scope: !11136)
!11220 = !DILocation(line: 506, column: 2, scope: !11136)
!11221 = !DILocation(line: 507, column: 1, scope: !11136)
!11222 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1558, file: !1558, line: 509, type: !1501, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11223)
!11223 = !{!11224, !11225, !11226}
!11224 = !DILocalVariable(name: "dev", arg: 1, scope: !11222, file: !1558, line: 509, type: !1463)
!11225 = !DILocalVariable(name: "cfg", arg: 2, scope: !11222, file: !1558, line: 510, type: !1503)
!11226 = !DILocalVariable(name: "data", scope: !11222, file: !1558, line: 512, type: !11142)
!11227 = !DILocation(line: 0, scope: !11222)
!11228 = !DILocation(line: 512, column: 38, scope: !11222)
!11229 = !DILocation(line: 514, column: 24, scope: !11222)
!11230 = !DILocation(line: 514, column: 7, scope: !11222)
!11231 = !DILocation(line: 514, column: 16, scope: !11222)
!11232 = !DILocation(line: 515, column: 41, scope: !11222)
!11233 = !{i32 0, i32 1537}
!11234 = !DILocation(line: 515, column: 16, scope: !11222)
!11235 = !DILocation(line: 515, column: 7, scope: !11222)
!11236 = !DILocation(line: 515, column: 14, scope: !11222)
!11237 = !DILocation(line: 517, column: 3, scope: !11222)
!11238 = !{i32 0, i32 12289}
!11239 = !DILocation(line: 516, column: 19, scope: !11222)
!11240 = !DILocation(line: 516, column: 7, scope: !11222)
!11241 = !DILocation(line: 516, column: 17, scope: !11222)
!11242 = !DILocation(line: 519, column: 3, scope: !11222)
!11243 = !DILocation(line: 519, column: 33, scope: !11222)
!11244 = !DILocation(line: 518, column: 19, scope: !11222)
!11245 = !DILocation(line: 518, column: 7, scope: !11222)
!11246 = !DILocation(line: 518, column: 17, scope: !11222)
!11247 = !DILocation(line: 521, column: 3, scope: !11222)
!11248 = !{i32 0, i32 769}
!11249 = !DILocation(line: 520, column: 19, scope: !11222)
!11250 = !DILocation(line: 520, column: 7, scope: !11222)
!11251 = !DILocation(line: 520, column: 17, scope: !11222)
!11252 = !DILocation(line: 522, column: 2, scope: !11222)
!11253 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1558, file: !1558, line: 205, type: !11254, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11256)
!11254 = !DISubroutineType(types: !11255)
!11255 = !{!108, !1463}
!11256 = !{!11257, !11258}
!11257 = !DILocalVariable(name: "dev", arg: 1, scope: !11253, file: !1558, line: 205, type: !1463)
!11258 = !DILocalVariable(name: "config", scope: !11253, file: !1558, line: 207, type: !11019)
!11259 = !DILocation(line: 0, scope: !11253)
!11260 = !DILocation(line: 207, column: 48, scope: !11253)
!11261 = !DILocation(line: 209, column: 36, scope: !11253)
!11262 = !DILocation(line: 209, column: 9, scope: !11253)
!11263 = !DILocation(line: 209, column: 2, scope: !11253)
!11264 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1558, file: !1558, line: 270, type: !11265, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11267)
!11265 = !DISubroutineType(types: !11266)
!11266 = !{!1429, !108}
!11267 = !{!11268}
!11268 = !DILocalVariable(name: "parity", arg: 1, scope: !11264, file: !1558, line: 270, type: !108)
!11269 = !DILocation(line: 0, scope: !11264)
!11270 = !DILocation(line: 272, column: 2, scope: !11264)
!11271 = !DILocation(line: 281, column: 1, scope: !11264)
!11272 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1558, file: !1558, line: 220, type: !11254, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11273)
!11273 = !{!11274, !11275}
!11274 = !DILocalVariable(name: "dev", arg: 1, scope: !11272, file: !1558, line: 220, type: !1463)
!11275 = !DILocalVariable(name: "config", scope: !11272, file: !1558, line: 222, type: !11019)
!11276 = !DILocation(line: 0, scope: !11272)
!11277 = !DILocation(line: 222, column: 48, scope: !11272)
!11278 = !DILocation(line: 224, column: 44, scope: !11272)
!11279 = !DILocation(line: 224, column: 9, scope: !11272)
!11280 = !DILocation(line: 224, column: 2, scope: !11272)
!11281 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1558, file: !1558, line: 304, type: !11282, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11284)
!11282 = !DISubroutineType(types: !11283)
!11283 = !{!1443, !108}
!11284 = !{!11285}
!11285 = !DILocalVariable(name: "sb", arg: 1, scope: !11281, file: !1558, line: 304, type: !108)
!11286 = !DILocation(line: 0, scope: !11281)
!11287 = !DILocation(line: 306, column: 2, scope: !11281)
!11288 = !DILocation(line: 0, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11281, file: !1558, line: 306, column: 14)
!11290 = !DILocation(line: 323, column: 1, scope: !11281)
!11291 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1558, file: !1558, line: 235, type: !11254, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11292)
!11292 = !{!11293, !11294}
!11293 = !DILocalVariable(name: "dev", arg: 1, scope: !11291, file: !1558, line: 235, type: !1463)
!11294 = !DILocalVariable(name: "config", scope: !11291, file: !1558, line: 237, type: !11019)
!11295 = !DILocation(line: 0, scope: !11291)
!11296 = !DILocation(line: 237, column: 48, scope: !11291)
!11297 = !DILocation(line: 239, column: 39, scope: !11291)
!11298 = !DILocation(line: 239, column: 9, scope: !11291)
!11299 = !DILocation(line: 239, column: 2, scope: !11291)
!11300 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1558, file: !1558, line: 355, type: !11301, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11303)
!11301 = !DISubroutineType(types: !11302)
!11302 = !{!1436, !108, !108}
!11303 = !{!11304, !11305}
!11304 = !DILocalVariable(name: "db", arg: 1, scope: !11300, file: !1558, line: 355, type: !108)
!11305 = !DILocalVariable(name: "p", arg: 2, scope: !11300, file: !1558, line: 356, type: !108)
!11306 = !DILocation(line: 0, scope: !11300)
!11307 = !DILocation(line: 358, column: 2, scope: !11300)
!11308 = !DILocation(line: 384, column: 1, scope: !11300)
!11309 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1558, file: !1558, line: 250, type: !11254, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11310)
!11310 = !{!11311, !11312}
!11311 = !DILocalVariable(name: "dev", arg: 1, scope: !11309, file: !1558, line: 250, type: !1463)
!11312 = !DILocalVariable(name: "config", scope: !11309, file: !1558, line: 252, type: !11019)
!11313 = !DILocation(line: 0, scope: !11309)
!11314 = !DILocation(line: 252, column: 48, scope: !11309)
!11315 = !DILocation(line: 254, column: 40, scope: !11309)
!11316 = !DILocation(line: 254, column: 9, scope: !11309)
!11317 = !DILocation(line: 254, column: 2, scope: !11309)
!11318 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1558, file: !1558, line: 409, type: !11319, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11321)
!11319 = !DISubroutineType(types: !11320)
!11320 = !{!1449, !108}
!11321 = !{!11322}
!11322 = !DILocalVariable(name: "fc", arg: 1, scope: !11318, file: !1558, line: 409, type: !108)
!11323 = !DILocation(line: 0, scope: !11318)
!11324 = !DILocation(line: 411, column: 9, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11318, file: !1558, line: 411, column: 6)
!11326 = !DILocation(line: 416, column: 1, scope: !11318)
!11327 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !11328, file: !11328, line: 967, type: !11329, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11331)
!11328 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11329 = !DISubroutineType(types: !11330)
!11330 = !{!108, !1504}
!11331 = !{!11332}
!11332 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11327, file: !11328, line: 967, type: !1504)
!11333 = !DILocation(line: 0, scope: !11327)
!11334 = !DILocation(line: 969, column: 21, scope: !11327)
!11335 = !DILocation(line: 969, column: 3, scope: !11327)
!11336 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !11328, file: !11328, line: 601, type: !11329, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11337)
!11337 = !{!11338}
!11338 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11336, file: !11328, line: 601, type: !1504)
!11339 = !DILocation(line: 0, scope: !11336)
!11340 = !DILocation(line: 603, column: 21, scope: !11336)
!11341 = !DILocation(line: 603, column: 3, scope: !11336)
!11342 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !11328, file: !11328, line: 820, type: !11329, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11343)
!11343 = !{!11344}
!11344 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11342, file: !11328, line: 820, type: !1504)
!11345 = !DILocation(line: 0, scope: !11342)
!11346 = !DILocation(line: 822, column: 21, scope: !11342)
!11347 = !DILocation(line: 822, column: 3, scope: !11342)
!11348 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !11328, file: !11328, line: 547, type: !11329, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11349)
!11349 = !{!11350}
!11350 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11348, file: !11328, line: 547, type: !1504)
!11351 = !DILocation(line: 0, scope: !11348)
!11352 = !DILocation(line: 549, column: 21, scope: !11348)
!11353 = !DILocation(line: 549, column: 3, scope: !11348)
!11354 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1558, file: !1558, line: 257, type: !11355, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11357)
!11355 = !DISubroutineType(types: !11356)
!11356 = !{!108, !1429}
!11357 = !{!11358}
!11358 = !DILocalVariable(name: "parity", arg: 1, scope: !11354, file: !1558, line: 257, type: !1429)
!11359 = !DILocation(line: 0, scope: !11354)
!11360 = !DILocation(line: 259, column: 2, scope: !11354)
!11361 = !DILocation(line: 268, column: 1, scope: !11354)
!11362 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1558, file: !1558, line: 283, type: !11363, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11365)
!11363 = !DISubroutineType(types: !11364)
!11364 = !{!108, !1443}
!11365 = !{!11366}
!11366 = !DILocalVariable(name: "sb", arg: 1, scope: !11362, file: !1558, line: 283, type: !1443)
!11367 = !DILocation(line: 0, scope: !11362)
!11368 = !DILocation(line: 285, column: 2, scope: !11362)
!11369 = !DILocation(line: 0, scope: !11370)
!11370 = distinct !DILexicalBlock(scope: !11362, file: !1558, line: 285, column: 14)
!11371 = !DILocation(line: 302, column: 1, scope: !11362)
!11372 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1558, file: !1558, line: 325, type: !11373, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11375)
!11373 = !DISubroutineType(types: !11374)
!11374 = !{!108, !1436, !1429}
!11375 = !{!11376, !11377}
!11376 = !DILocalVariable(name: "db", arg: 1, scope: !11372, file: !1558, line: 325, type: !1436)
!11377 = !DILocalVariable(name: "p", arg: 2, scope: !11372, file: !1558, line: 326, type: !1429)
!11378 = !DILocation(line: 0, scope: !11372)
!11379 = !DILocation(line: 328, column: 2, scope: !11372)
!11380 = !DILocation(line: 353, column: 1, scope: !11372)
!11381 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1558, file: !1558, line: 393, type: !11382, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11384)
!11382 = !DISubroutineType(types: !11383)
!11383 = !{!108, !1449}
!11384 = !{!11385}
!11385 = !DILocalVariable(name: "fc", arg: 1, scope: !11381, file: !1558, line: 393, type: !1449)
!11386 = !DILocation(line: 0, scope: !11381)
!11387 = !DILocation(line: 395, column: 9, scope: !11388)
!11388 = distinct !DILexicalBlock(scope: !11381, file: !1558, line: 395, column: 6)
!11389 = !DILocation(line: 400, column: 1, scope: !11381)
!11390 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !11328, file: !11328, line: 424, type: !11391, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11393)
!11391 = !DISubroutineType(types: !11392)
!11392 = !{null, !1504}
!11393 = !{!11394}
!11394 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11390, file: !11328, line: 424, type: !1504)
!11395 = !DILocation(line: 0, scope: !11390)
!11396 = !DILocation(line: 426, column: 3, scope: !11390)
!11397 = !DILocation(line: 427, column: 1, scope: !11390)
!11398 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1558, file: !1558, line: 197, type: !11399, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11401)
!11399 = !DISubroutineType(types: !11400)
!11400 = !{null, !1463, !108}
!11401 = !{!11402, !11403, !11404}
!11402 = !DILocalVariable(name: "dev", arg: 1, scope: !11398, file: !1558, line: 197, type: !1463)
!11403 = !DILocalVariable(name: "parity", arg: 2, scope: !11398, file: !1558, line: 198, type: !108)
!11404 = !DILocalVariable(name: "config", scope: !11398, file: !1558, line: 200, type: !11019)
!11405 = !DILocation(line: 0, scope: !11398)
!11406 = !DILocation(line: 200, column: 48, scope: !11398)
!11407 = !DILocation(line: 202, column: 29, scope: !11398)
!11408 = !DILocation(line: 202, column: 2, scope: !11398)
!11409 = !DILocation(line: 203, column: 1, scope: !11398)
!11410 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1558, file: !1558, line: 212, type: !11399, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11411)
!11411 = !{!11412, !11413, !11414}
!11412 = !DILocalVariable(name: "dev", arg: 1, scope: !11410, file: !1558, line: 212, type: !1463)
!11413 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11410, file: !1558, line: 213, type: !108)
!11414 = !DILocalVariable(name: "config", scope: !11410, file: !1558, line: 215, type: !11019)
!11415 = !DILocation(line: 0, scope: !11410)
!11416 = !DILocation(line: 215, column: 48, scope: !11410)
!11417 = !DILocation(line: 217, column: 37, scope: !11410)
!11418 = !DILocation(line: 217, column: 2, scope: !11410)
!11419 = !DILocation(line: 218, column: 1, scope: !11410)
!11420 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1558, file: !1558, line: 227, type: !11399, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11421)
!11421 = !{!11422, !11423, !11424}
!11422 = !DILocalVariable(name: "dev", arg: 1, scope: !11420, file: !1558, line: 227, type: !1463)
!11423 = !DILocalVariable(name: "databits", arg: 2, scope: !11420, file: !1558, line: 228, type: !108)
!11424 = !DILocalVariable(name: "config", scope: !11420, file: !1558, line: 230, type: !11019)
!11425 = !DILocation(line: 0, scope: !11420)
!11426 = !DILocation(line: 230, column: 48, scope: !11420)
!11427 = !DILocation(line: 232, column: 32, scope: !11420)
!11428 = !DILocation(line: 232, column: 2, scope: !11420)
!11429 = !DILocation(line: 233, column: 1, scope: !11420)
!11430 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1558, file: !1558, line: 242, type: !11399, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11431)
!11431 = !{!11432, !11433, !11434}
!11432 = !DILocalVariable(name: "dev", arg: 1, scope: !11430, file: !1558, line: 242, type: !1463)
!11433 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11430, file: !1558, line: 243, type: !108)
!11434 = !DILocalVariable(name: "config", scope: !11430, file: !1558, line: 245, type: !11019)
!11435 = !DILocation(line: 0, scope: !11430)
!11436 = !DILocation(line: 245, column: 48, scope: !11430)
!11437 = !DILocation(line: 247, column: 33, scope: !11430)
!11438 = !DILocation(line: 247, column: 2, scope: !11430)
!11439 = !DILocation(line: 248, column: 1, scope: !11430)
!11440 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1558, file: !1558, line: 107, type: !11399, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11441)
!11441 = !{!11442, !11443, !11444, !11445, !11446}
!11442 = !DILocalVariable(name: "dev", arg: 1, scope: !11440, file: !1558, line: 107, type: !1463)
!11443 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11440, file: !1558, line: 107, type: !108)
!11444 = !DILocalVariable(name: "config", scope: !11440, file: !1558, line: 109, type: !11019)
!11445 = !DILocalVariable(name: "data", scope: !11440, file: !1558, line: 110, type: !11142)
!11446 = !DILocalVariable(name: "clock_rate", scope: !11440, file: !1558, line: 112, type: !108)
!11447 = !DILocation(line: 0, scope: !11440)
!11448 = !DILocation(line: 109, column: 48, scope: !11440)
!11449 = !DILocation(line: 110, column: 38, scope: !11440)
!11450 = !DILocation(line: 112, column: 2, scope: !11440)
!11451 = !DILocation(line: 123, column: 36, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11453, file: !1558, line: 123, column: 7)
!11453 = distinct !DILexicalBlock(scope: !11454, file: !1558, line: 122, column: 9)
!11454 = distinct !DILexicalBlock(scope: !11440, file: !1558, line: 115, column: 6)
!11455 = !DILocation(line: 124, column: 42, scope: !11452)
!11456 = !DILocation(line: 123, column: 7, scope: !11452)
!11457 = !DILocation(line: 125, column: 22, scope: !11452)
!11458 = !DILocation(line: 123, column: 7, scope: !11453)
!11459 = !DILocation(line: 126, column: 4, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11461, file: !1558, line: 126, column: 4)
!11461 = distinct !DILexicalBlock(scope: !11462, file: !1558, line: 126, column: 4)
!11462 = distinct !DILexicalBlock(scope: !11463, file: !1558, line: 126, column: 4)
!11463 = distinct !DILexicalBlock(scope: !11464, file: !1558, line: 126, column: 4)
!11464 = distinct !DILexicalBlock(scope: !11452, file: !1558, line: 125, column: 27)
!11465 = !DILocation(line: 127, column: 4, scope: !11464)
!11466 = !DILocation(line: 176, column: 36, scope: !11440)
!11467 = !DILocation(line: 176, column: 3, scope: !11440)
!11468 = !DILocation(line: 179, column: 32, scope: !11440)
!11469 = !DILocation(line: 180, column: 10, scope: !11440)
!11470 = !DILocation(line: 179, column: 3, scope: !11440)
!11471 = !DILocation(line: 195, column: 1, scope: !11440)
!11472 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !11328, file: !11328, line: 410, type: !11391, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11473)
!11473 = !{!11474}
!11474 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11472, file: !11328, line: 410, type: !1504)
!11475 = !DILocation(line: 0, scope: !11472)
!11476 = !DILocation(line: 412, column: 3, scope: !11472)
!11477 = !DILocation(line: 413, column: 1, scope: !11472)
!11478 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !918, file: !918, line: 216, type: !1537, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11479)
!11479 = !{!11480, !11481, !11482, !11483}
!11480 = !DILocalVariable(name: "dev", arg: 1, scope: !11478, file: !918, line: 216, type: !1463)
!11481 = !DILocalVariable(name: "sys", arg: 2, scope: !11478, file: !918, line: 217, type: !1013)
!11482 = !DILocalVariable(name: "rate", arg: 3, scope: !11478, file: !918, line: 218, type: !969)
!11483 = !DILocalVariable(name: "api", scope: !11478, file: !918, line: 220, type: !1515)
!11484 = !DILocation(line: 0, scope: !11478)
!11485 = !DILocation(line: 221, column: 49, scope: !11478)
!11486 = !DILocation(line: 223, column: 11, scope: !11487)
!11487 = distinct !DILexicalBlock(scope: !11478, file: !918, line: 223, column: 6)
!11488 = !DILocation(line: 223, column: 20, scope: !11487)
!11489 = !DILocation(line: 223, column: 6, scope: !11478)
!11490 = !DILocation(line: 227, column: 9, scope: !11478)
!11491 = !DILocation(line: 227, column: 2, scope: !11478)
!11492 = !DILocation(line: 228, column: 1, scope: !11478)
!11493 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3611, file: !3611, line: 175, type: !3612, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11494)
!11494 = !{!11495}
!11495 = !DILocalVariable(name: "level", arg: 1, scope: !11493, file: !3611, line: 175, type: !103)
!11496 = !DILocation(line: 0, scope: !11493)
!11497 = !DILocation(line: 177, column: 2, scope: !11493)
!11498 = !DILocation(line: 189, column: 1, scope: !11493)
!11499 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !11328, file: !11328, line: 615, type: !11500, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11502)
!11500 = !DISubroutineType(types: !11501)
!11501 = !{null, !1504, !108}
!11502 = !{!11503, !11504}
!11503 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11499, file: !11328, line: 615, type: !1504)
!11504 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11499, file: !11328, line: 615, type: !108)
!11505 = !DILocation(line: 0, scope: !11499)
!11506 = !DILocation(line: 617, column: 3, scope: !11499)
!11507 = !DILocation(line: 618, column: 1, scope: !11499)
!11508 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !11328, file: !11328, line: 1020, type: !11509, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11511)
!11509 = !DISubroutineType(types: !11510)
!11510 = !{null, !1504, !108, !108, !108}
!11511 = !{!11512, !11513, !11514, !11515}
!11512 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11508, file: !11328, line: 1020, type: !1504)
!11513 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11508, file: !11328, line: 1020, type: !108)
!11514 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11508, file: !11328, line: 1020, type: !108)
!11515 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11508, file: !11328, line: 1021, type: !108)
!11516 = !DILocation(line: 0, scope: !11508)
!11517 = !DILocation(line: 1029, column: 30, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11519, file: !11328, line: 1028, column: 3)
!11519 = distinct !DILexicalBlock(scope: !11508, file: !11328, line: 1023, column: 7)
!11520 = !DILocation(line: 1029, column: 19, scope: !11518)
!11521 = !DILocation(line: 1029, column: 13, scope: !11518)
!11522 = !DILocation(line: 1029, column: 17, scope: !11518)
!11523 = !DILocation(line: 1031, column: 1, scope: !11508)
!11524 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !11328, file: !11328, line: 949, type: !11500, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11525)
!11525 = !{!11526, !11527}
!11526 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11524, file: !11328, line: 949, type: !1504)
!11527 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11524, file: !11328, line: 949, type: !108)
!11528 = !DILocation(line: 0, scope: !11524)
!11529 = !DILocation(line: 951, column: 3, scope: !11524)
!11530 = !DILocation(line: 952, column: 1, scope: !11524)
!11531 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !11328, file: !11328, line: 588, type: !11500, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11532)
!11532 = !{!11533, !11534}
!11533 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11531, file: !11328, line: 588, type: !1504)
!11534 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11531, file: !11328, line: 588, type: !108)
!11535 = !DILocation(line: 0, scope: !11531)
!11536 = !DILocation(line: 590, column: 3, scope: !11531)
!11537 = !DILocation(line: 591, column: 1, scope: !11531)
!11538 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !11328, file: !11328, line: 805, type: !11500, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11539)
!11539 = !{!11540, !11541}
!11540 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11538, file: !11328, line: 805, type: !1504)
!11541 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11538, file: !11328, line: 805, type: !108)
!11542 = !DILocation(line: 0, scope: !11538)
!11543 = !DILocation(line: 807, column: 3, scope: !11538)
!11544 = !DILocation(line: 808, column: 1, scope: !11538)
!11545 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !11328, file: !11328, line: 532, type: !11500, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11546)
!11546 = !{!11547, !11548}
!11547 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11545, file: !11328, line: 532, type: !1504)
!11548 = !DILocalVariable(name: "Parity", arg: 2, scope: !11545, file: !11328, line: 532, type: !108)
!11549 = !DILocation(line: 0, scope: !11545)
!11550 = !DILocation(line: 534, column: 3, scope: !11545)
!11551 = !DILocation(line: 535, column: 1, scope: !11545)
!11552 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !11328, file: !11328, line: 1770, type: !11329, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11553)
!11553 = !{!11554}
!11554 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11552, file: !11328, line: 1770, type: !1504)
!11555 = !DILocation(line: 0, scope: !11552)
!11556 = !DILocation(line: 1772, column: 11, scope: !11552)
!11557 = !DILocation(line: 1772, column: 46, scope: !11552)
!11558 = !DILocation(line: 1772, column: 3, scope: !11552)
!11559 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !11328, file: !11328, line: 1737, type: !11329, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11560)
!11560 = !{!11561}
!11561 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11559, file: !11328, line: 1737, type: !1504)
!11562 = !DILocation(line: 0, scope: !11559)
!11563 = !DILocation(line: 1739, column: 11, scope: !11559)
!11564 = !DILocation(line: 1739, column: 3, scope: !11559)
!11565 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !11328, file: !11328, line: 1748, type: !11329, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11566)
!11566 = !{!11567}
!11567 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11565, file: !11328, line: 1748, type: !1504)
!11568 = !DILocation(line: 0, scope: !11565)
!11569 = !DILocation(line: 1750, column: 11, scope: !11565)
!11570 = !DILocation(line: 1750, column: 45, scope: !11565)
!11571 = !DILocation(line: 1750, column: 3, scope: !11565)
!11572 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !11328, file: !11328, line: 1827, type: !11329, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11573)
!11573 = !{!11574}
!11574 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11572, file: !11328, line: 1827, type: !1504)
!11575 = !DILocation(line: 0, scope: !11572)
!11576 = !DILocation(line: 1829, column: 11, scope: !11572)
!11577 = !DILocation(line: 1829, column: 46, scope: !11572)
!11578 = !DILocation(line: 1829, column: 3, scope: !11572)
!11579 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !11328, file: !11328, line: 1992, type: !11391, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11580)
!11580 = !{!11581}
!11581 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11579, file: !11328, line: 1992, type: !1504)
!11582 = !DILocation(line: 0, scope: !11579)
!11583 = !DILocation(line: 1994, column: 3, scope: !11579)
!11584 = !DILocation(line: 1995, column: 1, scope: !11579)
!11585 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !11328, file: !11328, line: 1934, type: !11391, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11586)
!11586 = !{!11587, !11588}
!11587 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11585, file: !11328, line: 1934, type: !1504)
!11588 = !DILocalVariable(name: "tmpreg", scope: !11585, file: !11328, line: 1936, type: !409)
!11589 = !DILocation(line: 0, scope: !11585)
!11590 = !DILocation(line: 1936, column: 3, scope: !11585)
!11591 = !DILocation(line: 1936, column: 17, scope: !11585)
!11592 = !DILocation(line: 1937, column: 20, scope: !11585)
!11593 = !DILocation(line: 1937, column: 10, scope: !11585)
!11594 = !DILocation(line: 1938, column: 10, scope: !11585)
!11595 = !DILocation(line: 1939, column: 20, scope: !11585)
!11596 = !DILocation(line: 1939, column: 10, scope: !11585)
!11597 = !DILocation(line: 1940, column: 10, scope: !11585)
!11598 = !DILocation(line: 1941, column: 1, scope: !11585)
!11599 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !11328, file: !11328, line: 1877, type: !11391, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11600)
!11600 = !{!11601, !11602}
!11601 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11599, file: !11328, line: 1877, type: !1504)
!11602 = !DILocalVariable(name: "tmpreg", scope: !11599, file: !11328, line: 1879, type: !409)
!11603 = !DILocation(line: 0, scope: !11599)
!11604 = !DILocation(line: 1879, column: 3, scope: !11599)
!11605 = !DILocation(line: 1879, column: 17, scope: !11599)
!11606 = !DILocation(line: 1880, column: 20, scope: !11599)
!11607 = !DILocation(line: 1880, column: 10, scope: !11599)
!11608 = !DILocation(line: 1881, column: 10, scope: !11599)
!11609 = !DILocation(line: 1882, column: 20, scope: !11599)
!11610 = !DILocation(line: 1882, column: 10, scope: !11599)
!11611 = !DILocation(line: 1883, column: 10, scope: !11599)
!11612 = !DILocation(line: 1884, column: 1, scope: !11599)
!11613 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !11328, file: !11328, line: 1896, type: !11391, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11614)
!11614 = !{!11615, !11616}
!11615 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11613, file: !11328, line: 1896, type: !1504)
!11616 = !DILocalVariable(name: "tmpreg", scope: !11613, file: !11328, line: 1898, type: !409)
!11617 = !DILocation(line: 0, scope: !11613)
!11618 = !DILocation(line: 1898, column: 3, scope: !11613)
!11619 = !DILocation(line: 1898, column: 17, scope: !11613)
!11620 = !DILocation(line: 1899, column: 20, scope: !11613)
!11621 = !DILocation(line: 1899, column: 10, scope: !11613)
!11622 = !DILocation(line: 1900, column: 10, scope: !11613)
!11623 = !DILocation(line: 1901, column: 20, scope: !11613)
!11624 = !DILocation(line: 1901, column: 10, scope: !11613)
!11625 = !DILocation(line: 1902, column: 10, scope: !11613)
!11626 = !DILocation(line: 1903, column: 1, scope: !11613)
!11627 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !11328, file: !11328, line: 1915, type: !11391, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11628)
!11628 = !{!11629, !11630}
!11629 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11627, file: !11328, line: 1915, type: !1504)
!11630 = !DILocalVariable(name: "tmpreg", scope: !11627, file: !11328, line: 1917, type: !409)
!11631 = !DILocation(line: 0, scope: !11627)
!11632 = !DILocation(line: 1917, column: 3, scope: !11627)
!11633 = !DILocation(line: 1917, column: 17, scope: !11627)
!11634 = !DILocation(line: 1918, column: 20, scope: !11627)
!11635 = !DILocation(line: 1918, column: 10, scope: !11627)
!11636 = !DILocation(line: 1919, column: 10, scope: !11627)
!11637 = !DILocation(line: 1920, column: 20, scope: !11627)
!11638 = !DILocation(line: 1920, column: 10, scope: !11627)
!11639 = !DILocation(line: 1921, column: 10, scope: !11627)
!11640 = !DILocation(line: 1922, column: 1, scope: !11627)
!11641 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !11328, file: !11328, line: 1814, type: !11329, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11642)
!11642 = !{!11643}
!11643 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11641, file: !11328, line: 1814, type: !1504)
!11644 = !DILocation(line: 0, scope: !11641)
!11645 = !DILocation(line: 1816, column: 11, scope: !11641)
!11646 = !DILocation(line: 1816, column: 46, scope: !11641)
!11647 = !DILocation(line: 1816, column: 3, scope: !11641)
!11648 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !11328, file: !11328, line: 2426, type: !11649, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11651)
!11649 = !DISubroutineType(types: !11650)
!11650 = !{null, !1504, !185}
!11651 = !{!11652, !11653}
!11652 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11648, file: !11328, line: 2426, type: !1504)
!11653 = !DILocalVariable(name: "Value", arg: 2, scope: !11648, file: !11328, line: 2426, type: !185)
!11654 = !DILocation(line: 0, scope: !11648)
!11655 = !DILocation(line: 2428, column: 16, scope: !11648)
!11656 = !DILocation(line: 2428, column: 11, scope: !11648)
!11657 = !DILocation(line: 2428, column: 14, scope: !11648)
!11658 = !DILocation(line: 2429, column: 1, scope: !11648)
!11659 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !11328, file: !11328, line: 1792, type: !11329, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11660)
!11660 = !{!11661}
!11661 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11659, file: !11328, line: 1792, type: !1504)
!11662 = !DILocation(line: 0, scope: !11659)
!11663 = !DILocation(line: 1794, column: 11, scope: !11659)
!11664 = !DILocation(line: 1794, column: 47, scope: !11659)
!11665 = !DILocation(line: 1794, column: 3, scope: !11659)
!11666 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !11328, file: !11328, line: 2403, type: !11667, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11669)
!11667 = !DISubroutineType(types: !11668)
!11668 = !{!185, !1504}
!11669 = !{!11670}
!11670 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11666, file: !11328, line: 2403, type: !1504)
!11671 = !DILocation(line: 0, scope: !11666)
!11672 = !DILocation(line: 2405, column: 20, scope: !11666)
!11673 = !DILocation(line: 2405, column: 10, scope: !11666)
!11674 = !DILocation(line: 2405, column: 3, scope: !11666)
!11675 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1558, file: !1558, line: 1583, type: !1484, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11676)
!11676 = !{!11677, !11678, !11679, !11680, !11681, !11682}
!11677 = !DILocalVariable(name: "dev", arg: 1, scope: !11675, file: !1558, line: 1583, type: !1463)
!11678 = !DILocalVariable(name: "config", scope: !11675, file: !1558, line: 1585, type: !11019)
!11679 = !DILocalVariable(name: "data", scope: !11675, file: !1558, line: 1586, type: !11142)
!11680 = !DILocalVariable(name: "ll_parity", scope: !11675, file: !1558, line: 1587, type: !108)
!11681 = !DILocalVariable(name: "ll_datawidth", scope: !11675, file: !1558, line: 1588, type: !108)
!11682 = !DILocalVariable(name: "err", scope: !11675, file: !1558, line: 1589, type: !103)
!11683 = !DILocation(line: 0, scope: !11675)
!11684 = !DILocation(line: 1585, column: 48, scope: !11675)
!11685 = !DILocation(line: 1586, column: 38, scope: !11675)
!11686 = !DILocation(line: 1591, column: 2, scope: !11675)
!11687 = !DILocation(line: 1593, column: 29, scope: !11688)
!11688 = distinct !DILexicalBlock(scope: !11675, file: !1558, line: 1593, column: 6)
!11689 = !DILocation(line: 1593, column: 7, scope: !11688)
!11690 = !DILocation(line: 1593, column: 6, scope: !11675)
!11691 = !DILocation(line: 1594, column: 3, scope: !11692)
!11692 = distinct !DILexicalBlock(scope: !11693, file: !1558, line: 1594, column: 3)
!11693 = distinct !DILexicalBlock(scope: !11694, file: !1558, line: 1594, column: 3)
!11694 = distinct !DILexicalBlock(scope: !11695, file: !1558, line: 1594, column: 3)
!11695 = distinct !DILexicalBlock(scope: !11696, file: !1558, line: 1594, column: 3)
!11696 = distinct !DILexicalBlock(scope: !11688, file: !1558, line: 1593, column: 37)
!11697 = !DILocation(line: 1595, column: 3, scope: !11696)
!11698 = !DILocation(line: 1599, column: 31, scope: !11675)
!11699 = !DILocation(line: 1599, column: 71, scope: !11675)
!11700 = !DILocation(line: 1599, column: 8, scope: !11675)
!11701 = !DILocation(line: 1600, column: 10, scope: !11702)
!11702 = distinct !DILexicalBlock(scope: !11675, file: !1558, line: 1600, column: 6)
!11703 = !DILocation(line: 1600, column: 6, scope: !11675)
!11704 = !DILocation(line: 1601, column: 3, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11706, file: !1558, line: 1601, column: 3)
!11706 = distinct !DILexicalBlock(scope: !11707, file: !1558, line: 1601, column: 3)
!11707 = distinct !DILexicalBlock(scope: !11708, file: !1558, line: 1601, column: 3)
!11708 = distinct !DILexicalBlock(scope: !11709, file: !1558, line: 1601, column: 3)
!11709 = distinct !DILexicalBlock(scope: !11702, file: !1558, line: 1600, column: 16)
!11710 = !DILocation(line: 1602, column: 3, scope: !11709)
!11711 = !DILocation(line: 1616, column: 36, scope: !11675)
!11712 = !DILocation(line: 1616, column: 8, scope: !11675)
!11713 = !DILocation(line: 1617, column: 10, scope: !11714)
!11714 = distinct !DILexicalBlock(scope: !11675, file: !1558, line: 1617, column: 6)
!11715 = !DILocation(line: 1617, column: 6, scope: !11675)
!11716 = !DILocation(line: 1621, column: 27, scope: !11675)
!11717 = !DILocation(line: 1621, column: 2, scope: !11675)
!11718 = !DILocation(line: 1624, column: 40, scope: !11675)
!11719 = !DILocation(line: 1624, column: 2, scope: !11675)
!11720 = !DILocation(line: 1630, column: 14, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11675, file: !1558, line: 1630, column: 6)
!11722 = !DILocation(line: 1630, column: 6, scope: !11675)
!11723 = !DILocation(line: 1640, column: 4, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11725, file: !1558, line: 1640, column: 4)
!11725 = distinct !DILexicalBlock(scope: !11726, file: !1558, line: 1640, column: 4)
!11726 = distinct !DILexicalBlock(scope: !11727, file: !1558, line: 1640, column: 4)
!11727 = distinct !DILexicalBlock(scope: !11728, file: !1558, line: 1640, column: 4)
!11728 = distinct !DILexicalBlock(scope: !11729, file: !1558, line: 1639, column: 28)
!11729 = distinct !DILexicalBlock(scope: !11730, file: !1558, line: 1639, column: 7)
!11730 = distinct !DILexicalBlock(scope: !11731, file: !1558, line: 1638, column: 9)
!11731 = distinct !DILexicalBlock(scope: !11721, file: !1558, line: 1634, column: 13)
!11732 = !DILocation(line: 0, scope: !11721)
!11733 = !DILocation(line: 1649, column: 35, scope: !11675)
!11734 = !DILocation(line: 1649, column: 2, scope: !11675)
!11735 = !DILocation(line: 1654, column: 14, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11675, file: !1558, line: 1654, column: 6)
!11737 = !DILocation(line: 1654, column: 6, scope: !11675)
!11738 = !DILocation(line: 1655, column: 3, scope: !11739)
!11739 = distinct !DILexicalBlock(scope: !11736, file: !1558, line: 1654, column: 31)
!11740 = !DILocation(line: 1656, column: 2, scope: !11739)
!11741 = !DILocation(line: 1659, column: 37, scope: !11675)
!11742 = !DILocation(line: 1659, column: 2, scope: !11675)
!11743 = !DILocation(line: 1662, column: 14, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11675, file: !1558, line: 1662, column: 6)
!11745 = !DILocation(line: 1662, column: 6, scope: !11675)
!11746 = !DILocation(line: 1663, column: 37, scope: !11747)
!11747 = distinct !DILexicalBlock(scope: !11744, file: !1558, line: 1662, column: 27)
!11748 = !DILocation(line: 1663, column: 3, scope: !11747)
!11749 = !DILocation(line: 1664, column: 2, scope: !11747)
!11750 = !DILocation(line: 1684, column: 26, scope: !11675)
!11751 = !DILocation(line: 1684, column: 2, scope: !11675)
!11752 = !DILocation(line: 1722, column: 2, scope: !11675)
!11753 = !DILocation(line: 1724, column: 1, scope: !11675)
!11754 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1558, file: !1558, line: 651, type: !11755, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11757)
!11755 = !DISubroutineType(types: !11756)
!11756 = !{null, !1463}
!11757 = !{!11758, !11759, !11760}
!11758 = !DILocalVariable(name: "dev", arg: 1, scope: !11754, file: !1558, line: 651, type: !1463)
!11759 = !DILocalVariable(name: "data", scope: !11754, file: !1558, line: 653, type: !11142)
!11760 = !DILocalVariable(name: "clk", scope: !11754, file: !1558, line: 654, type: !11761)
!11761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1463)
!11762 = !DILocation(line: 0, scope: !11754)
!11763 = !DILocation(line: 653, column: 38, scope: !11754)
!11764 = !DILocation(line: 656, column: 8, scope: !11754)
!11765 = !DILocation(line: 656, column: 14, scope: !11754)
!11766 = !DILocation(line: 657, column: 1, scope: !11754)
!11767 = distinct !DISubprogram(name: "device_is_ready", scope: !10157, file: !10157, line: 47, type: !11768, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11770)
!11768 = !DISubroutineType(types: !11769)
!11769 = !{!131, !1463}
!11770 = !{!11771}
!11771 = !DILocalVariable(name: "dev", arg: 1, scope: !11767, file: !10157, line: 47, type: !1463)
!11772 = !DILocation(line: 0, scope: !11767)
!11773 = !DILocation(line: 55, column: 2, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11767, file: !10157, line: 55, column: 2)
!11775 = !{i64 2154448444}
!11776 = !DILocation(line: 56, column: 9, scope: !11767)
!11777 = !DILocation(line: 56, column: 2, scope: !11767)
!11778 = distinct !DISubprogram(name: "clock_control_on", scope: !918, file: !918, line: 123, type: !1522, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11779)
!11779 = !{!11780, !11781, !11782}
!11780 = !DILocalVariable(name: "dev", arg: 1, scope: !11778, file: !918, line: 123, type: !1463)
!11781 = !DILocalVariable(name: "sys", arg: 2, scope: !11778, file: !918, line: 124, type: !1013)
!11782 = !DILocalVariable(name: "api", scope: !11778, file: !918, line: 126, type: !1515)
!11783 = !DILocation(line: 0, scope: !11778)
!11784 = !DILocation(line: 127, column: 49, scope: !11778)
!11785 = !DILocation(line: 129, column: 14, scope: !11778)
!11786 = !DILocation(line: 129, column: 9, scope: !11778)
!11787 = !DILocation(line: 129, column: 2, scope: !11778)
!11788 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1614, file: !1614, line: 342, type: !11789, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11791)
!11789 = !DISubroutineType(types: !11790)
!11790 = !{!103, !1611, !185}
!11791 = !{!11792, !11793, !11794, !11795}
!11792 = !DILocalVariable(name: "config", arg: 1, scope: !11788, file: !1614, line: 342, type: !1611)
!11793 = !DILocalVariable(name: "id", arg: 2, scope: !11788, file: !1614, line: 343, type: !185)
!11794 = !DILocalVariable(name: "ret", scope: !11788, file: !1614, line: 345, type: !103)
!11795 = !DILocalVariable(name: "state", scope: !11788, file: !1614, line: 346, type: !1617)
!11796 = !DILocation(line: 0, scope: !11788)
!11797 = !DILocation(line: 346, column: 2, scope: !11788)
!11798 = !DILocation(line: 348, column: 8, scope: !11788)
!11799 = !DILocation(line: 349, column: 10, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11788, file: !1614, line: 349, column: 6)
!11801 = !DILocation(line: 349, column: 6, scope: !11788)
!11802 = !DILocation(line: 353, column: 44, scope: !11788)
!11803 = !DILocation(line: 353, column: 9, scope: !11788)
!11804 = !DILocation(line: 353, column: 2, scope: !11788)
!11805 = !DILocation(line: 354, column: 1, scope: !11788)
!11806 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !11328, file: !11328, line: 497, type: !11500, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11807)
!11807 = !{!11808, !11809, !11810}
!11808 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11806, file: !11328, line: 497, type: !1504)
!11809 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11806, file: !11328, line: 497, type: !108)
!11810 = !DILocalVariable(name: "val", scope: !11811, file: !11328, line: 499, type: !108)
!11811 = distinct !DILexicalBlock(scope: !11806, file: !11328, line: 499, column: 3)
!11812 = !DILocation(line: 0, scope: !11806)
!11813 = !DILocation(line: 499, column: 3, scope: !11811)
!11814 = !DILocalVariable(name: "addr", arg: 1, scope: !11815, file: !7334, line: 476, type: !1554)
!11815 = distinct !DISubprogram(name: "__LDREXW", scope: !7334, file: !7334, line: 476, type: !11816, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11818)
!11816 = !DISubroutineType(types: !11817)
!11817 = !{!108, !1554}
!11818 = !{!11814, !11819}
!11819 = !DILocalVariable(name: "result", scope: !11815, file: !7334, line: 478, type: !108)
!11820 = !DILocation(line: 0, scope: !11815, inlinedAt: !11821)
!11821 = distinct !DILocation(line: 499, column: 3, scope: !11822)
!11822 = distinct !DILexicalBlock(scope: !11811, file: !11328, line: 499, column: 3)
!11823 = !DILocation(line: 480, column: 4, scope: !11815, inlinedAt: !11821)
!11824 = !{i64 2946546}
!11825 = !DILocation(line: 499, column: 3, scope: !11822)
!11826 = !DILocation(line: 0, scope: !11811)
!11827 = !DILocalVariable(name: "value", arg: 1, scope: !11828, file: !7334, line: 527, type: !108)
!11828 = distinct !DISubprogram(name: "__STREXW", scope: !7334, file: !7334, line: 527, type: !11829, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11831)
!11829 = !DISubroutineType(types: !11830)
!11830 = !{!108, !108, !1554}
!11831 = !{!11827, !11832, !11833}
!11832 = !DILocalVariable(name: "addr", arg: 2, scope: !11828, file: !7334, line: 527, type: !1554)
!11833 = !DILocalVariable(name: "result", scope: !11828, file: !7334, line: 529, type: !108)
!11834 = !DILocation(line: 0, scope: !11828, inlinedAt: !11835)
!11835 = distinct !DILocation(line: 499, column: 3, scope: !11811)
!11836 = !DILocation(line: 531, column: 4, scope: !11828, inlinedAt: !11835)
!11837 = !{i64 2947982}
!11838 = distinct !{!11838, !11813, !11813}
!11839 = !DILocation(line: 500, column: 1, scope: !11806)
!11840 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !11328, file: !11328, line: 850, type: !11509, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11841)
!11841 = !{!11842, !11843, !11844, !11845}
!11842 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11840, file: !11328, line: 850, type: !1504)
!11843 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11840, file: !11328, line: 850, type: !108)
!11844 = !DILocalVariable(name: "Parity", arg: 3, scope: !11840, file: !11328, line: 850, type: !108)
!11845 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11840, file: !11328, line: 851, type: !108)
!11846 = !DILocation(line: 0, scope: !11840)
!11847 = !DILocation(line: 853, column: 3, scope: !11840)
!11848 = !DILocation(line: 854, column: 3, scope: !11840)
!11849 = !DILocation(line: 855, column: 1, scope: !11840)
!11850 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !11328, file: !11328, line: 1337, type: !11391, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11851)
!11851 = !{!11852}
!11852 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11850, file: !11328, line: 1337, type: !1504)
!11853 = !DILocation(line: 0, scope: !11850)
!11854 = !DILocation(line: 1339, column: 3, scope: !11850)
!11855 = !DILocation(line: 1340, column: 1, scope: !11850)
!11856 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1614, file: !1614, line: 316, type: !11857, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11859)
!11857 = !DISubroutineType(types: !11858)
!11858 = !{!103, !1611, !1617}
!11859 = !{!11860, !11861, !11862}
!11860 = !DILocalVariable(name: "config", arg: 1, scope: !11856, file: !1614, line: 317, type: !1611)
!11861 = !DILocalVariable(name: "state", arg: 2, scope: !11856, file: !1614, line: 318, type: !1617)
!11862 = !DILocalVariable(name: "reg", scope: !11856, file: !1614, line: 320, type: !22)
!11863 = !DILocation(line: 0, scope: !11856)
!11864 = !DILocation(line: 329, column: 39, scope: !11856)
!11865 = !DILocation(line: 329, column: 52, scope: !11856)
!11866 = !DILocation(line: 329, column: 9, scope: !11856)
!11867 = !DILocation(line: 329, column: 2, scope: !11856)
!11868 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !429, file: !429, line: 730, type: !11768, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1419, retainedNodes: !11869)
!11869 = !{!11870}
!11870 = !DILocalVariable(name: "dev", arg: 1, scope: !11868, file: !429, line: 730, type: !1463)
!11871 = !DILocation(line: 0, scope: !11868)
!11872 = !DILocation(line: 732, column: 9, scope: !11868)
!11873 = !DILocation(line: 732, column: 2, scope: !11868)
!11874 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1761, file: !1761, line: 270, type: !1767, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !11875)
!11875 = !{!11876}
!11876 = !DILocalVariable(name: "dev", arg: 1, scope: !11874, file: !1761, line: 270, type: !1769)
!11877 = !DILocation(line: 0, scope: !11874)
!11878 = !DILocation(line: 274, column: 2, scope: !11874)
!11879 = !DILocation(line: 275, column: 12, scope: !11874)
!11880 = !DILocation(line: 276, column: 15, scope: !11874)
!11881 = !DILocation(line: 277, column: 16, scope: !11874)
!11882 = !DILocation(line: 278, column: 15, scope: !11874)
!11883 = !DILocation(line: 279, column: 16, scope: !11874)
!11884 = !DILocation(line: 282, column: 2, scope: !11874)
!11885 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !624, file: !624, line: 1814, type: !7368, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !11886)
!11886 = !{!11887, !11888}
!11887 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11885, file: !624, line: 1814, type: !870)
!11888 = !DILocalVariable(name: "priority", arg: 2, scope: !11885, file: !624, line: 1814, type: !108)
!11889 = !DILocation(line: 0, scope: !11885)
!11890 = !DILocation(line: 1822, column: 46, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11892, file: !624, line: 1821, column: 3)
!11892 = distinct !DILexicalBlock(scope: !11885, file: !624, line: 1816, column: 7)
!11893 = !DILocation(line: 1824, column: 1, scope: !11885)
!11894 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1761, file: !1761, line: 118, type: !7271, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !11895)
!11895 = !{!11896, !11897}
!11896 = !DILocalVariable(name: "arg", arg: 1, scope: !11894, file: !1761, line: 118, type: !102)
!11897 = !DILocalVariable(name: "dticks", scope: !11894, file: !1761, line: 121, type: !108)
!11898 = !DILocation(line: 0, scope: !11894)
!11899 = !DILocation(line: 124, column: 2, scope: !11894)
!11900 = !DILocation(line: 129, column: 17, scope: !11894)
!11901 = !DILocation(line: 129, column: 14, scope: !11894)
!11902 = !DILocation(line: 130, column: 15, scope: !11894)
!11903 = !DILocation(line: 145, column: 27, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11905, file: !1761, line: 132, column: 16)
!11905 = distinct !DILexicalBlock(scope: !11894, file: !1761, line: 132, column: 6)
!11906 = !DILocation(line: 145, column: 25, scope: !11904)
!11907 = !DILocation(line: 145, column: 45, scope: !11904)
!11908 = !DILocation(line: 146, column: 30, scope: !11904)
!11909 = !DILocation(line: 146, column: 20, scope: !11904)
!11910 = !DILocation(line: 147, column: 3, scope: !11904)
!11911 = !DILocation(line: 151, column: 2, scope: !11894)
!11912 = !DILocation(line: 152, column: 1, scope: !11894)
!11913 = distinct !DISubprogram(name: "elapsed", scope: !1761, file: !1761, line: 85, type: !3620, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !11914)
!11914 = !{!11915, !11916, !11917}
!11915 = !DILocalVariable(name: "val1", scope: !11913, file: !1761, line: 87, type: !108)
!11916 = !DILocalVariable(name: "ctrl", scope: !11913, file: !1761, line: 88, type: !108)
!11917 = !DILocalVariable(name: "val2", scope: !11913, file: !1761, line: 89, type: !108)
!11918 = !DILocation(line: 87, column: 27, scope: !11913)
!11919 = !DILocation(line: 0, scope: !11913)
!11920 = !DILocation(line: 88, column: 27, scope: !11913)
!11921 = !DILocation(line: 89, column: 27, scope: !11913)
!11922 = !DILocation(line: 105, column: 12, scope: !11923)
!11923 = distinct !DILexicalBlock(scope: !11913, file: !1761, line: 105, column: 6)
!11924 = !DILocation(line: 106, column: 6, scope: !11923)
!11925 = !DILocation(line: 107, column: 16, scope: !11926)
!11926 = distinct !DILexicalBlock(scope: !11923, file: !1761, line: 106, column: 24)
!11927 = !DILocation(line: 111, column: 18, scope: !11926)
!11928 = !DILocation(line: 112, column: 2, scope: !11926)
!11929 = !DILocation(line: 114, column: 20, scope: !11913)
!11930 = !DILocation(line: 114, column: 30, scope: !11913)
!11931 = !DILocation(line: 114, column: 28, scope: !11913)
!11932 = !DILocation(line: 114, column: 2, scope: !11913)
!11933 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1761, file: !1761, line: 154, type: !11934, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !11936)
!11934 = !DISubroutineType(types: !11935)
!11935 = !{null, !331, !131}
!11936 = !{!11937, !11938, !11939, !11940, !11941, !11942, !11943, !11948, !11949}
!11937 = !DILocalVariable(name: "ticks", arg: 1, scope: !11933, file: !1761, line: 154, type: !331)
!11938 = !DILocalVariable(name: "idle", arg: 2, scope: !11933, file: !1761, line: 154, type: !131)
!11939 = !DILocalVariable(name: "delay", scope: !11933, file: !1761, line: 169, type: !108)
!11940 = !DILocalVariable(name: "val1", scope: !11933, file: !1761, line: 170, type: !108)
!11941 = !DILocalVariable(name: "val2", scope: !11933, file: !1761, line: 170, type: !108)
!11942 = !DILocalVariable(name: "last_load_", scope: !11933, file: !1761, line: 171, type: !108)
!11943 = !DILocalVariable(name: "key", scope: !11933, file: !1761, line: 176, type: !11944)
!11944 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !11945)
!11945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !11946)
!11946 = !{!11947}
!11947 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11945, file: !250, line: 33, baseType: !103, size: 32)
!11948 = !DILocalVariable(name: "pending", scope: !11933, file: !1761, line: 178, type: !108)
!11949 = !DILocalVariable(name: "unannounced", scope: !11933, file: !1761, line: 185, type: !108)
!11950 = !DILocation(line: 0, scope: !11933)
!11951 = !DILocation(line: 162, column: 49, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11933, file: !1761, line: 162, column: 6)
!11953 = !DILocation(line: 163, column: 17, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !11952, file: !1761, line: 162, column: 78)
!11955 = !DILocation(line: 164, column: 13, scope: !11954)
!11956 = !DILocation(line: 165, column: 3, scope: !11954)
!11957 = !DILocation(line: 171, column: 24, scope: !11933)
!11958 = !DILocation(line: 173, column: 10, scope: !11933)
!11959 = !DILocation(line: 174, column: 10, scope: !11933)
!11960 = !DILocalVariable(name: "l", arg: 1, scope: !11961, file: !250, line: 136, type: !11964)
!11961 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !11962, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !11965)
!11962 = !DISubroutineType(types: !11963)
!11963 = !{!11944, !11964}
!11964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 32)
!11965 = !{!11960, !11966}
!11966 = !DILocalVariable(name: "k", scope: !11961, file: !250, line: 139, type: !11944)
!11967 = !DILocation(line: 0, scope: !11961, inlinedAt: !11968)
!11968 = distinct !DILocation(line: 176, column: 25, scope: !11933)
!11969 = !DILocation(line: 55, column: 2, scope: !11970, inlinedAt: !11974)
!11970 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7016, file: !7016, line: 42, type: !7017, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !11971)
!11971 = !{!11972, !11973}
!11972 = !DILocalVariable(name: "key", scope: !11970, file: !7016, line: 44, type: !32)
!11973 = !DILocalVariable(name: "tmp", scope: !11970, file: !7016, line: 53, type: !32)
!11974 = distinct !DILocation(line: 145, column: 10, scope: !11961, inlinedAt: !11968)
!11975 = !{i64 2024394}
!11976 = !DILocation(line: 0, scope: !11970, inlinedAt: !11974)
!11977 = !DILocation(line: 178, column: 21, scope: !11933)
!11978 = !DILocation(line: 180, column: 18, scope: !11933)
!11979 = !DILocation(line: 182, column: 14, scope: !11933)
!11980 = !DILocation(line: 183, column: 15, scope: !11933)
!11981 = !DILocation(line: 185, column: 39, scope: !11933)
!11982 = !DILocation(line: 185, column: 37, scope: !11933)
!11983 = !DILocation(line: 187, column: 27, scope: !11984)
!11984 = distinct !DILexicalBlock(scope: !11933, file: !1761, line: 187, column: 6)
!11985 = !DILocation(line: 187, column: 6, scope: !11933)
!11986 = !DILocation(line: 202, column: 27, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11984, file: !1761, line: 195, column: 9)
!11988 = !DILocation(line: 202, column: 48, scope: !11987)
!11989 = !DILocation(line: 203, column: 9, scope: !11987)
!11990 = !DILocation(line: 204, column: 11, scope: !11987)
!11991 = !DILocation(line: 205, column: 13, scope: !11992)
!11992 = distinct !DILexicalBlock(scope: !11987, file: !1761, line: 205, column: 7)
!11993 = !DILocation(line: 205, column: 7, scope: !11987)
!11994 = !DILocation(line: 0, scope: !11984)
!11995 = !DILocation(line: 212, column: 18, scope: !11933)
!11996 = !DILocation(line: 214, column: 28, scope: !11933)
!11997 = !DILocation(line: 214, column: 16, scope: !11933)
!11998 = !DILocation(line: 215, column: 15, scope: !11933)
!11999 = !DILocation(line: 227, column: 11, scope: !12000)
!12000 = distinct !DILexicalBlock(scope: !11933, file: !1761, line: 227, column: 6)
!12001 = !DILocation(line: 227, column: 6, scope: !11933)
!12002 = !DILocation(line: 228, column: 15, scope: !12003)
!12003 = distinct !DILexicalBlock(scope: !12000, file: !1761, line: 227, column: 19)
!12004 = !DILocation(line: 228, column: 38, scope: !12003)
!12005 = !DILocation(line: 228, column: 24, scope: !12003)
!12006 = !DILocation(line: 229, column: 2, scope: !12003)
!12007 = !DILocation(line: 230, column: 24, scope: !12008)
!12008 = distinct !DILexicalBlock(scope: !12000, file: !1761, line: 229, column: 9)
!12009 = !DILocation(line: 230, column: 15, scope: !12008)
!12010 = !DILocation(line: 0, scope: !12000)
!12011 = !DILocalVariable(name: "key", arg: 2, scope: !12012, file: !250, line: 190, type: !11944)
!12012 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !12013, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12015)
!12013 = !DISubroutineType(types: !12014)
!12014 = !{null, !11964, !11944}
!12015 = !{!12016, !12011}
!12016 = !DILocalVariable(name: "l", arg: 1, scope: !12012, file: !250, line: 189, type: !11964)
!12017 = !DILocation(line: 0, scope: !12012, inlinedAt: !12018)
!12018 = distinct !DILocation(line: 232, column: 2, scope: !11933)
!12019 = !DILocalVariable(name: "key", arg: 1, scope: !12020, file: !7016, line: 84, type: !32)
!12020 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7016, file: !7016, line: 84, type: !7027, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12021)
!12021 = !{!12019}
!12022 = !DILocation(line: 0, scope: !12020, inlinedAt: !12023)
!12023 = distinct !DILocation(line: 215, column: 2, scope: !12012, inlinedAt: !12018)
!12024 = !DILocation(line: 95, column: 2, scope: !12020, inlinedAt: !12023)
!12025 = !{i64 2025211}
!12026 = !DILocation(line: 234, column: 1, scope: !11933)
!12027 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1761, file: !1761, line: 236, type: !3620, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12028)
!12028 = !{!12029, !12030}
!12029 = !DILocalVariable(name: "key", scope: !12027, file: !1761, line: 242, type: !11944)
!12030 = !DILocalVariable(name: "cyc", scope: !12027, file: !1761, line: 243, type: !108)
!12031 = !DILocation(line: 0, scope: !11961, inlinedAt: !12032)
!12032 = distinct !DILocation(line: 242, column: 25, scope: !12027)
!12033 = !DILocation(line: 55, column: 2, scope: !11970, inlinedAt: !12034)
!12034 = distinct !DILocation(line: 145, column: 10, scope: !11961, inlinedAt: !12032)
!12035 = !DILocation(line: 0, scope: !11970, inlinedAt: !12034)
!12036 = !DILocation(line: 0, scope: !12027)
!12037 = !DILocation(line: 243, column: 17, scope: !12027)
!12038 = !DILocation(line: 243, column: 29, scope: !12027)
!12039 = !DILocation(line: 243, column: 27, scope: !12027)
!12040 = !DILocation(line: 243, column: 43, scope: !12027)
!12041 = !DILocation(line: 243, column: 41, scope: !12027)
!12042 = !DILocation(line: 0, scope: !12012, inlinedAt: !12043)
!12043 = distinct !DILocation(line: 245, column: 2, scope: !12027)
!12044 = !DILocation(line: 0, scope: !12020, inlinedAt: !12045)
!12045 = distinct !DILocation(line: 215, column: 2, scope: !12012, inlinedAt: !12043)
!12046 = !DILocation(line: 95, column: 2, scope: !12020, inlinedAt: !12045)
!12047 = !DILocation(line: 246, column: 13, scope: !12027)
!12048 = !DILocation(line: 246, column: 2, scope: !12027)
!12049 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1761, file: !1761, line: 249, type: !3620, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12050)
!12050 = !{!12051, !12052}
!12051 = !DILocalVariable(name: "key", scope: !12049, file: !1761, line: 251, type: !11944)
!12052 = !DILocalVariable(name: "ret", scope: !12049, file: !1761, line: 252, type: !108)
!12053 = !DILocation(line: 0, scope: !11961, inlinedAt: !12054)
!12054 = distinct !DILocation(line: 251, column: 25, scope: !12049)
!12055 = !DILocation(line: 55, column: 2, scope: !11970, inlinedAt: !12056)
!12056 = distinct !DILocation(line: 145, column: 10, scope: !11961, inlinedAt: !12054)
!12057 = !DILocation(line: 0, scope: !11970, inlinedAt: !12056)
!12058 = !DILocation(line: 0, scope: !12049)
!12059 = !DILocation(line: 252, column: 17, scope: !12049)
!12060 = !DILocation(line: 252, column: 29, scope: !12049)
!12061 = !DILocation(line: 252, column: 27, scope: !12049)
!12062 = !DILocation(line: 0, scope: !12012, inlinedAt: !12063)
!12063 = distinct !DILocation(line: 254, column: 2, scope: !12049)
!12064 = !DILocation(line: 0, scope: !12020, inlinedAt: !12065)
!12065 = distinct !DILocation(line: 215, column: 2, scope: !12012, inlinedAt: !12063)
!12066 = !DILocation(line: 95, column: 2, scope: !12020, inlinedAt: !12065)
!12067 = !DILocation(line: 255, column: 2, scope: !12049)
!12068 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1761, file: !1761, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !251)
!12069 = !DILocation(line: 260, column: 6, scope: !12070)
!12070 = distinct !DILexicalBlock(scope: !12068, file: !1761, line: 260, column: 6)
!12071 = !DILocation(line: 260, column: 16, scope: !12070)
!12072 = !DILocation(line: 260, column: 6, scope: !12068)
!12073 = !DILocation(line: 261, column: 17, scope: !12074)
!12074 = distinct !DILexicalBlock(scope: !12070, file: !1761, line: 260, column: 34)
!12075 = !DILocation(line: 262, column: 2, scope: !12074)
!12076 = !DILocation(line: 263, column: 1, scope: !12068)
!12077 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1761, file: !1761, line: 265, type: !334, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !251)
!12078 = !DILocation(line: 267, column: 16, scope: !12077)
!12079 = !DILocation(line: 268, column: 1, scope: !12077)
!12080 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12081, file: !12081, line: 9, type: !12082, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3085, retainedNodes: !12105)
!12081 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12082 = !DISubroutineType(types: !12083)
!12083 = !{!103, !12084, !185, !12104}
!12084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12085, size: 32)
!12085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12086)
!12086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1614, line: 60, size: 64, elements: !12087)
!12087 = !{!12088, !12103}
!12088 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12086, file: !1614, line: 69, baseType: !12089, size: 32)
!12089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12090, size: 32)
!12090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12091)
!12091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1614, line: 50, size: 64, elements: !12092)
!12092 = !{!12093, !12101, !12102}
!12093 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12091, file: !1614, line: 52, baseType: !12094, size: 32)
!12094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12095, size: 32)
!12095 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12096)
!12096 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1625, line: 37, baseType: !12097)
!12097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1625, line: 32, size: 64, elements: !12098)
!12098 = !{!12099, !12100}
!12099 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12097, file: !1625, line: 34, baseType: !108, size: 32)
!12100 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12097, file: !1625, line: 36, baseType: !108, size: 32, offset: 32)
!12101 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12091, file: !1614, line: 54, baseType: !185, size: 8, offset: 32)
!12102 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12091, file: !1614, line: 56, baseType: !185, size: 8, offset: 40)
!12103 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12086, file: !1614, line: 71, baseType: !185, size: 8, offset: 32)
!12104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12089, size: 32)
!12105 = !{!12106, !12107, !12108}
!12106 = !DILocalVariable(name: "config", arg: 1, scope: !12080, file: !12081, line: 9, type: !12084)
!12107 = !DILocalVariable(name: "id", arg: 2, scope: !12080, file: !12081, line: 9, type: !185)
!12108 = !DILocalVariable(name: "state", arg: 3, scope: !12080, file: !12081, line: 10, type: !12104)
!12109 = !DILocation(line: 0, scope: !12080)
!12110 = !DILocation(line: 12, column: 20, scope: !12080)
!12111 = !DILocation(line: 13, column: 27, scope: !12080)
!12112 = !DILocation(line: 13, column: 42, scope: !12080)
!12113 = !DILocation(line: 13, column: 19, scope: !12080)
!12114 = !DILocation(line: 13, column: 16, scope: !12080)
!12115 = !DILocation(line: 13, column: 2, scope: !12080)
!12116 = distinct !{!12116, !12115, !12117}
!12117 = !DILocation(line: 19, column: 2, scope: !12080)
!12118 = !DILocation(line: 14, column: 23, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !12120, file: !12081, line: 14, column: 7)
!12120 = distinct !DILexicalBlock(scope: !12080, file: !12081, line: 13, column: 54)
!12121 = !DILocation(line: 14, column: 10, scope: !12119)
!12122 = !DILocation(line: 18, column: 11, scope: !12120)
!12123 = !DILocation(line: 14, column: 7, scope: !12120)
!12124 = !DILocation(line: 22, column: 1, scope: !12080)
!12125 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1878, file: !1878, line: 193, type: !12126, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1796, retainedNodes: !12135)
!12126 = !DISubroutineType(types: !12127)
!12127 = !{!103, !12128, !185, !22}
!12128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12129, size: 32)
!12129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12130)
!12130 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1625, line: 37, baseType: !12131)
!12131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1625, line: 32, size: 64, elements: !12132)
!12132 = !{!12133, !12134}
!12133 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12131, file: !1625, line: 34, baseType: !108, size: 32)
!12134 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12131, file: !1625, line: 36, baseType: !108, size: 32, offset: 32)
!12135 = !{!12136, !12137, !12138, !12139, !12140, !12141, !12142, !12143, !12145}
!12136 = !DILocalVariable(name: "pins", arg: 1, scope: !12125, file: !1878, line: 193, type: !12128)
!12137 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12125, file: !1878, line: 193, type: !185)
!12138 = !DILocalVariable(name: "reg", arg: 3, scope: !12125, file: !1878, line: 194, type: !22)
!12139 = !DILocalVariable(name: "pin", scope: !12125, file: !1878, line: 196, type: !108)
!12140 = !DILocalVariable(name: "mux", scope: !12125, file: !1878, line: 196, type: !108)
!12141 = !DILocalVariable(name: "pin_cgf", scope: !12125, file: !1878, line: 197, type: !108)
!12142 = !DILocalVariable(name: "ret", scope: !12125, file: !1878, line: 198, type: !103)
!12143 = !DILocalVariable(name: "i", scope: !12144, file: !1878, line: 209, type: !185)
!12144 = distinct !DILexicalBlock(scope: !12125, file: !1878, line: 209, column: 2)
!12145 = !DILocalVariable(name: "gpio_out", scope: !12146, file: !1878, line: 239, type: !108)
!12146 = distinct !DILexicalBlock(scope: !12147, file: !1878, line: 238, column: 55)
!12147 = distinct !DILexicalBlock(scope: !12148, file: !1878, line: 238, column: 14)
!12148 = distinct !DILexicalBlock(scope: !12149, file: !1878, line: 236, column: 14)
!12149 = distinct !DILexicalBlock(scope: !12150, file: !1878, line: 234, column: 7)
!12150 = distinct !DILexicalBlock(scope: !12151, file: !1878, line: 209, column: 41)
!12151 = distinct !DILexicalBlock(scope: !12144, file: !1878, line: 209, column: 2)
!12152 = !DILocation(line: 0, scope: !12125)
!12153 = !DILocation(line: 0, scope: !12144)
!12154 = !DILocation(line: 209, column: 25, scope: !12151)
!12155 = !DILocation(line: 209, column: 2, scope: !12144)
!12156 = distinct !{!12156, !12155, !12157}
!12157 = !DILocation(line: 259, column: 2, scope: !12144)
!12158 = !DILocation(line: 210, column: 17, scope: !12150)
!12159 = !DILocation(line: 234, column: 7, scope: !12149)
!12160 = !DILocation(line: 234, column: 33, scope: !12149)
!12161 = !DILocation(line: 234, column: 7, scope: !12150)
!12162 = !DILocation(line: 235, column: 22, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12149, file: !1878, line: 234, column: 49)
!12164 = !DILocation(line: 235, column: 29, scope: !12163)
!12165 = !DILocation(line: 236, column: 3, scope: !12163)
!12166 = !DILocation(line: 236, column: 14, scope: !12149)
!12167 = !DILocation(line: 239, column: 32, scope: !12146)
!12168 = !DILocation(line: 0, scope: !12146)
!12169 = !DILocation(line: 241, column: 8, scope: !12146)
!12170 = !DILocation(line: 246, column: 3, scope: !12146)
!12171 = !DILocation(line: 252, column: 9, scope: !12150)
!12172 = !DILocation(line: 255, column: 9, scope: !12150)
!12173 = !DILocation(line: 256, column: 11, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12150, file: !1878, line: 256, column: 7)
!12175 = !DILocation(line: 209, column: 37, scope: !12151)
!12176 = !DILocation(line: 256, column: 7, scope: !12150)
!12177 = !DILocation(line: 262, column: 1, scope: !12125)
!12178 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1878, file: !1878, line: 176, type: !12179, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1796, retainedNodes: !12181)
!12179 = !DISubroutineType(types: !12180)
!12180 = !{!103, !108, !108, !108}
!12181 = !{!12182, !12183, !12184, !12185}
!12182 = !DILocalVariable(name: "pin", arg: 1, scope: !12178, file: !1878, line: 176, type: !108)
!12183 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12178, file: !1878, line: 176, type: !108)
!12184 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12178, file: !1878, line: 176, type: !108)
!12185 = !DILocalVariable(name: "port_device", scope: !12178, file: !1878, line: 178, type: !1808)
!12186 = !DILocation(line: 0, scope: !12178)
!12187 = !DILocation(line: 180, column: 22, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12178, file: !1878, line: 180, column: 6)
!12189 = !DILocation(line: 180, column: 6, scope: !12178)
!12190 = !DILocation(line: 180, column: 6, scope: !12188)
!12191 = !DILocation(line: 184, column: 16, scope: !12178)
!12192 = !DILocation(line: 186, column: 19, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12178, file: !1878, line: 186, column: 6)
!12194 = !DILocation(line: 186, column: 28, scope: !12193)
!12195 = !DILocation(line: 186, column: 33, scope: !12193)
!12196 = !DILocation(line: 186, column: 6, scope: !12178)
!12197 = !DILocation(line: 190, column: 43, scope: !12178)
!12198 = !DILocation(line: 190, column: 9, scope: !12178)
!12199 = !DILocation(line: 190, column: 2, scope: !12178)
!12200 = !DILocation(line: 191, column: 1, scope: !12178)
!12201 = distinct !DISubprogram(name: "device_is_ready", scope: !10157, file: !10157, line: 47, type: !12202, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1796, retainedNodes: !12204)
!12202 = !DISubroutineType(types: !12203)
!12203 = !{!131, !1808}
!12204 = !{!12205}
!12205 = !DILocalVariable(name: "dev", arg: 1, scope: !12201, file: !10157, line: 47, type: !1808)
!12206 = !DILocation(line: 0, scope: !12201)
!12207 = !DILocation(line: 55, column: 2, scope: !12208)
!12208 = distinct !DILexicalBlock(scope: !12201, file: !10157, line: 55, column: 2)
!12209 = !{i64 2149262464}
!12210 = !DILocation(line: 56, column: 9, scope: !12201)
!12211 = !DILocation(line: 56, column: 2, scope: !12201)
!12212 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !429, file: !429, line: 730, type: !12202, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1796, retainedNodes: !12213)
!12213 = !{!12214}
!12214 = !DILocalVariable(name: "dev", arg: 1, scope: !12212, file: !429, line: 730, type: !1808)
!12215 = !DILocation(line: 0, scope: !12212)
!12216 = !DILocation(line: 732, column: 9, scope: !12212)
!12217 = !DILocation(line: 732, column: 2, scope: !12212)
!12218 = distinct !DISubprogram(name: "SystemInit", scope: !1928, file: !1928, line: 167, type: !334, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !251)
!12219 = !DILocation(line: 182, column: 1, scope: !12218)
!12220 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1928, file: !1928, line: 220, type: !334, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !12221)
!12221 = !{!12222, !12223, !12224, !12225, !12226}
!12222 = !DILocalVariable(name: "tmp", scope: !12220, file: !1928, line: 222, type: !108)
!12223 = !DILocalVariable(name: "pllvco", scope: !12220, file: !1928, line: 222, type: !108)
!12224 = !DILocalVariable(name: "pllp", scope: !12220, file: !1928, line: 222, type: !108)
!12225 = !DILocalVariable(name: "pllsource", scope: !12220, file: !1928, line: 222, type: !108)
!12226 = !DILocalVariable(name: "pllm", scope: !12220, file: !1928, line: 222, type: !108)
!12227 = !DILocation(line: 0, scope: !12220)
!12228 = !DILocation(line: 225, column: 14, scope: !12220)
!12229 = !DILocation(line: 225, column: 19, scope: !12220)
!12230 = !DILocation(line: 227, column: 3, scope: !12220)
!12231 = !DILocation(line: 240, column: 25, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12220, file: !1928, line: 228, column: 3)
!12233 = !DILocation(line: 241, column: 19, scope: !12232)
!12234 = !DILocation(line: 241, column: 27, scope: !12232)
!12235 = !DILocation(line: 0, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12232, file: !1928, line: 243, column: 11)
!12237 = !DILocation(line: 254, column: 22, scope: !12232)
!12238 = !DILocation(line: 254, column: 62, scope: !12232)
!12239 = !DILocation(line: 255, column: 31, scope: !12232)
!12240 = !DILocation(line: 256, column: 7, scope: !12232)
!12241 = !DILocation(line: 0, scope: !12232)
!12242 = !DILocation(line: 263, column: 30, scope: !12220)
!12243 = !DILocation(line: 263, column: 52, scope: !12220)
!12244 = !DILocation(line: 263, column: 9, scope: !12220)
!12245 = !DILocation(line: 265, column: 19, scope: !12220)
!12246 = !DILocation(line: 266, column: 1, scope: !12220)
!12247 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12248, file: !12248, line: 200, type: !12249, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !251)
!12248 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12249 = !DISubroutineType(types: !12250)
!12250 = !{!12251}
!12251 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3091, line: 44, baseType: !3090)
!12252 = !DILocation(line: 202, column: 3, scope: !12247)
!12253 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12248, file: !12248, line: 219, type: !12254, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !12278)
!12254 = !DISubroutineType(types: !12255)
!12255 = !{!12251, !12256}
!12256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12257, size: 32)
!12257 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12258, line: 70, baseType: !12259)
!12258 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12259 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12258, line: 49, size: 384, elements: !12260)
!12260 = !{!12261, !12262, !12263, !12264, !12265, !12266, !12267}
!12261 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12259, file: !12258, line: 51, baseType: !108, size: 32)
!12262 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12259, file: !12258, line: 54, baseType: !108, size: 32, offset: 32)
!12263 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12259, file: !12258, line: 57, baseType: !108, size: 32, offset: 64)
!12264 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12259, file: !12258, line: 60, baseType: !108, size: 32, offset: 96)
!12265 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12259, file: !12258, line: 63, baseType: !108, size: 32, offset: 128)
!12266 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12259, file: !12258, line: 66, baseType: !108, size: 32, offset: 160)
!12267 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12259, file: !12258, line: 69, baseType: !12268, size: 192, offset: 192)
!12268 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12269, line: 73, baseType: !12270)
!12269 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12270 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12269, line: 45, size: 192, elements: !12271)
!12271 = !{!12272, !12273, !12274, !12275, !12276, !12277}
!12272 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12270, file: !12269, line: 47, baseType: !108, size: 32)
!12273 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12270, file: !12269, line: 50, baseType: !108, size: 32, offset: 32)
!12274 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12270, file: !12269, line: 53, baseType: !108, size: 32, offset: 64)
!12275 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12270, file: !12269, line: 56, baseType: !108, size: 32, offset: 96)
!12276 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12270, file: !12269, line: 60, baseType: !108, size: 32, offset: 128)
!12277 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12270, file: !12269, line: 63, baseType: !108, size: 32, offset: 160)
!12278 = !{!12279, !12280, !12281, !12282, !12286}
!12279 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12253, file: !12248, line: 219, type: !12256)
!12280 = !DILocalVariable(name: "tickstart", scope: !12253, file: !12248, line: 221, type: !108)
!12281 = !DILocalVariable(name: "pll_config", scope: !12253, file: !12248, line: 221, type: !108)
!12282 = !DILocalVariable(name: "pwrclkchanged", scope: !12283, file: !12248, line: 391, type: !12285)
!12283 = distinct !DILexicalBlock(scope: !12284, file: !12248, line: 390, column: 3)
!12284 = distinct !DILexicalBlock(scope: !12253, file: !12248, line: 389, column: 6)
!12285 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !913, line: 188, baseType: !3097)
!12286 = !DILocalVariable(name: "tmpreg", scope: !12287, file: !12248, line: 400, type: !409)
!12287 = distinct !DILexicalBlock(scope: !12288, file: !12248, line: 400, column: 7)
!12288 = distinct !DILexicalBlock(scope: !12289, file: !12248, line: 399, column: 5)
!12289 = distinct !DILexicalBlock(scope: !12283, file: !12248, line: 398, column: 8)
!12290 = !DILocation(line: 0, scope: !12253)
!12291 = !DILocation(line: 224, column: 24, scope: !12292)
!12292 = distinct !DILexicalBlock(scope: !12253, file: !12248, line: 224, column: 6)
!12293 = !DILocation(line: 224, column: 6, scope: !12253)
!12294 = !DILocation(line: 232, column: 27, scope: !12295)
!12295 = distinct !DILexicalBlock(scope: !12253, file: !12248, line: 232, column: 6)
!12296 = !DILocation(line: 232, column: 43, scope: !12295)
!12297 = !DILocation(line: 232, column: 69, scope: !12295)
!12298 = !DILocation(line: 232, column: 6, scope: !12253)
!12299 = !DILocation(line: 237, column: 9, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !12301, file: !12248, line: 237, column: 8)
!12301 = distinct !DILexicalBlock(scope: !12295, file: !12248, line: 233, column: 3)
!12302 = !DILocation(line: 237, column: 39, scope: !12300)
!12303 = !DILocation(line: 237, column: 60, scope: !12300)
!12304 = !DILocation(line: 238, column: 9, scope: !12300)
!12305 = !DILocation(line: 238, column: 39, scope: !12300)
!12306 = !DILocation(line: 238, column: 60, scope: !12300)
!12307 = !DILocation(line: 238, column: 70, scope: !12300)
!12308 = !DILocation(line: 238, column: 78, scope: !12300)
!12309 = !DILocation(line: 238, column: 100, scope: !12300)
!12310 = !DILocation(line: 237, column: 8, scope: !12301)
!12311 = !DILocation(line: 240, column: 11, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !12313, file: !12248, line: 240, column: 10)
!12313 = distinct !DILexicalBlock(scope: !12300, file: !12248, line: 239, column: 5)
!12314 = !DILocation(line: 240, column: 57, scope: !12312)
!12315 = !DILocation(line: 240, column: 80, scope: !12312)
!12316 = !DILocation(line: 240, column: 89, scope: !12312)
!12317 = !DILocation(line: 240, column: 10, scope: !12313)
!12318 = !DILocation(line: 248, column: 7, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12320, file: !12248, line: 248, column: 7)
!12320 = distinct !DILexicalBlock(scope: !12321, file: !12248, line: 248, column: 7)
!12321 = distinct !DILexicalBlock(scope: !12300, file: !12248, line: 246, column: 5)
!12322 = !DILocation(line: 248, column: 7, scope: !12320)
!12323 = !DILocation(line: 248, column: 7, scope: !12324)
!12324 = distinct !DILexicalBlock(scope: !12319, file: !12248, line: 248, column: 7)
!12325 = !DILocation(line: 248, column: 7, scope: !12326)
!12326 = distinct !DILexicalBlock(scope: !12327, file: !12248, line: 248, column: 7)
!12327 = distinct !DILexicalBlock(scope: !12319, file: !12248, line: 248, column: 7)
!12328 = !DILocation(line: 248, column: 7, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !12327, file: !12248, line: 248, column: 7)
!12330 = !DILocation(line: 0, scope: !12319)
!12331 = !DILocation(line: 251, column: 30, scope: !12332)
!12332 = distinct !DILexicalBlock(scope: !12321, file: !12248, line: 251, column: 10)
!12333 = !DILocation(line: 251, column: 40, scope: !12332)
!12334 = !DILocation(line: 0, scope: !12332)
!12335 = !DILocation(line: 251, column: 10, scope: !12321)
!12336 = !DILocation(line: 257, column: 15, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12332, file: !12248, line: 252, column: 7)
!12338 = !DILocation(line: 257, column: 51, scope: !12337)
!12339 = !DILocation(line: 257, column: 9, scope: !12337)
!12340 = !DILocation(line: 259, column: 15, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12342, file: !12248, line: 259, column: 14)
!12342 = distinct !DILexicalBlock(scope: !12337, file: !12248, line: 258, column: 9)
!12343 = !DILocation(line: 259, column: 29, scope: !12341)
!12344 = !DILocation(line: 259, column: 43, scope: !12341)
!12345 = !DILocation(line: 259, column: 14, scope: !12342)
!12346 = distinct !{!12346, !12339, !12347}
!12347 = !DILocation(line: 263, column: 9, scope: !12337)
!12348 = !DILocation(line: 271, column: 15, scope: !12349)
!12349 = distinct !DILexicalBlock(scope: !12332, file: !12248, line: 266, column: 7)
!12350 = !DILocation(line: 271, column: 9, scope: !12349)
!12351 = !DILocation(line: 273, column: 15, scope: !12352)
!12352 = distinct !DILexicalBlock(scope: !12353, file: !12248, line: 273, column: 14)
!12353 = distinct !DILexicalBlock(scope: !12349, file: !12248, line: 272, column: 9)
!12354 = !DILocation(line: 273, column: 29, scope: !12352)
!12355 = !DILocation(line: 273, column: 43, scope: !12352)
!12356 = !DILocation(line: 273, column: 14, scope: !12353)
!12357 = distinct !{!12357, !12350, !12358}
!12358 = !DILocation(line: 277, column: 9, scope: !12349)
!12359 = !DILocation(line: 282, column: 27, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12253, file: !12248, line: 282, column: 6)
!12361 = !DILocation(line: 282, column: 43, scope: !12360)
!12362 = !DILocation(line: 282, column: 69, scope: !12360)
!12363 = !DILocation(line: 282, column: 6, scope: !12253)
!12364 = !DILocation(line: 289, column: 9, scope: !12365)
!12365 = distinct !DILexicalBlock(scope: !12366, file: !12248, line: 289, column: 8)
!12366 = distinct !DILexicalBlock(scope: !12360, file: !12248, line: 283, column: 3)
!12367 = !DILocation(line: 289, column: 39, scope: !12365)
!12368 = !DILocation(line: 289, column: 60, scope: !12365)
!12369 = !DILocation(line: 290, column: 9, scope: !12365)
!12370 = !DILocation(line: 290, column: 39, scope: !12365)
!12371 = !DILocation(line: 290, column: 60, scope: !12365)
!12372 = !DILocation(line: 290, column: 70, scope: !12365)
!12373 = !DILocation(line: 290, column: 78, scope: !12365)
!12374 = !DILocation(line: 290, column: 100, scope: !12365)
!12375 = !DILocation(line: 289, column: 8, scope: !12366)
!12376 = !DILocation(line: 293, column: 11, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12378, file: !12248, line: 293, column: 10)
!12378 = distinct !DILexicalBlock(scope: !12365, file: !12248, line: 291, column: 5)
!12379 = !DILocation(line: 293, column: 57, scope: !12377)
!12380 = !DILocation(line: 293, column: 80, scope: !12377)
!12381 = !DILocation(line: 293, column: 89, scope: !12377)
!12382 = !DILocation(line: 293, column: 10, scope: !12378)
!12383 = !DILocation(line: 307, column: 30, scope: !12384)
!12384 = distinct !DILexicalBlock(scope: !12385, file: !12248, line: 307, column: 10)
!12385 = distinct !DILexicalBlock(scope: !12365, file: !12248, line: 305, column: 5)
!12386 = !DILocation(line: 307, column: 39, scope: !12384)
!12387 = !DILocation(line: 307, column: 10, scope: !12385)
!12388 = !DILocation(line: 310, column: 9, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12384, file: !12248, line: 308, column: 7)
!12390 = !DILocation(line: 313, column: 21, scope: !12389)
!12391 = !DILocation(line: 316, column: 9, scope: !12389)
!12392 = !DILocation(line: 316, column: 15, scope: !12389)
!12393 = !DILocation(line: 316, column: 51, scope: !12389)
!12394 = !DILocation(line: 318, column: 15, scope: !12395)
!12395 = distinct !DILexicalBlock(scope: !12396, file: !12248, line: 318, column: 14)
!12396 = distinct !DILexicalBlock(scope: !12389, file: !12248, line: 317, column: 9)
!12397 = !DILocation(line: 318, column: 29, scope: !12395)
!12398 = !DILocation(line: 318, column: 43, scope: !12395)
!12399 = !DILocation(line: 318, column: 14, scope: !12396)
!12400 = distinct !{!12400, !12391, !12401}
!12401 = !DILocation(line: 322, column: 9, scope: !12389)
!12402 = !DILocation(line: 330, column: 9, scope: !12403)
!12403 = distinct !DILexicalBlock(scope: !12384, file: !12248, line: 328, column: 7)
!12404 = !DILocation(line: 333, column: 21, scope: !12403)
!12405 = !DILocation(line: 336, column: 9, scope: !12403)
!12406 = !DILocation(line: 336, column: 15, scope: !12403)
!12407 = !DILocation(line: 338, column: 15, scope: !12408)
!12408 = distinct !DILexicalBlock(scope: !12409, file: !12248, line: 338, column: 14)
!12409 = distinct !DILexicalBlock(scope: !12403, file: !12248, line: 337, column: 9)
!12410 = !DILocation(line: 338, column: 29, scope: !12408)
!12411 = !DILocation(line: 338, column: 43, scope: !12408)
!12412 = !DILocation(line: 338, column: 14, scope: !12409)
!12413 = distinct !{!12413, !12405, !12414}
!12414 = !DILocation(line: 342, column: 9, scope: !12403)
!12415 = !DILocation(line: 0, scope: !12365)
!12416 = !DILocation(line: 347, column: 27, scope: !12417)
!12417 = distinct !DILexicalBlock(scope: !12253, file: !12248, line: 347, column: 6)
!12418 = !DILocation(line: 347, column: 43, scope: !12417)
!12419 = !DILocation(line: 347, column: 69, scope: !12417)
!12420 = !DILocation(line: 347, column: 6, scope: !12253)
!12421 = !DILocation(line: 353, column: 28, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12423, file: !12248, line: 353, column: 8)
!12423 = distinct !DILexicalBlock(scope: !12417, file: !12248, line: 348, column: 3)
!12424 = !DILocation(line: 353, column: 37, scope: !12422)
!12425 = !DILocation(line: 353, column: 8, scope: !12423)
!12426 = !DILocation(line: 356, column: 7, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !12422, file: !12248, line: 354, column: 5)
!12428 = !DILocation(line: 359, column: 19, scope: !12427)
!12429 = !DILocation(line: 362, column: 7, scope: !12427)
!12430 = !DILocation(line: 362, column: 13, scope: !12427)
!12431 = !DILocation(line: 362, column: 49, scope: !12427)
!12432 = !DILocation(line: 364, column: 13, scope: !12433)
!12433 = distinct !DILexicalBlock(scope: !12434, file: !12248, line: 364, column: 12)
!12434 = distinct !DILexicalBlock(scope: !12427, file: !12248, line: 363, column: 7)
!12435 = !DILocation(line: 364, column: 27, scope: !12433)
!12436 = !DILocation(line: 364, column: 41, scope: !12433)
!12437 = !DILocation(line: 364, column: 12, scope: !12434)
!12438 = distinct !{!12438, !12429, !12439}
!12439 = !DILocation(line: 368, column: 7, scope: !12427)
!12440 = !DILocation(line: 373, column: 7, scope: !12441)
!12441 = distinct !DILexicalBlock(scope: !12422, file: !12248, line: 371, column: 5)
!12442 = !DILocation(line: 376, column: 19, scope: !12441)
!12443 = !DILocation(line: 379, column: 7, scope: !12441)
!12444 = !DILocation(line: 379, column: 13, scope: !12441)
!12445 = !DILocation(line: 381, column: 13, scope: !12446)
!12446 = distinct !DILexicalBlock(scope: !12447, file: !12248, line: 381, column: 12)
!12447 = distinct !DILexicalBlock(scope: !12441, file: !12248, line: 380, column: 7)
!12448 = !DILocation(line: 381, column: 27, scope: !12446)
!12449 = !DILocation(line: 381, column: 41, scope: !12446)
!12450 = !DILocation(line: 381, column: 12, scope: !12447)
!12451 = distinct !{!12451, !12443, !12452}
!12452 = !DILocation(line: 385, column: 7, scope: !12441)
!12453 = !DILocation(line: 389, column: 27, scope: !12284)
!12454 = !DILocation(line: 389, column: 43, scope: !12284)
!12455 = !DILocation(line: 389, column: 69, scope: !12284)
!12456 = !DILocation(line: 389, column: 6, scope: !12253)
!12457 = !DILocation(line: 0, scope: !12283)
!12458 = !DILocation(line: 398, column: 8, scope: !12289)
!12459 = !DILocation(line: 398, column: 8, scope: !12283)
!12460 = !DILocation(line: 400, column: 7, scope: !12287)
!12461 = !DILocation(line: 400, column: 7, scope: !12288)
!12462 = !DILocation(line: 402, column: 5, scope: !12288)
!12463 = !DILocation(line: 404, column: 8, scope: !12464)
!12464 = distinct !DILexicalBlock(scope: !12283, file: !12248, line: 404, column: 8)
!12465 = !DILocation(line: 404, column: 8, scope: !12283)
!12466 = !DILocation(line: 407, column: 7, scope: !12467)
!12467 = distinct !DILexicalBlock(scope: !12464, file: !12248, line: 405, column: 5)
!12468 = !DILocation(line: 410, column: 19, scope: !12467)
!12469 = !DILocation(line: 412, column: 7, scope: !12467)
!12470 = !DILocation(line: 412, column: 13, scope: !12467)
!12471 = !DILocation(line: 414, column: 13, scope: !12472)
!12472 = distinct !DILexicalBlock(scope: !12473, file: !12248, line: 414, column: 12)
!12473 = distinct !DILexicalBlock(scope: !12467, file: !12248, line: 413, column: 7)
!12474 = !DILocation(line: 414, column: 27, scope: !12472)
!12475 = !DILocation(line: 414, column: 40, scope: !12472)
!12476 = !DILocation(line: 414, column: 12, scope: !12473)
!12477 = distinct !{!12477, !12469, !12478}
!12478 = !DILocation(line: 418, column: 7, scope: !12467)
!12479 = !DILocation(line: 422, column: 5, scope: !12480)
!12480 = distinct !DILexicalBlock(scope: !12481, file: !12248, line: 422, column: 5)
!12481 = distinct !DILexicalBlock(scope: !12283, file: !12248, line: 422, column: 5)
!12482 = !DILocation(line: 422, column: 5, scope: !12481)
!12483 = !DILocation(line: 422, column: 5, scope: !12484)
!12484 = distinct !DILexicalBlock(scope: !12480, file: !12248, line: 422, column: 5)
!12485 = !DILocation(line: 422, column: 5, scope: !12486)
!12486 = distinct !DILexicalBlock(scope: !12487, file: !12248, line: 422, column: 5)
!12487 = distinct !DILexicalBlock(scope: !12480, file: !12248, line: 422, column: 5)
!12488 = !DILocation(line: 422, column: 5, scope: !12489)
!12489 = distinct !DILexicalBlock(scope: !12487, file: !12248, line: 422, column: 5)
!12490 = !DILocation(line: 0, scope: !12480)
!12491 = !DILocation(line: 424, column: 28, scope: !12492)
!12492 = distinct !DILexicalBlock(scope: !12283, file: !12248, line: 424, column: 8)
!12493 = !DILocation(line: 424, column: 38, scope: !12492)
!12494 = !DILocation(line: 0, scope: !12492)
!12495 = !DILocation(line: 424, column: 8, scope: !12283)
!12496 = !DILocation(line: 430, column: 13, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !12492, file: !12248, line: 425, column: 5)
!12498 = !DILocation(line: 430, column: 49, scope: !12497)
!12499 = !DILocation(line: 430, column: 7, scope: !12497)
!12500 = !DILocation(line: 432, column: 13, scope: !12501)
!12501 = distinct !DILexicalBlock(scope: !12502, file: !12248, line: 432, column: 12)
!12502 = distinct !DILexicalBlock(scope: !12497, file: !12248, line: 431, column: 7)
!12503 = !DILocation(line: 432, column: 27, scope: !12501)
!12504 = !DILocation(line: 432, column: 41, scope: !12501)
!12505 = !DILocation(line: 432, column: 12, scope: !12502)
!12506 = distinct !{!12506, !12499, !12507}
!12507 = !DILocation(line: 436, column: 7, scope: !12497)
!12508 = !DILocation(line: 444, column: 13, scope: !12509)
!12509 = distinct !DILexicalBlock(scope: !12492, file: !12248, line: 439, column: 5)
!12510 = !DILocation(line: 444, column: 7, scope: !12509)
!12511 = !DILocation(line: 446, column: 13, scope: !12512)
!12512 = distinct !DILexicalBlock(scope: !12513, file: !12248, line: 446, column: 12)
!12513 = distinct !DILexicalBlock(scope: !12509, file: !12248, line: 445, column: 7)
!12514 = !DILocation(line: 446, column: 27, scope: !12512)
!12515 = !DILocation(line: 446, column: 41, scope: !12512)
!12516 = !DILocation(line: 446, column: 12, scope: !12513)
!12517 = distinct !{!12517, !12510, !12518}
!12518 = !DILocation(line: 450, column: 7, scope: !12509)
!12519 = !DILocation(line: 454, column: 8, scope: !12283)
!12520 = !DILocation(line: 456, column: 7, scope: !12521)
!12521 = distinct !DILexicalBlock(scope: !12522, file: !12248, line: 455, column: 5)
!12522 = distinct !DILexicalBlock(scope: !12283, file: !12248, line: 454, column: 8)
!12523 = !DILocation(line: 457, column: 5, scope: !12521)
!12524 = !DILocation(line: 462, column: 31, scope: !12525)
!12525 = distinct !DILexicalBlock(scope: !12253, file: !12248, line: 462, column: 7)
!12526 = !DILocation(line: 462, column: 41, scope: !12525)
!12527 = !DILocation(line: 462, column: 7, scope: !12253)
!12528 = !DILocation(line: 465, column: 8, scope: !12529)
!12529 = distinct !DILexicalBlock(scope: !12530, file: !12248, line: 465, column: 8)
!12530 = distinct !DILexicalBlock(scope: !12525, file: !12248, line: 463, column: 3)
!12531 = !DILocation(line: 465, column: 38, scope: !12529)
!12532 = !DILocation(line: 465, column: 8, scope: !12530)
!12533 = !DILocation(line: 467, column: 44, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12535, file: !12248, line: 467, column: 10)
!12535 = distinct !DILexicalBlock(scope: !12529, file: !12248, line: 466, column: 5)
!12536 = !DILocation(line: 0, scope: !12534)
!12537 = !DILocation(line: 467, column: 10, scope: !12535)
!12538 = !DILocation(line: 483, column: 15, scope: !12539)
!12539 = distinct !DILexicalBlock(scope: !12534, file: !12248, line: 468, column: 7)
!12540 = !DILocation(line: 483, column: 9, scope: !12539)
!12541 = !DILocation(line: 485, column: 15, scope: !12542)
!12542 = distinct !DILexicalBlock(scope: !12543, file: !12248, line: 485, column: 14)
!12543 = distinct !DILexicalBlock(scope: !12539, file: !12248, line: 484, column: 9)
!12544 = !DILocation(line: 485, column: 29, scope: !12542)
!12545 = !DILocation(line: 485, column: 43, scope: !12542)
!12546 = !DILocation(line: 485, column: 14, scope: !12543)
!12547 = distinct !{!12547, !12540, !12548}
!12548 = !DILocation(line: 489, column: 9, scope: !12539)
!12549 = !DILocation(line: 492, column: 9, scope: !12539)
!12550 = !DILocation(line: 498, column: 9, scope: !12539)
!12551 = !DILocation(line: 501, column: 21, scope: !12539)
!12552 = !DILocation(line: 504, column: 9, scope: !12539)
!12553 = !DILocation(line: 504, column: 15, scope: !12539)
!12554 = !DILocation(line: 504, column: 51, scope: !12539)
!12555 = !DILocation(line: 506, column: 15, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12557, file: !12248, line: 506, column: 14)
!12557 = distinct !DILexicalBlock(scope: !12539, file: !12248, line: 505, column: 9)
!12558 = !DILocation(line: 506, column: 29, scope: !12556)
!12559 = !DILocation(line: 506, column: 43, scope: !12556)
!12560 = !DILocation(line: 506, column: 14, scope: !12557)
!12561 = distinct !{!12561, !12552, !12562}
!12562 = !DILocation(line: 510, column: 9, scope: !12539)
!12563 = !DILocation(line: 521, column: 15, scope: !12564)
!12564 = distinct !DILexicalBlock(scope: !12534, file: !12248, line: 513, column: 7)
!12565 = !DILocation(line: 521, column: 9, scope: !12564)
!12566 = !DILocation(line: 523, column: 15, scope: !12567)
!12567 = distinct !DILexicalBlock(scope: !12568, file: !12248, line: 523, column: 14)
!12568 = distinct !DILexicalBlock(scope: !12564, file: !12248, line: 522, column: 9)
!12569 = !DILocation(line: 523, column: 29, scope: !12567)
!12570 = !DILocation(line: 523, column: 43, scope: !12567)
!12571 = !DILocation(line: 523, column: 14, scope: !12568)
!12572 = distinct !{!12572, !12565, !12573}
!12573 = !DILocation(line: 527, column: 9, scope: !12564)
!12574 = !DILocation(line: 533, column: 44, scope: !12575)
!12575 = distinct !DILexicalBlock(scope: !12576, file: !12248, line: 533, column: 10)
!12576 = distinct !DILexicalBlock(scope: !12529, file: !12248, line: 531, column: 5)
!12577 = !DILocation(line: 533, column: 10, scope: !12576)
!12578 = !DILocation(line: 540, column: 27, scope: !12579)
!12579 = distinct !DILexicalBlock(scope: !12575, file: !12248, line: 538, column: 7)
!12580 = !DILocation(line: 551, column: 14, scope: !12581)
!12581 = distinct !DILexicalBlock(scope: !12579, file: !12248, line: 550, column: 13)
!12582 = !DILocation(line: 551, column: 81, scope: !12581)
!12583 = !DILocation(line: 551, column: 55, scope: !12581)
!12584 = !DILocation(line: 551, column: 92, scope: !12581)
!12585 = !DILocation(line: 552, column: 14, scope: !12581)
!12586 = !DILocation(line: 552, column: 80, scope: !12581)
!12587 = !DILocation(line: 552, column: 53, scope: !12581)
!12588 = !DILocation(line: 552, column: 111, scope: !12581)
!12589 = !DILocation(line: 553, column: 14, scope: !12581)
!12590 = !DILocation(line: 553, column: 80, scope: !12581)
!12591 = !DILocation(line: 553, column: 86, scope: !12581)
!12592 = !DILocation(line: 553, column: 53, scope: !12581)
!12593 = !DILocation(line: 553, column: 111, scope: !12581)
!12594 = !DILocation(line: 554, column: 14, scope: !12581)
!12595 = !DILocation(line: 554, column: 82, scope: !12581)
!12596 = !DILocation(line: 554, column: 101, scope: !12581)
!12597 = !DILocation(line: 554, column: 53, scope: !12581)
!12598 = !DILocation(line: 554, column: 126, scope: !12581)
!12599 = !DILocation(line: 555, column: 14, scope: !12581)
!12600 = !DILocation(line: 555, column: 80, scope: !12581)
!12601 = !DILocation(line: 555, column: 85, scope: !12581)
!12602 = !DILocation(line: 555, column: 53, scope: !12581)
!12603 = !DILocation(line: 550, column: 13, scope: !12579)
!12604 = !DILocation(line: 563, column: 3, scope: !12253)
!12605 = !DILocation(line: 564, column: 1, scope: !12253)
!12606 = !DISubprogram(name: "HAL_GetTick", scope: !12607, file: !12607, line: 234, type: !3620, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!12607 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12608 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12248, file: !12248, line: 591, type: !12609, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !12620)
!12609 = !DISubroutineType(types: !12610)
!12610 = !{!12251, !12611, !108}
!12611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12612, size: 32)
!12612 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12258, line: 92, baseType: !12613)
!12613 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12258, line: 75, size: 160, elements: !12614)
!12614 = !{!12615, !12616, !12617, !12618, !12619}
!12615 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12613, file: !12258, line: 77, baseType: !108, size: 32)
!12616 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12613, file: !12258, line: 80, baseType: !108, size: 32, offset: 32)
!12617 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12613, file: !12258, line: 83, baseType: !108, size: 32, offset: 64)
!12618 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12613, file: !12258, line: 86, baseType: !108, size: 32, offset: 96)
!12619 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12613, file: !12258, line: 89, baseType: !108, size: 32, offset: 128)
!12620 = !{!12621, !12622, !12623}
!12621 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12608, file: !12248, line: 591, type: !12611)
!12622 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12608, file: !12248, line: 591, type: !108)
!12623 = !DILocalVariable(name: "tickstart", scope: !12608, file: !12248, line: 593, type: !108)
!12624 = !DILocation(line: 0, scope: !12608)
!12625 = !DILocation(line: 596, column: 24, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12608, file: !12248, line: 596, column: 6)
!12627 = !DILocation(line: 596, column: 6, scope: !12608)
!12628 = !DILocation(line: 610, column: 17, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12608, file: !12248, line: 610, column: 6)
!12630 = !DILocation(line: 610, column: 15, scope: !12629)
!12631 = !DILocation(line: 610, column: 6, scope: !12608)
!12632 = !DILocation(line: 613, column: 5, scope: !12633)
!12633 = distinct !DILexicalBlock(scope: !12629, file: !12248, line: 611, column: 3)
!12634 = !DILocation(line: 617, column: 8, scope: !12635)
!12635 = distinct !DILexicalBlock(scope: !12633, file: !12248, line: 617, column: 8)
!12636 = !DILocation(line: 617, column: 34, scope: !12635)
!12637 = !DILocation(line: 617, column: 8, scope: !12633)
!12638 = !DILocation(line: 624, column: 27, scope: !12639)
!12639 = distinct !DILexicalBlock(scope: !12608, file: !12248, line: 624, column: 6)
!12640 = !DILocation(line: 624, column: 38, scope: !12639)
!12641 = !DILocation(line: 624, column: 60, scope: !12639)
!12642 = !DILocation(line: 624, column: 6, scope: !12608)
!12643 = !DILocation(line: 628, column: 40, scope: !12644)
!12644 = distinct !DILexicalBlock(scope: !12645, file: !12248, line: 628, column: 8)
!12645 = distinct !DILexicalBlock(scope: !12639, file: !12248, line: 625, column: 3)
!12646 = !DILocation(line: 628, column: 63, scope: !12644)
!12647 = !DILocation(line: 628, column: 8, scope: !12645)
!12648 = !DILocation(line: 630, column: 7, scope: !12649)
!12649 = distinct !DILexicalBlock(scope: !12644, file: !12248, line: 629, column: 5)
!12650 = !DILocation(line: 633, column: 29, scope: !12651)
!12651 = distinct !DILexicalBlock(scope: !12645, file: !12248, line: 633, column: 8)
!12652 = !DILocation(line: 631, column: 5, scope: !12649)
!12653 = !DILocation(line: 633, column: 40, scope: !12651)
!12654 = !DILocation(line: 633, column: 63, scope: !12651)
!12655 = !DILocation(line: 633, column: 8, scope: !12645)
!12656 = !DILocation(line: 635, column: 7, scope: !12657)
!12657 = distinct !DILexicalBlock(scope: !12651, file: !12248, line: 634, column: 5)
!12658 = !DILocation(line: 636, column: 5, scope: !12657)
!12659 = !DILocation(line: 639, column: 5, scope: !12645)
!12660 = !DILocation(line: 643, column: 27, scope: !12661)
!12661 = distinct !DILexicalBlock(scope: !12608, file: !12248, line: 643, column: 6)
!12662 = !DILocation(line: 640, column: 3, scope: !12645)
!12663 = !DILocation(line: 643, column: 38, scope: !12661)
!12664 = !DILocation(line: 643, column: 62, scope: !12661)
!12665 = !DILocation(line: 643, column: 6, scope: !12608)
!12666 = !DILocation(line: 648, column: 27, scope: !12667)
!12667 = distinct !DILexicalBlock(scope: !12668, file: !12248, line: 648, column: 8)
!12668 = distinct !DILexicalBlock(scope: !12661, file: !12248, line: 644, column: 3)
!12669 = !DILocation(line: 648, column: 8, scope: !12668)
!12670 = !DILocation(line: 651, column: 10, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12672, file: !12248, line: 651, column: 10)
!12672 = distinct !DILexicalBlock(scope: !12667, file: !12248, line: 649, column: 5)
!12673 = !DILocation(line: 651, column: 46, scope: !12671)
!12674 = !DILocation(line: 651, column: 10, scope: !12672)
!12675 = !DILocation(line: 661, column: 10, scope: !12676)
!12676 = distinct !DILexicalBlock(scope: !12677, file: !12248, line: 661, column: 10)
!12677 = distinct !DILexicalBlock(scope: !12678, file: !12248, line: 659, column: 5)
!12678 = distinct !DILexicalBlock(scope: !12667, file: !12248, line: 657, column: 13)
!12679 = !DILocation(line: 661, column: 46, scope: !12676)
!12680 = !DILocation(line: 661, column: 10, scope: !12677)
!12681 = !DILocation(line: 670, column: 10, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12683, file: !12248, line: 670, column: 10)
!12683 = distinct !DILexicalBlock(scope: !12678, file: !12248, line: 668, column: 5)
!12684 = !DILocation(line: 670, column: 46, scope: !12682)
!12685 = !DILocation(line: 670, column: 10, scope: !12683)
!12686 = !DILocation(line: 676, column: 5, scope: !12668)
!12687 = !DILocation(line: 679, column: 17, scope: !12668)
!12688 = !DILocation(line: 681, column: 5, scope: !12668)
!12689 = !DILocation(line: 681, column: 12, scope: !12668)
!12690 = !DILocation(line: 681, column: 65, scope: !12668)
!12691 = !DILocation(line: 681, column: 78, scope: !12668)
!12692 = !DILocation(line: 681, column: 42, scope: !12668)
!12693 = !DILocation(line: 683, column: 12, scope: !12694)
!12694 = distinct !DILexicalBlock(scope: !12695, file: !12248, line: 683, column: 11)
!12695 = distinct !DILexicalBlock(scope: !12668, file: !12248, line: 682, column: 5)
!12696 = !DILocation(line: 683, column: 26, scope: !12694)
!12697 = !DILocation(line: 683, column: 39, scope: !12694)
!12698 = !DILocation(line: 683, column: 11, scope: !12695)
!12699 = distinct !{!12699, !12688, !12700}
!12700 = !DILocation(line: 687, column: 5, scope: !12668)
!12701 = !DILocation(line: 691, column: 17, scope: !12702)
!12702 = distinct !DILexicalBlock(scope: !12608, file: !12248, line: 691, column: 6)
!12703 = !DILocation(line: 691, column: 15, scope: !12702)
!12704 = !DILocation(line: 691, column: 6, scope: !12608)
!12705 = !DILocation(line: 694, column: 5, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12702, file: !12248, line: 692, column: 3)
!12707 = !DILocation(line: 698, column: 8, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12706, file: !12248, line: 698, column: 8)
!12709 = !DILocation(line: 698, column: 34, scope: !12708)
!12710 = !DILocation(line: 698, column: 8, scope: !12706)
!12711 = !DILocation(line: 705, column: 27, scope: !12712)
!12712 = distinct !DILexicalBlock(scope: !12608, file: !12248, line: 705, column: 6)
!12713 = !DILocation(line: 705, column: 38, scope: !12712)
!12714 = !DILocation(line: 705, column: 61, scope: !12712)
!12715 = !DILocation(line: 705, column: 6, scope: !12608)
!12716 = !DILocation(line: 708, column: 5, scope: !12717)
!12717 = distinct !DILexicalBlock(scope: !12712, file: !12248, line: 706, column: 3)
!12718 = !DILocation(line: 712, column: 27, scope: !12719)
!12719 = distinct !DILexicalBlock(scope: !12608, file: !12248, line: 712, column: 6)
!12720 = !DILocation(line: 709, column: 3, scope: !12717)
!12721 = !DILocation(line: 712, column: 38, scope: !12719)
!12722 = !DILocation(line: 712, column: 61, scope: !12719)
!12723 = !DILocation(line: 712, column: 6, scope: !12608)
!12724 = !DILocation(line: 715, column: 5, scope: !12725)
!12725 = distinct !DILexicalBlock(scope: !12719, file: !12248, line: 713, column: 3)
!12726 = !DILocation(line: 716, column: 3, scope: !12725)
!12727 = !DILocation(line: 719, column: 21, scope: !12608)
!12728 = !DILocation(line: 719, column: 70, scope: !12608)
!12729 = !DILocation(line: 719, column: 91, scope: !12608)
!12730 = !DILocation(line: 719, column: 50, scope: !12608)
!12731 = !DILocation(line: 719, column: 47, scope: !12608)
!12732 = !DILocation(line: 719, column: 19, scope: !12608)
!12733 = !DILocation(line: 722, column: 17, scope: !12608)
!12734 = !DILocation(line: 722, column: 3, scope: !12608)
!12735 = !DILocation(line: 724, column: 3, scope: !12608)
!12736 = !DILocation(line: 725, column: 1, scope: !12608)
!12737 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12248, file: !12248, line: 885, type: !3620, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !12738)
!12738 = !{!12739, !12740, !12741, !12742}
!12739 = !DILocalVariable(name: "pllm", scope: !12737, file: !12248, line: 887, type: !108)
!12740 = !DILocalVariable(name: "pllvco", scope: !12737, file: !12248, line: 887, type: !108)
!12741 = !DILocalVariable(name: "pllp", scope: !12737, file: !12248, line: 887, type: !108)
!12742 = !DILocalVariable(name: "sysclockfreq", scope: !12737, file: !12248, line: 888, type: !108)
!12743 = !DILocation(line: 0, scope: !12737)
!12744 = !DILocation(line: 891, column: 16, scope: !12737)
!12745 = !DILocation(line: 891, column: 21, scope: !12737)
!12746 = !DILocation(line: 891, column: 3, scope: !12737)
!12747 = !DILocation(line: 907, column: 19, scope: !12748)
!12748 = distinct !DILexicalBlock(scope: !12749, file: !12248, line: 904, column: 5)
!12749 = distinct !DILexicalBlock(scope: !12737, file: !12248, line: 892, column: 3)
!12750 = !DILocation(line: 907, column: 27, scope: !12748)
!12751 = !DILocation(line: 908, column: 10, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12748, file: !12248, line: 908, column: 10)
!12753 = !DILocation(line: 0, scope: !12752)
!12754 = !DILocation(line: 918, column: 23, scope: !12748)
!12755 = !DILocation(line: 918, column: 82, scope: !12748)
!12756 = !DILocation(line: 920, column: 28, scope: !12748)
!12757 = !DILocation(line: 921, column: 7, scope: !12748)
!12758 = !DILocation(line: 0, scope: !12749)
!12759 = !DILocation(line: 929, column: 3, scope: !12737)
!12760 = !DISubprogram(name: "HAL_InitTick", scope: !12607, file: !12607, line: 223, type: !12761, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!12761 = !DISubroutineType(types: !12762)
!12762 = !{!12251, !108}
!12763 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12248, file: !12248, line: 775, type: !12764, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !12766)
!12764 = !DISubroutineType(types: !12765)
!12765 = !{null, !108, !108, !108}
!12766 = !{!12767, !12768, !12769, !12770, !12780, !12784}
!12767 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12763, file: !12248, line: 775, type: !108)
!12768 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12763, file: !12248, line: 775, type: !108)
!12769 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12763, file: !12248, line: 775, type: !108)
!12770 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12763, file: !12248, line: 777, type: !12771)
!12771 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12772, line: 62, baseType: !12773)
!12772 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12773 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12772, line: 46, size: 160, elements: !12774)
!12774 = !{!12775, !12776, !12777, !12778, !12779}
!12775 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12773, file: !12772, line: 48, baseType: !108, size: 32)
!12776 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12773, file: !12772, line: 51, baseType: !108, size: 32, offset: 32)
!12777 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12773, file: !12772, line: 54, baseType: !108, size: 32, offset: 64)
!12778 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12773, file: !12772, line: 57, baseType: !108, size: 32, offset: 96)
!12779 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12773, file: !12772, line: 60, baseType: !108, size: 32, offset: 128)
!12780 = !DILocalVariable(name: "tmpreg", scope: !12781, file: !12248, line: 787, type: !409)
!12781 = distinct !DILexicalBlock(scope: !12782, file: !12248, line: 787, column: 5)
!12782 = distinct !DILexicalBlock(scope: !12783, file: !12248, line: 783, column: 3)
!12783 = distinct !DILexicalBlock(scope: !12763, file: !12248, line: 782, column: 6)
!12784 = !DILocalVariable(name: "tmpreg", scope: !12785, file: !12248, line: 811, type: !409)
!12785 = distinct !DILexicalBlock(scope: !12786, file: !12248, line: 811, column: 5)
!12786 = distinct !DILexicalBlock(scope: !12783, file: !12248, line: 807, column: 3)
!12787 = !DILocation(line: 0, scope: !12763)
!12788 = !DILocation(line: 777, column: 3, scope: !12763)
!12789 = !DILocation(line: 777, column: 20, scope: !12763)
!12790 = !DILocation(line: 782, column: 15, scope: !12783)
!12791 = !DILocation(line: 782, column: 6, scope: !12763)
!12792 = !DILocation(line: 787, column: 5, scope: !12781)
!12793 = !DILocation(line: 787, column: 5, scope: !12782)
!12794 = !DILocation(line: 790, column: 21, scope: !12782)
!12795 = !DILocation(line: 790, column: 25, scope: !12782)
!12796 = !DILocation(line: 791, column: 21, scope: !12782)
!12797 = !DILocation(line: 791, column: 26, scope: !12782)
!12798 = !DILocation(line: 792, column: 21, scope: !12782)
!12799 = !DILocation(line: 792, column: 27, scope: !12782)
!12800 = !DILocation(line: 793, column: 21, scope: !12782)
!12801 = !DILocation(line: 793, column: 26, scope: !12782)
!12802 = !DILocation(line: 794, column: 21, scope: !12782)
!12803 = !DILocation(line: 794, column: 31, scope: !12782)
!12804 = !DILocation(line: 795, column: 5, scope: !12782)
!12805 = !DILocation(line: 798, column: 5, scope: !12782)
!12806 = !DILocation(line: 804, column: 3, scope: !12782)
!12807 = !DILocation(line: 811, column: 5, scope: !12785)
!12808 = !DILocation(line: 811, column: 5, scope: !12786)
!12809 = !DILocation(line: 814, column: 21, scope: !12786)
!12810 = !DILocation(line: 814, column: 25, scope: !12786)
!12811 = !DILocation(line: 815, column: 21, scope: !12786)
!12812 = !DILocation(line: 815, column: 26, scope: !12786)
!12813 = !DILocation(line: 816, column: 21, scope: !12786)
!12814 = !DILocation(line: 816, column: 27, scope: !12786)
!12815 = !DILocation(line: 817, column: 21, scope: !12786)
!12816 = !DILocation(line: 817, column: 26, scope: !12786)
!12817 = !DILocation(line: 818, column: 21, scope: !12786)
!12818 = !DILocation(line: 818, column: 31, scope: !12786)
!12819 = !DILocation(line: 819, column: 5, scope: !12786)
!12820 = !DILocation(line: 822, column: 5, scope: !12786)
!12821 = !DILocation(line: 0, scope: !12783)
!12822 = !DILocation(line: 830, column: 1, scope: !12763)
!12823 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12772, file: !12772, line: 224, type: !12824, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!12824 = !DISubroutineType(types: !12825)
!12825 = !{null, !3160, !12826}
!12826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12771, size: 32)
!12827 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12248, file: !12248, line: 841, type: !334, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !251)
!12828 = !DILocation(line: 843, column: 38, scope: !12827)
!12829 = !DILocation(line: 844, column: 1, scope: !12827)
!12830 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12248, file: !12248, line: 850, type: !334, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !251)
!12831 = !DILocation(line: 852, column: 38, scope: !12830)
!12832 = !DILocation(line: 853, column: 1, scope: !12830)
!12833 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12248, file: !12248, line: 941, type: !3620, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !251)
!12834 = !DILocation(line: 943, column: 10, scope: !12833)
!12835 = !DILocation(line: 943, column: 3, scope: !12833)
!12836 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12248, file: !12248, line: 952, type: !3620, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !251)
!12837 = !DILocation(line: 955, column: 11, scope: !12836)
!12838 = !DILocation(line: 955, column: 56, scope: !12836)
!12839 = !DILocation(line: 955, column: 78, scope: !12836)
!12840 = !DILocation(line: 955, column: 36, scope: !12836)
!12841 = !DILocation(line: 955, column: 33, scope: !12836)
!12842 = !DILocation(line: 955, column: 3, scope: !12836)
!12843 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12248, file: !12248, line: 964, type: !3620, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !251)
!12844 = !DILocation(line: 967, column: 11, scope: !12843)
!12845 = !DILocation(line: 967, column: 55, scope: !12843)
!12846 = !DILocation(line: 967, column: 77, scope: !12843)
!12847 = !DILocation(line: 967, column: 35, scope: !12843)
!12848 = !DILocation(line: 967, column: 32, scope: !12843)
!12849 = !DILocation(line: 967, column: 3, scope: !12843)
!12850 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12248, file: !12248, line: 977, type: !12851, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !12853)
!12851 = !DISubroutineType(types: !12852)
!12852 = !{null, !12256}
!12853 = !{!12854}
!12854 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12850, file: !12248, line: 977, type: !12256)
!12855 = !DILocation(line: 0, scope: !12850)
!12856 = !DILocation(line: 980, column: 22, scope: !12850)
!12857 = !DILocation(line: 980, column: 37, scope: !12850)
!12858 = !DILocation(line: 983, column: 12, scope: !12859)
!12859 = distinct !DILexicalBlock(scope: !12850, file: !12248, line: 983, column: 6)
!12860 = !DILocation(line: 983, column: 15, scope: !12859)
!12861 = !DILocation(line: 983, column: 31, scope: !12859)
!12862 = !DILocation(line: 983, column: 6, scope: !12850)
!12863 = !DILocation(line: 985, column: 24, scope: !12864)
!12864 = distinct !DILexicalBlock(scope: !12859, file: !12248, line: 984, column: 3)
!12865 = !DILocation(line: 985, column: 33, scope: !12864)
!12866 = !DILocation(line: 986, column: 3, scope: !12864)
!12867 = !DILocation(line: 987, column: 17, scope: !12868)
!12868 = distinct !DILexicalBlock(scope: !12859, file: !12248, line: 987, column: 11)
!12869 = !DILocation(line: 987, column: 20, scope: !12868)
!12870 = !DILocation(line: 987, column: 35, scope: !12868)
!12871 = !DILocation(line: 0, scope: !12868)
!12872 = !DILocation(line: 987, column: 11, scope: !12859)
!12873 = !DILocation(line: 989, column: 33, scope: !12874)
!12874 = distinct !DILexicalBlock(scope: !12868, file: !12248, line: 988, column: 3)
!12875 = !DILocation(line: 990, column: 3, scope: !12874)
!12876 = !DILocation(line: 993, column: 33, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !12868, file: !12248, line: 992, column: 3)
!12878 = !DILocation(line: 997, column: 12, scope: !12879)
!12879 = distinct !DILexicalBlock(scope: !12850, file: !12248, line: 997, column: 6)
!12880 = !DILocation(line: 997, column: 15, scope: !12879)
!12881 = !DILocation(line: 1003, column: 24, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12879, file: !12248, line: 1002, column: 3)
!12883 = !DILocation(line: 1003, column: 33, scope: !12882)
!12884 = !DILocation(line: 1006, column: 61, scope: !12850)
!12885 = !DILocation(line: 1006, column: 81, scope: !12850)
!12886 = !DILocation(line: 1006, column: 22, scope: !12850)
!12887 = !DILocation(line: 1006, column: 42, scope: !12850)
!12888 = !DILocation(line: 1009, column: 12, scope: !12889)
!12889 = distinct !DILexicalBlock(scope: !12850, file: !12248, line: 1009, column: 6)
!12890 = !DILocation(line: 1009, column: 17, scope: !12889)
!12891 = !DILocation(line: 1009, column: 35, scope: !12889)
!12892 = !DILocation(line: 1009, column: 6, scope: !12850)
!12893 = !DILocation(line: 1011, column: 24, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12889, file: !12248, line: 1010, column: 3)
!12895 = !DILocation(line: 1011, column: 33, scope: !12894)
!12896 = !DILocation(line: 1012, column: 3, scope: !12894)
!12897 = !DILocation(line: 1013, column: 17, scope: !12898)
!12898 = distinct !DILexicalBlock(scope: !12889, file: !12248, line: 1013, column: 11)
!12899 = !DILocation(line: 1013, column: 22, scope: !12898)
!12900 = !DILocation(line: 1013, column: 39, scope: !12898)
!12901 = !DILocation(line: 0, scope: !12898)
!12902 = !DILocation(line: 1013, column: 11, scope: !12889)
!12903 = !DILocation(line: 1015, column: 33, scope: !12904)
!12904 = distinct !DILexicalBlock(scope: !12898, file: !12248, line: 1014, column: 3)
!12905 = !DILocation(line: 1016, column: 3, scope: !12904)
!12906 = !DILocation(line: 1019, column: 33, scope: !12907)
!12907 = distinct !DILexicalBlock(scope: !12898, file: !12248, line: 1018, column: 3)
!12908 = !DILocation(line: 1023, column: 12, scope: !12909)
!12909 = distinct !DILexicalBlock(scope: !12850, file: !12248, line: 1023, column: 6)
!12910 = !DILocation(line: 1023, column: 16, scope: !12909)
!12911 = !DILocation(line: 1029, column: 24, scope: !12912)
!12912 = distinct !DILexicalBlock(scope: !12909, file: !12248, line: 1028, column: 3)
!12913 = !DILocation(line: 1029, column: 33, scope: !12912)
!12914 = !DILocation(line: 1033, column: 12, scope: !12915)
!12915 = distinct !DILexicalBlock(scope: !12850, file: !12248, line: 1033, column: 6)
!12916 = !DILocation(line: 1033, column: 15, scope: !12915)
!12917 = !DILocation(line: 1033, column: 30, scope: !12915)
!12918 = !DILocation(line: 1033, column: 6, scope: !12850)
!12919 = !DILocation(line: 1039, column: 28, scope: !12920)
!12920 = distinct !DILexicalBlock(scope: !12915, file: !12248, line: 1038, column: 3)
!12921 = !DILocation(line: 1039, column: 37, scope: !12920)
!12922 = !DILocation(line: 1041, column: 54, scope: !12850)
!12923 = !DILocation(line: 1041, column: 62, scope: !12850)
!12924 = !DILocation(line: 1041, column: 26, scope: !12850)
!12925 = !DILocation(line: 1041, column: 36, scope: !12850)
!12926 = !DILocation(line: 1042, column: 49, scope: !12850)
!12927 = !DILocation(line: 1042, column: 57, scope: !12850)
!12928 = !DILocation(line: 1042, column: 26, scope: !12850)
!12929 = !DILocation(line: 1042, column: 31, scope: !12850)
!12930 = !DILocation(line: 1043, column: 50, scope: !12850)
!12931 = !DILocation(line: 1043, column: 78, scope: !12850)
!12932 = !DILocation(line: 1043, column: 26, scope: !12850)
!12933 = !DILocation(line: 1043, column: 31, scope: !12850)
!12934 = !DILocation(line: 1044, column: 52, scope: !12850)
!12935 = !DILocation(line: 1044, column: 102, scope: !12850)
!12936 = !DILocation(line: 1044, column: 109, scope: !12850)
!12937 = !DILocation(line: 1044, column: 26, scope: !12850)
!12938 = !DILocation(line: 1044, column: 31, scope: !12850)
!12939 = !DILocation(line: 1045, column: 50, scope: !12850)
!12940 = !DILocation(line: 1045, column: 78, scope: !12850)
!12941 = !DILocation(line: 1045, column: 26, scope: !12850)
!12942 = !DILocation(line: 1045, column: 31, scope: !12850)
!12943 = !DILocation(line: 1046, column: 1, scope: !12850)
!12944 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12248, file: !12248, line: 1056, type: !12945, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !12947)
!12945 = !DISubroutineType(types: !12946)
!12946 = !{null, !12611, !969}
!12947 = !{!12948, !12949}
!12948 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12944, file: !12248, line: 1056, type: !12611)
!12949 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12944, file: !12248, line: 1056, type: !969)
!12950 = !DILocation(line: 0, scope: !12944)
!12951 = !DILocation(line: 1059, column: 22, scope: !12944)
!12952 = !DILocation(line: 1059, column: 32, scope: !12944)
!12953 = !DILocation(line: 1062, column: 53, scope: !12944)
!12954 = !DILocation(line: 1062, column: 58, scope: !12944)
!12955 = !DILocation(line: 1062, column: 22, scope: !12944)
!12956 = !DILocation(line: 1062, column: 35, scope: !12944)
!12957 = !DILocation(line: 1065, column: 54, scope: !12944)
!12958 = !DILocation(line: 1065, column: 59, scope: !12944)
!12959 = !DILocation(line: 1065, column: 22, scope: !12944)
!12960 = !DILocation(line: 1065, column: 36, scope: !12944)
!12961 = !DILocation(line: 1068, column: 55, scope: !12944)
!12962 = !DILocation(line: 1068, column: 60, scope: !12944)
!12963 = !DILocation(line: 1068, column: 22, scope: !12944)
!12964 = !DILocation(line: 1068, column: 37, scope: !12944)
!12965 = !DILocation(line: 1071, column: 56, scope: !12944)
!12966 = !DILocation(line: 1071, column: 79, scope: !12944)
!12967 = !DILocation(line: 1071, column: 22, scope: !12944)
!12968 = !DILocation(line: 1071, column: 37, scope: !12944)
!12969 = !DILocation(line: 1074, column: 34, scope: !12944)
!12970 = !DILocation(line: 1074, column: 38, scope: !12944)
!12971 = !DILocation(line: 1074, column: 14, scope: !12944)
!12972 = !DILocation(line: 1075, column: 1, scope: !12944)
!12973 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12248, file: !12248, line: 1082, type: !334, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !251)
!12974 = !DILocation(line: 1085, column: 6, scope: !12975)
!12975 = distinct !DILexicalBlock(scope: !12973, file: !12248, line: 1085, column: 6)
!12976 = !DILocation(line: 1085, column: 6, scope: !12973)
!12977 = !DILocation(line: 1088, column: 5, scope: !12978)
!12978 = distinct !DILexicalBlock(scope: !12975, file: !12248, line: 1086, column: 3)
!12979 = !DILocation(line: 1091, column: 5, scope: !12978)
!12980 = !DILocation(line: 1092, column: 3, scope: !12978)
!12981 = !DILocation(line: 1093, column: 1, scope: !12973)
!12982 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12248, file: !12248, line: 1099, type: !334, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !251)
!12983 = !DILocation(line: 1104, column: 1, scope: !12982)
!12984 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12985, file: !12985, line: 257, type: !7423, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !12986)
!12985 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12986 = !{!12987}
!12987 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12984, file: !12985, line: 257, type: !108)
!12988 = !DILocation(line: 0, scope: !12984)
!12989 = !DILocation(line: 260, column: 3, scope: !12984)
!12990 = !DILocation(line: 261, column: 1, scope: !12984)
!12991 = distinct !DISubprogram(name: "LL_InitTick", scope: !12992, file: !12992, line: 260, type: !10645, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !12993)
!12992 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12993 = !{!12994, !12995}
!12994 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12991, file: !12992, line: 260, type: !108)
!12995 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12991, file: !12992, line: 260, type: !108)
!12996 = !DILocation(line: 0, scope: !12991)
!12997 = !DILocation(line: 263, column: 46, scope: !12991)
!12998 = !DILocation(line: 263, column: 55, scope: !12991)
!12999 = !DILocation(line: 263, column: 18, scope: !12991)
!13000 = !DILocation(line: 264, column: 18, scope: !12991)
!13001 = !DILocation(line: 265, column: 18, scope: !12991)
!13002 = !DILocation(line: 267, column: 1, scope: !12991)
!13003 = distinct !DISubprogram(name: "LL_mDelay", scope: !12985, file: !12985, line: 273, type: !7423, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !13004)
!13004 = !{!13005, !13006}
!13005 = !DILocalVariable(name: "Delay", arg: 1, scope: !13003, file: !12985, line: 273, type: !108)
!13006 = !DILocalVariable(name: "tmp", scope: !13003, file: !12985, line: 275, type: !409)
!13007 = !DILocation(line: 0, scope: !13003)
!13008 = !DILocation(line: 275, column: 3, scope: !13003)
!13009 = !DILocation(line: 275, column: 18, scope: !13003)
!13010 = !DILocation(line: 275, column: 33, scope: !13003)
!13011 = !DILocation(line: 277, column: 10, scope: !13003)
!13012 = !DILocation(line: 280, column: 12, scope: !13013)
!13013 = distinct !DILexicalBlock(scope: !13003, file: !12985, line: 280, column: 6)
!13014 = !DILocation(line: 285, column: 3, scope: !13003)
!13015 = !DILocation(line: 287, column: 18, scope: !13016)
!13016 = distinct !DILexicalBlock(scope: !13017, file: !12985, line: 287, column: 8)
!13017 = distinct !DILexicalBlock(scope: !13003, file: !12985, line: 286, column: 3)
!13018 = !DILocation(line: 292, column: 1, scope: !13003)
!13019 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12985, file: !12985, line: 323, type: !7423, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !13020)
!13020 = !{!13021}
!13021 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13019, file: !12985, line: 323, type: !108)
!13022 = !DILocation(line: 0, scope: !13019)
!13023 = !DILocation(line: 326, column: 19, scope: !13019)
!13024 = !DILocation(line: 327, column: 1, scope: !13019)
!13025 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12985, file: !12985, line: 338, type: !13026, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !13029)
!13026 = !DISubroutineType(types: !13027)
!13027 = !{!13028, !108}
!13028 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !913, line: 201, baseType: !912)
!13029 = !{!13030, !13031, !13032, !13033, !13034}
!13030 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !13025, file: !12985, line: 338, type: !108)
!13031 = !DILocalVariable(name: "timeout", scope: !13025, file: !12985, line: 340, type: !108)
!13032 = !DILocalVariable(name: "getlatency", scope: !13025, file: !12985, line: 341, type: !108)
!13033 = !DILocalVariable(name: "latency", scope: !13025, file: !12985, line: 342, type: !108)
!13034 = !DILocalVariable(name: "status", scope: !13025, file: !12985, line: 343, type: !13028)
!13035 = !DILocation(line: 0, scope: !13025)
!13036 = !DILocation(line: 347, column: 21, scope: !13037)
!13037 = distinct !DILexicalBlock(scope: !13025, file: !12985, line: 347, column: 6)
!13038 = !DILocation(line: 347, column: 6, scope: !13025)
!13039 = !DILocation(line: 353, column: 8, scope: !13040)
!13040 = distinct !DILexicalBlock(scope: !13041, file: !12985, line: 353, column: 8)
!13041 = distinct !DILexicalBlock(scope: !13037, file: !12985, line: 352, column: 3)
!13042 = !DILocation(line: 387, column: 8, scope: !13043)
!13043 = distinct !DILexicalBlock(scope: !13041, file: !12985, line: 387, column: 8)
!13044 = !DILocation(line: 387, column: 40, scope: !13043)
!13045 = !DILocation(line: 387, column: 8, scope: !13041)
!13046 = !DILocation(line: 407, column: 26, scope: !13047)
!13047 = distinct !DILexicalBlock(scope: !13048, file: !12985, line: 407, column: 10)
!13048 = distinct !DILexicalBlock(scope: !13043, file: !12985, line: 388, column: 5)
!13049 = !DILocation(line: 407, column: 55, scope: !13047)
!13050 = !DILocation(line: 413, column: 28, scope: !13051)
!13051 = distinct !DILexicalBlock(scope: !13052, file: !12985, line: 413, column: 12)
!13052 = distinct !DILexicalBlock(scope: !13047, file: !12985, line: 412, column: 7)
!13053 = !DILocation(line: 413, column: 57, scope: !13051)
!13054 = !DILocation(line: 420, column: 8, scope: !13055)
!13055 = distinct !DILexicalBlock(scope: !13041, file: !12985, line: 420, column: 8)
!13056 = !DILocation(line: 420, column: 40, scope: !13055)
!13057 = !DILocation(line: 420, column: 8, scope: !13041)
!13058 = !DILocation(line: 429, column: 26, scope: !13059)
!13059 = distinct !DILexicalBlock(scope: !13060, file: !12985, line: 429, column: 10)
!13060 = distinct !DILexicalBlock(scope: !13055, file: !12985, line: 421, column: 5)
!13061 = !DILocation(line: 429, column: 55, scope: !13059)
!13062 = !DILocation(line: 435, column: 28, scope: !13063)
!13063 = distinct !DILexicalBlock(scope: !13064, file: !12985, line: 435, column: 12)
!13064 = distinct !DILexicalBlock(scope: !13059, file: !12985, line: 434, column: 7)
!13065 = !DILocation(line: 435, column: 57, scope: !13063)
!13066 = !DILocation(line: 0, scope: !13041)
!13067 = !DILocation(line: 444, column: 5, scope: !13041)
!13068 = !DILocation(line: 448, column: 5, scope: !13041)
!13069 = !DILocation(line: 451, column: 18, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !13041, file: !12985, line: 449, column: 5)
!13071 = !DILocation(line: 452, column: 12, scope: !13070)
!13072 = !DILocation(line: 453, column: 26, scope: !13041)
!13073 = !DILocation(line: 453, column: 38, scope: !13041)
!13074 = !DILocation(line: 453, column: 5, scope: !13070)
!13075 = distinct !{!13075, !13068, !13076}
!13076 = !DILocation(line: 453, column: 54, scope: !13041)
!13077 = !DILocation(line: 0, scope: !13037)
!13078 = !DILocation(line: 464, column: 3, scope: !13025)
!13079 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !13080, file: !13080, line: 519, type: !3620, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !251)
!13080 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13081 = !DILocation(line: 521, column: 21, scope: !13079)
!13082 = !DILocation(line: 521, column: 3, scope: !13079)
!13083 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !7037, file: !7037, line: 1543, type: !7423, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !13084)
!13084 = !{!13085}
!13085 = !DILocalVariable(name: "Latency", arg: 1, scope: !13083, file: !7037, line: 1543, type: !108)
!13086 = !DILocation(line: 0, scope: !13083)
!13087 = !DILocation(line: 1545, column: 3, scope: !13083)
!13088 = !DILocation(line: 1546, column: 1, scope: !13083)
!13089 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !7037, file: !7037, line: 1569, type: !3620, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !251)
!13090 = !DILocation(line: 1571, column: 21, scope: !13089)
!13091 = !DILocation(line: 1571, column: 3, scope: !13089)
!13092 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12985, file: !12985, line: 483, type: !13093, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !13109)
!13093 = !DISubroutineType(types: !13094)
!13094 = !{!13028, !13095, !13102}
!13095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13096, size: 32)
!13096 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12992, line: 114, baseType: !13097)
!13097 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12992, line: 94, size: 96, elements: !13098)
!13098 = !{!13099, !13100, !13101}
!13099 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13097, file: !12992, line: 96, baseType: !108, size: 32)
!13100 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13097, file: !12992, line: 102, baseType: !108, size: 32, offset: 32)
!13101 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13097, file: !12992, line: 109, baseType: !108, size: 32, offset: 64)
!13102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13103, size: 32)
!13103 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12992, line: 139, baseType: !13104)
!13104 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12992, line: 119, size: 96, elements: !13105)
!13105 = !{!13106, !13107, !13108}
!13106 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13104, file: !12992, line: 121, baseType: !108, size: 32)
!13107 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13104, file: !12992, line: 127, baseType: !108, size: 32, offset: 32)
!13108 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13104, file: !12992, line: 133, baseType: !108, size: 32, offset: 64)
!13109 = !{!13110, !13111, !13112, !13113}
!13110 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13092, file: !12985, line: 483, type: !13095)
!13111 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13092, file: !12985, line: 484, type: !13102)
!13112 = !DILocalVariable(name: "status", scope: !13092, file: !12985, line: 486, type: !13028)
!13113 = !DILocalVariable(name: "pllfreq", scope: !13092, file: !12985, line: 487, type: !108)
!13114 = !DILocation(line: 0, scope: !13092)
!13115 = !DILocation(line: 490, column: 6, scope: !13116)
!13116 = distinct !DILexicalBlock(scope: !13092, file: !12985, line: 490, column: 6)
!13117 = !DILocation(line: 490, column: 25, scope: !13116)
!13118 = !DILocation(line: 490, column: 6, scope: !13092)
!13119 = !DILocation(line: 493, column: 15, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !13116, file: !12985, line: 491, column: 3)
!13121 = !DILocation(line: 496, column: 8, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !13120, file: !12985, line: 496, column: 8)
!13123 = !DILocation(line: 496, column: 29, scope: !13122)
!13124 = !DILocation(line: 496, column: 8, scope: !13120)
!13125 = !DILocation(line: 498, column: 7, scope: !13126)
!13126 = distinct !DILexicalBlock(scope: !13122, file: !12985, line: 497, column: 5)
!13127 = !DILocation(line: 499, column: 7, scope: !13126)
!13128 = !DILocation(line: 499, column: 14, scope: !13126)
!13129 = !DILocation(line: 499, column: 35, scope: !13126)
!13130 = distinct !{!13130, !13127, !13131}
!13131 = !DILocation(line: 502, column: 7, scope: !13126)
!13132 = !DILocation(line: 506, column: 76, scope: !13120)
!13133 = !DILocation(line: 506, column: 103, scope: !13120)
!13134 = !DILocation(line: 507, column: 54, scope: !13120)
!13135 = !DILocation(line: 506, column: 5, scope: !13120)
!13136 = !DILocation(line: 510, column: 14, scope: !13120)
!13137 = !DILocation(line: 511, column: 3, scope: !13120)
!13138 = !DILocation(line: 0, scope: !13116)
!13139 = !DILocation(line: 518, column: 3, scope: !13092)
!13140 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12985, file: !12985, line: 642, type: !13141, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !13143)
!13141 = !DISubroutineType(types: !13142)
!13142 = !{!13028}
!13143 = !{!13144}
!13144 = !DILocalVariable(name: "status", scope: !13140, file: !12985, line: 644, type: !13028)
!13145 = !DILocation(line: 0, scope: !13140)
!13146 = !DILocation(line: 647, column: 6, scope: !13147)
!13147 = distinct !DILexicalBlock(scope: !13140, file: !12985, line: 647, column: 6)
!13148 = !DILocation(line: 647, column: 27, scope: !13147)
!13149 = !DILocation(line: 663, column: 6, scope: !13150)
!13150 = distinct !DILexicalBlock(scope: !13140, file: !12985, line: 663, column: 6)
!13151 = !DILocation(line: 663, column: 30, scope: !13150)
!13152 = !DILocation(line: 663, column: 6, scope: !13140)
!13153 = !DILocation(line: 669, column: 3, scope: !13140)
!13154 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12985, file: !12985, line: 611, type: !13155, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !13157)
!13155 = !DISubroutineType(types: !13156)
!13156 = !{!108, !108, !13095}
!13157 = !{!13158, !13159, !13160}
!13158 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13154, file: !12985, line: 611, type: !108)
!13159 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13154, file: !12985, line: 611, type: !13095)
!13160 = !DILocalVariable(name: "pllfreq", scope: !13154, file: !12985, line: 613, type: !108)
!13161 = !DILocation(line: 0, scope: !13154)
!13162 = !DILocation(line: 622, column: 56, scope: !13154)
!13163 = !DILocation(line: 622, column: 61, scope: !13154)
!13164 = !DILocation(line: 622, column: 32, scope: !13154)
!13165 = !DILocation(line: 626, column: 45, scope: !13154)
!13166 = !DILocation(line: 626, column: 50, scope: !13154)
!13167 = !DILocation(line: 626, column: 21, scope: !13154)
!13168 = !DILocation(line: 630, column: 47, scope: !13154)
!13169 = !DILocation(line: 630, column: 82, scope: !13154)
!13170 = !DILocation(line: 630, column: 21, scope: !13154)
!13171 = !DILocation(line: 633, column: 3, scope: !13154)
!13172 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9985, file: !9985, line: 3007, type: !3620, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !251)
!13173 = !DILocation(line: 3009, column: 11, scope: !13172)
!13174 = !DILocation(line: 3009, column: 44, scope: !13172)
!13175 = !DILocation(line: 3009, column: 3, scope: !13172)
!13176 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9985, file: !9985, line: 2987, type: !334, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !251)
!13177 = !DILocation(line: 2989, column: 3, scope: !13176)
!13178 = !DILocation(line: 2990, column: 1, scope: !13176)
!13179 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9985, file: !9985, line: 4304, type: !10119, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !13180)
!13180 = !{!13181, !13182, !13183, !13184}
!13181 = !DILocalVariable(name: "Source", arg: 1, scope: !13179, file: !9985, line: 4304, type: !108)
!13182 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13179, file: !9985, line: 4304, type: !108)
!13183 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13179, file: !9985, line: 4304, type: !108)
!13184 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13179, file: !9985, line: 4304, type: !108)
!13185 = !DILocation(line: 0, scope: !13179)
!13186 = !DILocation(line: 4306, column: 3, scope: !13179)
!13187 = !DILocation(line: 4308, column: 3, scope: !13179)
!13188 = !DILocation(line: 4312, column: 1, scope: !13179)
!13189 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12985, file: !12985, line: 681, type: !13190, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !13192)
!13190 = !DISubroutineType(types: !13191)
!13191 = !{!13028, !108, !13102}
!13192 = !{!13193, !13194, !13195, !13196}
!13193 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13189, file: !12985, line: 681, type: !108)
!13194 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13189, file: !12985, line: 681, type: !13102)
!13195 = !DILocalVariable(name: "status", scope: !13189, file: !12985, line: 683, type: !13028)
!13196 = !DILocalVariable(name: "hclk_frequency", scope: !13189, file: !12985, line: 684, type: !108)
!13197 = !DILocation(line: 0, scope: !13189)
!13198 = !DILocation(line: 691, column: 20, scope: !13189)
!13199 = !DILocation(line: 694, column: 6, scope: !13200)
!13200 = distinct !DILexicalBlock(scope: !13189, file: !12985, line: 694, column: 6)
!13201 = !DILocation(line: 694, column: 22, scope: !13200)
!13202 = !DILocation(line: 694, column: 6, scope: !13189)
!13203 = !DILocation(line: 697, column: 14, scope: !13204)
!13204 = distinct !DILexicalBlock(scope: !13200, file: !12985, line: 695, column: 3)
!13205 = !DILocation(line: 701, column: 13, scope: !13206)
!13206 = distinct !DILexicalBlock(scope: !13189, file: !12985, line: 701, column: 6)
!13207 = !DILocation(line: 701, column: 6, scope: !13189)
!13208 = !DILocation(line: 704, column: 5, scope: !13209)
!13209 = distinct !DILexicalBlock(scope: !13206, file: !12985, line: 702, column: 3)
!13210 = !DILocation(line: 705, column: 5, scope: !13209)
!13211 = !DILocation(line: 705, column: 12, scope: !13209)
!13212 = !DILocation(line: 705, column: 33, scope: !13209)
!13213 = distinct !{!13213, !13210, !13214}
!13214 = !DILocation(line: 708, column: 5, scope: !13209)
!13215 = !DILocation(line: 711, column: 49, scope: !13209)
!13216 = !DILocation(line: 711, column: 5, scope: !13209)
!13217 = !DILocation(line: 712, column: 5, scope: !13209)
!13218 = !DILocation(line: 713, column: 5, scope: !13209)
!13219 = !DILocation(line: 713, column: 12, scope: !13209)
!13220 = !DILocation(line: 713, column: 37, scope: !13209)
!13221 = distinct !{!13221, !13218, !13222}
!13222 = !DILocation(line: 716, column: 5, scope: !13209)
!13223 = !DILocation(line: 719, column: 50, scope: !13209)
!13224 = !DILocation(line: 719, column: 5, scope: !13209)
!13225 = !DILocation(line: 720, column: 50, scope: !13209)
!13226 = !DILocation(line: 720, column: 5, scope: !13209)
!13227 = !DILocation(line: 721, column: 3, scope: !13209)
!13228 = !DILocation(line: 724, column: 6, scope: !13229)
!13229 = distinct !DILexicalBlock(scope: !13189, file: !12985, line: 724, column: 6)
!13230 = !DILocation(line: 724, column: 22, scope: !13229)
!13231 = !DILocation(line: 724, column: 6, scope: !13189)
!13232 = !DILocation(line: 727, column: 14, scope: !13233)
!13233 = distinct !DILexicalBlock(scope: !13229, file: !12985, line: 725, column: 3)
!13234 = !DILocation(line: 728, column: 3, scope: !13233)
!13235 = !DILocation(line: 731, column: 13, scope: !13236)
!13236 = distinct !DILexicalBlock(scope: !13189, file: !12985, line: 731, column: 6)
!13237 = !DILocation(line: 731, column: 6, scope: !13189)
!13238 = !DILocation(line: 733, column: 5, scope: !13239)
!13239 = distinct !DILexicalBlock(scope: !13236, file: !12985, line: 732, column: 3)
!13240 = !DILocation(line: 734, column: 3, scope: !13239)
!13241 = !DILocation(line: 736, column: 3, scope: !13189)
!13242 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9985, file: !9985, line: 4184, type: !334, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !251)
!13243 = !DILocation(line: 4186, column: 3, scope: !13242)
!13244 = !DILocation(line: 4187, column: 1, scope: !13242)
!13245 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9985, file: !9985, line: 4205, type: !3620, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !251)
!13246 = !DILocation(line: 4207, column: 11, scope: !13245)
!13247 = !DILocation(line: 4207, column: 44, scope: !13245)
!13248 = !DILocation(line: 4207, column: 3, scope: !13245)
!13249 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9985, file: !9985, line: 3224, type: !7423, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !13250)
!13250 = !{!13251}
!13251 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13249, file: !9985, line: 3224, type: !108)
!13252 = !DILocation(line: 0, scope: !13249)
!13253 = !DILocation(line: 3226, column: 3, scope: !13249)
!13254 = !DILocation(line: 3227, column: 1, scope: !13249)
!13255 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9985, file: !9985, line: 3188, type: !7423, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !13256)
!13256 = !{!13257}
!13257 = !DILocalVariable(name: "Source", arg: 1, scope: !13255, file: !9985, line: 3188, type: !108)
!13258 = !DILocation(line: 0, scope: !13255)
!13259 = !DILocation(line: 3190, column: 3, scope: !13255)
!13260 = !DILocation(line: 3191, column: 1, scope: !13255)
!13261 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9985, file: !9985, line: 3204, type: !3620, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !251)
!13262 = !DILocation(line: 3206, column: 21, scope: !13261)
!13263 = !DILocation(line: 3206, column: 3, scope: !13261)
!13264 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9985, file: !9985, line: 3240, type: !7423, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !13265)
!13265 = !{!13266}
!13266 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13264, file: !9985, line: 3240, type: !108)
!13267 = !DILocation(line: 0, scope: !13264)
!13268 = !DILocation(line: 3242, column: 3, scope: !13264)
!13269 = !DILocation(line: 3243, column: 1, scope: !13264)
!13270 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9985, file: !9985, line: 3256, type: !7423, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !13271)
!13271 = !{!13272}
!13272 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13270, file: !9985, line: 3256, type: !108)
!13273 = !DILocation(line: 0, scope: !13270)
!13274 = !DILocation(line: 3258, column: 3, scope: !13270)
!13275 = !DILocation(line: 3259, column: 1, scope: !13270)
!13276 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !9985, file: !9985, line: 5153, type: !3620, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !251)
!13277 = !DILocation(line: 5155, column: 11, scope: !13276)
!13278 = !DILocation(line: 5155, column: 47, scope: !13276)
!13279 = !DILocation(line: 5155, column: 3, scope: !13276)
!13280 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12985, file: !12985, line: 540, type: !13281, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !13283)
!13281 = !DISubroutineType(types: !13282)
!13282 = !{!13028, !108, !108, !13095, !13102}
!13283 = !{!13284, !13285, !13286, !13287, !13288, !13289}
!13284 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13280, file: !12985, line: 540, type: !108)
!13285 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13280, file: !12985, line: 540, type: !108)
!13286 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13280, file: !12985, line: 541, type: !13095)
!13287 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13280, file: !12985, line: 541, type: !13102)
!13288 = !DILocalVariable(name: "status", scope: !13280, file: !12985, line: 543, type: !13028)
!13289 = !DILocalVariable(name: "pllfreq", scope: !13280, file: !12985, line: 544, type: !108)
!13290 = !DILocation(line: 0, scope: !13280)
!13291 = !DILocation(line: 551, column: 6, scope: !13292)
!13292 = distinct !DILexicalBlock(scope: !13280, file: !12985, line: 551, column: 6)
!13293 = !DILocation(line: 551, column: 25, scope: !13292)
!13294 = !DILocation(line: 551, column: 6, scope: !13280)
!13295 = !DILocation(line: 554, column: 15, scope: !13296)
!13296 = distinct !DILexicalBlock(scope: !13292, file: !12985, line: 552, column: 3)
!13297 = !DILocation(line: 557, column: 8, scope: !13298)
!13298 = distinct !DILexicalBlock(scope: !13296, file: !12985, line: 557, column: 8)
!13299 = !DILocation(line: 557, column: 29, scope: !13298)
!13300 = !DILocation(line: 557, column: 8, scope: !13296)
!13301 = !DILocation(line: 560, column: 20, scope: !13302)
!13302 = distinct !DILexicalBlock(scope: !13303, file: !12985, line: 560, column: 10)
!13303 = distinct !DILexicalBlock(scope: !13298, file: !12985, line: 558, column: 5)
!13304 = !DILocation(line: 560, column: 10, scope: !13303)
!13305 = !DILocation(line: 562, column: 9, scope: !13306)
!13306 = distinct !DILexicalBlock(scope: !13302, file: !12985, line: 561, column: 7)
!13307 = !DILocation(line: 563, column: 7, scope: !13306)
!13308 = !DILocation(line: 566, column: 9, scope: !13309)
!13309 = distinct !DILexicalBlock(scope: !13302, file: !12985, line: 565, column: 7)
!13310 = !DILocation(line: 570, column: 7, scope: !13303)
!13311 = !DILocation(line: 571, column: 7, scope: !13303)
!13312 = !DILocation(line: 571, column: 14, scope: !13303)
!13313 = !DILocation(line: 571, column: 35, scope: !13303)
!13314 = distinct !{!13314, !13311, !13315}
!13315 = !DILocation(line: 574, column: 7, scope: !13303)
!13316 = !DILocation(line: 578, column: 76, scope: !13296)
!13317 = !DILocation(line: 578, column: 103, scope: !13296)
!13318 = !DILocation(line: 579, column: 54, scope: !13296)
!13319 = !DILocation(line: 578, column: 5, scope: !13296)
!13320 = !DILocation(line: 582, column: 14, scope: !13296)
!13321 = !DILocation(line: 583, column: 3, scope: !13296)
!13322 = !DILocation(line: 0, scope: !13292)
!13323 = !DILocation(line: 590, column: 3, scope: !13280)
!13324 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9985, file: !9985, line: 2969, type: !3620, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !251)
!13325 = !DILocation(line: 2971, column: 11, scope: !13324)
!13326 = !DILocation(line: 2971, column: 44, scope: !13324)
!13327 = !DILocation(line: 2971, column: 3, scope: !13324)
!13328 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !9985, file: !9985, line: 2929, type: !334, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !251)
!13329 = !DILocation(line: 2931, column: 3, scope: !13328)
!13330 = !DILocation(line: 2932, column: 1, scope: !13328)
!13331 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9985, file: !9985, line: 2939, type: !334, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !251)
!13332 = !DILocation(line: 2941, column: 3, scope: !13331)
!13333 = !DILocation(line: 2942, column: 1, scope: !13331)
!13334 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9985, file: !9985, line: 2949, type: !334, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !251)
!13335 = !DILocation(line: 2951, column: 3, scope: !13334)
!13336 = !DILocation(line: 2952, column: 1, scope: !13334)
!13337 = distinct !DISubprogram(name: "z_device_state_init", scope: !13338, file: !13338, line: 23, type: !334, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !13339)
!13338 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13339 = !{!13340}
!13340 = !DILocalVariable(name: "dev", scope: !13337, file: !13338, line: 25, type: !13341)
!13341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13342, size: 32)
!13342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13343)
!13343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !13344)
!13344 = !{!13345, !13346, !13347, !13348, !13354, !13355}
!13345 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13343, file: !429, line: 380, baseType: !337, size: 32)
!13346 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13343, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!13347 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13343, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!13348 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13343, file: !429, line: 386, baseType: !13349, size: 32, offset: 96)
!13349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13350, size: 32)
!13350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !13351)
!13351 = !{!13352, !13353}
!13352 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13350, file: !429, line: 359, baseType: !185, size: 8)
!13353 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13350, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13354 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13343, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!13355 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13343, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!13356 = !DILocation(line: 0, scope: !13337)
!13357 = !DILocation(line: 31, column: 1, scope: !13337)
!13358 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13338, file: !13338, line: 33, type: !13359, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !13361)
!13359 = !DISubroutineType(types: !13360)
!13360 = !{!13341, !337}
!13361 = !{!13362, !13363}
!13362 = !DILocalVariable(name: "name", arg: 1, scope: !13358, file: !13338, line: 33, type: !337)
!13363 = !DILocalVariable(name: "dev", scope: !13358, file: !13338, line: 35, type: !13341)
!13364 = !DILocation(line: 0, scope: !13358)
!13365 = !DILocation(line: 40, column: 12, scope: !13366)
!13366 = distinct !DILexicalBlock(scope: !13358, file: !13338, line: 40, column: 6)
!13367 = !DILocation(line: 40, column: 21, scope: !13366)
!13368 = !DILocation(line: 40, column: 25, scope: !13366)
!13369 = !DILocation(line: 40, column: 33, scope: !13366)
!13370 = !DILocation(line: 40, column: 6, scope: !13358)
!13371 = !DILocation(line: 55, column: 2, scope: !13372)
!13372 = distinct !DILexicalBlock(scope: !13358, file: !13338, line: 55, column: 2)
!13373 = !DILocation(line: 50, column: 7, scope: !13374)
!13374 = distinct !DILexicalBlock(scope: !13375, file: !13338, line: 50, column: 7)
!13375 = distinct !DILexicalBlock(scope: !13376, file: !13338, line: 49, column: 57)
!13376 = distinct !DILexicalBlock(scope: !13377, file: !13338, line: 49, column: 2)
!13377 = distinct !DILexicalBlock(scope: !13358, file: !13338, line: 49, column: 2)
!13378 = !DILocation(line: 50, column: 30, scope: !13374)
!13379 = !DILocation(line: 50, column: 39, scope: !13374)
!13380 = !DILocation(line: 50, column: 44, scope: !13374)
!13381 = !DILocation(line: 50, column: 7, scope: !13375)
!13382 = !DILocation(line: 49, column: 53, scope: !13376)
!13383 = !DILocation(line: 49, column: 33, scope: !13376)
!13384 = !DILocation(line: 49, column: 2, scope: !13377)
!13385 = distinct !{!13385, !13384, !13386}
!13386 = !DILocation(line: 53, column: 2, scope: !13377)
!13387 = !DILocation(line: 56, column: 7, scope: !13388)
!13388 = distinct !DILexicalBlock(scope: !13389, file: !13338, line: 56, column: 7)
!13389 = distinct !DILexicalBlock(scope: !13390, file: !13338, line: 55, column: 57)
!13390 = distinct !DILexicalBlock(scope: !13372, file: !13338, line: 55, column: 2)
!13391 = !DILocation(line: 56, column: 30, scope: !13388)
!13392 = !DILocation(line: 56, column: 52, scope: !13388)
!13393 = !DILocation(line: 56, column: 34, scope: !13388)
!13394 = !DILocation(line: 56, column: 58, scope: !13388)
!13395 = !DILocation(line: 56, column: 7, scope: !13389)
!13396 = !DILocation(line: 55, column: 53, scope: !13390)
!13397 = !DILocation(line: 55, column: 33, scope: !13390)
!13398 = distinct !{!13398, !13371, !13399}
!13399 = !DILocation(line: 59, column: 2, scope: !13372)
!13400 = !DILocation(line: 62, column: 1, scope: !13358)
!13401 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13338, file: !13338, line: 93, type: !13402, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !13404)
!13402 = !DISubroutineType(types: !13403)
!13403 = !{!131, !13341}
!13404 = !{!13405}
!13405 = !DILocalVariable(name: "dev", arg: 1, scope: !13401, file: !13338, line: 93, type: !13341)
!13406 = !DILocation(line: 0, scope: !13401)
!13407 = !DILocation(line: 99, column: 10, scope: !13408)
!13408 = distinct !DILexicalBlock(scope: !13401, file: !13338, line: 99, column: 6)
!13409 = !DILocation(line: 99, column: 6, scope: !13401)
!13410 = !DILocation(line: 103, column: 14, scope: !13401)
!13411 = !DILocation(line: 103, column: 21, scope: !13401)
!13412 = !DILocation(line: 103, column: 33, scope: !13401)
!13413 = !DILocation(line: 103, column: 49, scope: !13401)
!13414 = !DILocation(line: 103, column: 58, scope: !13401)
!13415 = !DILocation(line: 104, column: 1, scope: !13401)
!13416 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13338, file: !13338, line: 87, type: !13417, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !13420)
!13417 = !DISubroutineType(types: !13418)
!13418 = !{!132, !13419}
!13419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13341, size: 32)
!13420 = !{!13421}
!13421 = !DILocalVariable(name: "devices", arg: 1, scope: !13416, file: !13338, line: 87, type: !13419)
!13422 = !DILocation(line: 0, scope: !13416)
!13423 = !DILocation(line: 89, column: 11, scope: !13416)
!13424 = !DILocation(line: 90, column: 2, scope: !13416)
!13425 = distinct !DISubprogram(name: "device_required_foreach", scope: !13338, file: !13338, line: 125, type: !13426, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !13432)
!13426 = !DISubroutineType(types: !13427)
!13427 = !{!103, !13341, !13428, !102}
!13428 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !429, line: 471, baseType: !13429)
!13429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13430, size: 32)
!13430 = !DISubroutineType(types: !13431)
!13431 = !{!103, !13341, !102}
!13432 = !{!13433, !13434, !13435, !13436, !13437}
!13433 = !DILocalVariable(name: "dev", arg: 1, scope: !13425, file: !13338, line: 125, type: !13341)
!13434 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13425, file: !13338, line: 126, type: !13428)
!13435 = !DILocalVariable(name: "context", arg: 3, scope: !13425, file: !13338, line: 127, type: !102)
!13436 = !DILocalVariable(name: "handle_count", scope: !13425, file: !13338, line: 129, type: !132)
!13437 = !DILocalVariable(name: "handles", scope: !13425, file: !13338, line: 130, type: !442)
!13438 = !DILocation(line: 0, scope: !13425)
!13439 = !DILocation(line: 129, column: 2, scope: !13425)
!13440 = !DILocation(line: 129, column: 9, scope: !13425)
!13441 = !DILocation(line: 130, column: 35, scope: !13425)
!13442 = !DILocation(line: 132, column: 33, scope: !13425)
!13443 = !DILocation(line: 132, column: 9, scope: !13425)
!13444 = !DILocation(line: 133, column: 1, scope: !13425)
!13445 = !DILocation(line: 132, column: 2, scope: !13425)
!13446 = distinct !DISubprogram(name: "device_required_handles_get", scope: !429, file: !429, line: 493, type: !13447, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !13449)
!13447 = !DISubroutineType(types: !13448)
!13448 = !{!442, !13341, !2731}
!13449 = !{!13450, !13451, !13452, !13453}
!13450 = !DILocalVariable(name: "dev", arg: 1, scope: !13446, file: !429, line: 493, type: !13341)
!13451 = !DILocalVariable(name: "count", arg: 2, scope: !13446, file: !429, line: 493, type: !2731)
!13452 = !DILocalVariable(name: "rv", scope: !13446, file: !429, line: 495, type: !442)
!13453 = !DILocalVariable(name: "i", scope: !13454, file: !429, line: 498, type: !132)
!13454 = distinct !DILexicalBlock(scope: !13455, file: !429, line: 497, column: 18)
!13455 = distinct !DILexicalBlock(scope: !13446, file: !429, line: 497, column: 6)
!13456 = !DILocation(line: 0, scope: !13446)
!13457 = !DILocation(line: 495, column: 35, scope: !13446)
!13458 = !DILocation(line: 497, column: 9, scope: !13455)
!13459 = !DILocation(line: 497, column: 6, scope: !13446)
!13460 = !DILocation(line: 0, scope: !13454)
!13461 = !DILocation(line: 500, column: 11, scope: !13454)
!13462 = !DILocation(line: 500, column: 40, scope: !13454)
!13463 = !DILocation(line: 502, column: 4, scope: !13464)
!13464 = distinct !DILexicalBlock(scope: !13454, file: !429, line: 501, column: 40)
!13465 = distinct !{!13465, !13466, !13467}
!13466 = !DILocation(line: 500, column: 3, scope: !13454)
!13467 = !DILocation(line: 503, column: 3, scope: !13454)
!13468 = !DILocation(line: 504, column: 10, scope: !13454)
!13469 = !DILocation(line: 505, column: 2, scope: !13454)
!13470 = !DILocation(line: 507, column: 2, scope: !13446)
!13471 = distinct !DISubprogram(name: "device_visitor", scope: !13338, file: !13338, line: 106, type: !13472, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !13474)
!13472 = !DISubroutineType(types: !13473)
!13473 = !{!103, !442, !132, !13428, !102}
!13474 = !{!13475, !13476, !13477, !13478, !13479, !13481, !13484, !13485}
!13475 = !DILocalVariable(name: "handles", arg: 1, scope: !13471, file: !13338, line: 106, type: !442)
!13476 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13471, file: !13338, line: 107, type: !132)
!13477 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13471, file: !13338, line: 108, type: !13428)
!13478 = !DILocalVariable(name: "context", arg: 4, scope: !13471, file: !13338, line: 109, type: !102)
!13479 = !DILocalVariable(name: "i", scope: !13480, file: !13338, line: 112, type: !132)
!13480 = distinct !DILexicalBlock(scope: !13471, file: !13338, line: 112, column: 2)
!13481 = !DILocalVariable(name: "dh", scope: !13482, file: !13338, line: 113, type: !444)
!13482 = distinct !DILexicalBlock(scope: !13483, file: !13338, line: 112, column: 44)
!13483 = distinct !DILexicalBlock(scope: !13480, file: !13338, line: 112, column: 2)
!13484 = !DILocalVariable(name: "rdev", scope: !13482, file: !13338, line: 114, type: !13341)
!13485 = !DILocalVariable(name: "rc", scope: !13482, file: !13338, line: 115, type: !103)
!13486 = !DILocation(line: 0, scope: !13471)
!13487 = !DILocation(line: 0, scope: !13480)
!13488 = !DILocation(line: 112, column: 23, scope: !13483)
!13489 = !DILocation(line: 112, column: 2, scope: !13480)
!13490 = distinct !{!13490, !13489, !13491}
!13491 = !DILocation(line: 120, column: 2, scope: !13480)
!13492 = !DILocation(line: 113, column: 24, scope: !13482)
!13493 = !DILocation(line: 0, scope: !13482)
!13494 = !DILocation(line: 114, column: 31, scope: !13482)
!13495 = !DILocation(line: 115, column: 12, scope: !13482)
!13496 = !DILocation(line: 117, column: 10, scope: !13497)
!13497 = distinct !DILexicalBlock(scope: !13482, file: !13338, line: 117, column: 7)
!13498 = !DILocation(line: 112, column: 39, scope: !13483)
!13499 = !DILocation(line: 123, column: 1, scope: !13471)
!13500 = distinct !DISubprogram(name: "device_from_handle", scope: !429, file: !429, line: 439, type: !13501, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !13503)
!13501 = !DISubroutineType(types: !13502)
!13502 = !{!13341, !444}
!13503 = !{!13504, !13505, !13506}
!13504 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13500, file: !429, line: 439, type: !444)
!13505 = !DILocalVariable(name: "dev", scope: !13500, file: !429, line: 443, type: !13341)
!13506 = !DILocalVariable(name: "numdev", scope: !13500, file: !429, line: 444, type: !132)
!13507 = !DILocation(line: 0, scope: !13500)
!13508 = !DILocation(line: 446, column: 7, scope: !13509)
!13509 = distinct !DILexicalBlock(scope: !13500, file: !429, line: 446, column: 6)
!13510 = !DILocation(line: 446, column: 18, scope: !13509)
!13511 = !DILocation(line: 446, column: 23, scope: !13509)
!13512 = !DILocation(line: 450, column: 2, scope: !13500)
!13513 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13338, file: !13338, line: 135, type: !13426, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !13514)
!13514 = !{!13515, !13516, !13517, !13518, !13519}
!13515 = !DILocalVariable(name: "dev", arg: 1, scope: !13513, file: !13338, line: 135, type: !13341)
!13516 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13513, file: !13338, line: 136, type: !13428)
!13517 = !DILocalVariable(name: "context", arg: 3, scope: !13513, file: !13338, line: 137, type: !102)
!13518 = !DILocalVariable(name: "handle_count", scope: !13513, file: !13338, line: 139, type: !132)
!13519 = !DILocalVariable(name: "handles", scope: !13513, file: !13338, line: 140, type: !442)
!13520 = !DILocation(line: 0, scope: !13513)
!13521 = !DILocation(line: 139, column: 2, scope: !13513)
!13522 = !DILocation(line: 139, column: 9, scope: !13513)
!13523 = !DILocation(line: 140, column: 35, scope: !13513)
!13524 = !DILocation(line: 142, column: 33, scope: !13513)
!13525 = !DILocation(line: 142, column: 9, scope: !13513)
!13526 = !DILocation(line: 143, column: 1, scope: !13513)
!13527 = !DILocation(line: 142, column: 2, scope: !13513)
!13528 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !429, file: !429, line: 573, type: !13447, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !13529)
!13529 = !{!13530, !13531, !13532, !13533, !13534}
!13530 = !DILocalVariable(name: "dev", arg: 1, scope: !13528, file: !429, line: 573, type: !13341)
!13531 = !DILocalVariable(name: "count", arg: 2, scope: !13528, file: !429, line: 573, type: !2731)
!13532 = !DILocalVariable(name: "rv", scope: !13528, file: !429, line: 575, type: !442)
!13533 = !DILocalVariable(name: "region", scope: !13528, file: !429, line: 576, type: !132)
!13534 = !DILocalVariable(name: "i", scope: !13528, file: !429, line: 577, type: !132)
!13535 = !DILocation(line: 0, scope: !13528)
!13536 = !DILocation(line: 575, column: 35, scope: !13528)
!13537 = !DILocation(line: 579, column: 9, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13528, file: !429, line: 579, column: 6)
!13539 = !DILocation(line: 579, column: 6, scope: !13528)
!13540 = !DILocation(line: 582, column: 8, scope: !13541)
!13541 = distinct !DILexicalBlock(scope: !13542, file: !429, line: 582, column: 8)
!13542 = distinct !DILexicalBlock(scope: !13543, file: !429, line: 581, column: 23)
!13543 = distinct !DILexicalBlock(scope: !13538, file: !429, line: 579, column: 18)
!13544 = !DILocation(line: 582, column: 12, scope: !13541)
!13545 = !DILocation(line: 585, column: 6, scope: !13542)
!13546 = !DILocation(line: 0, scope: !13543)
!13547 = !DILocation(line: 581, column: 17, scope: !13543)
!13548 = !DILocation(line: 581, column: 3, scope: !13543)
!13549 = !DILocation(line: 588, column: 10, scope: !13543)
!13550 = !DILocation(line: 588, column: 16, scope: !13543)
!13551 = !DILocation(line: 589, column: 4, scope: !13552)
!13552 = distinct !DILexicalBlock(scope: !13543, file: !429, line: 588, column: 39)
!13553 = !DILocation(line: 588, column: 3, scope: !13543)
!13554 = distinct !{!13554, !13553, !13555}
!13555 = !DILocation(line: 590, column: 3, scope: !13543)
!13556 = !DILocation(line: 591, column: 10, scope: !13543)
!13557 = !DILocation(line: 592, column: 2, scope: !13543)
!13558 = !DILocation(line: 575, column: 25, scope: !13528)
!13559 = !DILocation(line: 594, column: 2, scope: !13528)
!13560 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1941, file: !1941, line: 49, type: !13561, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !251)
!13561 = !DISubroutineType(types: !13562)
!13562 = !{!374}
!13563 = !DILocation(line: 51, column: 10, scope: !13560)
!13564 = !DILocation(line: 51, column: 20, scope: !13560)
!13565 = !DILocation(line: 51, column: 2, scope: !13560)
!13566 = distinct !DISubprogram(name: "coredump", scope: !3245, file: !3245, line: 209, type: !13567, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !13713)
!13567 = !DISubroutineType(types: !13568)
!13568 = !{null, !32, !13569, !13613}
!13569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13570, size: 32)
!13570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13571)
!13571 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2859, line: 141, baseType: !13572)
!13572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2859, line: 97, size: 256, elements: !13573)
!13573 = !{!13574}
!13574 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13572, file: !2859, line: 107, baseType: !13575, size: 256)
!13575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2859, line: 98, size: 256, elements: !13576)
!13576 = !{!13577, !13582, !13587, !13592, !13597, !13602, !13607, !13612}
!13577 = !DIDerivedType(tag: DW_TAG_member, scope: !13575, file: !2859, line: 99, baseType: !13578, size: 32)
!13578 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13575, file: !2859, line: 99, size: 32, elements: !13579)
!13579 = !{!13580, !13581}
!13580 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13578, file: !2859, line: 99, baseType: !108, size: 32)
!13581 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13578, file: !2859, line: 99, baseType: !108, size: 32)
!13582 = !DIDerivedType(tag: DW_TAG_member, scope: !13575, file: !2859, line: 100, baseType: !13583, size: 32, offset: 32)
!13583 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13575, file: !2859, line: 100, size: 32, elements: !13584)
!13584 = !{!13585, !13586}
!13585 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13583, file: !2859, line: 100, baseType: !108, size: 32)
!13586 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13583, file: !2859, line: 100, baseType: !108, size: 32)
!13587 = !DIDerivedType(tag: DW_TAG_member, scope: !13575, file: !2859, line: 101, baseType: !13588, size: 32, offset: 64)
!13588 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13575, file: !2859, line: 101, size: 32, elements: !13589)
!13589 = !{!13590, !13591}
!13590 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13588, file: !2859, line: 101, baseType: !108, size: 32)
!13591 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13588, file: !2859, line: 101, baseType: !108, size: 32)
!13592 = !DIDerivedType(tag: DW_TAG_member, scope: !13575, file: !2859, line: 102, baseType: !13593, size: 32, offset: 96)
!13593 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13575, file: !2859, line: 102, size: 32, elements: !13594)
!13594 = !{!13595, !13596}
!13595 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13593, file: !2859, line: 102, baseType: !108, size: 32)
!13596 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13593, file: !2859, line: 102, baseType: !108, size: 32)
!13597 = !DIDerivedType(tag: DW_TAG_member, scope: !13575, file: !2859, line: 103, baseType: !13598, size: 32, offset: 128)
!13598 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13575, file: !2859, line: 103, size: 32, elements: !13599)
!13599 = !{!13600, !13601}
!13600 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13598, file: !2859, line: 103, baseType: !108, size: 32)
!13601 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13598, file: !2859, line: 103, baseType: !108, size: 32)
!13602 = !DIDerivedType(tag: DW_TAG_member, scope: !13575, file: !2859, line: 104, baseType: !13603, size: 32, offset: 160)
!13603 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13575, file: !2859, line: 104, size: 32, elements: !13604)
!13604 = !{!13605, !13606}
!13605 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13603, file: !2859, line: 104, baseType: !108, size: 32)
!13606 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13603, file: !2859, line: 104, baseType: !108, size: 32)
!13607 = !DIDerivedType(tag: DW_TAG_member, scope: !13575, file: !2859, line: 105, baseType: !13608, size: 32, offset: 192)
!13608 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13575, file: !2859, line: 105, size: 32, elements: !13609)
!13609 = !{!13610, !13611}
!13610 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13608, file: !2859, line: 105, baseType: !108, size: 32)
!13611 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13608, file: !2859, line: 105, baseType: !108, size: 32)
!13612 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13575, file: !2859, line: 106, baseType: !108, size: 32, offset: 224)
!13613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13614, size: 32)
!13614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !13615)
!13615 = !{!13616, !13674, !13686, !13687, !13688, !13689, !13695, !13708}
!13616 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13614, file: !163, line: 247, baseType: !13617, size: 384)
!13617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !13618)
!13618 = !{!13619, !13643, !13650, !13651, !13652, !13661, !13662, !13663}
!13619 = !DIDerivedType(tag: DW_TAG_member, scope: !13617, file: !163, line: 60, baseType: !13620, size: 64)
!13620 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13617, file: !163, line: 60, size: 64, elements: !13621)
!13621 = !{!13622, !13637}
!13622 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13620, file: !163, line: 61, baseType: !13623, size: 64)
!13623 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !13624)
!13624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !13625)
!13625 = !{!13626, !13632}
!13626 = !DIDerivedType(tag: DW_TAG_member, scope: !13624, file: !146, line: 38, baseType: !13627, size: 32)
!13627 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13624, file: !146, line: 38, size: 32, elements: !13628)
!13628 = !{!13629, !13631}
!13629 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13627, file: !146, line: 39, baseType: !13630, size: 32)
!13630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13624, size: 32)
!13631 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13627, file: !146, line: 40, baseType: !13630, size: 32)
!13632 = !DIDerivedType(tag: DW_TAG_member, scope: !13624, file: !146, line: 42, baseType: !13633, size: 32, offset: 32)
!13633 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13624, file: !146, line: 42, size: 32, elements: !13634)
!13634 = !{!13635, !13636}
!13635 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13633, file: !146, line: 43, baseType: !13630, size: 32)
!13636 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13633, file: !146, line: 44, baseType: !13630, size: 32)
!13637 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13620, file: !163, line: 62, baseType: !13638, size: 64)
!13638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !13639)
!13639 = !{!13640}
!13640 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13638, file: !175, line: 50, baseType: !13641, size: 64)
!13641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13642, size: 64, elements: !180)
!13642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13638, size: 32)
!13643 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13617, file: !163, line: 68, baseType: !13644, size: 32, offset: 64)
!13644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13645, size: 32)
!13645 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !13646)
!13646 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !13647)
!13647 = !{!13648}
!13648 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13646, file: !141, line: 232, baseType: !13649, size: 64)
!13649 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !13624)
!13650 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13617, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!13651 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13617, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!13652 = !DIDerivedType(tag: DW_TAG_member, scope: !13617, file: !163, line: 90, baseType: !13653, size: 16, offset: 112)
!13653 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13617, file: !163, line: 90, size: 16, elements: !13654)
!13654 = !{!13655, !13660}
!13655 = !DIDerivedType(tag: DW_TAG_member, scope: !13653, file: !163, line: 91, baseType: !13656, size: 16)
!13656 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13653, file: !163, line: 91, size: 16, elements: !13657)
!13657 = !{!13658, !13659}
!13658 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13656, file: !163, line: 96, baseType: !195, size: 8)
!13659 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13656, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!13660 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13653, file: !163, line: 100, baseType: !121, size: 16)
!13661 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13617, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!13662 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13617, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!13663 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13617, file: !163, line: 131, baseType: !13664, size: 192, offset: 192)
!13664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !13665)
!13665 = !{!13666, !13667, !13673}
!13666 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13664, file: !141, line: 245, baseType: !13623, size: 64)
!13667 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13664, file: !141, line: 246, baseType: !13668, size: 32, offset: 64)
!13668 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !13669)
!13669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13670, size: 32)
!13670 = !DISubroutineType(types: !13671)
!13671 = !{null, !13672}
!13672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13664, size: 32)
!13673 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13664, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!13674 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13614, file: !163, line: 250, baseType: !13675, size: 288, offset: 384)
!13675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !13676)
!13676 = !{!13677, !13678, !13679, !13680, !13681, !13682, !13683, !13684, !13685}
!13677 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13675, file: !214, line: 26, baseType: !108, size: 32)
!13678 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13675, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!13679 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13675, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!13680 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13675, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!13681 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13675, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!13682 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13675, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!13683 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13675, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!13684 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13675, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!13685 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13675, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!13686 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13614, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!13687 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13614, file: !163, line: 256, baseType: !13645, size: 64, offset: 704)
!13688 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13614, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!13689 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13614, file: !163, line: 300, baseType: !13690, size: 96, offset: 800)
!13690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !13691)
!13691 = !{!13692, !13693, !13694}
!13692 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13690, file: !163, line: 153, baseType: !22, size: 32)
!13693 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13690, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!13694 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13690, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!13695 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13614, file: !163, line: 325, baseType: !13696, size: 32, offset: 896)
!13696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13697, size: 32)
!13697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !13698)
!13698 = !{!13699, !13705, !13706}
!13699 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13697, file: !137, line: 5074, baseType: !13700, size: 96)
!13700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !13701)
!13701 = !{!13702, !13703, !13704}
!13702 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13700, file: !240, line: 57, baseType: !243, size: 32)
!13703 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13700, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!13704 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13700, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!13705 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13697, file: !137, line: 5075, baseType: !13645, size: 64, offset: 96)
!13706 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13697, file: !137, line: 5076, baseType: !13707, offset: 160)
!13707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!13708 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13614, file: !163, line: 343, baseType: !13709, size: 64, offset: 928)
!13709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !13710)
!13710 = !{!13711, !13712}
!13711 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13709, file: !214, line: 63, baseType: !108, size: 32)
!13712 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13709, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!13713 = !{!13714, !13715, !13716}
!13714 = !DILocalVariable(name: "reason", arg: 1, scope: !13566, file: !3245, line: 209, type: !32)
!13715 = !DILocalVariable(name: "esf", arg: 2, scope: !13566, file: !3245, line: 209, type: !13569)
!13716 = !DILocalVariable(name: "thread", arg: 3, scope: !13566, file: !3245, line: 210, type: !13613)
!13717 = !DILocation(line: 0, scope: !13566)
!13718 = !DILocation(line: 212, column: 1, scope: !13566)
!13719 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3245, file: !3245, line: 214, type: !13720, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !13722)
!13720 = !DISubroutineType(types: !13721)
!13721 = !{null, !22, !22}
!13722 = !{!13723, !13724}
!13723 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13719, file: !3245, line: 214, type: !22)
!13724 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13719, file: !3245, line: 214, type: !22)
!13725 = !DILocation(line: 0, scope: !13719)
!13726 = !DILocation(line: 216, column: 1, scope: !13719)
!13727 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3245, file: !3245, line: 218, type: !13728, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !13730)
!13728 = !DISubroutineType(types: !13729)
!13729 = !{null, !379, !132}
!13730 = !{!13731, !13732}
!13731 = !DILocalVariable(name: "buf", arg: 1, scope: !13727, file: !3245, line: 218, type: !379)
!13732 = !DILocalVariable(name: "buflen", arg: 2, scope: !13727, file: !3245, line: 218, type: !132)
!13733 = !DILocation(line: 0, scope: !13727)
!13734 = !DILocation(line: 220, column: 1, scope: !13727)
!13735 = distinct !DISubprogram(name: "coredump_query", scope: !3245, file: !3245, line: 222, type: !13736, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !13738)
!13736 = !DISubroutineType(types: !13737)
!13737 = !{!103, !3244, !102}
!13738 = !{!13739, !13740}
!13739 = !DILocalVariable(name: "query_id", arg: 1, scope: !13735, file: !3245, line: 222, type: !3244)
!13740 = !DILocalVariable(name: "arg", arg: 2, scope: !13735, file: !3245, line: 222, type: !102)
!13741 = !DILocation(line: 0, scope: !13735)
!13742 = !DILocation(line: 224, column: 2, scope: !13735)
!13743 = distinct !DISubprogram(name: "coredump_cmd", scope: !3245, file: !3245, line: 227, type: !13744, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !13746)
!13744 = !DISubroutineType(types: !13745)
!13745 = !{!103, !3251, !102}
!13746 = !{!13747, !13748}
!13747 = !DILocalVariable(name: "query_id", arg: 1, scope: !13743, file: !3245, line: 227, type: !3251)
!13748 = !DILocalVariable(name: "arg", arg: 2, scope: !13743, file: !3245, line: 227, type: !102)
!13749 = !DILocation(line: 0, scope: !13743)
!13750 = !DILocation(line: 229, column: 2, scope: !13743)
!13751 = distinct !DISubprogram(name: "arch_system_halt", scope: !13752, file: !13752, line: 23, type: !7027, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !13753)
!13752 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13753 = !{!13754}
!13754 = !DILocalVariable(name: "reason", arg: 1, scope: !13751, file: !13752, line: 23, type: !32)
!13755 = !DILocation(line: 0, scope: !13751)
!13756 = !DILocation(line: 55, column: 2, scope: !13757, inlinedAt: !13761)
!13757 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7016, file: !7016, line: 42, type: !7017, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !13758)
!13758 = !{!13759, !13760}
!13759 = !DILocalVariable(name: "key", scope: !13757, file: !7016, line: 44, type: !32)
!13760 = !DILocalVariable(name: "tmp", scope: !13757, file: !7016, line: 53, type: !32)
!13761 = distinct !DILocation(line: 31, column: 8, scope: !13751)
!13762 = !{i64 2040208}
!13763 = !DILocation(line: 0, scope: !13757, inlinedAt: !13761)
!13764 = !DILocation(line: 32, column: 2, scope: !13751)
!13765 = !DILocation(line: 32, column: 2, scope: !13766)
!13766 = distinct !DILexicalBlock(scope: !13767, file: !13752, line: 32, column: 2)
!13767 = distinct !DILexicalBlock(scope: !13751, file: !13752, line: 32, column: 2)
!13768 = distinct !{!13768, !13769, !13770}
!13769 = !DILocation(line: 32, column: 2, scope: !13767)
!13770 = !DILocation(line: 34, column: 2, scope: !13767)
!13771 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13752, file: !13752, line: 39, type: !13772, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !13774)
!13772 = !DISubroutineType(types: !13773)
!13773 = !{null, !32, !13569}
!13774 = !{!13775, !13776}
!13775 = !DILocalVariable(name: "reason", arg: 1, scope: !13771, file: !13752, line: 39, type: !32)
!13776 = !DILocalVariable(name: "esf", arg: 2, scope: !13771, file: !13752, line: 40, type: !13569)
!13777 = !DILocation(line: 0, scope: !13771)
!13778 = !DILocation(line: 45, column: 2, scope: !13779)
!13779 = distinct !DILexicalBlock(scope: !13780, file: !13752, line: 45, column: 2)
!13780 = distinct !DILexicalBlock(scope: !13781, file: !13752, line: 45, column: 2)
!13781 = distinct !DILexicalBlock(scope: !13782, file: !13752, line: 45, column: 2)
!13782 = distinct !DILexicalBlock(scope: !13771, file: !13752, line: 45, column: 2)
!13783 = !DILocation(line: 46, column: 2, scope: !13771)
!13784 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13752, file: !13752, line: 81, type: !7027, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !13785)
!13785 = !{!13786}
!13786 = !DILocalVariable(name: "reason", arg: 1, scope: !13784, file: !13752, line: 81, type: !32)
!13787 = !DILocation(line: 0, scope: !13784)
!13788 = !DILocation(line: 83, column: 2, scope: !13784)
!13789 = distinct !DISubprogram(name: "z_fatal_error", scope: !13752, file: !13752, line: 96, type: !13772, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !13790)
!13790 = !{!13791, !13792, !13793, !13794}
!13791 = !DILocalVariable(name: "reason", arg: 1, scope: !13789, file: !13752, line: 96, type: !32)
!13792 = !DILocalVariable(name: "esf", arg: 2, scope: !13789, file: !13752, line: 96, type: !13569)
!13793 = !DILocalVariable(name: "key", scope: !13789, file: !13752, line: 102, type: !32)
!13794 = !DILocalVariable(name: "thread", scope: !13789, file: !13752, line: 103, type: !13613)
!13795 = !DILocation(line: 0, scope: !13789)
!13796 = !DILocation(line: 55, column: 2, scope: !13757, inlinedAt: !13797)
!13797 = distinct !DILocation(line: 102, column: 21, scope: !13789)
!13798 = !DILocation(line: 0, scope: !13757, inlinedAt: !13797)
!13799 = !DILocation(line: 104, column: 4, scope: !13789)
!13800 = !DILocation(line: 109, column: 2, scope: !13801)
!13801 = distinct !DILexicalBlock(scope: !13802, file: !13752, line: 109, column: 2)
!13802 = distinct !DILexicalBlock(scope: !13803, file: !13752, line: 109, column: 2)
!13803 = distinct !DILexicalBlock(scope: !13804, file: !13752, line: 109, column: 2)
!13804 = distinct !DILexicalBlock(scope: !13789, file: !13752, line: 109, column: 2)
!13805 = !DILocation(line: 119, column: 11, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13789, file: !13752, line: 119, column: 6)
!13807 = !DILocation(line: 119, column: 20, scope: !13806)
!13808 = !DILocalVariable(name: "esf", arg: 1, scope: !13809, file: !8350, line: 71, type: !13569)
!13809 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8350, file: !8350, line: 71, type: !13810, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !13812)
!13810 = !DISubroutineType(types: !13811)
!13811 = !{!131, !13569}
!13812 = !{!13808}
!13813 = !DILocation(line: 0, scope: !13809, inlinedAt: !13814)
!13814 = distinct !DILocation(line: 119, column: 23, scope: !13806)
!13815 = !DILocation(line: 73, column: 21, scope: !13809, inlinedAt: !13814)
!13816 = !DILocation(line: 73, column: 26, scope: !13809, inlinedAt: !13814)
!13817 = !DILocation(line: 73, column: 9, scope: !13809, inlinedAt: !13814)
!13818 = !DILocation(line: 119, column: 6, scope: !13789)
!13819 = !DILocation(line: 120, column: 3, scope: !13820)
!13820 = distinct !DILexicalBlock(scope: !13821, file: !13752, line: 120, column: 3)
!13821 = distinct !DILexicalBlock(scope: !13822, file: !13752, line: 120, column: 3)
!13822 = distinct !DILexicalBlock(scope: !13823, file: !13752, line: 120, column: 3)
!13823 = distinct !DILexicalBlock(scope: !13824, file: !13752, line: 120, column: 3)
!13824 = distinct !DILexicalBlock(scope: !13806, file: !13752, line: 119, column: 57)
!13825 = !DILocation(line: 121, column: 2, scope: !13824)
!13826 = !DILocation(line: 124, column: 2, scope: !13827)
!13827 = distinct !DILexicalBlock(scope: !13828, file: !13752, line: 124, column: 2)
!13828 = distinct !DILexicalBlock(scope: !13829, file: !13752, line: 124, column: 2)
!13829 = distinct !DILexicalBlock(scope: !13830, file: !13752, line: 124, column: 2)
!13830 = distinct !DILexicalBlock(scope: !13789, file: !13752, line: 124, column: 2)
!13831 = !DILocation(line: 131, column: 2, scope: !13789)
!13832 = !DILocation(line: 0, scope: !13809, inlinedAt: !13833)
!13833 = distinct !DILocation(line: 151, column: 24, scope: !13834)
!13834 = distinct !DILexicalBlock(scope: !13835, file: !13752, line: 151, column: 7)
!13835 = distinct !DILexicalBlock(scope: !13836, file: !13752, line: 146, column: 32)
!13836 = distinct !DILexicalBlock(scope: !13789, file: !13752, line: 146, column: 6)
!13837 = !DILocation(line: 151, column: 7, scope: !13835)
!13838 = !DILocation(line: 151, column: 21, scope: !13834)
!13839 = !DILocalVariable(name: "key", arg: 1, scope: !13840, file: !7016, line: 84, type: !32)
!13840 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7016, file: !7016, line: 84, type: !7027, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !13841)
!13841 = !{!13839}
!13842 = !DILocation(line: 0, scope: !13840, inlinedAt: !13843)
!13843 = distinct !DILocation(line: 186, column: 2, scope: !13789)
!13844 = !DILocation(line: 95, column: 2, scope: !13840, inlinedAt: !13843)
!13845 = !{i64 2041025}
!13846 = !DILocation(line: 189, column: 3, scope: !13847)
!13847 = distinct !DILexicalBlock(scope: !13848, file: !13752, line: 188, column: 41)
!13848 = distinct !DILexicalBlock(scope: !13789, file: !13752, line: 188, column: 6)
!13849 = !DILocation(line: 191, column: 1, scope: !13789)
!13850 = distinct !DISubprogram(name: "k_current_get", scope: !137, file: !137, line: 530, type: !13851, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !251)
!13851 = !DISubroutineType(types: !13852)
!13852 = !{!13853}
!13853 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !13613)
!13854 = !DILocation(line: 535, column: 9, scope: !13850)
!13855 = !DILocation(line: 535, column: 2, scope: !13850)
!13856 = distinct !DISubprogram(name: "reason_to_str", scope: !13752, file: !13752, line: 62, type: !13857, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !13859)
!13857 = !DISubroutineType(types: !13858)
!13858 = !{!337, !32}
!13859 = !{!13860}
!13860 = !DILocalVariable(name: "reason", arg: 1, scope: !13856, file: !13752, line: 62, type: !32)
!13861 = !DILocation(line: 0, scope: !13856)
!13862 = !DILocation(line: 64, column: 2, scope: !13856)
!13863 = !DILocation(line: 0, scope: !13864)
!13864 = distinct !DILexicalBlock(scope: !13856, file: !13752, line: 64, column: 18)
!13865 = !DILocation(line: 78, column: 1, scope: !13856)
!13866 = distinct !DISubprogram(name: "thread_name_get", scope: !13752, file: !13752, line: 51, type: !13867, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !13869)
!13867 = !DISubroutineType(types: !13868)
!13868 = !{!337, !13613}
!13869 = !{!13870, !13871}
!13870 = !DILocalVariable(name: "thread", arg: 1, scope: !13866, file: !13752, line: 51, type: !13613)
!13871 = !DILocalVariable(name: "thread_name", scope: !13866, file: !13752, line: 53, type: !337)
!13872 = !DILocation(line: 0, scope: !13866)
!13873 = !DILocation(line: 53, column: 36, scope: !13866)
!13874 = !DILocation(line: 53, column: 28, scope: !13866)
!13875 = !DILocation(line: 53, column: 47, scope: !13866)
!13876 = !DILocation(line: 55, column: 19, scope: !13877)
!13877 = distinct !DILexicalBlock(scope: !13866, file: !13752, line: 55, column: 6)
!13878 = !DILocation(line: 55, column: 28, scope: !13877)
!13879 = !DILocation(line: 55, column: 32, scope: !13877)
!13880 = !DILocation(line: 55, column: 47, scope: !13877)
!13881 = !DILocation(line: 55, column: 6, scope: !13866)
!13882 = !DILocation(line: 57, column: 2, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !13877, file: !13752, line: 55, column: 57)
!13884 = !DILocation(line: 59, column: 2, scope: !13866)
!13885 = distinct !DISubprogram(name: "k_thread_abort", scope: !3640, file: !3640, line: 188, type: !13886, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !13888)
!13886 = !DISubroutineType(types: !13887)
!13887 = !{null, !13853}
!13888 = !{!13889}
!13889 = !DILocalVariable(name: "thread", arg: 1, scope: !13885, file: !3640, line: 188, type: !13853)
!13890 = !DILocation(line: 0, scope: !13885)
!13891 = !DILocation(line: 197, column: 2, scope: !13892)
!13892 = distinct !DILexicalBlock(scope: !13885, file: !3640, line: 197, column: 2)
!13893 = !{i64 2154151939}
!13894 = !DILocation(line: 198, column: 2, scope: !13885)
!13895 = !DILocation(line: 199, column: 1, scope: !13885)
!13896 = distinct !DISubprogram(name: "z_current_get", scope: !3640, file: !3640, line: 173, type: !13851, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !251)
!13897 = !DILocation(line: 180, column: 2, scope: !13898)
!13898 = distinct !DILexicalBlock(scope: !13896, file: !3640, line: 180, column: 2)
!13899 = !{i64 2154151871}
!13900 = !DILocation(line: 181, column: 9, scope: !13896)
!13901 = !DILocation(line: 181, column: 2, scope: !13896)
!13902 = distinct !DISubprogram(name: "z_early_memset", scope: !1949, file: !1949, line: 108, type: !13903, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !13905)
!13903 = !DISubroutineType(types: !13904)
!13904 = !{null, !102, !103, !132}
!13905 = !{!13906, !13907, !13908}
!13906 = !DILocalVariable(name: "dst", arg: 1, scope: !13902, file: !1949, line: 108, type: !102)
!13907 = !DILocalVariable(name: "c", arg: 2, scope: !13902, file: !1949, line: 108, type: !103)
!13908 = !DILocalVariable(name: "n", arg: 3, scope: !13902, file: !1949, line: 108, type: !132)
!13909 = !DILocation(line: 0, scope: !13902)
!13910 = !DILocation(line: 110, column: 9, scope: !13902)
!13911 = !DILocation(line: 111, column: 1, scope: !13902)
!13912 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1949, file: !1949, line: 121, type: !13913, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !13915)
!13913 = !DISubroutineType(types: !13914)
!13914 = !{null, !102, !13, !132}
!13915 = !{!13916, !13917, !13918}
!13916 = !DILocalVariable(name: "dst", arg: 1, scope: !13912, file: !1949, line: 121, type: !102)
!13917 = !DILocalVariable(name: "src", arg: 2, scope: !13912, file: !1949, line: 121, type: !13)
!13918 = !DILocalVariable(name: "n", arg: 3, scope: !13912, file: !1949, line: 121, type: !132)
!13919 = !DILocation(line: 0, scope: !13912)
!13920 = !DILocation(line: 123, column: 9, scope: !13912)
!13921 = !DILocation(line: 124, column: 1, scope: !13912)
!13922 = distinct !DISubprogram(name: "z_bss_zero", scope: !1949, file: !1949, line: 132, type: !334, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !251)
!13923 = !DILocation(line: 143, column: 2, scope: !13922)
!13924 = !DILocation(line: 168, column: 1, scope: !13922)
!13925 = distinct !DISubprogram(name: "z_init_cpu", scope: !1949, file: !1949, line: 372, type: !9593, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !13926)
!13926 = !{!13927}
!13927 = !DILocalVariable(name: "id", arg: 1, scope: !13925, file: !1949, line: 372, type: !103)
!13928 = !DILocation(line: 0, scope: !13925)
!13929 = !DILocation(line: 374, column: 2, scope: !13925)
!13930 = !DILocation(line: 375, column: 34, scope: !13925)
!13931 = !DILocation(line: 375, column: 19, scope: !13925)
!13932 = !DILocation(line: 375, column: 31, scope: !13925)
!13933 = !DILocation(line: 376, column: 24, scope: !13925)
!13934 = !DILocation(line: 376, column: 19, scope: !13925)
!13935 = !DILocation(line: 376, column: 22, scope: !13925)
!13936 = !DILocation(line: 378, column: 26, scope: !13925)
!13937 = !DILocation(line: 378, column: 4, scope: !13925)
!13938 = !DILocation(line: 378, column: 50, scope: !13925)
!13939 = !DILocation(line: 377, column: 19, scope: !13925)
!13940 = !DILocation(line: 377, column: 29, scope: !13925)
!13941 = !DILocation(line: 384, column: 1, scope: !13925)
!13942 = distinct !DISubprogram(name: "init_idle_thread", scope: !1949, file: !1949, line: 343, type: !9593, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !13943)
!13943 = !{!13944, !13945, !13946, !13949}
!13944 = !DILocalVariable(name: "i", arg: 1, scope: !13942, file: !1949, line: 343, type: !103)
!13945 = !DILocalVariable(name: "thread", scope: !13942, file: !1949, line: 345, type: !2041)
!13946 = !DILocalVariable(name: "stack", scope: !13942, file: !1949, line: 346, type: !13947)
!13947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13948, size: 32)
!13948 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !314, line: 44, baseType: !2155)
!13949 = !DILocalVariable(name: "tname", scope: !13942, file: !1949, line: 358, type: !277)
!13950 = !DILocation(line: 0, scope: !13942)
!13951 = !DILocation(line: 345, column: 29, scope: !13942)
!13952 = !DILocation(line: 346, column: 28, scope: !13942)
!13953 = !DILocation(line: 362, column: 37, scope: !13942)
!13954 = !DILocation(line: 362, column: 36, scope: !13942)
!13955 = !DILocation(line: 361, column: 2, scope: !13942)
!13956 = !DILocation(line: 365, column: 2, scope: !13942)
!13957 = !DILocation(line: 370, column: 1, scope: !13942)
!13958 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !316, file: !316, line: 331, type: !13959, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !13961)
!13959 = !DISubroutineType(types: !13960)
!13960 = !{!277, !13947}
!13961 = !{!13962}
!13962 = !DILocalVariable(name: "sym", arg: 1, scope: !13958, file: !316, line: 331, type: !13947)
!13963 = !DILocation(line: 0, scope: !13958)
!13964 = !DILocation(line: 333, column: 21, scope: !13958)
!13965 = !DILocation(line: 333, column: 2, scope: !13958)
!13966 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13967, file: !13967, line: 155, type: !13968, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !13970)
!13967 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13968 = !DISubroutineType(types: !13969)
!13969 = !{null, !2041}
!13970 = !{!13971}
!13971 = !DILocalVariable(name: "thread", arg: 1, scope: !13966, file: !13967, line: 155, type: !2041)
!13972 = !DILocation(line: 0, scope: !13966)
!13973 = !DILocation(line: 157, column: 15, scope: !13966)
!13974 = !DILocation(line: 157, column: 28, scope: !13966)
!13975 = !DILocation(line: 158, column: 1, scope: !13966)
!13976 = distinct !DISubprogram(name: "z_cstart", scope: !1949, file: !1949, line: 501, type: !334, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !13977)
!13977 = !{!13978}
!13978 = !DILocalVariable(name: "dummy_thread", scope: !13976, file: !1949, line: 518, type: !2042)
!13979 = !DILocation(line: 507, column: 2, scope: !13976)
!13980 = !DILocation(line: 43, column: 14, scope: !13981, inlinedAt: !13985)
!13981 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13982, file: !13982, line: 40, type: !334, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !13983)
!13982 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13983 = !{!13984}
!13984 = !DILocalVariable(name: "msp", scope: !13981, file: !13982, line: 42, type: !108)
!13985 = distinct !DILocation(line: 44, column: 2, scope: !13986, inlinedAt: !13988)
!13986 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13987, file: !13987, line: 42, type: !334, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !251)
!13987 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13988 = distinct !DILocation(line: 510, column: 2, scope: !13976)
!13989 = !DILocation(line: 43, column: 3, scope: !13981, inlinedAt: !13985)
!13990 = !DILocation(line: 43, column: 60, scope: !13981, inlinedAt: !13985)
!13991 = !DILocation(line: 0, scope: !13981, inlinedAt: !13985)
!13992 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13993, file: !7334, line: 1153, type: !108)
!13993 = distinct !DISubprogram(name: "__set_MSP", scope: !7334, file: !7334, line: 1153, type: !7423, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !13994)
!13994 = !{!13992}
!13995 = !DILocation(line: 0, scope: !13993, inlinedAt: !13996)
!13996 = distinct !DILocation(line: 46, column: 2, scope: !13981, inlinedAt: !13985)
!13997 = !DILocation(line: 1155, column: 3, scope: !13993, inlinedAt: !13996)
!13998 = !{i64 2934288}
!13999 = !DILocation(line: 62, column: 11, scope: !13981, inlinedAt: !13985)
!14000 = !DILocation(line: 102, column: 2, scope: !14001, inlinedAt: !14002)
!14001 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8350, file: !8350, line: 97, type: !334, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !251)
!14002 = distinct !DILocation(line: 45, column: 2, scope: !13986, inlinedAt: !13988)
!14003 = !DILocation(line: 108, column: 2, scope: !14001, inlinedAt: !14002)
!14004 = !DILocation(line: 112, column: 2, scope: !14001, inlinedAt: !14002)
!14005 = !DILocation(line: 113, column: 2, scope: !14001, inlinedAt: !14002)
!14006 = !DILocation(line: 114, column: 2, scope: !14001, inlinedAt: !14002)
!14007 = !DILocation(line: 116, column: 2, scope: !14001, inlinedAt: !14002)
!14008 = !DILocation(line: 123, column: 13, scope: !14001, inlinedAt: !14002)
!14009 = !DILocation(line: 46, column: 2, scope: !13986, inlinedAt: !13988)
!14010 = !DILocation(line: 47, column: 2, scope: !13986, inlinedAt: !13988)
!14011 = !DILocation(line: 174, column: 12, scope: !14012, inlinedAt: !14013)
!14012 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8350, file: !8350, line: 169, type: !334, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !251)
!14013 = distinct !DILocation(line: 48, column: 2, scope: !13986, inlinedAt: !13988)
!14014 = !DILocation(line: 179, column: 12, scope: !14012, inlinedAt: !14013)
!14015 = !DILocation(line: 50, column: 2, scope: !13986, inlinedAt: !13988)
!14016 = !DILocation(line: 57, column: 2, scope: !13986, inlinedAt: !13988)
!14017 = !DILocation(line: 518, column: 2, scope: !13976)
!14018 = !DILocation(line: 518, column: 18, scope: !13976)
!14019 = !DILocation(line: 520, column: 2, scope: !13976)
!14020 = !DILocation(line: 523, column: 2, scope: !13976)
!14021 = !DILocation(line: 526, column: 2, scope: !13976)
!14022 = !DILocation(line: 527, column: 2, scope: !13976)
!14023 = !DILocation(line: 543, column: 24, scope: !13976)
!14024 = !DILocation(line: 543, column: 2, scope: !13976)
!14025 = !DILocation(line: 0, scope: !2177)
!14026 = !DILocation(line: 246, column: 15, scope: !2195)
!14027 = !DILocation(line: 246, column: 36, scope: !2194)
!14028 = !DILocation(line: 246, column: 2, scope: !2195)
!14029 = !DILocation(line: 247, column: 37, scope: !2193)
!14030 = !DILocation(line: 0, scope: !2193)
!14031 = !DILocation(line: 248, column: 19, scope: !2193)
!14032 = !DILocation(line: 248, column: 12, scope: !2193)
!14033 = !DILocation(line: 250, column: 11, scope: !14034)
!14034 = distinct !DILexicalBlock(scope: !2193, file: !1949, line: 250, column: 7)
!14035 = !DILocation(line: 250, column: 7, scope: !2193)
!14036 = !DILocation(line: 254, column: 11, scope: !14037)
!14037 = distinct !DILexicalBlock(scope: !14038, file: !1949, line: 254, column: 8)
!14038 = distinct !DILexicalBlock(scope: !14034, file: !1949, line: 250, column: 20)
!14039 = !DILocation(line: 254, column: 8, scope: !14038)
!14040 = !DILocation(line: 255, column: 9, scope: !14041)
!14041 = distinct !DILexicalBlock(scope: !14037, file: !1949, line: 254, column: 17)
!14042 = !DILocation(line: 258, column: 9, scope: !14041)
!14043 = !DILocation(line: 261, column: 28, scope: !14041)
!14044 = !DILocation(line: 261, column: 10, scope: !14041)
!14045 = !DILocation(line: 261, column: 17, scope: !14041)
!14046 = !DILocation(line: 261, column: 26, scope: !14041)
!14047 = !DILocation(line: 262, column: 4, scope: !14041)
!14048 = !DILocation(line: 263, column: 9, scope: !14038)
!14049 = !DILocation(line: 263, column: 16, scope: !14038)
!14050 = !DILocation(line: 263, column: 28, scope: !14038)
!14051 = !DILocation(line: 264, column: 3, scope: !14038)
!14052 = !DILocation(line: 246, column: 60, scope: !2194)
!14053 = distinct !{!14053, !14028, !14054}
!14054 = !DILocation(line: 265, column: 2, scope: !2195)
!14055 = !DILocation(line: 266, column: 1, scope: !2177)
!14056 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !624, file: !624, line: 1814, type: !7368, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !14057)
!14057 = !{!14058, !14059}
!14058 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14056, file: !624, line: 1814, type: !870)
!14059 = !DILocalVariable(name: "priority", arg: 2, scope: !14056, file: !624, line: 1814, type: !108)
!14060 = !DILocation(line: 0, scope: !14056)
!14061 = !DILocation(line: 1822, column: 48, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !14063, file: !624, line: 1821, column: 3)
!14063 = distinct !DILexicalBlock(scope: !14056, file: !624, line: 1816, column: 7)
!14064 = !DILocation(line: 1822, column: 32, scope: !14062)
!14065 = !DILocation(line: 1822, column: 40, scope: !14062)
!14066 = !DILocation(line: 1822, column: 5, scope: !14062)
!14067 = !DILocation(line: 1822, column: 46, scope: !14062)
!14068 = !DILocation(line: 1824, column: 1, scope: !14056)
!14069 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13987, file: !13987, line: 32, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!14070 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14071, file: !14071, line: 215, type: !13968, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !14072)
!14071 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14072 = !{!14073}
!14073 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14070, file: !14071, line: 215, type: !2041)
!14074 = !DILocation(line: 0, scope: !14070)
!14075 = !DILocation(line: 217, column: 21, scope: !14070)
!14076 = !DILocation(line: 217, column: 34, scope: !14070)
!14077 = !DILocation(line: 221, column: 21, scope: !14070)
!14078 = !DILocation(line: 221, column: 34, scope: !14070)
!14079 = !DILocation(line: 223, column: 27, scope: !14070)
!14080 = !DILocation(line: 223, column: 33, scope: !14070)
!14081 = !DILocation(line: 224, column: 27, scope: !14070)
!14082 = !DILocation(line: 224, column: 32, scope: !14070)
!14083 = !DILocation(line: 230, column: 2, scope: !14070)
!14084 = !DILocation(line: 239, column: 24, scope: !14070)
!14085 = !DILocation(line: 240, column: 1, scope: !14070)
!14086 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1949, file: !1949, line: 399, type: !14087, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !14089)
!14087 = !DISubroutineType(types: !14088)
!14088 = !{!277}
!14089 = !{!14090}
!14090 = !DILocalVariable(name: "stack_ptr", scope: !14086, file: !1949, line: 401, type: !277)
!14091 = !DILocation(line: 404, column: 2, scope: !14086)
!14092 = !DILocation(line: 416, column: 24, scope: !14086)
!14093 = !DILocation(line: 418, column: 14, scope: !14086)
!14094 = !DILocation(line: 0, scope: !14086)
!14095 = !DILocation(line: 423, column: 2, scope: !14086)
!14096 = !DILocation(line: 424, column: 2, scope: !14086)
!14097 = !DILocation(line: 426, column: 2, scope: !14086)
!14098 = !DILocation(line: 428, column: 2, scope: !14086)
!14099 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1949, file: !1949, line: 432, type: !14100, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !14102)
!14100 = !DISubroutineType(types: !14101)
!14101 = !{null, !277}
!14102 = !{!14103}
!14103 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14099, file: !1949, line: 432, type: !277)
!14104 = !DILocation(line: 0, scope: !14099)
!14105 = !DILocation(line: 435, column: 2, scope: !14099)
!14106 = !DILocation(line: 445, column: 2, scope: !14099)
!14107 = distinct !DISubprogram(name: "bg_thread_main", scope: !1949, file: !1949, line: 277, type: !323, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !14108)
!14108 = !{!14109, !14110, !14111}
!14109 = !DILocalVariable(name: "unused1", arg: 1, scope: !14107, file: !1949, line: 277, type: !102)
!14110 = !DILocalVariable(name: "unused2", arg: 2, scope: !14107, file: !1949, line: 277, type: !102)
!14111 = !DILocalVariable(name: "unused3", arg: 3, scope: !14107, file: !1949, line: 277, type: !102)
!14112 = !DILocation(line: 0, scope: !14107)
!14113 = !DILocation(line: 291, column: 20, scope: !14107)
!14114 = !DILocation(line: 293, column: 2, scope: !14107)
!14115 = !DILocation(line: 297, column: 2, scope: !14107)
!14116 = !DILocation(line: 305, column: 2, scope: !14107)
!14117 = !DILocation(line: 307, column: 2, scope: !14107)
!14118 = !DILocation(line: 330, column: 8, scope: !14107)
!14119 = !DILocation(line: 333, column: 34, scope: !14107)
!14120 = !DILocation(line: 339, column: 1, scope: !14107)
!14121 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2206, file: !2206, line: 45, type: !14122, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14130)
!14122 = !DISubroutineType(types: !14123)
!14123 = !{null, !14124, !102}
!14124 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !137, line: 103, baseType: !14125)
!14125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14126, size: 32)
!14126 = !DISubroutineType(types: !14127)
!14127 = !{null, !14128, !102}
!14128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14129, size: 32)
!14129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2211)
!14130 = !{!14131, !14132}
!14131 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14121, file: !2206, line: 45, type: !14124)
!14132 = !DILocalVariable(name: "user_data", arg: 2, scope: !14121, file: !2206, line: 45, type: !102)
!14133 = !DILocation(line: 0, scope: !14121)
!14134 = !DILocation(line: 71, column: 1, scope: !14121)
!14135 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2206, file: !2206, line: 73, type: !14122, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14136)
!14136 = !{!14137, !14138}
!14137 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14135, file: !2206, line: 73, type: !14124)
!14138 = !DILocalVariable(name: "user_data", arg: 2, scope: !14135, file: !2206, line: 73, type: !102)
!14139 = !DILocation(line: 0, scope: !14135)
!14140 = !DILocation(line: 95, column: 1, scope: !14135)
!14141 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2206, file: !2206, line: 97, type: !8351, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !251)
!14142 = !DILocation(line: 1031, column: 3, scope: !14143, inlinedAt: !14146)
!14143 = distinct !DISubprogram(name: "__get_IPSR", scope: !7334, file: !7334, line: 1027, type: !3620, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14144)
!14144 = !{!14145}
!14145 = !DILocalVariable(name: "result", scope: !14143, file: !7334, line: 1029, type: !108)
!14146 = distinct !DILocation(line: 48, column: 10, scope: !14147, inlinedAt: !14148)
!14147 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8350, file: !8350, line: 46, type: !8351, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !251)
!14148 = distinct !DILocation(line: 99, column: 9, scope: !14141)
!14149 = !{i64 2939939}
!14150 = !DILocation(line: 0, scope: !14143, inlinedAt: !14146)
!14151 = !DILocation(line: 48, column: 9, scope: !14147, inlinedAt: !14148)
!14152 = !DILocation(line: 99, column: 2, scope: !14141)
!14153 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2206, file: !2206, line: 106, type: !334, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !251)
!14154 = !DILocation(line: 108, column: 2, scope: !14153)
!14155 = !DILocation(line: 108, column: 17, scope: !14153)
!14156 = !DILocation(line: 108, column: 30, scope: !14153)
!14157 = !DILocation(line: 109, column: 1, scope: !14153)
!14158 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2206, file: !2206, line: 116, type: !334, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !251)
!14159 = !DILocation(line: 118, column: 2, scope: !14158)
!14160 = !DILocation(line: 118, column: 17, scope: !14158)
!14161 = !DILocation(line: 118, column: 30, scope: !14158)
!14162 = !DILocation(line: 119, column: 1, scope: !14158)
!14163 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2206, file: !2206, line: 126, type: !8351, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !251)
!14164 = !DILocation(line: 128, column: 10, scope: !14163)
!14165 = !DILocation(line: 128, column: 25, scope: !14163)
!14166 = !DILocation(line: 128, column: 38, scope: !14163)
!14167 = !DILocation(line: 128, column: 53, scope: !14163)
!14168 = !DILocation(line: 128, column: 2, scope: !14163)
!14169 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2206, file: !2206, line: 187, type: !14170, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14172)
!14170 = !DISubroutineType(types: !14171)
!14171 = !{!103, !2210, !337}
!14172 = !{!14173, !14174}
!14173 = !DILocalVariable(name: "thread", arg: 1, scope: !14169, file: !2206, line: 187, type: !2210)
!14174 = !DILocalVariable(name: "value", arg: 2, scope: !14169, file: !2206, line: 187, type: !337)
!14175 = !DILocation(line: 0, scope: !14169)
!14176 = !DILocation(line: 206, column: 2, scope: !14169)
!14177 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2206, file: !2206, line: 238, type: !14178, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14180)
!14178 = !DISubroutineType(types: !14179)
!14179 = !{!337, !2210}
!14180 = !{!14181}
!14181 = !DILocalVariable(name: "thread", arg: 1, scope: !14177, file: !2206, line: 238, type: !2210)
!14182 = !DILocation(line: 0, scope: !14177)
!14183 = !DILocation(line: 244, column: 2, scope: !14177)
!14184 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2206, file: !2206, line: 248, type: !14185, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14187)
!14185 = !DISubroutineType(types: !14186)
!14186 = !{!103, !2209, !277, !132}
!14187 = !{!14188, !14189, !14190}
!14188 = !DILocalVariable(name: "thread", arg: 1, scope: !14184, file: !2206, line: 248, type: !2209)
!14189 = !DILocalVariable(name: "buf", arg: 2, scope: !14184, file: !2206, line: 248, type: !277)
!14190 = !DILocalVariable(name: "size", arg: 3, scope: !14184, file: !2206, line: 248, type: !132)
!14191 = !DILocation(line: 0, scope: !14184)
!14192 = !DILocation(line: 257, column: 2, scope: !14184)
!14193 = !DILocation(line: 0, scope: !2205)
!14194 = !DILocation(line: 281, column: 11, scope: !14195)
!14195 = distinct !DILexicalBlock(scope: !2205, file: !2206, line: 281, column: 6)
!14196 = !DILocation(line: 281, column: 20, scope: !14195)
!14197 = !DILocation(line: 275, column: 45, scope: !2205)
!14198 = !DILocation(line: 285, column: 10, scope: !2205)
!14199 = !DILocation(line: 0, scope: !2326)
!14200 = !DILocation(line: 293, column: 39, scope: !14201)
!14201 = distinct !DILexicalBlock(scope: !2326, file: !2206, line: 293, column: 2)
!14202 = !DILocation(line: 293, column: 2, scope: !2326)
!14203 = !DILocation(line: 273, column: 14, scope: !2205)
!14204 = !DILocation(line: 309, column: 2, scope: !2205)
!14205 = !DILocation(line: 309, column: 11, scope: !2205)
!14206 = !DILocation(line: 311, column: 2, scope: !2205)
!14207 = !DILocation(line: 293, column: 26, scope: !14201)
!14208 = !DILocation(line: 294, column: 9, scope: !14209)
!14209 = distinct !DILexicalBlock(scope: !14201, file: !2206, line: 293, column: 54)
!14210 = !DILocation(line: 295, column: 21, scope: !14211)
!14211 = distinct !DILexicalBlock(scope: !14209, file: !2206, line: 295, column: 7)
!14212 = !DILocation(line: 295, column: 28, scope: !14211)
!14213 = !DILocation(line: 295, column: 7, scope: !14209)
!14214 = !DILocation(line: 299, column: 25, scope: !14209)
!14215 = !DILocation(line: 299, column: 41, scope: !14209)
!14216 = !DILocation(line: 300, column: 7, scope: !14209)
!14217 = !DILocation(line: 300, column: 26, scope: !14209)
!14218 = !DILocation(line: 299, column: 10, scope: !14209)
!14219 = !DILocation(line: 299, column: 7, scope: !14209)
!14220 = !DILocation(line: 302, column: 16, scope: !14209)
!14221 = !DILocation(line: 304, column: 20, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14209, file: !2206, line: 304, column: 7)
!14223 = !DILocation(line: 304, column: 7, scope: !14209)
!14224 = !DILocation(line: 305, column: 26, scope: !14225)
!14225 = distinct !DILexicalBlock(scope: !14222, file: !2206, line: 304, column: 26)
!14226 = !DILocation(line: 305, column: 42, scope: !14225)
!14227 = !DILocation(line: 305, column: 11, scope: !14225)
!14228 = !DILocation(line: 305, column: 8, scope: !14225)
!14229 = !DILocation(line: 306, column: 3, scope: !14225)
!14230 = !DILocation(line: 293, column: 50, scope: !14201)
!14231 = !DILocation(line: 312, column: 1, scope: !2205)
!14232 = distinct !DISubprogram(name: "copy_bytes", scope: !2206, file: !2206, line: 261, type: !14233, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14235)
!14233 = !DISubroutineType(types: !14234)
!14234 = !{!132, !277, !132, !337, !132}
!14235 = !{!14236, !14237, !14238, !14239, !14240}
!14236 = !DILocalVariable(name: "dest", arg: 1, scope: !14232, file: !2206, line: 261, type: !277)
!14237 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14232, file: !2206, line: 261, type: !132)
!14238 = !DILocalVariable(name: "src", arg: 3, scope: !14232, file: !2206, line: 261, type: !337)
!14239 = !DILocalVariable(name: "src_size", arg: 4, scope: !14232, file: !2206, line: 261, type: !132)
!14240 = !DILocalVariable(name: "bytes_to_copy", scope: !14232, file: !2206, line: 263, type: !132)
!14241 = !DILocation(line: 0, scope: !14232)
!14242 = !DILocation(line: 265, column: 18, scope: !14232)
!14243 = !DILocation(line: 266, column: 2, scope: !14232)
!14244 = !DILocation(line: 268, column: 2, scope: !14232)
!14245 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2206, file: !2206, line: 383, type: !14246, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14248)
!14246 = !DISubroutineType(types: !14247)
!14247 = !{null, !2210}
!14248 = !{!14249}
!14249 = !DILocalVariable(name: "thread", arg: 1, scope: !14245, file: !2206, line: 383, type: !2210)
!14250 = !DILocation(line: 0, scope: !14245)
!14251 = !DILocation(line: 387, column: 2, scope: !14245)
!14252 = !DILocation(line: 388, column: 1, scope: !14245)
!14253 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2206, file: !2206, line: 528, type: !14254, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14261)
!14254 = !DISubroutineType(types: !14255)
!14255 = !{!277, !2210, !14256, !132, !321, !102, !102, !102, !103, !108, !337}
!14256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14257, size: 32)
!14257 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !314, line: 44, baseType: !14258)
!14258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !316, line: 47, size: 8, elements: !14259)
!14259 = !{!14260}
!14260 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14258, file: !316, line: 48, baseType: !278, size: 8)
!14261 = !{!14262, !14263, !14264, !14265, !14266, !14267, !14268, !14269, !14270, !14271, !14272}
!14262 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14253, file: !2206, line: 528, type: !2210)
!14263 = !DILocalVariable(name: "stack", arg: 2, scope: !14253, file: !2206, line: 529, type: !14256)
!14264 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14253, file: !2206, line: 529, type: !132)
!14265 = !DILocalVariable(name: "entry", arg: 4, scope: !14253, file: !2206, line: 530, type: !321)
!14266 = !DILocalVariable(name: "p1", arg: 5, scope: !14253, file: !2206, line: 531, type: !102)
!14267 = !DILocalVariable(name: "p2", arg: 6, scope: !14253, file: !2206, line: 531, type: !102)
!14268 = !DILocalVariable(name: "p3", arg: 7, scope: !14253, file: !2206, line: 531, type: !102)
!14269 = !DILocalVariable(name: "prio", arg: 8, scope: !14253, file: !2206, line: 532, type: !103)
!14270 = !DILocalVariable(name: "options", arg: 9, scope: !14253, file: !2206, line: 532, type: !108)
!14271 = !DILocalVariable(name: "name", arg: 10, scope: !14253, file: !2206, line: 532, type: !337)
!14272 = !DILocalVariable(name: "stack_ptr", scope: !14253, file: !2206, line: 534, type: !277)
!14273 = !DILocation(line: 0, scope: !14253)
!14274 = !DILocation(line: 550, column: 28, scope: !14253)
!14275 = !DILocation(line: 550, column: 2, scope: !14253)
!14276 = !DILocation(line: 553, column: 34, scope: !14253)
!14277 = !DILocation(line: 553, column: 2, scope: !14253)
!14278 = !DILocation(line: 554, column: 14, scope: !14253)
!14279 = !DILocation(line: 564, column: 2, scope: !14253)
!14280 = !DILocation(line: 567, column: 14, scope: !14253)
!14281 = !DILocation(line: 567, column: 24, scope: !14253)
!14282 = !DILocation(line: 612, column: 7, scope: !14283)
!14283 = distinct !DILexicalBlock(scope: !14253, file: !2206, line: 612, column: 6)
!14284 = !DILocation(line: 612, column: 6, scope: !14253)
!14285 = !DILocation(line: 627, column: 40, scope: !14253)
!14286 = !DILocation(line: 637, column: 2, scope: !14253)
!14287 = !DILocation(line: 613, column: 15, scope: !14288)
!14288 = distinct !DILexicalBlock(scope: !14283, file: !2206, line: 612, column: 17)
!14289 = !DILocation(line: 613, column: 29, scope: !14288)
!14290 = !DILocation(line: 638, column: 1, scope: !14253)
!14291 = distinct !DISubprogram(name: "z_waitq_init", scope: !14292, file: !14292, line: 47, type: !14293, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14295)
!14292 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14293 = !DISubroutineType(types: !14294)
!14294 = !{null, !2241}
!14295 = !{!14296}
!14296 = !DILocalVariable(name: "w", arg: 1, scope: !14291, file: !14292, line: 47, type: !2241)
!14297 = !DILocation(line: 0, scope: !14291)
!14298 = !DILocation(line: 49, column: 21, scope: !14291)
!14299 = !DILocation(line: 49, column: 2, scope: !14291)
!14300 = !DILocation(line: 50, column: 1, scope: !14291)
!14301 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2206, file: !2206, line: 791, type: !14302, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14305)
!14302 = !DISubroutineType(types: !14303)
!14303 = !{null, !14304, !103, !108, !32}
!14304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 32)
!14305 = !{!14306, !14307, !14308, !14309}
!14306 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14301, file: !2206, line: 791, type: !14304)
!14307 = !DILocalVariable(name: "priority", arg: 2, scope: !14301, file: !2206, line: 791, type: !103)
!14308 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14301, file: !2206, line: 792, type: !108)
!14309 = !DILocalVariable(name: "options", arg: 4, scope: !14301, file: !2206, line: 792, type: !32)
!14310 = !DILocation(line: 0, scope: !14301)
!14311 = !DILocation(line: 795, column: 15, scope: !14301)
!14312 = !DILocation(line: 795, column: 25, scope: !14301)
!14313 = !DILocation(line: 796, column: 30, scope: !14301)
!14314 = !DILocation(line: 796, column: 15, scope: !14301)
!14315 = !DILocation(line: 796, column: 28, scope: !14301)
!14316 = !DILocation(line: 797, column: 30, scope: !14301)
!14317 = !DILocation(line: 797, column: 15, scope: !14301)
!14318 = !DILocation(line: 797, column: 28, scope: !14301)
!14319 = !DILocation(line: 799, column: 22, scope: !14301)
!14320 = !DILocation(line: 799, column: 15, scope: !14301)
!14321 = !DILocation(line: 799, column: 20, scope: !14301)
!14322 = !DILocation(line: 801, column: 15, scope: !14301)
!14323 = !DILocation(line: 801, column: 28, scope: !14301)
!14324 = !DILocation(line: 814, column: 2, scope: !14301)
!14325 = !DILocation(line: 815, column: 1, scope: !14301)
!14326 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2206, file: !2206, line: 449, type: !14327, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14329)
!14327 = !DISubroutineType(types: !14328)
!14328 = !{!277, !2210, !14256, !132}
!14329 = !{!14330, !14331, !14332, !14333, !14334, !14335, !14336, !14337}
!14330 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14326, file: !2206, line: 449, type: !2210)
!14331 = !DILocalVariable(name: "stack", arg: 2, scope: !14326, file: !2206, line: 450, type: !14256)
!14332 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14326, file: !2206, line: 450, type: !132)
!14333 = !DILocalVariable(name: "stack_obj_size", scope: !14326, file: !2206, line: 452, type: !132)
!14334 = !DILocalVariable(name: "stack_buf_size", scope: !14326, file: !2206, line: 452, type: !132)
!14335 = !DILocalVariable(name: "stack_ptr", scope: !14326, file: !2206, line: 453, type: !277)
!14336 = !DILocalVariable(name: "stack_buf_start", scope: !14326, file: !2206, line: 453, type: !277)
!14337 = !DILocalVariable(name: "delta", scope: !14326, file: !2206, line: 454, type: !132)
!14338 = !DILocation(line: 0, scope: !14326)
!14339 = !DILocation(line: 465, column: 20, scope: !14340)
!14340 = distinct !DILexicalBlock(scope: !14326, file: !2206, line: 463, column: 2)
!14341 = !DILocation(line: 466, column: 21, scope: !14340)
!14342 = !DILocation(line: 473, column: 28, scope: !14326)
!14343 = !DILocation(line: 514, column: 33, scope: !14326)
!14344 = !DILocation(line: 514, column: 25, scope: !14326)
!14345 = !DILocation(line: 514, column: 31, scope: !14326)
!14346 = !DILocation(line: 515, column: 25, scope: !14326)
!14347 = !DILocation(line: 515, column: 30, scope: !14326)
!14348 = !DILocation(line: 516, column: 25, scope: !14326)
!14349 = !DILocation(line: 516, column: 31, scope: !14326)
!14350 = !DILocation(line: 520, column: 2, scope: !14326)
!14351 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !316, file: !316, line: 331, type: !14352, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14354)
!14352 = !DISubroutineType(types: !14353)
!14353 = !{!277, !14256}
!14354 = !{!14355}
!14355 = !DILocalVariable(name: "sym", arg: 1, scope: !14351, file: !316, line: 331, type: !14256)
!14356 = !DILocation(line: 0, scope: !14351)
!14357 = !DILocation(line: 333, column: 21, scope: !14351)
!14358 = !DILocation(line: 333, column: 2, scope: !14351)
!14359 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14360, file: !14360, line: 40, type: !14361, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14363)
!14360 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14361 = !DISubroutineType(types: !14362)
!14362 = !{null, !14304}
!14363 = !{!14364}
!14364 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14359, file: !14360, line: 40, type: !14304)
!14365 = !DILocation(line: 0, scope: !14359)
!14366 = !DILocation(line: 42, column: 31, scope: !14359)
!14367 = !DILocation(line: 42, column: 2, scope: !14359)
!14368 = !DILocation(line: 43, column: 1, scope: !14359)
!14369 = distinct !DISubprogram(name: "z_init_timeout", scope: !14360, file: !14360, line: 25, type: !2267, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14370)
!14370 = !{!14371}
!14371 = !DILocalVariable(name: "to", arg: 1, scope: !14369, file: !14360, line: 25, type: !2269)
!14372 = !DILocation(line: 0, scope: !14369)
!14373 = !DILocation(line: 27, column: 22, scope: !14369)
!14374 = !DILocation(line: 27, column: 2, scope: !14369)
!14375 = !DILocation(line: 28, column: 1, scope: !14369)
!14376 = distinct !DISubprogram(name: "sys_dnode_init", scope: !146, file: !146, line: 211, type: !14377, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14379)
!14377 = !DISubroutineType(types: !14378)
!14378 = !{null, !2313}
!14379 = !{!14380}
!14380 = !DILocalVariable(name: "node", arg: 1, scope: !14376, file: !146, line: 211, type: !2313)
!14381 = !DILocation(line: 0, scope: !14376)
!14382 = !DILocation(line: 213, column: 8, scope: !14376)
!14383 = !DILocation(line: 213, column: 13, scope: !14376)
!14384 = !DILocation(line: 214, column: 8, scope: !14376)
!14385 = !DILocation(line: 214, column: 13, scope: !14376)
!14386 = !DILocation(line: 215, column: 1, scope: !14376)
!14387 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !14388, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14391)
!14388 = !DISubroutineType(types: !14389)
!14389 = !{null, !14390}
!14390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 32)
!14391 = !{!14392}
!14392 = !DILocalVariable(name: "list", arg: 1, scope: !14387, file: !146, line: 197, type: !14390)
!14393 = !DILocation(line: 0, scope: !14387)
!14394 = !DILocation(line: 199, column: 8, scope: !14387)
!14395 = !DILocation(line: 199, column: 13, scope: !14387)
!14396 = !DILocation(line: 200, column: 8, scope: !14387)
!14397 = !DILocation(line: 200, column: 13, scope: !14387)
!14398 = !DILocation(line: 201, column: 1, scope: !14387)
!14399 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2206, file: !2206, line: 641, type: !14400, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14406)
!14400 = !DISubroutineType(types: !14401)
!14401 = !{!2209, !2210, !14256, !132, !321, !102, !102, !102, !103, !108, !14402}
!14402 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !14403)
!14403 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !14404)
!14404 = !{!14405}
!14405 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14403, file: !105, line: 66, baseType: !104, size: 64)
!14406 = !{!14407, !14408, !14409, !14410, !14411, !14412, !14413, !14414, !14415, !14416}
!14407 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14399, file: !2206, line: 641, type: !2210)
!14408 = !DILocalVariable(name: "stack", arg: 2, scope: !14399, file: !2206, line: 642, type: !14256)
!14409 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14399, file: !2206, line: 643, type: !132)
!14410 = !DILocalVariable(name: "entry", arg: 4, scope: !14399, file: !2206, line: 643, type: !321)
!14411 = !DILocalVariable(name: "p1", arg: 5, scope: !14399, file: !2206, line: 644, type: !102)
!14412 = !DILocalVariable(name: "p2", arg: 6, scope: !14399, file: !2206, line: 644, type: !102)
!14413 = !DILocalVariable(name: "p3", arg: 7, scope: !14399, file: !2206, line: 644, type: !102)
!14414 = !DILocalVariable(name: "prio", arg: 8, scope: !14399, file: !2206, line: 645, type: !103)
!14415 = !DILocalVariable(name: "options", arg: 9, scope: !14399, file: !2206, line: 645, type: !108)
!14416 = !DILocalVariable(name: "delay", arg: 10, scope: !14399, file: !2206, line: 645, type: !14402)
!14417 = !DILocation(line: 0, scope: !14399)
!14418 = !DILocation(line: 649, column: 2, scope: !14399)
!14419 = !DILocation(line: 652, column: 7, scope: !14420)
!14420 = distinct !DILexicalBlock(scope: !14399, file: !2206, line: 652, column: 6)
!14421 = !DILocation(line: 652, column: 6, scope: !14399)
!14422 = !DILocation(line: 653, column: 3, scope: !14423)
!14423 = distinct !DILexicalBlock(scope: !14420, file: !2206, line: 652, column: 39)
!14424 = !DILocation(line: 654, column: 2, scope: !14423)
!14425 = !DILocation(line: 656, column: 2, scope: !14399)
!14426 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2206, file: !2206, line: 401, type: !14427, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14429)
!14427 = !DISubroutineType(types: !14428)
!14428 = !{null, !2210, !14402}
!14429 = !{!14430, !14431}
!14430 = !DILocalVariable(name: "thread", arg: 1, scope: !14426, file: !2206, line: 401, type: !2210)
!14431 = !DILocalVariable(name: "delay", arg: 2, scope: !14426, file: !2206, line: 401, type: !14402)
!14432 = !DILocation(line: 0, scope: !14426)
!14433 = !DILocation(line: 404, column: 6, scope: !14434)
!14434 = distinct !DILexicalBlock(scope: !14426, file: !2206, line: 404, column: 6)
!14435 = !DILocation(line: 404, column: 6, scope: !14426)
!14436 = !DILocation(line: 405, column: 3, scope: !14437)
!14437 = distinct !DILexicalBlock(scope: !14434, file: !2206, line: 404, column: 38)
!14438 = !DILocation(line: 406, column: 2, scope: !14437)
!14439 = !DILocation(line: 407, column: 3, scope: !14440)
!14440 = distinct !DILexicalBlock(scope: !14434, file: !2206, line: 406, column: 9)
!14441 = !DILocation(line: 413, column: 1, scope: !14426)
!14442 = distinct !DISubprogram(name: "k_thread_start", scope: !3640, file: !3640, line: 205, type: !14443, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14445)
!14443 = !DISubroutineType(types: !14444)
!14444 = !{null, !2209}
!14445 = !{!14446}
!14446 = !DILocalVariable(name: "thread", arg: 1, scope: !14442, file: !3640, line: 205, type: !2209)
!14447 = !DILocation(line: 0, scope: !14442)
!14448 = !DILocation(line: 214, column: 2, scope: !14449)
!14449 = distinct !DILexicalBlock(scope: !14442, file: !3640, line: 214, column: 2)
!14450 = !{i64 2154177163}
!14451 = !DILocation(line: 215, column: 2, scope: !14442)
!14452 = !DILocation(line: 216, column: 1, scope: !14442)
!14453 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14360, file: !14360, line: 47, type: !14427, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14454)
!14454 = !{!14455, !14456}
!14455 = !DILocalVariable(name: "thread", arg: 1, scope: !14453, file: !14360, line: 47, type: !2210)
!14456 = !DILocalVariable(name: "ticks", arg: 2, scope: !14453, file: !14360, line: 47, type: !14402)
!14457 = !DILocation(line: 0, scope: !14453)
!14458 = !DILocation(line: 49, column: 30, scope: !14453)
!14459 = !DILocation(line: 49, column: 2, scope: !14453)
!14460 = !DILocation(line: 50, column: 1, scope: !14453)
!14461 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2206, file: !2206, line: 748, type: !334, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14462)
!14462 = !{!14463, !14480}
!14463 = !DILocalVariable(name: "thread_data", scope: !14464, file: !2206, line: 750, type: !14465)
!14464 = distinct !DILexicalBlock(scope: !14461, file: !2206, line: 750, column: 2)
!14465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14466, size: 32)
!14466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !137, line: 620, size: 384, elements: !14467)
!14467 = !{!14468, !14469, !14470, !14471, !14472, !14473, !14474, !14475, !14476, !14477, !14478, !14479}
!14468 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14466, file: !137, line: 621, baseType: !2210, size: 32)
!14469 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14466, file: !137, line: 622, baseType: !14256, size: 32, offset: 32)
!14470 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14466, file: !137, line: 623, baseType: !32, size: 32, offset: 64)
!14471 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14466, file: !137, line: 624, baseType: !321, size: 32, offset: 96)
!14472 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14466, file: !137, line: 625, baseType: !102, size: 32, offset: 128)
!14473 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14466, file: !137, line: 626, baseType: !102, size: 32, offset: 160)
!14474 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14466, file: !137, line: 627, baseType: !102, size: 32, offset: 192)
!14475 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14466, file: !137, line: 628, baseType: !103, size: 32, offset: 224)
!14476 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14466, file: !137, line: 629, baseType: !108, size: 32, offset: 256)
!14477 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14466, file: !137, line: 630, baseType: !331, size: 32, offset: 288)
!14478 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14466, file: !137, line: 631, baseType: !333, size: 32, offset: 320)
!14479 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14466, file: !137, line: 632, baseType: !337, size: 32, offset: 352)
!14480 = !DILocalVariable(name: "thread_data", scope: !14481, file: !2206, line: 781, type: !14465)
!14481 = distinct !DILexicalBlock(scope: !14461, file: !2206, line: 781, column: 2)
!14482 = !DILocation(line: 0, scope: !14464)
!14483 = !DILocation(line: 750, column: 2, scope: !14464)
!14484 = !DILocation(line: 780, column: 2, scope: !14461)
!14485 = !DILocation(line: 0, scope: !14481)
!14486 = !DILocation(line: 781, column: 2, scope: !14481)
!14487 = !DILocation(line: 752, column: 17, scope: !14488)
!14488 = distinct !DILexicalBlock(scope: !14489, file: !2206, line: 750, column: 38)
!14489 = distinct !DILexicalBlock(scope: !14464, file: !2206, line: 750, column: 2)
!14490 = !DILocation(line: 753, column: 17, scope: !14488)
!14491 = !DILocation(line: 754, column: 17, scope: !14488)
!14492 = !DILocation(line: 755, column: 17, scope: !14488)
!14493 = !DILocation(line: 756, column: 17, scope: !14488)
!14494 = !DILocation(line: 757, column: 17, scope: !14488)
!14495 = !DILocation(line: 758, column: 17, scope: !14488)
!14496 = !DILocation(line: 759, column: 17, scope: !14488)
!14497 = !DILocation(line: 760, column: 17, scope: !14488)
!14498 = !DILocation(line: 751, column: 3, scope: !14488)
!14499 = !DILocation(line: 763, column: 16, scope: !14488)
!14500 = !DILocation(line: 763, column: 29, scope: !14488)
!14501 = !DILocation(line: 763, column: 39, scope: !14488)
!14502 = !DILocation(line: 750, column: 2, scope: !14489)
!14503 = !DILocation(line: 750, column: 2, scope: !14504)
!14504 = distinct !DILexicalBlock(scope: !14489, file: !2206, line: 750, column: 2)
!14505 = distinct !{!14505, !14483, !14506}
!14506 = !DILocation(line: 764, column: 2, scope: !14464)
!14507 = !DILocation(line: 787, column: 2, scope: !14461)
!14508 = !DILocation(line: 788, column: 1, scope: !14461)
!14509 = !DILocation(line: 782, column: 20, scope: !14510)
!14510 = distinct !DILexicalBlock(scope: !14511, file: !2206, line: 782, column: 7)
!14511 = distinct !DILexicalBlock(scope: !14512, file: !2206, line: 781, column: 38)
!14512 = distinct !DILexicalBlock(scope: !14481, file: !2206, line: 781, column: 2)
!14513 = !DILocation(line: 782, column: 31, scope: !14510)
!14514 = !DILocation(line: 782, column: 7, scope: !14511)
!14515 = !DILocation(line: 783, column: 37, scope: !14516)
!14516 = distinct !DILexicalBlock(scope: !14510, file: !2206, line: 782, column: 51)
!14517 = !DILocation(line: 784, column: 10, scope: !14516)
!14518 = !DILocation(line: 783, column: 4, scope: !14516)
!14519 = !DILocation(line: 785, column: 3, scope: !14516)
!14520 = !DILocation(line: 781, column: 2, scope: !14512)
!14521 = !DILocation(line: 781, column: 2, scope: !14522)
!14522 = distinct !DILexicalBlock(scope: !14512, file: !2206, line: 781, column: 2)
!14523 = distinct !{!14523, !14486, !14524}
!14524 = !DILocation(line: 786, column: 2, scope: !14481)
!14525 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3626, file: !3626, line: 403, type: !3627, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14526)
!14526 = !{!14527}
!14527 = !DILocalVariable(name: "t", arg: 1, scope: !14525, file: !3626, line: 403, type: !109)
!14528 = !DILocation(line: 0, scope: !14525)
!14529 = !DILocalVariable(name: "t", arg: 1, scope: !14530, file: !3626, line: 102, type: !109)
!14530 = distinct !DISubprogram(name: "z_tmcvt", scope: !3626, file: !3626, line: 102, type: !3652, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14531)
!14531 = !{!14529, !14532, !14533, !14534, !14535, !14536, !14537, !14538, !14539, !14540, !14541}
!14532 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14530, file: !3626, line: 102, type: !108)
!14533 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14530, file: !3626, line: 103, type: !108)
!14534 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14530, file: !3626, line: 103, type: !131)
!14535 = !DILocalVariable(name: "result32", arg: 5, scope: !14530, file: !3626, line: 104, type: !131)
!14536 = !DILocalVariable(name: "round_up", arg: 6, scope: !14530, file: !3626, line: 104, type: !131)
!14537 = !DILocalVariable(name: "round_off", arg: 7, scope: !14530, file: !3626, line: 105, type: !131)
!14538 = !DILocalVariable(name: "mul_ratio", scope: !14530, file: !3626, line: 107, type: !131)
!14539 = !DILocalVariable(name: "div_ratio", scope: !14530, file: !3626, line: 109, type: !131)
!14540 = !DILocalVariable(name: "off", scope: !14530, file: !3626, line: 116, type: !109)
!14541 = !DILocalVariable(name: "rdivisor", scope: !14542, file: !3626, line: 119, type: !108)
!14542 = distinct !DILexicalBlock(scope: !14543, file: !3626, line: 118, column: 18)
!14543 = distinct !DILexicalBlock(scope: !14530, file: !3626, line: 118, column: 6)
!14544 = !DILocation(line: 0, scope: !14530, inlinedAt: !14545)
!14545 = distinct !DILocation(line: 406, column: 9, scope: !14525)
!14546 = !DILocation(line: 145, column: 13, scope: !14547, inlinedAt: !14545)
!14547 = distinct !DILexicalBlock(scope: !14548, file: !3626, line: 144, column: 10)
!14548 = distinct !DILexicalBlock(scope: !14549, file: !3626, line: 142, column: 7)
!14549 = distinct !DILexicalBlock(scope: !14550, file: !3626, line: 141, column: 24)
!14550 = distinct !DILexicalBlock(scope: !14551, file: !3626, line: 141, column: 13)
!14551 = distinct !DILexicalBlock(scope: !14530, file: !3626, line: 134, column: 6)
!14552 = !DILocation(line: 406, column: 2, scope: !14525)
!14553 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2206, file: !2206, line: 817, type: !4706, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14554)
!14554 = !{!14555, !14556, !14557, !14558}
!14555 = !DILocalVariable(name: "entry", arg: 1, scope: !14553, file: !2206, line: 817, type: !321)
!14556 = !DILocalVariable(name: "p1", arg: 2, scope: !14553, file: !2206, line: 818, type: !102)
!14557 = !DILocalVariable(name: "p2", arg: 3, scope: !14553, file: !2206, line: 818, type: !102)
!14558 = !DILocalVariable(name: "p3", arg: 4, scope: !14553, file: !2206, line: 818, type: !102)
!14559 = !DILocation(line: 0, scope: !14553)
!14560 = !DILocation(line: 822, column: 2, scope: !14553)
!14561 = !DILocation(line: 822, column: 17, scope: !14553)
!14562 = !DILocation(line: 822, column: 30, scope: !14553)
!14563 = !DILocation(line: 823, column: 2, scope: !14553)
!14564 = !DILocation(line: 845, column: 2, scope: !14553)
!14565 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2206, file: !2206, line: 888, type: !14566, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14568)
!14566 = !DISubroutineType(types: !14567)
!14567 = !{!103, !2210}
!14568 = !{!14569}
!14569 = !DILocalVariable(name: "thread", arg: 1, scope: !14565, file: !2206, line: 888, type: !2210)
!14570 = !DILocation(line: 0, scope: !14565)
!14571 = !DILocation(line: 893, column: 2, scope: !14565)
!14572 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2206, file: !2206, line: 897, type: !14573, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14575)
!14573 = !DISubroutineType(types: !14574)
!14574 = !{!103, !2210, !32}
!14575 = !{!14576, !14577}
!14576 = !DILocalVariable(name: "thread", arg: 1, scope: !14572, file: !2206, line: 897, type: !2210)
!14577 = !DILocalVariable(name: "options", arg: 2, scope: !14572, file: !2206, line: 897, type: !32)
!14578 = !DILocation(line: 0, scope: !14572)
!14579 = !DILocation(line: 902, column: 2, scope: !14572)
!14580 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2206, file: !2206, line: 1072, type: !14581, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14586)
!14581 = !DISubroutineType(types: !14582)
!14582 = !{!103, !2209, !14583}
!14583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14584, size: 32)
!14584 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !163, line: 234, baseType: !14585)
!14585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !163, line: 192, elements: !251)
!14586 = !{!14587, !14588}
!14587 = !DILocalVariable(name: "thread", arg: 1, scope: !14580, file: !2206, line: 1072, type: !2209)
!14588 = !DILocalVariable(name: "stats", arg: 2, scope: !14580, file: !2206, line: 1073, type: !14583)
!14589 = !DILocation(line: 0, scope: !14580)
!14590 = !DILocation(line: 1075, column: 14, scope: !14591)
!14591 = distinct !DILexicalBlock(scope: !14580, file: !2206, line: 1075, column: 6)
!14592 = !DILocation(line: 1075, column: 23, scope: !14591)
!14593 = !DILocation(line: 1086, column: 1, scope: !14580)
!14594 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2206, file: !2206, line: 1088, type: !14595, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2310, retainedNodes: !14597)
!14595 = !DISubroutineType(types: !14596)
!14596 = !{!103, !14583}
!14597 = !{!14598}
!14598 = !DILocalVariable(name: "stats", arg: 1, scope: !14594, file: !2206, line: 1088, type: !14583)
!14599 = !DILocation(line: 0, scope: !14594)
!14600 = !DILocation(line: 1094, column: 12, scope: !14601)
!14601 = distinct !DILexicalBlock(scope: !14594, file: !2206, line: 1094, column: 6)
!14602 = !DILocation(line: 1120, column: 1, scope: !14594)
!14603 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14604, file: !14604, line: 20, type: !334, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !251)
!14604 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14605 = !DILocation(line: 30, column: 2, scope: !14603)
!14606 = !DILocation(line: 31, column: 1, scope: !14603)
!14607 = distinct !DISubprogram(name: "idle", scope: !14604, file: !14604, line: 33, type: !323, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !14608)
!14608 = !{!14609, !14610, !14611}
!14609 = !DILocalVariable(name: "unused1", arg: 1, scope: !14607, file: !14604, line: 33, type: !102)
!14610 = !DILocalVariable(name: "unused2", arg: 2, scope: !14607, file: !14604, line: 33, type: !102)
!14611 = !DILocalVariable(name: "unused3", arg: 3, scope: !14607, file: !14604, line: 33, type: !102)
!14612 = !DILocation(line: 0, scope: !14607)
!14613 = !DILocation(line: 41, column: 2, scope: !14607)
!14614 = !DILocation(line: 55, column: 2, scope: !14615, inlinedAt: !14619)
!14615 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7016, file: !7016, line: 42, type: !7017, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !14616)
!14616 = !{!14617, !14618}
!14617 = !DILocalVariable(name: "key", scope: !14615, file: !7016, line: 44, type: !32)
!14618 = !DILocalVariable(name: "tmp", scope: !14615, file: !7016, line: 53, type: !32)
!14619 = distinct !DILocation(line: 62, column: 10, scope: !14620)
!14620 = distinct !DILexicalBlock(scope: !14607, file: !14604, line: 41, column: 15)
!14621 = !{i64 2038550}
!14622 = !DILocation(line: 0, scope: !14615, inlinedAt: !14619)
!14623 = !DILocation(line: 86, column: 3, scope: !14620)
!14624 = distinct !{!14624, !14613, !14625}
!14625 = !DILocation(line: 105, column: 2, scope: !14607)
!14626 = distinct !DISubprogram(name: "k_cpu_idle", scope: !137, file: !137, line: 5627, type: !334, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !251)
!14627 = !DILocation(line: 5629, column: 2, scope: !14626)
!14628 = !DILocation(line: 5630, column: 1, scope: !14626)
!14629 = !DISubprogram(name: "arch_cpu_idle", scope: !314, file: !314, line: 167, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!14630 = distinct !DISubprogram(name: "k_msgq_init", scope: !14631, file: !14631, line: 35, type: !14632, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3261, retainedNodes: !14647)
!14631 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14632 = !DISubroutineType(types: !14633)
!14633 = !{null, !14634, !277, !132, !108}
!14634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14635, size: 32)
!14635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !137, line: 4204, size: 320, elements: !14636)
!14636 = !{!14637, !14638, !14639, !14640, !14641, !14642, !14643, !14644, !14645, !14646}
!14637 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14635, file: !137, line: 4206, baseType: !3297, size: 64)
!14638 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14635, file: !137, line: 4208, baseType: !3359, offset: 64)
!14639 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !14635, file: !137, line: 4210, baseType: !132, size: 32, offset: 64)
!14640 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !14635, file: !137, line: 4212, baseType: !108, size: 32, offset: 96)
!14641 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !14635, file: !137, line: 4214, baseType: !277, size: 32, offset: 128)
!14642 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !14635, file: !137, line: 4216, baseType: !277, size: 32, offset: 160)
!14643 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !14635, file: !137, line: 4218, baseType: !277, size: 32, offset: 192)
!14644 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !14635, file: !137, line: 4220, baseType: !277, size: 32, offset: 224)
!14645 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !14635, file: !137, line: 4222, baseType: !108, size: 32, offset: 256)
!14646 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !14635, file: !137, line: 4227, baseType: !185, size: 8, offset: 288)
!14647 = !{!14648, !14649, !14650, !14651}
!14648 = !DILocalVariable(name: "msgq", arg: 1, scope: !14630, file: !14631, line: 35, type: !14634)
!14649 = !DILocalVariable(name: "buffer", arg: 2, scope: !14630, file: !14631, line: 35, type: !277)
!14650 = !DILocalVariable(name: "msg_size", arg: 3, scope: !14630, file: !14631, line: 35, type: !132)
!14651 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !14630, file: !14631, line: 36, type: !108)
!14652 = !DILocation(line: 0, scope: !14630)
!14653 = !DILocation(line: 38, column: 8, scope: !14630)
!14654 = !DILocation(line: 38, column: 17, scope: !14630)
!14655 = !DILocation(line: 39, column: 8, scope: !14630)
!14656 = !DILocation(line: 39, column: 17, scope: !14630)
!14657 = !DILocation(line: 40, column: 8, scope: !14630)
!14658 = !DILocation(line: 40, column: 21, scope: !14630)
!14659 = !DILocation(line: 41, column: 40, scope: !14630)
!14660 = !DILocation(line: 41, column: 28, scope: !14630)
!14661 = !DILocation(line: 41, column: 8, scope: !14630)
!14662 = !DILocation(line: 41, column: 19, scope: !14630)
!14663 = !DILocation(line: 42, column: 8, scope: !14630)
!14664 = !DILocation(line: 42, column: 17, scope: !14630)
!14665 = !DILocation(line: 43, column: 8, scope: !14630)
!14666 = !DILocation(line: 43, column: 18, scope: !14630)
!14667 = !DILocation(line: 44, column: 8, scope: !14630)
!14668 = !DILocation(line: 44, column: 18, scope: !14630)
!14669 = !DILocation(line: 45, column: 8, scope: !14630)
!14670 = !DILocation(line: 45, column: 14, scope: !14630)
!14671 = !DILocation(line: 46, column: 22, scope: !14630)
!14672 = !DILocation(line: 46, column: 2, scope: !14630)
!14673 = !DILocation(line: 55, column: 1, scope: !14630)
!14674 = distinct !DISubprogram(name: "z_waitq_init", scope: !14292, file: !14292, line: 47, type: !14675, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3261, retainedNodes: !14677)
!14675 = !DISubroutineType(types: !14676)
!14676 = !{null, !3296}
!14677 = !{!14678}
!14678 = !DILocalVariable(name: "w", arg: 1, scope: !14674, file: !14292, line: 47, type: !3296)
!14679 = !DILocation(line: 0, scope: !14674)
!14680 = !DILocation(line: 49, column: 21, scope: !14674)
!14681 = !DILocation(line: 49, column: 2, scope: !14674)
!14682 = !DILocation(line: 50, column: 1, scope: !14674)
!14683 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !14684, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3261, retainedNodes: !14687)
!14684 = !DISubroutineType(types: !14685)
!14685 = !{null, !14686}
!14686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3301, size: 32)
!14687 = !{!14688}
!14688 = !DILocalVariable(name: "list", arg: 1, scope: !14683, file: !146, line: 197, type: !14686)
!14689 = !DILocation(line: 0, scope: !14683)
!14690 = !DILocation(line: 199, column: 8, scope: !14683)
!14691 = !DILocation(line: 199, column: 13, scope: !14683)
!14692 = !DILocation(line: 200, column: 8, scope: !14683)
!14693 = !DILocation(line: 200, column: 13, scope: !14683)
!14694 = !DILocation(line: 201, column: 1, scope: !14683)
!14695 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !14631, file: !14631, line: 57, type: !14696, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3261, retainedNodes: !14698)
!14696 = !DISubroutineType(types: !14697)
!14697 = !{!103, !14634, !132, !108}
!14698 = !{!14699, !14700, !14701, !14702, !14703, !14704}
!14699 = !DILocalVariable(name: "msgq", arg: 1, scope: !14695, file: !14631, line: 57, type: !14634)
!14700 = !DILocalVariable(name: "msg_size", arg: 2, scope: !14695, file: !14631, line: 57, type: !132)
!14701 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !14695, file: !14631, line: 58, type: !108)
!14702 = !DILocalVariable(name: "buffer", scope: !14695, file: !14631, line: 60, type: !102)
!14703 = !DILocalVariable(name: "ret", scope: !14695, file: !14631, line: 61, type: !103)
!14704 = !DILocalVariable(name: "total_size", scope: !14695, file: !14631, line: 62, type: !132)
!14705 = !DILocation(line: 0, scope: !14695)
!14706 = !DILocation(line: 62, column: 2, scope: !14695)
!14707 = !DILocation(line: 66, column: 6, scope: !14708)
!14708 = distinct !DILexicalBlock(scope: !14695, file: !14631, line: 66, column: 6)
!14709 = !DILocation(line: 66, column: 6, scope: !14695)
!14710 = !DILocation(line: 69, column: 28, scope: !14711)
!14711 = distinct !DILexicalBlock(scope: !14708, file: !14631, line: 68, column: 9)
!14712 = !DILocation(line: 69, column: 12, scope: !14711)
!14713 = !DILocation(line: 70, column: 14, scope: !14714)
!14714 = distinct !DILexicalBlock(scope: !14711, file: !14631, line: 70, column: 7)
!14715 = !DILocation(line: 70, column: 7, scope: !14711)
!14716 = !DILocation(line: 71, column: 4, scope: !14717)
!14717 = distinct !DILexicalBlock(scope: !14714, file: !14631, line: 70, column: 23)
!14718 = !DILocation(line: 72, column: 10, scope: !14717)
!14719 = !DILocation(line: 72, column: 16, scope: !14717)
!14720 = !DILocation(line: 74, column: 3, scope: !14717)
!14721 = !DILocation(line: 0, scope: !14708)
!14722 = !DILocation(line: 82, column: 1, scope: !14695)
!14723 = !DILocation(line: 81, column: 2, scope: !14695)
!14724 = distinct !DISubprogram(name: "size_mul_overflow", scope: !14725, file: !14725, line: 105, type: !14726, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3261, retainedNodes: !14728)
!14725 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14726 = !DISubroutineType(types: !14727)
!14727 = !{!131, !132, !132, !2731}
!14728 = !{!14729, !14730, !14731}
!14729 = !DILocalVariable(name: "a", arg: 1, scope: !14724, file: !14725, line: 105, type: !132)
!14730 = !DILocalVariable(name: "b", arg: 2, scope: !14724, file: !14725, line: 105, type: !132)
!14731 = !DILocalVariable(name: "result", arg: 3, scope: !14724, file: !14725, line: 105, type: !2731)
!14732 = !DILocation(line: 0, scope: !14724)
!14733 = !DILocation(line: 107, column: 9, scope: !14724)
!14734 = !DILocation(line: 107, column: 2, scope: !14724)
!14735 = distinct !DISubprogram(name: "z_thread_malloc", scope: !14736, file: !14736, line: 102, type: !14737, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3261, retainedNodes: !14738)
!14736 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14737 = !DISubroutineType(types: !3240)
!14738 = !{!14739}
!14739 = !DILocalVariable(name: "size", arg: 1, scope: !14735, file: !14736, line: 102, type: !132)
!14740 = !DILocation(line: 0, scope: !14735)
!14741 = !DILocation(line: 104, column: 9, scope: !14735)
!14742 = !DILocation(line: 104, column: 2, scope: !14735)
!14743 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !14631, file: !14631, line: 95, type: !14744, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3261, retainedNodes: !14746)
!14744 = !DISubroutineType(types: !14745)
!14745 = !{!103, !14634}
!14746 = !{!14747}
!14747 = !DILocalVariable(name: "msgq", arg: 1, scope: !14743, file: !14631, line: 95, type: !14634)
!14748 = !DILocation(line: 0, scope: !14743)
!14749 = !DILocation(line: 99, column: 2, scope: !14750)
!14750 = distinct !DILexicalBlock(scope: !14743, file: !14631, line: 99, column: 2)
!14751 = !DILocation(line: 99, column: 2, scope: !14743)
!14752 = !DILocation(line: 105, column: 13, scope: !14753)
!14753 = distinct !DILexicalBlock(scope: !14743, file: !14631, line: 105, column: 6)
!14754 = !DILocation(line: 105, column: 19, scope: !14753)
!14755 = !DILocation(line: 105, column: 40, scope: !14753)
!14756 = !DILocation(line: 105, column: 6, scope: !14743)
!14757 = !DILocation(line: 106, column: 16, scope: !14758)
!14758 = distinct !DILexicalBlock(scope: !14753, file: !14631, line: 105, column: 47)
!14759 = !DILocation(line: 106, column: 3, scope: !14758)
!14760 = !DILocation(line: 107, column: 15, scope: !14758)
!14761 = !DILocation(line: 108, column: 2, scope: !14758)
!14762 = !DILocation(line: 113, column: 1, scope: !14743)
!14763 = distinct !DISubprogram(name: "z_waitq_head", scope: !14292, file: !14292, line: 52, type: !14764, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3261, retainedNodes: !14766)
!14764 = !DISubroutineType(types: !14765)
!14765 = !{!3279, !3296}
!14766 = !{!14767}
!14767 = !DILocalVariable(name: "w", arg: 1, scope: !14763, file: !14292, line: 52, type: !3296)
!14768 = !DILocation(line: 0, scope: !14763)
!14769 = !DILocation(line: 54, column: 52, scope: !14763)
!14770 = !DILocation(line: 54, column: 28, scope: !14763)
!14771 = !DILocation(line: 54, column: 9, scope: !14763)
!14772 = !DILocation(line: 54, column: 2, scope: !14763)
!14773 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !14774, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3261, retainedNodes: !14776)
!14774 = !DISubroutineType(types: !14775)
!14775 = !{!3264, !14686}
!14776 = !{!14777}
!14777 = !DILocalVariable(name: "list", arg: 1, scope: !14773, file: !146, line: 294, type: !14686)
!14778 = !DILocation(line: 0, scope: !14773)
!14779 = !DILocation(line: 296, column: 9, scope: !14773)
!14780 = !DILocation(line: 296, column: 49, scope: !14773)
!14781 = !DILocation(line: 296, column: 2, scope: !14773)
!14782 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !14783, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3261, retainedNodes: !14785)
!14783 = !DISubroutineType(types: !14784)
!14784 = !{!131, !14686}
!14785 = !{!14786}
!14786 = !DILocalVariable(name: "list", arg: 1, scope: !14782, file: !146, line: 266, type: !14686)
!14787 = !DILocation(line: 0, scope: !14782)
!14788 = !DILocation(line: 268, column: 15, scope: !14782)
!14789 = !DILocation(line: 268, column: 20, scope: !14782)
!14790 = !DILocation(line: 268, column: 2, scope: !14782)
!14791 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !14631, file: !14631, line: 116, type: !14792, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3261, retainedNodes: !14798)
!14792 = !DISubroutineType(types: !14793)
!14793 = !{!103, !14634, !13, !14794}
!14794 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !14795)
!14795 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !14796)
!14796 = !{!14797}
!14797 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14795, file: !105, line: 66, baseType: !104, size: 64)
!14798 = !{!14799, !14800, !14801, !14802, !14803, !14808}
!14799 = !DILocalVariable(name: "msgq", arg: 1, scope: !14791, file: !14631, line: 116, type: !14634)
!14800 = !DILocalVariable(name: "data", arg: 2, scope: !14791, file: !14631, line: 116, type: !13)
!14801 = !DILocalVariable(name: "timeout", arg: 3, scope: !14791, file: !14631, line: 116, type: !14794)
!14802 = !DILocalVariable(name: "pending_thread", scope: !14791, file: !14631, line: 120, type: !3279)
!14803 = !DILocalVariable(name: "key", scope: !14791, file: !14631, line: 121, type: !14804)
!14804 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !14805)
!14805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !14806)
!14806 = !{!14807}
!14807 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14805, file: !250, line: 33, baseType: !103, size: 32)
!14808 = !DILocalVariable(name: "result", scope: !14791, file: !14631, line: 122, type: !103)
!14809 = !DILocation(line: 0, scope: !14791)
!14810 = !DILocation(line: 124, column: 27, scope: !14791)
!14811 = !DILocalVariable(name: "l", arg: 1, scope: !14812, file: !250, line: 136, type: !14815)
!14812 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !14813, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3261, retainedNodes: !14816)
!14813 = !DISubroutineType(types: !14814)
!14814 = !{!14804, !14815}
!14815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3359, size: 32)
!14816 = !{!14811, !14817}
!14817 = !DILocalVariable(name: "k", scope: !14812, file: !250, line: 139, type: !14804)
!14818 = !DILocation(line: 0, scope: !14812, inlinedAt: !14819)
!14819 = distinct !DILocation(line: 124, column: 8, scope: !14791)
!14820 = !DILocation(line: 55, column: 2, scope: !14821, inlinedAt: !14825)
!14821 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7016, file: !7016, line: 42, type: !7017, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3261, retainedNodes: !14822)
!14822 = !{!14823, !14824}
!14823 = !DILocalVariable(name: "key", scope: !14821, file: !7016, line: 44, type: !32)
!14824 = !DILocalVariable(name: "tmp", scope: !14821, file: !7016, line: 53, type: !32)
!14825 = distinct !DILocation(line: 145, column: 10, scope: !14812, inlinedAt: !14819)
!14826 = !{i64 2044687}
!14827 = !DILocation(line: 0, scope: !14821, inlinedAt: !14825)
!14828 = !DILocation(line: 128, column: 12, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14791, file: !14631, line: 128, column: 6)
!14830 = !DILocation(line: 128, column: 30, scope: !14829)
!14831 = !DILocation(line: 128, column: 22, scope: !14829)
!14832 = !DILocation(line: 128, column: 6, scope: !14791)
!14833 = !DILocation(line: 130, column: 49, scope: !14834)
!14834 = distinct !DILexicalBlock(scope: !14829, file: !14631, line: 128, column: 40)
!14835 = !DILocation(line: 130, column: 20, scope: !14834)
!14836 = !DILocation(line: 131, column: 22, scope: !14837)
!14837 = distinct !DILexicalBlock(scope: !14834, file: !14631, line: 131, column: 7)
!14838 = !DILocation(line: 131, column: 7, scope: !14834)
!14839 = !DILocation(line: 135, column: 38, scope: !14840)
!14840 = distinct !DILexicalBlock(scope: !14837, file: !14631, line: 131, column: 31)
!14841 = !DILocation(line: 136, column: 17, scope: !14840)
!14842 = !DILocation(line: 135, column: 10, scope: !14840)
!14843 = !DILocalVariable(name: "thread", arg: 1, scope: !14844, file: !13987, line: 65, type: !3279)
!14844 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13987, file: !13987, line: 65, type: !14845, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3261, retainedNodes: !14847)
!14845 = !DISubroutineType(types: !14846)
!14846 = !{null, !3279, !32}
!14847 = !{!14843, !14848}
!14848 = !DILocalVariable(name: "value", arg: 2, scope: !14844, file: !13987, line: 65, type: !32)
!14849 = !DILocation(line: 0, scope: !14844, inlinedAt: !14850)
!14850 = distinct !DILocation(line: 138, column: 4, scope: !14840)
!14851 = !DILocation(line: 67, column: 15, scope: !14844, inlinedAt: !14850)
!14852 = !DILocation(line: 67, column: 33, scope: !14844, inlinedAt: !14850)
!14853 = !DILocation(line: 139, column: 4, scope: !14840)
!14854 = !DILocation(line: 140, column: 4, scope: !14840)
!14855 = !DILocation(line: 141, column: 4, scope: !14840)
!14856 = !DILocation(line: 144, column: 23, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14837, file: !14631, line: 142, column: 10)
!14858 = !DILocation(line: 144, column: 46, scope: !14857)
!14859 = !DILocation(line: 144, column: 10, scope: !14857)
!14860 = !DILocation(line: 145, column: 29, scope: !14857)
!14861 = !DILocation(line: 145, column: 20, scope: !14857)
!14862 = !DILocation(line: 146, column: 33, scope: !14863)
!14863 = distinct !DILexicalBlock(scope: !14857, file: !14631, line: 146, column: 8)
!14864 = !DILocation(line: 146, column: 24, scope: !14863)
!14865 = !DILocation(line: 146, column: 8, scope: !14857)
!14866 = !DILocation(line: 147, column: 29, scope: !14867)
!14867 = distinct !DILexicalBlock(scope: !14863, file: !14631, line: 146, column: 45)
!14868 = !DILocation(line: 147, column: 21, scope: !14867)
!14869 = !DILocation(line: 148, column: 4, scope: !14867)
!14870 = !DILocation(line: 149, column: 19, scope: !14857)
!14871 = !DILocation(line: 155, column: 2, scope: !14834)
!14872 = !DILocation(line: 155, column: 13, scope: !14873)
!14873 = distinct !DILexicalBlock(scope: !14829, file: !14631, line: 155, column: 13)
!14874 = !DILocation(line: 155, column: 13, scope: !14829)
!14875 = !DILocation(line: 162, column: 3, scope: !14876)
!14876 = distinct !DILexicalBlock(scope: !14873, file: !14631, line: 158, column: 9)
!14877 = !DILocation(line: 162, column: 18, scope: !14876)
!14878 = !DILocation(line: 162, column: 28, scope: !14876)
!14879 = !DILocation(line: 164, column: 49, scope: !14876)
!14880 = !DILocation(line: 164, column: 12, scope: !14876)
!14881 = !DILocation(line: 166, column: 3, scope: !14876)
!14882 = !DILocation(line: 0, scope: !14829)
!14883 = !DILocalVariable(name: "key", arg: 2, scope: !14884, file: !250, line: 190, type: !14804)
!14884 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !14885, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3261, retainedNodes: !14887)
!14885 = !DISubroutineType(types: !14886)
!14886 = !{null, !14815, !14804}
!14887 = !{!14888, !14883}
!14888 = !DILocalVariable(name: "l", arg: 1, scope: !14884, file: !250, line: 189, type: !14815)
!14889 = !DILocation(line: 0, scope: !14884, inlinedAt: !14890)
!14890 = distinct !DILocation(line: 171, column: 2, scope: !14791)
!14891 = !DILocalVariable(name: "key", arg: 1, scope: !14892, file: !7016, line: 84, type: !32)
!14892 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7016, file: !7016, line: 84, type: !7027, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3261, retainedNodes: !14893)
!14893 = !{!14891}
!14894 = !DILocation(line: 0, scope: !14892, inlinedAt: !14895)
!14895 = distinct !DILocation(line: 215, column: 2, scope: !14884, inlinedAt: !14890)
!14896 = !DILocation(line: 95, column: 2, scope: !14892, inlinedAt: !14895)
!14897 = !{i64 2045504}
!14898 = !DILocation(line: 173, column: 2, scope: !14791)
!14899 = !DILocation(line: 174, column: 1, scope: !14791)
!14900 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !14631, file: !14631, line: 188, type: !14901, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3261, retainedNodes: !14909)
!14901 = !DISubroutineType(types: !14902)
!14902 = !{null, !14634, !14903}
!14903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14904, size: 32)
!14904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !137, line: 4259, size: 96, elements: !14905)
!14905 = !{!14906, !14907, !14908}
!14906 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !14904, file: !137, line: 4261, baseType: !132, size: 32)
!14907 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !14904, file: !137, line: 4263, baseType: !108, size: 32, offset: 32)
!14908 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !14904, file: !137, line: 4265, baseType: !108, size: 32, offset: 64)
!14909 = !{!14910, !14911}
!14910 = !DILocalVariable(name: "msgq", arg: 1, scope: !14900, file: !14631, line: 188, type: !14634)
!14911 = !DILocalVariable(name: "attrs", arg: 2, scope: !14900, file: !14631, line: 188, type: !14903)
!14912 = !DILocation(line: 0, scope: !14900)
!14913 = !DILocation(line: 190, column: 26, scope: !14900)
!14914 = !DILocation(line: 190, column: 9, scope: !14900)
!14915 = !DILocation(line: 190, column: 18, scope: !14900)
!14916 = !DILocation(line: 191, column: 26, scope: !14900)
!14917 = !DILocation(line: 191, column: 9, scope: !14900)
!14918 = !DILocation(line: 191, column: 18, scope: !14900)
!14919 = !DILocation(line: 192, column: 27, scope: !14900)
!14920 = !DILocation(line: 192, column: 9, scope: !14900)
!14921 = !DILocation(line: 192, column: 19, scope: !14900)
!14922 = !DILocation(line: 193, column: 1, scope: !14900)
!14923 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !14631, file: !14631, line: 206, type: !14924, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3261, retainedNodes: !14926)
!14924 = !DISubroutineType(types: !14925)
!14925 = !{!103, !14634, !102, !14794}
!14926 = !{!14927, !14928, !14929, !14930, !14931, !14932}
!14927 = !DILocalVariable(name: "msgq", arg: 1, scope: !14923, file: !14631, line: 206, type: !14634)
!14928 = !DILocalVariable(name: "data", arg: 2, scope: !14923, file: !14631, line: 206, type: !102)
!14929 = !DILocalVariable(name: "timeout", arg: 3, scope: !14923, file: !14631, line: 206, type: !14794)
!14930 = !DILocalVariable(name: "key", scope: !14923, file: !14631, line: 210, type: !14804)
!14931 = !DILocalVariable(name: "pending_thread", scope: !14923, file: !14631, line: 211, type: !3279)
!14932 = !DILocalVariable(name: "result", scope: !14923, file: !14631, line: 212, type: !103)
!14933 = !DILocation(line: 0, scope: !14923)
!14934 = !DILocation(line: 214, column: 27, scope: !14923)
!14935 = !DILocation(line: 0, scope: !14812, inlinedAt: !14936)
!14936 = distinct !DILocation(line: 214, column: 8, scope: !14923)
!14937 = !DILocation(line: 55, column: 2, scope: !14821, inlinedAt: !14938)
!14938 = distinct !DILocation(line: 145, column: 10, scope: !14812, inlinedAt: !14936)
!14939 = !DILocation(line: 0, scope: !14821, inlinedAt: !14938)
!14940 = !DILocation(line: 218, column: 12, scope: !14941)
!14941 = distinct !DILexicalBlock(scope: !14923, file: !14631, line: 218, column: 6)
!14942 = !DILocation(line: 218, column: 22, scope: !14941)
!14943 = !DILocation(line: 218, column: 6, scope: !14923)
!14944 = !DILocation(line: 220, column: 28, scope: !14945)
!14945 = distinct !DILexicalBlock(scope: !14941, file: !14631, line: 218, column: 28)
!14946 = !DILocation(line: 220, column: 44, scope: !14945)
!14947 = !DILocation(line: 220, column: 9, scope: !14945)
!14948 = !DILocation(line: 221, column: 27, scope: !14945)
!14949 = !DILocation(line: 221, column: 18, scope: !14945)
!14950 = !DILocation(line: 222, column: 31, scope: !14951)
!14951 = distinct !DILexicalBlock(scope: !14945, file: !14631, line: 222, column: 7)
!14952 = !DILocation(line: 222, column: 22, scope: !14951)
!14953 = !DILocation(line: 222, column: 7, scope: !14945)
!14954 = !DILocation(line: 223, column: 27, scope: !14955)
!14955 = distinct !DILexicalBlock(scope: !14951, file: !14631, line: 222, column: 43)
!14956 = !DILocation(line: 223, column: 19, scope: !14955)
!14957 = !DILocation(line: 224, column: 3, scope: !14955)
!14958 = !DILocation(line: 225, column: 18, scope: !14945)
!14959 = !DILocation(line: 228, column: 49, scope: !14945)
!14960 = !DILocation(line: 228, column: 20, scope: !14945)
!14961 = !DILocation(line: 229, column: 22, scope: !14962)
!14962 = distinct !DILexicalBlock(scope: !14945, file: !14631, line: 229, column: 7)
!14963 = !DILocation(line: 229, column: 7, scope: !14945)
!14964 = !DILocation(line: 233, column: 23, scope: !14965)
!14965 = distinct !DILexicalBlock(scope: !14962, file: !14631, line: 229, column: 31)
!14966 = !DILocation(line: 233, column: 55, scope: !14965)
!14967 = !DILocation(line: 234, column: 17, scope: !14965)
!14968 = !DILocation(line: 233, column: 10, scope: !14965)
!14969 = !DILocation(line: 235, column: 29, scope: !14965)
!14970 = !DILocation(line: 235, column: 20, scope: !14965)
!14971 = !DILocation(line: 236, column: 33, scope: !14972)
!14972 = distinct !DILexicalBlock(scope: !14965, file: !14631, line: 236, column: 8)
!14973 = !DILocation(line: 236, column: 24, scope: !14972)
!14974 = !DILocation(line: 236, column: 8, scope: !14965)
!14975 = !DILocation(line: 237, column: 29, scope: !14976)
!14976 = distinct !DILexicalBlock(scope: !14972, file: !14631, line: 236, column: 45)
!14977 = !DILocation(line: 237, column: 21, scope: !14976)
!14978 = !DILocation(line: 238, column: 4, scope: !14976)
!14979 = !DILocation(line: 239, column: 19, scope: !14965)
!14980 = !DILocation(line: 0, scope: !14844, inlinedAt: !14981)
!14981 = distinct !DILocation(line: 242, column: 4, scope: !14965)
!14982 = !DILocation(line: 67, column: 15, scope: !14844, inlinedAt: !14981)
!14983 = !DILocation(line: 67, column: 33, scope: !14844, inlinedAt: !14981)
!14984 = !DILocation(line: 243, column: 4, scope: !14965)
!14985 = !DILocation(line: 244, column: 4, scope: !14965)
!14986 = !DILocation(line: 248, column: 4, scope: !14965)
!14987 = !DILocation(line: 251, column: 13, scope: !14988)
!14988 = distinct !DILexicalBlock(scope: !14941, file: !14631, line: 251, column: 13)
!14989 = !DILocation(line: 251, column: 13, scope: !14941)
!14990 = !DILocation(line: 258, column: 3, scope: !14991)
!14991 = distinct !DILexicalBlock(scope: !14988, file: !14631, line: 254, column: 9)
!14992 = !DILocation(line: 258, column: 18, scope: !14991)
!14993 = !DILocation(line: 258, column: 28, scope: !14991)
!14994 = !DILocation(line: 260, column: 49, scope: !14991)
!14995 = !DILocation(line: 260, column: 12, scope: !14991)
!14996 = !DILocation(line: 262, column: 3, scope: !14991)
!14997 = !DILocation(line: 0, scope: !14941)
!14998 = !DILocation(line: 0, scope: !14884, inlinedAt: !14999)
!14999 = distinct !DILocation(line: 267, column: 2, scope: !14923)
!15000 = !DILocation(line: 0, scope: !14892, inlinedAt: !15001)
!15001 = distinct !DILocation(line: 215, column: 2, scope: !14884, inlinedAt: !14999)
!15002 = !DILocation(line: 95, column: 2, scope: !14892, inlinedAt: !15001)
!15003 = !DILocation(line: 269, column: 2, scope: !14923)
!15004 = !DILocation(line: 270, column: 1, scope: !14923)
!15005 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !14631, file: !14631, line: 284, type: !15006, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3261, retainedNodes: !15008)
!15006 = !DISubroutineType(types: !15007)
!15007 = !{!103, !14634, !102}
!15008 = !{!15009, !15010, !15011, !15012}
!15009 = !DILocalVariable(name: "msgq", arg: 1, scope: !15005, file: !14631, line: 284, type: !14634)
!15010 = !DILocalVariable(name: "data", arg: 2, scope: !15005, file: !14631, line: 284, type: !102)
!15011 = !DILocalVariable(name: "key", scope: !15005, file: !14631, line: 286, type: !14804)
!15012 = !DILocalVariable(name: "result", scope: !15005, file: !14631, line: 287, type: !103)
!15013 = !DILocation(line: 0, scope: !15005)
!15014 = !DILocation(line: 0, scope: !14812, inlinedAt: !15015)
!15015 = distinct !DILocation(line: 289, column: 8, scope: !15005)
!15016 = !DILocation(line: 55, column: 2, scope: !14821, inlinedAt: !15017)
!15017 = distinct !DILocation(line: 145, column: 10, scope: !14812, inlinedAt: !15015)
!15018 = !DILocation(line: 0, scope: !14821, inlinedAt: !15017)
!15019 = !DILocation(line: 291, column: 12, scope: !15020)
!15020 = distinct !DILexicalBlock(scope: !15005, file: !14631, line: 291, column: 6)
!15021 = !DILocation(line: 291, column: 22, scope: !15020)
!15022 = !DILocation(line: 291, column: 6, scope: !15005)
!15023 = !DILocation(line: 293, column: 28, scope: !15024)
!15024 = distinct !DILexicalBlock(scope: !15020, file: !14631, line: 291, column: 28)
!15025 = !DILocation(line: 293, column: 44, scope: !15024)
!15026 = !DILocation(line: 293, column: 9, scope: !15024)
!15027 = !DILocation(line: 295, column: 2, scope: !15024)
!15028 = !DILocation(line: 0, scope: !15020)
!15029 = !DILocation(line: 0, scope: !14884, inlinedAt: !15030)
!15030 = distinct !DILocation(line: 302, column: 2, scope: !15005)
!15031 = !DILocation(line: 0, scope: !14892, inlinedAt: !15032)
!15032 = distinct !DILocation(line: 215, column: 2, scope: !14884, inlinedAt: !15030)
!15033 = !DILocation(line: 95, column: 2, scope: !14892, inlinedAt: !15032)
!15034 = !DILocation(line: 304, column: 2, scope: !15005)
!15035 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !14631, file: !14631, line: 318, type: !15036, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3261, retainedNodes: !15038)
!15036 = !DISubroutineType(types: !15037)
!15037 = !{null, !14634}
!15038 = !{!15039, !15040, !15041}
!15039 = !DILocalVariable(name: "msgq", arg: 1, scope: !15035, file: !14631, line: 318, type: !14634)
!15040 = !DILocalVariable(name: "key", scope: !15035, file: !14631, line: 320, type: !14804)
!15041 = !DILocalVariable(name: "pending_thread", scope: !15035, file: !14631, line: 321, type: !3279)
!15042 = !DILocation(line: 0, scope: !15035)
!15043 = !DILocation(line: 0, scope: !14812, inlinedAt: !15044)
!15044 = distinct !DILocation(line: 323, column: 8, scope: !15035)
!15045 = !DILocation(line: 55, column: 2, scope: !14821, inlinedAt: !15046)
!15046 = distinct !DILocation(line: 145, column: 10, scope: !14812, inlinedAt: !15044)
!15047 = !DILocation(line: 0, scope: !14821, inlinedAt: !15046)
!15048 = !DILocation(line: 328, column: 27, scope: !15035)
!15049 = !DILocation(line: 328, column: 65, scope: !15035)
!15050 = !DILocation(line: 328, column: 2, scope: !15035)
!15051 = !DILocation(line: 0, scope: !14844, inlinedAt: !15052)
!15052 = distinct !DILocation(line: 329, column: 3, scope: !15053)
!15053 = distinct !DILexicalBlock(scope: !15035, file: !14631, line: 328, column: 74)
!15054 = !DILocation(line: 67, column: 15, scope: !14844, inlinedAt: !15052)
!15055 = !DILocation(line: 67, column: 33, scope: !14844, inlinedAt: !15052)
!15056 = !DILocation(line: 330, column: 3, scope: !15053)
!15057 = distinct !{!15057, !15050, !15058}
!15058 = !DILocation(line: 331, column: 2, scope: !15035)
!15059 = !DILocation(line: 323, column: 27, scope: !15035)
!15060 = !DILocation(line: 333, column: 8, scope: !15035)
!15061 = !DILocation(line: 333, column: 18, scope: !15035)
!15062 = !DILocation(line: 334, column: 25, scope: !15035)
!15063 = !DILocation(line: 334, column: 8, scope: !15035)
!15064 = !DILocation(line: 334, column: 17, scope: !15035)
!15065 = !DILocation(line: 336, column: 2, scope: !15035)
!15066 = !DILocation(line: 337, column: 1, scope: !15035)
!15067 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2435, file: !2435, line: 49, type: !15068, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2330, retainedNodes: !15077)
!15068 = !DISubroutineType(types: !15069)
!15069 = !{!103, !15070}
!15070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15071, size: 32)
!15071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !137, line: 2720, size: 160, elements: !15072)
!15072 = !{!15073, !15074, !15075, !15076}
!15073 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15071, file: !137, line: 2722, baseType: !2366, size: 64)
!15074 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !15071, file: !137, line: 2724, baseType: !2348, size: 32, offset: 64)
!15075 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !15071, file: !137, line: 2727, baseType: !108, size: 32, offset: 96)
!15076 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !15071, file: !137, line: 2730, baseType: !103, size: 32, offset: 128)
!15077 = !{!15078}
!15078 = !DILocalVariable(name: "mutex", arg: 1, scope: !15067, file: !2435, line: 49, type: !15070)
!15079 = !DILocation(line: 0, scope: !15067)
!15080 = !DILocation(line: 51, column: 9, scope: !15067)
!15081 = !DILocation(line: 51, column: 15, scope: !15067)
!15082 = !DILocation(line: 52, column: 9, scope: !15067)
!15083 = !DILocation(line: 52, column: 20, scope: !15067)
!15084 = !DILocation(line: 54, column: 23, scope: !15067)
!15085 = !DILocation(line: 54, column: 2, scope: !15067)
!15086 = !DILocation(line: 60, column: 2, scope: !15067)
!15087 = distinct !DISubprogram(name: "z_waitq_init", scope: !14292, file: !14292, line: 47, type: !15088, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2330, retainedNodes: !15090)
!15088 = !DISubroutineType(types: !15089)
!15089 = !{null, !2365}
!15090 = !{!15091}
!15091 = !DILocalVariable(name: "w", arg: 1, scope: !15087, file: !14292, line: 47, type: !2365)
!15092 = !DILocation(line: 0, scope: !15087)
!15093 = !DILocation(line: 49, column: 21, scope: !15087)
!15094 = !DILocation(line: 49, column: 2, scope: !15087)
!15095 = !DILocation(line: 50, column: 1, scope: !15087)
!15096 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !15097, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2330, retainedNodes: !15100)
!15097 = !DISubroutineType(types: !15098)
!15098 = !{null, !15099}
!15099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 32)
!15100 = !{!15101}
!15101 = !DILocalVariable(name: "list", arg: 1, scope: !15096, file: !146, line: 197, type: !15099)
!15102 = !DILocation(line: 0, scope: !15096)
!15103 = !DILocation(line: 199, column: 8, scope: !15096)
!15104 = !DILocation(line: 199, column: 13, scope: !15096)
!15105 = !DILocation(line: 200, column: 8, scope: !15096)
!15106 = !DILocation(line: 200, column: 13, scope: !15096)
!15107 = !DILocation(line: 201, column: 1, scope: !15096)
!15108 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2435, file: !2435, line: 95, type: !15109, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2330, retainedNodes: !15115)
!15109 = !DISubroutineType(types: !15110)
!15110 = !{!103, !15070, !15111}
!15111 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !15112)
!15112 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !15113)
!15113 = !{!15114}
!15114 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15112, file: !105, line: 66, baseType: !104, size: 64)
!15115 = !{!15116, !15117, !15118, !15119, !15124, !15125, !15126}
!15116 = !DILocalVariable(name: "mutex", arg: 1, scope: !15108, file: !2435, line: 95, type: !15070)
!15117 = !DILocalVariable(name: "timeout", arg: 2, scope: !15108, file: !2435, line: 95, type: !15111)
!15118 = !DILocalVariable(name: "new_prio", scope: !15108, file: !2435, line: 97, type: !103)
!15119 = !DILocalVariable(name: "key", scope: !15108, file: !2435, line: 98, type: !15120)
!15120 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !15121)
!15121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !15122)
!15122 = !{!15123}
!15123 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15121, file: !250, line: 33, baseType: !103, size: 32)
!15124 = !DILocalVariable(name: "resched", scope: !15108, file: !2435, line: 99, type: !131)
!15125 = !DILocalVariable(name: "got_mutex", scope: !15108, file: !2435, line: 146, type: !103)
!15126 = !DILocalVariable(name: "waiter", scope: !15127, file: !2435, line: 169, type: !2348)
!15127 = distinct !DILexicalBlock(scope: !15128, file: !2435, line: 168, column: 36)
!15128 = distinct !DILexicalBlock(scope: !15108, file: !2435, line: 168, column: 6)
!15129 = !DILocation(line: 0, scope: !15108)
!15130 = !DILocalVariable(name: "l", arg: 1, scope: !15131, file: !250, line: 136, type: !15134)
!15131 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !15132, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2330, retainedNodes: !15135)
!15132 = !DISubroutineType(types: !15133)
!15133 = !{!15120, !15134}
!15134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 32)
!15135 = !{!15130, !15136}
!15136 = !DILocalVariable(name: "k", scope: !15131, file: !250, line: 139, type: !15120)
!15137 = !DILocation(line: 0, scope: !15131, inlinedAt: !15138)
!15138 = distinct !DILocation(line: 105, column: 8, scope: !15108)
!15139 = !DILocation(line: 55, column: 2, scope: !15140, inlinedAt: !15144)
!15140 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7016, file: !7016, line: 42, type: !7017, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2330, retainedNodes: !15141)
!15141 = !{!15142, !15143}
!15142 = !DILocalVariable(name: "key", scope: !15140, file: !7016, line: 44, type: !32)
!15143 = !DILocalVariable(name: "tmp", scope: !15140, file: !7016, line: 53, type: !32)
!15144 = distinct !DILocation(line: 145, column: 10, scope: !15131, inlinedAt: !15138)
!15145 = !{i64 2042958}
!15146 = !DILocation(line: 0, scope: !15140, inlinedAt: !15144)
!15147 = !DILocation(line: 107, column: 6, scope: !15148)
!15148 = distinct !DILexicalBlock(scope: !15108, file: !2435, line: 107, column: 6)
!15149 = !DILocation(line: 107, column: 6, scope: !15108)
!15150 = !{!"branch_weights", i32 2000, i32 1}
!15151 = !DILocation(line: 110, column: 6, scope: !15152)
!15152 = distinct !DILexicalBlock(scope: !15148, file: !2435, line: 107, column: 71)
!15153 = !DILocation(line: 110, column: 21, scope: !15152)
!15154 = !DILocation(line: 109, column: 28, scope: !15152)
!15155 = !DILocation(line: 111, column: 13, scope: !15152)
!15156 = !DILocation(line: 114, column: 18, scope: !15152)
!15157 = !DILocation(line: 109, column: 10, scope: !15152)
!15158 = !DILocation(line: 109, column: 26, scope: !15152)
!15159 = !DILocation(line: 113, column: 20, scope: !15152)
!15160 = !DILocation(line: 114, column: 10, scope: !15152)
!15161 = !DILocation(line: 114, column: 16, scope: !15152)
!15162 = !DILocalVariable(name: "key", arg: 2, scope: !15163, file: !250, line: 190, type: !15120)
!15163 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !15164, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2330, retainedNodes: !15166)
!15164 = !DISubroutineType(types: !15165)
!15165 = !{null, !15134, !15120}
!15166 = !{!15167, !15162}
!15167 = !DILocalVariable(name: "l", arg: 1, scope: !15163, file: !250, line: 189, type: !15134)
!15168 = !DILocation(line: 0, scope: !15163, inlinedAt: !15169)
!15169 = distinct !DILocation(line: 120, column: 3, scope: !15152)
!15170 = !DILocalVariable(name: "key", arg: 1, scope: !15171, file: !7016, line: 84, type: !32)
!15171 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7016, file: !7016, line: 84, type: !7027, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2330, retainedNodes: !15172)
!15172 = !{!15170}
!15173 = !DILocation(line: 0, scope: !15171, inlinedAt: !15174)
!15174 = distinct !DILocation(line: 215, column: 2, scope: !15163, inlinedAt: !15169)
!15175 = !DILocation(line: 95, column: 2, scope: !15171, inlinedAt: !15174)
!15176 = !{i64 2043775}
!15177 = !DILocation(line: 124, column: 3, scope: !15152)
!15178 = !DILocation(line: 127, column: 6, scope: !15179)
!15179 = distinct !DILexicalBlock(scope: !15108, file: !2435, line: 127, column: 6)
!15180 = !DILocation(line: 127, column: 6, scope: !15108)
!15181 = !{!"branch_weights", i32 1, i32 2000}
!15182 = !DILocation(line: 0, scope: !15163, inlinedAt: !15183)
!15183 = distinct !DILocation(line: 128, column: 3, scope: !15184)
!15184 = distinct !DILexicalBlock(scope: !15179, file: !2435, line: 127, column: 50)
!15185 = !DILocation(line: 0, scope: !15171, inlinedAt: !15186)
!15186 = distinct !DILocation(line: 215, column: 2, scope: !15163, inlinedAt: !15183)
!15187 = !DILocation(line: 95, column: 2, scope: !15171, inlinedAt: !15186)
!15188 = !DILocation(line: 132, column: 3, scope: !15184)
!15189 = !DILocation(line: 137, column: 53, scope: !15108)
!15190 = !DILocation(line: 137, column: 38, scope: !15108)
!15191 = !DILocation(line: 138, column: 29, scope: !15108)
!15192 = !DILocation(line: 138, column: 10, scope: !15108)
!15193 = !DILocation(line: 137, column: 13, scope: !15108)
!15194 = !DILocation(line: 142, column: 6, scope: !15195)
!15195 = distinct !DILexicalBlock(scope: !15108, file: !2435, line: 142, column: 6)
!15196 = !DILocation(line: 142, column: 6, scope: !15108)
!15197 = !DILocation(line: 143, column: 13, scope: !15198)
!15198 = distinct !DILexicalBlock(scope: !15195, file: !2435, line: 142, column: 59)
!15199 = !DILocation(line: 144, column: 2, scope: !15198)
!15200 = !DILocation(line: 146, column: 50, scope: !15108)
!15201 = !DILocation(line: 146, column: 18, scope: !15108)
!15202 = !DILocation(line: 153, column: 16, scope: !15203)
!15203 = distinct !DILexicalBlock(scope: !15108, file: !2435, line: 153, column: 6)
!15204 = !DILocation(line: 153, column: 6, scope: !15108)
!15205 = !DILocation(line: 0, scope: !15131, inlinedAt: !15206)
!15206 = distinct !DILocation(line: 162, column: 8, scope: !15108)
!15207 = !DILocation(line: 55, column: 2, scope: !15140, inlinedAt: !15208)
!15208 = distinct !DILocation(line: 145, column: 10, scope: !15131, inlinedAt: !15206)
!15209 = !DILocation(line: 0, scope: !15140, inlinedAt: !15208)
!15210 = !DILocation(line: 168, column: 6, scope: !15128)
!15211 = !DILocation(line: 168, column: 6, scope: !15108)
!15212 = !DILocation(line: 169, column: 29, scope: !15127)
!15213 = !DILocation(line: 0, scope: !15127)
!15214 = !DILocation(line: 171, column: 22, scope: !15127)
!15215 = !DILocation(line: 171, column: 14, scope: !15127)
!15216 = !DILocation(line: 172, column: 42, scope: !15127)
!15217 = !DILocation(line: 172, column: 29, scope: !15127)
!15218 = !DILocation(line: 172, column: 55, scope: !15127)
!15219 = !DILocation(line: 172, column: 4, scope: !15127)
!15220 = !DILocation(line: 173, column: 11, scope: !15127)
!15221 = !DILocation(line: 177, column: 13, scope: !15127)
!15222 = !DILocation(line: 177, column: 48, scope: !15127)
!15223 = !DILocation(line: 180, column: 6, scope: !15108)
!15224 = !DILocation(line: 181, column: 3, scope: !15225)
!15225 = distinct !DILexicalBlock(scope: !15226, file: !2435, line: 180, column: 15)
!15226 = distinct !DILexicalBlock(scope: !15108, file: !2435, line: 180, column: 6)
!15227 = !DILocation(line: 182, column: 2, scope: !15225)
!15228 = !DILocation(line: 0, scope: !15163, inlinedAt: !15229)
!15229 = distinct !DILocation(line: 183, column: 3, scope: !15230)
!15230 = distinct !DILexicalBlock(scope: !15226, file: !2435, line: 182, column: 9)
!15231 = !DILocation(line: 0, scope: !15171, inlinedAt: !15232)
!15232 = distinct !DILocation(line: 215, column: 2, scope: !15163, inlinedAt: !15229)
!15233 = !DILocation(line: 95, column: 2, scope: !15171, inlinedAt: !15232)
!15234 = !DILocation(line: 189, column: 1, scope: !15108)
!15235 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2435, file: !2435, line: 72, type: !15236, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2330, retainedNodes: !15238)
!15236 = !DISubroutineType(types: !15237)
!15237 = !{!331, !331, !331}
!15238 = !{!15239, !15240, !15241}
!15239 = !DILocalVariable(name: "target", arg: 1, scope: !15235, file: !2435, line: 72, type: !331)
!15240 = !DILocalVariable(name: "limit", arg: 2, scope: !15235, file: !2435, line: 72, type: !331)
!15241 = !DILocalVariable(name: "new_prio", scope: !15235, file: !2435, line: 74, type: !103)
!15242 = !DILocation(line: 0, scope: !15235)
!15243 = !DILocation(line: 74, column: 17, scope: !15235)
!15244 = !DILocation(line: 76, column: 13, scope: !15235)
!15245 = !DILocation(line: 78, column: 2, scope: !15235)
!15246 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13967, file: !13967, line: 211, type: !15247, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2330, retainedNodes: !15249)
!15247 = !DISubroutineType(types: !15248)
!15248 = !{!131, !103, !103}
!15249 = !{!15250, !15251}
!15250 = !DILocalVariable(name: "prio", arg: 1, scope: !15246, file: !13967, line: 211, type: !103)
!15251 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15246, file: !13967, line: 211, type: !103)
!15252 = !DILocation(line: 0, scope: !15246)
!15253 = !DILocation(line: 213, column: 9, scope: !15246)
!15254 = !DILocation(line: 213, column: 2, scope: !15246)
!15255 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2435, file: !2435, line: 81, type: !15256, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2330, retainedNodes: !15258)
!15256 = !DISubroutineType(types: !15257)
!15257 = !{!131, !15070, !331}
!15258 = !{!15259, !15260}
!15259 = !DILocalVariable(name: "mutex", arg: 1, scope: !15255, file: !2435, line: 81, type: !15070)
!15260 = !DILocalVariable(name: "new_prio", arg: 2, scope: !15255, file: !2435, line: 81, type: !331)
!15261 = !DILocation(line: 0, scope: !15255)
!15262 = !DILocation(line: 83, column: 13, scope: !15263)
!15263 = distinct !DILexicalBlock(scope: !15255, file: !2435, line: 83, column: 6)
!15264 = !DILocation(line: 83, column: 25, scope: !15263)
!15265 = !DILocation(line: 83, column: 6, scope: !15263)
!15266 = !DILocation(line: 83, column: 30, scope: !15263)
!15267 = !DILocation(line: 83, column: 6, scope: !15255)
!15268 = !DILocation(line: 90, column: 10, scope: !15269)
!15269 = distinct !DILexicalBlock(scope: !15263, file: !2435, line: 83, column: 43)
!15270 = !DILocation(line: 90, column: 3, scope: !15269)
!15271 = !DILocation(line: 93, column: 1, scope: !15255)
!15272 = distinct !DISubprogram(name: "z_waitq_head", scope: !14292, file: !14292, line: 52, type: !15273, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2330, retainedNodes: !15275)
!15273 = !DISubroutineType(types: !15274)
!15274 = !{!2348, !2365}
!15275 = !{!15276}
!15276 = !DILocalVariable(name: "w", arg: 1, scope: !15272, file: !14292, line: 52, type: !2365)
!15277 = !DILocation(line: 0, scope: !15272)
!15278 = !DILocation(line: 54, column: 52, scope: !15272)
!15279 = !DILocation(line: 54, column: 28, scope: !15272)
!15280 = !DILocation(line: 54, column: 9, scope: !15272)
!15281 = !DILocation(line: 54, column: 2, scope: !15272)
!15282 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !15283, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2330, retainedNodes: !15285)
!15283 = !DISubroutineType(types: !15284)
!15284 = !{!2333, !15099}
!15285 = !{!15286}
!15286 = !DILocalVariable(name: "list", arg: 1, scope: !15282, file: !146, line: 294, type: !15099)
!15287 = !DILocation(line: 0, scope: !15282)
!15288 = !DILocation(line: 296, column: 9, scope: !15282)
!15289 = !DILocation(line: 296, column: 49, scope: !15282)
!15290 = !DILocation(line: 296, column: 2, scope: !15282)
!15291 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !15292, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2330, retainedNodes: !15294)
!15292 = !DISubroutineType(types: !15293)
!15293 = !{!131, !15099}
!15294 = !{!15295}
!15295 = !DILocalVariable(name: "list", arg: 1, scope: !15291, file: !146, line: 266, type: !15099)
!15296 = !DILocation(line: 0, scope: !15291)
!15297 = !DILocation(line: 268, column: 15, scope: !15291)
!15298 = !DILocation(line: 268, column: 20, scope: !15291)
!15299 = !DILocation(line: 268, column: 2, scope: !15291)
!15300 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13967, file: !13967, line: 206, type: !15247, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2330, retainedNodes: !15301)
!15301 = !{!15302, !15303}
!15302 = !DILocalVariable(name: "prio1", arg: 1, scope: !15300, file: !13967, line: 206, type: !103)
!15303 = !DILocalVariable(name: "prio2", arg: 2, scope: !15300, file: !13967, line: 206, type: !103)
!15304 = !DILocation(line: 0, scope: !15300)
!15305 = !DILocation(line: 208, column: 15, scope: !15300)
!15306 = !DILocation(line: 208, column: 2, scope: !15300)
!15307 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !13967, file: !13967, line: 186, type: !396, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2330, retainedNodes: !15308)
!15308 = !{!15309}
!15309 = !DILocalVariable(name: "prio", arg: 1, scope: !15307, file: !13967, line: 186, type: !103)
!15310 = !DILocation(line: 0, scope: !15307)
!15311 = !DILocation(line: 188, column: 9, scope: !15307)
!15312 = !DILocation(line: 188, column: 2, scope: !15307)
!15313 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !13967, file: !13967, line: 181, type: !15314, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2330, retainedNodes: !15316)
!15314 = !DISubroutineType(types: !15315)
!15315 = !{!131, !103}
!15316 = !{!15317}
!15317 = !DILocalVariable(name: "prio", arg: 1, scope: !15313, file: !13967, line: 181, type: !103)
!15318 = !DILocation(line: 0, scope: !15313)
!15319 = !DILocation(line: 183, column: 14, scope: !15313)
!15320 = !DILocation(line: 183, column: 2, scope: !15313)
!15321 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2435, file: !2435, line: 201, type: !15068, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2330, retainedNodes: !15322)
!15322 = !{!15323, !15324, !15325, !15326}
!15323 = !DILocalVariable(name: "mutex", arg: 1, scope: !15321, file: !2435, line: 201, type: !15070)
!15324 = !DILocalVariable(name: "new_owner", scope: !15321, file: !2435, line: 203, type: !2348)
!15325 = !DILocalVariable(name: "key", scope: !15321, file: !2435, line: 242, type: !15120)
!15326 = !DILabel(scope: !15321, name: "k_mutex_unlock_return", file: !2435, line: 270)
!15327 = !DILocation(line: 0, scope: !15321)
!15328 = !DILocation(line: 209, column: 2, scope: !15329)
!15329 = distinct !DILexicalBlock(scope: !15321, file: !2435, line: 209, column: 2)
!15330 = !DILocation(line: 209, column: 2, scope: !15321)
!15331 = !DILocation(line: 217, column: 2, scope: !15332)
!15332 = distinct !DILexicalBlock(scope: !15321, file: !2435, line: 217, column: 2)
!15333 = !DILocation(line: 217, column: 2, scope: !15321)
!15334 = !DILocation(line: 237, column: 13, scope: !15335)
!15335 = distinct !DILexicalBlock(scope: !15321, file: !2435, line: 237, column: 6)
!15336 = !DILocation(line: 237, column: 24, scope: !15335)
!15337 = !DILocation(line: 237, column: 6, scope: !15321)
!15338 = !DILocation(line: 238, column: 20, scope: !15339)
!15339 = distinct !DILexicalBlock(scope: !15335, file: !2435, line: 237, column: 30)
!15340 = !DILocation(line: 239, column: 3, scope: !15339)
!15341 = !DILocation(line: 0, scope: !15131, inlinedAt: !15342)
!15342 = distinct !DILocation(line: 242, column: 25, scope: !15321)
!15343 = !DILocation(line: 55, column: 2, scope: !15140, inlinedAt: !15344)
!15344 = distinct !DILocation(line: 145, column: 10, scope: !15131, inlinedAt: !15342)
!15345 = !DILocation(line: 0, scope: !15140, inlinedAt: !15344)
!15346 = !DILocation(line: 244, column: 34, scope: !15321)
!15347 = !DILocation(line: 244, column: 2, scope: !15321)
!15348 = !DILocation(line: 247, column: 44, scope: !15321)
!15349 = !DILocation(line: 247, column: 14, scope: !15321)
!15350 = !DILocation(line: 249, column: 15, scope: !15321)
!15351 = !DILocation(line: 254, column: 16, scope: !15352)
!15352 = distinct !DILexicalBlock(scope: !15321, file: !2435, line: 254, column: 6)
!15353 = !DILocation(line: 254, column: 6, scope: !15321)
!15354 = !DILocation(line: 260, column: 44, scope: !15355)
!15355 = distinct !DILexicalBlock(scope: !15352, file: !2435, line: 254, column: 25)
!15356 = !DILocation(line: 260, column: 28, scope: !15355)
!15357 = !DILocation(line: 260, column: 26, scope: !15355)
!15358 = !DILocalVariable(name: "thread", arg: 1, scope: !15359, file: !13987, line: 65, type: !2348)
!15359 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13987, file: !13987, line: 65, type: !15360, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2330, retainedNodes: !15362)
!15360 = !DISubroutineType(types: !15361)
!15361 = !{null, !2348, !32}
!15362 = !{!15358, !15363}
!15363 = !DILocalVariable(name: "value", arg: 2, scope: !15359, file: !13987, line: 65, type: !32)
!15364 = !DILocation(line: 0, scope: !15359, inlinedAt: !15365)
!15365 = distinct !DILocation(line: 261, column: 3, scope: !15355)
!15366 = !DILocation(line: 67, column: 15, scope: !15359, inlinedAt: !15365)
!15367 = !DILocation(line: 67, column: 33, scope: !15359, inlinedAt: !15365)
!15368 = !DILocation(line: 262, column: 3, scope: !15355)
!15369 = !DILocation(line: 263, column: 3, scope: !15355)
!15370 = !DILocation(line: 264, column: 2, scope: !15355)
!15371 = !DILocation(line: 265, column: 21, scope: !15372)
!15372 = distinct !DILexicalBlock(scope: !15352, file: !2435, line: 264, column: 9)
!15373 = !DILocation(line: 0, scope: !15163, inlinedAt: !15374)
!15374 = distinct !DILocation(line: 266, column: 3, scope: !15372)
!15375 = !DILocation(line: 0, scope: !15171, inlinedAt: !15376)
!15376 = distinct !DILocation(line: 215, column: 2, scope: !15163, inlinedAt: !15374)
!15377 = !DILocation(line: 95, column: 2, scope: !15171, inlinedAt: !15376)
!15378 = !DILocation(line: 274, column: 1, scope: !15321)
!15379 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2546, file: !2546, line: 93, type: !15380, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15382)
!15380 = !DISubroutineType(types: !15381)
!15381 = !{!331, !2441, !2441}
!15382 = !{!15383, !15384, !15385, !15386}
!15383 = !DILocalVariable(name: "thread_1", arg: 1, scope: !15379, file: !2546, line: 93, type: !2441)
!15384 = !DILocalVariable(name: "thread_2", arg: 2, scope: !15379, file: !2546, line: 94, type: !2441)
!15385 = !DILocalVariable(name: "b1", scope: !15379, file: !2546, line: 97, type: !331)
!15386 = !DILocalVariable(name: "b2", scope: !15379, file: !2546, line: 98, type: !331)
!15387 = !DILocation(line: 0, scope: !15379)
!15388 = !DILocation(line: 97, column: 30, scope: !15379)
!15389 = !DILocation(line: 98, column: 30, scope: !15379)
!15390 = !DILocation(line: 100, column: 9, scope: !15391)
!15391 = distinct !DILexicalBlock(scope: !15379, file: !2546, line: 100, column: 6)
!15392 = !DILocation(line: 100, column: 6, scope: !15379)
!15393 = !DILocation(line: 125, column: 1, scope: !15379)
!15394 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2546, file: !2546, line: 428, type: !15395, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15397)
!15395 = !DISubroutineType(types: !15396)
!15396 = !{null, !2441}
!15397 = !{!15398}
!15398 = !DILocalVariable(name: "curr", arg: 1, scope: !15394, file: !2546, line: 428, type: !2441)
!15399 = !DILocation(line: 0, scope: !15394)
!15400 = !DILocation(line: 434, column: 6, scope: !15401)
!15401 = distinct !DILexicalBlock(scope: !15394, file: !2546, line: 434, column: 6)
!15402 = !DILocation(line: 434, column: 23, scope: !15401)
!15403 = !DILocation(line: 434, column: 6, scope: !15394)
!15404 = !DILocation(line: 435, column: 50, scope: !15405)
!15405 = distinct !DILexicalBlock(scope: !15401, file: !2546, line: 434, column: 29)
!15406 = !DILocation(line: 435, column: 48, scope: !15405)
!15407 = !DILocation(line: 435, column: 29, scope: !15405)
!15408 = !DILocation(line: 436, column: 24, scope: !15405)
!15409 = !DILocation(line: 436, column: 3, scope: !15405)
!15410 = !DILocation(line: 437, column: 2, scope: !15405)
!15411 = !DILocation(line: 438, column: 1, scope: !15394)
!15412 = distinct !DISubprogram(name: "slice_time", scope: !2546, file: !2546, line: 407, type: !15413, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15415)
!15413 = !DISubroutineType(types: !15414)
!15414 = !{!103, !2441}
!15415 = !{!15416, !15417}
!15416 = !DILocalVariable(name: "curr", arg: 1, scope: !15412, file: !2546, line: 407, type: !2441)
!15417 = !DILocalVariable(name: "ret", scope: !15412, file: !2546, line: 409, type: !103)
!15418 = !DILocation(line: 0, scope: !15412)
!15419 = !DILocation(line: 409, column: 12, scope: !15412)
!15420 = !DILocation(line: 416, column: 2, scope: !15412)
!15421 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2546, file: !2546, line: 440, type: !15422, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15424)
!15422 = !DISubroutineType(types: !15423)
!15423 = !{null, !331, !103}
!15424 = !{!15425, !15426, !15427, !15433}
!15425 = !DILocalVariable(name: "slice", arg: 1, scope: !15421, file: !2546, line: 440, type: !331)
!15426 = !DILocalVariable(name: "prio", arg: 2, scope: !15421, file: !2546, line: 440, type: !103)
!15427 = !DILocalVariable(name: "__i", scope: !15428, file: !2546, line: 442, type: !15429)
!15428 = distinct !DILexicalBlock(scope: !15421, file: !2546, line: 442, column: 2)
!15429 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !15430)
!15430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !15431)
!15431 = !{!15432}
!15432 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15430, file: !250, line: 33, baseType: !103, size: 32)
!15433 = !DILocalVariable(name: "__key", scope: !15428, file: !2546, line: 442, type: !15429)
!15434 = !DILocation(line: 0, scope: !15421)
!15435 = !DILocation(line: 0, scope: !15428)
!15436 = !DILocalVariable(name: "l", arg: 1, scope: !15437, file: !250, line: 136, type: !15440)
!15437 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !15438, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15441)
!15438 = !DISubroutineType(types: !15439)
!15439 = !{!15429, !15440}
!15440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2535, size: 32)
!15441 = !{!15436, !15442}
!15442 = !DILocalVariable(name: "k", scope: !15437, file: !250, line: 139, type: !15429)
!15443 = !DILocation(line: 0, scope: !15437, inlinedAt: !15444)
!15444 = distinct !DILocation(line: 442, column: 2, scope: !15428)
!15445 = !DILocation(line: 55, column: 2, scope: !15446, inlinedAt: !15450)
!15446 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7016, file: !7016, line: 42, type: !7017, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15447)
!15447 = !{!15448, !15449}
!15448 = !DILocalVariable(name: "key", scope: !15446, file: !7016, line: 44, type: !32)
!15449 = !DILocalVariable(name: "tmp", scope: !15446, file: !7016, line: 53, type: !32)
!15450 = distinct !DILocation(line: 145, column: 10, scope: !15437, inlinedAt: !15444)
!15451 = !{i64 2082521}
!15452 = !DILocation(line: 0, scope: !15446, inlinedAt: !15450)
!15453 = !DILocation(line: 443, column: 29, scope: !15454)
!15454 = distinct !DILexicalBlock(scope: !15455, file: !2546, line: 442, column: 26)
!15455 = distinct !DILexicalBlock(scope: !15428, file: !2546, line: 442, column: 2)
!15456 = !DILocation(line: 444, column: 17, scope: !15454)
!15457 = !DILocation(line: 445, column: 51, scope: !15458)
!15458 = distinct !DILexicalBlock(scope: !15454, file: !2546, line: 445, column: 7)
!15459 = !DILocation(line: 445, column: 7, scope: !15454)
!15460 = !DILocation(line: 0, scope: !15454)
!15461 = !DILocation(line: 451, column: 18, scope: !15454)
!15462 = !DILocation(line: 452, column: 3, scope: !15454)
!15463 = !DILocalVariable(name: "key", arg: 2, scope: !15464, file: !250, line: 190, type: !15429)
!15464 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !15465, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15467)
!15465 = !DISubroutineType(types: !15466)
!15466 = !{null, !15440, !15429}
!15467 = !{!15468, !15463}
!15468 = !DILocalVariable(name: "l", arg: 1, scope: !15464, file: !250, line: 189, type: !15440)
!15469 = !DILocation(line: 0, scope: !15464, inlinedAt: !15470)
!15470 = distinct !DILocation(line: 442, column: 2, scope: !15455)
!15471 = !DILocalVariable(name: "key", arg: 1, scope: !15472, file: !7016, line: 84, type: !32)
!15472 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7016, file: !7016, line: 84, type: !7027, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15473)
!15473 = !{!15471}
!15474 = !DILocation(line: 0, scope: !15472, inlinedAt: !15475)
!15475 = distinct !DILocation(line: 215, column: 2, scope: !15464, inlinedAt: !15470)
!15476 = !DILocation(line: 95, column: 2, scope: !15472, inlinedAt: !15475)
!15477 = !{i64 2083338}
!15478 = !DILocation(line: 454, column: 1, scope: !15421)
!15479 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3626, file: !3626, line: 389, type: !8577, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15480)
!15480 = !{!15481}
!15481 = !DILocalVariable(name: "t", arg: 1, scope: !15479, file: !3626, line: 389, type: !108)
!15482 = !DILocation(line: 0, scope: !15479)
!15483 = !DILocalVariable(name: "t", arg: 1, scope: !15484, file: !3626, line: 102, type: !109)
!15484 = distinct !DISubprogram(name: "z_tmcvt", scope: !3626, file: !3626, line: 102, type: !3652, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15485)
!15485 = !{!15483, !15486, !15487, !15488, !15489, !15490, !15491, !15492, !15493, !15494, !15495}
!15486 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15484, file: !3626, line: 102, type: !108)
!15487 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15484, file: !3626, line: 103, type: !108)
!15488 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15484, file: !3626, line: 103, type: !131)
!15489 = !DILocalVariable(name: "result32", arg: 5, scope: !15484, file: !3626, line: 104, type: !131)
!15490 = !DILocalVariable(name: "round_up", arg: 6, scope: !15484, file: !3626, line: 104, type: !131)
!15491 = !DILocalVariable(name: "round_off", arg: 7, scope: !15484, file: !3626, line: 105, type: !131)
!15492 = !DILocalVariable(name: "mul_ratio", scope: !15484, file: !3626, line: 107, type: !131)
!15493 = !DILocalVariable(name: "div_ratio", scope: !15484, file: !3626, line: 109, type: !131)
!15494 = !DILocalVariable(name: "off", scope: !15484, file: !3626, line: 116, type: !109)
!15495 = !DILocalVariable(name: "rdivisor", scope: !15496, file: !3626, line: 119, type: !108)
!15496 = distinct !DILexicalBlock(scope: !15497, file: !3626, line: 118, column: 18)
!15497 = distinct !DILexicalBlock(scope: !15484, file: !3626, line: 118, column: 6)
!15498 = !DILocation(line: 0, scope: !15484, inlinedAt: !15499)
!15499 = distinct !DILocation(line: 392, column: 9, scope: !15479)
!15500 = !DILocation(line: 143, column: 25, scope: !15501, inlinedAt: !15499)
!15501 = distinct !DILexicalBlock(scope: !15502, file: !3626, line: 142, column: 17)
!15502 = distinct !DILexicalBlock(scope: !15503, file: !3626, line: 142, column: 7)
!15503 = distinct !DILexicalBlock(scope: !15504, file: !3626, line: 141, column: 24)
!15504 = distinct !DILexicalBlock(scope: !15505, file: !3626, line: 141, column: 13)
!15505 = distinct !DILexicalBlock(scope: !15484, file: !3626, line: 134, column: 6)
!15506 = !DILocation(line: 392, column: 2, scope: !15479)
!15507 = distinct !DISubprogram(name: "z_time_slice", scope: !2546, file: !2546, line: 502, type: !9593, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15508)
!15508 = !{!15509, !15510}
!15509 = !DILocalVariable(name: "ticks", arg: 1, scope: !15507, file: !2546, line: 502, type: !103)
!15510 = !DILocalVariable(name: "key", scope: !15507, file: !2546, line: 511, type: !15429)
!15511 = !DILocation(line: 0, scope: !15507)
!15512 = !DILocation(line: 0, scope: !15437, inlinedAt: !15513)
!15513 = distinct !DILocation(line: 511, column: 25, scope: !15507)
!15514 = !DILocation(line: 55, column: 2, scope: !15446, inlinedAt: !15515)
!15515 = distinct !DILocation(line: 145, column: 10, scope: !15437, inlinedAt: !15513)
!15516 = !DILocation(line: 0, scope: !15446, inlinedAt: !15515)
!15517 = !DILocation(line: 514, column: 6, scope: !15518)
!15518 = distinct !DILexicalBlock(scope: !15507, file: !2546, line: 514, column: 6)
!15519 = !DILocation(line: 514, column: 25, scope: !15518)
!15520 = !DILocation(line: 514, column: 22, scope: !15518)
!15521 = !DILocation(line: 514, column: 6, scope: !15507)
!15522 = !DILocation(line: 515, column: 3, scope: !15523)
!15523 = distinct !DILexicalBlock(scope: !15518, file: !2546, line: 514, column: 35)
!15524 = !DILocation(line: 0, scope: !15464, inlinedAt: !15525)
!15525 = distinct !DILocation(line: 516, column: 3, scope: !15523)
!15526 = !DILocation(line: 0, scope: !15472, inlinedAt: !15527)
!15527 = distinct !DILocation(line: 215, column: 2, scope: !15464, inlinedAt: !15525)
!15528 = !DILocation(line: 95, column: 2, scope: !15472, inlinedAt: !15527)
!15529 = !DILocation(line: 517, column: 3, scope: !15523)
!15530 = !DILocation(line: 519, column: 18, scope: !15507)
!15531 = !DILocation(line: 522, column: 6, scope: !15532)
!15532 = distinct !DILexicalBlock(scope: !15507, file: !2546, line: 522, column: 6)
!15533 = !DILocation(line: 522, column: 27, scope: !15532)
!15534 = !DILocation(line: 522, column: 30, scope: !15532)
!15535 = !DILocation(line: 522, column: 6, scope: !15507)
!15536 = !DILocation(line: 523, column: 30, scope: !15537)
!15537 = distinct !DILexicalBlock(scope: !15538, file: !2546, line: 523, column: 7)
!15538 = distinct !DILexicalBlock(scope: !15532, file: !2546, line: 522, column: 51)
!15539 = !DILocation(line: 523, column: 13, scope: !15537)
!15540 = !DILocation(line: 523, column: 7, scope: !15538)
!15541 = !DILocation(line: 530, column: 10, scope: !15542)
!15542 = distinct !DILexicalBlock(scope: !15537, file: !2546, line: 523, column: 43)
!15543 = !DILocation(line: 531, column: 3, scope: !15542)
!15544 = !DILocation(line: 532, column: 30, scope: !15545)
!15545 = distinct !DILexicalBlock(scope: !15537, file: !2546, line: 531, column: 10)
!15546 = !DILocation(line: 535, column: 29, scope: !15547)
!15547 = distinct !DILexicalBlock(scope: !15532, file: !2546, line: 534, column: 9)
!15548 = !DILocation(line: 0, scope: !15464, inlinedAt: !15549)
!15549 = distinct !DILocation(line: 537, column: 2, scope: !15507)
!15550 = !DILocation(line: 0, scope: !15472, inlinedAt: !15551)
!15551 = distinct !DILocation(line: 215, column: 2, scope: !15464, inlinedAt: !15549)
!15552 = !DILocation(line: 95, column: 2, scope: !15472, inlinedAt: !15551)
!15553 = !DILocation(line: 538, column: 1, scope: !15507)
!15554 = distinct !DISubprogram(name: "sliceable", scope: !2546, file: !2546, line: 468, type: !15555, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15557)
!15555 = !DISubroutineType(types: !15556)
!15556 = !{!131, !2441}
!15557 = !{!15558, !15559}
!15558 = !DILocalVariable(name: "thread", arg: 1, scope: !15554, file: !2546, line: 468, type: !2441)
!15559 = !DILocalVariable(name: "ret", scope: !15554, file: !2546, line: 470, type: !131)
!15560 = !DILocation(line: 0, scope: !15554)
!15561 = !DILocation(line: 470, column: 13, scope: !15554)
!15562 = !DILocation(line: 471, column: 3, scope: !15554)
!15563 = !DILocation(line: 471, column: 7, scope: !15554)
!15564 = !DILocation(line: 472, column: 3, scope: !15554)
!15565 = !DILocation(line: 472, column: 37, scope: !15554)
!15566 = !DILocation(line: 472, column: 24, scope: !15554)
!15567 = !DILocation(line: 472, column: 43, scope: !15554)
!15568 = !DILocation(line: 472, column: 7, scope: !15554)
!15569 = !DILocation(line: 473, column: 3, scope: !15554)
!15570 = !DILocation(line: 473, column: 7, scope: !15554)
!15571 = !DILocation(line: 473, column: 6, scope: !15554)
!15572 = !DILocation(line: 479, column: 2, scope: !15554)
!15573 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2546, file: !2546, line: 482, type: !15574, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15576)
!15574 = !DISubroutineType(types: !15575)
!15575 = !{!15429, !15429}
!15576 = !{!15577, !15578}
!15577 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !15573, file: !2546, line: 482, type: !15429)
!15578 = !DILocalVariable(name: "curr", scope: !15573, file: !2546, line: 484, type: !2441)
!15579 = !DILocation(line: 0, scope: !15573)
!15580 = !DILocation(line: 484, column: 26, scope: !15573)
!15581 = !DILocation(line: 493, column: 7, scope: !15582)
!15582 = distinct !DILexicalBlock(scope: !15573, file: !2546, line: 493, column: 6)
!15583 = !DILocation(line: 493, column: 6, scope: !15573)
!15584 = !DILocation(line: 494, column: 3, scope: !15585)
!15585 = distinct !DILexicalBlock(scope: !15582, file: !2546, line: 493, column: 49)
!15586 = !DILocation(line: 495, column: 2, scope: !15585)
!15587 = !DILocation(line: 496, column: 2, scope: !15573)
!15588 = !DILocation(line: 499, column: 1, scope: !15573)
!15589 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13967, file: !13967, line: 106, type: !15555, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15590)
!15590 = !{!15591, !15592}
!15591 = !DILocalVariable(name: "thread", arg: 1, scope: !15589, file: !13967, line: 106, type: !2441)
!15592 = !DILocalVariable(name: "state", scope: !15589, file: !13967, line: 108, type: !185)
!15593 = !DILocation(line: 0, scope: !15589)
!15594 = !DILocation(line: 108, column: 31, scope: !15589)
!15595 = !DILocation(line: 110, column: 16, scope: !15589)
!15596 = !DILocation(line: 111, column: 41, scope: !15589)
!15597 = !DILocation(line: 110, column: 2, scope: !15589)
!15598 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2546, file: !2546, line: 393, type: !15395, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15599)
!15599 = !{!15600}
!15600 = !DILocalVariable(name: "thread", arg: 1, scope: !15598, file: !2546, line: 393, type: !2441)
!15601 = !DILocation(line: 0, scope: !15598)
!15602 = !DILocation(line: 395, column: 6, scope: !15603)
!15603 = distinct !DILexicalBlock(scope: !15598, file: !2546, line: 395, column: 6)
!15604 = !DILocation(line: 395, column: 6, scope: !15598)
!15605 = !DILocalVariable(name: "thread", arg: 1, scope: !15606, file: !2546, line: 264, type: !2441)
!15606 = distinct !DISubprogram(name: "dequeue_thread", scope: !2546, file: !2546, line: 264, type: !15395, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15607)
!15607 = !{!15605}
!15608 = !DILocation(line: 0, scope: !15606, inlinedAt: !15609)
!15609 = distinct !DILocation(line: 396, column: 3, scope: !15610)
!15610 = distinct !DILexicalBlock(scope: !15603, file: !2546, line: 395, column: 34)
!15611 = !DILocation(line: 266, column: 15, scope: !15606, inlinedAt: !15609)
!15612 = !DILocation(line: 266, column: 28, scope: !15606, inlinedAt: !15609)
!15613 = !DILocalVariable(name: "thread", arg: 1, scope: !15614, file: !2546, line: 232, type: !2441)
!15614 = distinct !DISubprogram(name: "runq_remove", scope: !2546, file: !2546, line: 232, type: !15395, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15615)
!15615 = !{!15613}
!15616 = !DILocation(line: 0, scope: !15614, inlinedAt: !15617)
!15617 = distinct !DILocation(line: 268, column: 3, scope: !15618, inlinedAt: !15609)
!15618 = distinct !DILexicalBlock(scope: !15619, file: !2546, line: 267, column: 35)
!15619 = distinct !DILexicalBlock(scope: !15606, file: !2546, line: 267, column: 6)
!15620 = !DILocation(line: 234, column: 2, scope: !15614, inlinedAt: !15617)
!15621 = !DILocation(line: 397, column: 2, scope: !15610)
!15622 = !DILocalVariable(name: "thread", arg: 1, scope: !15623, file: !2546, line: 250, type: !2441)
!15623 = distinct !DISubprogram(name: "queue_thread", scope: !2546, file: !2546, line: 250, type: !15395, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15624)
!15624 = !{!15622}
!15625 = !DILocation(line: 0, scope: !15623, inlinedAt: !15626)
!15626 = distinct !DILocation(line: 398, column: 2, scope: !15598)
!15627 = !DILocation(line: 252, column: 15, scope: !15623, inlinedAt: !15626)
!15628 = !DILocation(line: 252, column: 28, scope: !15623, inlinedAt: !15626)
!15629 = !DILocalVariable(name: "thread", arg: 1, scope: !15630, file: !2546, line: 227, type: !2441)
!15630 = distinct !DISubprogram(name: "runq_add", scope: !2546, file: !2546, line: 227, type: !15395, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15631)
!15631 = !{!15629}
!15632 = !DILocation(line: 0, scope: !15630, inlinedAt: !15633)
!15633 = distinct !DILocation(line: 254, column: 3, scope: !15634, inlinedAt: !15626)
!15634 = distinct !DILexicalBlock(scope: !15635, file: !2546, line: 253, column: 35)
!15635 = distinct !DILexicalBlock(scope: !15623, file: !2546, line: 253, column: 6)
!15636 = !DILocalVariable(name: "pq", arg: 1, scope: !15637, file: !2546, line: 181, type: !15640)
!15637 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2546, file: !2546, line: 181, type: !15638, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15641)
!15638 = !DISubroutineType(types: !15639)
!15639 = !{null, !15640, !2441}
!15640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 32)
!15641 = !{!15636, !15642, !15643}
!15642 = !DILocalVariable(name: "thread", arg: 2, scope: !15637, file: !2546, line: 182, type: !2441)
!15643 = !DILocalVariable(name: "t", scope: !15637, file: !2546, line: 184, type: !2441)
!15644 = !DILocation(line: 0, scope: !15637, inlinedAt: !15645)
!15645 = distinct !DILocation(line: 229, column: 2, scope: !15630, inlinedAt: !15633)
!15646 = !DILocation(line: 188, column: 2, scope: !15647, inlinedAt: !15645)
!15647 = distinct !DILexicalBlock(scope: !15637, file: !2546, line: 188, column: 2)
!15648 = !DILocation(line: 188, column: 2, scope: !15649, inlinedAt: !15645)
!15649 = distinct !DILexicalBlock(scope: !15647, file: !2546, line: 188, column: 2)
!15650 = !DILocation(line: 0, scope: !15647, inlinedAt: !15645)
!15651 = !DILocation(line: 189, column: 7, scope: !15652, inlinedAt: !15645)
!15652 = distinct !DILexicalBlock(scope: !15653, file: !2546, line: 189, column: 7)
!15653 = distinct !DILexicalBlock(scope: !15649, file: !2546, line: 188, column: 56)
!15654 = !DILocation(line: 189, column: 35, scope: !15652, inlinedAt: !15645)
!15655 = !DILocation(line: 189, column: 7, scope: !15653, inlinedAt: !15645)
!15656 = !DILocation(line: 191, column: 21, scope: !15657, inlinedAt: !15645)
!15657 = distinct !DILexicalBlock(scope: !15652, file: !2546, line: 189, column: 40)
!15658 = !DILocation(line: 190, column: 4, scope: !15657, inlinedAt: !15645)
!15659 = !DILocation(line: 192, column: 4, scope: !15657, inlinedAt: !15645)
!15660 = distinct !{!15660, !15646, !15661}
!15661 = !DILocation(line: 194, column: 2, scope: !15647, inlinedAt: !15645)
!15662 = !DILocation(line: 196, column: 37, scope: !15637, inlinedAt: !15645)
!15663 = !DILocation(line: 196, column: 2, scope: !15637, inlinedAt: !15645)
!15664 = !DILocation(line: 197, column: 1, scope: !15637, inlinedAt: !15645)
!15665 = !DILocation(line: 399, column: 25, scope: !15598)
!15666 = !DILocation(line: 399, column: 22, scope: !15598)
!15667 = !DILocation(line: 399, column: 2, scope: !15598)
!15668 = !DILocation(line: 400, column: 1, scope: !15598)
!15669 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13967, file: !13967, line: 136, type: !15555, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15670)
!15670 = !{!15671}
!15671 = !DILocalVariable(name: "thread", arg: 1, scope: !15669, file: !13967, line: 136, type: !2441)
!15672 = !DILocation(line: 0, scope: !15669)
!15673 = !DILocation(line: 138, column: 9, scope: !15669)
!15674 = !DILocation(line: 138, column: 2, scope: !15669)
!15675 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2546, file: !2546, line: 1137, type: !15638, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15676)
!15676 = !{!15677, !15678}
!15677 = !DILocalVariable(name: "pq", arg: 1, scope: !15675, file: !2546, line: 1137, type: !15640)
!15678 = !DILocalVariable(name: "thread", arg: 2, scope: !15675, file: !2546, line: 1137, type: !2441)
!15679 = !DILocation(line: 0, scope: !15675)
!15680 = !DILocation(line: 1141, column: 33, scope: !15675)
!15681 = !DILocation(line: 1141, column: 2, scope: !15675)
!15682 = !DILocation(line: 1142, column: 1, scope: !15675)
!15683 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !15684, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15686)
!15684 = !DISubroutineType(types: !15685)
!15685 = !{!2542, !15640}
!15686 = !{!15687}
!15687 = !DILocalVariable(name: "list", arg: 1, scope: !15683, file: !146, line: 294, type: !15640)
!15688 = !DILocation(line: 0, scope: !15683)
!15689 = !DILocation(line: 296, column: 9, scope: !15683)
!15690 = !DILocation(line: 296, column: 49, scope: !15683)
!15691 = !DILocation(line: 296, column: 2, scope: !15683)
!15692 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !146, file: !146, line: 443, type: !15693, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15695)
!15693 = !DISubroutineType(types: !15694)
!15694 = !{null, !2542, !2542}
!15695 = !{!15696, !15697, !15698}
!15696 = !DILocalVariable(name: "successor", arg: 1, scope: !15692, file: !146, line: 443, type: !2542)
!15697 = !DILocalVariable(name: "node", arg: 2, scope: !15692, file: !146, line: 443, type: !2542)
!15698 = !DILocalVariable(name: "prev", scope: !15692, file: !146, line: 445, type: !15699)
!15699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2542)
!15700 = !DILocation(line: 0, scope: !15692)
!15701 = !DILocation(line: 445, column: 39, scope: !15692)
!15702 = !DILocation(line: 447, column: 8, scope: !15692)
!15703 = !DILocation(line: 447, column: 13, scope: !15692)
!15704 = !DILocation(line: 448, column: 8, scope: !15692)
!15705 = !DILocation(line: 448, column: 13, scope: !15692)
!15706 = !DILocation(line: 449, column: 8, scope: !15692)
!15707 = !DILocation(line: 449, column: 13, scope: !15692)
!15708 = !DILocation(line: 450, column: 18, scope: !15692)
!15709 = !DILocation(line: 451, column: 1, scope: !15692)
!15710 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !146, file: !146, line: 341, type: !15711, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15713)
!15711 = !DISubroutineType(types: !15712)
!15712 = !{!2542, !15640, !2542}
!15713 = !{!15714, !15715}
!15714 = !DILocalVariable(name: "list", arg: 1, scope: !15710, file: !146, line: 341, type: !15640)
!15715 = !DILocalVariable(name: "node", arg: 2, scope: !15710, file: !146, line: 342, type: !2542)
!15716 = !DILocation(line: 0, scope: !15710)
!15717 = !DILocation(line: 344, column: 15, scope: !15710)
!15718 = !DILocation(line: 344, column: 9, scope: !15710)
!15719 = !DILocation(line: 344, column: 26, scope: !15710)
!15720 = !DILocation(line: 344, column: 2, scope: !15710)
!15721 = distinct !DISubprogram(name: "sys_dlist_append", scope: !146, file: !146, line: 404, type: !15722, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15724)
!15722 = !DISubroutineType(types: !15723)
!15723 = !{null, !15640, !2542}
!15724 = !{!15725, !15726, !15727}
!15725 = !DILocalVariable(name: "list", arg: 1, scope: !15721, file: !146, line: 404, type: !15640)
!15726 = !DILocalVariable(name: "node", arg: 2, scope: !15721, file: !146, line: 404, type: !2542)
!15727 = !DILocalVariable(name: "tail", scope: !15721, file: !146, line: 406, type: !15699)
!15728 = !DILocation(line: 0, scope: !15721)
!15729 = !DILocation(line: 406, column: 34, scope: !15721)
!15730 = !DILocation(line: 408, column: 8, scope: !15721)
!15731 = !DILocation(line: 408, column: 13, scope: !15721)
!15732 = !DILocation(line: 409, column: 8, scope: !15721)
!15733 = !DILocation(line: 409, column: 13, scope: !15721)
!15734 = !DILocation(line: 411, column: 8, scope: !15721)
!15735 = !DILocation(line: 411, column: 13, scope: !15721)
!15736 = !DILocation(line: 412, column: 13, scope: !15721)
!15737 = !DILocation(line: 413, column: 1, scope: !15721)
!15738 = distinct !DISubprogram(name: "update_cache", scope: !2546, file: !2546, line: 559, type: !9593, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15739)
!15739 = !{!15740, !15741}
!15740 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15738, file: !2546, line: 559, type: !103)
!15741 = !DILocalVariable(name: "thread", scope: !15738, file: !2546, line: 562, type: !2441)
!15742 = !DILocation(line: 0, scope: !15738)
!15743 = !DILocation(line: 239, column: 9, scope: !15744, inlinedAt: !15747)
!15744 = distinct !DISubprogram(name: "runq_best", scope: !2546, file: !2546, line: 237, type: !15745, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !251)
!15745 = !DISubroutineType(types: !15746)
!15746 = !{!2441}
!15747 = distinct !DILocation(line: 314, column: 28, scope: !15748, inlinedAt: !15751)
!15748 = distinct !DISubprogram(name: "next_up", scope: !2546, file: !2546, line: 312, type: !15745, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15749)
!15749 = !{!15750}
!15750 = !DILocalVariable(name: "thread", scope: !15748, file: !2546, line: 314, type: !2441)
!15751 = distinct !DILocation(line: 562, column: 28, scope: !15738)
!15752 = !DILocation(line: 0, scope: !15748, inlinedAt: !15751)
!15753 = !DILocation(line: 340, column: 17, scope: !15748, inlinedAt: !15751)
!15754 = !DILocation(line: 340, column: 9, scope: !15748, inlinedAt: !15751)
!15755 = !DILocalVariable(name: "thread", arg: 1, scope: !15756, file: !2546, line: 127, type: !2441)
!15756 = distinct !DISubprogram(name: "should_preempt", scope: !2546, file: !2546, line: 127, type: !15757, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15759)
!15757 = !DISubroutineType(types: !15758)
!15758 = !{!131, !2441, !103}
!15759 = !{!15755, !15760}
!15760 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15756, file: !2546, line: 128, type: !103)
!15761 = !DILocation(line: 0, scope: !15756, inlinedAt: !15762)
!15762 = distinct !DILocation(line: 564, column: 6, scope: !15763)
!15763 = distinct !DILexicalBlock(scope: !15738, file: !2546, line: 564, column: 6)
!15764 = !DILocation(line: 133, column: 17, scope: !15765, inlinedAt: !15762)
!15765 = distinct !DILexicalBlock(scope: !15756, file: !2546, line: 133, column: 6)
!15766 = !DILocation(line: 0, scope: !15763)
!15767 = !DILocation(line: 133, column: 6, scope: !15756, inlinedAt: !15762)
!15768 = !DILocation(line: 140, column: 6, scope: !15769, inlinedAt: !15762)
!15769 = distinct !DILexicalBlock(scope: !15756, file: !2546, line: 140, column: 6)
!15770 = !DILocation(line: 140, column: 6, scope: !15756, inlinedAt: !15762)
!15771 = !DILocation(line: 150, column: 9, scope: !15772, inlinedAt: !15762)
!15772 = distinct !DILexicalBlock(scope: !15756, file: !2546, line: 149, column: 6)
!15773 = !DILocation(line: 149, column: 6, scope: !15756, inlinedAt: !15762)
!15774 = !DILocation(line: 157, column: 6, scope: !15775, inlinedAt: !15762)
!15775 = distinct !DILexicalBlock(scope: !15756, file: !2546, line: 157, column: 6)
!15776 = !DILocation(line: 564, column: 6, scope: !15738)
!15777 = !DILocation(line: 566, column: 14, scope: !15778)
!15778 = distinct !DILexicalBlock(scope: !15779, file: !2546, line: 566, column: 7)
!15779 = distinct !DILexicalBlock(scope: !15763, file: !2546, line: 564, column: 42)
!15780 = !DILocation(line: 566, column: 7, scope: !15779)
!15781 = !DILocation(line: 567, column: 4, scope: !15782)
!15782 = distinct !DILexicalBlock(scope: !15778, file: !2546, line: 566, column: 27)
!15783 = !DILocation(line: 568, column: 3, scope: !15782)
!15784 = !DILocation(line: 585, column: 1, scope: !15738)
!15785 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2546, file: !2546, line: 1144, type: !15786, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15788)
!15786 = !DISubroutineType(types: !15787)
!15787 = !{!2441, !15640}
!15788 = !{!15789, !15790, !15791}
!15789 = !DILocalVariable(name: "pq", arg: 1, scope: !15785, file: !2546, line: 1144, type: !15640)
!15790 = !DILocalVariable(name: "thread", scope: !15785, file: !2546, line: 1146, type: !2441)
!15791 = !DILocalVariable(name: "n", scope: !15785, file: !2546, line: 1147, type: !2542)
!15792 = !DILocation(line: 0, scope: !15785)
!15793 = !DILocation(line: 1147, column: 19, scope: !15785)
!15794 = !DILocation(line: 1152, column: 2, scope: !15785)
!15795 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13967, file: !13967, line: 115, type: !15555, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15796)
!15796 = !{!15797}
!15797 = !DILocalVariable(name: "thread", arg: 1, scope: !15795, file: !13967, line: 115, type: !2441)
!15798 = !DILocation(line: 0, scope: !15795)
!15799 = !DILocation(line: 117, column: 46, scope: !15795)
!15800 = !DILocation(line: 117, column: 10, scope: !15795)
!15801 = !DILocation(line: 117, column: 9, scope: !15795)
!15802 = !DILocation(line: 117, column: 2, scope: !15795)
!15803 = distinct !DISubprogram(name: "is_preempt", scope: !2546, file: !2546, line: 62, type: !15413, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15804)
!15804 = !{!15805}
!15805 = !DILocalVariable(name: "thread", arg: 1, scope: !15803, file: !2546, line: 62, type: !2441)
!15806 = !DILocation(line: 0, scope: !15803)
!15807 = !DILocation(line: 65, column: 22, scope: !15803)
!15808 = !DILocation(line: 65, column: 30, scope: !15803)
!15809 = !DILocation(line: 65, column: 2, scope: !15803)
!15810 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14360, file: !14360, line: 35, type: !15811, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15815)
!15811 = !DISubroutineType(types: !15812)
!15812 = !{!131, !15813}
!15813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15814, size: 32)
!15814 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2492)
!15815 = !{!15816}
!15816 = !DILocalVariable(name: "to", arg: 1, scope: !15810, file: !14360, line: 35, type: !15813)
!15817 = !DILocation(line: 0, scope: !15810)
!15818 = !DILocation(line: 37, column: 35, scope: !15810)
!15819 = !DILocation(line: 37, column: 10, scope: !15810)
!15820 = !DILocation(line: 37, column: 9, scope: !15810)
!15821 = !DILocation(line: 37, column: 2, scope: !15810)
!15822 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !146, file: !146, line: 225, type: !15823, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15827)
!15823 = !DISubroutineType(types: !15824)
!15824 = !{!131, !15825}
!15825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15826, size: 32)
!15826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2451)
!15827 = !{!15828}
!15828 = !DILocalVariable(name: "node", arg: 1, scope: !15822, file: !146, line: 225, type: !15825)
!15829 = !DILocation(line: 0, scope: !15822)
!15830 = !DILocation(line: 227, column: 15, scope: !15822)
!15831 = !DILocation(line: 227, column: 20, scope: !15822)
!15832 = !DILocation(line: 227, column: 2, scope: !15822)
!15833 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !146, file: !146, line: 325, type: !15711, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15834)
!15834 = !{!15835, !15836}
!15835 = !DILocalVariable(name: "list", arg: 1, scope: !15833, file: !146, line: 325, type: !15640)
!15836 = !DILocalVariable(name: "node", arg: 2, scope: !15833, file: !146, line: 326, type: !2542)
!15837 = !DILocation(line: 0, scope: !15833)
!15838 = !DILocation(line: 328, column: 24, scope: !15833)
!15839 = !DILocation(line: 328, column: 15, scope: !15833)
!15840 = !DILocation(line: 328, column: 9, scope: !15833)
!15841 = !DILocation(line: 328, column: 45, scope: !15833)
!15842 = !DILocation(line: 328, column: 2, scope: !15833)
!15843 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !15844, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15846)
!15844 = !DISubroutineType(types: !15845)
!15845 = !{!131, !15640}
!15846 = !{!15847}
!15847 = !DILocalVariable(name: "list", arg: 1, scope: !15843, file: !146, line: 266, type: !15640)
!15848 = !DILocation(line: 0, scope: !15843)
!15849 = !DILocation(line: 268, column: 15, scope: !15843)
!15850 = !DILocation(line: 268, column: 20, scope: !15843)
!15851 = !DILocation(line: 268, column: 2, scope: !15843)
!15852 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !146, file: !146, line: 496, type: !15853, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15855)
!15853 = !DISubroutineType(types: !15854)
!15854 = !{null, !2542}
!15855 = !{!15856, !15857, !15858}
!15856 = !DILocalVariable(name: "node", arg: 1, scope: !15852, file: !146, line: 496, type: !2542)
!15857 = !DILocalVariable(name: "prev", scope: !15852, file: !146, line: 498, type: !15699)
!15858 = !DILocalVariable(name: "next", scope: !15852, file: !146, line: 499, type: !15699)
!15859 = !DILocation(line: 0, scope: !15852)
!15860 = !DILocation(line: 498, column: 34, scope: !15852)
!15861 = !DILocation(line: 499, column: 34, scope: !15852)
!15862 = !DILocation(line: 501, column: 8, scope: !15852)
!15863 = !DILocation(line: 501, column: 13, scope: !15852)
!15864 = !DILocation(line: 502, column: 8, scope: !15852)
!15865 = !DILocation(line: 502, column: 13, scope: !15852)
!15866 = !DILocation(line: 503, column: 2, scope: !15852)
!15867 = !DILocation(line: 504, column: 1, scope: !15852)
!15868 = distinct !DISubprogram(name: "sys_dnode_init", scope: !146, file: !146, line: 211, type: !15853, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15869)
!15869 = !{!15870}
!15870 = !DILocalVariable(name: "node", arg: 1, scope: !15868, file: !146, line: 211, type: !2542)
!15871 = !DILocation(line: 0, scope: !15868)
!15872 = !DILocation(line: 213, column: 8, scope: !15868)
!15873 = !DILocation(line: 213, column: 13, scope: !15868)
!15874 = !DILocation(line: 214, column: 8, scope: !15868)
!15875 = !DILocation(line: 214, column: 13, scope: !15868)
!15876 = !DILocation(line: 215, column: 1, scope: !15868)
!15877 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13967, file: !13967, line: 131, type: !15878, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15880)
!15878 = !DISubroutineType(types: !15879)
!15879 = !{!131, !2441, !108}
!15880 = !{!15881, !15882}
!15881 = !DILocalVariable(name: "thread", arg: 1, scope: !15877, file: !13967, line: 131, type: !2441)
!15882 = !DILocalVariable(name: "state", arg: 2, scope: !15877, file: !13967, line: 131, type: !108)
!15883 = !DILocation(line: 0, scope: !15877)
!15884 = !DILocation(line: 133, column: 23, scope: !15877)
!15885 = !DILocation(line: 133, column: 45, scope: !15877)
!15886 = !DILocation(line: 133, column: 2, scope: !15877)
!15887 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13967, file: !13967, line: 211, type: !15247, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15888)
!15888 = !{!15889, !15890}
!15889 = !DILocalVariable(name: "prio", arg: 1, scope: !15887, file: !13967, line: 211, type: !103)
!15890 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15887, file: !13967, line: 211, type: !103)
!15891 = !DILocation(line: 0, scope: !15887)
!15892 = !DILocation(line: 213, column: 9, scope: !15887)
!15893 = !DILocation(line: 213, column: 2, scope: !15887)
!15894 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13967, file: !13967, line: 83, type: !15555, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15895)
!15895 = !{!15896}
!15896 = !DILocalVariable(name: "thread", arg: 1, scope: !15894, file: !13967, line: 83, type: !2441)
!15897 = !DILocation(line: 0, scope: !15894)
!15898 = !DILocation(line: 89, column: 16, scope: !15894)
!15899 = !DILocation(line: 89, column: 2, scope: !15894)
!15900 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13967, file: !13967, line: 206, type: !15247, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15901)
!15901 = !{!15902, !15903}
!15902 = !DILocalVariable(name: "prio1", arg: 1, scope: !15900, file: !13967, line: 206, type: !103)
!15903 = !DILocalVariable(name: "prio2", arg: 2, scope: !15900, file: !13967, line: 206, type: !103)
!15904 = !DILocation(line: 0, scope: !15900)
!15905 = !DILocation(line: 208, column: 15, scope: !15900)
!15906 = !DILocation(line: 208, column: 2, scope: !15900)
!15907 = distinct !DISubprogram(name: "z_ready_thread", scope: !2546, file: !2546, line: 635, type: !15395, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15908)
!15908 = !{!15909, !15910, !15912}
!15909 = !DILocalVariable(name: "thread", arg: 1, scope: !15907, file: !2546, line: 635, type: !2441)
!15910 = !DILocalVariable(name: "__i", scope: !15911, file: !2546, line: 637, type: !15429)
!15911 = distinct !DILexicalBlock(scope: !15907, file: !2546, line: 637, column: 2)
!15912 = !DILocalVariable(name: "__key", scope: !15911, file: !2546, line: 637, type: !15429)
!15913 = !DILocation(line: 0, scope: !15907)
!15914 = !DILocation(line: 0, scope: !15911)
!15915 = !DILocation(line: 0, scope: !15437, inlinedAt: !15916)
!15916 = distinct !DILocation(line: 637, column: 2, scope: !15911)
!15917 = !DILocation(line: 55, column: 2, scope: !15446, inlinedAt: !15918)
!15918 = distinct !DILocation(line: 145, column: 10, scope: !15437, inlinedAt: !15916)
!15919 = !DILocation(line: 0, scope: !15446, inlinedAt: !15918)
!15920 = !DILocation(line: 639, column: 4, scope: !15921)
!15921 = distinct !DILexicalBlock(scope: !15922, file: !2546, line: 638, column: 41)
!15922 = distinct !DILexicalBlock(scope: !15923, file: !2546, line: 638, column: 7)
!15923 = distinct !DILexicalBlock(scope: !15924, file: !2546, line: 637, column: 26)
!15924 = distinct !DILexicalBlock(scope: !15911, file: !2546, line: 637, column: 2)
!15925 = !DILocation(line: 0, scope: !15464, inlinedAt: !15926)
!15926 = distinct !DILocation(line: 637, column: 2, scope: !15924)
!15927 = !DILocation(line: 0, scope: !15472, inlinedAt: !15928)
!15928 = distinct !DILocation(line: 215, column: 2, scope: !15464, inlinedAt: !15926)
!15929 = !DILocation(line: 95, column: 2, scope: !15472, inlinedAt: !15928)
!15930 = !DILocation(line: 642, column: 1, scope: !15907)
!15931 = distinct !DISubprogram(name: "ready_thread", scope: !2546, file: !2546, line: 617, type: !15395, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15932)
!15932 = !{!15933}
!15933 = !DILocalVariable(name: "thread", arg: 1, scope: !15931, file: !2546, line: 617, type: !2441)
!15934 = !DILocation(line: 0, scope: !15931)
!15935 = !DILocation(line: 626, column: 7, scope: !15936)
!15936 = distinct !DILexicalBlock(scope: !15931, file: !2546, line: 626, column: 6)
!15937 = !DILocation(line: 626, column: 34, scope: !15936)
!15938 = !DILocation(line: 626, column: 37, scope: !15936)
!15939 = !DILocation(line: 626, column: 6, scope: !15931)
!15940 = !DILocation(line: 0, scope: !15623, inlinedAt: !15941)
!15941 = distinct !DILocation(line: 629, column: 3, scope: !15942)
!15942 = distinct !DILexicalBlock(scope: !15936, file: !2546, line: 626, column: 64)
!15943 = !DILocation(line: 252, column: 15, scope: !15623, inlinedAt: !15941)
!15944 = !DILocation(line: 252, column: 28, scope: !15623, inlinedAt: !15941)
!15945 = !DILocation(line: 0, scope: !15630, inlinedAt: !15946)
!15946 = distinct !DILocation(line: 254, column: 3, scope: !15634, inlinedAt: !15941)
!15947 = !DILocation(line: 0, scope: !15637, inlinedAt: !15948)
!15948 = distinct !DILocation(line: 229, column: 2, scope: !15630, inlinedAt: !15946)
!15949 = !DILocation(line: 188, column: 2, scope: !15647, inlinedAt: !15948)
!15950 = !DILocation(line: 188, column: 2, scope: !15649, inlinedAt: !15948)
!15951 = !DILocation(line: 0, scope: !15647, inlinedAt: !15948)
!15952 = !DILocation(line: 189, column: 7, scope: !15652, inlinedAt: !15948)
!15953 = !DILocation(line: 189, column: 35, scope: !15652, inlinedAt: !15948)
!15954 = !DILocation(line: 189, column: 7, scope: !15653, inlinedAt: !15948)
!15955 = !DILocation(line: 191, column: 21, scope: !15657, inlinedAt: !15948)
!15956 = !DILocation(line: 190, column: 4, scope: !15657, inlinedAt: !15948)
!15957 = !DILocation(line: 192, column: 4, scope: !15657, inlinedAt: !15948)
!15958 = distinct !{!15958, !15949, !15959}
!15959 = !DILocation(line: 194, column: 2, scope: !15647, inlinedAt: !15948)
!15960 = !DILocation(line: 196, column: 37, scope: !15637, inlinedAt: !15948)
!15961 = !DILocation(line: 196, column: 2, scope: !15637, inlinedAt: !15948)
!15962 = !DILocation(line: 197, column: 1, scope: !15637, inlinedAt: !15948)
!15963 = !DILocation(line: 630, column: 3, scope: !15942)
!15964 = !DILocation(line: 632, column: 2, scope: !15942)
!15965 = !DILocation(line: 633, column: 1, scope: !15931)
!15966 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13967, file: !13967, line: 120, type: !15555, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15967)
!15967 = !{!15968}
!15968 = !DILocalVariable(name: "thread", arg: 1, scope: !15966, file: !13967, line: 120, type: !2441)
!15969 = !DILocation(line: 0, scope: !15966)
!15970 = !DILocation(line: 122, column: 12, scope: !15966)
!15971 = !DILocation(line: 122, column: 62, scope: !15966)
!15972 = !DILocation(line: 123, column: 4, scope: !15966)
!15973 = !DILocation(line: 122, column: 2, scope: !15966)
!15974 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2546, file: !2546, line: 644, type: !15395, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15975)
!15975 = !{!15976, !15977, !15979}
!15976 = !DILocalVariable(name: "thread", arg: 1, scope: !15974, file: !2546, line: 644, type: !2441)
!15977 = !DILocalVariable(name: "__i", scope: !15978, file: !2546, line: 646, type: !15429)
!15978 = distinct !DILexicalBlock(scope: !15974, file: !2546, line: 646, column: 2)
!15979 = !DILocalVariable(name: "__key", scope: !15978, file: !2546, line: 646, type: !15429)
!15980 = !DILocation(line: 0, scope: !15974)
!15981 = !DILocation(line: 0, scope: !15978)
!15982 = !DILocation(line: 0, scope: !15437, inlinedAt: !15983)
!15983 = distinct !DILocation(line: 646, column: 2, scope: !15978)
!15984 = !DILocation(line: 55, column: 2, scope: !15446, inlinedAt: !15985)
!15985 = distinct !DILocation(line: 145, column: 10, scope: !15437, inlinedAt: !15983)
!15986 = !DILocation(line: 0, scope: !15446, inlinedAt: !15985)
!15987 = !DILocation(line: 647, column: 3, scope: !15988)
!15988 = distinct !DILexicalBlock(scope: !15989, file: !2546, line: 646, column: 26)
!15989 = distinct !DILexicalBlock(scope: !15978, file: !2546, line: 646, column: 2)
!15990 = !DILocation(line: 0, scope: !15464, inlinedAt: !15991)
!15991 = distinct !DILocation(line: 646, column: 2, scope: !15989)
!15992 = !DILocation(line: 0, scope: !15472, inlinedAt: !15993)
!15993 = distinct !DILocation(line: 215, column: 2, scope: !15464, inlinedAt: !15991)
!15994 = !DILocation(line: 95, column: 2, scope: !15472, inlinedAt: !15993)
!15995 = !DILocation(line: 649, column: 1, scope: !15974)
!15996 = distinct !DISubprogram(name: "z_sched_start", scope: !2546, file: !2546, line: 651, type: !15395, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !15997)
!15997 = !{!15998, !15999}
!15998 = !DILocalVariable(name: "thread", arg: 1, scope: !15996, file: !2546, line: 651, type: !2441)
!15999 = !DILocalVariable(name: "key", scope: !15996, file: !2546, line: 653, type: !15429)
!16000 = !DILocation(line: 0, scope: !15996)
!16001 = !DILocation(line: 0, scope: !15437, inlinedAt: !16002)
!16002 = distinct !DILocation(line: 653, column: 25, scope: !15996)
!16003 = !DILocation(line: 55, column: 2, scope: !15446, inlinedAt: !16004)
!16004 = distinct !DILocation(line: 145, column: 10, scope: !15437, inlinedAt: !16002)
!16005 = !DILocation(line: 0, scope: !15446, inlinedAt: !16004)
!16006 = !DILocation(line: 655, column: 6, scope: !16007)
!16007 = distinct !DILexicalBlock(scope: !15996, file: !2546, line: 655, column: 6)
!16008 = !DILocation(line: 655, column: 6, scope: !15996)
!16009 = !DILocation(line: 0, scope: !15464, inlinedAt: !16010)
!16010 = distinct !DILocation(line: 656, column: 3, scope: !16011)
!16011 = distinct !DILexicalBlock(scope: !16007, file: !2546, line: 655, column: 36)
!16012 = !DILocation(line: 0, scope: !15472, inlinedAt: !16013)
!16013 = distinct !DILocation(line: 215, column: 2, scope: !15464, inlinedAt: !16010)
!16014 = !DILocation(line: 95, column: 2, scope: !15472, inlinedAt: !16013)
!16015 = !DILocation(line: 657, column: 3, scope: !16011)
!16016 = !DILocation(line: 660, column: 2, scope: !15996)
!16017 = !DILocation(line: 661, column: 2, scope: !15996)
!16018 = !DILocation(line: 662, column: 2, scope: !15996)
!16019 = !DILocation(line: 663, column: 1, scope: !15996)
!16020 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13967, file: !13967, line: 126, type: !15555, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16021)
!16021 = !{!16022}
!16022 = !DILocalVariable(name: "thread", arg: 1, scope: !16020, file: !13967, line: 126, type: !2441)
!16023 = !DILocation(line: 0, scope: !16020)
!16024 = !DILocation(line: 128, column: 23, scope: !16020)
!16025 = !DILocation(line: 128, column: 36, scope: !16020)
!16026 = !DILocation(line: 128, column: 56, scope: !16020)
!16027 = !DILocation(line: 128, column: 2, scope: !16020)
!16028 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13967, file: !13967, line: 155, type: !15395, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16029)
!16029 = !{!16030}
!16030 = !DILocalVariable(name: "thread", arg: 1, scope: !16028, file: !13967, line: 155, type: !2441)
!16031 = !DILocation(line: 0, scope: !16028)
!16032 = !DILocation(line: 157, column: 15, scope: !16028)
!16033 = !DILocation(line: 157, column: 28, scope: !16028)
!16034 = !DILocation(line: 158, column: 1, scope: !16028)
!16035 = distinct !DISubprogram(name: "z_reschedule", scope: !2546, file: !2546, line: 967, type: !15465, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16036)
!16036 = !{!16037, !16038}
!16037 = !DILocalVariable(name: "lock", arg: 1, scope: !16035, file: !2546, line: 967, type: !15440)
!16038 = !DILocalVariable(name: "key", arg: 2, scope: !16035, file: !2546, line: 967, type: !15429)
!16039 = !DILocation(line: 0, scope: !16035)
!16040 = !DILocation(line: 969, column: 6, scope: !16041)
!16041 = distinct !DILexicalBlock(scope: !16035, file: !2546, line: 969, column: 6)
!16042 = !DILocation(line: 969, column: 23, scope: !16041)
!16043 = !DILocation(line: 969, column: 26, scope: !16041)
!16044 = !DILocation(line: 969, column: 6, scope: !16035)
!16045 = !DILocalVariable(name: "key", arg: 2, scope: !16046, file: !14071, line: 193, type: !15429)
!16046 = distinct !DISubprogram(name: "z_swap", scope: !14071, file: !14071, line: 193, type: !16047, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16049)
!16047 = !DISubroutineType(types: !16048)
!16048 = !{!103, !15440, !15429}
!16049 = !{!16050, !16045}
!16050 = !DILocalVariable(name: "lock", arg: 1, scope: !16046, file: !14071, line: 193, type: !15440)
!16051 = !DILocation(line: 0, scope: !16046, inlinedAt: !16052)
!16052 = distinct !DILocation(line: 970, column: 3, scope: !16053)
!16053 = distinct !DILexicalBlock(scope: !16041, file: !2546, line: 969, column: 39)
!16054 = !DILocation(line: 196, column: 9, scope: !16046, inlinedAt: !16052)
!16055 = !DILocation(line: 971, column: 2, scope: !16053)
!16056 = !DILocation(line: 0, scope: !15464, inlinedAt: !16057)
!16057 = distinct !DILocation(line: 972, column: 3, scope: !16058)
!16058 = distinct !DILexicalBlock(scope: !16041, file: !2546, line: 971, column: 9)
!16059 = !DILocation(line: 0, scope: !15472, inlinedAt: !16060)
!16060 = distinct !DILocation(line: 215, column: 2, scope: !15464, inlinedAt: !16057)
!16061 = !DILocation(line: 95, column: 2, scope: !15472, inlinedAt: !16060)
!16062 = !DILocation(line: 975, column: 1, scope: !16035)
!16063 = distinct !DISubprogram(name: "resched", scope: !2546, file: !2546, line: 940, type: !16064, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16066)
!16064 = !DISubroutineType(types: !16065)
!16065 = !{!131, !108}
!16066 = !{!16067}
!16067 = !DILocalVariable(name: "key", arg: 1, scope: !16063, file: !2546, line: 940, type: !108)
!16068 = !DILocation(line: 0, scope: !16063)
!16069 = !DILocalVariable(name: "key", arg: 1, scope: !16070, file: !7016, line: 112, type: !32)
!16070 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !7016, file: !7016, line: 112, type: !16071, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16073)
!16071 = !DISubroutineType(types: !16072)
!16072 = !{!131, !32}
!16073 = !{!16069}
!16074 = !DILocation(line: 0, scope: !16070, inlinedAt: !16075)
!16075 = distinct !DILocation(line: 946, column: 9, scope: !16063)
!16076 = !DILocation(line: 115, column: 13, scope: !16070, inlinedAt: !16075)
!16077 = !DILocation(line: 946, column: 32, scope: !16063)
!16078 = !DILocation(line: 1031, column: 3, scope: !16079, inlinedAt: !16082)
!16079 = distinct !DISubprogram(name: "__get_IPSR", scope: !7334, file: !7334, line: 1027, type: !3620, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16080)
!16080 = !{!16081}
!16081 = !DILocalVariable(name: "result", scope: !16079, file: !7334, line: 1029, type: !108)
!16082 = distinct !DILocation(line: 48, column: 10, scope: !16083, inlinedAt: !16084)
!16083 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8350, file: !8350, line: 46, type: !8351, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !251)
!16084 = distinct !DILocation(line: 946, column: 36, scope: !16063)
!16085 = !{i64 2957096}
!16086 = !DILocation(line: 0, scope: !16079, inlinedAt: !16082)
!16087 = !DILocation(line: 48, column: 9, scope: !16083, inlinedAt: !16084)
!16088 = !DILocation(line: 946, column: 2, scope: !16063)
!16089 = distinct !DISubprogram(name: "need_swap", scope: !2546, file: !2546, line: 953, type: !8351, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16090)
!16090 = !{!16091}
!16091 = !DILocalVariable(name: "new_thread", scope: !16089, file: !2546, line: 959, type: !2441)
!16092 = !DILocation(line: 962, column: 31, scope: !16089)
!16093 = !DILocation(line: 0, scope: !16089)
!16094 = !DILocation(line: 963, column: 23, scope: !16089)
!16095 = !DILocation(line: 963, column: 20, scope: !16089)
!16096 = !DILocation(line: 963, column: 2, scope: !16089)
!16097 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14071, file: !14071, line: 181, type: !7344, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16098)
!16098 = !{!16099, !16100}
!16099 = !DILocalVariable(name: "key", arg: 1, scope: !16097, file: !14071, line: 181, type: !32)
!16100 = !DILocalVariable(name: "ret", scope: !16097, file: !14071, line: 183, type: !103)
!16101 = !DILocation(line: 0, scope: !16097)
!16102 = !DILocation(line: 185, column: 8, scope: !16097)
!16103 = !DILocation(line: 186, column: 2, scope: !16097)
!16104 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2546, file: !2546, line: 665, type: !15395, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16105)
!16105 = !{!16106, !16107, !16109}
!16106 = !DILocalVariable(name: "thread", arg: 1, scope: !16104, file: !2546, line: 665, type: !2441)
!16107 = !DILocalVariable(name: "__i", scope: !16108, file: !2546, line: 671, type: !15429)
!16108 = distinct !DILexicalBlock(scope: !16104, file: !2546, line: 671, column: 2)
!16109 = !DILocalVariable(name: "__key", scope: !16108, file: !2546, line: 671, type: !15429)
!16110 = !DILocation(line: 0, scope: !16104)
!16111 = !DILocation(line: 669, column: 8, scope: !16104)
!16112 = !DILocation(line: 0, scope: !16108)
!16113 = !DILocation(line: 0, scope: !15437, inlinedAt: !16114)
!16114 = distinct !DILocation(line: 671, column: 2, scope: !16108)
!16115 = !DILocation(line: 55, column: 2, scope: !15446, inlinedAt: !16116)
!16116 = distinct !DILocation(line: 145, column: 10, scope: !15437, inlinedAt: !16114)
!16117 = !DILocation(line: 0, scope: !15446, inlinedAt: !16116)
!16118 = !DILocation(line: 672, column: 7, scope: !16119)
!16119 = distinct !DILexicalBlock(scope: !16120, file: !2546, line: 672, column: 7)
!16120 = distinct !DILexicalBlock(scope: !16121, file: !2546, line: 671, column: 26)
!16121 = distinct !DILexicalBlock(scope: !16108, file: !2546, line: 671, column: 2)
!16122 = !DILocation(line: 672, column: 7, scope: !16120)
!16123 = !DILocation(line: 0, scope: !15606, inlinedAt: !16124)
!16124 = distinct !DILocation(line: 673, column: 4, scope: !16125)
!16125 = distinct !DILexicalBlock(scope: !16119, file: !2546, line: 672, column: 35)
!16126 = !DILocation(line: 266, column: 15, scope: !15606, inlinedAt: !16124)
!16127 = !DILocation(line: 266, column: 28, scope: !15606, inlinedAt: !16124)
!16128 = !DILocation(line: 0, scope: !15614, inlinedAt: !16129)
!16129 = distinct !DILocation(line: 268, column: 3, scope: !15618, inlinedAt: !16124)
!16130 = !DILocation(line: 234, column: 2, scope: !15614, inlinedAt: !16129)
!16131 = !DILocation(line: 674, column: 3, scope: !16125)
!16132 = !DILocation(line: 675, column: 3, scope: !16120)
!16133 = !DILocation(line: 676, column: 26, scope: !16120)
!16134 = !DILocation(line: 676, column: 23, scope: !16120)
!16135 = !DILocation(line: 676, column: 3, scope: !16120)
!16136 = !DILocation(line: 0, scope: !15464, inlinedAt: !16137)
!16137 = distinct !DILocation(line: 671, column: 2, scope: !16121)
!16138 = !DILocation(line: 0, scope: !15472, inlinedAt: !16139)
!16139 = distinct !DILocation(line: 215, column: 2, scope: !15464, inlinedAt: !16137)
!16140 = !DILocation(line: 95, column: 2, scope: !15472, inlinedAt: !16139)
!16141 = !DILocation(line: 679, column: 16, scope: !16142)
!16142 = distinct !DILexicalBlock(scope: !16104, file: !2546, line: 679, column: 6)
!16143 = !DILocation(line: 679, column: 13, scope: !16142)
!16144 = !DILocation(line: 679, column: 6, scope: !16104)
!16145 = !DILocation(line: 680, column: 3, scope: !16146)
!16146 = distinct !DILexicalBlock(scope: !16142, file: !2546, line: 679, column: 26)
!16147 = !DILocation(line: 681, column: 2, scope: !16146)
!16148 = !DILocation(line: 684, column: 1, scope: !16104)
!16149 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14360, file: !14360, line: 52, type: !15413, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16150)
!16150 = !{!16151}
!16151 = !DILocalVariable(name: "thread", arg: 1, scope: !16149, file: !14360, line: 52, type: !2441)
!16152 = !DILocation(line: 0, scope: !16149)
!16153 = !DILocation(line: 54, column: 39, scope: !16149)
!16154 = !DILocation(line: 54, column: 9, scope: !16149)
!16155 = !DILocation(line: 54, column: 2, scope: !16149)
!16156 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13967, file: !13967, line: 141, type: !15395, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16157)
!16157 = !{!16158}
!16158 = !DILocalVariable(name: "thread", arg: 1, scope: !16156, file: !13967, line: 141, type: !2441)
!16159 = !DILocation(line: 0, scope: !16156)
!16160 = !DILocation(line: 143, column: 15, scope: !16156)
!16161 = !DILocation(line: 143, column: 28, scope: !16156)
!16162 = !DILocation(line: 146, column: 1, scope: !16156)
!16163 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13967, file: !13967, line: 73, type: !334, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !251)
!16164 = !DILocation(line: 55, column: 2, scope: !15446, inlinedAt: !16165)
!16165 = distinct !DILocation(line: 75, column: 30, scope: !16163)
!16166 = !DILocation(line: 0, scope: !15446, inlinedAt: !16165)
!16167 = !DILocation(line: 75, column: 9, scope: !16163)
!16168 = !DILocation(line: 76, column: 1, scope: !16163)
!16169 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2546, file: !2546, line: 977, type: !7423, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16170)
!16170 = !{!16171}
!16171 = !DILocalVariable(name: "key", arg: 1, scope: !16169, file: !2546, line: 977, type: !108)
!16172 = !DILocation(line: 0, scope: !16169)
!16173 = !DILocation(line: 979, column: 6, scope: !16174)
!16174 = distinct !DILexicalBlock(scope: !16169, file: !2546, line: 979, column: 6)
!16175 = !DILocation(line: 979, column: 6, scope: !16169)
!16176 = !DILocation(line: 980, column: 3, scope: !16177)
!16177 = distinct !DILexicalBlock(scope: !16174, file: !2546, line: 979, column: 20)
!16178 = !DILocation(line: 981, column: 2, scope: !16177)
!16179 = !DILocation(line: 0, scope: !15472, inlinedAt: !16180)
!16180 = distinct !DILocation(line: 982, column: 3, scope: !16181)
!16181 = distinct !DILexicalBlock(scope: !16174, file: !2546, line: 981, column: 9)
!16182 = !DILocation(line: 95, column: 2, scope: !15472, inlinedAt: !16180)
!16183 = !DILocation(line: 985, column: 1, scope: !16169)
!16184 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2546, file: !2546, line: 695, type: !15395, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16185)
!16185 = !{!16186, !16187}
!16186 = !DILocalVariable(name: "thread", arg: 1, scope: !16184, file: !2546, line: 695, type: !2441)
!16187 = !DILocalVariable(name: "key", scope: !16184, file: !2546, line: 699, type: !15429)
!16188 = !DILocation(line: 0, scope: !16184)
!16189 = !DILocation(line: 0, scope: !15437, inlinedAt: !16190)
!16190 = distinct !DILocation(line: 699, column: 25, scope: !16184)
!16191 = !DILocation(line: 55, column: 2, scope: !15446, inlinedAt: !16192)
!16192 = distinct !DILocation(line: 145, column: 10, scope: !15437, inlinedAt: !16190)
!16193 = !DILocation(line: 0, scope: !15446, inlinedAt: !16192)
!16194 = !DILocation(line: 702, column: 7, scope: !16195)
!16195 = distinct !DILexicalBlock(scope: !16184, file: !2546, line: 702, column: 6)
!16196 = !DILocation(line: 702, column: 6, scope: !16184)
!16197 = !DILocation(line: 0, scope: !15464, inlinedAt: !16198)
!16198 = distinct !DILocation(line: 703, column: 3, scope: !16199)
!16199 = distinct !DILexicalBlock(scope: !16195, file: !2546, line: 702, column: 38)
!16200 = !DILocation(line: 0, scope: !15472, inlinedAt: !16201)
!16201 = distinct !DILocation(line: 215, column: 2, scope: !15464, inlinedAt: !16198)
!16202 = !DILocation(line: 95, column: 2, scope: !15472, inlinedAt: !16201)
!16203 = !DILocation(line: 704, column: 3, scope: !16199)
!16204 = !DILocation(line: 707, column: 2, scope: !16184)
!16205 = !DILocation(line: 708, column: 2, scope: !16184)
!16206 = !DILocation(line: 710, column: 2, scope: !16184)
!16207 = !DILocation(line: 713, column: 1, scope: !16184)
!16208 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13967, file: !13967, line: 96, type: !15555, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16209)
!16209 = !{!16210}
!16210 = !DILocalVariable(name: "thread", arg: 1, scope: !16208, file: !13967, line: 96, type: !2441)
!16211 = !DILocation(line: 0, scope: !16208)
!16212 = !DILocation(line: 98, column: 23, scope: !16208)
!16213 = !DILocation(line: 98, column: 36, scope: !16208)
!16214 = !DILocation(line: 98, column: 57, scope: !16208)
!16215 = !DILocation(line: 98, column: 2, scope: !16208)
!16216 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13967, file: !13967, line: 148, type: !15395, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16217)
!16217 = !{!16218}
!16218 = !DILocalVariable(name: "thread", arg: 1, scope: !16216, file: !13967, line: 148, type: !2441)
!16219 = !DILocation(line: 0, scope: !16216)
!16220 = !DILocation(line: 150, column: 15, scope: !16216)
!16221 = !DILocation(line: 150, column: 28, scope: !16216)
!16222 = !DILocation(line: 153, column: 1, scope: !16216)
!16223 = distinct !DISubprogram(name: "z_pend_thread", scope: !2546, file: !2546, line: 770, type: !16224, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16230)
!16224 = !DISubroutineType(types: !16225)
!16225 = !{null, !2441, !2472, !16226}
!16226 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !16227)
!16227 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !16228)
!16228 = !{!16229}
!16229 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16227, file: !105, line: 66, baseType: !104, size: 64)
!16230 = !{!16231, !16232, !16233, !16234, !16236}
!16231 = !DILocalVariable(name: "thread", arg: 1, scope: !16223, file: !2546, line: 770, type: !2441)
!16232 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16223, file: !2546, line: 770, type: !2472)
!16233 = !DILocalVariable(name: "timeout", arg: 3, scope: !16223, file: !2546, line: 771, type: !16226)
!16234 = !DILocalVariable(name: "__i", scope: !16235, file: !2546, line: 774, type: !15429)
!16235 = distinct !DILexicalBlock(scope: !16223, file: !2546, line: 774, column: 2)
!16236 = !DILocalVariable(name: "__key", scope: !16235, file: !2546, line: 774, type: !15429)
!16237 = !DILocation(line: 0, scope: !16223)
!16238 = !DILocation(line: 0, scope: !16235)
!16239 = !DILocation(line: 0, scope: !15437, inlinedAt: !16240)
!16240 = distinct !DILocation(line: 774, column: 2, scope: !16235)
!16241 = !DILocation(line: 55, column: 2, scope: !15446, inlinedAt: !16242)
!16242 = distinct !DILocation(line: 145, column: 10, scope: !15437, inlinedAt: !16240)
!16243 = !DILocation(line: 0, scope: !15446, inlinedAt: !16242)
!16244 = !DILocation(line: 775, column: 3, scope: !16245)
!16245 = distinct !DILexicalBlock(scope: !16246, file: !2546, line: 774, column: 26)
!16246 = distinct !DILexicalBlock(scope: !16235, file: !2546, line: 774, column: 2)
!16247 = !DILocation(line: 0, scope: !15464, inlinedAt: !16248)
!16248 = distinct !DILocation(line: 774, column: 2, scope: !16246)
!16249 = !DILocation(line: 0, scope: !15472, inlinedAt: !16250)
!16250 = distinct !DILocation(line: 215, column: 2, scope: !15464, inlinedAt: !16248)
!16251 = !DILocation(line: 95, column: 2, scope: !15472, inlinedAt: !16250)
!16252 = !DILocation(line: 777, column: 1, scope: !16223)
!16253 = distinct !DISubprogram(name: "pend_locked", scope: !2546, file: !2546, line: 760, type: !16224, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16254)
!16254 = !{!16255, !16256, !16257}
!16255 = !DILocalVariable(name: "thread", arg: 1, scope: !16253, file: !2546, line: 760, type: !2441)
!16256 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16253, file: !2546, line: 760, type: !2472)
!16257 = !DILocalVariable(name: "timeout", arg: 3, scope: !16253, file: !2546, line: 761, type: !16226)
!16258 = !DILocation(line: 0, scope: !16253)
!16259 = !DILocation(line: 766, column: 2, scope: !16253)
!16260 = !DILocation(line: 767, column: 2, scope: !16253)
!16261 = !DILocation(line: 768, column: 1, scope: !16253)
!16262 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2546, file: !2546, line: 740, type: !16263, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16265)
!16263 = !DISubroutineType(types: !16264)
!16264 = !{null, !2441, !2472}
!16265 = !{!16266, !16267}
!16266 = !DILocalVariable(name: "thread", arg: 1, scope: !16262, file: !2546, line: 740, type: !2441)
!16267 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16262, file: !2546, line: 740, type: !2472)
!16268 = !DILocation(line: 0, scope: !16262)
!16269 = !DILocation(line: 742, column: 2, scope: !16262)
!16270 = !DILocation(line: 743, column: 2, scope: !16262)
!16271 = !DILocation(line: 747, column: 13, scope: !16272)
!16272 = distinct !DILexicalBlock(scope: !16262, file: !2546, line: 747, column: 6)
!16273 = !DILocation(line: 747, column: 6, scope: !16262)
!16274 = !DILocation(line: 748, column: 16, scope: !16275)
!16275 = distinct !DILexicalBlock(scope: !16272, file: !2546, line: 747, column: 22)
!16276 = !DILocation(line: 748, column: 26, scope: !16275)
!16277 = !DILocation(line: 749, column: 28, scope: !16275)
!16278 = !DILocation(line: 0, scope: !15637, inlinedAt: !16279)
!16279 = distinct !DILocation(line: 749, column: 3, scope: !16275)
!16280 = !DILocation(line: 188, column: 2, scope: !15647, inlinedAt: !16279)
!16281 = !DILocation(line: 188, column: 2, scope: !15649, inlinedAt: !16279)
!16282 = !DILocation(line: 0, scope: !15647, inlinedAt: !16279)
!16283 = !DILocation(line: 189, column: 7, scope: !15652, inlinedAt: !16279)
!16284 = !DILocation(line: 189, column: 35, scope: !15652, inlinedAt: !16279)
!16285 = !DILocation(line: 189, column: 7, scope: !15653, inlinedAt: !16279)
!16286 = !DILocation(line: 191, column: 21, scope: !15657, inlinedAt: !16279)
!16287 = !DILocation(line: 190, column: 4, scope: !15657, inlinedAt: !16279)
!16288 = !DILocation(line: 192, column: 4, scope: !15657, inlinedAt: !16279)
!16289 = distinct !{!16289, !16280, !16290}
!16290 = !DILocation(line: 194, column: 2, scope: !15647, inlinedAt: !16279)
!16291 = !DILocation(line: 196, column: 37, scope: !15637, inlinedAt: !16279)
!16292 = !DILocation(line: 196, column: 2, scope: !15637, inlinedAt: !16279)
!16293 = !DILocation(line: 197, column: 1, scope: !15637, inlinedAt: !16279)
!16294 = !DILocation(line: 751, column: 1, scope: !16262)
!16295 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2546, file: !2546, line: 753, type: !16296, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16298)
!16296 = !DISubroutineType(types: !16297)
!16297 = !{null, !2441, !16226}
!16298 = !{!16299, !16300}
!16299 = !DILocalVariable(name: "thread", arg: 1, scope: !16295, file: !2546, line: 753, type: !2441)
!16300 = !DILocalVariable(name: "timeout", arg: 2, scope: !16295, file: !2546, line: 753, type: !16226)
!16301 = !DILocation(line: 0, scope: !16295)
!16302 = !DILocation(line: 755, column: 7, scope: !16303)
!16303 = distinct !DILexicalBlock(scope: !16295, file: !2546, line: 755, column: 6)
!16304 = !DILocation(line: 755, column: 6, scope: !16295)
!16305 = !DILocation(line: 756, column: 3, scope: !16306)
!16306 = distinct !DILexicalBlock(scope: !16303, file: !2546, line: 755, column: 41)
!16307 = !DILocation(line: 757, column: 2, scope: !16306)
!16308 = !DILocation(line: 758, column: 1, scope: !16295)
!16309 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14360, file: !14360, line: 47, type: !16296, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16310)
!16310 = !{!16311, !16312}
!16311 = !DILocalVariable(name: "thread", arg: 1, scope: !16309, file: !14360, line: 47, type: !2441)
!16312 = !DILocalVariable(name: "ticks", arg: 2, scope: !16309, file: !14360, line: 47, type: !16226)
!16313 = !DILocation(line: 0, scope: !16309)
!16314 = !DILocation(line: 49, column: 30, scope: !16309)
!16315 = !DILocation(line: 49, column: 2, scope: !16309)
!16316 = !DILocation(line: 50, column: 1, scope: !16309)
!16317 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2546, file: !2546, line: 795, type: !2498, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16318)
!16318 = !{!16319, !16320, !16321, !16323, !16324}
!16319 = !DILocalVariable(name: "timeout", arg: 1, scope: !16317, file: !2546, line: 795, type: !2500)
!16320 = !DILocalVariable(name: "thread", scope: !16317, file: !2546, line: 797, type: !2441)
!16321 = !DILocalVariable(name: "__i", scope: !16322, file: !2546, line: 800, type: !15429)
!16322 = distinct !DILexicalBlock(scope: !16317, file: !2546, line: 800, column: 2)
!16323 = !DILocalVariable(name: "__key", scope: !16322, file: !2546, line: 800, type: !15429)
!16324 = !DILocalVariable(name: "killed", scope: !16325, file: !2546, line: 801, type: !131)
!16325 = distinct !DILexicalBlock(scope: !16326, file: !2546, line: 800, column: 26)
!16326 = distinct !DILexicalBlock(scope: !16322, file: !2546, line: 800, column: 2)
!16327 = !DILocation(line: 0, scope: !16317)
!16328 = !DILocation(line: 797, column: 28, scope: !16317)
!16329 = !DILocation(line: 0, scope: !16322)
!16330 = !DILocation(line: 0, scope: !15437, inlinedAt: !16331)
!16331 = distinct !DILocation(line: 800, column: 2, scope: !16322)
!16332 = !DILocation(line: 55, column: 2, scope: !15446, inlinedAt: !16333)
!16333 = distinct !DILocation(line: 145, column: 10, scope: !15437, inlinedAt: !16331)
!16334 = !DILocation(line: 0, scope: !15446, inlinedAt: !16333)
!16335 = !DILocation(line: 801, column: 27, scope: !16325)
!16336 = !DILocation(line: 801, column: 32, scope: !16325)
!16337 = !DILocation(line: 801, column: 61, scope: !16325)
!16338 = !DILocation(line: 0, scope: !16325)
!16339 = !DILocation(line: 804, column: 7, scope: !16325)
!16340 = !DILocation(line: 805, column: 21, scope: !16341)
!16341 = distinct !DILexicalBlock(scope: !16342, file: !2546, line: 805, column: 8)
!16342 = distinct !DILexicalBlock(scope: !16343, file: !2546, line: 804, column: 16)
!16343 = distinct !DILexicalBlock(scope: !16325, file: !2546, line: 804, column: 7)
!16344 = !DILocation(line: 805, column: 31, scope: !16341)
!16345 = !DILocation(line: 805, column: 8, scope: !16342)
!16346 = !DILocation(line: 806, column: 5, scope: !16347)
!16347 = distinct !DILexicalBlock(scope: !16341, file: !2546, line: 805, column: 40)
!16348 = !DILocation(line: 807, column: 4, scope: !16347)
!16349 = !DILocation(line: 808, column: 4, scope: !16342)
!16350 = !DILocation(line: 809, column: 4, scope: !16342)
!16351 = !DILocation(line: 810, column: 4, scope: !16342)
!16352 = !DILocation(line: 811, column: 3, scope: !16342)
!16353 = !DILocation(line: 0, scope: !15464, inlinedAt: !16354)
!16354 = distinct !DILocation(line: 800, column: 2, scope: !16326)
!16355 = !DILocation(line: 0, scope: !15472, inlinedAt: !16356)
!16356 = distinct !DILocation(line: 215, column: 2, scope: !15464, inlinedAt: !16354)
!16357 = !DILocation(line: 95, column: 2, scope: !15472, inlinedAt: !16356)
!16358 = !DILocation(line: 813, column: 1, scope: !16317)
!16359 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2546, file: !2546, line: 779, type: !15395, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16360)
!16360 = !{!16361}
!16361 = !DILocalVariable(name: "thread", arg: 1, scope: !16359, file: !2546, line: 779, type: !2441)
!16362 = !DILocation(line: 0, scope: !16359)
!16363 = !DILocation(line: 781, column: 2, scope: !16359)
!16364 = !DILocation(line: 782, column: 2, scope: !16359)
!16365 = !DILocation(line: 783, column: 15, scope: !16359)
!16366 = !DILocation(line: 783, column: 25, scope: !16359)
!16367 = !DILocation(line: 784, column: 1, scope: !16359)
!16368 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13967, file: !13967, line: 165, type: !15395, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16369)
!16369 = !{!16370}
!16370 = !DILocalVariable(name: "thread", arg: 1, scope: !16368, file: !13967, line: 165, type: !2441)
!16371 = !DILocation(line: 0, scope: !16368)
!16372 = !DILocation(line: 167, column: 15, scope: !16368)
!16373 = !DILocation(line: 167, column: 28, scope: !16368)
!16374 = !DILocation(line: 168, column: 1, scope: !16368)
!16375 = distinct !DISubprogram(name: "unready_thread", scope: !2546, file: !2546, line: 731, type: !15395, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16376)
!16376 = !{!16377}
!16377 = !DILocalVariable(name: "thread", arg: 1, scope: !16375, file: !2546, line: 731, type: !2441)
!16378 = !DILocation(line: 0, scope: !16375)
!16379 = !DILocation(line: 733, column: 6, scope: !16380)
!16380 = distinct !DILexicalBlock(scope: !16375, file: !2546, line: 733, column: 6)
!16381 = !DILocation(line: 733, column: 6, scope: !16375)
!16382 = !DILocation(line: 0, scope: !15606, inlinedAt: !16383)
!16383 = distinct !DILocation(line: 734, column: 3, scope: !16384)
!16384 = distinct !DILexicalBlock(scope: !16380, file: !2546, line: 733, column: 34)
!16385 = !DILocation(line: 266, column: 15, scope: !15606, inlinedAt: !16383)
!16386 = !DILocation(line: 266, column: 28, scope: !15606, inlinedAt: !16383)
!16387 = !DILocation(line: 0, scope: !15614, inlinedAt: !16388)
!16388 = distinct !DILocation(line: 268, column: 3, scope: !15618, inlinedAt: !16383)
!16389 = !DILocation(line: 234, column: 2, scope: !15614, inlinedAt: !16388)
!16390 = !DILocation(line: 735, column: 2, scope: !16384)
!16391 = !DILocation(line: 736, column: 25, scope: !16375)
!16392 = !DILocation(line: 736, column: 22, scope: !16375)
!16393 = !DILocation(line: 736, column: 2, scope: !16375)
!16394 = !DILocation(line: 737, column: 1, scope: !16375)
!16395 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13967, file: !13967, line: 160, type: !15395, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16396)
!16396 = !{!16397}
!16397 = !DILocalVariable(name: "thread", arg: 1, scope: !16395, file: !13967, line: 160, type: !2441)
!16398 = !DILocation(line: 0, scope: !16395)
!16399 = !DILocation(line: 162, column: 15, scope: !16395)
!16400 = !DILocation(line: 162, column: 28, scope: !16395)
!16401 = !DILocation(line: 163, column: 1, scope: !16395)
!16402 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2546, file: !2546, line: 786, type: !15395, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16403)
!16403 = !{!16404, !16405, !16407}
!16404 = !DILocalVariable(name: "thread", arg: 1, scope: !16402, file: !2546, line: 786, type: !2441)
!16405 = !DILocalVariable(name: "__i", scope: !16406, file: !2546, line: 788, type: !15429)
!16406 = distinct !DILexicalBlock(scope: !16402, file: !2546, line: 788, column: 2)
!16407 = !DILocalVariable(name: "__key", scope: !16406, file: !2546, line: 788, type: !15429)
!16408 = !DILocation(line: 0, scope: !16402)
!16409 = !DILocation(line: 0, scope: !16406)
!16410 = !DILocation(line: 0, scope: !15437, inlinedAt: !16411)
!16411 = distinct !DILocation(line: 788, column: 2, scope: !16406)
!16412 = !DILocation(line: 55, column: 2, scope: !15446, inlinedAt: !16413)
!16413 = distinct !DILocation(line: 145, column: 10, scope: !15437, inlinedAt: !16411)
!16414 = !DILocation(line: 0, scope: !15446, inlinedAt: !16413)
!16415 = !DILocation(line: 789, column: 3, scope: !16416)
!16416 = distinct !DILexicalBlock(scope: !16417, file: !2546, line: 788, column: 26)
!16417 = distinct !DILexicalBlock(scope: !16406, file: !2546, line: 788, column: 2)
!16418 = !DILocation(line: 0, scope: !15464, inlinedAt: !16419)
!16419 = distinct !DILocation(line: 788, column: 2, scope: !16417)
!16420 = !DILocation(line: 0, scope: !15472, inlinedAt: !16421)
!16421 = distinct !DILocation(line: 215, column: 2, scope: !15464, inlinedAt: !16419)
!16422 = !DILocation(line: 95, column: 2, scope: !15472, inlinedAt: !16421)
!16423 = !DILocation(line: 791, column: 1, scope: !16402)
!16424 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2546, file: !2546, line: 816, type: !16425, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16427)
!16425 = !DISubroutineType(types: !16426)
!16426 = !{!103, !108, !2472, !16226}
!16427 = !{!16428, !16429, !16430, !16431, !16432, !16434}
!16428 = !DILocalVariable(name: "key", arg: 1, scope: !16424, file: !2546, line: 816, type: !108)
!16429 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16424, file: !2546, line: 816, type: !2472)
!16430 = !DILocalVariable(name: "timeout", arg: 3, scope: !16424, file: !2546, line: 816, type: !16226)
!16431 = !DILocalVariable(name: "ret", scope: !16424, file: !2546, line: 828, type: !103)
!16432 = !DILocalVariable(name: "__i", scope: !16433, file: !2546, line: 829, type: !15429)
!16433 = distinct !DILexicalBlock(scope: !16424, file: !2546, line: 829, column: 2)
!16434 = !DILocalVariable(name: "__key", scope: !16433, file: !2546, line: 829, type: !15429)
!16435 = !DILocation(line: 0, scope: !16424)
!16436 = !DILocation(line: 823, column: 14, scope: !16424)
!16437 = !DILocation(line: 823, column: 2, scope: !16424)
!16438 = !DILocation(line: 826, column: 20, scope: !16424)
!16439 = !DILocation(line: 826, column: 18, scope: !16424)
!16440 = !DILocation(line: 828, column: 12, scope: !16424)
!16441 = !DILocation(line: 0, scope: !16433)
!16442 = !DILocation(line: 0, scope: !15437, inlinedAt: !16443)
!16443 = distinct !DILocation(line: 829, column: 2, scope: !16433)
!16444 = !DILocation(line: 55, column: 2, scope: !15446, inlinedAt: !16445)
!16445 = distinct !DILocation(line: 145, column: 10, scope: !15437, inlinedAt: !16443)
!16446 = !DILocation(line: 0, scope: !15446, inlinedAt: !16445)
!16447 = !DILocation(line: 830, column: 7, scope: !16448)
!16448 = distinct !DILexicalBlock(scope: !16449, file: !2546, line: 830, column: 7)
!16449 = distinct !DILexicalBlock(scope: !16450, file: !2546, line: 829, column: 26)
!16450 = distinct !DILexicalBlock(scope: !16433, file: !2546, line: 829, column: 2)
!16451 = !DILocation(line: 830, column: 26, scope: !16448)
!16452 = !DILocation(line: 830, column: 23, scope: !16448)
!16453 = !DILocation(line: 830, column: 7, scope: !16449)
!16454 = !DILocation(line: 831, column: 20, scope: !16455)
!16455 = distinct !DILexicalBlock(scope: !16448, file: !2546, line: 830, column: 36)
!16456 = !DILocation(line: 832, column: 3, scope: !16455)
!16457 = !DILocation(line: 0, scope: !15464, inlinedAt: !16458)
!16458 = distinct !DILocation(line: 829, column: 2, scope: !16450)
!16459 = !DILocation(line: 0, scope: !15472, inlinedAt: !16460)
!16460 = distinct !DILocation(line: 215, column: 2, scope: !15464, inlinedAt: !16458)
!16461 = !DILocation(line: 95, column: 2, scope: !15472, inlinedAt: !16460)
!16462 = !DILocation(line: 834, column: 2, scope: !16424)
!16463 = distinct !DISubprogram(name: "z_pend_curr", scope: !2546, file: !2546, line: 840, type: !16464, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16466)
!16464 = !DISubroutineType(types: !16465)
!16465 = !{!103, !15440, !15429, !2472, !16226}
!16466 = !{!16467, !16468, !16469, !16470}
!16467 = !DILocalVariable(name: "lock", arg: 1, scope: !16463, file: !2546, line: 840, type: !15440)
!16468 = !DILocalVariable(name: "key", arg: 2, scope: !16463, file: !2546, line: 840, type: !15429)
!16469 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16463, file: !2546, line: 841, type: !2472)
!16470 = !DILocalVariable(name: "timeout", arg: 4, scope: !16463, file: !2546, line: 841, type: !16226)
!16471 = !DILocation(line: 0, scope: !16463)
!16472 = !DILocation(line: 844, column: 20, scope: !16463)
!16473 = !DILocation(line: 844, column: 18, scope: !16463)
!16474 = !DILocation(line: 0, scope: !15437, inlinedAt: !16475)
!16475 = distinct !DILocation(line: 856, column: 9, scope: !16463)
!16476 = !DILocation(line: 55, column: 2, scope: !15446, inlinedAt: !16477)
!16477 = distinct !DILocation(line: 145, column: 10, scope: !15437, inlinedAt: !16475)
!16478 = !DILocation(line: 0, scope: !15446, inlinedAt: !16477)
!16479 = !DILocation(line: 857, column: 14, scope: !16463)
!16480 = !DILocation(line: 857, column: 2, scope: !16463)
!16481 = !DILocation(line: 0, scope: !16046, inlinedAt: !16482)
!16482 = distinct !DILocation(line: 859, column: 9, scope: !16463)
!16483 = !DILocation(line: 196, column: 9, scope: !16046, inlinedAt: !16482)
!16484 = !DILocation(line: 859, column: 2, scope: !16463)
!16485 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2546, file: !2546, line: 862, type: !16486, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16488)
!16486 = !DISubroutineType(types: !16487)
!16487 = !{!2441, !2472}
!16488 = !{!16489, !16490, !16491, !16493}
!16489 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16485, file: !2546, line: 862, type: !2472)
!16490 = !DILocalVariable(name: "thread", scope: !16485, file: !2546, line: 864, type: !2441)
!16491 = !DILocalVariable(name: "__i", scope: !16492, file: !2546, line: 866, type: !15429)
!16492 = distinct !DILexicalBlock(scope: !16485, file: !2546, line: 866, column: 2)
!16493 = !DILocalVariable(name: "__key", scope: !16492, file: !2546, line: 866, type: !15429)
!16494 = !DILocation(line: 0, scope: !16485)
!16495 = !DILocation(line: 0, scope: !16492)
!16496 = !DILocation(line: 0, scope: !15437, inlinedAt: !16497)
!16497 = distinct !DILocation(line: 866, column: 2, scope: !16492)
!16498 = !DILocation(line: 55, column: 2, scope: !15446, inlinedAt: !16499)
!16499 = distinct !DILocation(line: 145, column: 10, scope: !15437, inlinedAt: !16497)
!16500 = !DILocation(line: 0, scope: !15446, inlinedAt: !16499)
!16501 = !DILocation(line: 867, column: 12, scope: !16502)
!16502 = distinct !DILexicalBlock(scope: !16503, file: !2546, line: 866, column: 26)
!16503 = distinct !DILexicalBlock(scope: !16492, file: !2546, line: 866, column: 2)
!16504 = !DILocation(line: 869, column: 14, scope: !16505)
!16505 = distinct !DILexicalBlock(scope: !16502, file: !2546, line: 869, column: 7)
!16506 = !DILocation(line: 869, column: 7, scope: !16502)
!16507 = !DILocation(line: 870, column: 4, scope: !16508)
!16508 = distinct !DILexicalBlock(scope: !16505, file: !2546, line: 869, column: 23)
!16509 = !DILocation(line: 871, column: 3, scope: !16508)
!16510 = !DILocation(line: 0, scope: !15464, inlinedAt: !16511)
!16511 = distinct !DILocation(line: 866, column: 2, scope: !16503)
!16512 = !DILocation(line: 0, scope: !15472, inlinedAt: !16513)
!16513 = distinct !DILocation(line: 215, column: 2, scope: !15464, inlinedAt: !16511)
!16514 = !DILocation(line: 95, column: 2, scope: !15472, inlinedAt: !16513)
!16515 = !DILocation(line: 874, column: 2, scope: !16485)
!16516 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2546, file: !2546, line: 877, type: !16486, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16517)
!16517 = !{!16518, !16519, !16520, !16522}
!16518 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16516, file: !2546, line: 877, type: !2472)
!16519 = !DILocalVariable(name: "thread", scope: !16516, file: !2546, line: 879, type: !2441)
!16520 = !DILocalVariable(name: "__i", scope: !16521, file: !2546, line: 881, type: !15429)
!16521 = distinct !DILexicalBlock(scope: !16516, file: !2546, line: 881, column: 2)
!16522 = !DILocalVariable(name: "__key", scope: !16521, file: !2546, line: 881, type: !15429)
!16523 = !DILocation(line: 0, scope: !16516)
!16524 = !DILocation(line: 0, scope: !16521)
!16525 = !DILocation(line: 0, scope: !15437, inlinedAt: !16526)
!16526 = distinct !DILocation(line: 881, column: 2, scope: !16521)
!16527 = !DILocation(line: 55, column: 2, scope: !15446, inlinedAt: !16528)
!16528 = distinct !DILocation(line: 145, column: 10, scope: !15437, inlinedAt: !16526)
!16529 = !DILocation(line: 0, scope: !15446, inlinedAt: !16528)
!16530 = !DILocation(line: 882, column: 12, scope: !16531)
!16531 = distinct !DILexicalBlock(scope: !16532, file: !2546, line: 881, column: 26)
!16532 = distinct !DILexicalBlock(scope: !16521, file: !2546, line: 881, column: 2)
!16533 = !DILocation(line: 884, column: 14, scope: !16534)
!16534 = distinct !DILexicalBlock(scope: !16531, file: !2546, line: 884, column: 7)
!16535 = !DILocation(line: 884, column: 7, scope: !16531)
!16536 = !DILocation(line: 885, column: 4, scope: !16537)
!16537 = distinct !DILexicalBlock(scope: !16534, file: !2546, line: 884, column: 23)
!16538 = !DILocation(line: 886, column: 10, scope: !16537)
!16539 = !DILocation(line: 887, column: 3, scope: !16537)
!16540 = !DILocation(line: 0, scope: !15464, inlinedAt: !16541)
!16541 = distinct !DILocation(line: 881, column: 2, scope: !16532)
!16542 = !DILocation(line: 0, scope: !15472, inlinedAt: !16543)
!16543 = distinct !DILocation(line: 215, column: 2, scope: !15464, inlinedAt: !16541)
!16544 = !DILocation(line: 95, column: 2, scope: !15472, inlinedAt: !16543)
!16545 = !DILocation(line: 890, column: 2, scope: !16516)
!16546 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2546, file: !2546, line: 893, type: !15395, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16547)
!16547 = !{!16548}
!16548 = !DILocalVariable(name: "thread", arg: 1, scope: !16546, file: !2546, line: 893, type: !2441)
!16549 = !DILocation(line: 0, scope: !16546)
!16550 = !DILocation(line: 0, scope: !16402, inlinedAt: !16551)
!16551 = distinct !DILocation(line: 895, column: 2, scope: !16546)
!16552 = !DILocation(line: 0, scope: !16406, inlinedAt: !16551)
!16553 = !DILocation(line: 0, scope: !15437, inlinedAt: !16554)
!16554 = distinct !DILocation(line: 788, column: 2, scope: !16406, inlinedAt: !16551)
!16555 = !DILocation(line: 55, column: 2, scope: !15446, inlinedAt: !16556)
!16556 = distinct !DILocation(line: 145, column: 10, scope: !15437, inlinedAt: !16554)
!16557 = !DILocation(line: 0, scope: !15446, inlinedAt: !16556)
!16558 = !DILocation(line: 789, column: 3, scope: !16416, inlinedAt: !16551)
!16559 = !DILocation(line: 0, scope: !15464, inlinedAt: !16560)
!16560 = distinct !DILocation(line: 788, column: 2, scope: !16417, inlinedAt: !16551)
!16561 = !DILocation(line: 0, scope: !15472, inlinedAt: !16562)
!16562 = distinct !DILocation(line: 215, column: 2, scope: !15464, inlinedAt: !16560)
!16563 = !DILocation(line: 95, column: 2, scope: !15472, inlinedAt: !16562)
!16564 = !DILocation(line: 896, column: 8, scope: !16546)
!16565 = !DILocation(line: 897, column: 1, scope: !16546)
!16566 = distinct !DISubprogram(name: "z_set_prio", scope: !2546, file: !2546, line: 902, type: !15757, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16567)
!16567 = !{!16568, !16569, !16570, !16571, !16573}
!16568 = !DILocalVariable(name: "thread", arg: 1, scope: !16566, file: !2546, line: 902, type: !2441)
!16569 = !DILocalVariable(name: "prio", arg: 2, scope: !16566, file: !2546, line: 902, type: !103)
!16570 = !DILocalVariable(name: "need_sched", scope: !16566, file: !2546, line: 904, type: !131)
!16571 = !DILocalVariable(name: "__i", scope: !16572, file: !2546, line: 906, type: !15429)
!16572 = distinct !DILexicalBlock(scope: !16566, file: !2546, line: 906, column: 2)
!16573 = !DILocalVariable(name: "__key", scope: !16572, file: !2546, line: 906, type: !15429)
!16574 = !DILocation(line: 0, scope: !16566)
!16575 = !DILocation(line: 0, scope: !16572)
!16576 = !DILocation(line: 0, scope: !15437, inlinedAt: !16577)
!16577 = distinct !DILocation(line: 906, column: 2, scope: !16572)
!16578 = !DILocation(line: 55, column: 2, scope: !15446, inlinedAt: !16579)
!16579 = distinct !DILocation(line: 145, column: 10, scope: !15437, inlinedAt: !16577)
!16580 = !DILocation(line: 0, scope: !15446, inlinedAt: !16579)
!16581 = !DILocation(line: 907, column: 16, scope: !16582)
!16582 = distinct !DILexicalBlock(scope: !16583, file: !2546, line: 906, column: 26)
!16583 = distinct !DILexicalBlock(scope: !16572, file: !2546, line: 906, column: 2)
!16584 = !DILocation(line: 909, column: 7, scope: !16582)
!16585 = !DILocation(line: 0, scope: !15606, inlinedAt: !16586)
!16586 = distinct !DILocation(line: 912, column: 5, scope: !16587)
!16587 = distinct !DILexicalBlock(scope: !16588, file: !2546, line: 911, column: 63)
!16588 = distinct !DILexicalBlock(scope: !16589, file: !2546, line: 911, column: 8)
!16589 = distinct !DILexicalBlock(scope: !16590, file: !2546, line: 909, column: 19)
!16590 = distinct !DILexicalBlock(scope: !16582, file: !2546, line: 909, column: 7)
!16591 = !DILocation(line: 266, column: 28, scope: !15606, inlinedAt: !16586)
!16592 = !DILocation(line: 0, scope: !15614, inlinedAt: !16593)
!16593 = distinct !DILocation(line: 268, column: 3, scope: !15618, inlinedAt: !16586)
!16594 = !DILocation(line: 234, column: 2, scope: !15614, inlinedAt: !16593)
!16595 = !DILocation(line: 913, column: 23, scope: !16587)
!16596 = !DILocation(line: 0, scope: !15623, inlinedAt: !16597)
!16597 = distinct !DILocation(line: 914, column: 5, scope: !16587)
!16598 = !DILocation(line: 252, column: 28, scope: !15623, inlinedAt: !16597)
!16599 = !DILocation(line: 0, scope: !15630, inlinedAt: !16600)
!16600 = distinct !DILocation(line: 254, column: 3, scope: !15634, inlinedAt: !16597)
!16601 = !DILocation(line: 0, scope: !15637, inlinedAt: !16602)
!16602 = distinct !DILocation(line: 229, column: 2, scope: !15630, inlinedAt: !16600)
!16603 = !DILocation(line: 188, column: 2, scope: !15647, inlinedAt: !16602)
!16604 = !DILocation(line: 188, column: 2, scope: !15649, inlinedAt: !16602)
!16605 = !DILocation(line: 0, scope: !15647, inlinedAt: !16602)
!16606 = !DILocation(line: 189, column: 7, scope: !15652, inlinedAt: !16602)
!16607 = !DILocation(line: 189, column: 35, scope: !15652, inlinedAt: !16602)
!16608 = !DILocation(line: 189, column: 7, scope: !15653, inlinedAt: !16602)
!16609 = !DILocation(line: 190, column: 4, scope: !15657, inlinedAt: !16602)
!16610 = !DILocation(line: 192, column: 4, scope: !15657, inlinedAt: !16602)
!16611 = distinct !{!16611, !16603, !16612}
!16612 = !DILocation(line: 194, column: 2, scope: !15647, inlinedAt: !16602)
!16613 = !DILocation(line: 196, column: 2, scope: !15637, inlinedAt: !16602)
!16614 = !DILocation(line: 197, column: 1, scope: !15637, inlinedAt: !16602)
!16615 = !DILocation(line: 918, column: 4, scope: !16589)
!16616 = !DILocation(line: 919, column: 3, scope: !16589)
!16617 = !DILocation(line: 920, column: 22, scope: !16618)
!16618 = distinct !DILexicalBlock(scope: !16590, file: !2546, line: 919, column: 10)
!16619 = !DILocation(line: 0, scope: !15464, inlinedAt: !16620)
!16620 = distinct !DILocation(line: 906, column: 2, scope: !16583)
!16621 = !DILocation(line: 0, scope: !15472, inlinedAt: !16622)
!16622 = distinct !DILocation(line: 215, column: 2, scope: !15464, inlinedAt: !16620)
!16623 = !DILocation(line: 95, column: 2, scope: !15472, inlinedAt: !16622)
!16624 = !DILocation(line: 926, column: 2, scope: !16566)
!16625 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2546, file: !2546, line: 929, type: !16626, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16628)
!16626 = !DISubroutineType(types: !16627)
!16627 = !{null, !2441, !103}
!16628 = !{!16629, !16630, !16631}
!16629 = !DILocalVariable(name: "thread", arg: 1, scope: !16625, file: !2546, line: 929, type: !2441)
!16630 = !DILocalVariable(name: "prio", arg: 2, scope: !16625, file: !2546, line: 929, type: !103)
!16631 = !DILocalVariable(name: "need_sched", scope: !16625, file: !2546, line: 931, type: !131)
!16632 = !DILocation(line: 0, scope: !16625)
!16633 = !DILocation(line: 931, column: 20, scope: !16625)
!16634 = !DILocation(line: 935, column: 17, scope: !16635)
!16635 = distinct !DILexicalBlock(scope: !16625, file: !2546, line: 935, column: 6)
!16636 = !DILocation(line: 935, column: 20, scope: !16635)
!16637 = !DILocation(line: 935, column: 35, scope: !16635)
!16638 = !DILocation(line: 935, column: 48, scope: !16635)
!16639 = !DILocation(line: 935, column: 6, scope: !16625)
!16640 = !DILocation(line: 936, column: 3, scope: !16641)
!16641 = distinct !DILexicalBlock(scope: !16635, file: !2546, line: 935, column: 55)
!16642 = !DILocation(line: 937, column: 2, scope: !16641)
!16643 = !DILocation(line: 938, column: 1, scope: !16625)
!16644 = distinct !DISubprogram(name: "k_sched_lock", scope: !2546, file: !2546, line: 987, type: !334, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16645)
!16645 = !{!16646, !16648}
!16646 = !DILocalVariable(name: "__i", scope: !16647, file: !2546, line: 989, type: !15429)
!16647 = distinct !DILexicalBlock(scope: !16644, file: !2546, line: 989, column: 2)
!16648 = !DILocalVariable(name: "__key", scope: !16647, file: !2546, line: 989, type: !15429)
!16649 = !DILocation(line: 0, scope: !16647)
!16650 = !DILocation(line: 0, scope: !15437, inlinedAt: !16651)
!16651 = distinct !DILocation(line: 989, column: 2, scope: !16647)
!16652 = !DILocation(line: 55, column: 2, scope: !15446, inlinedAt: !16653)
!16653 = distinct !DILocation(line: 145, column: 10, scope: !15437, inlinedAt: !16651)
!16654 = !DILocation(line: 0, scope: !15446, inlinedAt: !16653)
!16655 = !DILocation(line: 992, column: 3, scope: !16656)
!16656 = distinct !DILexicalBlock(scope: !16657, file: !2546, line: 989, column: 26)
!16657 = distinct !DILexicalBlock(scope: !16647, file: !2546, line: 989, column: 2)
!16658 = !DILocation(line: 0, scope: !15464, inlinedAt: !16659)
!16659 = distinct !DILocation(line: 989, column: 2, scope: !16657)
!16660 = !DILocation(line: 0, scope: !15472, inlinedAt: !16661)
!16661 = distinct !DILocation(line: 215, column: 2, scope: !15464, inlinedAt: !16659)
!16662 = !DILocation(line: 95, column: 2, scope: !15472, inlinedAt: !16661)
!16663 = !DILocation(line: 994, column: 1, scope: !16644)
!16664 = distinct !DISubprogram(name: "z_sched_lock", scope: !13967, file: !13967, line: 251, type: !334, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !251)
!16665 = !DILocation(line: 256, column: 4, scope: !16664)
!16666 = !DILocation(line: 256, column: 19, scope: !16664)
!16667 = !DILocation(line: 256, column: 2, scope: !16664)
!16668 = !DILocation(line: 258, column: 2, scope: !16669)
!16669 = distinct !DILexicalBlock(scope: !16664, file: !13967, line: 258, column: 2)
!16670 = !{i64 2154276339}
!16671 = !DILocation(line: 259, column: 1, scope: !16664)
!16672 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2546, file: !2546, line: 996, type: !334, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16673)
!16673 = !{!16674, !16676}
!16674 = !DILocalVariable(name: "__i", scope: !16675, file: !2546, line: 998, type: !15429)
!16675 = distinct !DILexicalBlock(scope: !16672, file: !2546, line: 998, column: 2)
!16676 = !DILocalVariable(name: "__key", scope: !16675, file: !2546, line: 998, type: !15429)
!16677 = !DILocation(line: 0, scope: !16675)
!16678 = !DILocation(line: 0, scope: !15437, inlinedAt: !16679)
!16679 = distinct !DILocation(line: 998, column: 2, scope: !16675)
!16680 = !DILocation(line: 55, column: 2, scope: !15446, inlinedAt: !16681)
!16681 = distinct !DILocation(line: 145, column: 10, scope: !15437, inlinedAt: !16679)
!16682 = !DILocation(line: 0, scope: !15446, inlinedAt: !16681)
!16683 = !DILocation(line: 1002, column: 5, scope: !16684)
!16684 = distinct !DILexicalBlock(scope: !16685, file: !2546, line: 998, column: 26)
!16685 = distinct !DILexicalBlock(scope: !16675, file: !2546, line: 998, column: 2)
!16686 = !DILocation(line: 1002, column: 20, scope: !16684)
!16687 = !DILocation(line: 1002, column: 3, scope: !16684)
!16688 = !DILocation(line: 1003, column: 3, scope: !16684)
!16689 = !DILocation(line: 0, scope: !15464, inlinedAt: !16690)
!16690 = distinct !DILocation(line: 998, column: 2, scope: !16685)
!16691 = !DILocation(line: 0, scope: !15472, inlinedAt: !16692)
!16692 = distinct !DILocation(line: 215, column: 2, scope: !15464, inlinedAt: !16690)
!16693 = !DILocation(line: 95, column: 2, scope: !15472, inlinedAt: !16692)
!16694 = !DILocation(line: 1011, column: 2, scope: !16672)
!16695 = !DILocation(line: 1012, column: 1, scope: !16672)
!16696 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2546, file: !2546, line: 1014, type: !15745, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !251)
!16697 = !DILocation(line: 1028, column: 25, scope: !16696)
!16698 = !DILocation(line: 1028, column: 2, scope: !16696)
!16699 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2546, file: !2546, line: 1155, type: !16700, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16702)
!16700 = !DISubroutineType(types: !16701)
!16701 = !{!131, !2470, !2470}
!16702 = !{!16703, !16704, !16705, !16706, !16707}
!16703 = !DILocalVariable(name: "a", arg: 1, scope: !16699, file: !2546, line: 1155, type: !2470)
!16704 = !DILocalVariable(name: "b", arg: 2, scope: !16699, file: !2546, line: 1155, type: !2470)
!16705 = !DILocalVariable(name: "thread_a", scope: !16699, file: !2546, line: 1157, type: !2441)
!16706 = !DILocalVariable(name: "thread_b", scope: !16699, file: !2546, line: 1157, type: !2441)
!16707 = !DILocalVariable(name: "cmp", scope: !16699, file: !2546, line: 1158, type: !331)
!16708 = !DILocation(line: 0, scope: !16699)
!16709 = !DILocation(line: 1160, column: 13, scope: !16699)
!16710 = !DILocation(line: 1161, column: 13, scope: !16699)
!16711 = !DILocation(line: 1163, column: 8, scope: !16699)
!16712 = !DILocation(line: 1165, column: 10, scope: !16713)
!16713 = distinct !DILexicalBlock(scope: !16699, file: !2546, line: 1165, column: 6)
!16714 = !DILocation(line: 1165, column: 6, scope: !16699)
!16715 = !DILocation(line: 1167, column: 17, scope: !16716)
!16716 = distinct !DILexicalBlock(scope: !16713, file: !2546, line: 1167, column: 13)
!16717 = !DILocation(line: 1167, column: 13, scope: !16713)
!16718 = !DILocation(line: 1170, column: 25, scope: !16719)
!16719 = distinct !DILexicalBlock(scope: !16716, file: !2546, line: 1169, column: 9)
!16720 = !DILocation(line: 1170, column: 52, scope: !16719)
!16721 = !DILocation(line: 1170, column: 35, scope: !16719)
!16722 = !DILocation(line: 1170, column: 3, scope: !16719)
!16723 = !DILocation(line: 0, scope: !16713)
!16724 = !DILocation(line: 1173, column: 1, scope: !16699)
!16725 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2546, file: !2546, line: 1175, type: !16726, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16741)
!16726 = !DISubroutineType(types: !16727)
!16727 = !{null, !16728, !2441}
!16728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16729, size: 32)
!16729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16730, line: 37, size: 128, elements: !16731)
!16730 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16731 = !{!16732, !16740}
!16732 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16729, file: !16730, line: 38, baseType: !16733, size: 96)
!16733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !175, line: 83, size: 96, elements: !16734)
!16734 = !{!16735, !16736, !16739}
!16735 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16733, file: !175, line: 84, baseType: !2470, size: 32)
!16736 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16733, file: !175, line: 85, baseType: !16737, size: 32, offset: 32)
!16737 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !175, line: 81, baseType: !16738)
!16738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16700, size: 32)
!16739 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16733, file: !175, line: 86, baseType: !103, size: 32, offset: 64)
!16740 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16729, file: !16730, line: 39, baseType: !103, size: 32, offset: 96)
!16741 = !{!16742, !16743, !16744, !16745, !16754}
!16742 = !DILocalVariable(name: "pq", arg: 1, scope: !16725, file: !2546, line: 1175, type: !16728)
!16743 = !DILocalVariable(name: "thread", arg: 2, scope: !16725, file: !2546, line: 1175, type: !2441)
!16744 = !DILocalVariable(name: "t", scope: !16725, file: !2546, line: 1177, type: !2441)
!16745 = !DILocalVariable(name: "__f", scope: !16746, file: !2546, line: 1190, type: !16749)
!16746 = distinct !DILexicalBlock(scope: !16747, file: !2546, line: 1190, column: 3)
!16747 = distinct !DILexicalBlock(scope: !16748, file: !2546, line: 1189, column: 27)
!16748 = distinct !DILexicalBlock(scope: !16725, file: !2546, line: 1189, column: 6)
!16749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !175, line: 155, size: 96, elements: !16750)
!16750 = !{!16751, !16752, !16753}
!16751 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16749, file: !175, line: 156, baseType: !2541, size: 32)
!16752 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16749, file: !175, line: 157, baseType: !379, size: 32, offset: 32)
!16753 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16749, file: !175, line: 158, baseType: !331, size: 32, offset: 64)
!16754 = !DILocalVariable(name: "n", scope: !16755, file: !2546, line: 1190, type: !2470)
!16755 = distinct !DILexicalBlock(scope: !16756, file: !2546, line: 1190, column: 3)
!16756 = distinct !DILexicalBlock(scope: !16746, file: !2546, line: 1190, column: 3)
!16757 = !DILocation(line: 0, scope: !16725)
!16758 = !DILocation(line: 1181, column: 31, scope: !16725)
!16759 = !DILocation(line: 1181, column: 45, scope: !16725)
!16760 = !DILocation(line: 1181, column: 15, scope: !16725)
!16761 = !DILocation(line: 1181, column: 25, scope: !16725)
!16762 = !DILocation(line: 1189, column: 11, scope: !16748)
!16763 = !DILocation(line: 1189, column: 7, scope: !16748)
!16764 = !DILocation(line: 1189, column: 6, scope: !16725)
!16765 = !DILocation(line: 1190, column: 3, scope: !16746)
!16766 = !DILocation(line: 1190, column: 3, scope: !16755)
!16767 = !DILocation(line: 0, scope: !16755)
!16768 = !DILocation(line: 1190, column: 3, scope: !16756)
!16769 = !DILocation(line: 1193, column: 2, scope: !16747)
!16770 = !DILocation(line: 1191, column: 42, scope: !16771)
!16771 = distinct !DILexicalBlock(scope: !16756, file: !2546, line: 1190, column: 54)
!16772 = !DILocation(line: 1191, column: 12, scope: !16771)
!16773 = !DILocation(line: 1191, column: 22, scope: !16771)
!16774 = distinct !{!16774, !16765, !16775}
!16775 = !DILocation(line: 1192, column: 3, scope: !16746)
!16776 = !DILocation(line: 1195, column: 17, scope: !16725)
!16777 = !DILocation(line: 1195, column: 37, scope: !16725)
!16778 = !DILocation(line: 1195, column: 2, scope: !16725)
!16779 = !DILocation(line: 1196, column: 1, scope: !16725)
!16780 = !DISubprogram(name: "z_rb_foreach_next", scope: !175, file: !175, line: 176, type: !16781, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!16781 = !DISubroutineType(types: !16782)
!16782 = !{!2470, !16783, !16784}
!16783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16733, size: 32)
!16784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16749, size: 32)
!16785 = !DISubprogram(name: "rb_insert", scope: !175, file: !175, line: 105, type: !16786, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!16786 = !DISubroutineType(types: !16787)
!16787 = !{null, !16783, !2470}
!16788 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2546, file: !2546, line: 1198, type: !16726, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16789)
!16789 = !{!16790, !16791}
!16790 = !DILocalVariable(name: "pq", arg: 1, scope: !16788, file: !2546, line: 1198, type: !16728)
!16791 = !DILocalVariable(name: "thread", arg: 2, scope: !16788, file: !2546, line: 1198, type: !2441)
!16792 = !DILocation(line: 0, scope: !16788)
!16793 = !DILocation(line: 1202, column: 17, scope: !16788)
!16794 = !DILocation(line: 1202, column: 37, scope: !16788)
!16795 = !DILocation(line: 1202, column: 2, scope: !16788)
!16796 = !DILocation(line: 1204, column: 16, scope: !16797)
!16797 = distinct !DILexicalBlock(scope: !16788, file: !2546, line: 1204, column: 6)
!16798 = !DILocation(line: 1204, column: 7, scope: !16797)
!16799 = !DILocation(line: 1204, column: 6, scope: !16788)
!16800 = !DILocation(line: 1205, column: 7, scope: !16801)
!16801 = distinct !DILexicalBlock(scope: !16797, file: !2546, line: 1204, column: 22)
!16802 = !DILocation(line: 1205, column: 22, scope: !16801)
!16803 = !DILocation(line: 1206, column: 2, scope: !16801)
!16804 = !DILocation(line: 1207, column: 1, scope: !16788)
!16805 = !DISubprogram(name: "rb_remove", scope: !175, file: !175, line: 110, type: !16786, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!16806 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2546, file: !2546, line: 1209, type: !16807, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16809)
!16807 = !DISubroutineType(types: !16808)
!16808 = !{!2441, !16728}
!16809 = !{!16810, !16811, !16812}
!16810 = !DILocalVariable(name: "pq", arg: 1, scope: !16806, file: !2546, line: 1209, type: !16728)
!16811 = !DILocalVariable(name: "thread", scope: !16806, file: !2546, line: 1211, type: !2441)
!16812 = !DILocalVariable(name: "n", scope: !16806, file: !2546, line: 1212, type: !2470)
!16813 = !DILocation(line: 0, scope: !16806)
!16814 = !DILocation(line: 1212, column: 37, scope: !16806)
!16815 = !DILocation(line: 1212, column: 21, scope: !16806)
!16816 = !DILocation(line: 1217, column: 2, scope: !16806)
!16817 = distinct !DISubprogram(name: "rb_get_min", scope: !175, file: !175, line: 115, type: !16818, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16820)
!16818 = !DISubroutineType(types: !16819)
!16819 = !{!2470, !16783}
!16820 = !{!16821}
!16821 = !DILocalVariable(name: "tree", arg: 1, scope: !16817, file: !175, line: 115, type: !16783)
!16822 = !DILocation(line: 0, scope: !16817)
!16823 = !DILocation(line: 117, column: 9, scope: !16817)
!16824 = !DILocation(line: 117, column: 2, scope: !16817)
!16825 = !DISubprogram(name: "z_rb_get_minmax", scope: !175, file: !175, line: 100, type: !16826, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!16826 = !DISubroutineType(types: !16827)
!16827 = !{!2470, !16783, !185}
!16828 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2546, file: !2546, line: 1246, type: !16829, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16839)
!16829 = !DISubroutineType(types: !16830)
!16830 = !{!2441, !16831}
!16831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16832, size: 32)
!16832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16730, line: 53, size: 2080, elements: !16833)
!16833 = !{!16834, !16838}
!16834 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16832, file: !16730, line: 54, baseType: !16835, size: 2048)
!16835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2477, size: 2048, elements: !16836)
!16836 = !{!16837}
!16837 = !DISubrange(count: 32)
!16838 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16832, file: !16730, line: 55, baseType: !32, size: 32, offset: 2048)
!16839 = !{!16840, !16841, !16842, !16843}
!16840 = !DILocalVariable(name: "pq", arg: 1, scope: !16828, file: !2546, line: 1246, type: !16831)
!16841 = !DILocalVariable(name: "thread", scope: !16828, file: !2546, line: 1252, type: !2441)
!16842 = !DILocalVariable(name: "l", scope: !16828, file: !2546, line: 1253, type: !15640)
!16843 = !DILocalVariable(name: "n", scope: !16828, file: !2546, line: 1254, type: !2542)
!16844 = !DILocation(line: 0, scope: !16828)
!16845 = !DILocation(line: 1248, column: 11, scope: !16846)
!16846 = distinct !DILexicalBlock(scope: !16828, file: !2546, line: 1248, column: 6)
!16847 = !DILocation(line: 1248, column: 7, scope: !16846)
!16848 = !DILocation(line: 1248, column: 6, scope: !16828)
!16849 = !DILocation(line: 1253, column: 31, scope: !16828)
!16850 = !DILocation(line: 1253, column: 20, scope: !16828)
!16851 = !DILocation(line: 1254, column: 19, scope: !16828)
!16852 = !DILocation(line: 1260, column: 1, scope: !16828)
!16853 = distinct !DISubprogram(name: "z_unpend_all", scope: !2546, file: !2546, line: 1262, type: !16854, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16856)
!16854 = !DISubroutineType(types: !16855)
!16855 = !{!103, !2472}
!16856 = !{!16857, !16858, !16859}
!16857 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16853, file: !2546, line: 1262, type: !2472)
!16858 = !DILocalVariable(name: "need_sched", scope: !16853, file: !2546, line: 1264, type: !103)
!16859 = !DILocalVariable(name: "thread", scope: !16853, file: !2546, line: 1265, type: !2441)
!16860 = !DILocation(line: 0, scope: !16853)
!16861 = !DILocation(line: 1267, column: 19, scope: !16853)
!16862 = !DILocation(line: 1267, column: 41, scope: !16853)
!16863 = !DILocation(line: 1267, column: 2, scope: !16853)
!16864 = !DILocation(line: 1268, column: 3, scope: !16865)
!16865 = distinct !DILexicalBlock(scope: !16853, file: !2546, line: 1267, column: 50)
!16866 = !DILocation(line: 1269, column: 3, scope: !16865)
!16867 = distinct !{!16867, !16863, !16868}
!16868 = !DILocation(line: 1271, column: 2, scope: !16853)
!16869 = !DILocation(line: 1273, column: 2, scope: !16853)
!16870 = distinct !DISubprogram(name: "z_waitq_head", scope: !14292, file: !14292, line: 52, type: !16486, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16871)
!16871 = !{!16872}
!16872 = !DILocalVariable(name: "w", arg: 1, scope: !16870, file: !14292, line: 52, type: !2472)
!16873 = !DILocation(line: 0, scope: !16870)
!16874 = !DILocation(line: 54, column: 52, scope: !16870)
!16875 = !DILocation(line: 54, column: 28, scope: !16870)
!16876 = !DILocation(line: 54, column: 9, scope: !16870)
!16877 = !DILocation(line: 54, column: 2, scope: !16870)
!16878 = distinct !DISubprogram(name: "init_ready_q", scope: !2546, file: !2546, line: 1276, type: !16879, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16886)
!16879 = !DISubroutineType(types: !16880)
!16880 = !{null, !16881}
!16881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16882, size: 32)
!16882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !141, line: 83, size: 96, elements: !16883)
!16883 = !{!16884, !16885}
!16884 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16882, file: !141, line: 86, baseType: !2441, size: 32)
!16885 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16882, file: !141, line: 90, baseType: !2477, size: 64, offset: 32)
!16886 = !{!16887}
!16887 = !DILocalVariable(name: "rq", arg: 1, scope: !16878, file: !2546, line: 1276, type: !16881)
!16888 = !DILocation(line: 0, scope: !16878)
!16889 = !DILocation(line: 1289, column: 22, scope: !16878)
!16890 = !DILocation(line: 1289, column: 2, scope: !16878)
!16891 = !DILocation(line: 1291, column: 1, scope: !16878)
!16892 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !16893, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16895)
!16893 = !DISubroutineType(types: !16894)
!16894 = !{null, !15640}
!16895 = !{!16896}
!16896 = !DILocalVariable(name: "list", arg: 1, scope: !16892, file: !146, line: 197, type: !15640)
!16897 = !DILocation(line: 0, scope: !16892)
!16898 = !DILocation(line: 199, column: 8, scope: !16892)
!16899 = !DILocation(line: 199, column: 13, scope: !16892)
!16900 = !DILocation(line: 200, column: 8, scope: !16892)
!16901 = !DILocation(line: 200, column: 13, scope: !16892)
!16902 = !DILocation(line: 201, column: 1, scope: !16892)
!16903 = distinct !DISubprogram(name: "z_sched_init", scope: !2546, file: !2546, line: 1293, type: !334, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !251)
!16904 = !DILocation(line: 1302, column: 2, scope: !16903)
!16905 = !DILocation(line: 1306, column: 2, scope: !16903)
!16906 = !DILocation(line: 1309, column: 1, scope: !16903)
!16907 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2546, file: !2546, line: 1311, type: !16908, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16911)
!16908 = !DISubroutineType(types: !16909)
!16909 = !{!103, !16910}
!16910 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !2441)
!16911 = !{!16912}
!16912 = !DILocalVariable(name: "thread", arg: 1, scope: !16907, file: !2546, line: 1311, type: !16910)
!16913 = !DILocation(line: 0, scope: !16907)
!16914 = !DILocation(line: 1313, column: 22, scope: !16907)
!16915 = !DILocation(line: 1313, column: 9, scope: !16907)
!16916 = !DILocation(line: 1313, column: 2, scope: !16907)
!16917 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2546, file: !2546, line: 1325, type: !16918, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16920)
!16918 = !DISubroutineType(types: !16919)
!16919 = !{null, !16910, !103}
!16920 = !{!16921, !16922, !16923}
!16921 = !DILocalVariable(name: "thread", arg: 1, scope: !16917, file: !2546, line: 1325, type: !16910)
!16922 = !DILocalVariable(name: "prio", arg: 2, scope: !16917, file: !2546, line: 1325, type: !103)
!16923 = !DILocalVariable(name: "th", scope: !16917, file: !2546, line: 1334, type: !2441)
!16924 = !DILocation(line: 0, scope: !16917)
!16925 = !DILocation(line: 1336, column: 2, scope: !16917)
!16926 = !DILocation(line: 1337, column: 1, scope: !16917)
!16927 = distinct !DISubprogram(name: "k_can_yield", scope: !2546, file: !2546, line: 1384, type: !8351, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !251)
!16928 = !DILocation(line: 1386, column: 11, scope: !16927)
!16929 = !DILocation(line: 1386, column: 29, scope: !16927)
!16930 = !DILocation(line: 1386, column: 32, scope: !16927)
!16931 = !DILocation(line: 1386, column: 46, scope: !16927)
!16932 = !DILocation(line: 1387, column: 28, scope: !16927)
!16933 = !DILocation(line: 1387, column: 4, scope: !16927)
!16934 = !DILocation(line: 1386, column: 2, scope: !16927)
!16935 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !137, file: !137, line: 989, type: !8351, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !251)
!16936 = !DILocation(line: 993, column: 10, scope: !16935)
!16937 = !DILocation(line: 993, column: 2, scope: !16935)
!16938 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2546, file: !2546, line: 1390, type: !334, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16939)
!16939 = !{!16940}
!16940 = !DILocalVariable(name: "key", scope: !16938, file: !2546, line: 1396, type: !15429)
!16941 = !DILocation(line: 0, scope: !15437, inlinedAt: !16942)
!16942 = distinct !DILocation(line: 1396, column: 25, scope: !16938)
!16943 = !DILocation(line: 55, column: 2, scope: !15446, inlinedAt: !16944)
!16944 = distinct !DILocation(line: 145, column: 10, scope: !15437, inlinedAt: !16942)
!16945 = !DILocation(line: 0, scope: !15446, inlinedAt: !16944)
!16946 = !DILocation(line: 0, scope: !16938)
!16947 = !DILocation(line: 1400, column: 18, scope: !16948)
!16948 = distinct !DILexicalBlock(scope: !16949, file: !2546, line: 1399, column: 36)
!16949 = distinct !DILexicalBlock(scope: !16938, file: !2546, line: 1398, column: 6)
!16950 = !DILocation(line: 0, scope: !15606, inlinedAt: !16951)
!16951 = distinct !DILocation(line: 1400, column: 3, scope: !16948)
!16952 = !DILocation(line: 266, column: 15, scope: !15606, inlinedAt: !16951)
!16953 = !DILocation(line: 266, column: 28, scope: !15606, inlinedAt: !16951)
!16954 = !DILocation(line: 0, scope: !15614, inlinedAt: !16955)
!16955 = distinct !DILocation(line: 268, column: 3, scope: !15618, inlinedAt: !16951)
!16956 = !DILocation(line: 234, column: 2, scope: !15614, inlinedAt: !16955)
!16957 = !DILocation(line: 1402, column: 15, scope: !16938)
!16958 = !DILocation(line: 0, scope: !15623, inlinedAt: !16959)
!16959 = distinct !DILocation(line: 1402, column: 2, scope: !16938)
!16960 = !DILocation(line: 252, column: 15, scope: !15623, inlinedAt: !16959)
!16961 = !DILocation(line: 252, column: 28, scope: !15623, inlinedAt: !16959)
!16962 = !DILocation(line: 0, scope: !15630, inlinedAt: !16963)
!16963 = distinct !DILocation(line: 254, column: 3, scope: !15634, inlinedAt: !16959)
!16964 = !DILocation(line: 0, scope: !15637, inlinedAt: !16965)
!16965 = distinct !DILocation(line: 229, column: 2, scope: !15630, inlinedAt: !16963)
!16966 = !DILocation(line: 188, column: 2, scope: !15647, inlinedAt: !16965)
!16967 = !DILocation(line: 188, column: 2, scope: !15649, inlinedAt: !16965)
!16968 = !DILocation(line: 0, scope: !15647, inlinedAt: !16965)
!16969 = !DILocation(line: 189, column: 7, scope: !15652, inlinedAt: !16965)
!16970 = !DILocation(line: 189, column: 35, scope: !15652, inlinedAt: !16965)
!16971 = !DILocation(line: 189, column: 7, scope: !15653, inlinedAt: !16965)
!16972 = !DILocation(line: 191, column: 21, scope: !15657, inlinedAt: !16965)
!16973 = !DILocation(line: 190, column: 4, scope: !15657, inlinedAt: !16965)
!16974 = !DILocation(line: 192, column: 4, scope: !15657, inlinedAt: !16965)
!16975 = distinct !{!16975, !16966, !16976}
!16976 = !DILocation(line: 194, column: 2, scope: !15647, inlinedAt: !16965)
!16977 = !DILocation(line: 196, column: 37, scope: !15637, inlinedAt: !16965)
!16978 = !DILocation(line: 196, column: 2, scope: !15637, inlinedAt: !16965)
!16979 = !DILocation(line: 197, column: 1, scope: !15637, inlinedAt: !16965)
!16980 = !DILocation(line: 1403, column: 2, scope: !16938)
!16981 = !DILocation(line: 0, scope: !16046, inlinedAt: !16982)
!16982 = distinct !DILocation(line: 1404, column: 2, scope: !16938)
!16983 = !DILocation(line: 196, column: 9, scope: !16046, inlinedAt: !16982)
!16984 = !DILocation(line: 1405, column: 1, scope: !16938)
!16985 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2546, file: !2546, line: 1459, type: !16986, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !16988)
!16986 = !DISubroutineType(types: !16987)
!16987 = !{!331, !16226}
!16988 = !{!16989, !16990, !16991}
!16989 = !DILocalVariable(name: "timeout", arg: 1, scope: !16985, file: !2546, line: 1459, type: !16226)
!16990 = !DILocalVariable(name: "ticks", scope: !16985, file: !2546, line: 1461, type: !104)
!16991 = !DILocalVariable(name: "ret", scope: !16985, file: !2546, line: 1480, type: !331)
!16992 = !DILocation(line: 0, scope: !16985)
!16993 = !DILocation(line: 1468, column: 6, scope: !16994)
!16994 = distinct !DILexicalBlock(scope: !16985, file: !2546, line: 1468, column: 6)
!16995 = !DILocation(line: 1468, column: 6, scope: !16985)
!16996 = !DILocation(line: 1469, column: 20, scope: !16997)
!16997 = distinct !DILexicalBlock(scope: !16994, file: !2546, line: 1468, column: 40)
!16998 = !DILocation(line: 1469, column: 3, scope: !16997)
!16999 = !DILocation(line: 1473, column: 3, scope: !16997)
!17000 = !DILocation(line: 1478, column: 10, scope: !16985)
!17001 = !DILocation(line: 1480, column: 16, scope: !16985)
!17002 = !DILocation(line: 1485, column: 1, scope: !16985)
!17003 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3640, file: !3640, line: 310, type: !17004, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !17006)
!17004 = !DISubroutineType(types: !17005)
!17005 = !{null, !16910}
!17006 = !{!17007}
!17007 = !DILocalVariable(name: "thread", arg: 1, scope: !17003, file: !3640, line: 310, type: !16910)
!17008 = !DILocation(line: 0, scope: !17003)
!17009 = !DILocation(line: 319, column: 2, scope: !17010)
!17010 = distinct !DILexicalBlock(scope: !17003, file: !3640, line: 319, column: 2)
!17011 = !{i64 2154194728}
!17012 = !DILocation(line: 320, column: 2, scope: !17003)
!17013 = !DILocation(line: 321, column: 1, scope: !17003)
!17014 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2546, file: !2546, line: 1415, type: !17015, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !17017)
!17015 = !DISubroutineType(types: !17016)
!17016 = !{!331, !104}
!17017 = !{!17018, !17019, !17020, !17021}
!17018 = !DILocalVariable(name: "ticks", arg: 1, scope: !17014, file: !2546, line: 1415, type: !104)
!17019 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !17014, file: !2546, line: 1418, type: !108)
!17020 = !DILocalVariable(name: "timeout", scope: !17014, file: !2546, line: 1430, type: !16226)
!17021 = !DILocalVariable(name: "key", scope: !17014, file: !2546, line: 1437, type: !15429)
!17022 = !DILocation(line: 0, scope: !17014)
!17023 = !DILocation(line: 1425, column: 12, scope: !17024)
!17024 = distinct !DILexicalBlock(scope: !17014, file: !2546, line: 1425, column: 6)
!17025 = !DILocation(line: 1425, column: 6, scope: !17014)
!17026 = !DILocation(line: 1426, column: 3, scope: !17027)
!17027 = distinct !DILexicalBlock(scope: !17024, file: !2546, line: 1425, column: 18)
!17028 = !DILocation(line: 1427, column: 3, scope: !17027)
!17029 = !DILocation(line: 1431, column: 24, scope: !17030)
!17030 = distinct !DILexicalBlock(scope: !17014, file: !2546, line: 1431, column: 6)
!17031 = !DILocation(line: 1431, column: 6, scope: !17014)
!17032 = !DILocation(line: 1432, column: 35, scope: !17033)
!17033 = distinct !DILexicalBlock(scope: !17030, file: !2546, line: 1431, column: 30)
!17034 = !DILocation(line: 1432, column: 27, scope: !17033)
!17035 = !DILocation(line: 1433, column: 2, scope: !17033)
!17036 = !DILocation(line: 1434, column: 27, scope: !17037)
!17037 = distinct !DILexicalBlock(scope: !17030, file: !2546, line: 1433, column: 9)
!17038 = !DILocation(line: 0, scope: !17030)
!17039 = !DILocation(line: 0, scope: !15437, inlinedAt: !17040)
!17040 = distinct !DILocation(line: 1437, column: 25, scope: !17014)
!17041 = !DILocation(line: 55, column: 2, scope: !15446, inlinedAt: !17042)
!17042 = distinct !DILocation(line: 145, column: 10, scope: !15437, inlinedAt: !17040)
!17043 = !DILocation(line: 0, scope: !15446, inlinedAt: !17042)
!17044 = !DILocation(line: 1440, column: 20, scope: !17014)
!17045 = !DILocation(line: 1440, column: 18, scope: !17014)
!17046 = !DILocation(line: 1442, column: 2, scope: !17014)
!17047 = !DILocation(line: 1443, column: 23, scope: !17014)
!17048 = !DILocation(line: 1443, column: 2, scope: !17014)
!17049 = !DILocation(line: 1444, column: 29, scope: !17014)
!17050 = !DILocation(line: 1444, column: 2, scope: !17014)
!17051 = !DILocation(line: 0, scope: !16046, inlinedAt: !17052)
!17052 = distinct !DILocation(line: 1446, column: 8, scope: !17014)
!17053 = !DILocation(line: 196, column: 9, scope: !16046, inlinedAt: !17052)
!17054 = !DILocation(line: 1450, column: 10, scope: !17014)
!17055 = !DILocation(line: 1450, column: 45, scope: !17014)
!17056 = !DILocation(line: 1450, column: 43, scope: !17014)
!17057 = !DILocation(line: 1451, column: 6, scope: !17014)
!17058 = !DILocation(line: 1457, column: 1, scope: !17014)
!17059 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3626, file: !3626, line: 1103, type: !3627, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !17060)
!17060 = !{!17061}
!17061 = !DILocalVariable(name: "t", arg: 1, scope: !17059, file: !3626, line: 1103, type: !109)
!17062 = !DILocation(line: 0, scope: !17059)
!17063 = !DILocation(line: 0, scope: !15484, inlinedAt: !17064)
!17064 = distinct !DILocation(line: 1106, column: 9, scope: !17059)
!17065 = !DILocation(line: 139, column: 13, scope: !17066, inlinedAt: !17064)
!17066 = distinct !DILexicalBlock(scope: !17067, file: !3626, line: 138, column: 10)
!17067 = distinct !DILexicalBlock(scope: !17068, file: !3626, line: 136, column: 7)
!17068 = distinct !DILexicalBlock(scope: !15505, file: !3626, line: 134, column: 17)
!17069 = !DILocation(line: 1106, column: 2, scope: !17059)
!17070 = distinct !DISubprogram(name: "k_yield", scope: !3640, file: !3640, line: 140, type: !334, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !251)
!17071 = !DILocation(line: 148, column: 2, scope: !17072)
!17072 = distinct !DILexicalBlock(scope: !17070, file: !3640, line: 148, column: 2)
!17073 = !{i64 2154194048}
!17074 = !DILocation(line: 149, column: 2, scope: !17070)
!17075 = !DILocation(line: 150, column: 1, scope: !17070)
!17076 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2546, file: !2546, line: 1495, type: !17077, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !17079)
!17077 = !DISubroutineType(types: !17078)
!17078 = !{!331, !103}
!17079 = !{!17080, !17081}
!17080 = !DILocalVariable(name: "us", arg: 1, scope: !17076, file: !2546, line: 1495, type: !103)
!17081 = !DILocalVariable(name: "ticks", scope: !17076, file: !2546, line: 1497, type: !331)
!17082 = !DILocation(line: 0, scope: !17076)
!17083 = !DILocation(line: 1501, column: 31, scope: !17076)
!17084 = !DILocation(line: 1501, column: 10, scope: !17076)
!17085 = !DILocation(line: 1502, column: 23, scope: !17076)
!17086 = !DILocation(line: 1502, column: 10, scope: !17076)
!17087 = !DILocation(line: 1506, column: 31, scope: !17076)
!17088 = !DILocation(line: 1506, column: 9, scope: !17076)
!17089 = !DILocation(line: 1506, column: 2, scope: !17076)
!17090 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3626, file: !3626, line: 571, type: !3627, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !17091)
!17091 = !{!17092}
!17092 = !DILocalVariable(name: "t", arg: 1, scope: !17090, file: !3626, line: 571, type: !109)
!17093 = !DILocation(line: 0, scope: !17090)
!17094 = !DILocation(line: 0, scope: !15484, inlinedAt: !17095)
!17095 = distinct !DILocation(line: 574, column: 9, scope: !17090)
!17096 = !DILocation(line: 135, column: 5, scope: !17068, inlinedAt: !17095)
!17097 = !DILocation(line: 139, column: 13, scope: !17066, inlinedAt: !17095)
!17098 = !DILocation(line: 574, column: 2, scope: !17090)
!17099 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3626, file: !3626, line: 1187, type: !3627, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !17100)
!17100 = !{!17101}
!17101 = !DILocalVariable(name: "t", arg: 1, scope: !17099, file: !3626, line: 1187, type: !109)
!17102 = !DILocation(line: 0, scope: !17099)
!17103 = !DILocation(line: 0, scope: !15484, inlinedAt: !17104)
!17104 = distinct !DILocation(line: 1190, column: 9, scope: !17099)
!17105 = !DILocation(line: 145, column: 13, scope: !17106, inlinedAt: !17104)
!17106 = distinct !DILexicalBlock(scope: !15502, file: !3626, line: 144, column: 10)
!17107 = !DILocation(line: 1190, column: 2, scope: !17099)
!17108 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2546, file: !2546, line: 1517, type: !17004, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !17109)
!17109 = !{!17110}
!17110 = !DILocalVariable(name: "thread", arg: 1, scope: !17108, file: !2546, line: 1517, type: !16910)
!17111 = !DILocation(line: 0, scope: !17108)
!17112 = !DILocation(line: 1521, column: 6, scope: !17113)
!17113 = distinct !DILexicalBlock(scope: !17108, file: !2546, line: 1521, column: 6)
!17114 = !DILocation(line: 1521, column: 6, scope: !17108)
!17115 = !DILocation(line: 1525, column: 6, scope: !17116)
!17116 = distinct !DILexicalBlock(scope: !17108, file: !2546, line: 1525, column: 6)
!17117 = !DILocation(line: 1525, column: 37, scope: !17116)
!17118 = !DILocation(line: 1525, column: 6, scope: !17108)
!17119 = !DILocation(line: 1527, column: 20, scope: !17120)
!17120 = distinct !DILexicalBlock(scope: !17121, file: !2546, line: 1527, column: 7)
!17121 = distinct !DILexicalBlock(scope: !17116, file: !2546, line: 1525, column: 42)
!17122 = !DILocation(line: 1527, column: 33, scope: !17120)
!17123 = !DILocation(line: 1527, column: 7, scope: !17121)
!17124 = !DILocation(line: 1532, column: 2, scope: !17108)
!17125 = !DILocation(line: 1533, column: 2, scope: !17108)
!17126 = !DILocation(line: 1031, column: 3, scope: !16079, inlinedAt: !17127)
!17127 = distinct !DILocation(line: 48, column: 10, scope: !16083, inlinedAt: !17128)
!17128 = distinct !DILocation(line: 1537, column: 7, scope: !17129)
!17129 = distinct !DILexicalBlock(scope: !17108, file: !2546, line: 1537, column: 6)
!17130 = !DILocation(line: 0, scope: !16079, inlinedAt: !17127)
!17131 = !DILocation(line: 48, column: 9, scope: !16083, inlinedAt: !17128)
!17132 = !DILocation(line: 1537, column: 6, scope: !17108)
!17133 = !DILocation(line: 1538, column: 3, scope: !17134)
!17134 = distinct !DILexicalBlock(scope: !17129, file: !2546, line: 1537, column: 25)
!17135 = !DILocation(line: 1539, column: 2, scope: !17134)
!17136 = !DILocation(line: 1540, column: 1, scope: !17108)
!17137 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13967, file: !13967, line: 101, type: !15555, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !17138)
!17138 = !{!17139}
!17139 = !DILocalVariable(name: "thread", arg: 1, scope: !17137, file: !13967, line: 101, type: !2441)
!17140 = !DILocation(line: 0, scope: !17137)
!17141 = !DILocation(line: 103, column: 23, scope: !17137)
!17142 = !DILocation(line: 103, column: 36, scope: !17137)
!17143 = !DILocation(line: 103, column: 55, scope: !17137)
!17144 = !DILocation(line: 103, column: 2, scope: !17137)
!17145 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2546, file: !2546, line: 1567, type: !17146, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !17148)
!17146 = !DISubroutineType(types: !17147)
!17147 = !{!16910}
!17148 = !{!17149}
!17149 = !DILocalVariable(name: "ret", scope: !17145, file: !2546, line: 1577, type: !16910)
!17150 = !DILocation(line: 1577, column: 30, scope: !17145)
!17151 = !DILocation(line: 0, scope: !17145)
!17152 = !DILocation(line: 1582, column: 2, scope: !17145)
!17153 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2546, file: !2546, line: 1593, type: !8639, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !251)
!17154 = !DILocation(line: 1031, column: 3, scope: !16079, inlinedAt: !17155)
!17155 = distinct !DILocation(line: 48, column: 10, scope: !16083, inlinedAt: !17156)
!17156 = distinct !DILocation(line: 1595, column: 10, scope: !17153)
!17157 = !DILocation(line: 0, scope: !16079, inlinedAt: !17155)
!17158 = !DILocation(line: 48, column: 9, scope: !16083, inlinedAt: !17156)
!17159 = !DILocation(line: 1595, column: 27, scope: !17153)
!17160 = !DILocation(line: 1595, column: 41, scope: !17153)
!17161 = !DILocation(line: 1595, column: 30, scope: !17153)
!17162 = !DILocation(line: 1595, column: 2, scope: !17153)
!17163 = distinct !DISubprogram(name: "z_thread_abort", scope: !2546, file: !2546, line: 1725, type: !15395, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !17164)
!17164 = !{!17165, !17166}
!17165 = !DILocalVariable(name: "thread", arg: 1, scope: !17163, file: !2546, line: 1725, type: !2441)
!17166 = !DILocalVariable(name: "key", scope: !17163, file: !2546, line: 1727, type: !15429)
!17167 = !DILocation(line: 0, scope: !17163)
!17168 = !DILocation(line: 0, scope: !15437, inlinedAt: !17169)
!17169 = distinct !DILocation(line: 1727, column: 25, scope: !17163)
!17170 = !DILocation(line: 55, column: 2, scope: !15446, inlinedAt: !17171)
!17171 = distinct !DILocation(line: 145, column: 10, scope: !15437, inlinedAt: !17169)
!17172 = !DILocation(line: 0, scope: !15446, inlinedAt: !17171)
!17173 = !DILocation(line: 1729, column: 20, scope: !17174)
!17174 = distinct !DILexicalBlock(scope: !17163, file: !2546, line: 1729, column: 6)
!17175 = !DILocation(line: 1729, column: 33, scope: !17174)
!17176 = !DILocation(line: 1729, column: 48, scope: !17174)
!17177 = !DILocation(line: 1729, column: 6, scope: !17163)
!17178 = !DILocation(line: 0, scope: !15464, inlinedAt: !17179)
!17179 = distinct !DILocation(line: 1730, column: 3, scope: !17180)
!17180 = distinct !DILexicalBlock(scope: !17174, file: !2546, line: 1729, column: 54)
!17181 = !DILocation(line: 0, scope: !15472, inlinedAt: !17182)
!17182 = distinct !DILocation(line: 215, column: 2, scope: !15464, inlinedAt: !17179)
!17183 = !DILocation(line: 95, column: 2, scope: !15472, inlinedAt: !17182)
!17184 = !DILocation(line: 1732, column: 3, scope: !17185)
!17185 = distinct !DILexicalBlock(scope: !17180, file: !2546, line: 1732, column: 3)
!17186 = !{i64 2154930044, i64 2154930060, i64 2154930086, i64 2154930114, i64 2154930134}
!17187 = !DILocation(line: 1733, column: 3, scope: !17180)
!17188 = !DILocation(line: 1736, column: 20, scope: !17189)
!17189 = distinct !DILexicalBlock(scope: !17163, file: !2546, line: 1736, column: 6)
!17190 = !DILocation(line: 1736, column: 33, scope: !17189)
!17191 = !DILocation(line: 1736, column: 49, scope: !17189)
!17192 = !DILocation(line: 1736, column: 6, scope: !17163)
!17193 = !DILocation(line: 0, scope: !15464, inlinedAt: !17194)
!17194 = distinct !DILocation(line: 1737, column: 3, scope: !17195)
!17195 = distinct !DILexicalBlock(scope: !17189, file: !2546, line: 1736, column: 56)
!17196 = !DILocation(line: 0, scope: !15472, inlinedAt: !17197)
!17197 = distinct !DILocation(line: 215, column: 2, scope: !15464, inlinedAt: !17194)
!17198 = !DILocation(line: 95, column: 2, scope: !15472, inlinedAt: !17197)
!17199 = !DILocation(line: 1738, column: 3, scope: !17195)
!17200 = !DILocation(line: 1775, column: 2, scope: !17163)
!17201 = !DILocation(line: 1776, column: 16, scope: !17202)
!17202 = distinct !DILexicalBlock(scope: !17163, file: !2546, line: 1776, column: 6)
!17203 = !DILocation(line: 1776, column: 13, scope: !17202)
!17204 = !DILocation(line: 1776, column: 25, scope: !17202)
!17205 = !DILocation(line: 1031, column: 3, scope: !16079, inlinedAt: !17206)
!17206 = distinct !DILocation(line: 48, column: 10, scope: !16083, inlinedAt: !17207)
!17207 = distinct !DILocation(line: 1776, column: 29, scope: !17202)
!17208 = !DILocation(line: 0, scope: !16079, inlinedAt: !17206)
!17209 = !DILocation(line: 48, column: 9, scope: !16083, inlinedAt: !17207)
!17210 = !DILocation(line: 1776, column: 6, scope: !17163)
!17211 = !DILocation(line: 0, scope: !16046, inlinedAt: !17212)
!17212 = distinct !DILocation(line: 1777, column: 3, scope: !17213)
!17213 = distinct !DILexicalBlock(scope: !17202, file: !2546, line: 1776, column: 47)
!17214 = !DILocation(line: 196, column: 9, scope: !16046, inlinedAt: !17212)
!17215 = !DILocation(line: 1779, column: 2, scope: !17213)
!17216 = !DILocation(line: 0, scope: !15464, inlinedAt: !17217)
!17217 = distinct !DILocation(line: 1780, column: 2, scope: !17163)
!17218 = !DILocation(line: 0, scope: !15472, inlinedAt: !17219)
!17219 = distinct !DILocation(line: 215, column: 2, scope: !15464, inlinedAt: !17217)
!17220 = !DILocation(line: 95, column: 2, scope: !15472, inlinedAt: !17219)
!17221 = !DILocation(line: 1781, column: 1, scope: !17163)
!17222 = distinct !DISubprogram(name: "end_thread", scope: !2546, file: !2546, line: 1690, type: !15395, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !17223)
!17223 = !{!17224}
!17224 = !DILocalVariable(name: "thread", arg: 1, scope: !17222, file: !2546, line: 1690, type: !2441)
!17225 = !DILocation(line: 0, scope: !17222)
!17226 = !DILocation(line: 1695, column: 20, scope: !17227)
!17227 = distinct !DILexicalBlock(scope: !17222, file: !2546, line: 1695, column: 6)
!17228 = !DILocation(line: 1695, column: 33, scope: !17227)
!17229 = !DILocation(line: 1695, column: 49, scope: !17227)
!17230 = !DILocation(line: 1695, column: 6, scope: !17222)
!17231 = !DILocation(line: 1697, column: 29, scope: !17232)
!17232 = distinct !DILexicalBlock(scope: !17227, file: !2546, line: 1695, column: 56)
!17233 = !DILocation(line: 1698, column: 7, scope: !17234)
!17234 = distinct !DILexicalBlock(scope: !17232, file: !2546, line: 1698, column: 7)
!17235 = !DILocation(line: 1698, column: 7, scope: !17232)
!17236 = !DILocation(line: 0, scope: !15606, inlinedAt: !17237)
!17237 = distinct !DILocation(line: 1699, column: 4, scope: !17238)
!17238 = distinct !DILexicalBlock(scope: !17234, file: !2546, line: 1698, column: 35)
!17239 = !DILocation(line: 266, column: 28, scope: !15606, inlinedAt: !17237)
!17240 = !DILocation(line: 0, scope: !15614, inlinedAt: !17241)
!17241 = distinct !DILocation(line: 268, column: 3, scope: !15618, inlinedAt: !17237)
!17242 = !DILocation(line: 234, column: 2, scope: !15614, inlinedAt: !17241)
!17243 = !DILocation(line: 1700, column: 3, scope: !17238)
!17244 = !DILocation(line: 1701, column: 20, scope: !17245)
!17245 = distinct !DILexicalBlock(scope: !17232, file: !2546, line: 1701, column: 7)
!17246 = !DILocation(line: 1701, column: 30, scope: !17245)
!17247 = !DILocation(line: 1701, column: 7, scope: !17232)
!17248 = !DILocation(line: 1702, column: 4, scope: !17249)
!17249 = distinct !DILexicalBlock(scope: !17245, file: !2546, line: 1701, column: 39)
!17250 = !DILocation(line: 1703, column: 3, scope: !17249)
!17251 = !DILocation(line: 1704, column: 9, scope: !17232)
!17252 = !DILocation(line: 1705, column: 23, scope: !17232)
!17253 = !DILocation(line: 1705, column: 3, scope: !17232)
!17254 = !DILocation(line: 1706, column: 3, scope: !17232)
!17255 = !DILocation(line: 1722, column: 2, scope: !17232)
!17256 = !DILocation(line: 1723, column: 1, scope: !17222)
!17257 = distinct !DISubprogram(name: "unpend_all", scope: !2546, file: !2546, line: 1674, type: !17258, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !17260)
!17258 = !DISubroutineType(types: !17259)
!17259 = !{null, !2472}
!17260 = !{!17261, !17262}
!17261 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17257, file: !2546, line: 1674, type: !2472)
!17262 = !DILocalVariable(name: "thread", scope: !17257, file: !2546, line: 1676, type: !2441)
!17263 = !DILocation(line: 0, scope: !17257)
!17264 = !DILocation(line: 1678, column: 19, scope: !17257)
!17265 = !DILocation(line: 1678, column: 41, scope: !17257)
!17266 = !DILocation(line: 1678, column: 2, scope: !17257)
!17267 = !DILocation(line: 1679, column: 3, scope: !17268)
!17268 = distinct !DILexicalBlock(scope: !17257, file: !2546, line: 1678, column: 50)
!17269 = !DILocation(line: 1680, column: 9, scope: !17268)
!17270 = !DILocalVariable(name: "thread", arg: 1, scope: !17271, file: !13987, line: 65, type: !2441)
!17271 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13987, file: !13987, line: 65, type: !17272, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !17274)
!17272 = !DISubroutineType(types: !17273)
!17273 = !{null, !2441, !32}
!17274 = !{!17270, !17275}
!17275 = !DILocalVariable(name: "value", arg: 2, scope: !17271, file: !13987, line: 65, type: !32)
!17276 = !DILocation(line: 0, scope: !17271, inlinedAt: !17277)
!17277 = distinct !DILocation(line: 1681, column: 3, scope: !17268)
!17278 = !DILocation(line: 67, column: 15, scope: !17271, inlinedAt: !17277)
!17279 = !DILocation(line: 67, column: 33, scope: !17271, inlinedAt: !17277)
!17280 = !DILocation(line: 1682, column: 3, scope: !17268)
!17281 = distinct !{!17281, !17266, !17282}
!17282 = !DILocation(line: 1683, column: 2, scope: !17257)
!17283 = !DILocation(line: 1684, column: 1, scope: !17257)
!17284 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2546, file: !2546, line: 1794, type: !17285, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !17287)
!17285 = !DISubroutineType(types: !17286)
!17286 = !{!103, !2441, !16226}
!17287 = !{!17288, !17289, !17290, !17291}
!17288 = !DILocalVariable(name: "thread", arg: 1, scope: !17284, file: !2546, line: 1794, type: !2441)
!17289 = !DILocalVariable(name: "timeout", arg: 2, scope: !17284, file: !2546, line: 1794, type: !16226)
!17290 = !DILocalVariable(name: "key", scope: !17284, file: !2546, line: 1796, type: !15429)
!17291 = !DILocalVariable(name: "ret", scope: !17284, file: !2546, line: 1797, type: !103)
!17292 = !DILocation(line: 0, scope: !17284)
!17293 = !DILocation(line: 0, scope: !15437, inlinedAt: !17294)
!17294 = distinct !DILocation(line: 1796, column: 25, scope: !17284)
!17295 = !DILocation(line: 55, column: 2, scope: !15446, inlinedAt: !17296)
!17296 = distinct !DILocation(line: 145, column: 10, scope: !15437, inlinedAt: !17294)
!17297 = !DILocation(line: 0, scope: !15446, inlinedAt: !17296)
!17298 = !DILocation(line: 1801, column: 20, scope: !17299)
!17299 = distinct !DILexicalBlock(scope: !17284, file: !2546, line: 1801, column: 6)
!17300 = !DILocation(line: 1801, column: 33, scope: !17299)
!17301 = !DILocation(line: 1801, column: 49, scope: !17299)
!17302 = !DILocation(line: 1801, column: 6, scope: !17284)
!17303 = !DILocation(line: 1803, column: 13, scope: !17304)
!17304 = distinct !DILexicalBlock(scope: !17299, file: !2546, line: 1803, column: 13)
!17305 = !DILocation(line: 1803, column: 13, scope: !17299)
!17306 = !DILocation(line: 1805, column: 24, scope: !17307)
!17307 = distinct !DILexicalBlock(scope: !17304, file: !2546, line: 1805, column: 13)
!17308 = !DILocation(line: 1805, column: 21, scope: !17307)
!17309 = !DILocation(line: 1805, column: 34, scope: !17307)
!17310 = !DILocation(line: 1806, column: 20, scope: !17307)
!17311 = !DILocation(line: 1806, column: 44, scope: !17307)
!17312 = !DILocation(line: 1806, column: 30, scope: !17307)
!17313 = !DILocation(line: 1805, column: 13, scope: !17304)
!17314 = !DILocation(line: 1810, column: 42, scope: !17315)
!17315 = distinct !DILexicalBlock(scope: !17307, file: !2546, line: 1808, column: 9)
!17316 = !DILocation(line: 1810, column: 3, scope: !17315)
!17317 = !DILocation(line: 1811, column: 22, scope: !17315)
!17318 = !DILocation(line: 1811, column: 3, scope: !17315)
!17319 = !DILocation(line: 0, scope: !16046, inlinedAt: !17320)
!17320 = distinct !DILocation(line: 1814, column: 9, scope: !17315)
!17321 = !DILocation(line: 196, column: 9, scope: !16046, inlinedAt: !17320)
!17322 = !DILocation(line: 1817, column: 3, scope: !17315)
!17323 = !DILocation(line: 0, scope: !17299)
!17324 = !DILocation(line: 0, scope: !15464, inlinedAt: !17325)
!17325 = distinct !DILocation(line: 1822, column: 2, scope: !17284)
!17326 = !DILocation(line: 0, scope: !15472, inlinedAt: !17327)
!17327 = distinct !DILocation(line: 215, column: 2, scope: !15464, inlinedAt: !17325)
!17328 = !DILocation(line: 95, column: 2, scope: !15472, inlinedAt: !17327)
!17329 = !DILocation(line: 1823, column: 2, scope: !17284)
!17330 = !DILocation(line: 1824, column: 1, scope: !17284)
!17331 = distinct !DISubprogram(name: "z_sched_wake", scope: !2546, file: !2546, line: 1882, type: !17332, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !17334)
!17332 = !DISubroutineType(types: !17333)
!17333 = !{!131, !2472, !103, !102}
!17334 = !{!17335, !17336, !17337, !17338, !17339, !17340, !17342}
!17335 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17331, file: !2546, line: 1882, type: !2472)
!17336 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !17331, file: !2546, line: 1882, type: !103)
!17337 = !DILocalVariable(name: "swap_data", arg: 3, scope: !17331, file: !2546, line: 1882, type: !102)
!17338 = !DILocalVariable(name: "thread", scope: !17331, file: !2546, line: 1884, type: !2441)
!17339 = !DILocalVariable(name: "ret", scope: !17331, file: !2546, line: 1885, type: !131)
!17340 = !DILocalVariable(name: "__i", scope: !17341, file: !2546, line: 1887, type: !15429)
!17341 = distinct !DILexicalBlock(scope: !17331, file: !2546, line: 1887, column: 2)
!17342 = !DILocalVariable(name: "__key", scope: !17341, file: !2546, line: 1887, type: !15429)
!17343 = !DILocation(line: 0, scope: !17331)
!17344 = !DILocation(line: 0, scope: !17341)
!17345 = !DILocation(line: 0, scope: !15437, inlinedAt: !17346)
!17346 = distinct !DILocation(line: 1887, column: 2, scope: !17341)
!17347 = !DILocation(line: 55, column: 2, scope: !15446, inlinedAt: !17348)
!17348 = distinct !DILocation(line: 145, column: 10, scope: !15437, inlinedAt: !17346)
!17349 = !DILocation(line: 0, scope: !15446, inlinedAt: !17348)
!17350 = !DILocation(line: 1888, column: 12, scope: !17351)
!17351 = distinct !DILexicalBlock(scope: !17352, file: !2546, line: 1887, column: 26)
!17352 = distinct !DILexicalBlock(scope: !17341, file: !2546, line: 1887, column: 2)
!17353 = !DILocation(line: 1890, column: 14, scope: !17354)
!17354 = distinct !DILexicalBlock(scope: !17351, file: !2546, line: 1890, column: 7)
!17355 = !DILocation(line: 1890, column: 7, scope: !17351)
!17356 = !DILocalVariable(name: "thread", arg: 1, scope: !17357, file: !14736, line: 134, type: !2441)
!17357 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !14736, file: !14736, line: 134, type: !17358, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !17360)
!17358 = !DISubroutineType(types: !17359)
!17359 = !{null, !2441, !32, !102}
!17360 = !{!17356, !17361, !17362}
!17361 = !DILocalVariable(name: "value", arg: 2, scope: !17357, file: !14736, line: 135, type: !32)
!17362 = !DILocalVariable(name: "data", arg: 3, scope: !17357, file: !14736, line: 136, type: !102)
!17363 = !DILocation(line: 0, scope: !17357, inlinedAt: !17364)
!17364 = distinct !DILocation(line: 1891, column: 4, scope: !17365)
!17365 = distinct !DILexicalBlock(scope: !17354, file: !2546, line: 1890, column: 23)
!17366 = !DILocation(line: 0, scope: !17271, inlinedAt: !17367)
!17367 = distinct !DILocation(line: 138, column: 2, scope: !17357, inlinedAt: !17364)
!17368 = !DILocation(line: 67, column: 15, scope: !17271, inlinedAt: !17367)
!17369 = !DILocation(line: 67, column: 33, scope: !17271, inlinedAt: !17367)
!17370 = !DILocation(line: 139, column: 15, scope: !17357, inlinedAt: !17364)
!17371 = !DILocation(line: 139, column: 25, scope: !17357, inlinedAt: !17364)
!17372 = !DILocation(line: 1894, column: 4, scope: !17365)
!17373 = !DILocation(line: 1895, column: 10, scope: !17365)
!17374 = !DILocation(line: 1896, column: 4, scope: !17365)
!17375 = !DILocation(line: 1898, column: 3, scope: !17365)
!17376 = !DILocation(line: 0, scope: !15464, inlinedAt: !17377)
!17377 = distinct !DILocation(line: 1887, column: 2, scope: !17352)
!17378 = !DILocation(line: 0, scope: !15472, inlinedAt: !17379)
!17379 = distinct !DILocation(line: 215, column: 2, scope: !15464, inlinedAt: !17377)
!17380 = !DILocation(line: 95, column: 2, scope: !15472, inlinedAt: !17379)
!17381 = !DILocation(line: 1901, column: 2, scope: !17331)
!17382 = distinct !DISubprogram(name: "z_sched_wait", scope: !2546, file: !2546, line: 1904, type: !17383, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !17386)
!17383 = !DISubroutineType(types: !17384)
!17384 = !{!103, !15440, !15429, !2472, !16226, !17385}
!17385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!17386 = !{!17387, !17388, !17389, !17390, !17391, !17392}
!17387 = !DILocalVariable(name: "lock", arg: 1, scope: !17382, file: !2546, line: 1904, type: !15440)
!17388 = !DILocalVariable(name: "key", arg: 2, scope: !17382, file: !2546, line: 1904, type: !15429)
!17389 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17382, file: !2546, line: 1905, type: !2472)
!17390 = !DILocalVariable(name: "timeout", arg: 4, scope: !17382, file: !2546, line: 1905, type: !16226)
!17391 = !DILocalVariable(name: "data", arg: 5, scope: !17382, file: !2546, line: 1905, type: !17385)
!17392 = !DILocalVariable(name: "ret", scope: !17382, file: !2546, line: 1907, type: !103)
!17393 = !DILocation(line: 0, scope: !17382)
!17394 = !DILocation(line: 1907, column: 12, scope: !17382)
!17395 = !DILocation(line: 1909, column: 11, scope: !17396)
!17396 = distinct !DILexicalBlock(scope: !17382, file: !2546, line: 1909, column: 6)
!17397 = !DILocation(line: 1909, column: 6, scope: !17382)
!17398 = !DILocation(line: 1910, column: 11, scope: !17399)
!17399 = distinct !DILexicalBlock(scope: !17396, file: !2546, line: 1909, column: 20)
!17400 = !DILocation(line: 1910, column: 26, scope: !17399)
!17401 = !DILocation(line: 1910, column: 9, scope: !17399)
!17402 = !DILocation(line: 1911, column: 2, scope: !17399)
!17403 = !DILocation(line: 1912, column: 2, scope: !17382)
!17404 = distinct !DISubprogram(name: "z_data_copy", scope: !17405, file: !17405, line: 22, type: !334, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !251)
!17405 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17406 = !DILocation(line: 24, column: 2, scope: !17404)
!17407 = !DILocation(line: 27, column: 2, scope: !17404)
!17408 = !DILocation(line: 71, column: 1, scope: !17404)
!17409 = distinct !DISubprogram(name: "z_add_timeout", scope: !2583, file: !2583, line: 88, type: !17410, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17416)
!17410 = !DISubroutineType(types: !17411)
!17411 = !{null, !2556, !2575, !17412}
!17412 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !17413)
!17413 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !17414)
!17414 = !{!17415}
!17415 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17413, file: !105, line: 66, baseType: !104, size: 64)
!17416 = !{!17417, !17418, !17419, !17420, !17426, !17427, !17430, !17433}
!17417 = !DILocalVariable(name: "to", arg: 1, scope: !17409, file: !2583, line: 88, type: !2556)
!17418 = !DILocalVariable(name: "fn", arg: 2, scope: !17409, file: !2583, line: 88, type: !2575)
!17419 = !DILocalVariable(name: "timeout", arg: 3, scope: !17409, file: !2583, line: 89, type: !17412)
!17420 = !DILocalVariable(name: "__i", scope: !17421, file: !2583, line: 102, type: !17422)
!17421 = distinct !DILexicalBlock(scope: !17409, file: !2583, line: 102, column: 2)
!17422 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !17423)
!17423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !17424)
!17424 = !{!17425}
!17425 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17423, file: !250, line: 33, baseType: !103, size: 32)
!17426 = !DILocalVariable(name: "__key", scope: !17421, file: !2583, line: 102, type: !17422)
!17427 = !DILocalVariable(name: "t", scope: !17428, file: !2583, line: 103, type: !2556)
!17428 = distinct !DILexicalBlock(scope: !17429, file: !2583, line: 102, column: 24)
!17429 = distinct !DILexicalBlock(scope: !17421, file: !2583, line: 102, column: 2)
!17430 = !DILocalVariable(name: "ticks", scope: !17431, file: !2583, line: 107, type: !104)
!17431 = distinct !DILexicalBlock(scope: !17432, file: !2583, line: 106, column: 39)
!17432 = distinct !DILexicalBlock(scope: !17428, file: !2583, line: 105, column: 7)
!17433 = !DILocalVariable(name: "next_time", scope: !17434, file: !2583, line: 137, type: !331)
!17434 = distinct !DILexicalBlock(scope: !17435, file: !2583, line: 127, column: 22)
!17435 = distinct !DILexicalBlock(scope: !17428, file: !2583, line: 127, column: 7)
!17436 = !DILocation(line: 0, scope: !17409)
!17437 = !DILocation(line: 91, column: 6, scope: !17438)
!17438 = distinct !DILexicalBlock(scope: !17409, file: !2583, line: 91, column: 6)
!17439 = !DILocation(line: 91, column: 6, scope: !17409)
!17440 = !DILocation(line: 100, column: 6, scope: !17409)
!17441 = !DILocation(line: 100, column: 9, scope: !17409)
!17442 = !DILocation(line: 0, scope: !17421)
!17443 = !DILocalVariable(name: "l", arg: 1, scope: !17444, file: !250, line: 136, type: !17447)
!17444 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !17445, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17448)
!17445 = !DISubroutineType(types: !17446)
!17446 = !{!17422, !17447}
!17447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2584, size: 32)
!17448 = !{!17443, !17449}
!17449 = !DILocalVariable(name: "k", scope: !17444, file: !250, line: 139, type: !17422)
!17450 = !DILocation(line: 0, scope: !17444, inlinedAt: !17451)
!17451 = distinct !DILocation(line: 102, column: 2, scope: !17421)
!17452 = !DILocation(line: 55, column: 2, scope: !17453, inlinedAt: !17457)
!17453 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7016, file: !7016, line: 42, type: !7017, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17454)
!17454 = !{!17455, !17456}
!17455 = !DILocalVariable(name: "key", scope: !17453, file: !7016, line: 44, type: !32)
!17456 = !DILocalVariable(name: "tmp", scope: !17453, file: !7016, line: 53, type: !32)
!17457 = distinct !DILocation(line: 145, column: 10, scope: !17444, inlinedAt: !17451)
!17458 = !{i64 2044063}
!17459 = !DILocation(line: 0, scope: !17453, inlinedAt: !17457)
!17460 = !DILocation(line: 106, column: 33, scope: !17432)
!17461 = !DILocation(line: 105, column: 7, scope: !17428)
!17462 = !DILocation(line: 107, column: 50, scope: !17431)
!17463 = !DILocation(line: 107, column: 48, scope: !17431)
!17464 = !DILocation(line: 0, scope: !17431)
!17465 = !DILocation(line: 109, column: 17, scope: !17431)
!17466 = !DILocation(line: 110, column: 3, scope: !17431)
!17467 = !DILocation(line: 111, column: 31, scope: !17468)
!17468 = distinct !DILexicalBlock(scope: !17432, file: !2583, line: 110, column: 10)
!17469 = !DILocation(line: 111, column: 37, scope: !17468)
!17470 = !DILocation(line: 111, column: 35, scope: !17468)
!17471 = !DILocation(line: 0, scope: !17432)
!17472 = !DILocation(line: 109, column: 8, scope: !17431)
!17473 = !DILocation(line: 109, column: 15, scope: !17431)
!17474 = !DILocation(line: 114, column: 12, scope: !17475)
!17475 = distinct !DILexicalBlock(scope: !17428, file: !2583, line: 114, column: 3)
!17476 = !DILocation(line: 0, scope: !17428)
!17477 = !DILocation(line: 114, column: 3, scope: !17475)
!17478 = !DILocation(line: 115, column: 24, scope: !17479)
!17479 = distinct !DILexicalBlock(scope: !17480, file: !2583, line: 115, column: 8)
!17480 = distinct !DILexicalBlock(scope: !17481, file: !2583, line: 114, column: 45)
!17481 = distinct !DILexicalBlock(scope: !17475, file: !2583, line: 114, column: 3)
!17482 = !DILocation(line: 115, column: 11, scope: !17479)
!17483 = !DILocation(line: 115, column: 18, scope: !17479)
!17484 = !DILocation(line: 115, column: 8, scope: !17480)
!17485 = !DILocation(line: 116, column: 15, scope: !17486)
!17486 = distinct !DILexicalBlock(scope: !17479, file: !2583, line: 115, column: 32)
!17487 = !DILocation(line: 117, column: 26, scope: !17486)
!17488 = !DILocation(line: 117, column: 37, scope: !17486)
!17489 = !DILocation(line: 117, column: 5, scope: !17486)
!17490 = !DILocation(line: 123, column: 7, scope: !17428)
!17491 = !DILocation(line: 120, column: 15, scope: !17480)
!17492 = !DILocation(line: 114, column: 36, scope: !17481)
!17493 = distinct !{!17493, !17477, !17494}
!17494 = !DILocation(line: 121, column: 3, scope: !17475)
!17495 = !DILocation(line: 124, column: 41, scope: !17496)
!17496 = distinct !DILexicalBlock(scope: !17497, file: !2583, line: 123, column: 18)
!17497 = distinct !DILexicalBlock(scope: !17428, file: !2583, line: 123, column: 7)
!17498 = !DILocation(line: 124, column: 4, scope: !17496)
!17499 = !DILocation(line: 125, column: 3, scope: !17496)
!17500 = !DILocation(line: 127, column: 13, scope: !17435)
!17501 = !DILocation(line: 127, column: 10, scope: !17435)
!17502 = !DILocation(line: 127, column: 7, scope: !17428)
!17503 = !DILocation(line: 137, column: 24, scope: !17434)
!17504 = !DILocation(line: 0, scope: !17434)
!17505 = !DILocation(line: 139, column: 18, scope: !17506)
!17506 = distinct !DILexicalBlock(scope: !17434, file: !2583, line: 139, column: 8)
!17507 = !DILocation(line: 139, column: 23, scope: !17506)
!17508 = !DILocation(line: 141, column: 5, scope: !17509)
!17509 = distinct !DILexicalBlock(scope: !17506, file: !2583, line: 140, column: 48)
!17510 = !DILocation(line: 142, column: 4, scope: !17509)
!17511 = !DILocalVariable(name: "key", arg: 2, scope: !17512, file: !250, line: 190, type: !17422)
!17512 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !17513, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17515)
!17513 = !DISubroutineType(types: !17514)
!17514 = !{null, !17447, !17422}
!17515 = !{!17516, !17511}
!17516 = !DILocalVariable(name: "l", arg: 1, scope: !17512, file: !250, line: 189, type: !17447)
!17517 = !DILocation(line: 0, scope: !17512, inlinedAt: !17518)
!17518 = distinct !DILocation(line: 102, column: 2, scope: !17429)
!17519 = !DILocalVariable(name: "key", arg: 1, scope: !17520, file: !7016, line: 84, type: !32)
!17520 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7016, file: !7016, line: 84, type: !7027, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17521)
!17521 = !{!17519}
!17522 = !DILocation(line: 0, scope: !17520, inlinedAt: !17523)
!17523 = distinct !DILocation(line: 215, column: 2, scope: !17512, inlinedAt: !17518)
!17524 = !DILocation(line: 95, column: 2, scope: !17520, inlinedAt: !17523)
!17525 = !{i64 2044880}
!17526 = !DILocation(line: 148, column: 1, scope: !17409)
!17527 = distinct !DISubprogram(name: "elapsed", scope: !2583, file: !2583, line: 62, type: !17528, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !251)
!17528 = !DISubroutineType(types: !17529)
!17529 = !{!331}
!17530 = !DILocation(line: 64, column: 9, scope: !17527)
!17531 = !DILocation(line: 64, column: 28, scope: !17527)
!17532 = !DILocation(line: 64, column: 35, scope: !17527)
!17533 = !DILocation(line: 64, column: 2, scope: !17527)
!17534 = distinct !DISubprogram(name: "first", scope: !2583, file: !2583, line: 39, type: !17535, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17537)
!17535 = !DISubroutineType(types: !17536)
!17536 = !{!2556}
!17537 = !{!17538}
!17538 = !DILocalVariable(name: "t", scope: !17534, file: !2583, line: 41, type: !17539)
!17539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2560, size: 32)
!17540 = !DILocation(line: 41, column: 19, scope: !17534)
!17541 = !DILocation(line: 0, scope: !17534)
!17542 = !DILocation(line: 43, column: 9, scope: !17534)
!17543 = !DILocation(line: 43, column: 2, scope: !17534)
!17544 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !146, file: !146, line: 443, type: !17545, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17547)
!17545 = !DISubroutineType(types: !17546)
!17546 = !{null, !17539, !17539}
!17547 = !{!17548, !17549, !17550}
!17548 = !DILocalVariable(name: "successor", arg: 1, scope: !17544, file: !146, line: 443, type: !17539)
!17549 = !DILocalVariable(name: "node", arg: 2, scope: !17544, file: !146, line: 443, type: !17539)
!17550 = !DILocalVariable(name: "prev", scope: !17544, file: !146, line: 445, type: !17551)
!17551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17539)
!17552 = !DILocation(line: 0, scope: !17544)
!17553 = !DILocation(line: 445, column: 39, scope: !17544)
!17554 = !DILocation(line: 447, column: 8, scope: !17544)
!17555 = !DILocation(line: 447, column: 13, scope: !17544)
!17556 = !DILocation(line: 448, column: 8, scope: !17544)
!17557 = !DILocation(line: 448, column: 13, scope: !17544)
!17558 = !DILocation(line: 449, column: 8, scope: !17544)
!17559 = !DILocation(line: 449, column: 13, scope: !17544)
!17560 = !DILocation(line: 450, column: 18, scope: !17544)
!17561 = !DILocation(line: 451, column: 1, scope: !17544)
!17562 = distinct !DISubprogram(name: "next", scope: !2583, file: !2583, line: 46, type: !17563, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17565)
!17563 = !DISubroutineType(types: !17564)
!17564 = !{!2556, !2556}
!17565 = !{!17566, !17567}
!17566 = !DILocalVariable(name: "t", arg: 1, scope: !17562, file: !2583, line: 46, type: !2556)
!17567 = !DILocalVariable(name: "n", scope: !17562, file: !2583, line: 48, type: !17539)
!17568 = !DILocation(line: 0, scope: !17562)
!17569 = !DILocation(line: 48, column: 58, scope: !17562)
!17570 = !DILocation(line: 48, column: 19, scope: !17562)
!17571 = !DILocation(line: 50, column: 9, scope: !17562)
!17572 = !DILocation(line: 50, column: 2, scope: !17562)
!17573 = distinct !DISubprogram(name: "sys_dlist_append", scope: !146, file: !146, line: 404, type: !17574, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17577)
!17574 = !DISubroutineType(types: !17575)
!17575 = !{null, !17576, !17539}
!17576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 32)
!17577 = !{!17578, !17579, !17580}
!17578 = !DILocalVariable(name: "list", arg: 1, scope: !17573, file: !146, line: 404, type: !17576)
!17579 = !DILocalVariable(name: "node", arg: 2, scope: !17573, file: !146, line: 404, type: !17539)
!17580 = !DILocalVariable(name: "tail", scope: !17573, file: !146, line: 406, type: !17551)
!17581 = !DILocation(line: 0, scope: !17573)
!17582 = !DILocation(line: 406, column: 34, scope: !17573)
!17583 = !DILocation(line: 408, column: 8, scope: !17573)
!17584 = !DILocation(line: 408, column: 13, scope: !17573)
!17585 = !DILocation(line: 409, column: 8, scope: !17573)
!17586 = !DILocation(line: 409, column: 13, scope: !17573)
!17587 = !DILocation(line: 411, column: 8, scope: !17573)
!17588 = !DILocation(line: 411, column: 13, scope: !17573)
!17589 = !DILocation(line: 412, column: 13, scope: !17573)
!17590 = !DILocation(line: 413, column: 1, scope: !17573)
!17591 = distinct !DISubprogram(name: "next_timeout", scope: !2583, file: !2583, line: 67, type: !17528, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17592)
!17592 = !{!17593, !17594, !17595}
!17593 = !DILocalVariable(name: "to", scope: !17591, file: !2583, line: 69, type: !2556)
!17594 = !DILocalVariable(name: "ticks_elapsed", scope: !17591, file: !2583, line: 70, type: !331)
!17595 = !DILocalVariable(name: "ret", scope: !17591, file: !2583, line: 71, type: !331)
!17596 = !DILocation(line: 69, column: 24, scope: !17591)
!17597 = !DILocation(line: 0, scope: !17591)
!17598 = !DILocation(line: 70, column: 26, scope: !17591)
!17599 = !DILocation(line: 73, column: 10, scope: !17600)
!17600 = distinct !DILexicalBlock(scope: !17591, file: !2583, line: 73, column: 6)
!17601 = !DILocation(line: 73, column: 19, scope: !17600)
!17602 = !DILocation(line: 74, column: 21, scope: !17600)
!17603 = !DILocation(line: 74, column: 30, scope: !17600)
!17604 = !DILocation(line: 74, column: 28, scope: !17600)
!17605 = !DILocation(line: 74, column: 45, scope: !17600)
!17606 = !DILocation(line: 73, column: 6, scope: !17591)
!17607 = !DILocation(line: 77, column: 9, scope: !17608)
!17608 = distinct !DILexicalBlock(scope: !17600, file: !2583, line: 76, column: 9)
!17609 = !DILocation(line: 0, scope: !17600)
!17610 = !DILocation(line: 81, column: 20, scope: !17611)
!17611 = distinct !DILexicalBlock(scope: !17591, file: !2583, line: 81, column: 6)
!17612 = !DILocation(line: 81, column: 6, scope: !17611)
!17613 = !DILocation(line: 81, column: 32, scope: !17611)
!17614 = !DILocation(line: 85, column: 2, scope: !17591)
!17615 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !146, file: !146, line: 341, type: !17616, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17618)
!17616 = !DISubroutineType(types: !17617)
!17617 = !{!17539, !17576, !17539}
!17618 = !{!17619, !17620}
!17619 = !DILocalVariable(name: "list", arg: 1, scope: !17615, file: !146, line: 341, type: !17576)
!17620 = !DILocalVariable(name: "node", arg: 2, scope: !17615, file: !146, line: 342, type: !17539)
!17621 = !DILocation(line: 0, scope: !17615)
!17622 = !DILocation(line: 344, column: 15, scope: !17615)
!17623 = !DILocation(line: 344, column: 9, scope: !17615)
!17624 = !DILocation(line: 344, column: 26, scope: !17615)
!17625 = !DILocation(line: 344, column: 2, scope: !17615)
!17626 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !146, file: !146, line: 325, type: !17616, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17627)
!17627 = !{!17628, !17629}
!17628 = !DILocalVariable(name: "list", arg: 1, scope: !17626, file: !146, line: 325, type: !17576)
!17629 = !DILocalVariable(name: "node", arg: 2, scope: !17626, file: !146, line: 326, type: !17539)
!17630 = !DILocation(line: 0, scope: !17626)
!17631 = !DILocation(line: 328, column: 24, scope: !17626)
!17632 = !DILocation(line: 328, column: 15, scope: !17626)
!17633 = !DILocation(line: 328, column: 9, scope: !17626)
!17634 = !DILocation(line: 328, column: 45, scope: !17626)
!17635 = !DILocation(line: 328, column: 2, scope: !17626)
!17636 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !17637, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17639)
!17637 = !DISubroutineType(types: !17638)
!17638 = !{!17539, !17576}
!17639 = !{!17640}
!17640 = !DILocalVariable(name: "list", arg: 1, scope: !17636, file: !146, line: 294, type: !17576)
!17641 = !DILocation(line: 0, scope: !17636)
!17642 = !DILocation(line: 296, column: 9, scope: !17636)
!17643 = !DILocation(line: 296, column: 2, scope: !17636)
!17644 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !17645, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17647)
!17645 = !DISubroutineType(types: !17646)
!17646 = !{!131, !17576}
!17647 = !{!17648}
!17648 = !DILocalVariable(name: "list", arg: 1, scope: !17644, file: !146, line: 266, type: !17576)
!17649 = !DILocation(line: 0, scope: !17644)
!17650 = !DILocation(line: 268, column: 15, scope: !17644)
!17651 = !DILocation(line: 268, column: 20, scope: !17644)
!17652 = !DILocation(line: 268, column: 2, scope: !17644)
!17653 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2583, file: !2583, line: 150, type: !17654, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17656)
!17654 = !DISubroutineType(types: !17655)
!17655 = !{!103, !2556}
!17656 = !{!17657, !17658, !17659, !17661}
!17657 = !DILocalVariable(name: "to", arg: 1, scope: !17653, file: !2583, line: 150, type: !2556)
!17658 = !DILocalVariable(name: "ret", scope: !17653, file: !2583, line: 152, type: !103)
!17659 = !DILocalVariable(name: "__i", scope: !17660, file: !2583, line: 154, type: !17422)
!17660 = distinct !DILexicalBlock(scope: !17653, file: !2583, line: 154, column: 2)
!17661 = !DILocalVariable(name: "__key", scope: !17660, file: !2583, line: 154, type: !17422)
!17662 = !DILocation(line: 0, scope: !17653)
!17663 = !DILocation(line: 0, scope: !17660)
!17664 = !DILocation(line: 0, scope: !17444, inlinedAt: !17665)
!17665 = distinct !DILocation(line: 154, column: 2, scope: !17660)
!17666 = !DILocation(line: 55, column: 2, scope: !17453, inlinedAt: !17667)
!17667 = distinct !DILocation(line: 145, column: 10, scope: !17444, inlinedAt: !17665)
!17668 = !DILocation(line: 0, scope: !17453, inlinedAt: !17667)
!17669 = !DILocation(line: 155, column: 7, scope: !17670)
!17670 = distinct !DILexicalBlock(scope: !17671, file: !2583, line: 155, column: 7)
!17671 = distinct !DILexicalBlock(scope: !17672, file: !2583, line: 154, column: 24)
!17672 = distinct !DILexicalBlock(scope: !17660, file: !2583, line: 154, column: 2)
!17673 = !DILocation(line: 155, column: 7, scope: !17671)
!17674 = !DILocation(line: 156, column: 4, scope: !17675)
!17675 = distinct !DILexicalBlock(scope: !17670, file: !2583, line: 155, column: 39)
!17676 = !DILocation(line: 158, column: 3, scope: !17675)
!17677 = !DILocation(line: 0, scope: !17512, inlinedAt: !17678)
!17678 = distinct !DILocation(line: 154, column: 2, scope: !17672)
!17679 = !DILocation(line: 0, scope: !17520, inlinedAt: !17680)
!17680 = distinct !DILocation(line: 215, column: 2, scope: !17512, inlinedAt: !17678)
!17681 = !DILocation(line: 95, column: 2, scope: !17520, inlinedAt: !17680)
!17682 = !DILocation(line: 161, column: 2, scope: !17653)
!17683 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !146, file: !146, line: 225, type: !17684, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17688)
!17684 = !DISubroutineType(types: !17685)
!17685 = !{!131, !17686}
!17686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17687, size: 32)
!17687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2560)
!17688 = !{!17689}
!17689 = !DILocalVariable(name: "node", arg: 1, scope: !17683, file: !146, line: 225, type: !17686)
!17690 = !DILocation(line: 0, scope: !17683)
!17691 = !DILocation(line: 227, column: 15, scope: !17683)
!17692 = !DILocation(line: 227, column: 20, scope: !17683)
!17693 = !DILocation(line: 227, column: 2, scope: !17683)
!17694 = distinct !DISubprogram(name: "remove_timeout", scope: !2583, file: !2583, line: 53, type: !2577, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17695)
!17695 = !{!17696}
!17696 = !DILocalVariable(name: "t", arg: 1, scope: !17694, file: !2583, line: 53, type: !2556)
!17697 = !DILocation(line: 0, scope: !17694)
!17698 = !DILocation(line: 55, column: 6, scope: !17699)
!17699 = distinct !DILexicalBlock(scope: !17694, file: !2583, line: 55, column: 6)
!17700 = !DILocation(line: 55, column: 14, scope: !17699)
!17701 = !DILocation(line: 55, column: 6, scope: !17694)
!17702 = !DILocation(line: 56, column: 25, scope: !17703)
!17703 = distinct !DILexicalBlock(scope: !17699, file: !2583, line: 55, column: 23)
!17704 = !DILocation(line: 56, column: 12, scope: !17703)
!17705 = !DILocation(line: 56, column: 19, scope: !17703)
!17706 = !DILocation(line: 57, column: 2, scope: !17703)
!17707 = !DILocation(line: 59, column: 23, scope: !17694)
!17708 = !DILocation(line: 59, column: 2, scope: !17694)
!17709 = !DILocation(line: 60, column: 1, scope: !17694)
!17710 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !146, file: !146, line: 496, type: !17711, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17713)
!17711 = !DISubroutineType(types: !17712)
!17712 = !{null, !17539}
!17713 = !{!17714, !17715, !17716}
!17714 = !DILocalVariable(name: "node", arg: 1, scope: !17710, file: !146, line: 496, type: !17539)
!17715 = !DILocalVariable(name: "prev", scope: !17710, file: !146, line: 498, type: !17551)
!17716 = !DILocalVariable(name: "next", scope: !17710, file: !146, line: 499, type: !17551)
!17717 = !DILocation(line: 0, scope: !17710)
!17718 = !DILocation(line: 498, column: 34, scope: !17710)
!17719 = !DILocation(line: 499, column: 34, scope: !17710)
!17720 = !DILocation(line: 501, column: 8, scope: !17710)
!17721 = !DILocation(line: 501, column: 13, scope: !17710)
!17722 = !DILocation(line: 502, column: 8, scope: !17710)
!17723 = !DILocation(line: 502, column: 13, scope: !17710)
!17724 = !DILocation(line: 503, column: 2, scope: !17710)
!17725 = !DILocation(line: 504, column: 1, scope: !17710)
!17726 = distinct !DISubprogram(name: "sys_dnode_init", scope: !146, file: !146, line: 211, type: !17711, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17727)
!17727 = !{!17728}
!17728 = !DILocalVariable(name: "node", arg: 1, scope: !17726, file: !146, line: 211, type: !17539)
!17729 = !DILocation(line: 0, scope: !17726)
!17730 = !DILocation(line: 213, column: 8, scope: !17726)
!17731 = !DILocation(line: 213, column: 13, scope: !17726)
!17732 = !DILocation(line: 214, column: 8, scope: !17726)
!17733 = !DILocation(line: 214, column: 13, scope: !17726)
!17734 = !DILocation(line: 215, column: 1, scope: !17726)
!17735 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2583, file: !2583, line: 183, type: !17736, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17740)
!17736 = !DISubroutineType(types: !17737)
!17737 = !{!104, !17738}
!17738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17739, size: 32)
!17739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2557)
!17740 = !{!17741, !17742, !17743, !17745}
!17741 = !DILocalVariable(name: "timeout", arg: 1, scope: !17735, file: !2583, line: 183, type: !17738)
!17742 = !DILocalVariable(name: "ticks", scope: !17735, file: !2583, line: 185, type: !104)
!17743 = !DILocalVariable(name: "__i", scope: !17744, file: !2583, line: 187, type: !17422)
!17744 = distinct !DILexicalBlock(scope: !17735, file: !2583, line: 187, column: 2)
!17745 = !DILocalVariable(name: "__key", scope: !17744, file: !2583, line: 187, type: !17422)
!17746 = !DILocation(line: 0, scope: !17735)
!17747 = !DILocation(line: 0, scope: !17744)
!17748 = !DILocation(line: 0, scope: !17444, inlinedAt: !17749)
!17749 = distinct !DILocation(line: 187, column: 2, scope: !17744)
!17750 = !DILocation(line: 55, column: 2, scope: !17453, inlinedAt: !17751)
!17751 = distinct !DILocation(line: 145, column: 10, scope: !17444, inlinedAt: !17749)
!17752 = !DILocation(line: 0, scope: !17453, inlinedAt: !17751)
!17753 = !DILocation(line: 188, column: 11, scope: !17754)
!17754 = distinct !DILexicalBlock(scope: !17755, file: !2583, line: 187, column: 24)
!17755 = distinct !DILexicalBlock(scope: !17744, file: !2583, line: 187, column: 2)
!17756 = !DILocation(line: 0, scope: !17512, inlinedAt: !17757)
!17757 = distinct !DILocation(line: 187, column: 2, scope: !17755)
!17758 = !DILocation(line: 0, scope: !17520, inlinedAt: !17759)
!17759 = distinct !DILocation(line: 215, column: 2, scope: !17512, inlinedAt: !17757)
!17760 = !DILocation(line: 95, column: 2, scope: !17520, inlinedAt: !17759)
!17761 = !DILocation(line: 191, column: 2, scope: !17735)
!17762 = distinct !DISubprogram(name: "timeout_rem", scope: !2583, file: !2583, line: 165, type: !17736, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17763)
!17763 = !{!17764, !17765, !17766}
!17764 = !DILocalVariable(name: "timeout", arg: 1, scope: !17762, file: !2583, line: 165, type: !17738)
!17765 = !DILocalVariable(name: "ticks", scope: !17762, file: !2583, line: 167, type: !104)
!17766 = !DILocalVariable(name: "t", scope: !17767, file: !2583, line: 173, type: !2556)
!17767 = distinct !DILexicalBlock(scope: !17762, file: !2583, line: 173, column: 2)
!17768 = !DILocation(line: 0, scope: !17762)
!17769 = !DILocation(line: 169, column: 6, scope: !17770)
!17770 = distinct !DILexicalBlock(scope: !17762, file: !2583, line: 169, column: 6)
!17771 = !DILocation(line: 169, column: 6, scope: !17762)
!17772 = !DILocation(line: 173, column: 28, scope: !17767)
!17773 = !DILocation(line: 0, scope: !17767)
!17774 = !DILocation(line: 173, column: 39, scope: !17775)
!17775 = distinct !DILexicalBlock(scope: !17767, file: !2583, line: 173, column: 2)
!17776 = !DILocation(line: 173, column: 2, scope: !17767)
!17777 = !DILocation(line: 174, column: 15, scope: !17778)
!17778 = distinct !DILexicalBlock(scope: !17775, file: !2583, line: 173, column: 61)
!17779 = !DILocation(line: 174, column: 9, scope: !17778)
!17780 = !DILocation(line: 175, column: 15, scope: !17781)
!17781 = distinct !DILexicalBlock(scope: !17778, file: !2583, line: 175, column: 7)
!17782 = !DILocation(line: 175, column: 7, scope: !17778)
!17783 = !DILocation(line: 173, column: 52, scope: !17775)
!17784 = distinct !{!17784, !17776, !17785}
!17785 = !DILocation(line: 178, column: 2, scope: !17767)
!17786 = !DILocation(line: 180, column: 17, scope: !17762)
!17787 = !DILocation(line: 180, column: 15, scope: !17762)
!17788 = !DILocation(line: 180, column: 2, scope: !17762)
!17789 = !DILocation(line: 181, column: 1, scope: !17762)
!17790 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14360, file: !14360, line: 35, type: !17791, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17793)
!17791 = !DISubroutineType(types: !17792)
!17792 = !{!131, !17738}
!17793 = !{!17794}
!17794 = !DILocalVariable(name: "to", arg: 1, scope: !17790, file: !14360, line: 35, type: !17738)
!17795 = !DILocation(line: 0, scope: !17790)
!17796 = !DILocation(line: 37, column: 35, scope: !17790)
!17797 = !DILocation(line: 37, column: 10, scope: !17790)
!17798 = !DILocation(line: 37, column: 9, scope: !17790)
!17799 = !DILocation(line: 37, column: 2, scope: !17790)
!17800 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2583, file: !2583, line: 194, type: !17736, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17801)
!17801 = !{!17802, !17803, !17804, !17806}
!17802 = !DILocalVariable(name: "timeout", arg: 1, scope: !17800, file: !2583, line: 194, type: !17738)
!17803 = !DILocalVariable(name: "ticks", scope: !17800, file: !2583, line: 196, type: !104)
!17804 = !DILocalVariable(name: "__i", scope: !17805, file: !2583, line: 198, type: !17422)
!17805 = distinct !DILexicalBlock(scope: !17800, file: !2583, line: 198, column: 2)
!17806 = !DILocalVariable(name: "__key", scope: !17805, file: !2583, line: 198, type: !17422)
!17807 = !DILocation(line: 0, scope: !17800)
!17808 = !DILocation(line: 0, scope: !17805)
!17809 = !DILocation(line: 0, scope: !17444, inlinedAt: !17810)
!17810 = distinct !DILocation(line: 198, column: 2, scope: !17805)
!17811 = !DILocation(line: 55, column: 2, scope: !17453, inlinedAt: !17812)
!17812 = distinct !DILocation(line: 145, column: 10, scope: !17444, inlinedAt: !17810)
!17813 = !DILocation(line: 0, scope: !17453, inlinedAt: !17812)
!17814 = !DILocation(line: 199, column: 11, scope: !17815)
!17815 = distinct !DILexicalBlock(scope: !17816, file: !2583, line: 198, column: 24)
!17816 = distinct !DILexicalBlock(scope: !17805, file: !2583, line: 198, column: 2)
!17817 = !DILocation(line: 199, column: 23, scope: !17815)
!17818 = !DILocation(line: 0, scope: !17512, inlinedAt: !17819)
!17819 = distinct !DILocation(line: 198, column: 2, scope: !17816)
!17820 = !DILocation(line: 0, scope: !17520, inlinedAt: !17821)
!17821 = distinct !DILocation(line: 215, column: 2, scope: !17512, inlinedAt: !17819)
!17822 = !DILocation(line: 95, column: 2, scope: !17520, inlinedAt: !17821)
!17823 = !DILocation(line: 199, column: 21, scope: !17815)
!17824 = !DILocation(line: 202, column: 2, scope: !17800)
!17825 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2583, file: !2583, line: 205, type: !17528, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17826)
!17826 = !{!17827, !17828, !17830}
!17827 = !DILocalVariable(name: "ret", scope: !17825, file: !2583, line: 207, type: !331)
!17828 = !DILocalVariable(name: "__i", scope: !17829, file: !2583, line: 209, type: !17422)
!17829 = distinct !DILexicalBlock(scope: !17825, file: !2583, line: 209, column: 2)
!17830 = !DILocalVariable(name: "__key", scope: !17829, file: !2583, line: 209, type: !17422)
!17831 = !DILocation(line: 0, scope: !17825)
!17832 = !DILocation(line: 0, scope: !17829)
!17833 = !DILocation(line: 0, scope: !17444, inlinedAt: !17834)
!17834 = distinct !DILocation(line: 209, column: 2, scope: !17829)
!17835 = !DILocation(line: 55, column: 2, scope: !17453, inlinedAt: !17836)
!17836 = distinct !DILocation(line: 145, column: 10, scope: !17444, inlinedAt: !17834)
!17837 = !DILocation(line: 0, scope: !17453, inlinedAt: !17836)
!17838 = !DILocation(line: 210, column: 9, scope: !17839)
!17839 = distinct !DILexicalBlock(scope: !17840, file: !2583, line: 209, column: 24)
!17840 = distinct !DILexicalBlock(scope: !17829, file: !2583, line: 209, column: 2)
!17841 = !DILocation(line: 0, scope: !17512, inlinedAt: !17842)
!17842 = distinct !DILocation(line: 209, column: 2, scope: !17840)
!17843 = !DILocation(line: 0, scope: !17520, inlinedAt: !17844)
!17844 = distinct !DILocation(line: 215, column: 2, scope: !17512, inlinedAt: !17842)
!17845 = !DILocation(line: 95, column: 2, scope: !17520, inlinedAt: !17844)
!17846 = !DILocation(line: 212, column: 2, scope: !17825)
!17847 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2583, file: !2583, line: 215, type: !11934, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17848)
!17848 = !{!17849, !17850, !17851, !17853, !17854, !17857, !17858}
!17849 = !DILocalVariable(name: "ticks", arg: 1, scope: !17847, file: !2583, line: 215, type: !331)
!17850 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17847, file: !2583, line: 215, type: !131)
!17851 = !DILocalVariable(name: "__i", scope: !17852, file: !2583, line: 217, type: !17422)
!17852 = distinct !DILexicalBlock(scope: !17847, file: !2583, line: 217, column: 2)
!17853 = !DILocalVariable(name: "__key", scope: !17852, file: !2583, line: 217, type: !17422)
!17854 = !DILocalVariable(name: "next_to", scope: !17855, file: !2583, line: 218, type: !103)
!17855 = distinct !DILexicalBlock(scope: !17856, file: !2583, line: 217, column: 24)
!17856 = distinct !DILexicalBlock(scope: !17852, file: !2583, line: 217, column: 2)
!17857 = !DILocalVariable(name: "sooner", scope: !17855, file: !2583, line: 219, type: !131)
!17858 = !DILocalVariable(name: "imminent", scope: !17855, file: !2583, line: 221, type: !131)
!17859 = !DILocation(line: 0, scope: !17847)
!17860 = !DILocation(line: 0, scope: !17852)
!17861 = !DILocation(line: 0, scope: !17444, inlinedAt: !17862)
!17862 = distinct !DILocation(line: 217, column: 2, scope: !17852)
!17863 = !DILocation(line: 55, column: 2, scope: !17453, inlinedAt: !17864)
!17864 = distinct !DILocation(line: 145, column: 10, scope: !17444, inlinedAt: !17862)
!17865 = !DILocation(line: 0, scope: !17453, inlinedAt: !17864)
!17866 = !DILocation(line: 218, column: 17, scope: !17855)
!17867 = !DILocation(line: 0, scope: !17855)
!17868 = !DILocation(line: 221, column: 27, scope: !17855)
!17869 = !DILocation(line: 233, column: 17, scope: !17870)
!17870 = distinct !DILexicalBlock(scope: !17855, file: !2583, line: 233, column: 7)
!17871 = !DILocation(line: 234, column: 26, scope: !17872)
!17872 = distinct !DILexicalBlock(scope: !17870, file: !2583, line: 233, column: 56)
!17873 = !DILocation(line: 234, column: 4, scope: !17872)
!17874 = !DILocation(line: 235, column: 3, scope: !17872)
!17875 = !DILocation(line: 0, scope: !17512, inlinedAt: !17876)
!17876 = distinct !DILocation(line: 217, column: 2, scope: !17856)
!17877 = !DILocation(line: 0, scope: !17520, inlinedAt: !17878)
!17878 = distinct !DILocation(line: 215, column: 2, scope: !17512, inlinedAt: !17876)
!17879 = !DILocation(line: 95, column: 2, scope: !17520, inlinedAt: !17878)
!17880 = !DILocation(line: 237, column: 1, scope: !17847)
!17881 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2583, file: !2583, line: 239, type: !17882, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17884)
!17882 = !DISubroutineType(types: !17883)
!17883 = !{null, !331}
!17884 = !{!17885, !17886, !17887, !17889}
!17885 = !DILocalVariable(name: "ticks", arg: 1, scope: !17881, file: !2583, line: 239, type: !331)
!17886 = !DILocalVariable(name: "key", scope: !17881, file: !2583, line: 245, type: !17422)
!17887 = !DILocalVariable(name: "t", scope: !17888, file: !2583, line: 262, type: !2556)
!17888 = distinct !DILexicalBlock(scope: !17881, file: !2583, line: 261, column: 67)
!17889 = !DILocalVariable(name: "dt", scope: !17888, file: !2583, line: 263, type: !103)
!17890 = !DILocation(line: 0, scope: !17881)
!17891 = !DILocation(line: 242, column: 2, scope: !17881)
!17892 = !DILocation(line: 0, scope: !17444, inlinedAt: !17893)
!17893 = distinct !DILocation(line: 245, column: 25, scope: !17881)
!17894 = !DILocation(line: 55, column: 2, scope: !17453, inlinedAt: !17895)
!17895 = distinct !DILocation(line: 145, column: 10, scope: !17444, inlinedAt: !17893)
!17896 = !DILocation(line: 0, scope: !17453, inlinedAt: !17895)
!17897 = !DILocation(line: 261, column: 9, scope: !17881)
!17898 = !DILocation(line: 261, column: 17, scope: !17881)
!17899 = !DILocation(line: 261, column: 25, scope: !17881)
!17900 = !DILocation(line: 261, column: 37, scope: !17881)
!17901 = !DILocation(line: 261, column: 47, scope: !17881)
!17902 = !DILocation(line: 261, column: 44, scope: !17881)
!17903 = !DILocation(line: 261, column: 2, scope: !17881)
!17904 = !DILocation(line: 0, scope: !17888)
!17905 = !DILocation(line: 263, column: 12, scope: !17888)
!17906 = !DILocation(line: 265, column: 16, scope: !17888)
!17907 = !DILocation(line: 265, column: 13, scope: !17888)
!17908 = !DILocation(line: 266, column: 13, scope: !17888)
!17909 = !DILocation(line: 267, column: 3, scope: !17888)
!17910 = !DILocation(line: 0, scope: !17512, inlinedAt: !17911)
!17911 = distinct !DILocation(line: 269, column: 3, scope: !17888)
!17912 = !DILocation(line: 0, scope: !17520, inlinedAt: !17913)
!17913 = distinct !DILocation(line: 215, column: 2, scope: !17512, inlinedAt: !17911)
!17914 = !DILocation(line: 95, column: 2, scope: !17520, inlinedAt: !17913)
!17915 = !DILocation(line: 270, column: 6, scope: !17888)
!17916 = !DILocation(line: 270, column: 3, scope: !17888)
!17917 = !DILocation(line: 0, scope: !17444, inlinedAt: !17918)
!17918 = distinct !DILocation(line: 271, column: 9, scope: !17888)
!17919 = !DILocation(line: 55, column: 2, scope: !17453, inlinedAt: !17920)
!17920 = distinct !DILocation(line: 145, column: 10, scope: !17444, inlinedAt: !17918)
!17921 = !DILocation(line: 0, scope: !17453, inlinedAt: !17920)
!17922 = !DILocation(line: 272, column: 22, scope: !17888)
!17923 = distinct !{!17923, !17903, !17924}
!17924 = !DILocation(line: 273, column: 2, scope: !17881)
!17925 = !DILocation(line: 276, column: 19, scope: !17926)
!17926 = distinct !DILexicalBlock(scope: !17927, file: !2583, line: 275, column: 23)
!17927 = distinct !DILexicalBlock(scope: !17881, file: !2583, line: 275, column: 6)
!17928 = !DILocation(line: 277, column: 2, scope: !17926)
!17929 = !DILocation(line: 279, column: 15, scope: !17881)
!17930 = !DILocation(line: 279, column: 12, scope: !17881)
!17931 = !DILocation(line: 280, column: 21, scope: !17881)
!17932 = !DILocation(line: 282, column: 24, scope: !17881)
!17933 = !DILocation(line: 282, column: 2, scope: !17881)
!17934 = !DILocation(line: 0, scope: !17512, inlinedAt: !17935)
!17935 = distinct !DILocation(line: 284, column: 2, scope: !17881)
!17936 = !DILocation(line: 0, scope: !17520, inlinedAt: !17937)
!17937 = distinct !DILocation(line: 215, column: 2, scope: !17512, inlinedAt: !17935)
!17938 = !DILocation(line: 95, column: 2, scope: !17520, inlinedAt: !17937)
!17939 = !DILocation(line: 285, column: 1, scope: !17881)
!17940 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2583, file: !2583, line: 287, type: !3634, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17941)
!17941 = !{!17942, !17943, !17945}
!17942 = !DILocalVariable(name: "t", scope: !17940, file: !2583, line: 289, type: !109)
!17943 = !DILocalVariable(name: "__i", scope: !17944, file: !2583, line: 291, type: !17422)
!17944 = distinct !DILexicalBlock(scope: !17940, file: !2583, line: 291, column: 2)
!17945 = !DILocalVariable(name: "__key", scope: !17944, file: !2583, line: 291, type: !17422)
!17946 = !DILocation(line: 0, scope: !17940)
!17947 = !DILocation(line: 0, scope: !17944)
!17948 = !DILocation(line: 0, scope: !17444, inlinedAt: !17949)
!17949 = distinct !DILocation(line: 291, column: 2, scope: !17944)
!17950 = !DILocation(line: 55, column: 2, scope: !17453, inlinedAt: !17951)
!17951 = distinct !DILocation(line: 145, column: 10, scope: !17444, inlinedAt: !17949)
!17952 = !DILocation(line: 0, scope: !17453, inlinedAt: !17951)
!17953 = !DILocation(line: 292, column: 7, scope: !17954)
!17954 = distinct !DILexicalBlock(scope: !17955, file: !2583, line: 291, column: 24)
!17955 = distinct !DILexicalBlock(scope: !17944, file: !2583, line: 291, column: 2)
!17956 = !DILocation(line: 292, column: 19, scope: !17954)
!17957 = !DILocation(line: 0, scope: !17512, inlinedAt: !17958)
!17958 = distinct !DILocation(line: 291, column: 2, scope: !17955)
!17959 = !DILocation(line: 0, scope: !17520, inlinedAt: !17960)
!17960 = distinct !DILocation(line: 215, column: 2, scope: !17512, inlinedAt: !17958)
!17961 = !DILocation(line: 95, column: 2, scope: !17520, inlinedAt: !17960)
!17962 = !DILocation(line: 292, column: 17, scope: !17954)
!17963 = !DILocation(line: 294, column: 2, scope: !17940)
!17964 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2583, file: !2583, line: 297, type: !3620, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !251)
!17965 = !DILocation(line: 300, column: 19, scope: !17964)
!17966 = !DILocation(line: 300, column: 9, scope: !17964)
!17967 = !DILocation(line: 300, column: 2, scope: !17964)
!17968 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2583, file: !2583, line: 306, type: !3634, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !251)
!17969 = !DILocation(line: 308, column: 9, scope: !17968)
!17970 = !DILocation(line: 308, column: 2, scope: !17968)
!17971 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2583, file: !2583, line: 319, type: !7423, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !17972)
!17972 = !{!17973, !17974, !17975, !17976}
!17973 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17971, file: !2583, line: 319, type: !108)
!17974 = !DILocalVariable(name: "start_cycles", scope: !17971, file: !2583, line: 328, type: !108)
!17975 = !DILocalVariable(name: "cycles_to_wait", scope: !17971, file: !2583, line: 331, type: !108)
!17976 = !DILocalVariable(name: "current_cycles", scope: !17977, file: !2583, line: 338, type: !108)
!17977 = distinct !DILexicalBlock(scope: !17978, file: !2583, line: 337, column: 11)
!17978 = distinct !DILexicalBlock(scope: !17979, file: !2583, line: 337, column: 2)
!17979 = distinct !DILexicalBlock(scope: !17971, file: !2583, line: 337, column: 2)
!17980 = !DILocation(line: 0, scope: !17971)
!17981 = !DILocation(line: 322, column: 19, scope: !17982)
!17982 = distinct !DILexicalBlock(scope: !17971, file: !2583, line: 322, column: 6)
!17983 = !DILocation(line: 322, column: 6, scope: !17971)
!17984 = !DILocation(line: 328, column: 26, scope: !17971)
!17985 = !DILocation(line: 333, column: 43, scope: !17971)
!17986 = !DILocation(line: 337, column: 2, scope: !17971)
!17987 = !DILocation(line: 338, column: 29, scope: !17977)
!17988 = !DILocation(line: 0, scope: !17977)
!17989 = !DILocation(line: 341, column: 23, scope: !17990)
!17990 = distinct !DILexicalBlock(scope: !17977, file: !2583, line: 341, column: 7)
!17991 = !DILocation(line: 341, column: 39, scope: !17990)
!17992 = !DILocation(line: 349, column: 1, scope: !17971)
!17993 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !137, file: !137, line: 1675, type: !3620, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !251)
!17994 = !DILocation(line: 1677, column: 9, scope: !17993)
!17995 = !DILocation(line: 1677, column: 2, scope: !17993)
!17996 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17997, file: !17997, line: 24, type: !3620, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !251)
!17997 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17998 = !DILocation(line: 26, column: 9, scope: !17996)
!17999 = !DILocation(line: 26, column: 2, scope: !17996)
!18000 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2583, file: !2583, line: 364, type: !18001, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !18003)
!18001 = !DISubroutineType(types: !18002)
!18002 = !{!109, !17412}
!18003 = !{!18004, !18005}
!18004 = !DILocalVariable(name: "timeout", arg: 1, scope: !18000, file: !2583, line: 364, type: !17412)
!18005 = !DILocalVariable(name: "dt", scope: !18000, file: !2583, line: 366, type: !104)
!18006 = !DILocation(line: 0, scope: !18000)
!18007 = !DILocation(line: 368, column: 6, scope: !18000)
!18008 = !DILocation(line: 371, column: 10, scope: !18009)
!18009 = distinct !DILexicalBlock(scope: !18010, file: !2583, line: 370, column: 47)
!18010 = distinct !DILexicalBlock(scope: !18011, file: !2583, line: 370, column: 13)
!18011 = distinct !DILexicalBlock(scope: !18000, file: !2583, line: 368, column: 6)
!18012 = !DILocation(line: 371, column: 3, scope: !18009)
!18013 = !DILocation(line: 376, column: 58, scope: !18014)
!18014 = distinct !DILexicalBlock(scope: !18015, file: !2583, line: 376, column: 7)
!18015 = distinct !DILexicalBlock(scope: !18010, file: !2583, line: 372, column: 9)
!18016 = !DILocation(line: 376, column: 7, scope: !18015)
!18017 = !DILocation(line: 376, column: 43, scope: !18014)
!18018 = !DILocation(line: 377, column: 4, scope: !18019)
!18019 = distinct !DILexicalBlock(scope: !18014, file: !2583, line: 376, column: 64)
!18020 = !DILocation(line: 379, column: 10, scope: !18015)
!18021 = !DILocation(line: 379, column: 33, scope: !18015)
!18022 = !DILocation(line: 379, column: 31, scope: !18015)
!18023 = !DILocation(line: 379, column: 3, scope: !18015)
!18024 = !DILocation(line: 0, scope: !18011)
!18025 = !DILocation(line: 381, column: 1, scope: !18000)
!18026 = distinct !DISubprogram(name: "k_free", scope: !2597, file: !2597, line: 43, type: !7271, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !18027)
!18027 = !{!18028, !18029}
!18028 = !DILocalVariable(name: "ptr", arg: 1, scope: !18026, file: !2597, line: 43, type: !102)
!18029 = !DILocalVariable(name: "heap_ref", scope: !18026, file: !2597, line: 45, type: !18030)
!18030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18031, size: 32)
!18031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 32)
!18032 = !DILocation(line: 0, scope: !18026)
!18033 = !DILocation(line: 47, column: 10, scope: !18034)
!18034 = distinct !DILexicalBlock(scope: !18026, file: !2597, line: 47, column: 6)
!18035 = !DILocation(line: 47, column: 6, scope: !18026)
!18036 = !DILocation(line: 49, column: 9, scope: !18037)
!18037 = distinct !DILexicalBlock(scope: !18034, file: !2597, line: 47, column: 19)
!18038 = !DILocation(line: 53, column: 15, scope: !18037)
!18039 = !DILocation(line: 53, column: 3, scope: !18037)
!18040 = !DILocation(line: 56, column: 2, scope: !18037)
!18041 = !DILocation(line: 57, column: 1, scope: !18026)
!18042 = distinct !DISubprogram(name: "k_aligned_alloc", scope: !2597, file: !2597, line: 64, type: !18043, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !18045)
!18043 = !DISubroutineType(types: !18044)
!18044 = !{!102, !132, !132}
!18045 = !{!18046, !18047, !18048}
!18046 = !DILocalVariable(name: "align", arg: 1, scope: !18042, file: !2597, line: 64, type: !132)
!18047 = !DILocalVariable(name: "size", arg: 2, scope: !18042, file: !2597, line: 64, type: !132)
!18048 = !DILocalVariable(name: "ret", scope: !18042, file: !2597, line: 75, type: !102)
!18049 = !DILocation(line: 0, scope: !18042)
!18050 = !DILocation(line: 75, column: 14, scope: !18042)
!18051 = !DILocation(line: 79, column: 2, scope: !18042)
!18052 = distinct !DISubprogram(name: "z_heap_aligned_alloc", scope: !2597, file: !2597, line: 12, type: !18053, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !18055)
!18053 = !DISubroutineType(types: !18054)
!18054 = !{!102, !18031, !132, !132}
!18055 = !{!18056, !18057, !18058, !18059, !18060, !18061}
!18056 = !DILocalVariable(name: "heap", arg: 1, scope: !18052, file: !2597, line: 12, type: !18031)
!18057 = !DILocalVariable(name: "align", arg: 2, scope: !18052, file: !2597, line: 12, type: !132)
!18058 = !DILocalVariable(name: "size", arg: 3, scope: !18052, file: !2597, line: 12, type: !132)
!18059 = !DILocalVariable(name: "mem", scope: !18052, file: !2597, line: 14, type: !102)
!18060 = !DILocalVariable(name: "heap_ref", scope: !18052, file: !2597, line: 15, type: !18030)
!18061 = !DILocalVariable(name: "__align", scope: !18052, file: !2597, line: 16, type: !132)
!18062 = !DILocation(line: 0, scope: !18052)
!18063 = !DILocation(line: 24, column: 6, scope: !18064)
!18064 = distinct !DILexicalBlock(scope: !18052, file: !2597, line: 24, column: 6)
!18065 = !DILocation(line: 24, column: 6, scope: !18052)
!18066 = !DILocation(line: 27, column: 18, scope: !18052)
!18067 = !DILocation(line: 29, column: 44, scope: !18052)
!18068 = !DILocation(line: 29, column: 8, scope: !18052)
!18069 = !DILocation(line: 30, column: 10, scope: !18070)
!18070 = distinct !DILexicalBlock(scope: !18052, file: !2597, line: 30, column: 6)
!18071 = !DILocation(line: 30, column: 6, scope: !18052)
!18072 = !DILocation(line: 34, column: 13, scope: !18052)
!18073 = !DILocation(line: 35, column: 12, scope: !18052)
!18074 = !DILocation(line: 36, column: 8, scope: !18052)
!18075 = !DILocation(line: 40, column: 2, scope: !18052)
!18076 = !DILocation(line: 41, column: 1, scope: !18052)
!18077 = distinct !DISubprogram(name: "size_add_overflow", scope: !14725, file: !14725, line: 47, type: !14726, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !18078)
!18078 = !{!18079, !18080, !18081}
!18079 = !DILocalVariable(name: "a", arg: 1, scope: !18077, file: !14725, line: 47, type: !132)
!18080 = !DILocalVariable(name: "b", arg: 2, scope: !18077, file: !14725, line: 47, type: !132)
!18081 = !DILocalVariable(name: "result", arg: 3, scope: !18077, file: !14725, line: 47, type: !2731)
!18082 = !DILocation(line: 0, scope: !18077)
!18083 = !DILocation(line: 49, column: 9, scope: !18077)
!18084 = !DILocation(line: 49, column: 2, scope: !18077)
!18085 = distinct !DISubprogram(name: "k_malloc", scope: !2597, file: !2597, line: 82, type: !14737, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !18086)
!18086 = !{!18087, !18088}
!18087 = !DILocalVariable(name: "size", arg: 1, scope: !18085, file: !2597, line: 82, type: !132)
!18088 = !DILocalVariable(name: "ret", scope: !18085, file: !2597, line: 86, type: !102)
!18089 = !DILocation(line: 0, scope: !18085)
!18090 = !DILocation(line: 86, column: 14, scope: !18085)
!18091 = !DILocation(line: 90, column: 2, scope: !18085)
!18092 = distinct !DISubprogram(name: "k_calloc", scope: !2597, file: !2597, line: 93, type: !18043, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !18093)
!18093 = !{!18094, !18095, !18096, !18097}
!18094 = !DILocalVariable(name: "nmemb", arg: 1, scope: !18092, file: !2597, line: 93, type: !132)
!18095 = !DILocalVariable(name: "size", arg: 2, scope: !18092, file: !2597, line: 93, type: !132)
!18096 = !DILocalVariable(name: "ret", scope: !18092, file: !2597, line: 95, type: !102)
!18097 = !DILocalVariable(name: "bounds", scope: !18092, file: !2597, line: 96, type: !132)
!18098 = !DILocation(line: 0, scope: !18092)
!18099 = !DILocation(line: 96, column: 2, scope: !18092)
!18100 = !DILocation(line: 100, column: 6, scope: !18101)
!18101 = distinct !DILexicalBlock(scope: !18092, file: !2597, line: 100, column: 6)
!18102 = !DILocation(line: 100, column: 6, scope: !18092)
!18103 = !DILocation(line: 106, column: 17, scope: !18092)
!18104 = !DILocation(line: 106, column: 8, scope: !18092)
!18105 = !DILocation(line: 107, column: 10, scope: !18106)
!18106 = distinct !DILexicalBlock(scope: !18092, file: !2597, line: 107, column: 6)
!18107 = !DILocation(line: 107, column: 6, scope: !18092)
!18108 = !DILocation(line: 108, column: 9, scope: !18109)
!18109 = distinct !DILexicalBlock(scope: !18106, file: !2597, line: 107, column: 19)
!18110 = !DILocation(line: 109, column: 2, scope: !18109)
!18111 = !DILocation(line: 114, column: 1, scope: !18092)
!18112 = distinct !DISubprogram(name: "size_mul_overflow", scope: !14725, file: !14725, line: 105, type: !14726, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !18113)
!18113 = !{!18114, !18115, !18116}
!18114 = !DILocalVariable(name: "a", arg: 1, scope: !18112, file: !14725, line: 105, type: !132)
!18115 = !DILocalVariable(name: "b", arg: 2, scope: !18112, file: !14725, line: 105, type: !132)
!18116 = !DILocalVariable(name: "result", arg: 3, scope: !18112, file: !14725, line: 105, type: !2731)
!18117 = !DILocation(line: 0, scope: !18112)
!18118 = !DILocation(line: 107, column: 9, scope: !18112)
!18119 = !DILocation(line: 107, column: 2, scope: !18112)
!18120 = distinct !DISubprogram(name: "k_thread_system_pool_assign", scope: !2597, file: !2597, line: 116, type: !18121, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !18193)
!18121 = !DISubroutineType(types: !18122)
!18122 = !{null, !18123}
!18123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18124, size: 32)
!18124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !18125)
!18125 = !{!18126, !18166, !18178, !18179, !18180, !18181, !18187, !18188}
!18126 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !18124, file: !163, line: 247, baseType: !18127, size: 384)
!18127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !18128)
!18128 = !{!18129, !18140, !18142, !18143, !18144, !18153, !18154, !18155}
!18129 = !DIDerivedType(tag: DW_TAG_member, scope: !18127, file: !163, line: 60, baseType: !18130, size: 64)
!18130 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18127, file: !163, line: 60, size: 64, elements: !18131)
!18131 = !{!18132, !18134}
!18132 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !18130, file: !163, line: 61, baseType: !18133, size: 64)
!18133 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2612)
!18134 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !18130, file: !163, line: 62, baseType: !18135, size: 64)
!18135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !18136)
!18136 = !{!18137}
!18137 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !18135, file: !175, line: 50, baseType: !18138, size: 64)
!18138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !18139, size: 64, elements: !180)
!18139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18135, size: 32)
!18140 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !18127, file: !163, line: 68, baseType: !18141, size: 32, offset: 64)
!18141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2607, size: 32)
!18142 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !18127, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!18143 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !18127, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!18144 = !DIDerivedType(tag: DW_TAG_member, scope: !18127, file: !163, line: 90, baseType: !18145, size: 16, offset: 112)
!18145 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18127, file: !163, line: 90, size: 16, elements: !18146)
!18146 = !{!18147, !18152}
!18147 = !DIDerivedType(tag: DW_TAG_member, scope: !18145, file: !163, line: 91, baseType: !18148, size: 16)
!18148 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18145, file: !163, line: 91, size: 16, elements: !18149)
!18149 = !{!18150, !18151}
!18150 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !18148, file: !163, line: 96, baseType: !195, size: 8)
!18151 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !18148, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!18152 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !18145, file: !163, line: 100, baseType: !121, size: 16)
!18153 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !18127, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!18154 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !18127, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!18155 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !18127, file: !163, line: 131, baseType: !18156, size: 192, offset: 192)
!18156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !18157)
!18157 = !{!18158, !18159, !18165}
!18158 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !18156, file: !141, line: 245, baseType: !18133, size: 64)
!18159 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !18156, file: !141, line: 246, baseType: !18160, size: 32, offset: 64)
!18160 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !18161)
!18161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18162, size: 32)
!18162 = !DISubroutineType(types: !18163)
!18163 = !{null, !18164}
!18164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18156, size: 32)
!18165 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !18156, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!18166 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !18124, file: !163, line: 250, baseType: !18167, size: 288, offset: 384)
!18167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !18168)
!18168 = !{!18169, !18170, !18171, !18172, !18173, !18174, !18175, !18176, !18177}
!18169 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !18167, file: !214, line: 26, baseType: !108, size: 32)
!18170 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !18167, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!18171 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !18167, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!18172 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !18167, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!18173 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !18167, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!18174 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !18167, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!18175 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !18167, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!18176 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !18167, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!18177 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !18167, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!18178 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !18124, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!18179 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !18124, file: !163, line: 256, baseType: !2607, size: 64, offset: 704)
!18180 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !18124, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!18181 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !18124, file: !163, line: 300, baseType: !18182, size: 96, offset: 800)
!18182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !18183)
!18183 = !{!18184, !18185, !18186}
!18184 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !18182, file: !163, line: 153, baseType: !22, size: 32)
!18185 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !18182, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!18186 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !18182, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!18187 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !18124, file: !163, line: 325, baseType: !18031, size: 32, offset: 896)
!18188 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !18124, file: !163, line: 343, baseType: !18189, size: 64, offset: 928)
!18189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !18190)
!18190 = !{!18191, !18192}
!18191 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !18189, file: !214, line: 63, baseType: !108, size: 32)
!18192 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !18189, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!18193 = !{!18194}
!18194 = !DILocalVariable(name: "thread", arg: 1, scope: !18120, file: !2597, line: 116, type: !18123)
!18195 = !DILocation(line: 0, scope: !18120)
!18196 = !DILocation(line: 118, column: 10, scope: !18120)
!18197 = !DILocation(line: 118, column: 24, scope: !18120)
!18198 = !DILocation(line: 119, column: 1, scope: !18120)
!18199 = distinct !DISubprogram(name: "z_thread_aligned_alloc", scope: !2597, file: !2597, line: 124, type: !18043, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !18200)
!18200 = !{!18201, !18202, !18203, !18204}
!18201 = !DILocalVariable(name: "align", arg: 1, scope: !18199, file: !2597, line: 124, type: !132)
!18202 = !DILocalVariable(name: "size", arg: 2, scope: !18199, file: !2597, line: 124, type: !132)
!18203 = !DILocalVariable(name: "ret", scope: !18199, file: !2597, line: 126, type: !102)
!18204 = !DILocalVariable(name: "heap", scope: !18199, file: !2597, line: 127, type: !18031)
!18205 = !DILocation(line: 0, scope: !18199)
!18206 = !DILocation(line: 129, column: 6, scope: !18207)
!18207 = distinct !DILexicalBlock(scope: !18199, file: !2597, line: 129, column: 6)
!18208 = !DILocation(line: 129, column: 6, scope: !18199)
!18209 = !DILocation(line: 132, column: 10, scope: !18210)
!18210 = distinct !DILexicalBlock(scope: !18207, file: !2597, line: 131, column: 9)
!18211 = !DILocation(line: 132, column: 20, scope: !18210)
!18212 = !DILocation(line: 135, column: 11, scope: !18213)
!18213 = distinct !DILexicalBlock(scope: !18199, file: !2597, line: 135, column: 6)
!18214 = !DILocation(line: 135, column: 6, scope: !18199)
!18215 = !DILocation(line: 136, column: 9, scope: !18216)
!18216 = distinct !DILexicalBlock(scope: !18213, file: !2597, line: 135, column: 20)
!18217 = !DILocation(line: 137, column: 2, scope: !18216)
!18218 = !DILocation(line: 0, scope: !18213)
!18219 = !DILocation(line: 141, column: 2, scope: !18199)
!18220 = distinct !DISubprogram(name: "main", scope: !18221, file: !18221, line: 27, type: !334, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3368, retainedNodes: !251)
!18221 = !DIFile(filename: "zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18222 = !DILocation(line: 38, column: 2, scope: !18223, inlinedAt: !18224)
!18223 = distinct !DISubprogram(name: "arch_nop", scope: !17997, file: !17997, line: 36, type: !334, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3368, retainedNodes: !251)
!18224 = distinct !DILocation(line: 31, column: 2, scope: !18220)
!18225 = !{i64 2039974}
!18226 = !DILocation(line: 36, column: 1, scope: !18220)
!18227 = distinct !DISubprogram(name: "boot_banner", scope: !18228, file: !18228, line: 26, type: !334, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3370, retainedNodes: !251)
!18228 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18229 = !DILocation(line: 34, column: 2, scope: !18227)
!18230 = !DILocation(line: 36, column: 1, scope: !18227)
!18231 = distinct !DISubprogram(name: "statics_init", scope: !2651, file: !2651, line: 21, type: !2657, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !18232)
!18232 = !{!18233, !18234}
!18233 = !DILocalVariable(name: "unused", arg: 1, scope: !18231, file: !2651, line: 21, type: !2659)
!18234 = !DILocalVariable(name: "h", scope: !18235, file: !2651, line: 24, type: !18236)
!18235 = distinct !DILexicalBlock(scope: !18231, file: !2651, line: 24, column: 2)
!18236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18237, size: 32)
!18237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !18238)
!18238 = !{!18239, !18245, !18251}
!18239 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18237, file: !137, line: 5074, baseType: !18240, size: 96)
!18240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !18241)
!18241 = !{!18242, !18243, !18244}
!18242 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18240, file: !240, line: 57, baseType: !243, size: 32)
!18243 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !18240, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!18244 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !18240, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!18245 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !18237, file: !137, line: 5075, baseType: !18246, size: 64, offset: 96)
!18246 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !18247)
!18247 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !18248)
!18248 = !{!18249}
!18249 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !18247, file: !141, line: 232, baseType: !18250, size: 64)
!18250 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2637)
!18251 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !18237, file: !137, line: 5076, baseType: !18252, offset: 160)
!18252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!18253 = !DILocation(line: 0, scope: !18231)
!18254 = !DILocation(line: 0, scope: !18235)
!18255 = !DILocation(line: 24, column: 2, scope: !18235)
!18256 = !DILocation(line: 52, column: 2, scope: !18231)
!18257 = !DILocation(line: 49, column: 27, scope: !18258)
!18258 = distinct !DILexicalBlock(scope: !18259, file: !2651, line: 48, column: 3)
!18259 = distinct !DILexicalBlock(scope: !18260, file: !2651, line: 24, column: 36)
!18260 = distinct !DILexicalBlock(scope: !18235, file: !2651, line: 24, column: 2)
!18261 = !DILocation(line: 49, column: 45, scope: !18258)
!18262 = !DILocation(line: 49, column: 4, scope: !18258)
!18263 = !DILocation(line: 24, column: 2, scope: !18260)
!18264 = !DILocation(line: 24, column: 2, scope: !18265)
!18265 = distinct !DILexicalBlock(scope: !18260, file: !2651, line: 24, column: 2)
!18266 = distinct !{!18266, !18255, !18267}
!18267 = !DILocation(line: 51, column: 2, scope: !18235)
!18268 = distinct !DISubprogram(name: "k_heap_init", scope: !2651, file: !2651, line: 13, type: !18269, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !18271)
!18269 = !DISubroutineType(types: !18270)
!18270 = !{null, !18236, !102, !132}
!18271 = !{!18272, !18273, !18274}
!18272 = !DILocalVariable(name: "h", arg: 1, scope: !18268, file: !2651, line: 13, type: !18236)
!18273 = !DILocalVariable(name: "mem", arg: 2, scope: !18268, file: !2651, line: 13, type: !102)
!18274 = !DILocalVariable(name: "bytes", arg: 3, scope: !18268, file: !2651, line: 13, type: !132)
!18275 = !DILocation(line: 0, scope: !18268)
!18276 = !DILocation(line: 15, column: 19, scope: !18268)
!18277 = !DILocation(line: 15, column: 2, scope: !18268)
!18278 = !DILocation(line: 16, column: 20, scope: !18268)
!18279 = !DILocation(line: 16, column: 2, scope: !18268)
!18280 = !DILocation(line: 19, column: 1, scope: !18268)
!18281 = distinct !DISubprogram(name: "z_waitq_init", scope: !14292, file: !14292, line: 47, type: !18282, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !18285)
!18282 = !DISubroutineType(types: !18283)
!18283 = !{null, !18284}
!18284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18246, size: 32)
!18285 = !{!18286}
!18286 = !DILocalVariable(name: "w", arg: 1, scope: !18281, file: !14292, line: 47, type: !18284)
!18287 = !DILocation(line: 0, scope: !18281)
!18288 = !DILocation(line: 49, column: 21, scope: !18281)
!18289 = !DILocation(line: 49, column: 2, scope: !18281)
!18290 = !DILocation(line: 50, column: 1, scope: !18281)
!18291 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !18292, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !18295)
!18292 = !DISubroutineType(types: !18293)
!18293 = !{null, !18294}
!18294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18250, size: 32)
!18295 = !{!18296}
!18296 = !DILocalVariable(name: "list", arg: 1, scope: !18291, file: !146, line: 197, type: !18294)
!18297 = !DILocation(line: 0, scope: !18291)
!18298 = !DILocation(line: 199, column: 8, scope: !18291)
!18299 = !DILocation(line: 199, column: 13, scope: !18291)
!18300 = !DILocation(line: 200, column: 8, scope: !18291)
!18301 = !DILocation(line: 200, column: 13, scope: !18291)
!18302 = !DILocation(line: 201, column: 1, scope: !18291)
!18303 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2651, file: !2651, line: 64, type: !18304, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !18310)
!18304 = !DISubroutineType(types: !18305)
!18305 = !{!102, !18236, !132, !132, !18306}
!18306 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !18307)
!18307 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !18308)
!18308 = !{!18309}
!18309 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18307, file: !105, line: 66, baseType: !104, size: 64)
!18310 = !{!18311, !18312, !18313, !18314, !18315, !18316, !18317, !18318, !18323}
!18311 = !DILocalVariable(name: "h", arg: 1, scope: !18303, file: !2651, line: 64, type: !18236)
!18312 = !DILocalVariable(name: "align", arg: 2, scope: !18303, file: !2651, line: 64, type: !132)
!18313 = !DILocalVariable(name: "bytes", arg: 3, scope: !18303, file: !2651, line: 64, type: !132)
!18314 = !DILocalVariable(name: "timeout", arg: 4, scope: !18303, file: !2651, line: 65, type: !18306)
!18315 = !DILocalVariable(name: "now", scope: !18303, file: !2651, line: 67, type: !106)
!18316 = !DILocalVariable(name: "end", scope: !18303, file: !2651, line: 67, type: !106)
!18317 = !DILocalVariable(name: "ret", scope: !18303, file: !2651, line: 68, type: !102)
!18318 = !DILocalVariable(name: "key", scope: !18303, file: !2651, line: 72, type: !18319)
!18319 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !18320)
!18320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !18321)
!18321 = !{!18322}
!18322 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18320, file: !250, line: 33, baseType: !103, size: 32)
!18323 = !DILocalVariable(name: "blocked_alloc", scope: !18303, file: !2651, line: 78, type: !131)
!18324 = !DILocation(line: 0, scope: !18303)
!18325 = !DILocation(line: 67, column: 21, scope: !18303)
!18326 = !DILocation(line: 70, column: 8, scope: !18303)
!18327 = !DILocation(line: 72, column: 41, scope: !18303)
!18328 = !DILocalVariable(name: "l", arg: 1, scope: !18329, file: !250, line: 136, type: !18332)
!18329 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !18330, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !18333)
!18330 = !DISubroutineType(types: !18331)
!18331 = !{!18319, !18332}
!18332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18252, size: 32)
!18333 = !{!18328, !18334}
!18334 = !DILocalVariable(name: "k", scope: !18329, file: !250, line: 139, type: !18319)
!18335 = !DILocation(line: 0, scope: !18329, inlinedAt: !18336)
!18336 = distinct !DILocation(line: 72, column: 25, scope: !18303)
!18337 = !DILocation(line: 55, column: 2, scope: !18338, inlinedAt: !18342)
!18338 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7016, file: !7016, line: 42, type: !7017, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !18339)
!18339 = !{!18340, !18341}
!18340 = !DILocalVariable(name: "key", scope: !18338, file: !7016, line: 44, type: !32)
!18341 = !DILocalVariable(name: "tmp", scope: !18338, file: !7016, line: 53, type: !32)
!18342 = distinct !DILocation(line: 145, column: 10, scope: !18329, inlinedAt: !18336)
!18343 = !{i64 2039117}
!18344 = !DILocation(line: 0, scope: !18338, inlinedAt: !18342)
!18345 = !DILocation(line: 81, column: 9, scope: !18346)
!18346 = distinct !DILexicalBlock(scope: !18303, file: !2651, line: 80, column: 22)
!18347 = !DILocation(line: 83, column: 9, scope: !18346)
!18348 = !DILocation(line: 85, column: 12, scope: !18349)
!18349 = distinct !DILexicalBlock(scope: !18346, file: !2651, line: 84, column: 7)
!18350 = !DILocation(line: 85, column: 21, scope: !18349)
!18351 = !DILocation(line: 85, column: 30, scope: !18349)
!18352 = !DILocation(line: 85, column: 37, scope: !18349)
!18353 = !DILocation(line: 84, column: 7, scope: !18346)
!18354 = !DILocation(line: 99, column: 10, scope: !18346)
!18355 = !DILocation(line: 0, scope: !18329, inlinedAt: !18356)
!18356 = distinct !DILocation(line: 101, column: 9, scope: !18346)
!18357 = !DILocation(line: 55, column: 2, scope: !18338, inlinedAt: !18358)
!18358 = distinct !DILocation(line: 145, column: 10, scope: !18329, inlinedAt: !18356)
!18359 = !DILocation(line: 0, scope: !18338, inlinedAt: !18358)
!18360 = distinct !{!18360, !18361, !18362}
!18361 = !DILocation(line: 80, column: 2, scope: !18303)
!18362 = !DILocation(line: 102, column: 2, scope: !18303)
!18363 = !DILocalVariable(name: "key", arg: 2, scope: !18364, file: !250, line: 190, type: !18319)
!18364 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !18365, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !18367)
!18365 = !DISubroutineType(types: !18366)
!18366 = !{null, !18332, !18319}
!18367 = !{!18368, !18363}
!18368 = !DILocalVariable(name: "l", arg: 1, scope: !18364, file: !250, line: 189, type: !18332)
!18369 = !DILocation(line: 0, scope: !18364, inlinedAt: !18370)
!18370 = distinct !DILocation(line: 106, column: 2, scope: !18303)
!18371 = !DILocalVariable(name: "key", arg: 1, scope: !18372, file: !7016, line: 84, type: !32)
!18372 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7016, file: !7016, line: 84, type: !7027, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !18373)
!18373 = !{!18371}
!18374 = !DILocation(line: 0, scope: !18372, inlinedAt: !18375)
!18375 = distinct !DILocation(line: 215, column: 2, scope: !18364, inlinedAt: !18370)
!18376 = !DILocation(line: 95, column: 2, scope: !18372, inlinedAt: !18375)
!18377 = !{i64 2039934}
!18378 = !DILocation(line: 107, column: 2, scope: !18303)
!18379 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2651, file: !2651, line: 110, type: !18380, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !18382)
!18380 = !DISubroutineType(types: !18381)
!18381 = !{!102, !18236, !132, !18306}
!18382 = !{!18383, !18384, !18385, !18386}
!18383 = !DILocalVariable(name: "h", arg: 1, scope: !18379, file: !2651, line: 110, type: !18236)
!18384 = !DILocalVariable(name: "bytes", arg: 2, scope: !18379, file: !2651, line: 110, type: !132)
!18385 = !DILocalVariable(name: "timeout", arg: 3, scope: !18379, file: !2651, line: 110, type: !18306)
!18386 = !DILocalVariable(name: "ret", scope: !18379, file: !2651, line: 114, type: !102)
!18387 = !DILocation(line: 0, scope: !18379)
!18388 = !DILocation(line: 114, column: 14, scope: !18379)
!18389 = !DILocation(line: 118, column: 2, scope: !18379)
!18390 = distinct !DISubprogram(name: "k_heap_free", scope: !2651, file: !2651, line: 121, type: !18391, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !18393)
!18391 = !DISubroutineType(types: !18392)
!18392 = !{null, !18236, !102}
!18393 = !{!18394, !18395, !18396}
!18394 = !DILocalVariable(name: "h", arg: 1, scope: !18390, file: !2651, line: 121, type: !18236)
!18395 = !DILocalVariable(name: "mem", arg: 2, scope: !18390, file: !2651, line: 121, type: !102)
!18396 = !DILocalVariable(name: "key", scope: !18390, file: !2651, line: 123, type: !18319)
!18397 = !DILocation(line: 0, scope: !18390)
!18398 = !DILocation(line: 0, scope: !18329, inlinedAt: !18399)
!18399 = distinct !DILocation(line: 123, column: 25, scope: !18390)
!18400 = !DILocation(line: 55, column: 2, scope: !18338, inlinedAt: !18401)
!18401 = distinct !DILocation(line: 145, column: 10, scope: !18329, inlinedAt: !18399)
!18402 = !DILocation(line: 0, scope: !18338, inlinedAt: !18401)
!18403 = !DILocation(line: 125, column: 20, scope: !18390)
!18404 = !DILocation(line: 125, column: 2, scope: !18390)
!18405 = !DILocation(line: 128, column: 60, scope: !18406)
!18406 = distinct !DILexicalBlock(scope: !18390, file: !2651, line: 128, column: 6)
!18407 = !DILocation(line: 128, column: 43, scope: !18406)
!18408 = !DILocation(line: 128, column: 68, scope: !18406)
!18409 = !DILocation(line: 128, column: 6, scope: !18390)
!18410 = !DILocation(line: 123, column: 41, scope: !18390)
!18411 = !DILocation(line: 129, column: 3, scope: !18412)
!18412 = distinct !DILexicalBlock(scope: !18406, file: !2651, line: 128, column: 74)
!18413 = !DILocation(line: 130, column: 2, scope: !18412)
!18414 = !DILocation(line: 0, scope: !18364, inlinedAt: !18415)
!18415 = distinct !DILocation(line: 131, column: 3, scope: !18416)
!18416 = distinct !DILexicalBlock(scope: !18406, file: !2651, line: 130, column: 9)
!18417 = !DILocation(line: 0, scope: !18372, inlinedAt: !18418)
!18418 = distinct !DILocation(line: 215, column: 2, scope: !18364, inlinedAt: !18415)
!18419 = !DILocation(line: 95, column: 2, scope: !18372, inlinedAt: !18418)
!18420 = !DILocation(line: 133, column: 1, scope: !18390)
