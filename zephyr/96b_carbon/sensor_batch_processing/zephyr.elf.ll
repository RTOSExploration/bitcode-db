; ModuleID = 'build/96b_carbon/sensor_batch_processing/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.rtio_executor_api = type { i32 (%struct.rtio*)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)* }
%struct.rtio = type { %struct.rtio_executor*, i32, %struct.rtio_sq*, %struct.rtio_cq* }
%struct.rtio_executor = type { %struct.rtio_executor_api* }
%struct.rtio_sq = type { %struct.rtio_spsc, [0 x %struct.rtio_sqe] }
%struct.rtio_spsc = type { i32, i32, i32, i32, i32 }
%struct.rtio_sqe = type { i8, i8, i16, %struct.rtio_iodev*, i8*, %union.anon.3 }
%struct.rtio_iodev = type { %struct.rtio_iodev_api*, %struct.rtio_iodev_sq*, i8* }
%struct.rtio_iodev_api = type { void (%struct.rtio_sqe*, %struct.rtio*)* }
%struct.rtio_iodev_sq = type { %struct.rtio_spsc, [0 x %struct.rtio_iodev_sqe] }
%struct.rtio_iodev_sqe = type { %struct.rtio_sqe*, %struct.rtio* }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { i32, i8* }
%struct.rtio_cq = type { %struct.rtio_spsc, [0 x %struct.anon.4] }
%struct.rtio_simple_executor = type { %struct.rtio_executor }
%struct.rtio_spsc__sq_ez_io = type { %struct.rtio_spsc, [8 x %struct.rtio_sqe] }
%struct.rtio_spsc__cq_ez_io = type { %struct.rtio_spsc, [8 x %struct.anon.4] }
%struct.rtio_spsc_vnd_sensor_iodev_sq_0 = type { %struct.rtio_spsc, [8 x %struct.rtio_iodev_sqe] }
%struct.vnd_sensor_config = type { i32, i32 }
%struct.device_state = type { i8, i8 }
%struct.vnd_sensor_data = type { %struct.rtio_iodev, %struct.k_timer, %struct.device*, %struct.k_msgq, i32 }
%struct.k_timer = type { %struct._timeout, %struct._wait_q_t, void (%struct.k_timer*)*, void (%struct.k_timer*)*, %struct.k_timeout_t, i32, i8* }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._wait_q_t = type { %struct._dnode }
%struct.k_timeout_t = type { i64 }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct.k_spinlock = type {}
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.z_arm_mpu_partition = type { i32, i32, %union.anon }
%union.anon = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %union.anon }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %union.anon, i32*, i32, %struct.vnd_sensor_config }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %union.anon, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct.vnd_sensor_config*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct.vnd_sensor_config*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct.vnd_sensor_config }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %struct.k_timeout_t, %struct.conversion }
%struct.conversion = type { [3 x i8], i8, %union.anon, %union.anon }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, i32 }
%struct.rtio_concurrent_executor = type { %struct.rtio_executor, %struct.k_spinlock, i16, i16, i16, %struct.rtio_sqe*, %struct.rtio_sqe*, i8*, %struct.rtio_sqe** }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %union.anon*, %union.anon* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [85 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [85 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233312 to i8*), void (i8*)* inttoptr (i32 134231513 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233312 to i8*), void (i8*)* inttoptr (i32 134231493 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233312 to i8*), void (i8*)* inttoptr (i32 134231483 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233312 to i8*), void (i8*)* inttoptr (i32 134231583 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233312 to i8*), void (i8*)* inttoptr (i32 134231573 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233312 to i8*), void (i8*)* inttoptr (i32 134231563 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233312 to i8*), void (i8*)* inttoptr (i32 134231553 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233312 to i8*), void (i8*)* inttoptr (i32 134231543 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233312 to i8*), void (i8*)* inttoptr (i32 134231533 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233312 to i8*), void (i8*)* inttoptr (i32 134231523 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233312 to i8*), void (i8*)* inttoptr (i32 134231503 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [52 x i8*] [i8* bitcast (%struct.rtio* @ez_io to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_main to i8*), i8* bitcast (%struct.device* @__device_dts_ord_14 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_14 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_vnd_sensor to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_rtio_executor_simple to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_rtio_executor_concurrent to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_23 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_26 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_28 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_77 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_78 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_79 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_23 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_26 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_28 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_77 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_78 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_79 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_47 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_50 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_53 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_47 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_50 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_53 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@log_const_main = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8 4 }, section ".log_const_main", align 4, !dbg !25
@z_rtio_simple_api = internal constant %struct.rtio_executor_api { i32 (%struct.rtio*)* @rtio_simple_submit, void (%struct.rtio*, %struct.rtio_sqe*, i32)* @rtio_simple_ok, void (%struct.rtio*, %struct.rtio_sqe*, i32)* @rtio_simple_err }, align 4, !dbg !235
@simple_exec = dso_local global %struct.rtio_simple_executor { %struct.rtio_executor { %struct.rtio_executor_api* @z_rtio_simple_api } }, align 4, !dbg !117
@_sq_ez_io = internal global %struct.rtio_spsc__sq_ez_io { %struct.rtio_spsc { i32 0, i32 0, i32 0, i32 0, i32 7 }, [8 x %struct.rtio_sqe] zeroinitializer }, align 4, !dbg !237
@_cq_ez_io = internal global %struct.rtio_spsc__cq_ez_io { %struct.rtio_spsc { i32 0, i32 0, i32 0, i32 0, i32 7 }, [8 x %struct.anon.4] zeroinitializer }, align 4, !dbg !245
@ez_io = dso_local global %struct.rtio { %struct.rtio_executor* getelementptr inbounds (%struct.rtio_simple_executor, %struct.rtio_simple_executor* @simple_exec, i32 0, i32 0), i32 0, %struct.rtio_sq* bitcast (%struct.rtio_spsc__sq_ez_io* @_sq_ez_io to %struct.rtio_sq*), %struct.rtio_cq* bitcast (%struct.rtio_spsc__cq_ez_io* @_cq_ez_io to %struct.rtio_cq*) }, section "._rtio.static.ez_io", align 4, !dbg !227
@bufs = internal global [8 x [16 x i8]] zeroinitializer, align 1, !dbg !229
@.str.1 = private unnamed_addr constant [33 x i8] c"%c: Submitting %d read requests\0A\00", align 1
@.str.2 = private unnamed_addr constant [36 x i8] c"%c: No completion events available\0A\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"%c: Consumed completion event %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"%c: Operation failed\0A\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"%c: Start processing %d samples\0A\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"Sample data:\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"%c: %s\0A\00", align 1
@.str.8 = private unnamed_addr constant [36 x i8] c"%c: Finished processing %d samples\0A\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"vnd_sensor\00", align 1
@log_const_vnd_sensor = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), i8 4 }, section ".log_const_vnd_sensor", align 4, !dbg !258
@vnd_sensor_iodev_sq_0 = dso_local global %struct.rtio_spsc_vnd_sensor_iodev_sq_0 { %struct.rtio_spsc { i32 0, i32 0, i32 0, i32 0, i32 7 }, [8 x %struct.rtio_iodev_sqe] zeroinitializer }, align 4, !dbg !451
@__devicehdl_dts_ord_14 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !494
@.str.1.12 = private unnamed_addr constant [9 x i8] c"sensor@0\00", align 1
@vnd_sensor_config_0 = internal constant %struct.vnd_sensor_config { i32 100, i32 16 }, align 4, !dbg !478
@__devstate_dts_ord_14 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !476
@vnd_sensor_data_0 = internal global %struct.vnd_sensor_data { %struct.rtio_iodev { %struct.rtio_iodev_api* @vnd_sensor_iodev_api, %struct.rtio_iodev_sq* bitcast (%struct.rtio_spsc_vnd_sensor_iodev_sq_0* @vnd_sensor_iodev_sq_0 to %struct.rtio_iodev_sq*), i8* null }, %struct.k_timer zeroinitializer, %struct.device* null, %struct.k_msgq zeroinitializer, i32 0 }, align 8, !dbg !485
@__device_dts_ord_14 = dso_local constant %struct.device { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.12, i32 0, i32 0), i8* bitcast (%struct.vnd_sensor_config* @vnd_sensor_config_0 to i8*), i8* null, %struct.device_state* @__devstate_dts_ord_14, i8* bitcast (%struct.vnd_sensor_data* @vnd_sensor_data_0 to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_14, i32 0, i32 0) }, section ".z_device_POST_KERNEL50_", align 4, !dbg !463
@__init___device_dts_ord_14 = internal constant %struct.init_entry { i32 (%struct.device*)* @vnd_sensor_init, %struct.device* @__device_dts_ord_14 }, section ".z_init_POST_KERNEL50_", align 4, !dbg !465
@vnd_sensor_iodev_api = internal constant %struct.rtio_iodev_api { void (%struct.rtio_sqe*, %struct.rtio*)* @vnd_sensor_iodev_submit }, align 4, !dbg !487
@.str.2.16 = private unnamed_addr constant [29 x i8] c"%c: %s: Could not put a msg\0A\00", align 1
@.str.3.19 = private unnamed_addr constant [29 x i8] c"%c: %s: Could not get a msg\0A\00", align 1
@.str.4.20 = private unnamed_addr constant [20 x i8] c"%c: %s: Invalid op\0A\00", align 1
@.str.5.21 = private unnamed_addr constant [32 x i8] c"%c: %s: buf_len = %d, buf = %p\0A\00", align 1
@.str.6.22 = private unnamed_addr constant [29 x i8] c"%c: %s: Buffer is too small\0A\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !532
@.str.1.25 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !553
@.str.28 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !563
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !606
@.str.36 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.38 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.39 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.37 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.41 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.42 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.40 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.43 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.44 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.45 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.46 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.60 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.55 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.56 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.57 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.58 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.59 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.52 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.53 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.51 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9.54 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.15 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.17 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.18 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.19 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.22 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.23.50 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.24 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.25 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.26 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.27 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.28.49 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.29 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.66 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !635
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %union.anon { i32 101384192 } }], align 4, !dbg !776
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !641
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !785
@.str.72 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.1.73 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !821
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.84, i32 0, i32 0), %union.anon { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.85, i32 0, i32 0), %union.anon { i32 285933600 } }], align 4, !dbg !831
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !836
@.str.84 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.85 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.86 = private unnamed_addr constant [21 x i8] c"rtio_executor_simple\00", align 1
@log_const_rtio_executor_simple = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.86, i32 0, i32 0), i8 3 }, section ".log_const_rtio_executor_simple", align 4, !dbg !856
@.str.96 = private unnamed_addr constant [25 x i8] c"rtio_executor_concurrent\00", align 1
@log_const_rtio_executor_concurrent = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.96, i32 0, i32 0), i8 3 }, section ".log_const_rtio_executor_concurrent", align 4, !dbg !867
@.str.1.98 = private unnamed_addr constant [12 x i8] c"%c: submit\0A\00", align 1
@.str.2.100 = private unnamed_addr constant [26 x i8] c"%c: head SQE in chain %p\0A\00", align 1
@.str.3.101 = private unnamed_addr constant [24 x i8] c"%c: setting up task %d\0A\00", align 1
@.str.4.102 = private unnamed_addr constant [22 x i8] c"%c: submitted sqe %p\0A\00", align 1
@.str.5.103 = private unnamed_addr constant [26 x i8] c"%c: tail SQE in chain %p\0A\00", align 1
@.str.6.104 = private unnamed_addr constant [32 x i8] c"%c: resuming suspended task %d\0A\00", align 1
@.str.7.107 = private unnamed_addr constant [29 x i8] c"%c: sweeping oldest task %d\0A\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !984
@__devicehdl_dts_ord_42 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !505
@.str.110 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1114
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !1097
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.110, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1070
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1086
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1116
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1129
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1131
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1133
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1135
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1137
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1139
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1141
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1143
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1145
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1147
@__devicehdl_dts_ord_9 = dso_local constant [14 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 32767], section ".__device_handles_pass2", align 2, !dbg !499
@.str.112 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !1152
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1249
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1238
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1290
@__devicehdl_dts_ord_28 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !524
@.str.121 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct.vnd_sensor_config { i32 48, i32 1 } }, align 4, !dbg !1356
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1635
@__devstate_dts_ord_28 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1605
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1591
@__init___device_dts_ord_28 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_28 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1533
@__devicehdl_dts_ord_23 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !522
@.str.1.122 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct.vnd_sensor_config { i32 48, i32 2 } }, align 4, !dbg !1637
@__devstate_dts_ord_23 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1609
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1607
@__init___device_dts_ord_23 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_23 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1547
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !520
@.str.2.123 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct.vnd_sensor_config { i32 48, i32 4 } }, align 4, !dbg !1650
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1613
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1611
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1556
@__devicehdl_dts_ord_26 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !518
@.str.3.124 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct.vnd_sensor_config { i32 48, i32 8 } }, align 4, !dbg !1652
@__devstate_dts_ord_26 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1617
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1615
@__init___device_dts_ord_26 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_26 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1565
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !516
@.str.4.125 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct.vnd_sensor_config { i32 48, i32 16 } }, align 4, !dbg !1654
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1621
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1619
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1571
@__devicehdl_dts_ord_77 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !514
@.str.5.126 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct.vnd_sensor_config { i32 48, i32 32 } }, align 4, !dbg !1656
@__devstate_dts_ord_77 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1625
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1623
@__init___device_dts_ord_77 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_77 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1577
@__devicehdl_dts_ord_78 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !512
@.str.6.127 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct.vnd_sensor_config { i32 48, i32 64 } }, align 4, !dbg !1658
@__devstate_dts_ord_78 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1629
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1627
@__init___device_dts_ord_78 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_78 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1583
@__devicehdl_dts_ord_79 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !510
@.str.7.128 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct.vnd_sensor_config { i32 48, i32 128 } }, align 4, !dbg !1660
@__devstate_dts_ord_79 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1633
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1631
@__init___device_dts_ord_79 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_79 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1589
@.str.132 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.132, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1662
@__devicehdl_dts_ord_50 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !530
@.str.1.135 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct.vnd_sensor_config* getelementptr inbounds ([1 x %struct.vnd_sensor_config], [1 x %struct.vnd_sensor_config]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_50 }, align 4, !dbg !1832
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1887
@__devstate_dts_ord_50 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1826
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1889
@__device_dts_ord_50 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.135, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_50, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_50, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1805
@__init___device_dts_ord_50 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_50 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1807
@__devicehdl_dts_ord_47 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !528
@.str.2.138 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct.vnd_sensor_config* getelementptr inbounds ([1 x %struct.vnd_sensor_config], [1 x %struct.vnd_sensor_config]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_47 }, align 4, !dbg !1895
@__devstate_dts_ord_47 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1828
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1905
@__device_dts_ord_47 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.138, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_47, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_47, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1816
@__init___device_dts_ord_47 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_47 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1818
@__devicehdl_dts_ord_53 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !526
@.str.3.139 = private unnamed_addr constant [16 x i8] c"serial@40011400\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073812480 to %struct.USART_TypeDef*), %struct.vnd_sensor_config* getelementptr inbounds ([1 x %struct.vnd_sensor_config], [1 x %struct.vnd_sensor_config]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_53 }, align 4, !dbg !1907
@__devstate_dts_ord_53 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1830
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1917
@__device_dts_ord_53 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.139, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_53, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_53, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1822
@__init___device_dts_ord_53 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_53 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1824
@pclken_0 = internal constant [1 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 68, i32 16 }], align 4, !dbg !1876
@__pinctrl_dev_config__device_dts_ord_50 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_50, i32 0, i32 0), i8 1 }, align 4, !dbg !1879
@__pinctrl_states__device_dts_ord_50 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.vnd_sensor_config* getelementptr inbounds ([2 x %struct.vnd_sensor_config], [2 x %struct.vnd_sensor_config]* @__pinctrl_state_pins_0__device_dts_ord_50, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1881
@__pinctrl_state_pins_0__device_dts_ord_50 = internal constant [2 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 295, i32 512 }, %struct.vnd_sensor_config { i32 327, i32 0 }], align 4, !dbg !1884
@.str.4.137 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.5.142 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.6.144 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.7.145 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.112, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([14 x i16], [14 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1222
@pclken_1 = internal constant [1 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 64, i32 131072 }], align 4, !dbg !1897
@__pinctrl_dev_config__device_dts_ord_47 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_47, i32 0, i32 0), i8 1 }, align 4, !dbg !1899
@__pinctrl_states__device_dts_ord_47 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.vnd_sensor_config* getelementptr inbounds ([2 x %struct.vnd_sensor_config], [2 x %struct.vnd_sensor_config]* @__pinctrl_state_pins_0__device_dts_ord_47, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1901
@__pinctrl_state_pins_0__device_dts_ord_47 = internal constant [2 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 71, i32 512 }, %struct.vnd_sensor_config { i32 103, i32 0 }], align 4, !dbg !1903
@pclken_2 = internal constant [1 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 68, i32 32 }], align 4, !dbg !1909
@__pinctrl_dev_config__device_dts_ord_53 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_53, i32 0, i32 0), i8 1 }, align 4, !dbg !1911
@__pinctrl_states__device_dts_ord_53 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.vnd_sensor_config* getelementptr inbounds ([2 x %struct.vnd_sensor_config], [2 x %struct.vnd_sensor_config]* @__pinctrl_state_pins_0__device_dts_ord_53, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1913
@__pinctrl_state_pins_0__device_dts_ord_53 = internal constant [2 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 1224, i32 512 }, %struct.vnd_sensor_config { i32 1256, i32 0 }], align 4, !dbg !1915
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.8 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1924
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !2033
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !2035
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !2031
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !2002
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_28, %struct.device* @__device_dts_ord_23, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_26, %struct.device* @__device_dts_ord_76, %struct.device* @__device_dts_ord_77, %struct.device* @__device_dts_ord_78, %struct.device* @__device_dts_ord_79, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !2037
@__device_dts_ord_28 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.121, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_28, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_28, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1531
@__device_dts_ord_23 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.122, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_23, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_23, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1545
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.123, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1554
@__device_dts_ord_26 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.124, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_26, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_26, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1563
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.125, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1569
@__device_dts_ord_77 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.126, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_77, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_77, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1575
@__device_dts_ord_78 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.127, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_78, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_78, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1581
@__device_dts_ord_79 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.128, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_79, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_79, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1587
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !2127
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !2169
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2172
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2178
@.str.180 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.184 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.185 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.186 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.190 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.191 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.192 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.193 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.194 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.189 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.188 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.190, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.191, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.192, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.193, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.194, i32 0, i32 0)], align 4
@.str.196 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.196, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2185
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2408
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2394
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2403
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2415
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2420
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.205 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.210, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.211, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.212, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.213, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.214, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.215, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.209, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.216, i32 0, i32 0)], align 4, !dbg !2448
@.str.210 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.211 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.212 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.213 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.214 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.215 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.209 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.216 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2560
@.str.8.208 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2573
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2681
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2684
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2686
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2413
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2405
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2688
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2724
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2272
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2722
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2727
@.str.289 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3433 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3437, !srcloc !3438
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3439, !srcloc !3440
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3441, !srcloc !3442
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3443, !srcloc !3444
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3445, !srcloc !3446
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3447, !srcloc !3448
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3449, !srcloc !3450
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3451, !srcloc !3452
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3453, !srcloc !3454
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3455, !srcloc !3456
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3457, !srcloc !3458
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3459, !srcloc !3460
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3461, !srcloc !3462
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3463, !srcloc !3464
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3465, !srcloc !3466
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3467, !srcloc !3468
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3469, !srcloc !3470
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #23, !dbg !3471, !srcloc !3472
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3473, !srcloc !3474
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3475, !srcloc !3476
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #23, !dbg !3477, !srcloc !3478
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #23, !dbg !3479, !srcloc !3480
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3481, !srcloc !3482
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3483, !srcloc !3484
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3485, !srcloc !3486
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3487, !srcloc !3488
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3489, !srcloc !3490
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3491, !srcloc !3494
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3495, !srcloc !3496
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3497, !srcloc !3498
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3499, !srcloc !3500
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3501, !srcloc !3502
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3503, !srcloc !3504
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3505, !srcloc !3506
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3507, !srcloc !3508
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3509, !srcloc !3510
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3511, !srcloc !3512
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3513, !srcloc !3514
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3515, !srcloc !3516
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3517, !srcloc !3518
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3519, !srcloc !3520
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3521, !srcloc !3522
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3523, !srcloc !3524
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3525, !srcloc !3526
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3527, !srcloc !3528
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3529, !srcloc !3530
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3531, !srcloc !3532
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3533, !srcloc !3534
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3535, !srcloc !3536
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3537, !srcloc !3538
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3539, !srcloc !3540
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #23, !dbg !3541, !srcloc !3542
  ret void, !dbg !3543
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3546 {
  %1 = alloca [4 x i8*], align 4
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_14, metadata !3548, metadata !DIExpression()), !dbg !3600
  %2 = load %struct.rtio_iodev*, %struct.rtio_iodev** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_14, i32 0, i32 4) to %struct.rtio_iodev**), align 4, !dbg !3601
  call void @llvm.dbg.value(metadata %struct.rtio_iodev* %2, metadata !3565, metadata !DIExpression()), !dbg !3600
  call void @llvm.dbg.value(metadata i32 0, metadata !3567, metadata !DIExpression()), !dbg !3602
  %3 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3603
  br label %8, !dbg !3604

4:                                                ; preds = %46
  %5 = bitcast [4 x i8*]* %1 to i8*
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #24, !dbg !3600
  %7 = zext i8 %6 to i32
  br label %50, !dbg !3605

8:                                                ; preds = %0, %46
  %9 = phi %struct.rtio_sq* [ %3, %0 ], [ %47, %46 ], !dbg !3603
  %10 = phi i32 [ 0, %0 ], [ %48, %46 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !3567, metadata !DIExpression()), !dbg !3602
  %11 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 2, !dbg !3603
  %12 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %11) #24, !dbg !3603
  %13 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3603
  %14 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 0, !dbg !3603
  %15 = load i32, i32* %14, align 4, !dbg !3603
  %16 = add i32 %15, %12, !dbg !3603
  call void @llvm.dbg.value(metadata i32 %16, metadata !3573, metadata !DIExpression()), !dbg !3606
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 3, !dbg !3603
  %18 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %17) #24, !dbg !3603
  %19 = sub i32 %16, %18, !dbg !3603
  %20 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3603
  %21 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %20, i32 0, i32 0, i32 4, !dbg !3603
  %22 = load i32, i32* %21, align 4, !dbg !3603
  %23 = add i32 %22, 1, !dbg !3603
  %24 = icmp ult i32 %19, %23, !dbg !3603
  call void @llvm.dbg.value(metadata i1 %24, metadata !3575, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3606
  br i1 %24, label %25, label %34, !dbg !3603

25:                                               ; preds = %8
  %26 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %20, i32 0, i32 0, i32 0, !dbg !3607
  %27 = load i32, i32* %26, align 4, !dbg !3607
  %28 = add i32 %27, 1, !dbg !3607
  store i32 %28, i32* %26, align 4, !dbg !3607
  %29 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3603
  %30 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %29, i32 0, i32 0, i32 4, !dbg !3603
  %31 = load i32, i32* %30, align 4, !dbg !3603
  %32 = and i32 %31, %16, !dbg !3603
  %33 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %29, i32 0, i32 1, i32 %32, !dbg !3603
  br label %34, !dbg !3603

34:                                               ; preds = %8, %25
  %35 = phi %struct.rtio_sqe* [ %33, %25 ], [ null, %8 ], !dbg !3603
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %35, metadata !3569, metadata !DIExpression()), !dbg !3610
  %36 = getelementptr inbounds [8 x [16 x i8]], [8 x [16 x i8]]* @bufs, i32 0, i32 %10, i32 0, !dbg !3611
  tail call fastcc void @rtio_sqe_prep_read(%struct.rtio_sqe* noundef %35, %struct.rtio_iodev* noundef %2, i8* noundef nonnull %36, i8* noundef nonnull %36) #24, !dbg !3612
  %37 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3613
  %38 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 0, i32 0, !dbg !3613
  %39 = load i32, i32* %38, align 4, !dbg !3613
  %40 = icmp eq i32 %39, 0, !dbg !3613
  br i1 %40, label %46, label %41, !dbg !3616

41:                                               ; preds = %34
  %42 = add i32 %39, -1, !dbg !3617
  store i32 %42, i32* %38, align 4, !dbg !3617
  %43 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3617
  %44 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %43, i32 0, i32 0, i32 2, !dbg !3617
  tail call fastcc void @atomic_add(i32* noundef nonnull %44, i32 noundef 1) #24, !dbg !3617
  %45 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3603
  br label %46, !dbg !3617

46:                                               ; preds = %41, %34
  %47 = phi %struct.rtio_sq* [ %45, %41 ], [ %37, %34 ]
  %48 = add nuw nsw i32 %10, 1, !dbg !3619
  call void @llvm.dbg.value(metadata i32 %48, metadata !3567, metadata !DIExpression()), !dbg !3602
  %49 = icmp eq i32 %48, 8, !dbg !3620
  br i1 %49, label %4, label %8, !dbg !3604, !llvm.loop !3621

50:                                               ; preds = %4, %154
  call void @llvm.dbg.value(metadata i32 0, metadata !3576, metadata !DIExpression()), !dbg !3623
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #23, !dbg !3624
  call void @llvm.dbg.declare(metadata [4 x i8*]* %1, metadata !3578, metadata !DIExpression()), !dbg !3625
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i32 0, i32 0), i32 noundef %7, i32 noundef 4) #25, !dbg !3626
  tail call fastcc void @rtio_submit() #24, !dbg !3631
  call void @llvm.dbg.value(metadata i32 0, metadata !3576, metadata !DIExpression()), !dbg !3623
  br label %51, !dbg !3632

51:                                               ; preds = %50, %97
  %52 = phi i32 [ 0, %50 ], [ %98, %97 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !3576, metadata !DIExpression()), !dbg !3623
  %53 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3633
  %54 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %53, i32 0, i32 0, i32 3, !dbg !3633
  %55 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %54) #24, !dbg !3633
  %56 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3633
  %57 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %56, i32 0, i32 0, i32 1, !dbg !3633
  %58 = load i32, i32* %57, align 4, !dbg !3633
  %59 = add i32 %58, %55, !dbg !3633
  call void @llvm.dbg.value(metadata i32 %59, metadata !3583, metadata !DIExpression()), !dbg !3634
  %60 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %56, i32 0, i32 0, i32 2, !dbg !3633
  %61 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %60) #24, !dbg !3633
  %62 = icmp eq i32 %59, %61, !dbg !3633
  call void @llvm.dbg.value(metadata i1 %62, metadata !3585, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3634
  br i1 %62, label %63, label %66, !dbg !3633

63:                                               ; preds = %51
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %71, i32 %74), metadata !3580, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3635
  %64 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 4) #24, !dbg !3636
  %65 = zext i8 %64 to i32, !dbg !3636
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i32 0, i32 0), i32 noundef %65) #25, !dbg !3636
  tail call fastcc void @k_msleep(i32 noundef 100) #24, !dbg !3643
  br label %97, !dbg !3644, !llvm.loop !3645

66:                                               ; preds = %51
  %67 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3647
  %68 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %67, i32 0, i32 0, i32 1, !dbg !3647
  %69 = load i32, i32* %68, align 4, !dbg !3647
  %70 = add i32 %69, 1, !dbg !3647
  store i32 %70, i32* %68, align 4, !dbg !3647
  %71 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3633
  %72 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %71, i32 0, i32 0, i32 4, !dbg !3633
  %73 = load i32, i32* %72, align 4, !dbg !3633
  %74 = and i32 %73, %59, !dbg !3633
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %71, i32 %74), metadata !3580, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3635
  %75 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 4) #24, !dbg !3650
  %76 = zext i8 %75 to i32, !dbg !3650
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i32 0, i32 0), i32 noundef %76, i32 noundef %52) #25, !dbg !3650
  %77 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %71, i32 0, i32 1, i32 %74, i32 0, !dbg !3655
  %78 = load i32, i32* %77, align 4, !dbg !3655
  %79 = icmp slt i32 %78, 0, !dbg !3657
  br i1 %79, label %80, label %83, !dbg !3658

80:                                               ; preds = %66
  %81 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #24, !dbg !3659
  %82 = zext i8 %81 to i32, !dbg !3659
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i32 0, i32 0), i32 noundef %82) #25, !dbg !3659
  br label %83, !dbg !3665

83:                                               ; preds = %80, %66
  %84 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %71, i32 0, i32 1, i32 %74, i32 1, !dbg !3666
  %85 = load i8*, i8** %84, align 4, !dbg !3666
  %86 = getelementptr inbounds [4 x i8*], [4 x i8*]* %1, i32 0, i32 %52, !dbg !3667
  store i8* %85, i8** %86, align 4, !dbg !3668
  %87 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3669
  %88 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %87, i32 0, i32 0, i32 1, !dbg !3669
  %89 = load i32, i32* %88, align 4, !dbg !3669
  %90 = icmp eq i32 %89, 0, !dbg !3669
  br i1 %90, label %95, label %91, !dbg !3672

91:                                               ; preds = %83
  %92 = add i32 %89, -1, !dbg !3673
  store i32 %92, i32* %88, align 4, !dbg !3673
  %93 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3673
  %94 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %93, i32 0, i32 0, i32 3, !dbg !3673
  tail call fastcc void @atomic_add(i32* noundef nonnull %94, i32 noundef 1) #24, !dbg !3673
  br label %95, !dbg !3673

95:                                               ; preds = %91, %83
  %96 = add nsw i32 %52, 1, !dbg !3675
  call void @llvm.dbg.value(metadata i32 %96, metadata !3576, metadata !DIExpression()), !dbg !3623
  br label %97, !dbg !3646

97:                                               ; preds = %95, %63
  %98 = phi i32 [ %52, %63 ], [ %96, %95 ], !dbg !3623
  call void @llvm.dbg.value(metadata i32 %98, metadata !3576, metadata !DIExpression()), !dbg !3623
  %99 = icmp slt i32 %98, 4, !dbg !3676
  br i1 %99, label %51, label %100, !dbg !3632

100:                                              ; preds = %97
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i32 0, i32 0), i32 noundef %7, i32 noundef 4) #25, !dbg !3677
  call void @llvm.dbg.value(metadata i32 0, metadata !3576, metadata !DIExpression()), !dbg !3623
  %101 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 4) #24, !dbg !3600
  %102 = zext i8 %101 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !3576, metadata !DIExpression()), !dbg !3623
  br label %103, !dbg !3682

103:                                              ; preds = %100, %103
  %104 = phi i32 [ 0, %100 ], [ %107, %103 ]
  call void @llvm.dbg.value(metadata i32 %104, metadata !3576, metadata !DIExpression()), !dbg !3623
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0), metadata !3586, metadata !DIExpression()), !dbg !3683
  call void @llvm.dbg.value(metadata i1 false, metadata !3591, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3683
  call void @llvm.dbg.value(metadata i32 0, metadata !3592, metadata !DIExpression()), !dbg !3683
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i32 noundef %102, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0)) #25, !dbg !3684
  %105 = getelementptr inbounds [4 x i8*], [4 x i8*]* %1, i32 0, i32 %104, !dbg !3688
  %106 = load i8*, i8** %105, align 4, !dbg !3688
  tail call void @z_log_minimal_hexdump_print(i32 noundef 4, i8* noundef %106, i32 noundef 16) #25, !dbg !3688
  %107 = add nuw nsw i32 %104, 1, !dbg !3689
  call void @llvm.dbg.value(metadata i32 %107, metadata !3576, metadata !DIExpression()), !dbg !3623
  %108 = icmp eq i32 %107, 4, !dbg !3690
  br i1 %108, label %109, label %103, !dbg !3682, !llvm.loop !3691

109:                                              ; preds = %103
  tail call fastcc void @k_msleep(i32 noundef 300) #24, !dbg !3693
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i32 0, i32 0), i32 noundef %7, i32 noundef 4) #25, !dbg !3694
  call void @llvm.dbg.value(metadata i32 0, metadata !3576, metadata !DIExpression()), !dbg !3623
  %110 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3699
  br label %111, !dbg !3700

111:                                              ; preds = %109, %150
  %112 = phi %struct.rtio_sq* [ %110, %109 ], [ %151, %150 ], !dbg !3699
  %113 = phi i32 [ 0, %109 ], [ %152, %150 ]
  call void @llvm.dbg.value(metadata i32 %113, metadata !3576, metadata !DIExpression()), !dbg !3623
  %114 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %112, i32 0, i32 0, i32 2, !dbg !3699
  %115 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %114) #24, !dbg !3699
  %116 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3699
  %117 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %116, i32 0, i32 0, i32 0, !dbg !3699
  %118 = load i32, i32* %117, align 4, !dbg !3699
  %119 = add i32 %118, %115, !dbg !3699
  call void @llvm.dbg.value(metadata i32 %119, metadata !3597, metadata !DIExpression()), !dbg !3701
  %120 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %116, i32 0, i32 0, i32 3, !dbg !3699
  %121 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %120) #24, !dbg !3699
  %122 = sub i32 %119, %121, !dbg !3699
  %123 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3699
  %124 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %123, i32 0, i32 0, i32 4, !dbg !3699
  %125 = load i32, i32* %124, align 4, !dbg !3699
  %126 = add i32 %125, 1, !dbg !3699
  %127 = icmp ult i32 %122, %126, !dbg !3699
  call void @llvm.dbg.value(metadata i1 %127, metadata !3599, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3701
  br i1 %127, label %128, label %137, !dbg !3699

128:                                              ; preds = %111
  %129 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %123, i32 0, i32 0, i32 0, !dbg !3702
  %130 = load i32, i32* %129, align 4, !dbg !3702
  %131 = add i32 %130, 1, !dbg !3702
  store i32 %131, i32* %129, align 4, !dbg !3702
  %132 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3699
  %133 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %132, i32 0, i32 0, i32 4, !dbg !3699
  %134 = load i32, i32* %133, align 4, !dbg !3699
  %135 = and i32 %134, %119, !dbg !3699
  %136 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %132, i32 0, i32 1, i32 %135, !dbg !3699
  br label %137, !dbg !3699

137:                                              ; preds = %111, %128
  %138 = phi %struct.rtio_sqe* [ %136, %128 ], [ null, %111 ], !dbg !3699
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %138, metadata !3593, metadata !DIExpression()), !dbg !3705
  %139 = getelementptr inbounds [4 x i8*], [4 x i8*]* %1, i32 0, i32 %113, !dbg !3706
  %140 = load i8*, i8** %139, align 4, !dbg !3706
  tail call fastcc void @rtio_sqe_prep_read(%struct.rtio_sqe* noundef %138, %struct.rtio_iodev* noundef %2, i8* noundef %140, i8* noundef %140) #24, !dbg !3707
  %141 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3708
  %142 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %141, i32 0, i32 0, i32 0, !dbg !3708
  %143 = load i32, i32* %142, align 4, !dbg !3708
  %144 = icmp eq i32 %143, 0, !dbg !3708
  br i1 %144, label %150, label %145, !dbg !3711

145:                                              ; preds = %137
  %146 = add i32 %143, -1, !dbg !3712
  store i32 %146, i32* %142, align 4, !dbg !3712
  %147 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3712
  %148 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %147, i32 0, i32 0, i32 2, !dbg !3712
  tail call fastcc void @atomic_add(i32* noundef nonnull %148, i32 noundef 1) #24, !dbg !3712
  %149 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3699
  br label %150, !dbg !3712

150:                                              ; preds = %145, %137
  %151 = phi %struct.rtio_sq* [ %149, %145 ], [ %141, %137 ]
  %152 = add nuw nsw i32 %113, 1, !dbg !3714
  call void @llvm.dbg.value(metadata i32 %152, metadata !3576, metadata !DIExpression()), !dbg !3623
  %153 = icmp eq i32 %152, 4, !dbg !3715
  br i1 %153, label %154, label %111, !dbg !3700, !llvm.loop !3716

154:                                              ; preds = %150
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #23, !dbg !3718
  br label %50, !dbg !3605, !llvm.loop !3719
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #4 !dbg !3720 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3725, metadata !DIExpression()), !dbg !3726
  %2 = add i32 %0, -1, !dbg !3727
  %3 = icmp ult i32 %2, 4, !dbg !3727
  %4 = shl i32 %2, 3, !dbg !3727
  %5 = lshr i32 1145657157, %4, !dbg !3727
  %6 = trunc i32 %5 to i8, !dbg !3727
  %7 = select i1 %3, i8 %6, i8 63, !dbg !3727
  ret i8 %7, !dbg !3728
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !3729 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3737, metadata !DIExpression()), !dbg !3738
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !3739
  ret i32 %2, !dbg !3740
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @rtio_sqe_prep_read(%struct.rtio_sqe* nocapture noundef writeonly %0, %struct.rtio_iodev* noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #6 !dbg !3741 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !3745, metadata !DIExpression()), !dbg !3751
  call void @llvm.dbg.value(metadata %struct.rtio_iodev* %1, metadata !3746, metadata !DIExpression()), !dbg !3751
  call void @llvm.dbg.value(metadata i8 -1, metadata !3747, metadata !DIExpression()), !dbg !3751
  call void @llvm.dbg.value(metadata i8* %2, metadata !3748, metadata !DIExpression()), !dbg !3751
  call void @llvm.dbg.value(metadata i32 16, metadata !3749, metadata !DIExpression()), !dbg !3751
  call void @llvm.dbg.value(metadata i8* %3, metadata !3750, metadata !DIExpression()), !dbg !3751
  %5 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 0, !dbg !3752
  store i8 1, i8* %5, align 4, !dbg !3753
  %6 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 1, !dbg !3754
  store i8 -1, i8* %6, align 1, !dbg !3755
  %7 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !3756
  store %struct.rtio_iodev* %1, %struct.rtio_iodev** %7, align 4, !dbg !3757
  %8 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 5, i32 0, i32 0, !dbg !3758
  store i32 16, i32* %8, align 4, !dbg !3759
  %9 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 5, i32 0, i32 1, !dbg !3760
  store i8* %2, i8** %9, align 4, !dbg !3761
  %10 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 4, !dbg !3762
  store i8* %3, i8** %10, align 4, !dbg !3763
  ret void, !dbg !3764
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add(i32* nocapture noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3765 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3770, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata i32 %1, metadata !3771, metadata !DIExpression()), !dbg !3772
  %3 = atomicrmw add i32* %0, i32 %1 seq_cst, align 4, !dbg !3773
  ret void, !dbg !3774
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_submit() unnamed_addr #1 !dbg !3775 {
  call void @llvm.dbg.value(metadata %struct.rtio* @ez_io, metadata !3780, metadata !DIExpression()), !dbg !3782
  call void @llvm.dbg.value(metadata i32 4, metadata !3781, metadata !DIExpression()), !dbg !3782
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3783, !srcloc !3785
  tail call fastcc void @z_impl_rtio_submit() #24, !dbg !3786
  ret void, !dbg !3787
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep(i32 noundef %0) unnamed_addr #1 !dbg !3788 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3792, metadata !DIExpression()), !dbg !3793
  %2 = zext i32 %0 to i64
  %3 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %2) #24, !dbg !3794
  %4 = insertvalue [1 x i64] poison, i64 %3, 0, !dbg !3795
  tail call fastcc void @k_sleep([1 x i64] %4) #24, !dbg !3795
  ret void, !dbg !3796
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !3797 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3802, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.value(metadata i64 %0, metadata !3804, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 1000, metadata !3809, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 10000, metadata !3810, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i8 1, metadata !3811, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i8 0, metadata !3812, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i8 1, metadata !3813, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i8 0, metadata !3814, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i8 1, metadata !3815, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i8 0, metadata !3816, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i64 0, metadata !3817, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i64 0, metadata !3817, metadata !DIExpression()), !dbg !3821
  %2 = mul i64 %0, 10, !dbg !3823
  ret i64 %2, !dbg !3829
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3830 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3839, metadata !DIExpression()), !dbg !3840
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3841, !srcloc !3843
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !3844
  ret void, !dbg !3845
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_rtio_submit() unnamed_addr #1 !dbg !3846 {
  call void @llvm.dbg.value(metadata %struct.rtio* @ez_io, metadata !3848, metadata !DIExpression()), !dbg !3855
  call void @llvm.dbg.value(metadata i32 4, metadata !3849, metadata !DIExpression()), !dbg !3855
  %1 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3856
  %2 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %1, i32 0, i32 0, i32 0, !dbg !3856
  %3 = load i32, i32* %2, align 4, !dbg !3856
  %4 = icmp eq i32 %3, 0, !dbg !3856
  br i1 %4, label %8, label %5, !dbg !3857

5:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 %3, metadata !3851, metadata !DIExpression()), !dbg !3858
  store i32 0, i32* %2, align 4, !dbg !3859
  %6 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3859
  %7 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 2, !dbg !3859
  tail call fastcc void @atomic_add(i32* noundef nonnull %7, i32 noundef %3) #24, !dbg !3859
  br label %8, !dbg !3859

8:                                                ; preds = %5, %0
  %9 = load %struct.rtio_executor*, %struct.rtio_executor** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 0), align 4, !dbg !3860
  %10 = getelementptr inbounds %struct.rtio_executor, %struct.rtio_executor* %9, i32 0, i32 0, !dbg !3861
  %11 = load %struct.rtio_executor_api*, %struct.rtio_executor_api** %10, align 4, !dbg !3861
  %12 = getelementptr inbounds %struct.rtio_executor_api, %struct.rtio_executor_api* %11, i32 0, i32 0, !dbg !3862
  %13 = load i32 (%struct.rtio*)*, i32 (%struct.rtio*)** %12, align 4, !dbg !3862
  %14 = tail call i32 %13(%struct.rtio* noundef nonnull @ez_io) #25, !dbg !3863
  call void @llvm.dbg.value(metadata i32 %14, metadata !3850, metadata !DIExpression()), !dbg !3855
  %15 = icmp eq i32 %14, 0, !dbg !3864
  br i1 %15, label %16, label %38, !dbg !3866

16:                                               ; preds = %8
  %17 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3867
  %18 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %17, i32 0, i32 0, i32 2, !dbg !3867
  %19 = load i32, i32* %18, align 4, !dbg !3867
  %20 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %17, i32 0, i32 0, i32 3, !dbg !3867
  %21 = load i32, i32* %20, align 4, !dbg !3867
  %22 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %17, i32 0, i32 0, i32 1, !dbg !3867
  %23 = load i32, i32* %22, align 4, !dbg !3867
  %24 = add i32 %21, %23, !dbg !3867
  %25 = sub i32 %19, %24, !dbg !3867
  %26 = icmp ult i32 %25, 4, !dbg !3869
  br i1 %26, label %27, label %38, !dbg !3870

27:                                               ; preds = %16, %27
  tail call fastcc void @k_yield() #24, !dbg !3871
  %28 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3867
  %29 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %28, i32 0, i32 0, i32 2, !dbg !3867
  %30 = load i32, i32* %29, align 4, !dbg !3867
  %31 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %28, i32 0, i32 0, i32 3, !dbg !3867
  %32 = load i32, i32* %31, align 4, !dbg !3867
  %33 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %28, i32 0, i32 0, i32 1, !dbg !3867
  %34 = load i32, i32* %33, align 4, !dbg !3867
  %35 = add i32 %32, %34, !dbg !3867
  %36 = sub i32 %30, %35, !dbg !3867
  %37 = icmp ult i32 %36, 4, !dbg !3869
  br i1 %37, label %27, label %38, !dbg !3870, !llvm.loop !3873

38:                                               ; preds = %27, %16, %8
  ret void, !dbg !3875
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !3876 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3877, !srcloc !3879
  tail call void @z_impl_k_yield() #25, !dbg !3880
  ret void, !dbg !3881
}

; Function Attrs: noinline nounwind optsize
define internal void @vnd_sensor_iodev_submit(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) #1 !dbg !3882 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !3884, metadata !DIExpression()), !dbg !3893
  call void @llvm.dbg.value(metadata %struct.rtio* %1, metadata !3885, metadata !DIExpression()), !dbg !3893
  %3 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !3894
  %4 = bitcast %struct.rtio_iodev** %3 to %struct.vnd_sensor_data**, !dbg !3894
  %5 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %4, align 4, !dbg !3894
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %5, metadata !3886, metadata !DIExpression()), !dbg !3893
  %6 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %5, i32 0, i32 2, !dbg !3895
  %7 = load %struct.device*, %struct.device** %6, align 8, !dbg !3895
  call void @llvm.dbg.value(metadata %struct.device* %7, metadata !3887, metadata !DIExpression()), !dbg !3893
  %8 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %5, i32 0, i32 0, i32 1, !dbg !3896
  %9 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3896
  %10 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %9, i32 0, i32 0, i32 2, !dbg !3896
  %11 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %10) #24, !dbg !3896
  %12 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3896
  %13 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %12, i32 0, i32 0, i32 0, !dbg !3896
  %14 = load i32, i32* %13, align 4, !dbg !3896
  %15 = add i32 %14, %11, !dbg !3896
  call void @llvm.dbg.value(metadata i32 %15, metadata !3890, metadata !DIExpression()), !dbg !3897
  %16 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %12, i32 0, i32 0, i32 3, !dbg !3896
  %17 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %16) #24, !dbg !3896
  %18 = sub i32 %15, %17, !dbg !3896
  %19 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3896
  %20 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %19, i32 0, i32 0, i32 4, !dbg !3896
  %21 = load i32, i32* %20, align 4, !dbg !3896
  %22 = add i32 %21, 1, !dbg !3896
  %23 = icmp ult i32 %18, %22, !dbg !3896
  call void @llvm.dbg.value(metadata i1 %23, metadata !3892, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3897
  br i1 %23, label %24, label %42, !dbg !3896

24:                                               ; preds = %2
  %25 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %19, i32 0, i32 0, i32 0, !dbg !3898
  %26 = load i32, i32* %25, align 4, !dbg !3898
  %27 = add i32 %26, 1, !dbg !3898
  store i32 %27, i32* %25, align 4, !dbg !3898
  %28 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3896
  %29 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %28, i32 0, i32 0, i32 4, !dbg !3896
  %30 = load i32, i32* %29, align 4, !dbg !3896
  %31 = and i32 %30, %15, !dbg !3896
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %28, i32 %31), metadata !3888, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3893
  %32 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %28, i32 0, i32 1, i32 %31, i32 0, !dbg !3901
  store %struct.rtio_sqe* %0, %struct.rtio_sqe** %32, align 4, !dbg !3904
  %33 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %28, i32 0, i32 1, i32 %31, i32 1, !dbg !3905
  store %struct.rtio* %1, %struct.rtio** %33, align 4, !dbg !3906
  %34 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3907
  %35 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %34, i32 0, i32 0, i32 0, !dbg !3907
  %36 = load i32, i32* %35, align 4, !dbg !3907
  %37 = icmp eq i32 %36, 0, !dbg !3907
  br i1 %37, label %47, label %38, !dbg !3910

38:                                               ; preds = %24
  %39 = add i32 %36, -1, !dbg !3911
  store i32 %39, i32* %35, align 4, !dbg !3911
  %40 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3911
  %41 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %40, i32 0, i32 0, i32 2, !dbg !3911
  tail call fastcc void @atomic_add.14(i32* noundef nonnull %41) #24, !dbg !3911
  br label %47, !dbg !3911

42:                                               ; preds = %2
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %28, i32 %31), metadata !3888, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3893
  %43 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !3913
  %44 = zext i8 %43 to i32, !dbg !3913
  %45 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 0, !dbg !3913
  %46 = load i8*, i8** %45, align 4, !dbg !3913
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef %44, i8* noundef %46) #25, !dbg !3913
  tail call fastcc void @rtio_sqe_err(%struct.rtio* noundef %1, %struct.rtio_sqe* noundef nonnull %0, i32 noundef -11) #24, !dbg !3919
  br label %47

47:                                               ; preds = %24, %38, %42
  ret void, !dbg !3920
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get.13(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !3921 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3923, metadata !DIExpression()), !dbg !3924
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !3925
  ret i32 %2, !dbg !3926
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add.14(i32* nocapture noundef %0) unnamed_addr #5 !dbg !3927 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3929, metadata !DIExpression()), !dbg !3931
  call void @llvm.dbg.value(metadata i32 1, metadata !3930, metadata !DIExpression()), !dbg !3931
  %2 = atomicrmw add i32* %0, i32 1 seq_cst, align 4, !dbg !3932
  ret void, !dbg !3933
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef %0) unnamed_addr #4 !dbg !3934 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3936, metadata !DIExpression()), !dbg !3937
  %2 = add i32 %0, -1, !dbg !3938
  %3 = icmp ult i32 %2, 4, !dbg !3938
  %4 = shl i32 %2, 3, !dbg !3938
  %5 = lshr i32 1145657157, %4, !dbg !3938
  %6 = trunc i32 %5 to i8, !dbg !3938
  %7 = select i1 %3, i8 %6, i8 63, !dbg !3938
  ret i8 %7, !dbg !3939
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_sqe_err(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !3940 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !3942, metadata !DIExpression()), !dbg !3945
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !3943, metadata !DIExpression()), !dbg !3945
  call void @llvm.dbg.value(metadata i32 %2, metadata !3944, metadata !DIExpression()), !dbg !3945
  %4 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 0, !dbg !3946
  %5 = load %struct.rtio_executor*, %struct.rtio_executor** %4, align 4, !dbg !3946
  %6 = getelementptr inbounds %struct.rtio_executor, %struct.rtio_executor* %5, i32 0, i32 0, !dbg !3947
  %7 = load %struct.rtio_executor_api*, %struct.rtio_executor_api** %6, align 4, !dbg !3947
  %8 = getelementptr inbounds %struct.rtio_executor_api, %struct.rtio_executor_api* %7, i32 0, i32 2, !dbg !3948
  %9 = load void (%struct.rtio*, %struct.rtio_sqe*, i32)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)** %8, align 4, !dbg !3948
  tail call void %9(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) #25, !dbg !3949
  ret void, !dbg !3950
}

; Function Attrs: noinline nounwind optsize
define internal i32 @vnd_sensor_init(%struct.device* noundef %0) #1 !dbg !3951 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3953, metadata !DIExpression()), !dbg !3958
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !3959
  %3 = bitcast i8** %2 to %struct.vnd_sensor_config**, !dbg !3959
  %4 = load %struct.vnd_sensor_config*, %struct.vnd_sensor_config** %3, align 4, !dbg !3959
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_config* %4, metadata !3954, metadata !DIExpression()), !dbg !3958
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !3960
  %6 = bitcast i8** %5 to %struct.vnd_sensor_data**, !dbg !3960
  %7 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %6, align 4, !dbg !3960
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %7, metadata !3956, metadata !DIExpression()), !dbg !3958
  %8 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %4, i32 0, i32 0, !dbg !3961
  %9 = load i32, i32* %8, align 4, !dbg !3961
  call void @llvm.dbg.value(metadata i32 %9, metadata !3957, metadata !DIExpression()), !dbg !3958
  %10 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %7, i32 0, i32 2, !dbg !3962
  store %struct.device* %0, %struct.device** %10, align 8, !dbg !3963
  %11 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %7, i32 0, i32 1, !dbg !3964
  tail call void @k_timer_init(%struct.k_timer* noundef nonnull %11, void (%struct.k_timer*)* noundef nonnull @vnd_sensor_timer_expiry, void (%struct.k_timer*)* noundef null) #25, !dbg !3965
  %12 = zext i32 %9 to i64, !dbg !3966
  %13 = tail call fastcc i64 @k_ms_to_ticks_ceil64.18(i64 noundef %12) #24, !dbg !3966
  %14 = insertvalue [1 x i64] poison, i64 %13, 0, !dbg !3967
  tail call fastcc void @k_timer_start(%struct.k_timer* noundef nonnull %11, [1 x i64] %14, [1 x i64] %14) #24, !dbg !3967
  ret i32 0, !dbg !3968
}

; Function Attrs: noinline nounwind optsize
define internal void @vnd_sensor_timer_expiry(%struct.k_timer* nocapture noundef readonly %0) #1 !dbg !3969 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !3971, metadata !DIExpression()), !dbg !3973
  %2 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 -1, i32 4, !dbg !3974
  call void @llvm.dbg.value(metadata %struct.k_timeout_t* %2, metadata !3972, metadata !DIExpression()), !dbg !3973
  %3 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 9, !dbg !3975
  %4 = bitcast %struct.k_timeout_t* %3 to %struct.device**, !dbg !3975
  %5 = load %struct.device*, %struct.device** %4, align 8, !dbg !3975
  tail call fastcc void @vnd_sensor_handle_int(%struct.device* noundef %5) #24, !dbg !3976
  ret void, !dbg !3977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.18(i64 noundef %0) unnamed_addr #4 !dbg !3978 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3980, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i64 %0, metadata !3982, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i32 1000, metadata !3985, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i32 10000, metadata !3986, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i8 1, metadata !3987, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i8 0, metadata !3988, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i8 1, metadata !3989, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i8 0, metadata !3990, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i8 1, metadata !3991, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i8 0, metadata !3992, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i64 0, metadata !3993, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i64 0, metadata !3993, metadata !DIExpression()), !dbg !3997
  %2 = mul i64 %0, 10, !dbg !3999
  ret i64 %2, !dbg !4005
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_timer_start(%struct.k_timer* noundef %0, [1 x i64] %1, [1 x i64] %2) unnamed_addr #1 !dbg !4006 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !4011, metadata !DIExpression()), !dbg !4013
  call void @llvm.dbg.value(metadata i64 undef, metadata !4012, metadata !DIExpression()), !dbg !4013
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !4010, metadata !DIExpression()), !dbg !4013
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4014, !srcloc !4016
  tail call void @z_impl_k_timer_start(%struct.k_timer* noundef %0, [1 x i64] %1, [1 x i64] %2) #25, !dbg !4017
  ret void, !dbg !4018
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @vnd_sensor_handle_int(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !4019 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4023, metadata !DIExpression()), !dbg !4029
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !4030
  %3 = bitcast i8** %2 to %struct.vnd_sensor_data**, !dbg !4030
  %4 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %3, align 4, !dbg !4030
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %4, metadata !4024, metadata !DIExpression()), !dbg !4029
  %5 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %4, i32 0, i32 0, i32 1, !dbg !4031
  %6 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4031
  %7 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %6, i32 0, i32 0, i32 3, !dbg !4031
  %8 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %7) #24, !dbg !4031
  %9 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4031
  %10 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %9, i32 0, i32 0, i32 1, !dbg !4031
  %11 = load i32, i32* %10, align 4, !dbg !4031
  %12 = add i32 %11, %8, !dbg !4031
  call void @llvm.dbg.value(metadata i32 %12, metadata !4026, metadata !DIExpression()), !dbg !4032
  %13 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %9, i32 0, i32 0, i32 2, !dbg !4031
  %14 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %13) #24, !dbg !4031
  %15 = icmp eq i32 %12, %14, !dbg !4031
  call void @llvm.dbg.value(metadata i1 %15, metadata !4028, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4032
  br i1 %15, label %37, label %16, !dbg !4031

16:                                               ; preds = %1
  %17 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4033
  %18 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %17, i32 0, i32 0, i32 1, !dbg !4033
  %19 = load i32, i32* %18, align 4, !dbg !4033
  %20 = add i32 %19, 1, !dbg !4033
  store i32 %20, i32* %18, align 4, !dbg !4033
  %21 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4031
  %22 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %21, i32 0, i32 0, i32 4, !dbg !4031
  %23 = load i32, i32* %22, align 4, !dbg !4031
  %24 = and i32 %23, %12, !dbg !4031
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %21, i32 %24), metadata !4025, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !4029
  %25 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %21, i32 0, i32 1, i32 %24, i32 0, !dbg !4036
  %26 = load %struct.rtio_sqe*, %struct.rtio_sqe** %25, align 4, !dbg !4036
  %27 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %21, i32 0, i32 1, i32 %24, i32 1, !dbg !4039
  %28 = load %struct.rtio*, %struct.rtio** %27, align 4, !dbg !4039
  tail call fastcc void @vnd_sensor_iodev_execute(%struct.device* noundef nonnull %0, %struct.rtio_sqe* noundef %26, %struct.rtio* noundef %28) #24, !dbg !4040
  %29 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4041
  %30 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %29, i32 0, i32 0, i32 1, !dbg !4041
  %31 = load i32, i32* %30, align 4, !dbg !4041
  %32 = icmp eq i32 %31, 0, !dbg !4041
  br i1 %32, label %42, label %33, !dbg !4044

33:                                               ; preds = %16
  %34 = add i32 %31, -1, !dbg !4045
  store i32 %34, i32* %30, align 4, !dbg !4045
  %35 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4045
  %36 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %35, i32 0, i32 0, i32 3, !dbg !4045
  tail call fastcc void @atomic_add.14(i32* noundef nonnull %36) #24, !dbg !4045
  br label %42, !dbg !4045

37:                                               ; preds = %1
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %21, i32 %24), metadata !4025, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !4029
  %38 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !4047
  %39 = zext i8 %38 to i32, !dbg !4047
  %40 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !4047
  %41 = load i8*, i8** %40, align 4, !dbg !4047
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.19, i32 0, i32 0), i32 noundef %39, i8* noundef %41) #25, !dbg !4047
  br label %42

42:                                               ; preds = %16, %33, %37
  ret void, !dbg !4053
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @vnd_sensor_iodev_execute(%struct.device* nocapture noundef readonly %0, %struct.rtio_sqe* noundef %1, %struct.rtio* noundef %2) unnamed_addr #1 !dbg !4054 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4058, metadata !DIExpression()), !dbg !4062
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !4059, metadata !DIExpression()), !dbg !4062
  call void @llvm.dbg.value(metadata %struct.rtio* %2, metadata !4060, metadata !DIExpression()), !dbg !4062
  %4 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 0, !dbg !4063
  %5 = load i8, i8* %4, align 4, !dbg !4063
  %6 = icmp eq i8 %5, 1, !dbg !4065
  br i1 %6, label %12, label %7, !dbg !4066

7:                                                ; preds = %3
  %8 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !4067
  %9 = zext i8 %8 to i32, !dbg !4067
  %10 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !4067
  %11 = load i8*, i8** %10, align 4, !dbg !4067
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.20, i32 0, i32 0), i32 noundef %9, i8* noundef %11) #25, !dbg !4067
  call void @llvm.dbg.value(metadata i32 %17, metadata !4061, metadata !DIExpression()), !dbg !4062
  br label %19, !dbg !4073

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 5, i32 0, i32 1, !dbg !4074
  %14 = load i8*, i8** %13, align 4, !dbg !4074
  %15 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 5, i32 0, i32 0, !dbg !4076
  %16 = load i32, i32* %15, align 4, !dbg !4076
  %17 = tail call fastcc i32 @vnd_sensor_iodev_read(%struct.device* noundef %0, i8* noundef %14, i32 noundef %16) #24, !dbg !4077
  call void @llvm.dbg.value(metadata i32 %17, metadata !4061, metadata !DIExpression()), !dbg !4062
  %18 = icmp slt i32 %17, 0, !dbg !4078
  br i1 %18, label %19, label %21, !dbg !4073

19:                                               ; preds = %7, %12
  %20 = phi i32 [ -22, %7 ], [ %17, %12 ]
  tail call fastcc void @rtio_sqe_err(%struct.rtio* noundef %2, %struct.rtio_sqe* noundef nonnull %1, i32 noundef %20) #24, !dbg !4080
  br label %22, !dbg !4082

21:                                               ; preds = %12
  tail call fastcc void @rtio_sqe_ok(%struct.rtio* noundef %2, %struct.rtio_sqe* noundef nonnull %1) #24, !dbg !4083
  br label %22

22:                                               ; preds = %21, %19
  ret void, !dbg !4085
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @vnd_sensor_iodev_read(%struct.device* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !4086 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4090, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.value(metadata i8* %1, metadata !4091, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.value(metadata i32 %2, metadata !4092, metadata !DIExpression()), !dbg !4099
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !4100
  %5 = bitcast i8** %4 to %struct.vnd_sensor_config**, !dbg !4100
  %6 = load %struct.vnd_sensor_config*, %struct.vnd_sensor_config** %5, align 4, !dbg !4100
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_config* %6, metadata !4093, metadata !DIExpression()), !dbg !4099
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !4101
  %8 = bitcast i8** %7 to %struct.vnd_sensor_data**, !dbg !4101
  %9 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %8, align 4, !dbg !4101
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %9, metadata !4094, metadata !DIExpression()), !dbg !4099
  %10 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 4) #24, !dbg !4102
  %11 = zext i8 %10 to i32, !dbg !4102
  %12 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !4102
  %13 = load i8*, i8** %12, align 4, !dbg !4102
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5.21, i32 0, i32 0), i32 noundef %11, i8* noundef %13, i32 noundef %2, i8* noundef %1) #25, !dbg !4102
  %14 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !4107, !srcloc !4116
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !4107
  call void @llvm.dbg.value(metadata i32 %15, metadata !4113, metadata !DIExpression()) #23, !dbg !4117
  call void @llvm.dbg.value(metadata i32 undef, metadata !4114, metadata !DIExpression()) #23, !dbg !4117
  call void @llvm.dbg.value(metadata i32 %15, metadata !4096, metadata !DIExpression()), !dbg !4099
  %16 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %9, i32 0, i32 4, !dbg !4118
  %17 = load i32, i32* %16, align 4, !dbg !4119
  %18 = add i32 %17, 1, !dbg !4119
  store i32 %18, i32* %16, align 4, !dbg !4119
  call void @llvm.dbg.value(metadata i32 %17, metadata !4095, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.value(metadata i32 %15, metadata !4120, metadata !DIExpression()) #23, !dbg !4125
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !4127, !srcloc !4128
  %19 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %6, i32 0, i32 1, !dbg !4129
  %20 = load i32, i32* %19, align 4, !dbg !4129
  %21 = icmp ugt i32 %20, %2, !dbg !4131
  br i1 %21, label %26, label %22, !dbg !4132

22:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !4097, metadata !DIExpression()), !dbg !4133
  %23 = icmp ult i32 %20, %2, !dbg !4134
  %24 = select i1 %23, i32 %20, i32 %2, !dbg !4134
  %25 = icmp eq i32 %24, 0, !dbg !4136
  br i1 %25, label %42, label %30, !dbg !4137

26:                                               ; preds = %3
  %27 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !4138
  %28 = zext i8 %27 to i32, !dbg !4138
  %29 = load i8*, i8** %12, align 4, !dbg !4138
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.22, i32 0, i32 0), i32 noundef %28, i8* noundef %29) #25, !dbg !4138
  br label %42, !dbg !4144

30:                                               ; preds = %22, %30
  %31 = phi i32 [ %38, %30 ], [ %20, %22 ]
  %32 = phi i32 [ %37, %30 ], [ 0, %22 ]
  call void @llvm.dbg.value(metadata i32 %32, metadata !4097, metadata !DIExpression()), !dbg !4133
  %33 = mul i32 %31, %17, !dbg !4145
  %34 = add i32 %33, %32, !dbg !4147
  %35 = trunc i32 %34 to i8, !dbg !4148
  %36 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !4149
  store i8 %35, i8* %36, align 1, !dbg !4150
  %37 = add nuw nsw i32 %32, 1, !dbg !4151
  call void @llvm.dbg.value(metadata i32 %37, metadata !4097, metadata !DIExpression()), !dbg !4133
  %38 = load i32, i32* %19, align 4, !dbg !4134
  %39 = icmp ult i32 %38, %2, !dbg !4134
  %40 = select i1 %39, i32 %38, i32 %2, !dbg !4134
  %41 = icmp ult i32 %37, %40, !dbg !4136
  br i1 %41, label %30, label %42, !dbg !4137, !llvm.loop !4152

42:                                               ; preds = %30, %22, %26
  %43 = phi i32 [ -12, %26 ], [ 0, %22 ], [ 0, %30 ], !dbg !4099
  ret i32 %43, !dbg !4154
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_sqe_ok(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1) unnamed_addr #1 !dbg !4155 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !4157, metadata !DIExpression()), !dbg !4160
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !4158, metadata !DIExpression()), !dbg !4160
  call void @llvm.dbg.value(metadata i32 0, metadata !4159, metadata !DIExpression()), !dbg !4160
  %3 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 0, !dbg !4161
  %4 = load %struct.rtio_executor*, %struct.rtio_executor** %3, align 4, !dbg !4161
  %5 = getelementptr inbounds %struct.rtio_executor, %struct.rtio_executor* %4, i32 0, i32 0, !dbg !4162
  %6 = load %struct.rtio_executor_api*, %struct.rtio_executor_api** %5, align 4, !dbg !4162
  %7 = getelementptr inbounds %struct.rtio_executor_api, %struct.rtio_executor_api* %6, i32 0, i32 1, !dbg !4163
  %8 = load void (%struct.rtio*, %struct.rtio_sqe*, i32)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)** %7, align 4, !dbg !4163
  tail call void %8(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef 0) #25, !dbg !4164
  ret void, !dbg !4165
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !4166 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4181, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8* %0, metadata !4177, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %1, metadata !4178, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %2, metadata !4179, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8* %3, metadata !4180, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8* %0, metadata !4182, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8* %0, metadata !4183, metadata !DIExpression()), !dbg !4244
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4245
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !4245
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4186, metadata !DIExpression()), !dbg !4246
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4247
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !4247
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4188, metadata !DIExpression()), !dbg !4248
  call void @llvm.dbg.value(metadata i32 0, metadata !4189, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 0, metadata !4190, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 0, metadata !4191, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 -1, metadata !4192, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8 0, metadata !4195, metadata !DIExpression()), !dbg !4244
  %12 = and i32 %2, 4, !dbg !4249
  %13 = icmp eq i32 %12, 0, !dbg !4250
  call void @llvm.dbg.value(metadata i1 %13, metadata !4196, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4244
  %14 = lshr i32 %2, 3, !dbg !4251
  %15 = and i32 %14, 7, !dbg !4251
  %16 = add nuw nsw i32 %15, 1, !dbg !4252
  call void @llvm.dbg.value(metadata i32 %16, metadata !4197, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8 0, metadata !4198, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8* %0, metadata !4199, metadata !DIExpression()), !dbg !4244
  %17 = ptrtoint i8* %0 to i32, !dbg !4253
  %18 = and i32 %17, 3, !dbg !4255
  %19 = icmp eq i32 %18, 0, !dbg !4255
  br i1 %19, label %20, label %316, !dbg !4256

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4257
  call void @llvm.dbg.value(metadata i8* %21, metadata !4183, metadata !DIExpression()), !dbg !4244
  %22 = icmp eq i8* %0, null, !dbg !4258
  %23 = and i32 %1, 7, !dbg !4260
  %24 = sub nuw nsw i32 8, %23, !dbg !4260
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4260
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4260
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4260
  call void @llvm.dbg.value(metadata i32 %27, metadata !4178, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8* %26, metadata !4183, metadata !DIExpression()), !dbg !4244
  br i1 %22, label %33, label %28, !dbg !4261

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4263
  %30 = sub i32 4, %17, !dbg !4263
  %31 = add i32 %30, %29, !dbg !4264
  %32 = icmp ugt i32 %31, %27, !dbg !4265
  br i1 %32, label %316, label %33, !dbg !4266

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4267
  call void @llvm.dbg.value(metadata i8* %34, metadata !4180, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8* %3, metadata !4194, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 4, metadata !4185, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 4, metadata !4184, metadata !DIExpression()), !dbg !4244
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4268

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !4181, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8* %42, metadata !4180, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8* %43, metadata !4183, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %44, metadata !4184, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %45, metadata !4185, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %72, metadata !4192, metadata !DIExpression()), !dbg !4244
  br i1 %46, label %73, label %47, !dbg !4269

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4270
  %49 = zext i1 %48 to i32, !dbg !4274
  %50 = add nsw i32 %72, %49, !dbg !4274
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4274
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4274
  call void @llvm.dbg.value(metadata i32 %52, metadata !4184, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %51, metadata !4185, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8 poison, metadata !4195, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %50, metadata !4192, metadata !DIExpression()), !dbg !4244
  br label %53, !dbg !4275

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4181, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8* %40, metadata !4180, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8* %58, metadata !4183, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %57, metadata !4184, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %56, metadata !4185, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8 poison, metadata !4195, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %54, metadata !4192, metadata !DIExpression()), !dbg !4244
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4276
  call void @llvm.dbg.value(metadata i8* %60, metadata !4180, metadata !DIExpression()), !dbg !4244
  %61 = load i8, i8* %60, align 1, !dbg !4278
  %62 = icmp eq i8 %61, 0, !dbg !4279
  br i1 %62, label %223, label %63, !dbg !4280, !llvm.loop !4281

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !4269

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4284

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4195, metadata !DIExpression()), !dbg !4244
  %75 = add nsw i32 %72, -1, !dbg !4285
  call void @llvm.dbg.value(metadata i32 %75, metadata !4192, metadata !DIExpression()), !dbg !4244
  br label %53, !dbg !4286

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4287

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4185, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 4, metadata !4184, metadata !DIExpression()), !dbg !4244
  br label %53, !dbg !4288

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4185, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 4, metadata !4184, metadata !DIExpression()), !dbg !4244
  br label %53, !dbg !4289

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4290
  %81 = icmp eq i8 %80, 108, !dbg !4292
  br i1 %81, label %82, label %109, !dbg !4293

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4294
  %84 = load i8, i8* %83, align 1, !dbg !4294
  %85 = icmp eq i8 %84, 108, !dbg !4297
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4298
  %89 = add i32 %88, 7, !dbg !4298
  %90 = and i32 %89, -8, !dbg !4298
  %91 = inttoptr i32 %90 to i8*, !dbg !4298
  %92 = inttoptr i32 %90 to double*, !dbg !4298
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4298
  %94 = load double, double* %92, align 8, !dbg !4298
  call void @llvm.dbg.value(metadata i8* %93, metadata !4181, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 8, metadata !4184, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 8, metadata !4185, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata double %94, metadata !4212, metadata !DIExpression()), !dbg !4300
  %95 = ptrtoint i8* %43 to i32, !dbg !4301
  %96 = add i32 %95, 7, !dbg !4301
  %97 = and i32 %96, -8, !dbg !4301
  %98 = inttoptr i32 %97 to i8*, !dbg !4302
  call void @llvm.dbg.value(metadata i8* %98, metadata !4183, metadata !DIExpression()), !dbg !4244
  br i1 %22, label %104, label %99, !dbg !4303

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4304
  %101 = icmp ugt i32 %100, %194, !dbg !4308
  br i1 %101, label %316, label %102, !dbg !4309

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4310
  store double %94, double* %103, align 8, !dbg !4310
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4313
  call void @llvm.dbg.value(metadata i8* %105, metadata !4183, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8 poison, metadata !4195, metadata !DIExpression()), !dbg !4244
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4195, metadata !DIExpression()), !dbg !4244
  br label %53, !dbg !4314

107:                                              ; preds = %73, %73
  br label %109, !dbg !4315

108:                                              ; preds = %73
  br label %109, !dbg !4315

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4244
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4244
  call void @llvm.dbg.value(metadata i32 %113, metadata !4184, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %112, metadata !4185, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8 poison, metadata !4198, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8 poison, metadata !4195, metadata !DIExpression()), !dbg !4244
  %114 = ptrtoint i8* %43 to i32, !dbg !4315
  %115 = add i32 %114, -1, !dbg !4315
  %116 = add i32 %115, %112, !dbg !4315
  %117 = sub i32 0, %112, !dbg !4315
  %118 = and i32 %116, %117, !dbg !4315
  %119 = inttoptr i32 %118 to i8*, !dbg !4316
  call void @llvm.dbg.value(metadata i8* %119, metadata !4183, metadata !DIExpression()), !dbg !4244
  br i1 %22, label %124, label %120, !dbg !4317

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4319
  %122 = add i32 %121, %118, !dbg !4320
  %123 = icmp ugt i32 %122, %194, !dbg !4321
  br i1 %123, label %316, label %124, !dbg !4322

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !4323

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4316
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4324
  call void @llvm.dbg.value(metadata i8* %127, metadata !4181, metadata !DIExpression()), !dbg !4244
  %128 = bitcast i8* %41 to i8**, !dbg !4324
  %129 = load i8*, i8** %128, align 4, !dbg !4324
  call void @llvm.dbg.value(metadata i8* %129, metadata !4194, metadata !DIExpression()), !dbg !4244
  br label %130, !dbg !4325

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !4326
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4327
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4244
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !4328
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4244
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4329
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4244
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4244
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4244
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4244
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !4330
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !4181, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %142, metadata !4178, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8* %141, metadata !4180, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8* %140, metadata !4183, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %139, metadata !4184, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %138, metadata !4185, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %137, metadata !4189, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %136, metadata !4197, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %135, metadata !4190, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8 poison, metadata !4195, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8* %133, metadata !4194, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %132, metadata !4192, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %131, metadata !4191, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.label(metadata !4243), !dbg !4332
  br i1 %22, label %146, label %144, !dbg !4333

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4334
  store i8* %133, i8** %145, align 4, !dbg !4337
  br label %146, !dbg !4338

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4339
  call void @llvm.dbg.value(metadata i32 %147, metadata !4197, metadata !DIExpression()), !dbg !4244
  %148 = icmp sgt i32 %136, 0, !dbg !4340
  br i1 %148, label %152, label %149, !dbg !4341

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !4342
  %151 = zext i1 %150 to i32, !dbg !4342
  br label %152, !dbg !4341

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4341
  %154 = icmp eq i32 %153, 0, !dbg !4341
  call void @llvm.dbg.value(metadata i1 %154, metadata !4221, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4343
  call void @llvm.dbg.value(metadata i1 %36, metadata !4224, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4343
  %155 = or i1 %36, %154, !dbg !4344
  br i1 %155, label %156, label %190, !dbg !4344

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4345
  %158 = sub i32 %157, %17, !dbg !4345
  %159 = lshr i32 %158, 2, !dbg !4346
  call void @llvm.dbg.value(metadata i32 %159, metadata !4225, metadata !DIExpression()), !dbg !4347
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4348
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !4348
  br i1 %163, label %316, label %164, !dbg !4348

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !4350

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !4351
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4354
  store i8 %166, i8* %167, align 1, !dbg !4355
  %168 = trunc i32 %132 to i8, !dbg !4356
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4357
  store i8 %168, i8* %169, align 1, !dbg !4358
  br i1 %154, label %173, label %170, !dbg !4359

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !4360
  store i8 %171, i8* %167, align 1, !dbg !4360
  %172 = add i32 %131, 1, !dbg !4363
  call void @llvm.dbg.value(metadata i32 %172, metadata !4191, metadata !DIExpression()), !dbg !4244
  br label %185, !dbg !4364

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !4365
  call void @llvm.dbg.value(metadata i32 %174, metadata !4190, metadata !DIExpression()), !dbg !4244
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !4367

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !4368
  call void @llvm.dbg.value(metadata i32 %177, metadata !4178, metadata !DIExpression()), !dbg !4244
  br label %185, !dbg !4371

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !4372

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !4373
  call void @llvm.dbg.value(metadata i32 %180, metadata !4178, metadata !DIExpression()), !dbg !4244
  br label %185, !dbg !4376

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !4377
  %183 = add i32 %142, 2, !dbg !4379
  %184 = add i32 %183, %182, !dbg !4380
  call void @llvm.dbg.value(metadata i32 %184, metadata !4178, metadata !DIExpression()), !dbg !4244
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !4244
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !4244
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !4244
  call void @llvm.dbg.value(metadata i32 %188, metadata !4178, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %187, metadata !4190, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %186, metadata !4191, metadata !DIExpression()), !dbg !4244
  %189 = add nuw nsw i32 %137, 1, !dbg !4381
  call void @llvm.dbg.value(metadata i32 undef, metadata !4178, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 undef, metadata !4189, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 undef, metadata !4190, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 undef, metadata !4191, metadata !DIExpression()), !dbg !4244
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !4326
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !4328
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !4329
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !4330
  call void @llvm.dbg.value(metadata i32 %194, metadata !4178, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %193, metadata !4189, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %192, metadata !4190, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %191, metadata !4191, metadata !DIExpression()), !dbg !4244
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4382
  call void @llvm.dbg.value(metadata i8* %195, metadata !4183, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8* %143, metadata !4181, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8* %141, metadata !4180, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %139, metadata !4184, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %138, metadata !4185, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8 poison, metadata !4198, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8 poison, metadata !4195, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %132, metadata !4192, metadata !DIExpression()), !dbg !4244
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4276
  call void @llvm.dbg.value(metadata i8* %196, metadata !4180, metadata !DIExpression()), !dbg !4244
  %197 = load i8, i8* %196, align 1, !dbg !4278
  %198 = icmp eq i8 %197, 0, !dbg !4279
  br i1 %198, label %223, label %63, !dbg !4280

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !4383

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4384
  call void @llvm.dbg.value(metadata i8* %201, metadata !4181, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 undef, metadata !4228, metadata !DIExpression()), !dbg !4385
  br i1 %22, label %216, label %202, !dbg !4386

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !4384
  %204 = load i32, i32* %203, align 4, !dbg !4384
  call void @llvm.dbg.value(metadata i32 %204, metadata !4228, metadata !DIExpression()), !dbg !4385
  %205 = inttoptr i32 %118 to i32*, !dbg !4387
  store i32 %204, i32* %205, align 4, !dbg !4390
  br label %216, !dbg !4391

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !4392
  %208 = add i32 %207, 7, !dbg !4392
  %209 = and i32 %208, -8, !dbg !4392
  %210 = inttoptr i32 %209 to i8*, !dbg !4392
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !4392
  call void @llvm.dbg.value(metadata i8* %211, metadata !4181, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i64 undef, metadata !4234, metadata !DIExpression()), !dbg !4393
  br i1 %22, label %216, label %212, !dbg !4394

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !4392
  %214 = load i64, i64* %213, align 8, !dbg !4392
  call void @llvm.dbg.value(metadata i64 %214, metadata !4234, metadata !DIExpression()), !dbg !4393
  %215 = inttoptr i32 %118 to i64*, !dbg !4395
  store i64 %214, i64* %215, align 8, !dbg !4400
  br label %216, !dbg !4401

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !4402
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !4402
  call void @llvm.dbg.value(metadata i8* %218, metadata !4181, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8* %40, metadata !4180, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8* %219, metadata !4183, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %113, metadata !4184, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %112, metadata !4185, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8 poison, metadata !4198, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8 poison, metadata !4195, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %72, metadata !4192, metadata !DIExpression()), !dbg !4244
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4276
  call void @llvm.dbg.value(metadata i8* %220, metadata !4180, metadata !DIExpression()), !dbg !4244
  %221 = load i8, i8* %220, align 1, !dbg !4278
  %222 = icmp eq i8 %221, 0, !dbg !4279
  br i1 %222, label %223, label %38, !dbg !4280

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !4403
  %225 = ptrtoint i8* %224 to i32, !dbg !4404
  %226 = sub i32 %225, %17, !dbg !4404
  %227 = lshr i32 %226, 2, !dbg !4406
  %228 = icmp ugt i32 %226, 1023, !dbg !4407
  br i1 %228, label %316, label %229, !dbg !4408

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !4409

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !4410
  %232 = add i32 %231, %226, !dbg !4413
  br label %316, !dbg !4414

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !4415
  store i8 %234, i8* %0, align 1, !dbg !4416
  %235 = trunc i32 %192 to i8, !dbg !4417
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4419
  store i8 %236, i8* %238, align 1, !dbg !4421
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4422
  store i8 %237, i8* %239, align 1, !dbg !4423
  %240 = trunc i32 %191 to i8, !dbg !4424
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4425
  store i8 %240, i8* %241, align 1, !dbg !4426
  %242 = icmp eq i32 %191, 0, !dbg !4427
  %243 = xor i1 %242, true, !dbg !4428
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !4428
  call void @llvm.dbg.value(metadata i8* %224, metadata !4183, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 0, metadata !4193, metadata !DIExpression()), !dbg !4244
  br i1 %245, label %246, label %265, !dbg !4428

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !4429

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !4183, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %250, metadata !4193, metadata !DIExpression()), !dbg !4244
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !4430
  %252 = load i8, i8* %251, align 1, !dbg !4430
  %253 = icmp sgt i8 %252, -1, !dbg !4432
  br i1 %253, label %261, label %254, !dbg !4433

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !4237, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4434
  %255 = ptrtoint i8* %249 to i32, !dbg !4435
  %256 = add i32 %247, %255, !dbg !4437
  %257 = icmp ugt i32 %256, %194, !dbg !4438
  br i1 %257, label %316, label %258, !dbg !4439

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !4440
  call void @llvm.dbg.value(metadata i8 %259, metadata !4237, metadata !DIExpression()), !dbg !4434
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !4441
  call void @llvm.dbg.value(metadata i8* %260, metadata !4183, metadata !DIExpression()), !dbg !4244
  store i8 %259, i8* %249, align 1, !dbg !4442
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !4382
  call void @llvm.dbg.value(metadata i8* %262, metadata !4183, metadata !DIExpression()), !dbg !4244
  %263 = add nuw i32 %250, 1, !dbg !4443
  call void @llvm.dbg.value(metadata i32 %263, metadata !4193, metadata !DIExpression()), !dbg !4244
  %264 = icmp eq i32 %263, %193, !dbg !4444
  br i1 %264, label %265, label %248, !dbg !4429, !llvm.loop !4445

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !4382
  call void @llvm.dbg.value(metadata i8* %266, metadata !4183, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 0, metadata !4193, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8* %133, metadata !4194, metadata !DIExpression()), !dbg !4244
  %267 = icmp eq i32 %193, 0, !dbg !4447
  br i1 %267, label %312, label %268, !dbg !4450

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !4450

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !4183, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8* %272, metadata !4194, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %273, metadata !4193, metadata !DIExpression()), !dbg !4244
  br i1 %242, label %278, label %274, !dbg !4451

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4454
  %276 = load i8, i8* %275, align 1, !dbg !4454
  %277 = icmp sgt i8 %276, -1, !dbg !4455
  br i1 %277, label %278, label %307, !dbg !4456

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !4457

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !4184, metadata !DIExpression()), !dbg !4244
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !4458
  %281 = load i8, i8* %280, align 1, !dbg !4458
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !4461
  call void @llvm.dbg.value(metadata i8* %282, metadata !4183, metadata !DIExpression()), !dbg !4244
  store i8 %281, i8* %271, align 1, !dbg !4462
  br label %293, !dbg !4463

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4464
  %285 = load i8, i8* %284, align 1, !dbg !4464
  %286 = zext i8 %285 to i32, !dbg !4464
  %287 = shl nuw nsw i32 %286, 2, !dbg !4466
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !4467
  %289 = bitcast i8* %288 to i8**, !dbg !4468
  %290 = load i8*, i8** %289, align 4, !dbg !4468
  call void @llvm.dbg.value(metadata i8* %290, metadata !4194, metadata !DIExpression()), !dbg !4244
  store i8* null, i8** %289, align 4, !dbg !4469
  %291 = tail call i32 @strlen(i8* noundef %290) #25, !dbg !4470
  %292 = add i32 %291, 1, !dbg !4471
  call void @llvm.dbg.value(metadata i32 %292, metadata !4184, metadata !DIExpression()), !dbg !4244
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !4244
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !4472
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !4244
  call void @llvm.dbg.value(metadata i8* %296, metadata !4183, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %295, metadata !4184, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8* %294, metadata !4194, metadata !DIExpression()), !dbg !4244
  %297 = ptrtoint i8* %296 to i32, !dbg !4473
  %298 = add i32 %269, %295, !dbg !4475
  %299 = add i32 %298, %297, !dbg !4476
  %300 = icmp ugt i32 %299, %194, !dbg !4477
  br i1 %300, label %316, label %301, !dbg !4478

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4479
  %303 = load i8, i8* %302, align 1, !dbg !4479
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !4480
  call void @llvm.dbg.value(metadata i8* %304, metadata !4183, metadata !DIExpression()), !dbg !4244
  store i8 %303, i8* %296, align 1, !dbg !4481
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #25, !dbg !4482
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !4483
  call void @llvm.dbg.value(metadata i8* %306, metadata !4183, metadata !DIExpression()), !dbg !4244
  br label %307, !dbg !4484

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !4485
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !4244
  call void @llvm.dbg.value(metadata i8* %309, metadata !4183, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8* %308, metadata !4194, metadata !DIExpression()), !dbg !4244
  %310 = add nuw i32 %273, 1, !dbg !4486
  call void @llvm.dbg.value(metadata i32 %310, metadata !4193, metadata !DIExpression()), !dbg !4244
  %311 = icmp eq i32 %310, %193, !dbg !4447
  br i1 %311, label %312, label %270, !dbg !4450, !llvm.loop !4487

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !4382
  %314 = ptrtoint i8* %313 to i32, !dbg !4489
  %315 = sub i32 %314, %17, !dbg !4489
  br label %316, !dbg !4490

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !4244
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !4491
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !4491
  ret i32 %317, !dbg !4491
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !4492 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4496, metadata !DIExpression()), !dbg !4497
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !4498
  ret i1 %2, !dbg !4499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !4500 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4505, metadata !DIExpression()), !dbg !4506
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4507
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4508
  %4 = and i1 %2, %3, !dbg !4508
  ret i1 %4, !dbg !4509
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4510 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4514, metadata !DIExpression()), !dbg !4520
  call void @llvm.dbg.value(metadata i32 %1, metadata !4515, metadata !DIExpression()), !dbg !4520
  call void @llvm.dbg.value(metadata i32 %2, metadata !4516, metadata !DIExpression()), !dbg !4520
  call void @llvm.dbg.value(metadata i8* %3, metadata !4517, metadata !DIExpression()), !dbg !4520
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4521
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !4521
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4518, metadata !DIExpression()), !dbg !4522
  call void @llvm.va_start(i8* nonnull %6), !dbg !4523
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4524
  %8 = load i32, i32* %7, align 4, !dbg !4524
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4524
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !4524
  call void @llvm.dbg.value(metadata i32 %10, metadata !4519, metadata !DIExpression()), !dbg !4520
  call void @llvm.va_end(i8* nonnull %6), !dbg !4525
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !4526
  ret i32 %10, !dbg !4527
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #8

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4528 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4540, metadata !DIExpression()), !dbg !4559
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4541, metadata !DIExpression()), !dbg !4559
  call void @llvm.dbg.value(metadata i8* %2, metadata !4542, metadata !DIExpression()), !dbg !4559
  call void @llvm.dbg.value(metadata i8* %3, metadata !4543, metadata !DIExpression()), !dbg !4559
  call void @llvm.dbg.value(metadata i8* %3, metadata !4544, metadata !DIExpression()), !dbg !4559
  call void @llvm.dbg.value(metadata i8* %3, metadata !4545, metadata !DIExpression()), !dbg !4559
  %5 = icmp eq i8* %3, null, !dbg !4560
  br i1 %5, label %45, label %6, !dbg !4562

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4554, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4559
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4563
  %8 = load i8, i8* %7, align 1, !dbg !4563
  %9 = zext i8 %8 to i32, !dbg !4564
  call void @llvm.dbg.value(metadata i32 %9, metadata !4555, metadata !DIExpression()), !dbg !4559
  call void @llvm.dbg.value(metadata i8 undef, metadata !4556, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4559
  call void @llvm.dbg.value(metadata i8 undef, metadata !4557, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4559
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4551, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4559
  call void @llvm.dbg.value(metadata i32 0, metadata !4553, metadata !DIExpression()), !dbg !4559
  %10 = icmp eq i8 %8, 0, !dbg !4565
  br i1 %10, label %39, label %11, !dbg !4568

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4569
  call void @llvm.dbg.value(metadata i8 %12, metadata !4554, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4559
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4551, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4559
  %13 = zext i8 %12 to i32, !dbg !4570
  call void @llvm.dbg.value(metadata i32 %13, metadata !4554, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4559
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4551, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4559
  %14 = shl nuw nsw i32 %13, 2, !dbg !4571
  call void @llvm.dbg.value(metadata i32 %14, metadata !4554, metadata !DIExpression()), !dbg !4559
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4551, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4559
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4572
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4551, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4559
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4573
  %17 = load i8, i8* %16, align 1, !dbg !4573
  call void @llvm.dbg.value(metadata i8 %17, metadata !4556, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4559
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4551, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4559
  %18 = zext i8 %17 to i32, !dbg !4574
  call void @llvm.dbg.value(metadata i32 %18, metadata !4556, metadata !DIExpression()), !dbg !4559
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4551, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4559
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4575
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4551, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4559
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4576
  %21 = load i8, i8* %20, align 1, !dbg !4576
  call void @llvm.dbg.value(metadata i8 %21, metadata !4557, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4559
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4551, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4559
  %22 = zext i8 %21 to i32, !dbg !4577
  call void @llvm.dbg.value(metadata i32 %22, metadata !4557, metadata !DIExpression()), !dbg !4559
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4551, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4559
  %23 = shl nuw nsw i32 %22, 1, !dbg !4578
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4551, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4559
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4579
  call void @llvm.dbg.value(metadata i8* %24, metadata !4551, metadata !DIExpression()), !dbg !4559
  br label %25, !dbg !4568

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4551, metadata !DIExpression()), !dbg !4559
  call void @llvm.dbg.value(metadata i32 %27, metadata !4553, metadata !DIExpression()), !dbg !4559
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4580
  call void @llvm.dbg.value(metadata i8* %28, metadata !4551, metadata !DIExpression()), !dbg !4559
  %29 = load i8, i8* %26, align 1, !dbg !4582
  %30 = zext i8 %29 to i32, !dbg !4582
  call void @llvm.dbg.value(metadata i32 %30, metadata !4558, metadata !DIExpression()), !dbg !4559
  %31 = shl nuw nsw i32 %30, 2, !dbg !4583
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4584
  %33 = bitcast i8* %32 to i8**, !dbg !4585
  call void @llvm.dbg.value(metadata i8** %33, metadata !4552, metadata !DIExpression()), !dbg !4559
  store i8* %28, i8** %33, align 4, !dbg !4586
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !4587
  %35 = add i32 %34, 1, !dbg !4588
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4589
  call void @llvm.dbg.value(metadata i8* %36, metadata !4551, metadata !DIExpression()), !dbg !4559
  %37 = add nuw nsw i32 %27, 1, !dbg !4590
  call void @llvm.dbg.value(metadata i32 %37, metadata !4553, metadata !DIExpression()), !dbg !4559
  %38 = icmp eq i32 %37, %9, !dbg !4565
  br i1 %38, label %39, label %25, !dbg !4568, !llvm.loop !4591

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4593
  call void @llvm.dbg.value(metadata i8* %40, metadata !4544, metadata !DIExpression()), !dbg !4559
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4594
  %42 = bitcast i8* %41 to i8**, !dbg !4594
  %43 = load i8*, i8** %42, align 1, !dbg !4594
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !4595
  br label %45, !dbg !4596

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4559
  ret i32 %46, !dbg !4597
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4598 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4602, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4603, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i8* %2, metadata !4604, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i8* %3, metadata !4605, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i8* %4, metadata !4606, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i8* %4, metadata !4607, metadata !DIExpression()), !dbg !4612
  %6 = ptrtoint i8* %4 to i32, !dbg !4613
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4613
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !4613
  ret i32 %8, !dbg !4614
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !4615 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4619, metadata !DIExpression()), !dbg !4624
  call void @llvm.dbg.value(metadata i32 %1, metadata !4620, metadata !DIExpression()), !dbg !4624
  call void @llvm.dbg.value(metadata i8 0, metadata !4622, metadata !DIExpression()), !dbg !4624
  call void @llvm.dbg.value(metadata i32 0, metadata !4623, metadata !DIExpression()), !dbg !4624
  call void @llvm.dbg.value(metadata i8 poison, metadata !4622, metadata !DIExpression()), !dbg !4624
  call void @llvm.dbg.value(metadata i8* %0, metadata !4619, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4624
  %3 = load i8, i8* %0, align 1, !dbg !4625
  call void @llvm.dbg.value(metadata i8 %3, metadata !4621, metadata !DIExpression()), !dbg !4624
  %4 = icmp eq i8 %3, 0, !dbg !4626
  br i1 %4, label %29, label %5, !dbg !4627

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4628
  call void @llvm.dbg.value(metadata i32 %8, metadata !4623, metadata !DIExpression()), !dbg !4624
  br i1 %9, label %11, label %22, !dbg !4629

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4631
  br i1 %12, label %13, label %17, !dbg !4635

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4636
  br i1 %14, label %29, label %15, !dbg !4639

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !4640
  br i1 %16, label %29, label %22, !dbg !4642

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !4643
  %19 = xor i1 %18, true, !dbg !4645
  %20 = zext i1 %18 to i32, !dbg !4645
  %21 = add nsw i32 %8, %20, !dbg !4645
  br label %22, !dbg !4645

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4624
  call void @llvm.dbg.value(metadata i32 %24, metadata !4623, metadata !DIExpression()), !dbg !4624
  call void @llvm.dbg.value(metadata i8 poison, metadata !4622, metadata !DIExpression()), !dbg !4624
  %25 = icmp eq i8 %6, 37, !dbg !4646
  %26 = xor i1 %25, %23, !dbg !4648
  call void @llvm.dbg.value(metadata i8* %10, metadata !4619, metadata !DIExpression()), !dbg !4624
  call void @llvm.dbg.value(metadata i8* %10, metadata !4619, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4624
  %27 = load i8, i8* %10, align 1, !dbg !4625
  call void @llvm.dbg.value(metadata i8 %27, metadata !4621, metadata !DIExpression()), !dbg !4624
  %28 = icmp eq i8 %27, 0, !dbg !4626
  br i1 %28, label %29, label %5, !dbg !4627, !llvm.loop !4649

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4624
  ret i1 %30, !dbg !4651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #4 !dbg !4652 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4656, metadata !DIExpression()), !dbg !4657
  %2 = add i8 %0, -64, !dbg !4658
  %3 = icmp ult i8 %2, 59, !dbg !4658
  ret i1 %3, !dbg !4659
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4660 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4668, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i32 %1, metadata !4669, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4670, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i8* %3, metadata !4671, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i32 %4, metadata !4672, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i16* %5, metadata !4673, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i32 %6, metadata !4674, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i8* %0, metadata !4675, metadata !DIExpression()), !dbg !4737
  %11 = bitcast i8* %0 to i32*, !dbg !4738
  call void @llvm.dbg.value(metadata i32* %11, metadata !4676, metadata !DIExpression()), !dbg !4737
  %12 = and i32 %4, 8, !dbg !4739
  %13 = icmp eq i32 %12, 0, !dbg !4740
  call void @llvm.dbg.value(metadata i1 %13, metadata !4680, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4737
  call void @llvm.dbg.value(metadata i8* %0, metadata !4683, metadata !DIExpression()), !dbg !4737
  %14 = icmp eq i32 %1, 0, !dbg !4741
  br i1 %14, label %15, label %17, !dbg !4742

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #24, !dbg !4743
  br label %17, !dbg !4742

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4742
  call void @llvm.dbg.value(metadata i32 %18, metadata !4669, metadata !DIExpression()), !dbg !4737
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4744
  %20 = load i8, i8* %19, align 1, !dbg !4744
  %21 = zext i8 %20 to i32, !dbg !4745
  call void @llvm.dbg.value(metadata i32 %21, metadata !4678, metadata !DIExpression()), !dbg !4737
  %22 = icmp ne i8 %20, 0, !dbg !4746
  %23 = and i32 %4, 1, !dbg !4747
  %24 = icmp ne i32 %23, 0, !dbg !4747
  %25 = and i1 %24, %22, !dbg !4747
  call void @llvm.dbg.value(metadata i1 %25, metadata !4682, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4737
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4748
  %27 = load i8, i8* %26, align 1, !dbg !4748
  %28 = zext i8 %27 to i32, !dbg !4749
  call void @llvm.dbg.value(metadata i32 %28, metadata !4679, metadata !DIExpression()), !dbg !4737
  %29 = icmp ne i8 %27, 0, !dbg !4750
  %30 = and i32 %4, 2, !dbg !4751
  %31 = icmp ne i32 %30, 0, !dbg !4751
  %32 = and i1 %31, %29, !dbg !4751
  call void @llvm.dbg.value(metadata i1 %32, metadata !4681, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4737
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4752
  br i1 %33, label %38, label %34, !dbg !4752

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4754
  br i1 %35, label %267, label %36, !dbg !4757

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #25, !dbg !4758
  br label %267, !dbg !4760

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4761
  %40 = zext i8 %39 to i32, !dbg !4762
  %41 = shl nuw nsw i32 %40, 2, !dbg !4763
  call void @llvm.dbg.value(metadata i32 %41, metadata !4677, metadata !DIExpression()), !dbg !4737
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4764
  %43 = bitcast i8* %42 to i8**, !dbg !4765
  %44 = load i8*, i8** %43, align 4, !dbg !4765
  call void @llvm.dbg.value(metadata i8* %44, metadata !4686, metadata !DIExpression()), !dbg !4737
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4766
  call void @llvm.dbg.value(metadata i8* %45, metadata !4687, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i32 0, metadata !4688, metadata !DIExpression()), !dbg !4737
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4767
  br i1 %46, label %47, label %132, !dbg !4768

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !4685, metadata !DIExpression()), !dbg !4737
  br i1 %25, label %48, label %73, !dbg !4769

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !4685, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i8* %45, metadata !4687, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i32 0, metadata !4688, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i32 0, metadata !4689, metadata !DIExpression()), !dbg !4770
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4771

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4685, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i8* %52, metadata !4687, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i32 %53, metadata !4688, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i32 %54, metadata !4689, metadata !DIExpression()), !dbg !4770
  %55 = load i8, i8* %52, align 1, !dbg !4772
  %56 = zext i8 %55 to i32, !dbg !4773
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4773
  %58 = bitcast i32* %57 to i8**, !dbg !4774
  %59 = load i8*, i8** %58, align 4, !dbg !4774
  call void @llvm.dbg.value(metadata i8* %59, metadata !4695, metadata !DIExpression()), !dbg !4775
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #24, !dbg !4776
  call void @llvm.dbg.value(metadata i32 %60, metadata !4698, metadata !DIExpression()), !dbg !4775
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4777
  br i1 %62, label %63, label %67, !dbg !4777

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4779
  %65 = add nuw i32 %53, 1, !dbg !4781
  call void @llvm.dbg.value(metadata i32 %65, metadata !4688, metadata !DIExpression()), !dbg !4737
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4782
  store i16 %64, i16* %66, align 2, !dbg !4783
  br label %67, !dbg !4784

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4737
  call void @llvm.dbg.value(metadata i32 %68, metadata !4688, metadata !DIExpression()), !dbg !4737
  %69 = add nsw i32 %60, %51, !dbg !4785
  call void @llvm.dbg.value(metadata i32 %69, metadata !4685, metadata !DIExpression()), !dbg !4737
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4786
  call void @llvm.dbg.value(metadata i8* %70, metadata !4687, metadata !DIExpression()), !dbg !4737
  %71 = add nuw nsw i32 %54, 1, !dbg !4787
  call void @llvm.dbg.value(metadata i32 %71, metadata !4689, metadata !DIExpression()), !dbg !4770
  %72 = icmp eq i32 %71, %21, !dbg !4788
  br i1 %72, label %79, label %50, !dbg !4771, !llvm.loop !4789

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4791
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4791
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4791
  br label %79, !dbg !4791

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4794
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4737
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4795
  call void @llvm.dbg.value(metadata i1 undef, metadata !4699, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4796
  call void @llvm.dbg.value(metadata i32 0, metadata !4700, metadata !DIExpression()), !dbg !4797
  call void @llvm.dbg.value(metadata i32 %82, metadata !4685, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i8* %81, metadata !4687, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i32 %80, metadata !4688, metadata !DIExpression()), !dbg !4737
  %83 = icmp eq i8 %27, 0, !dbg !4798
  br i1 %83, label %267, label %84, !dbg !4799

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4800
  %86 = icmp eq i32 %85, 0, !dbg !4801
  call void @llvm.dbg.value(metadata i1 %86, metadata !4699, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4796
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4799

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !4685, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i8* %93, metadata !4687, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i32 %94, metadata !4688, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i32 %95, metadata !4700, metadata !DIExpression()), !dbg !4797
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4802
  call void @llvm.dbg.value(metadata i8* %96, metadata !4687, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i8 undef, metadata !4702, metadata !DIExpression()), !dbg !4803
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4804
  call void @llvm.dbg.value(metadata i8* %97, metadata !4687, metadata !DIExpression()), !dbg !4737
  %98 = load i8, i8* %96, align 1, !dbg !4805
  call void @llvm.dbg.value(metadata i8 %98, metadata !4705, metadata !DIExpression()), !dbg !4803
  %99 = zext i8 %98 to i32, !dbg !4806
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4806
  %101 = bitcast i32* %100 to i8**, !dbg !4807
  %102 = load i8*, i8** %101, align 4, !dbg !4807
  call void @llvm.dbg.value(metadata i8* %102, metadata !4706, metadata !DIExpression()), !dbg !4803
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #24, !dbg !4808
  call void @llvm.dbg.value(metadata i1 %103, metadata !4707, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4803
  br i1 %13, label %110, label %104, !dbg !4809

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !4811
  call void @llvm.dbg.value(metadata i8 %105, metadata !4702, metadata !DIExpression()), !dbg !4803
  %106 = zext i8 %105 to i32, !dbg !4812
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #24, !dbg !4813
  br i1 %107, label %108, label %110, !dbg !4814

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.25, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #25, !dbg !4815
  %109 = add nsw i32 %92, -2, !dbg !4821
  call void @llvm.dbg.value(metadata i32 %109, metadata !4685, metadata !DIExpression()), !dbg !4737
  br label %127, !dbg !4822

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !4823

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !4824

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !4826
  call void @llvm.dbg.value(metadata i32 %113, metadata !4685, metadata !DIExpression()), !dbg !4737
  br label %127, !dbg !4829

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !4830

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4733), !dbg !4831
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #24, !dbg !4832
  call void @llvm.dbg.value(metadata i32 %116, metadata !4708, metadata !DIExpression()), !dbg !4803
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !4833
  br i1 %118, label %119, label %123, !dbg !4833

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !4835
  %121 = add nuw i32 %94, 1, !dbg !4837
  call void @llvm.dbg.value(metadata i32 %121, metadata !4688, metadata !DIExpression()), !dbg !4737
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !4838
  store i16 %120, i16* %122, align 2, !dbg !4839
  br label %123, !dbg !4840

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4737
  call void @llvm.dbg.value(metadata i32 %124, metadata !4688, metadata !DIExpression()), !dbg !4737
  %125 = add i32 %92, -1, !dbg !4841
  %126 = add i32 %125, %116, !dbg !4842
  call void @llvm.dbg.value(metadata i32 %126, metadata !4685, metadata !DIExpression()), !dbg !4737
  br label %127, !dbg !4843

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4737
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4803
  call void @llvm.dbg.value(metadata i32 %129, metadata !4685, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i32 %128, metadata !4688, metadata !DIExpression()), !dbg !4737
  %130 = add nuw nsw i32 %95, 1, !dbg !4844
  call void @llvm.dbg.value(metadata i8* %97, metadata !4687, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i32 %130, metadata !4700, metadata !DIExpression()), !dbg !4797
  %131 = icmp eq i32 %130, %28, !dbg !4798
  br i1 %131, label %267, label %91, !dbg !4799, !llvm.loop !4845

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4710, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4711, metadata !DIExpression()), !dbg !4848
  br i1 %25, label %133, label %135, !dbg !4849

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !4712, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i8 0, metadata !4713, metadata !DIExpression()), !dbg !4737
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4850
  call void @llvm.dbg.value(metadata i8* %134, metadata !4714, metadata !DIExpression()), !dbg !4737
  br label %140, !dbg !4853

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !4854
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !4854

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4714, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i8 undef, metadata !4713, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i8 0, metadata !4712, metadata !DIExpression()), !dbg !4737
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #25, !dbg !4856
  br label %145, !dbg !4859

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !4860
  call void @llvm.dbg.value(metadata i8* %148, metadata !4687, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i32 0, metadata !4716, metadata !DIExpression()), !dbg !4861
  call void @llvm.dbg.value(metadata i8 %146, metadata !4713, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i8 %147, metadata !4712, metadata !DIExpression()), !dbg !4737
  %149 = icmp eq i8 %27, 0, !dbg !4862
  br i1 %149, label %150, label %152, !dbg !4863

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !4864
  br label %157, !dbg !4863

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !4863

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !4864
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !4865
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !4866
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4737
  call void @llvm.dbg.value(metadata i8 undef, metadata !4709, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4737
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4867
  %163 = load i8, i8* %162, align 1, !dbg !4867
  %164 = zext i8 %159 to i32, !dbg !4868
  %165 = add i8 %163, %159, !dbg !4869
  call void @llvm.dbg.value(metadata i8 %165, metadata !4709, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4737
  %166 = icmp eq i32 %30, 0, !dbg !4870
  %167 = lshr i8 %160, 1, !dbg !4871
  %168 = select i1 %166, i8 %167, i8 0, !dbg !4871
  call void @llvm.dbg.value(metadata i8 %168, metadata !4709, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4737
  %169 = icmp eq i32 %23, 0, !dbg !4872
  %170 = icmp eq i32 %158, 0, !dbg !4864
  %171 = select i1 %170, i8 0, i8 %160, !dbg !4864
  %172 = select i1 %169, i8 %171, i8 0, !dbg !4864
  call void @llvm.dbg.value(metadata i8 %172, metadata !4709, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4737
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4724, metadata !DIExpression()), !dbg !4873
  %173 = load i32, i32* %11, align 1, !dbg !4874
  store i8 %165, i8* %162, align 1, !dbg !4875
  store i8 %172, i8* %19, align 1, !dbg !4875
  store i8 %168, i8* %26, align 1, !dbg !4875
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #25, !dbg !4876
  call void @llvm.dbg.value(metadata i32 %174, metadata !4715, metadata !DIExpression()), !dbg !4737
  %175 = icmp slt i32 %174, 0, !dbg !4877
  br i1 %175, label %267, label %220, !dbg !4879

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4687, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i32 %178, metadata !4716, metadata !DIExpression()), !dbg !4861
  call void @llvm.dbg.value(metadata i8 %179, metadata !4713, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i8 %180, metadata !4712, metadata !DIExpression()), !dbg !4737
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4880
  call void @llvm.dbg.value(metadata i8* %181, metadata !4687, metadata !DIExpression()), !dbg !4737
  %182 = load i8, i8* %177, align 1, !dbg !4881
  call void @llvm.dbg.value(metadata i8 %182, metadata !4718, metadata !DIExpression()), !dbg !4882
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !4883
  call void @llvm.dbg.value(metadata i8* %183, metadata !4687, metadata !DIExpression()), !dbg !4737
  %184 = load i8, i8* %181, align 1, !dbg !4884
  call void @llvm.dbg.value(metadata i8 %184, metadata !4721, metadata !DIExpression()), !dbg !4882
  %185 = zext i8 %184 to i32, !dbg !4885
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !4885
  %187 = bitcast i32* %186 to i8**, !dbg !4886
  %188 = load i8*, i8** %187, align 4, !dbg !4886
  call void @llvm.dbg.value(metadata i8* %188, metadata !4722, metadata !DIExpression()), !dbg !4882
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #24, !dbg !4887
  call void @llvm.dbg.value(metadata i1 %189, metadata !4723, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4882
  br i1 %13, label %193, label %190, !dbg !4888

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !4890
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #24, !dbg !4891
  br i1 %192, label %215, label %193, !dbg !4892

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !4893

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !4894

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !4897
  call void @llvm.dbg.value(metadata i8 %196, metadata !4712, metadata !DIExpression()), !dbg !4737
  br label %208, !dbg !4900

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !4901

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !4902
  call void @llvm.dbg.value(metadata i8 %199, metadata !4713, metadata !DIExpression()), !dbg !4737
  br label %208, !dbg !4905

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !4906

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !4908
  call void @llvm.dbg.value(metadata i8 %202, metadata !4712, metadata !DIExpression()), !dbg !4737
  br label %208, !dbg !4911

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !4912
  call void @llvm.dbg.value(metadata i8 %204, metadata !4713, metadata !DIExpression()), !dbg !4737
  %205 = zext i8 %179 to i32, !dbg !4914
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !4914
  store i8 %182, i8* %206, align 1, !dbg !4915
  %207 = add i8 %179, 2, !dbg !4916
  call void @llvm.dbg.value(metadata i8 %207, metadata !4713, metadata !DIExpression()), !dbg !4737
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !4917
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !4917
  store i8 %184, i8* %214, align 1, !dbg !4917
  br label %215, !dbg !4918

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4737
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !4866
  call void @llvm.dbg.value(metadata i8 %217, metadata !4713, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i8 %216, metadata !4712, metadata !DIExpression()), !dbg !4737
  %218 = add nuw nsw i32 %178, 1, !dbg !4918
  call void @llvm.dbg.value(metadata i8* %183, metadata !4687, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i32 %218, metadata !4716, metadata !DIExpression()), !dbg !4861
  %219 = icmp eq i32 %218, %28, !dbg !4862
  br i1 %219, label %157, label %176, !dbg !4863, !llvm.loop !4919

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !4871
  call void @llvm.dbg.value(metadata i32 %174, metadata !4685, metadata !DIExpression()), !dbg !4737
  store i32 %173, i32* %11, align 1, !dbg !4921
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4922
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #25, !dbg !4923
  call void @llvm.dbg.value(metadata i32 %223, metadata !4715, metadata !DIExpression()), !dbg !4737
  %224 = icmp slt i32 %223, 0, !dbg !4924
  br i1 %224, label %267, label %225, !dbg !4926

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !4685, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4737
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !4927
  %228 = add nuw nsw i32 %41, %21, !dbg !4927
  %229 = sub i32 %227, %228, !dbg !4927
  call void @llvm.dbg.value(metadata i32 %229, metadata !4725, metadata !DIExpression()), !dbg !4737
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #25, !dbg !4928
  call void @llvm.dbg.value(metadata i32 %230, metadata !4715, metadata !DIExpression()), !dbg !4737
  %231 = icmp slt i32 %230, 0, !dbg !4929
  br i1 %231, label %267, label %232, !dbg !4931

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !4932
  call void @llvm.dbg.value(metadata i32 %233, metadata !4685, metadata !DIExpression()), !dbg !4737
  %234 = add nuw nsw i32 %233, %230, !dbg !4933
  call void @llvm.dbg.value(metadata i32 %234, metadata !4685, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata i32 0, metadata !4726, metadata !DIExpression()), !dbg !4934
  %235 = icmp eq i8 %159, 0, !dbg !4935
  br i1 %235, label %264, label %236, !dbg !4936

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !4936

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4726, metadata !DIExpression()), !dbg !4934
  call void @llvm.dbg.value(metadata i32 %240, metadata !4685, metadata !DIExpression()), !dbg !4737
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4937
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !4938
  %242 = load i8, i8* %241, align 1, !dbg !4938
  call void @llvm.dbg.value(metadata i8 %242, metadata !4728, metadata !DIExpression()), !dbg !4939
  store i8 %242, i8* %10, align 1, !dbg !4940
  %243 = zext i8 %242 to i32, !dbg !4941
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !4941
  %245 = bitcast i32* %244 to i8**, !dbg !4942
  %246 = load i8*, i8** %245, align 4, !dbg !4942
  call void @llvm.dbg.value(metadata i8* %246, metadata !4731, metadata !DIExpression()), !dbg !4939
  br i1 %237, label %250, label %247, !dbg !4943

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !4944
  %249 = load i16, i16* %248, align 2, !dbg !4944
  br label %250, !dbg !4943

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !4943
  call void @llvm.dbg.value(metadata i32 undef, metadata !4732, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4939
  call void @llvm.dbg.value(metadata i8* %10, metadata !4728, metadata !DIExpression(DW_OP_deref)), !dbg !4939
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4945
  call void @llvm.dbg.value(metadata i32 %252, metadata !4715, metadata !DIExpression()), !dbg !4737
  %253 = icmp slt i32 %252, 0, !dbg !4946
  br i1 %253, label %257, label %254, !dbg !4948

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4732, metadata !DIExpression()), !dbg !4939
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !4685, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4737
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #24, !dbg !4949
  call void @llvm.dbg.value(metadata i32 %255, metadata !4715, metadata !DIExpression()), !dbg !4737
  %256 = icmp slt i32 %255, 0, !dbg !4950
  br i1 %256, label %257, label %259, !dbg !4952

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4685, metadata !DIExpression()), !dbg !4737
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4953
  call void @llvm.dbg.value(metadata i32 undef, metadata !4685, metadata !DIExpression()), !dbg !4737
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !4954
  call void @llvm.dbg.value(metadata i32 %260, metadata !4685, metadata !DIExpression()), !dbg !4737
  %261 = add nsw i32 %260, %255, !dbg !4955
  call void @llvm.dbg.value(metadata i32 %261, metadata !4685, metadata !DIExpression()), !dbg !4737
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4953
  %262 = add nuw nsw i32 %239, 1, !dbg !4956
  call void @llvm.dbg.value(metadata i32 %262, metadata !4726, metadata !DIExpression()), !dbg !4934
  %263 = icmp eq i32 %262, %164, !dbg !4935
  br i1 %263, label %264, label %238, !dbg !4936, !llvm.loop !4957

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !4933
  call void @llvm.dbg.value(metadata i32 %265, metadata !4685, metadata !DIExpression()), !dbg !4737
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4959
  br label %267, !dbg !4960

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4737
  ret i32 %268, !dbg !4961
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4962 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4966, metadata !DIExpression()), !dbg !4974
  call void @llvm.dbg.value(metadata i8* %0, metadata !4967, metadata !DIExpression()), !dbg !4974
  call void @llvm.dbg.value(metadata i8* %0, metadata !4968, metadata !DIExpression()), !dbg !4974
  %2 = load i8, i8* %0, align 1, !dbg !4975
  %3 = zext i8 %2 to i32, !dbg !4975
  %4 = shl nuw nsw i32 %3, 2, !dbg !4976
  call void @llvm.dbg.value(metadata i32 %4, metadata !4969, metadata !DIExpression()), !dbg !4974
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4977
  %6 = load i8, i8* %5, align 1, !dbg !4977
  %7 = zext i8 %6 to i32, !dbg !4977
  call void @llvm.dbg.value(metadata i32 %7, metadata !4970, metadata !DIExpression()), !dbg !4974
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4978
  %9 = load i8, i8* %8, align 1, !dbg !4978
  %10 = zext i8 %9 to i32, !dbg !4978
  call void @llvm.dbg.value(metadata i32 %10, metadata !4971, metadata !DIExpression()), !dbg !4974
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !4979
  call void @llvm.dbg.value(metadata i8* %11, metadata !4967, metadata !DIExpression()), !dbg !4974
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !4980
  call void @llvm.dbg.value(metadata i8* %12, metadata !4967, metadata !DIExpression()), !dbg !4974
  call void @llvm.dbg.value(metadata i32 0, metadata !4972, metadata !DIExpression()), !dbg !4981
  %13 = icmp eq i8 %6, 0, !dbg !4982
  br i1 %13, label %14, label %19, !dbg !4984

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !4974
  %16 = ptrtoint i8* %15 to i32, !dbg !4985
  %17 = ptrtoint i8* %0 to i32, !dbg !4985
  %18 = sub i32 %16, %17, !dbg !4985
  ret i32 %18, !dbg !4986

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4972, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata i8* %21, metadata !4967, metadata !DIExpression()), !dbg !4974
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !4987
  call void @llvm.dbg.value(metadata i8* %22, metadata !4967, metadata !DIExpression()), !dbg !4974
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #25, !dbg !4989
  %24 = add i32 %23, 1, !dbg !4990
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !4991
  call void @llvm.dbg.value(metadata i8* %25, metadata !4967, metadata !DIExpression()), !dbg !4974
  %26 = add nuw nsw i32 %20, 1, !dbg !4992
  call void @llvm.dbg.value(metadata i32 %26, metadata !4972, metadata !DIExpression()), !dbg !4981
  %27 = icmp eq i32 %26, %7, !dbg !4982
  br i1 %27, label %14, label %19, !dbg !4984, !llvm.loop !4993
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4995 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4999, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.value(metadata i8* %1, metadata !5000, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.value(metadata i8* %2, metadata !5001, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.value(metadata i16 %3, metadata !5002, metadata !DIExpression()), !dbg !5003
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !5004
  br i1 %5, label %6, label %9, !dbg !5006

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !5007
  %8 = add i32 %7, 1, !dbg !5009
  br label %20, !dbg !5010

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !5011
  br i1 %10, label %13, label %11, !dbg !5012

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !5012
  br label %16, !dbg !5012

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !5013
  %15 = add i32 %14, 1, !dbg !5014
  br label %16, !dbg !5012

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !5012
  %18 = and i32 %17, 65535, !dbg !5015
  call void @llvm.dbg.value(metadata i32 %17, metadata !5002, metadata !DIExpression()), !dbg !5003
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !5016
  br label %20, !dbg !5017

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !5003
  ret i32 %21, !dbg !5018
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !5019 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5021, metadata !DIExpression()), !dbg !5022
  ret i32 0, !dbg !5023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #6 !dbg !5024 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !5028, metadata !DIExpression()), !dbg !5029
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !5030
  ret void, !dbg !5031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #10 !dbg !5032 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !5035
  ret i8* %1, !dbg !5036
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5037 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5048, metadata !DIExpression()), !dbg !5059
  call void @llvm.dbg.value(metadata i8* %0, metadata !5047, metadata !DIExpression()), !dbg !5059
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !5060
  ret void, !dbg !5062
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !5063 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5067, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.value(metadata i8* %1, metadata !5068, metadata !DIExpression()), !dbg !5069
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5070
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !5070
  ret i32 %4, !dbg !5071
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !5072 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5079, metadata !DIExpression()), !dbg !5080
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5076, metadata !DIExpression()), !dbg !5080
  call void @llvm.dbg.value(metadata i8* %1, metadata !5077, metadata !DIExpression()), !dbg !5080
  call void @llvm.dbg.value(metadata i8* %2, metadata !5078, metadata !DIExpression()), !dbg !5080
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !5081
  ret void, !dbg !5082
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5083 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5087, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata i32 %1, metadata !5088, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata i32 0, metadata !5089, metadata !DIExpression()), !dbg !5090
  %3 = icmp eq i32 %1, 0, !dbg !5091
  br i1 %3, label %13, label %4, !dbg !5094

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5089, metadata !DIExpression()), !dbg !5090
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5095
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !5097
  %8 = load i8, i8* %7, align 1, !dbg !5097
  %9 = zext i8 %8 to i32, !dbg !5097
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !5095
  %11 = add nuw i32 %5, 1, !dbg !5098
  call void @llvm.dbg.value(metadata i32 %11, metadata !5089, metadata !DIExpression()), !dbg !5090
  %12 = icmp eq i32 %11, %1, !dbg !5091
  br i1 %12, label %13, label %4, !dbg !5094, !llvm.loop !5099

13:                                               ; preds = %4, %2
  ret void, !dbg !5101
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5102 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5106, metadata !DIExpression()), !dbg !5108
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5109
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5109
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5107, metadata !DIExpression()), !dbg !5110
  call void @llvm.va_start(i8* nonnull %3), !dbg !5111
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5112
  %5 = load i32, i32* %4, align 4, !dbg !5112
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5112
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !5112
  call void @llvm.va_end(i8* nonnull %3), !dbg !5113
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5114
  ret void, !dbg !5114
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !5115 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5119, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.value(metadata i32 %1, metadata !5120, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.value(metadata i8* %2, metadata !5121, metadata !DIExpression()), !dbg !5124
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5125
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !5125
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5122, metadata !DIExpression()), !dbg !5126
  call void @llvm.va_start(i8* nonnull %5), !dbg !5127
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5128
  %7 = load i32, i32* %6, align 4, !dbg !5128
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5128
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !5128
  call void @llvm.dbg.value(metadata i32 %9, metadata !5123, metadata !DIExpression()), !dbg !5124
  call void @llvm.va_end(i8* nonnull %5), !dbg !5129
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !5130
  ret i32 %9, !dbg !5131
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5132 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5139, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.value(metadata i8* %0, metadata !5136, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.value(metadata i32 %1, metadata !5137, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.value(metadata i8* %2, metadata !5138, metadata !DIExpression()), !dbg !5146
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5147
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !5147
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5140, metadata !DIExpression()), !dbg !5148
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5149
  store i8* %0, i8** %7, align 4, !dbg !5149
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5149
  store i32 %1, i32* %8, align 4, !dbg !5149
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5149
  store i32 0, i32* %9, align 4, !dbg !5149
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !5150
  %10 = load i32, i32* %9, align 4, !dbg !5151
  %11 = load i32, i32* %8, align 4, !dbg !5153
  %12 = icmp slt i32 %10, %11, !dbg !5154
  br i1 %12, label %13, label %15, !dbg !5155

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5156
  store i8 0, i8* %14, align 1, !dbg !5158
  br label %15, !dbg !5159

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !5160
  ret i32 %10, !dbg !5161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #11 !dbg !5162 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5167, metadata !DIExpression()), !dbg !5169
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5168, metadata !DIExpression()), !dbg !5169
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5170
  %4 = load i8*, i8** %3, align 4, !dbg !5170
  %5 = icmp eq i8* %4, null, !dbg !5172
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5173
  br i1 %5, label %12, label %8, !dbg !5174

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5175
  %10 = load i32, i32* %9, align 4, !dbg !5175
  %11 = icmp slt i32 %7, %10, !dbg !5176
  br i1 %11, label %15, label %12, !dbg !5177

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5178
  %14 = add nsw i32 %7, 1, !dbg !5180
  store i32 %14, i32* %13, align 4, !dbg !5180
  br label %25, !dbg !5181

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5182
  %17 = icmp eq i32 %7, %16, !dbg !5184
  br i1 %17, label %18, label %21, !dbg !5185

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5186
  store i32 %19, i32* %6, align 4, !dbg !5186
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5188
  store i8 0, i8* %20, align 1, !dbg !5189
  br label %25, !dbg !5190

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5191
  %23 = add nsw i32 %7, 1, !dbg !5193
  store i32 %23, i32* %6, align 4, !dbg !5193
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5194
  store i8 %22, i8* %24, align 1, !dbg !5195
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5196
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !5197 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5207, metadata !DIExpression()), !dbg !5211
  call void @llvm.dbg.value(metadata i8* %1, metadata !5208, metadata !DIExpression()), !dbg !5211
  call void @llvm.dbg.value(metadata i8* %2, metadata !5209, metadata !DIExpression()), !dbg !5211
  call void @llvm.dbg.value(metadata i8* %3, metadata !5210, metadata !DIExpression()), !dbg !5211
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !5212
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !5213
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !5214
  unreachable, !dbg !5215
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #12 !dbg !5216 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !5320
  ret %struct.k_thread* %1, !dbg !5321
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5322 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5326, metadata !DIExpression()), !dbg !5327
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5328, !srcloc !5330
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !5331
  ret void, !dbg !5332
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #12 !dbg !5333 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5334, !srcloc !5336
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !5337
  ret %struct.k_thread* %1, !dbg !5338
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5339 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5352, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5349, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i8* %1, metadata !5350, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i8* %2, metadata !5351, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i32 %4, metadata !5353, metadata !DIExpression()), !dbg !5478
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5479
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5479
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5354, metadata !DIExpression()), !dbg !5480
  call void @llvm.dbg.value(metadata i32 0, metadata !5358, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i1 undef, metadata !5360, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5478
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5481

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5481

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5482
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5352, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i8* %30, metadata !5351, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i32 %29, metadata !5358, metadata !DIExpression()), !dbg !5478
  %31 = load i8, i8* %30, align 1, !dbg !5483
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5481

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5483
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5484
  call void @llvm.dbg.value(metadata i8* %34, metadata !5351, metadata !DIExpression()), !dbg !5478
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !5484
  call void @llvm.dbg.value(metadata i32 %35, metadata !5362, metadata !DIExpression()), !dbg !5485
  %36 = icmp slt i32 %35, 0, !dbg !5486
  %37 = add i32 %29, 1, !dbg !5484
  call void @llvm.dbg.value(metadata i32 undef, metadata !5358, metadata !DIExpression()), !dbg !5478
  br i1 %36, label %365, label %28, !llvm.loop !5488

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5490
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5367, metadata !DIExpression()), !dbg !5491
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5491
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5410, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5413, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i8* %30, metadata !5416, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i32 -1, metadata !5417, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i32 -1, metadata !5418, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i8* null, metadata !5419, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i8* %14, metadata !5420, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i8 0, metadata !5421, metadata !DIExpression()), !dbg !5492
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !5493
  call void @llvm.dbg.value(metadata i8* %39, metadata !5351, metadata !DIExpression()), !dbg !5478
  %40 = load i24, i24* %15, align 8, !dbg !5494
  %41 = and i24 %40, 256, !dbg !5494
  %42 = icmp eq i24 %41, 0, !dbg !5494
  br i1 %42, label %51, label %43, !dbg !5496

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5497
  call void @llvm.dbg.value(metadata i8* %44, metadata !5352, metadata !DIExpression()), !dbg !5478
  %45 = bitcast i8* %27 to i32*, !dbg !5497
  %46 = load i32, i32* %45, align 4, !dbg !5497
  call void @llvm.dbg.value(metadata i32 %46, metadata !5417, metadata !DIExpression()), !dbg !5492
  %47 = icmp slt i32 %46, 0, !dbg !5499
  br i1 %47, label %48, label %56, !dbg !5501

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5502
  store i24 %49, i24* %15, align 8, !dbg !5502
  %50 = sub nsw i32 0, %46, !dbg !5504
  call void @llvm.dbg.value(metadata i32 %50, metadata !5417, metadata !DIExpression()), !dbg !5492
  br label %56, !dbg !5505

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5506
  %53 = icmp eq i24 %52, 0, !dbg !5506
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5508
  br label %56, !dbg !5508

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5509
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5492
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5352, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i32 %58, metadata !5417, metadata !DIExpression()), !dbg !5492
  %60 = and i24 %57, 1024, !dbg !5509
  %61 = icmp eq i24 %60, 0, !dbg !5509
  br i1 %61, label %69, label %62, !dbg !5510

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5511
  call void @llvm.dbg.value(metadata i8* %63, metadata !5352, metadata !DIExpression()), !dbg !5478
  %64 = bitcast i8* %59 to i32*, !dbg !5511
  %65 = load i32, i32* %64, align 4, !dbg !5511
  call void @llvm.dbg.value(metadata i32 %65, metadata !5422, metadata !DIExpression()), !dbg !5512
  %66 = icmp slt i32 %65, 0, !dbg !5513
  br i1 %66, label %67, label %74, !dbg !5515

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5516
  store i24 %68, i24* %15, align 8, !dbg !5516
  br label %74, !dbg !5518

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5519
  %71 = icmp eq i24 %70, 0, !dbg !5519
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5521
  br label %74, !dbg !5521

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5522
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5492
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5492
  call void @llvm.dbg.value(metadata i8* %77, metadata !5352, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i32 %76, metadata !5418, metadata !DIExpression()), !dbg !5492
  store i32 0, i32* %16, align 4, !dbg !5523
  store i32 0, i32* %17, align 8, !dbg !5524
  %78 = lshr i24 %75, 16, !dbg !5522
  call void @llvm.dbg.value(metadata i24 %78, metadata !5425, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5492
  %79 = lshr i24 %75, 11, !dbg !5525
  %80 = and i24 %79, 15, !dbg !5525
  %81 = zext i24 %80 to i32, !dbg !5525
  call void @llvm.dbg.value(metadata i32 %81, metadata !5426, metadata !DIExpression()), !dbg !5492
  %82 = trunc i24 %78 to i3, !dbg !5526
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5526

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5527

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5530
  call void @llvm.dbg.value(metadata i8* %85, metadata !5352, metadata !DIExpression()), !dbg !5478
  %86 = bitcast i8* %77 to i32*, !dbg !5530
  %87 = load i32, i32* %86, align 4, !dbg !5530
  %88 = sext i32 %87 to i64, !dbg !5530
  store i64 %88, i64* %20, align 8, !dbg !5532
  br label %115, !dbg !5533

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5534
  call void @llvm.dbg.value(metadata i8* %90, metadata !5352, metadata !DIExpression()), !dbg !5478
  %91 = bitcast i8* %77 to i32*, !dbg !5534
  %92 = load i32, i32* %91, align 4, !dbg !5534
  %93 = sext i32 %92 to i64, !dbg !5534
  store i64 %93, i64* %20, align 8, !dbg !5537
  br label %115, !dbg !5538

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5539
  %96 = add i32 %95, 7, !dbg !5539
  %97 = and i32 %96, -8, !dbg !5539
  %98 = inttoptr i32 %97 to i8*, !dbg !5539
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5539
  call void @llvm.dbg.value(metadata i8* %99, metadata !5352, metadata !DIExpression()), !dbg !5478
  %100 = inttoptr i32 %97 to i64*, !dbg !5539
  %101 = load i64, i64* %100, align 8, !dbg !5539
  store i64 %101, i64* %20, align 8, !dbg !5540
  br label %115, !dbg !5541

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5542
  %104 = add i32 %103, 7, !dbg !5542
  %105 = and i32 %104, -8, !dbg !5542
  %106 = inttoptr i32 %105 to i8*, !dbg !5542
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5542
  call void @llvm.dbg.value(metadata i8* %107, metadata !5352, metadata !DIExpression()), !dbg !5478
  %108 = inttoptr i32 %105 to i64*, !dbg !5542
  %109 = load i64, i64* %108, align 8, !dbg !5542
  store i64 %109, i64* %20, align 8, !dbg !5543
  br label %115, !dbg !5544

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5545
  call void @llvm.dbg.value(metadata i8* %111, metadata !5352, metadata !DIExpression()), !dbg !5478
  %112 = bitcast i8* %77 to i32*, !dbg !5545
  %113 = load i32, i32* %112, align 4, !dbg !5545
  %114 = sext i32 %113 to i64, !dbg !5546
  store i64 %114, i64* %20, align 8, !dbg !5547
  br label %115, !dbg !5548

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5549
  call void @llvm.dbg.value(metadata i8* %117, metadata !5352, metadata !DIExpression()), !dbg !5478
  %118 = trunc i24 %79 to i4, !dbg !5550
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5550

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5551
  %121 = ashr exact i64 %120, 56, !dbg !5551
  store i64 %121, i64* %20, align 8, !dbg !5554
  br label %177, !dbg !5555

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5556
  %124 = ashr exact i64 %123, 48, !dbg !5556
  store i64 %124, i64* %20, align 8, !dbg !5559
  br label %177, !dbg !5560

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5561

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5564
  call void @llvm.dbg.value(metadata i8* %127, metadata !5352, metadata !DIExpression()), !dbg !5478
  %128 = bitcast i8* %77 to i32*, !dbg !5564
  %129 = load i32, i32* %128, align 4, !dbg !5564
  %130 = zext i32 %129 to i64, !dbg !5564
  store i64 %130, i64* %20, align 8, !dbg !5566
  br label %157, !dbg !5567

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5568
  call void @llvm.dbg.value(metadata i8* %132, metadata !5352, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i8* %132, metadata !5352, metadata !DIExpression()), !dbg !5478
  %133 = bitcast i8* %77 to i32*, !dbg !5568
  %134 = load i32, i32* %133, align 4, !dbg !5568
  %135 = zext i32 %134 to i64, !dbg !5568
  store i64 %135, i64* %20, align 8, !dbg !5568
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5570
  %138 = add i32 %137, 7, !dbg !5570
  %139 = and i32 %138, -8, !dbg !5570
  %140 = inttoptr i32 %139 to i8*, !dbg !5570
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5570
  call void @llvm.dbg.value(metadata i8* %141, metadata !5352, metadata !DIExpression()), !dbg !5478
  %142 = inttoptr i32 %139 to i64*, !dbg !5570
  %143 = load i64, i64* %142, align 8, !dbg !5570
  store i64 %143, i64* %20, align 8, !dbg !5571
  br label %157, !dbg !5572

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5573
  %146 = add i32 %145, 7, !dbg !5573
  %147 = and i32 %146, -8, !dbg !5573
  %148 = inttoptr i32 %147 to i8*, !dbg !5573
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5573
  call void @llvm.dbg.value(metadata i8* %149, metadata !5352, metadata !DIExpression()), !dbg !5478
  %150 = inttoptr i32 %147 to i64*, !dbg !5573
  %151 = load i64, i64* %150, align 8, !dbg !5573
  store i64 %151, i64* %20, align 8, !dbg !5574
  br label %157, !dbg !5575

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5576
  call void @llvm.dbg.value(metadata i8* %153, metadata !5352, metadata !DIExpression()), !dbg !5478
  %154 = bitcast i8* %77 to i32*, !dbg !5576
  %155 = load i32, i32* %154, align 4, !dbg !5576
  %156 = zext i32 %155 to i64, !dbg !5577
  store i64 %156, i64* %20, align 8, !dbg !5578
  br label %157, !dbg !5579

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5580
  call void @llvm.dbg.value(metadata i8* %159, metadata !5352, metadata !DIExpression()), !dbg !5478
  %160 = trunc i24 %79 to i4, !dbg !5581
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5581

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5582
  store i64 %162, i64* %20, align 8, !dbg !5585
  br label %177, !dbg !5586

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5587
  store i64 %164, i64* %20, align 8, !dbg !5590
  br label %177, !dbg !5591

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5592
  %167 = add i32 %166, 7, !dbg !5592
  %168 = and i32 %167, -8, !dbg !5592
  %169 = inttoptr i32 %168 to i8*, !dbg !5592
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5592
  call void @llvm.dbg.value(metadata i8* %170, metadata !5352, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i8* %170, metadata !5352, metadata !DIExpression()), !dbg !5478
  %171 = inttoptr i32 %168 to double*, !dbg !5592
  %172 = load double, double* %171, align 8, !dbg !5592
  store double %172, double* %19, align 8, !dbg !5592
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5596
  call void @llvm.dbg.value(metadata i8* %174, metadata !5352, metadata !DIExpression()), !dbg !5478
  %175 = bitcast i8* %77 to i8**, !dbg !5596
  %176 = load i8*, i8** %175, align 4, !dbg !5596
  store i8* %176, i8** %18, align 8, !dbg !5599
  br label %177, !dbg !5600

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5492
  call void @llvm.dbg.value(metadata i8* %178, metadata !5352, metadata !DIExpression()), !dbg !5478
  %179 = and i24 %75, 3, !dbg !5601
  %180 = icmp eq i24 %179, 0, !dbg !5601
  br i1 %180, label %185, label %181, !dbg !5601

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !5602
  call void @llvm.dbg.value(metadata i32 %182, metadata !5427, metadata !DIExpression()), !dbg !5603
  %183 = icmp slt i32 %182, 0, !dbg !5604
  %184 = add i32 %182, %29, !dbg !5602
  call void @llvm.dbg.value(metadata i32 undef, metadata !5358, metadata !DIExpression()), !dbg !5478
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5606
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5607

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !5608
  call void @llvm.dbg.value(metadata i32 %188, metadata !5431, metadata !DIExpression()), !dbg !5609
  %189 = icmp slt i32 %188, 0, !dbg !5610
  %190 = add i32 %29, 1, !dbg !5608
  call void @llvm.dbg.value(metadata i32 undef, metadata !5358, metadata !DIExpression()), !dbg !5478
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5612
  call void @llvm.dbg.value(metadata i8* %192, metadata !5419, metadata !DIExpression()), !dbg !5492
  %193 = icmp sgt i32 %76, -1, !dbg !5613
  br i1 %193, label %194, label %196, !dbg !5615

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !5616
  call void @llvm.dbg.value(metadata i32 %195, metadata !5434, metadata !DIExpression()), !dbg !5618
  br label %241, !dbg !5619

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !5620
  call void @llvm.dbg.value(metadata i32 %197, metadata !5434, metadata !DIExpression()), !dbg !5618
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5419, metadata !DIExpression()), !dbg !5492
  %199 = load i64, i64* %20, align 8, !dbg !5622
  %200 = trunc i64 %199 to i8, !dbg !5623
  store i8 %200, i8* %10, align 1, !dbg !5624
  call void @llvm.dbg.value(metadata i8* %23, metadata !5420, metadata !DIExpression()), !dbg !5492
  br label %245, !dbg !5625

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5626
  %203 = icmp eq i24 %202, 0, !dbg !5626
  %204 = trunc i24 %75 to i8, !dbg !5628
  %205 = shl i8 %204, 1, !dbg !5628
  %206 = and i8 %205, 32, !dbg !5628
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5628
  call void @llvm.dbg.value(metadata i8 %207, metadata !5421, metadata !DIExpression()), !dbg !5492
  %208 = load i64, i64* %20, align 8, !dbg !5629
  call void @llvm.dbg.value(metadata i64 %208, metadata !5359, metadata !DIExpression()), !dbg !5478
  %209 = icmp slt i64 %208, 0, !dbg !5630
  br i1 %209, label %210, label %212, !dbg !5632

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5421, metadata !DIExpression()), !dbg !5492
  %211 = sub nsw i64 0, %208, !dbg !5633
  store i64 %211, i64* %20, align 8, !dbg !5635
  br label %212, !dbg !5636

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5492
  call void @llvm.dbg.value(metadata i8 %213, metadata !5421, metadata !DIExpression()), !dbg !5492
  %214 = load i64, i64* %20, align 8, !dbg !5637
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !5638
  call void @llvm.dbg.value(metadata i8* %215, metadata !5419, metadata !DIExpression()), !dbg !5492
  br label %216, !dbg !5639

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5640
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5641
  call void @llvm.dbg.value(metadata i8* %218, metadata !5419, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i8 %217, metadata !5421, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.label(metadata !5477), !dbg !5642
  %219 = icmp sgt i32 %76, -1, !dbg !5643
  br i1 %219, label %222, label %220, !dbg !5644

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5645
  br label %245, !dbg !5644

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5647
  %224 = sub i32 %22, %223, !dbg !5647
  call void @llvm.dbg.value(metadata i32 %224, metadata !5436, metadata !DIExpression()), !dbg !5648
  %225 = load i24, i24* %15, align 8, !dbg !5649
  %226 = and i24 %225, -65, !dbg !5649
  store i24 %226, i24* %15, align 8, !dbg !5649
  %227 = icmp ugt i32 %76, %224, !dbg !5650
  br i1 %227, label %228, label %245, !dbg !5652

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5653
  store i32 %229, i32* %16, align 4, !dbg !5655
  br label %245, !dbg !5656

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5657
  %232 = icmp eq i8* %231, null, !dbg !5659
  br i1 %232, label %245, label %233, !dbg !5660

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5661
  %235 = zext i32 %234 to i64, !dbg !5661
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !5663
  call void @llvm.dbg.value(metadata i8* %236, metadata !5419, metadata !DIExpression()), !dbg !5492
  %237 = load i24, i24* %15, align 8, !dbg !5664
  %238 = or i24 %237, 1048576, !dbg !5664
  store i24 %238, i24* %15, align 8, !dbg !5664
  store i8 120, i8* %21, align 1, !dbg !5665
  br label %216, !dbg !5666

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5667
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !5670
  br label %363, !dbg !5671

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5672
  call void @llvm.dbg.value(metadata i32 %242, metadata !5434, metadata !DIExpression()), !dbg !5618
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5673
  call void @llvm.dbg.value(metadata i32 -1, metadata !5418, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i32 %29, metadata !5358, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i8* %192, metadata !5419, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i8* %243, metadata !5420, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i8 0, metadata !5421, metadata !DIExpression()), !dbg !5492
  %244 = icmp eq i8* %192, null, !dbg !5674
  br i1 %244, label %363, label %245, !dbg !5676, !llvm.loop !5488

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5645
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5439, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5492
  call void @llvm.dbg.value(metadata i32 0, metadata !5440, metadata !DIExpression()), !dbg !5492
  %250 = zext i8 %249 to i32, !dbg !5677
  %251 = icmp eq i8 %249, 0, !dbg !5679
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5439, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5492
  call void @llvm.dbg.value(metadata i32 undef, metadata !5439, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5439, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5492
  call void @llvm.dbg.value(metadata i32 undef, metadata !5439, metadata !DIExpression()), !dbg !5492
  %252 = icmp sgt i32 %58, 0, !dbg !5680
  br i1 %252, label %253, label %302, !dbg !5681

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5645
  %255 = icmp eq i24 %254, 0, !dbg !5645
  %256 = ptrtoint i8* %248 to i32, !dbg !5682
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5439, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5492
  %257 = ptrtoint i8* %247 to i32, !dbg !5682
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5439, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5492
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5439, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5492
  %258 = xor i1 %251, true, !dbg !5683
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5439, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5492
  %259 = sext i1 %258 to i32, !dbg !5683
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5439, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5492
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5439, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5492
  %260 = lshr i24 %246, 19, !dbg !5684
  %261 = and i24 %260, 1, !dbg !5684
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5684
  %263 = zext i24 %262 to i32, !dbg !5684
  %264 = add i32 %257, %259, !dbg !5684
  %265 = add i32 %256, %263, !dbg !5684
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5439, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5492
  %266 = and i24 %246, 4194304, !dbg !5685
  %267 = icmp eq i24 %266, 0, !dbg !5685
  %268 = load i32, i32* %16, align 4, !dbg !5687
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5439, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5492
  call void @llvm.dbg.value(metadata i32 undef, metadata !5439, metadata !DIExpression()), !dbg !5492
  %269 = load i32, i32* %17, align 8, !dbg !5688
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5688
  call void @llvm.dbg.value(metadata i32 undef, metadata !5439, metadata !DIExpression()), !dbg !5492
  %271 = add i32 %264, %58, !dbg !5688
  %272 = add i32 %265, %268, !dbg !5688
  %273 = add i32 %272, %270, !dbg !5689
  %274 = sub i32 %271, %273, !dbg !5689
  call void @llvm.dbg.value(metadata i32 %274, metadata !5417, metadata !DIExpression()), !dbg !5492
  %275 = and i24 %246, 4, !dbg !5690
  %276 = icmp eq i24 %275, 0, !dbg !5690
  br i1 %276, label %277, label %302, !dbg !5691

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5441, metadata !DIExpression()), !dbg !5692
  %278 = and i24 %246, 64, !dbg !5693
  %279 = icmp eq i24 %278, 0, !dbg !5693
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5694
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5694
  %282 = select i1 %279, i32 32, i32 48, !dbg !5694
  br i1 %280, label %287, label %283, !dbg !5694

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !5695
  call void @llvm.dbg.value(metadata i32 %284, metadata !5446, metadata !DIExpression()), !dbg !5696
  %285 = icmp slt i32 %284, 0, !dbg !5697
  %286 = add i32 %29, 1, !dbg !5695
  call void @llvm.dbg.value(metadata i32 undef, metadata !5358, metadata !DIExpression()), !dbg !5478
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5492
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5482
  call void @llvm.dbg.value(metadata i32 %290, metadata !5358, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i8 undef, metadata !5441, metadata !DIExpression()), !dbg !5692
  call void @llvm.dbg.value(metadata i8 %288, metadata !5421, metadata !DIExpression()), !dbg !5492
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5699
  %292 = add i32 %291, -1, !dbg !5699
  br label %293, !dbg !5699

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5700
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5482
  call void @llvm.dbg.value(metadata i32 %295, metadata !5358, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i32 %294, metadata !5417, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i32 %294, metadata !5417, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5492
  %296 = icmp sgt i32 %294, 0, !dbg !5701
  br i1 %296, label %297, label %302, !dbg !5699

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5702
  call void @llvm.dbg.value(metadata i32 %298, metadata !5417, metadata !DIExpression()), !dbg !5492
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !5703
  call void @llvm.dbg.value(metadata i32 %299, metadata !5452, metadata !DIExpression()), !dbg !5704
  %300 = icmp slt i32 %299, 0, !dbg !5705
  %301 = add i32 %295, 1, !dbg !5703
  call void @llvm.dbg.value(metadata i32 undef, metadata !5358, metadata !DIExpression()), !dbg !5478
  br i1 %300, label %361, label %293, !llvm.loop !5707

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5492
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5492
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5482
  call void @llvm.dbg.value(metadata i32 %305, metadata !5358, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i32 %304, metadata !5417, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i8 %303, metadata !5421, metadata !DIExpression()), !dbg !5492
  %306 = icmp eq i8 %303, 0, !dbg !5709
  br i1 %306, label %312, label %307, !dbg !5710

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5711
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !5712
  call void @llvm.dbg.value(metadata i32 %309, metadata !5455, metadata !DIExpression()), !dbg !5713
  %310 = icmp slt i32 %309, 0, !dbg !5714
  %311 = add i32 %305, 1, !dbg !5712
  call void @llvm.dbg.value(metadata i32 undef, metadata !5358, metadata !DIExpression()), !dbg !5478
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5482
  call void @llvm.dbg.value(metadata i32 %313, metadata !5358, metadata !DIExpression()), !dbg !5478
  %314 = lshr i24 %246, 20, !dbg !5716
  %315 = lshr i24 %246, 19, !dbg !5717
  %316 = or i24 %314, %315, !dbg !5718
  %317 = and i24 %316, 1, !dbg !5718
  %318 = icmp eq i24 %317, 0, !dbg !5718
  br i1 %318, label %323, label %319, !dbg !5719

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5720
  call void @llvm.dbg.value(metadata i32 %320, metadata !5459, metadata !DIExpression()), !dbg !5721
  %321 = icmp slt i32 %320, 0, !dbg !5722
  %322 = add i32 %313, 1, !dbg !5720
  call void @llvm.dbg.value(metadata i32 undef, metadata !5358, metadata !DIExpression()), !dbg !5478
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5482
  call void @llvm.dbg.value(metadata i32 %324, metadata !5358, metadata !DIExpression()), !dbg !5478
  %325 = and i24 %246, 1048576, !dbg !5724
  %326 = icmp eq i24 %325, 0, !dbg !5724
  br i1 %326, label %333, label %327, !dbg !5725

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5726
  %329 = zext i8 %328 to i32, !dbg !5726
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !5726
  call void @llvm.dbg.value(metadata i32 %330, metadata !5465, metadata !DIExpression()), !dbg !5727
  %331 = icmp slt i32 %330, 0, !dbg !5728
  %332 = add i32 %324, 1, !dbg !5726
  call void @llvm.dbg.value(metadata i32 undef, metadata !5358, metadata !DIExpression()), !dbg !5478
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5482
  call void @llvm.dbg.value(metadata i32 %334, metadata !5358, metadata !DIExpression()), !dbg !5478
  %335 = load i32, i32* %16, align 4, !dbg !5730
  call void @llvm.dbg.value(metadata i32 %335, metadata !5440, metadata !DIExpression()), !dbg !5492
  br label %336, !dbg !5731

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5732
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5482
  call void @llvm.dbg.value(metadata i32 %338, metadata !5358, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i32 %337, metadata !5440, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5492
  %339 = icmp sgt i32 %337, 0, !dbg !5733
  br i1 %339, label %340, label %345, !dbg !5731

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5734
  call void @llvm.dbg.value(metadata i32 %341, metadata !5440, metadata !DIExpression()), !dbg !5492
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5735
  call void @llvm.dbg.value(metadata i32 %342, metadata !5469, metadata !DIExpression()), !dbg !5736
  %343 = icmp slt i32 %342, 0, !dbg !5737
  %344 = add i32 %338, 1, !dbg !5735
  call void @llvm.dbg.value(metadata i32 undef, metadata !5358, metadata !DIExpression()), !dbg !5478
  br i1 %343, label %361, label %336, !llvm.loop !5739

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !5741
  call void @llvm.dbg.value(metadata i32 %346, metadata !5472, metadata !DIExpression()), !dbg !5742
  %347 = icmp slt i32 %346, 0, !dbg !5743
  call void @llvm.dbg.value(metadata i32 undef, metadata !5358, metadata !DIExpression()), !dbg !5478
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5741
  call void @llvm.dbg.value(metadata i32 %349, metadata !5358, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i32 %304, metadata !5417, metadata !DIExpression()), !dbg !5492
  %350 = icmp sgt i32 %304, 0, !dbg !5745
  br i1 %350, label %351, label %363, !dbg !5746

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5746
  %353 = add i32 %352, %338, !dbg !5746
  br label %354, !dbg !5746

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5358, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i32 %355, metadata !5417, metadata !DIExpression()), !dbg !5492
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5747
  call void @llvm.dbg.value(metadata i32 %356, metadata !5474, metadata !DIExpression()), !dbg !5748
  %357 = icmp slt i32 %356, 0, !dbg !5749
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5751
  call void @llvm.dbg.value(metadata i32 undef, metadata !5358, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5478
  call void @llvm.dbg.value(metadata i32 %359, metadata !5417, metadata !DIExpression()), !dbg !5492
  %360 = icmp sgt i32 %355, 1, !dbg !5745
  br i1 %360, label %354, label %363, !dbg !5746, !llvm.loop !5752

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5358, metadata !DIExpression()), !dbg !5478
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5489
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5482
  call void @llvm.dbg.value(metadata i32 %364, metadata !5358, metadata !DIExpression()), !dbg !5478
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5489
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5478
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5754
  ret i32 %366, !dbg !5754
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5755 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5759, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i8* %1, metadata !5760, metadata !DIExpression()), !dbg !5761
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5762
  store i24 0, i24* %3, align 4, !dbg !5762
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5762
  store i8 0, i8* %4, align 1, !dbg !5762
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5762
  store i32 0, i32* %5, align 4, !dbg !5762
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5762
  store i32 0, i32* %6, align 4, !dbg !5762
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5763
  call void @llvm.dbg.value(metadata i8* %7, metadata !5760, metadata !DIExpression()), !dbg !5761
  %8 = load i8, i8* %7, align 1, !dbg !5764
  %9 = icmp eq i8 %8, 37, !dbg !5766
  br i1 %9, label %10, label %12, !dbg !5767

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5768
  call void @llvm.dbg.value(metadata i8* %11, metadata !5760, metadata !DIExpression()), !dbg !5761
  store i8 37, i8* %4, align 1, !dbg !5770
  br label %18, !dbg !5771

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5772
  call void @llvm.dbg.value(metadata i8* %13, metadata !5760, metadata !DIExpression()), !dbg !5761
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5773
  call void @llvm.dbg.value(metadata i8* %14, metadata !5760, metadata !DIExpression()), !dbg !5761
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5774
  call void @llvm.dbg.value(metadata i8* %15, metadata !5760, metadata !DIExpression()), !dbg !5761
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5775
  call void @llvm.dbg.value(metadata i8* %16, metadata !5760, metadata !DIExpression()), !dbg !5761
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5776
  call void @llvm.dbg.value(metadata i8* %17, metadata !5760, metadata !DIExpression()), !dbg !5761
  br label %18, !dbg !5777

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5761
  ret i8* %19, !dbg !5778
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5779 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5783, metadata !DIExpression()), !dbg !5790
  call void @llvm.dbg.value(metadata i8* %1, metadata !5784, metadata !DIExpression()), !dbg !5790
  call void @llvm.dbg.value(metadata i8* %2, metadata !5785, metadata !DIExpression()), !dbg !5790
  call void @llvm.dbg.value(metadata i8* %3, metadata !5786, metadata !DIExpression()), !dbg !5790
  call void @llvm.dbg.value(metadata i32 0, metadata !5787, metadata !DIExpression()), !dbg !5790
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5791

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5792
  call void @llvm.dbg.value(metadata i32 %9, metadata !5787, metadata !DIExpression()), !dbg !5790
  call void @llvm.dbg.value(metadata i8* %8, metadata !5785, metadata !DIExpression()), !dbg !5790
  %10 = icmp ult i8* %8, %3, !dbg !5793
  br i1 %10, label %11, label %13, !dbg !5794

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5795
  br label %17, !dbg !5794

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5796

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5797
  %16 = icmp eq i8 %15, 0, !dbg !5796
  br i1 %16, label %24, label %17, !dbg !5791

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5795
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5798
  call void @llvm.dbg.value(metadata i8* %19, metadata !5785, metadata !DIExpression()), !dbg !5790
  %20 = zext i8 %18 to i32, !dbg !5799
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5800
  call void @llvm.dbg.value(metadata i32 %21, metadata !5788, metadata !DIExpression()), !dbg !5801
  %22 = icmp slt i32 %21, 0, !dbg !5802
  %23 = add i32 %9, 1, !dbg !5804
  call void @llvm.dbg.value(metadata i32 undef, metadata !5787, metadata !DIExpression()), !dbg !5790
  br i1 %22, label %24, label %7, !llvm.loop !5805

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5790
  ret i32 %25, !dbg !5807
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5808 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5812, metadata !DIExpression()), !dbg !5822
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5813, metadata !DIExpression()), !dbg !5822
  call void @llvm.dbg.value(metadata i8* %2, metadata !5814, metadata !DIExpression()), !dbg !5822
  call void @llvm.dbg.value(metadata i8* %3, metadata !5815, metadata !DIExpression()), !dbg !5822
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5823
  %6 = load i8, i8* %5, align 1, !dbg !5823
  %7 = zext i8 %6 to i32, !dbg !5824
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5825
  %9 = icmp eq i32 %8, 0, !dbg !5825
  call void @llvm.dbg.value(metadata i1 %9, metadata !5816, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5822
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5826
  call void @llvm.dbg.value(metadata i32 %10, metadata !5817, metadata !DIExpression()), !dbg !5822
  %11 = ptrtoint i8* %3 to i32, !dbg !5827
  %12 = ptrtoint i8* %2 to i32, !dbg !5827
  %13 = sub i32 %11, %12, !dbg !5827
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5828
  call void @llvm.dbg.value(metadata i8* %14, metadata !5819, metadata !DIExpression()), !dbg !5822
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5829

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5822
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5812, metadata !DIExpression()), !dbg !5822
  call void @llvm.dbg.value(metadata i8* %18, metadata !5819, metadata !DIExpression()), !dbg !5822
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5830
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5831
  call void @llvm.dbg.value(metadata i32 %25, metadata !5820, metadata !DIExpression()), !dbg !5832
  %26 = icmp ult i32 %25, 10, !dbg !5833
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5834
  %28 = add i32 %27, %25, !dbg !5832
  %29 = trunc i32 %28 to i8, !dbg !5834
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5835
  call void @llvm.dbg.value(metadata i8* %30, metadata !5819, metadata !DIExpression()), !dbg !5822
  store i8 %29, i8* %30, align 1, !dbg !5836
  call void @llvm.dbg.value(metadata i64 %22, metadata !5812, metadata !DIExpression()), !dbg !5822
  %31 = icmp uge i64 %19, %15, !dbg !5837
  %32 = icmp ugt i8* %30, %2, !dbg !5838
  %33 = and i1 %31, %32, !dbg !5838
  br i1 %33, label %17, label %34, !dbg !5839, !llvm.loop !5840

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5842
  %36 = load i24, i24* %35, align 4, !dbg !5842
  %37 = and i24 %36, 32, !dbg !5842
  %38 = icmp eq i24 %37, 0, !dbg !5842
  br i1 %38, label %44, label %39, !dbg !5844

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5845

40:                                               ; preds = %39
  br label %41, !dbg !5847

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5851
  store i24 %43, i24* %35, align 4, !dbg !5851
  br label %44, !dbg !5852

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #11 !dbg !5853 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5859, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i8* %1, metadata !5860, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i32 %2, metadata !5861, metadata !DIExpression()), !dbg !5862
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5863
  %5 = load i24, i24* %4, align 4, !dbg !5863
  %6 = lshr i24 %5, 11, !dbg !5863
  %7 = and i24 %6, 15, !dbg !5863
  %8 = zext i24 %7 to i32, !dbg !5863
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5864

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5865
  store i32 %2, i32* %10, align 4, !dbg !5867
  br label %28, !dbg !5868

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5869
  store i8 %12, i8* %1, align 1, !dbg !5870
  br label %28, !dbg !5871

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5872
  %15 = bitcast i8* %1 to i16*, !dbg !5873
  store i16 %14, i16* %15, align 2, !dbg !5874
  br label %28, !dbg !5875

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5876
  store i32 %2, i32* %17, align 4, !dbg !5877
  br label %28, !dbg !5878

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5879
  %20 = bitcast i8* %1 to i64*, !dbg !5880
  store i64 %19, i64* %20, align 8, !dbg !5881
  br label %28, !dbg !5882

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5883
  %23 = bitcast i8* %1 to i64*, !dbg !5884
  store i64 %22, i64* %23, align 8, !dbg !5885
  br label %28, !dbg !5886

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5887
  store i32 %2, i32* %25, align 4, !dbg !5888
  br label %28, !dbg !5889

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5890
  store i32 %2, i32* %27, align 4, !dbg !5891
  br label %28, !dbg !5892

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5893
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !5894 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5897, metadata !DIExpression()), !dbg !5898
  %2 = add i32 %0, -65, !dbg !5899
  %3 = icmp ult i32 %2, 26, !dbg !5900
  %4 = zext i1 %3 to i32, !dbg !5900
  ret i32 %4, !dbg !5901
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !5902 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5906, metadata !DIExpression()), !dbg !5907
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5908

2:                                                ; preds = %1
  br label %4, !dbg !5909

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5911

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5912
  ret i32 %5, !dbg !5913
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5914 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5916, metadata !DIExpression()), !dbg !5919
  call void @llvm.dbg.value(metadata i8* %1, metadata !5917, metadata !DIExpression()), !dbg !5919
  call void @llvm.dbg.value(metadata i8 1, metadata !5918, metadata !DIExpression()), !dbg !5919
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5920

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5918, metadata !DIExpression()), !dbg !5919
  call void @llvm.dbg.value(metadata i8* %5, metadata !5917, metadata !DIExpression()), !dbg !5919
  %6 = load i8, i8* %5, align 1, !dbg !5921
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5923

7:                                                ; preds = %4
  br label %11, !dbg !5924

8:                                                ; preds = %4
  br label %11, !dbg !5926

9:                                                ; preds = %4
  br label %11, !dbg !5927

10:                                               ; preds = %4
  br label %11, !dbg !5928

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5929
  %14 = or i24 %13, %12, !dbg !5929
  store i24 %14, i24* %3, align 4, !dbg !5929
  call void @llvm.dbg.value(metadata i8 poison, metadata !5918, metadata !DIExpression()), !dbg !5919
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5917, metadata !DIExpression()), !dbg !5919
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5918, metadata !DIExpression()), !dbg !5919
  call void @llvm.dbg.value(metadata i8* %15, metadata !5917, metadata !DIExpression()), !dbg !5919
  %17 = load i24, i24* %3, align 4, !dbg !5930
  %18 = and i24 %17, 68, !dbg !5932
  %19 = icmp eq i24 %18, 68, !dbg !5932
  br i1 %19, label %20, label %22, !dbg !5932

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5933
  store i24 %21, i24* %3, align 4, !dbg !5933
  br label %22, !dbg !5935

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5936
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5937 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5939, metadata !DIExpression()), !dbg !5943
  call void @llvm.dbg.value(metadata i8* %1, metadata !5940, metadata !DIExpression()), !dbg !5943
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5944
  %5 = load i24, i24* %4, align 4, !dbg !5945
  %6 = or i24 %5, 128, !dbg !5945
  store i24 %6, i24* %4, align 4, !dbg !5945
  call void @llvm.dbg.value(metadata i8* %1, metadata !5940, metadata !DIExpression()), !dbg !5943
  %7 = load i8, i8* %1, align 1, !dbg !5946
  %8 = icmp eq i8 %7, 42, !dbg !5948
  br i1 %8, label %9, label %12, !dbg !5949

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5950
  store i24 %10, i24* %4, align 4, !dbg !5950
  call void @llvm.dbg.value(metadata i8* %1, metadata !5940, metadata !DIExpression()), !dbg !5943
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5952
  call void @llvm.dbg.value(metadata i8* %11, metadata !5940, metadata !DIExpression()), !dbg !5943
  store i8* %11, i8** %3, align 4, !dbg !5952
  br label %29, !dbg !5953

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5941, metadata !DIExpression()), !dbg !5943
  call void @llvm.dbg.value(metadata i8** %3, metadata !5940, metadata !DIExpression(DW_OP_deref)), !dbg !5943
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5954
  call void @llvm.dbg.value(metadata i32 %13, metadata !5942, metadata !DIExpression()), !dbg !5943
  %14 = load i8*, i8** %3, align 4, !dbg !5955
  call void @llvm.dbg.value(metadata i8* %14, metadata !5940, metadata !DIExpression()), !dbg !5943
  %15 = icmp eq i8* %14, %1, !dbg !5957
  br i1 %15, label %29, label %16, !dbg !5958

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5959
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5961
  store i32 %13, i32* %18, align 4, !dbg !5962
  %19 = lshr i32 %13, 31, !dbg !5963
  %20 = lshr i24 %17, 1, !dbg !5964
  %21 = and i24 %20, 1, !dbg !5964
  %22 = zext i24 %21 to i32, !dbg !5964
  %23 = or i32 %19, %22, !dbg !5964
  %24 = trunc i32 %23 to i24, !dbg !5964
  %25 = shl nuw nsw i24 %24, 1, !dbg !5964
  %26 = and i24 %17, -131, !dbg !5964
  %27 = or i24 %26, 128, !dbg !5964
  %28 = or i24 %25, %27, !dbg !5964
  store i24 %28, i24* %4, align 4, !dbg !5964
  br label %29, !dbg !5965

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5943
  ret i8* %30, !dbg !5966
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5967 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5969, metadata !DIExpression()), !dbg !5972
  call void @llvm.dbg.value(metadata i8* %1, metadata !5970, metadata !DIExpression()), !dbg !5972
  %4 = load i8, i8* %1, align 1, !dbg !5973
  %5 = icmp eq i8 %4, 46, !dbg !5974
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5975
  %7 = load i24, i24* %6, align 4, !dbg !5976
  %8 = select i1 %5, i24 512, i24 0, !dbg !5976
  %9 = and i24 %7, -513, !dbg !5976
  %10 = or i24 %9, %8, !dbg !5976
  store i24 %10, i24* %6, align 4, !dbg !5976
  br i1 %5, label %11, label %32, !dbg !5977

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5970, metadata !DIExpression()), !dbg !5972
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5978
  call void @llvm.dbg.value(metadata i8* %12, metadata !5970, metadata !DIExpression()), !dbg !5972
  store i8* %12, i8** %3, align 4, !dbg !5978
  %13 = load i8, i8* %12, align 1, !dbg !5979
  %14 = icmp eq i8 %13, 42, !dbg !5981
  br i1 %14, label %15, label %18, !dbg !5982

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5983
  store i24 %16, i24* %6, align 4, !dbg !5983
  call void @llvm.dbg.value(metadata i8* %12, metadata !5970, metadata !DIExpression()), !dbg !5972
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5985
  call void @llvm.dbg.value(metadata i8* %17, metadata !5970, metadata !DIExpression()), !dbg !5972
  store i8* %17, i8** %3, align 4, !dbg !5985
  br label %32, !dbg !5986

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5970, metadata !DIExpression(DW_OP_deref)), !dbg !5972
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5987
  call void @llvm.dbg.value(metadata i32 %19, metadata !5971, metadata !DIExpression()), !dbg !5972
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5988
  store i32 %19, i32* %20, align 4, !dbg !5989
  %21 = lshr i32 %19, 31, !dbg !5990
  %22 = load i24, i24* %6, align 4, !dbg !5991
  %23 = lshr i24 %22, 1, !dbg !5991
  %24 = and i24 %23, 1, !dbg !5991
  %25 = zext i24 %24 to i32, !dbg !5991
  %26 = or i32 %21, %25, !dbg !5991
  %27 = trunc i32 %26 to i24, !dbg !5991
  %28 = shl nuw nsw i24 %27, 1, !dbg !5991
  %29 = and i24 %22, -3, !dbg !5991
  %30 = or i24 %28, %29, !dbg !5991
  store i24 %30, i24* %6, align 4, !dbg !5991
  %31 = load i8*, i8** %3, align 4, !dbg !5992
  call void @llvm.dbg.value(metadata i8* %31, metadata !5970, metadata !DIExpression()), !dbg !5972
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5972
  ret i8* %33, !dbg !5993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !5994 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5996, metadata !DIExpression()), !dbg !5998
  call void @llvm.dbg.value(metadata i8* %1, metadata !5997, metadata !DIExpression()), !dbg !5998
  %3 = load i8, i8* %1, align 1, !dbg !5999
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6000

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6001
  call void @llvm.dbg.value(metadata i8* %5, metadata !5997, metadata !DIExpression()), !dbg !5998
  %6 = load i8, i8* %5, align 1, !dbg !6004
  %7 = icmp eq i8 %6, 104, !dbg !6005
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6006
  %9 = load i24, i24* %8, align 4, !dbg !6006
  %10 = and i24 %9, -30721, !dbg !6006
  br i1 %7, label %11, label %14, !dbg !6007

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6008
  store i24 %12, i24* %8, align 4, !dbg !6008
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6010
  call void @llvm.dbg.value(metadata i8* %13, metadata !5997, metadata !DIExpression()), !dbg !5998
  br label %56, !dbg !6011

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6012
  store i24 %15, i24* %8, align 4, !dbg !6012
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6014
  call void @llvm.dbg.value(metadata i8* %17, metadata !5997, metadata !DIExpression()), !dbg !5998
  %18 = load i8, i8* %17, align 1, !dbg !6016
  %19 = icmp eq i8 %18, 108, !dbg !6017
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6018
  %21 = load i24, i24* %20, align 4, !dbg !6018
  %22 = and i24 %21, -30721, !dbg !6018
  br i1 %19, label %23, label %26, !dbg !6019

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6020
  store i24 %24, i24* %20, align 4, !dbg !6020
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6022
  call void @llvm.dbg.value(metadata i8* %25, metadata !5997, metadata !DIExpression()), !dbg !5998
  br label %56, !dbg !6023

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6024
  store i24 %27, i24* %20, align 4, !dbg !6024
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6026
  %30 = load i24, i24* %29, align 4, !dbg !6027
  %31 = and i24 %30, -30721, !dbg !6027
  %32 = or i24 %31, 10240, !dbg !6027
  store i24 %32, i24* %29, align 4, !dbg !6027
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6028
  call void @llvm.dbg.value(metadata i8* %33, metadata !5997, metadata !DIExpression()), !dbg !5998
  br label %56, !dbg !6029

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6030
  %36 = load i24, i24* %35, align 4, !dbg !6031
  %37 = and i24 %36, -30721, !dbg !6031
  %38 = or i24 %37, 12288, !dbg !6031
  store i24 %38, i24* %35, align 4, !dbg !6031
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6032
  call void @llvm.dbg.value(metadata i8* %39, metadata !5997, metadata !DIExpression()), !dbg !5998
  br label %56, !dbg !6033

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6034
  %42 = load i24, i24* %41, align 4, !dbg !6035
  %43 = and i24 %42, -30721, !dbg !6035
  %44 = or i24 %43, 14336, !dbg !6035
  store i24 %44, i24* %41, align 4, !dbg !6035
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6036
  call void @llvm.dbg.value(metadata i8* %45, metadata !5997, metadata !DIExpression()), !dbg !5998
  br label %56, !dbg !6037

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6038
  %48 = load i24, i24* %47, align 4, !dbg !6039
  %49 = and i24 %48, -30723, !dbg !6039
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6040
  call void @llvm.dbg.value(metadata i8* %50, metadata !5997, metadata !DIExpression()), !dbg !5998
  %51 = or i24 %49, 16386, !dbg !6041
  store i24 %51, i24* %47, align 4, !dbg !6041
  br label %56, !dbg !6042

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6043
  %54 = load i24, i24* %53, align 4, !dbg !6044
  %55 = and i24 %54, -30721, !dbg !6044
  store i24 %55, i24* %53, align 4, !dbg !6044
  br label %56, !dbg !6045

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5997, metadata !DIExpression()), !dbg !5998
  ret i8* %57, !dbg !6046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6047 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6049, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata i8* %1, metadata !6050, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata i8 0, metadata !6051, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata i8* %1, metadata !6050, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6054
  %3 = load i8, i8* %1, align 1, !dbg !6055
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6056
  store i8 %3, i8* %4, align 1, !dbg !6057
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6058

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6059

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6060
  %9 = load i24, i24* %8, align 4, !dbg !6060
  %10 = and i24 %9, -458753, !dbg !6060
  %11 = or i24 %10, %7, !dbg !6060
  call void @llvm.dbg.label(metadata !6052), !dbg !6061
  %12 = and i24 %9, 30720, !dbg !6062
  %13 = icmp eq i24 %12, 16384, !dbg !6062
  %14 = zext i1 %13 to i24, !dbg !6064
  %15 = or i24 %11, %14, !dbg !6064
  %16 = icmp eq i8 %3, 99, !dbg !6065
  br i1 %16, label %17, label %43, !dbg !6067

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6068
  %19 = icmp ne i24 %18, 0, !dbg !6068
  call void @llvm.dbg.value(metadata i1 %19, metadata !6051, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6054
  br label %43, !dbg !6070

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6071
  %22 = load i24, i24* %21, align 4, !dbg !6072
  %23 = and i24 %22, -458753, !dbg !6072
  %24 = or i24 %23, 262144, !dbg !6072
  call void @llvm.dbg.value(metadata i8 1, metadata !6051, metadata !DIExpression()), !dbg !6054
  br label %43, !dbg !6073

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6076
  %27 = load i24, i24* %26, align 4, !dbg !6077
  %28 = and i24 %27, -458753, !dbg !6077
  %29 = or i24 %28, 196608, !dbg !6077
  %30 = and i24 %27, 30720, !dbg !6078
  %31 = icmp eq i24 %30, 16384, !dbg !6078
  br label %43, !dbg !6080

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6081
  %34 = load i24, i24* %33, align 4, !dbg !6082
  %35 = and i24 %34, -458753, !dbg !6082
  %36 = or i24 %35, 196608, !dbg !6082
  %37 = and i24 %34, 30720, !dbg !6083
  %38 = icmp ne i24 %37, 0, !dbg !6083
  br label %43, !dbg !6085

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6086
  %41 = load i24, i24* %40, align 4, !dbg !6087
  %42 = or i24 %41, 1, !dbg !6087
  br label %43, !dbg !6088

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6089
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6090
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6091
  call void @llvm.dbg.value(metadata i8* %48, metadata !6050, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata i8 poison, metadata !6051, metadata !DIExpression()), !dbg !6054
  %49 = lshr i24 %44, 1, !dbg !6089
  %50 = and i24 %49, 1, !dbg !6089
  %51 = zext i24 %50 to i32, !dbg !6089
  %52 = or i32 %51, %47, !dbg !6089
  %53 = trunc i32 %52 to i24, !dbg !6089
  %54 = shl nuw nsw i24 %53, 1, !dbg !6089
  %55 = and i24 %44, -3, !dbg !6089
  %56 = or i24 %54, %55, !dbg !6089
  store i24 %56, i24* %46, align 4, !dbg !6089
  ret i8* %48, !dbg !6092
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !6093 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6097, metadata !DIExpression()), !dbg !6100
  %2 = load i8*, i8** %0, align 4, !dbg !6101
  call void @llvm.dbg.value(metadata i8* %2, metadata !6098, metadata !DIExpression()), !dbg !6100
  call void @llvm.dbg.value(metadata i32 0, metadata !6099, metadata !DIExpression()), !dbg !6100
  %3 = load i8, i8* %2, align 1, !dbg !6102
  %4 = zext i8 %3 to i32, !dbg !6103
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !6104
  %6 = icmp eq i32 %5, 0, !dbg !6105
  br i1 %6, label %19, label %7, !dbg !6105

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6099, metadata !DIExpression()), !dbg !6100
  call void @llvm.dbg.value(metadata i8* %10, metadata !6098, metadata !DIExpression()), !dbg !6100
  %11 = mul i32 %9, 10, !dbg !6106
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6108
  call void @llvm.dbg.value(metadata i8* %12, metadata !6098, metadata !DIExpression()), !dbg !6100
  %13 = add i32 %11, -48, !dbg !6109
  %14 = add i32 %13, %8, !dbg !6110
  call void @llvm.dbg.value(metadata i32 %14, metadata !6099, metadata !DIExpression()), !dbg !6100
  %15 = load i8, i8* %12, align 1, !dbg !6102
  %16 = zext i8 %15 to i32, !dbg !6103
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !6104
  %18 = icmp eq i32 %17, 0, !dbg !6105
  br i1 %18, label %19, label %7, !dbg !6105, !llvm.loop !6111

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6100
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6100
  store i8* %20, i8** %0, align 4, !dbg !6113
  ret i32 %21, !dbg !6114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !6115 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6117, metadata !DIExpression()), !dbg !6118
  %2 = add i32 %0, -48, !dbg !6119
  %3 = icmp ult i32 %2, 10, !dbg !6120
  %4 = zext i1 %3 to i32, !dbg !6120
  ret i32 %4, !dbg !6121
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6122 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !6124, !srcloc !6125
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !6126, !srcloc !6127
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !6128, !srcloc !6129
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !6130, !srcloc !6131
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !6132, !srcloc !6133
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,85\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !6134, !srcloc !6135
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !6136, !srcloc !6137
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !6138, !srcloc !6139
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !6140, !srcloc !6141
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !6142, !srcloc !6143
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !6144, !srcloc !6145
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !6146, !srcloc !6147
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !6148, !srcloc !6149
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !6150, !srcloc !6151
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !6152, !srcloc !6153
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !6154, !srcloc !6155
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !6156, !srcloc !6157
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !6158, !srcloc !6159
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !6160, !srcloc !6161
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !6162, !srcloc !6163
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !6164, !srcloc !6165
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !6166, !srcloc !6167
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !6168, !srcloc !6169
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !6170, !srcloc !6171
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !6172, !srcloc !6173
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !6174, !srcloc !6175
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !6176, !srcloc !6177
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !6178, !srcloc !6179
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !6180, !srcloc !6181
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !6182, !srcloc !6183
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,%object", ""() #23, !dbg !6184, !srcloc !6185
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !6186, !srcloc !6187
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !6188, !srcloc !6189
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #23, !dbg !6190, !srcloc !6191
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !6192, !srcloc !6193
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !6194, !srcloc !6195
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !6196, !srcloc !6197
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !6198, !srcloc !6199
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !6200, !srcloc !6201
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !6202, !srcloc !6203
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !6204, !srcloc !6205
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !6206, !srcloc !6207
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #23, !dbg !6208, !srcloc !6209
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !6210, !srcloc !6211
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !6212, !srcloc !6213
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !6214, !srcloc !6215
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !6216, !srcloc !6217
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !6218, !srcloc !6219
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !6220, !srcloc !6221
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !6222, !srcloc !6223
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !6224, !srcloc !6225
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !6226, !srcloc !6227
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_VND_SENSOR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_VND_SENSOR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_VND_SENSOR_ENABLED,%object", ""() #23, !dbg !6228, !srcloc !6229
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED,%object", ""() #23, !dbg !6230, !srcloc !6231
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !6232, !srcloc !6233
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !6234, !srcloc !6235
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !6236, !srcloc !6237
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !6238, !srcloc !6239
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !6240, !srcloc !6241
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !6242, !srcloc !6243
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !6244, !srcloc !6245
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !6246, !srcloc !6247
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !6248, !srcloc !6249
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !6250, !srcloc !6251
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !6252, !srcloc !6253
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !6254, !srcloc !6255
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !6256, !srcloc !6257
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !6258, !srcloc !6259
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !6260, !srcloc !6261
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !6262, !srcloc !6263
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !6264, !srcloc !6265
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !6266, !srcloc !6267
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !6268, !srcloc !6269
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !6270, !srcloc !6271
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !6272, !srcloc !6273
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !6274, !srcloc !6275
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !6276, !srcloc !6277
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !6278, !srcloc !6279
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !6280, !srcloc !6281
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !6282, !srcloc !6283
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !6284, !srcloc !6285
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !6286, !srcloc !6287
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !6288, !srcloc !6289
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !6290, !srcloc !6291
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !6292, !srcloc !6293
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !6294, !srcloc !6295
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !6296, !srcloc !6297
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !6298, !srcloc !6299
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !6300, !srcloc !6301
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_CARBON\0A\09.equ\09CONFIG_BOARD_96B_CARBON,1\0A\09.type\09CONFIG_BOARD_96B_CARBON,%object", ""() #23, !dbg !6302, !srcloc !6303
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !6304, !srcloc !6305
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !6306, !srcloc !6307
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !6308, !srcloc !6309
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !6310, !srcloc !6311
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !6312, !srcloc !6313
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F401XE\0A\09.equ\09CONFIG_SOC_STM32F401XE,1\0A\09.type\09CONFIG_SOC_STM32F401XE,%object", ""() #23, !dbg !6314, !srcloc !6315
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6316, !srcloc !6317
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !6318, !srcloc !6319
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !6320, !srcloc !6321
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !6322, !srcloc !6323
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !6324, !srcloc !6325
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !6326, !srcloc !6327
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !6328, !srcloc !6329
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !6330, !srcloc !6331
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !6332, !srcloc !6333
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !6334, !srcloc !6335
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !6336, !srcloc !6337
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !6338, !srcloc !6339
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !6340, !srcloc !6341
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !6342, !srcloc !6343
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !6344, !srcloc !6345
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !6346, !srcloc !6347
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !6348, !srcloc !6349
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !6350, !srcloc !6351
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !6352, !srcloc !6353
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !6354, !srcloc !6355
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !6356, !srcloc !6357
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !6358, !srcloc !6359
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !6360, !srcloc !6361
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !6362, !srcloc !6363
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !6364, !srcloc !6365
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !6366, !srcloc !6367
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !6368, !srcloc !6369
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !6370, !srcloc !6371
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !6372, !srcloc !6373
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !6374, !srcloc !6375
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !6376, !srcloc !6377
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !6378, !srcloc !6379
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !6380, !srcloc !6381
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,96\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !6382, !srcloc !6383
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !6384, !srcloc !6385
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !6386, !srcloc !6387
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !6388, !srcloc !6389
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !6390, !srcloc !6391
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !6392, !srcloc !6393
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !6394, !srcloc !6395
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !6396, !srcloc !6397
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !6398, !srcloc !6399
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !6400, !srcloc !6401
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !6402, !srcloc !6403
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !6404, !srcloc !6405
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !6406, !srcloc !6407
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !6408, !srcloc !6409
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !6410, !srcloc !6411
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !6412, !srcloc !6413
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !6414, !srcloc !6415
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !6416, !srcloc !6417
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !6418, !srcloc !6419
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !6420, !srcloc !6421
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !6422, !srcloc !6423
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !6424, !srcloc !6425
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !6426, !srcloc !6427
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6428, !srcloc !6429
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !6430, !srcloc !6431
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !6432, !srcloc !6433
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !6434, !srcloc !6435
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !6436, !srcloc !6437
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !6438, !srcloc !6439
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !6440, !srcloc !6441
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !6442, !srcloc !6443
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !6444, !srcloc !6445
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !6446, !srcloc !6447
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !6448, !srcloc !6449
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !6450, !srcloc !6451
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6452, !srcloc !6453
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !6454, !srcloc !6455
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !6456, !srcloc !6457
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !6458, !srcloc !6459
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !6460, !srcloc !6461
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !6462, !srcloc !6463
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !6464, !srcloc !6465
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !6466, !srcloc !6467
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !6468, !srcloc !6469
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !6470, !srcloc !6471
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !6472, !srcloc !6473
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !6474, !srcloc !6475
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !6476, !srcloc !6477
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !6478, !srcloc !6479
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !6480, !srcloc !6481
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !6482, !srcloc !6483
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !6484, !srcloc !6485
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !6486, !srcloc !6487
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !6488, !srcloc !6489
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !6490, !srcloc !6491
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !6492, !srcloc !6493
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !6494, !srcloc !6495
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !6496, !srcloc !6497
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !6498, !srcloc !6499
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !6500, !srcloc !6501
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !6502, !srcloc !6503
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !6504, !srcloc !6505
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !6506, !srcloc !6507
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !6508, !srcloc !6509
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !6510, !srcloc !6511
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !6512, !srcloc !6513
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !6514, !srcloc !6515
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !6516, !srcloc !6517
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !6518, !srcloc !6519
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !6520, !srcloc !6521
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !6522, !srcloc !6523
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !6524, !srcloc !6525
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !6526, !srcloc !6527
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6528, !srcloc !6529
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !6530, !srcloc !6531
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !6532, !srcloc !6533
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !6534, !srcloc !6535
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !6536, !srcloc !6537
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !6538, !srcloc !6539
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !6540, !srcloc !6541
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !6542, !srcloc !6543
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !6544, !srcloc !6545
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !6546, !srcloc !6547
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !6548, !srcloc !6549
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !6550, !srcloc !6551
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !6552, !srcloc !6553
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !6554, !srcloc !6555
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !6556, !srcloc !6557
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !6558, !srcloc !6559
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !6560, !srcloc !6561
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6562, !srcloc !6563
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !6564, !srcloc !6565
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !6566, !srcloc !6567
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !6568, !srcloc !6569
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !6570, !srcloc !6571
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !6572, !srcloc !6573
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !6574, !srcloc !6575
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !6576, !srcloc !6577
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !6578, !srcloc !6579
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !6580, !srcloc !6581
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !6582, !srcloc !6583
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !6584, !srcloc !6585
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !6586, !srcloc !6587
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !6588, !srcloc !6589
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !6590, !srcloc !6591
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !6592, !srcloc !6593
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !6594, !srcloc !6595
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !6596, !srcloc !6597
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !6598, !srcloc !6599
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !6600, !srcloc !6601
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !6602, !srcloc !6603
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !6604, !srcloc !6605
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !6606, !srcloc !6607
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6608, !srcloc !6609
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !6610, !srcloc !6611
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !6612, !srcloc !6613
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !6614, !srcloc !6615
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !6616, !srcloc !6617
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6618, !srcloc !6619
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !6620, !srcloc !6621
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !6622, !srcloc !6623
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !6624, !srcloc !6625
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6626, !srcloc !6627
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !6628, !srcloc !6629
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !6630, !srcloc !6631
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !6632, !srcloc !6633
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !6634, !srcloc !6635
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !6636, !srcloc !6637
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !6638, !srcloc !6639
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !6640, !srcloc !6641
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !6642, !srcloc !6643
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !6644, !srcloc !6645
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !6646, !srcloc !6647
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !6648, !srcloc !6649
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !6650, !srcloc !6651
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !6652, !srcloc !6653
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !6654, !srcloc !6655
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !6656, !srcloc !6657
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !6658, !srcloc !6659
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !6660, !srcloc !6661
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !6662, !srcloc !6663
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !6664, !srcloc !6665
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !6666, !srcloc !6667
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !6668, !srcloc !6669
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !6670, !srcloc !6671
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !6672, !srcloc !6673
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !6674, !srcloc !6675
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !6676, !srcloc !6677
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !6678, !srcloc !6679
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !6680, !srcloc !6681
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !6682, !srcloc !6683
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !6684, !srcloc !6685
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,4\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !6686, !srcloc !6687
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !6688, !srcloc !6689
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !6690, !srcloc !6691
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !6692, !srcloc !6693
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !6694, !srcloc !6695
  tail call void asm sideeffect ".globl\09CONFIG_RTIO\0A\09.equ\09CONFIG_RTIO,1\0A\09.type\09CONFIG_RTIO,%object", ""() #23, !dbg !6696, !srcloc !6697
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_EXECUTOR_SIMPLE\0A\09.equ\09CONFIG_RTIO_EXECUTOR_SIMPLE,1\0A\09.type\09CONFIG_RTIO_EXECUTOR_SIMPLE,%object", ""() #23, !dbg !6698, !srcloc !6699
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_EXECUTOR_CONCURRENT\0A\09.equ\09CONFIG_RTIO_EXECUTOR_CONCURRENT,1\0A\09.type\09CONFIG_RTIO_EXECUTOR_CONCURRENT,%object", ""() #23, !dbg !6700, !srcloc !6701
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_RTIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_RTIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !6702, !srcloc !6703
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_LOG_LEVEL\0A\09.equ\09CONFIG_RTIO_LOG_LEVEL,3\0A\09.type\09CONFIG_RTIO_LOG_LEVEL,%object", ""() #23, !dbg !6704, !srcloc !6705
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !6706, !srcloc !6707
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6708, !srcloc !6709
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !6710, !srcloc !6711
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6712, !srcloc !6713
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6714, !srcloc !6715
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !6716, !srcloc !6717
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !6718, !srcloc !6719
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !6720, !srcloc !6721
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !6722, !srcloc !6723
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !6724, !srcloc !6725
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !6726, !srcloc !6727
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !6728, !srcloc !6729
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !6730, !srcloc !6731
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !6732, !srcloc !6733
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !6734, !srcloc !6735
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !6736, !srcloc !6737
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !6738, !srcloc !6739
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !6740, !srcloc !6741
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !6742, !srcloc !6743
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !6744, !srcloc !6745
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !6746, !srcloc !6747
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !6748, !srcloc !6749
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !6750, !srcloc !6751
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !6752, !srcloc !6753
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !6754, !srcloc !6755
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !6756, !srcloc !6757
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !6758, !srcloc !6759
  ret void, !dbg !6760
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6761 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6763, metadata !DIExpression()), !dbg !6765
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !6766
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !6767
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !6768, !srcloc !6774
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6768
  call void @llvm.dbg.value(metadata i32 %3, metadata !6771, metadata !DIExpression()) #23, !dbg !6775
  call void @llvm.dbg.value(metadata i32 undef, metadata !6772, metadata !DIExpression()) #23, !dbg !6775
  call void @llvm.dbg.value(metadata i32 %3, metadata !6764, metadata !DIExpression()), !dbg !6765
  call void @llvm.dbg.value(metadata i32 %3, metadata !6776, metadata !DIExpression()) #23, !dbg !6779
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6781, !srcloc !6782
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6783
  ret i32 0, !dbg !6784
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6785 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6787
  %2 = or i32 %1, 512, !dbg !6787
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6787
  ret void, !dbg !6788
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6789 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6790
  %2 = or i32 %1, 1024, !dbg !6790
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6790
  ret void, !dbg !6791
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !6792 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6794, metadata !DIExpression()), !dbg !6795
  ret i32 0, !dbg !6796
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6797 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6800, metadata !DIExpression()), !dbg !6808
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6809
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6809
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6801, metadata !DIExpression()), !dbg !6810
  call void @llvm.va_start(i8* nonnull %3), !dbg !6811
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6812
  %5 = load i32, i32* %4, align 4, !dbg !6812
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6812
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6812
  call void @llvm.va_end(i8* nonnull %3), !dbg !6813
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6814
  ret void, !dbg !6814
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6815 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6820, metadata !DIExpression()), !dbg !6821
  call void @llvm.dbg.value(metadata i8* %0, metadata !6819, metadata !DIExpression()), !dbg !6821
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !6822
  ret void, !dbg !6823
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6824 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6828, metadata !DIExpression()), !dbg !6832
  call void @llvm.dbg.value(metadata i8* %1, metadata !6829, metadata !DIExpression()), !dbg !6832
  call void @llvm.dbg.value(metadata i32 %2, metadata !6830, metadata !DIExpression()), !dbg !6832
  call void @llvm.dbg.value(metadata i8* %1, metadata !6831, metadata !DIExpression()), !dbg !6832
  %4 = icmp eq i32 %2, 0, !dbg !6833
  br i1 %4, label %14, label %5, !dbg !6834

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.35(i32 noundef %0) #24, !dbg !6832
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6834

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6831, metadata !DIExpression()), !dbg !6832
  call void @llvm.dbg.value(metadata i32 %10, metadata !6830, metadata !DIExpression()), !dbg !6832
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0), i32 noundef %7) #25, !dbg !6835
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6837
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6838
  call void @llvm.dbg.value(metadata i32 %11, metadata !6830, metadata !DIExpression()), !dbg !6832
  call void @llvm.dbg.value(metadata i8* %12, metadata !6831, metadata !DIExpression()), !dbg !6832
  br i1 %13, label %14, label %8, !dbg !6838, !llvm.loop !6839

14:                                               ; preds = %8, %3
  ret void, !dbg !6841
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.35(i32 noundef %0) unnamed_addr #4 !dbg !6842 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6844, metadata !DIExpression()), !dbg !6845
  %2 = add i32 %0, -1, !dbg !6846
  %3 = icmp ult i32 %2, 4, !dbg !6846
  %4 = shl i32 %2, 3, !dbg !6846
  %5 = lshr i32 1145657157, %4, !dbg !6846
  %6 = trunc i32 %5 to i8, !dbg !6846
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6846
  ret i8 %7, !dbg !6847
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6848 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6852, metadata !DIExpression()), !dbg !6863
  call void @llvm.dbg.value(metadata i32 %1, metadata !6853, metadata !DIExpression()), !dbg !6863
  call void @llvm.dbg.value(metadata i32 0, metadata !6854, metadata !DIExpression()), !dbg !6864
  br label %4, !dbg !6865

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.37, i32 0, i32 0)) #25, !dbg !6866
  call void @llvm.dbg.value(metadata i32 0, metadata !6856, metadata !DIExpression()), !dbg !6867
  br label %16, !dbg !6868

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6854, metadata !DIExpression()), !dbg !6864
  %6 = icmp ult i32 %5, %1, !dbg !6869
  br i1 %6, label %7, label %11, !dbg !6873

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6874
  %9 = load i8, i8* %8, align 1, !dbg !6874
  %10 = zext i8 %9 to i32, !dbg !6876
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.38, i32 0, i32 0), i32 noundef %10) #25, !dbg !6877
  br label %12, !dbg !6878

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.39, i32 0, i32 0)) #25, !dbg !6879
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6881
  call void @llvm.dbg.value(metadata i32 %13, metadata !6854, metadata !DIExpression()), !dbg !6864
  %14 = icmp eq i32 %13, 8, !dbg !6882
  br i1 %14, label %3, label %4, !dbg !6865, !llvm.loop !6883

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.40, i32 0, i32 0)) #25, !dbg !6885
  ret void, !dbg !6886

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6856, metadata !DIExpression()), !dbg !6867
  %18 = icmp ult i32 %17, %1, !dbg !6887
  br i1 %18, label %19, label %26, !dbg !6888

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6889
  %21 = load i8, i8* %20, align 1, !dbg !6889
  call void @llvm.dbg.value(metadata i8 %21, metadata !6858, metadata !DIExpression()), !dbg !6890
  %22 = zext i8 %21 to i32, !dbg !6891
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6892
  %24 = icmp eq i32 %23, 0, !dbg !6893
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6892
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.41, i32 0, i32 0), i32 noundef %25) #25, !dbg !6894
  br label %27, !dbg !6895

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.42, i32 0, i32 0)) #25, !dbg !6896
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6898
  call void @llvm.dbg.value(metadata i32 %28, metadata !6856, metadata !DIExpression()), !dbg !6867
  %29 = icmp eq i32 %28, 8, !dbg !6899
  br i1 %29, label %15, label %16, !dbg !6868, !llvm.loop !6900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #4 !dbg !6902 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6904, metadata !DIExpression()), !dbg !6905
  %2 = add i32 %0, -32, !dbg !6906
  %3 = icmp ult i32 %2, 95, !dbg !6906
  %4 = zext i1 %3 to i32, !dbg !6906
  ret i32 %4, !dbg !6907
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6908 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6957, metadata !DIExpression()), !dbg !6959
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6958, metadata !DIExpression()), !dbg !6959
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6960
  br i1 %3, label %5, label %4, !dbg !6962

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6963
  br label %5, !dbg !6965

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6966
  ret void, !dbg !6967
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6968 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6972, metadata !DIExpression()), !dbg !6973
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6974
  %3 = load i32, i32* %2, align 4, !dbg !6974
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6974
  %5 = load i32, i32* %4, align 4, !dbg !6974
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6974
  %7 = load i32, i32* %6, align 4, !dbg !6974
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.43, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6974
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6979
  %9 = load i32, i32* %8, align 4, !dbg !6979
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6979
  %11 = load i32, i32* %10, align 4, !dbg !6979
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6979
  %13 = load i32, i32* %12, align 4, !dbg !6979
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.44, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6979
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6984
  %15 = load i32, i32* %14, align 4, !dbg !6984
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6984
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6989
  %17 = load i32, i32* %16, align 4, !dbg !6989
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.46, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6989
  ret void, !dbg !6994
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6995 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7012, metadata !DIExpression()), !dbg !7015
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7013, metadata !DIExpression()), !dbg !7015
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7016
  %4 = load i32, i32* %3, align 4, !dbg !7016
  call void @llvm.dbg.value(metadata i32 %4, metadata !7014, metadata !DIExpression()), !dbg !7015
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !7017
  ret void, !dbg !7018
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !7019 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7023, metadata !DIExpression()), !dbg !7026
  call void @llvm.dbg.value(metadata i8* %0, metadata !7024, metadata !DIExpression()), !dbg !7026
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7027
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !7027
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7025, metadata !DIExpression()), !dbg !7028
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7028
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7029
  %5 = bitcast i8* %4 to i32*, !dbg !7029
  %6 = load i32, i32* %5, align 4, !dbg !7029
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7030
  store i32 %6, i32* %7, align 4, !dbg !7031
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !7032
  unreachable, !dbg !7033
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7034 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7037, metadata !DIExpression()), !dbg !7038
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !7039
  ret void, !dbg !7040
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7041 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7045, metadata !DIExpression()), !dbg !7046
  %2 = icmp sgt i32 %0, -1, !dbg !7047
  br i1 %2, label %3, label %8, !dbg !7049

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7050, !srcloc !7052
  %4 = and i32 %0, 31, !dbg !7053
  %5 = shl nuw i32 1, %4, !dbg !7054
  %6 = lshr i32 %0, 5, !dbg !7055
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7056
  store volatile i32 %5, i32* %7, align 4, !dbg !7057
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7058, !srcloc !7059
  br label %8, !dbg !7060

8:                                                ; preds = %3, %1
  ret void, !dbg !7061
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7062 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7064, metadata !DIExpression()), !dbg !7065
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !7066
  ret void, !dbg !7067
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7068 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7070, metadata !DIExpression()), !dbg !7071
  %2 = icmp sgt i32 %0, -1, !dbg !7072
  br i1 %2, label %3, label %8, !dbg !7074

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7075
  %5 = shl nuw i32 1, %4, !dbg !7077
  %6 = lshr i32 %0, 5, !dbg !7078
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7079
  store volatile i32 %5, i32* %7, align 4, !dbg !7080
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7081, !srcloc !7085
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7086, !srcloc !7089
  br label %8, !dbg !7090

8:                                                ; preds = %3, %1
  ret void, !dbg !7091
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #5 !dbg !7092 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7096, metadata !DIExpression()), !dbg !7097
  %2 = lshr i32 %0, 5, !dbg !7098
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7099
  %4 = load volatile i32, i32* %3, align 4, !dbg !7099
  %5 = and i32 %0, 31, !dbg !7100
  %6 = shl nuw i32 1, %5, !dbg !7100
  %7 = and i32 %4, %6, !dbg !7101
  ret i32 %7, !dbg !7102
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !7103 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7107, metadata !DIExpression()), !dbg !7110
  call void @llvm.dbg.value(metadata i32 %1, metadata !7108, metadata !DIExpression()), !dbg !7110
  call void @llvm.dbg.value(metadata i32 %2, metadata !7109, metadata !DIExpression()), !dbg !7110
  %4 = add i32 %1, 1, !dbg !7111
  call void @llvm.dbg.value(metadata i32 %4, metadata !7108, metadata !DIExpression()), !dbg !7110
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !7114
  ret void, !dbg !7115
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !7116 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7120, metadata !DIExpression()), !dbg !7122
  call void @llvm.dbg.value(metadata i32 %1, metadata !7121, metadata !DIExpression()), !dbg !7122
  %3 = trunc i32 %1 to i8, !dbg !7123
  %4 = shl i8 %3, 4, !dbg !7123
  %5 = and i32 %0, 15, !dbg !7125
  %6 = add nsw i32 %5, -4, !dbg !7125
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7125
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7125
  %9 = icmp slt i32 %0, 0, !dbg !7125
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7125
  store volatile i8 %4, i8* %10, align 1, !dbg !7123
  ret void, !dbg !7126
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7127 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7129, metadata !DIExpression()), !dbg !7130
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !7131
  ret void, !dbg !7132
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7133 {
  tail call void @z_SysNmiOnReset() #25, !dbg !7135
  tail call void @z_arm_int_exit() #25, !dbg !7136
  ret void, !dbg !7137
}

; Function Attrs: optsize
declare !dbg !7138 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7139 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !7141 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !7143
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !7144
  tail call void @z_bss_zero() #25, !dbg !7145
  tail call void @z_data_copy() #25, !dbg !7146
  tail call void @z_arm_interrupt_init() #25, !dbg !7147
  tail call void @z_cstart() #27, !dbg !7148
  unreachable, !dbg !7148
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7149 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7150
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7151, !srcloc !7154
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7155, !srcloc !7158
  ret void, !dbg !7159
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7160 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7161
  %2 = and i32 %1, -15728641, !dbg !7161
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7161
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !7162, !srcloc !7169
  call void @llvm.dbg.value(metadata i32 %3, metadata !7167, metadata !DIExpression()) #23, !dbg !7170
  %4 = and i32 %3, -5, !dbg !7171
  call void @llvm.dbg.value(metadata i32 %4, metadata !7172, metadata !DIExpression()) #23, !dbg !7177
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !7179, !srcloc !7180
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7181, !srcloc !7158
  ret void, !dbg !7183
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7184 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7187, metadata !DIExpression()), !dbg !7188
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7189
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7190
  store i32 %0, i32* %3, align 4, !dbg !7191
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7192
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7193
  store i32 %4, i32* %5, align 4, !dbg !7194
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7195
  %7 = or i32 %6, 268435456, !dbg !7195
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7195
  call void @llvm.dbg.value(metadata i32 0, metadata !7196, metadata !DIExpression()) #23, !dbg !7199
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !7201, !srcloc !7202
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7203
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7204
  %10 = load i32, i32* %9, align 4, !dbg !7204
  ret i32 %10, !dbg !7205
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #6 !dbg !7206 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7316, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7317, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata i8* %2, metadata !7318, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7319, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata i8* %4, metadata !7320, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata i8* %5, metadata !7321, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata i8* %6, metadata !7322, metadata !DIExpression()), !dbg !7324
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7325
  call void @llvm.dbg.value(metadata i8* %8, metadata !7323, metadata !DIExpression()), !dbg !7324
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7326
  %10 = bitcast i8* %9 to i32*, !dbg !7326
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7327
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7328
  %12 = bitcast i8* %8 to i32*, !dbg !7329
  store i32 %11, i32* %12, align 4, !dbg !7330
  %13 = ptrtoint i8* %4 to i32, !dbg !7331
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7332
  %15 = bitcast i8* %14 to i32*, !dbg !7332
  store i32 %13, i32* %15, align 4, !dbg !7333
  %16 = ptrtoint i8* %5 to i32, !dbg !7334
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7335
  %18 = bitcast i8* %17 to i32*, !dbg !7335
  store i32 %16, i32* %18, align 4, !dbg !7336
  %19 = ptrtoint i8* %6 to i32, !dbg !7337
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7338
  %21 = bitcast i8* %20 to i32*, !dbg !7338
  store i32 %19, i32* %21, align 4, !dbg !7339
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7340
  %23 = bitcast i8* %22 to i32*, !dbg !7340
  store i32 16777216, i32* %23, align 4, !dbg !7341
  %24 = ptrtoint i8* %8 to i32, !dbg !7342
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7343
  store i32 %24, i32* %25, align 8, !dbg !7344
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7345
  store i32 0, i32* %26, align 4, !dbg !7346
  ret void, !dbg !7347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !7348 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7353, metadata !DIExpression()), !dbg !7359
  call void @llvm.dbg.value(metadata i32 %1, metadata !7354, metadata !DIExpression()), !dbg !7359
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7360
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7355, metadata !DIExpression()), !dbg !7359
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7361
  br i1 %4, label %19, label %5, !dbg !7363

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7358, metadata !DIExpression()), !dbg !7359
  %6 = icmp eq i32 %0, -22, !dbg !7364
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7364
  %8 = load i32, i32* %7, align 4, !dbg !7364
  br i1 %6, label %16, label %9, !dbg !7366

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7364
  %11 = icmp ule i32 %10, %0, !dbg !7364
  %12 = icmp ugt i32 %8, %0, !dbg !7364
  %13 = and i1 %12, %11, !dbg !7364
  %14 = icmp ugt i32 %8, %1, !dbg !7364
  %15 = and i1 %14, %13, !dbg !7364
  br i1 %15, label %18, label %19, !dbg !7364

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7364
  br i1 %17, label %18, label %19, !dbg !7366

18:                                               ; preds = %9, %16
  br label %19, !dbg !7367

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7359
  ret i32 %20, !dbg !7369
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !7370 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7374, metadata !DIExpression()), !dbg !7377
  call void @llvm.dbg.value(metadata i8* %1, metadata !7375, metadata !DIExpression()), !dbg !7377
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7376, metadata !DIExpression()), !dbg !7377
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7378
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !7379
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !7380, !srcloc !7381
  unreachable, !dbg !7382
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7383 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7401, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.value(metadata i32 %1, metadata !7402, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.value(metadata i32 %2, metadata !7403, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7404, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.value(metadata i32 0, metadata !7405, metadata !DIExpression()), !dbg !7411
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7412
  %9 = and i32 %8, 511, !dbg !7413
  call void @llvm.dbg.value(metadata i32 %9, metadata !7406, metadata !DIExpression()), !dbg !7411
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !7414
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !7414
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7415
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !7415
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7410, metadata !DIExpression()), !dbg !7416
  call void @llvm.dbg.value(metadata i32 0, metadata !7417, metadata !DIExpression()) #23, !dbg !7420
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !7422, !srcloc !7423
  call void @llvm.dbg.value(metadata i8* %6, metadata !7408, metadata !DIExpression(DW_OP_deref)), !dbg !7411
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !7424
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7409, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.value(metadata i8* %5, metadata !7407, metadata !DIExpression(DW_OP_deref)), !dbg !7411
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #24, !dbg !7425
  call void @llvm.dbg.value(metadata i32 %12, metadata !7405, metadata !DIExpression()), !dbg !7411
  %13 = load i8, i8* %5, align 1, !dbg !7426, !range !7428
  call void @llvm.dbg.value(metadata i8 %13, metadata !7407, metadata !DIExpression()), !dbg !7411
  %14 = icmp eq i8 %13, 0, !dbg !7426
  br i1 %14, label %15, label %32, !dbg !7429

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7430
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !7431
  %18 = load i8, i8* %6, align 1, !dbg !7432, !range !7428
  call void @llvm.dbg.value(metadata i8 %18, metadata !7408, metadata !DIExpression()), !dbg !7411
  %19 = icmp eq i8 %18, 0, !dbg !7432
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7434
  %21 = load i32, i32* %20, align 4, !dbg !7434
  br i1 %19, label %27, label %22, !dbg !7435

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7436
  %24 = icmp eq i32 %23, 0, !dbg !7439
  br i1 %24, label %25, label %31, !dbg !7440

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7441
  br label %29, !dbg !7443

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7444
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7434
  br label %31, !dbg !7446

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !7446
  br label %32, !dbg !7447

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !7447
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !7447
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !7447
  ret void, !dbg !7447
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !7448 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7453, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i32 %1, metadata !7454, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i32 %2, metadata !7455, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i8* %3, metadata !7456, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i8 0, metadata !7457, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7458, metadata !DIExpression()), !dbg !7459
  store i8 0, i8* %3, align 1, !dbg !7460
  %5 = icmp ugt i32 %2, -16777217, !dbg !7461
  br i1 %5, label %6, label %17, !dbg !7463

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !7464
  %8 = icmp eq i32 %7, 8, !dbg !7464
  br i1 %8, label %9, label %10, !dbg !7464

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.60, i32 0, i32 0), i32 noundef 69) #25, !dbg !7466
  br label %17, !dbg !7472

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !7473
  %12 = icmp eq i32 %11, 0, !dbg !7473
  br i1 %12, label %13, label %14, !dbg !7474

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !7458, metadata !DIExpression()), !dbg !7459
  store i8 1, i8* %3, align 1, !dbg !7477
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !7459
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !7458, metadata !DIExpression()), !dbg !7459
  br label %17, !dbg !7480

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !7459
  ret %struct.__esf* %18, !dbg !7481
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7482 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7486, metadata !DIExpression()), !dbg !7490
  call void @llvm.dbg.value(metadata i32 %1, metadata !7487, metadata !DIExpression()), !dbg !7490
  call void @llvm.dbg.value(metadata i8* %2, metadata !7488, metadata !DIExpression()), !dbg !7490
  call void @llvm.dbg.value(metadata i32 0, metadata !7489, metadata !DIExpression()), !dbg !7490
  store i8 0, i8* %2, align 1, !dbg !7491
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7492

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !7493
  call void @llvm.dbg.value(metadata i32 %5, metadata !7489, metadata !DIExpression()), !dbg !7490
  br label %12, !dbg !7495

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !7496
  call void @llvm.dbg.value(metadata i32 %7, metadata !7489, metadata !DIExpression()), !dbg !7490
  br label %12, !dbg !7497

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !7498
  call void @llvm.dbg.value(metadata i32 0, metadata !7489, metadata !DIExpression()), !dbg !7490
  br label %12, !dbg !7499

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !7500
  call void @llvm.dbg.value(metadata i32 0, metadata !7489, metadata !DIExpression()), !dbg !7490
  br label %12, !dbg !7501

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !7502
  br label %12, !dbg !7503

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !7504
  br label %12, !dbg !7505

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !7490
  call void @llvm.dbg.value(metadata i32 %13, metadata !7489, metadata !DIExpression()), !dbg !7490
  ret i32 %13, !dbg !7506
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7507 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7511, metadata !DIExpression()), !dbg !7514
  call void @llvm.dbg.value(metadata i8* %1, metadata !7512, metadata !DIExpression()), !dbg !7514
  call void @llvm.dbg.value(metadata i32 0, metadata !7513, metadata !DIExpression()), !dbg !7514
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.55, i32 0, i32 0), i32 noundef 69) #25, !dbg !7515
  store i8 0, i8* %1, align 1, !dbg !7520
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7521
  %4 = and i32 %3, 2, !dbg !7523
  %5 = icmp eq i32 %4, 0, !dbg !7524
  br i1 %5, label %7, label %6, !dbg !7525

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.56, i32 0, i32 0), i32 noundef 69) #25, !dbg !7526
  br label %36, !dbg !7532

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7533
  %9 = icmp sgt i32 %8, -1, !dbg !7535
  br i1 %9, label %11, label %10, !dbg !7536

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.57, i32 0, i32 0), i32 noundef 69) #25, !dbg !7537
  br label %36, !dbg !7543

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7544
  %13 = and i32 %12, 1073741824, !dbg !7546
  %14 = icmp eq i32 %13, 0, !dbg !7547
  br i1 %14, label %36, label %15, !dbg !7548

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.58, i32 0, i32 0), i32 noundef 69) #25, !dbg !7549
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !7555
  br i1 %16, label %17, label %21, !dbg !7557

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7558
  %19 = load i32, i32* %18, align 4, !dbg !7558
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.59, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !7558
  %20 = load i32, i32* %18, align 4, !dbg !7564
  call void @llvm.dbg.value(metadata i32 %20, metadata !7513, metadata !DIExpression()), !dbg !7514
  br label %36, !dbg !7565

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7566
  %23 = and i32 %22, 255, !dbg !7568
  %24 = icmp eq i32 %23, 0, !dbg !7569
  br i1 %24, label %27, label %25, !dbg !7570

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !7571
  call void @llvm.dbg.value(metadata i32 %26, metadata !7513, metadata !DIExpression()), !dbg !7514
  br label %36, !dbg !7573

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7574
  %29 = and i32 %28, 65280, !dbg !7576
  %30 = icmp eq i32 %29, 0, !dbg !7577
  br i1 %30, label %32, label %31, !dbg !7578

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !7579
  call void @llvm.dbg.value(metadata i32 0, metadata !7513, metadata !DIExpression()), !dbg !7514
  br label %36, !dbg !7581

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7582
  %34 = icmp ult i32 %33, 65536, !dbg !7584
  br i1 %34, label %36, label %35, !dbg !7585

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !7586
  call void @llvm.dbg.value(metadata i32 0, metadata !7513, metadata !DIExpression()), !dbg !7514
  br label %36, !dbg !7588

36:                                               ; preds = %10, %11, %17, %31, %32, %35, %25, %6
  %37 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], [ 0, %32 ], [ 0, %11 ], !dbg !7514
  call void @llvm.dbg.value(metadata i32 %37, metadata !7513, metadata !DIExpression()), !dbg !7514
  ret i32 %37, !dbg !7589
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7590 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7592, metadata !DIExpression()), !dbg !7605
  call void @llvm.dbg.value(metadata i32 %1, metadata !7593, metadata !DIExpression()), !dbg !7605
  call void @llvm.dbg.value(metadata i8* %2, metadata !7594, metadata !DIExpression()), !dbg !7605
  call void @llvm.dbg.value(metadata i32 0, metadata !7595, metadata !DIExpression()), !dbg !7605
  call void @llvm.dbg.value(metadata i32 -22, metadata !7596, metadata !DIExpression()), !dbg !7605
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.52, i32 0, i32 0), i32 noundef 69) #25, !dbg !7606
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7611
  %5 = and i32 %4, 16, !dbg !7613
  %6 = icmp eq i32 %5, 0, !dbg !7614
  br i1 %6, label %8, label %7, !dbg !7615

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.53, i32 0, i32 0), i32 noundef 69) #25, !dbg !7616
  br label %8, !dbg !7622

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7623
  %10 = and i32 %9, 8, !dbg !7625
  %11 = icmp eq i32 %10, 0, !dbg !7626
  br i1 %11, label %13, label %12, !dbg !7627

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.51, i32 0, i32 0), i32 noundef 69) #25, !dbg !7628
  br label %13, !dbg !7634

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7635
  %15 = and i32 %14, 2, !dbg !7636
  %16 = icmp eq i32 %15, 0, !dbg !7637
  br i1 %16, label %27, label %17, !dbg !7638

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.54, i32 0, i32 0), i32 noundef 69) #25, !dbg !7639
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7644
  call void @llvm.dbg.value(metadata i32 %18, metadata !7597, metadata !DIExpression()), !dbg !7645
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7646
  %20 = and i32 %19, 128, !dbg !7648
  %21 = icmp eq i32 %20, 0, !dbg !7649
  br i1 %21, label %27, label %22, !dbg !7650

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !7596, metadata !DIExpression()), !dbg !7605
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !7651
  %23 = icmp eq i32 %1, 0, !dbg !7657
  br i1 %23, label %27, label %24, !dbg !7659

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7660
  %26 = and i32 %25, -129, !dbg !7660
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7660
  br label %27, !dbg !7662

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !7605
  call void @llvm.dbg.value(metadata i32 %28, metadata !7596, metadata !DIExpression()), !dbg !7605
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7663
  %30 = and i32 %29, 1, !dbg !7665
  %31 = icmp eq i32 %30, 0, !dbg !7666
  br i1 %31, label %33, label %32, !dbg !7667

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i32 0, i32 0), i32 noundef 69) #25, !dbg !7668
  br label %33, !dbg !7674

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7675
  %35 = and i32 %34, 32, !dbg !7677
  %36 = icmp eq i32 %35, 0, !dbg !7678
  br i1 %36, label %38, label %37, !dbg !7679

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), i32 noundef 69) #25, !dbg !7680
  br label %38, !dbg !7686

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7687
  %40 = and i32 %39, 16, !dbg !7688
  %41 = icmp eq i32 %40, 0, !dbg !7688
  br i1 %41, label %42, label %46, !dbg !7689

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7690
  %44 = and i32 %43, 2, !dbg !7691
  %45 = icmp eq i32 %44, 0, !dbg !7691
  br i1 %45, label %55, label %46, !dbg !7692

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7693
  %48 = and i32 %47, 2048, !dbg !7694
  %49 = icmp eq i32 %48, 0, !dbg !7694
  br i1 %49, label %55, label %50, !dbg !7695

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !7696
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !7697
  call void @llvm.dbg.value(metadata i32 %52, metadata !7600, metadata !DIExpression()), !dbg !7698
  %53 = icmp eq i32 %52, 0, !dbg !7699
  br i1 %53, label %55, label %54, !dbg !7701

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !7702, metadata !DIExpression()) #23, !dbg !7705
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !7708, !srcloc !7709
  call void @llvm.dbg.value(metadata i32 2, metadata !7595, metadata !DIExpression()), !dbg !7605
  br label %55, !dbg !7710

55:                                               ; preds = %54, %50, %46, %42
  %56 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %50 ], !dbg !7605
  call void @llvm.dbg.value(metadata i32 %56, metadata !7595, metadata !DIExpression()), !dbg !7605
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7711
  %58 = and i32 %57, 32, !dbg !7713
  %59 = icmp eq i32 %58, 0, !dbg !7714
  br i1 %59, label %63, label %60, !dbg !7715

60:                                               ; preds = %55
  %61 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7716
  %62 = and i32 %61, -8193, !dbg !7716
  store volatile i32 %62, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7716
  br label %63, !dbg !7718

63:                                               ; preds = %60, %55
  %64 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7719
  %65 = or i32 %64, 255, !dbg !7719
  store volatile i32 %65, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7719
  store i8 0, i8* %2, align 1, !dbg !7720
  ret i32 %56, !dbg !7721
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7722 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7726, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata i32 %0, metadata !7727, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata i8* %1, metadata !7728, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata i32 0, metadata !7729, metadata !DIExpression()), !dbg !7733
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #25, !dbg !7734
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7739
  %4 = and i32 %3, 4096, !dbg !7741
  %5 = icmp eq i32 %4, 0, !dbg !7741
  br i1 %5, label %7, label %6, !dbg !7742

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !7743
  br label %7, !dbg !7749

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7750
  %9 = and i32 %8, 2048, !dbg !7752
  %10 = icmp eq i32 %9, 0, !dbg !7752
  br i1 %10, label %12, label %11, !dbg !7753

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.51, i32 0, i32 0), i32 noundef 69) #25, !dbg !7754
  br label %12, !dbg !7760

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7761
  %14 = and i32 %13, 512, !dbg !7762
  %15 = icmp eq i32 %14, 0, !dbg !7762
  br i1 %15, label %26, label %16, !dbg !7763

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !7764
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7769
  call void @llvm.dbg.value(metadata i32 %17, metadata !7730, metadata !DIExpression()), !dbg !7770
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7771
  %19 = and i32 %18, 32768, !dbg !7773
  %20 = icmp eq i32 %19, 0, !dbg !7774
  br i1 %20, label %26, label %21, !dbg !7775

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7776
  %22 = icmp eq i32 %0, 0, !dbg !7782
  br i1 %22, label %26, label %23, !dbg !7784

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7785
  %25 = and i32 %24, -32769, !dbg !7785
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7785
  br label %26, !dbg !7787

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7788
  %28 = and i32 %27, 1024, !dbg !7790
  %29 = icmp eq i32 %28, 0, !dbg !7790
  br i1 %29, label %31, label %30, !dbg !7791

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69) #25, !dbg !7792
  br label %31, !dbg !7798

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7799
  %33 = and i32 %32, 256, !dbg !7801
  %34 = icmp eq i32 %33, 0, !dbg !7802
  br i1 %34, label %35, label %39, !dbg !7803

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7804
  %37 = and i32 %36, 8192, !dbg !7806
  %38 = icmp eq i32 %37, 0, !dbg !7806
  br i1 %38, label %41, label %39, !dbg !7807

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !7808
  br label %41, !dbg !7809

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7809
  %43 = or i32 %42, 65280, !dbg !7809
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7809
  store i8 0, i8* %1, align 1, !dbg !7810
  ret void, !dbg !7811
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7812 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7818, metadata !DIExpression()), !dbg !7820
  call void @llvm.dbg.value(metadata i32 0, metadata !7819, metadata !DIExpression()), !dbg !7820
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !7821
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7826
  %2 = and i32 %1, 33554432, !dbg !7828
  %3 = icmp eq i32 %2, 0, !dbg !7829
  br i1 %3, label %5, label %4, !dbg !7830

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i32 0, i32 0), i32 noundef 69) #25, !dbg !7831
  br label %5, !dbg !7837

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7838
  %7 = and i32 %6, 16777216, !dbg !7840
  %8 = icmp eq i32 %7, 0, !dbg !7841
  br i1 %8, label %10, label %9, !dbg !7842

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i32 0, i32 0), i32 noundef 69) #25, !dbg !7843
  br label %10, !dbg !7849

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7850
  %12 = and i32 %11, 524288, !dbg !7852
  %13 = icmp eq i32 %12, 0, !dbg !7853
  br i1 %13, label %15, label %14, !dbg !7854

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #25, !dbg !7855
  br label %15, !dbg !7861

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7862
  %17 = and i32 %16, 262144, !dbg !7864
  %18 = icmp eq i32 %17, 0, !dbg !7865
  br i1 %18, label %20, label %19, !dbg !7866

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23.50, i32 0, i32 0), i32 noundef 69) #25, !dbg !7867
  br label %20, !dbg !7873

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7874
  %22 = and i32 %21, 131072, !dbg !7876
  %23 = icmp eq i32 %22, 0, !dbg !7877
  br i1 %23, label %25, label %24, !dbg !7878

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !7879
  br label %25, !dbg !7885

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7886
  %27 = and i32 %26, 65536, !dbg !7888
  %28 = icmp eq i32 %27, 0, !dbg !7889
  br i1 %28, label %30, label %29, !dbg !7890

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69) #25, !dbg !7891
  br label %30, !dbg !7897

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7898
  %32 = or i32 %31, -65536, !dbg !7898
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7898
  ret void, !dbg !7899
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7900 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7904, metadata !DIExpression()), !dbg !7906
  call void @llvm.dbg.value(metadata i8* %0, metadata !7905, metadata !DIExpression()), !dbg !7906
  store i8 0, i8* %0, align 1, !dbg !7907
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !7908
  ret void, !dbg !7913
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7914 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7918, metadata !DIExpression()), !dbg !7920
  call void @llvm.dbg.value(metadata i32 %0, metadata !7919, metadata !DIExpression()), !dbg !7920
  %2 = icmp slt i32 %0, 16, !dbg !7921
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28.49, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29, i32 0, i32 0), !dbg !7921
  %4 = add nsw i32 %0, -16, !dbg !7921
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7921
  ret void, !dbg !7926
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7927 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7931, metadata !DIExpression()), !dbg !7934
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7935
  %3 = load i32, i32* %2, align 4, !dbg !7935
  %4 = inttoptr i32 %3 to i16*, !dbg !7936
  call void @llvm.dbg.value(metadata i16* %4, metadata !7932, metadata !DIExpression()), !dbg !7934
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7937
  %6 = or i32 %5, 256, !dbg !7937
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7937
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7938, !srcloc !7941
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7942, !srcloc !7945
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7946
  %8 = load i16, i16* %7, align 2, !dbg !7947
  call void @llvm.dbg.value(metadata i16 %8, metadata !7933, metadata !DIExpression()), !dbg !7934
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7948
  %10 = and i32 %9, -257, !dbg !7948
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7948
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7949, !srcloc !7941
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7951, !srcloc !7945
  %11 = icmp eq i16 %8, -8446, !dbg !7953
  ret i1 %11, !dbg !7955
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7956 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7957
  %2 = or i32 %1, 16, !dbg !7957
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7957
  ret void, !dbg !7958
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7959 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7962, metadata !DIExpression()), !dbg !7963
  br label %1, !dbg !7964

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7962, metadata !DIExpression()), !dbg !7963
  tail call fastcc void @__NVIC_SetPriority.63(i32 noundef %2) #24, !dbg !7966
  %3 = add nuw nsw i32 %2, 1, !dbg !7969
  call void @llvm.dbg.value(metadata i32 %3, metadata !7962, metadata !DIExpression()), !dbg !7963
  %4 = icmp eq i32 %3, 85, !dbg !7970
  br i1 %4, label %5, label %1, !dbg !7964, !llvm.loop !7971

5:                                                ; preds = %1
  ret void, !dbg !7973
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.63(i32 noundef %0) unnamed_addr #15 !dbg !7974 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7976, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i32 1, metadata !7977, metadata !DIExpression()), !dbg !7978
  %2 = and i32 %0, 15, !dbg !7979
  %3 = add nsw i32 %2, -4, !dbg !7979
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7979
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7979
  %6 = icmp slt i32 %0, 0, !dbg !7979
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7979
  store volatile i8 16, i8* %7, align 1, !dbg !7980
  ret void, !dbg !7982
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7983 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8089, metadata !DIExpression()), !dbg !8090
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8091
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8093
  br i1 %3, label %4, label %12, !dbg !8094

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !8095, !srcloc !8107
  call void @llvm.dbg.value(metadata i32 %5, metadata !8098, metadata !DIExpression()) #23, !dbg !8108
  %6 = icmp eq i32 %5, 0, !dbg !8109
  br i1 %6, label %12, label %7, !dbg !8110

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8111
  %9 = or i32 %8, 268435456, !dbg !8111
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8111
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8113
  %11 = and i32 %10, -32769, !dbg !8113
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8113
  br label %12, !dbg !8114

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !8115
  ret void, !dbg !8116
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8117 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !8118
  ret void, !dbg !8119
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !643 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !758, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.value(metadata i8 0, metadata !759, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.value(metadata i32 64, metadata !761, metadata !DIExpression()), !dbg !8120
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8121
  %3 = load i32, i32* %2, align 4, !dbg !8121
  %4 = add i32 %3, -64, !dbg !8123
  call void @llvm.dbg.value(metadata i32 %4, metadata !760, metadata !DIExpression()), !dbg !8120
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !8124
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !8125
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !8126
  call void @llvm.dbg.value(metadata i8 1, metadata !759, metadata !DIExpression()), !dbg !8120
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !8127
  ret void, !dbg !8128
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8129 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8130
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !8131, !srcloc !8134
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !8135, !srcloc !8138
  ret void, !dbg !8139
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8140 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !8141, !srcloc !8144
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8145
  ret void, !dbg !8146
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8147 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8162, metadata !DIExpression()), !dbg !8166
  call void @llvm.dbg.value(metadata i8 %1, metadata !8163, metadata !DIExpression()), !dbg !8166
  call void @llvm.dbg.value(metadata i32 %2, metadata !8164, metadata !DIExpression()), !dbg !8166
  call void @llvm.dbg.value(metadata i32 %3, metadata !8165, metadata !DIExpression()), !dbg !8166
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !8167
  ret void, !dbg !8169
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8170 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8175, metadata !DIExpression()), !dbg !8180
  call void @llvm.dbg.value(metadata i8 %1, metadata !8176, metadata !DIExpression()), !dbg !8180
  call void @llvm.dbg.value(metadata i32 undef, metadata !8177, metadata !DIExpression()), !dbg !8180
  call void @llvm.dbg.value(metadata i32 undef, metadata !8178, metadata !DIExpression()), !dbg !8180
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8181
  call void @llvm.dbg.value(metadata i8 %3, metadata !8179, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8180
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !8182
  call void @llvm.dbg.value(metadata i32 %4, metadata !8179, metadata !DIExpression()), !dbg !8180
  %5 = trunc i32 %4 to i8, !dbg !8183
  store i8 %5, i8* @static_regions_num, align 1, !dbg !8184
  ret void, !dbg !8185
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !8186 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8190, metadata !DIExpression()), !dbg !8196
  call void @llvm.dbg.value(metadata i8 %1, metadata !8191, metadata !DIExpression()), !dbg !8196
  call void @llvm.dbg.value(metadata i8 %2, metadata !8192, metadata !DIExpression()), !dbg !8196
  call void @llvm.dbg.value(metadata i1 %3, metadata !8193, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8196
  %5 = zext i8 %2 to i32, !dbg !8197
  call void @llvm.dbg.value(metadata i32 %5, metadata !8195, metadata !DIExpression()), !dbg !8196
  call void @llvm.dbg.value(metadata i32 0, metadata !8194, metadata !DIExpression()), !dbg !8196
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !8195, metadata !DIExpression()), !dbg !8196
  call void @llvm.dbg.value(metadata i32 0, metadata !8194, metadata !DIExpression()), !dbg !8196
  %7 = icmp eq i8 %1, 0, !dbg !8198
  br i1 %7, label %30, label %8, !dbg !8201

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8195, metadata !DIExpression()), !dbg !8196
  call void @llvm.dbg.value(metadata i32 %10, metadata !8194, metadata !DIExpression()), !dbg !8196
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !8202
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !8205
  %13 = load i32, i32* %12, align 4, !dbg !8205
  %14 = icmp eq i32 %13, 0, !dbg !8206
  br i1 %14, label %26, label %15, !dbg !8207

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !8208

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !8210
  %18 = icmp eq i32 %17, 0, !dbg !8210
  br i1 %18, label %19, label %20, !dbg !8211

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.72, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !8212
  br label %30, !dbg !8218

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !8219
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !8220
  call void @llvm.dbg.value(metadata i32 %22, metadata !8195, metadata !DIExpression()), !dbg !8196
  %23 = icmp eq i32 %22, -22, !dbg !8221
  br i1 %23, label %30, label %24, !dbg !8223

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !8224
  call void @llvm.dbg.value(metadata i32 %25, metadata !8195, metadata !DIExpression()), !dbg !8196
  br label %26, !dbg !8225

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !8196
  call void @llvm.dbg.value(metadata i32 %27, metadata !8195, metadata !DIExpression()), !dbg !8196
  %28 = add nuw nsw i32 %10, 1, !dbg !8226
  call void @llvm.dbg.value(metadata i32 %28, metadata !8194, metadata !DIExpression()), !dbg !8196
  %29 = icmp eq i32 %28, %6, !dbg !8198
  br i1 %29, label %30, label %8, !dbg !8201, !llvm.loop !8227

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !8196
  ret i32 %31, !dbg !8229
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !8230 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8234, metadata !DIExpression()), !dbg !8236
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !8237
  %3 = load i32, i32* %2, align 4, !dbg !8237
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !8238, !range !8239
  %5 = icmp ult i32 %4, 2, !dbg !8238
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !8240
  br i1 %7, label %8, label %15, !dbg !8240

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !8241
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !8242
  %11 = load i32, i32* %10, align 4, !dbg !8242
  %12 = and i32 %11, %9, !dbg !8243
  %13 = icmp eq i32 %12, 0, !dbg !8244
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8235, metadata !DIExpression()), !dbg !8236
  ret i32 %16, !dbg !8245
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8246 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !8250, metadata !DIExpression()), !dbg !8253
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !8251, metadata !DIExpression()), !dbg !8253
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !8254
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !8254
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !8252, metadata !DIExpression()), !dbg !8255
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !8256
  %6 = load i32, i32* %5, align 4, !dbg !8256
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !8257
  store i32 %6, i32* %7, align 4, !dbg !8258
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !8259
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !8260
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !8261
  %11 = load i32, i32* %10, align 4, !dbg !8261
  call fastcc void @get_region_attr_from_mpu_partition_info(%union.anon* noundef nonnull %8, %union.anon* noundef nonnull %9, i32 noundef %11) #24, !dbg !8262
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !8263
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !8264
  ret i32 %12, !dbg !8265
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%union.anon* nocapture noundef writeonly %0, %union.anon* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !8266 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !8273, metadata !DIExpression()), !dbg !8277
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !8274, metadata !DIExpression()), !dbg !8277
  call void @llvm.dbg.value(metadata i32 undef, metadata !8275, metadata !DIExpression()), !dbg !8277
  call void @llvm.dbg.value(metadata i32 %2, metadata !8276, metadata !DIExpression()), !dbg !8277
  %4 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !8278
  %5 = load i32, i32* %4, align 4, !dbg !8278
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !8279
  %7 = or i32 %6, %5, !dbg !8280
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !8281
  store i32 %7, i32* %8, align 4, !dbg !8282
  ret void, !dbg !8283
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8284 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8288, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8289, metadata !DIExpression()), !dbg !8290
  %3 = zext i8 %0 to i32, !dbg !8291
  %4 = icmp ugt i8 %0, 7, !dbg !8293
  br i1 %4, label %5, label %6, !dbg !8294

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.73, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !8295
  br label %7, !dbg !8301

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !8302
  br label %7, !dbg !8303

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !8290
  ret i32 %8, !dbg !8304
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !8305 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8309, metadata !DIExpression()), !dbg !8311
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8310, metadata !DIExpression()), !dbg !8311
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !8312
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !8313
  %4 = load i32, i32* %3, align 4, !dbg !8313
  %5 = and i32 %4, -32, !dbg !8314
  %6 = or i32 %5, %0, !dbg !8315
  %7 = or i32 %6, 16, !dbg !8315
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !8316
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !8317
  %9 = load i32, i32* %8, align 4, !dbg !8317
  %10 = or i32 %9, 1, !dbg !8318
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8319
  ret void, !dbg !8320
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !8321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8324, metadata !DIExpression()), !dbg !8325
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8326
  ret void, !dbg !8327
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #12 !dbg !8328 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8332, metadata !DIExpression()), !dbg !8333
  %2 = icmp ult i32 %0, 33, !dbg !8334
  br i1 %2, label %11, label %3, !dbg !8336

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !8337
  br i1 %4, label %11, label %5, !dbg !8339

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !8340
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !8341, !range !8239
  %8 = mul nsw i32 %7, -2, !dbg !8342
  %9 = add nsw i32 %8, 62, !dbg !8342
  %10 = and i32 %9, 62, !dbg !8343
  br label %11, !dbg !8344

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !8333
  ret i32 %12, !dbg !8345
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !8346 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8350, metadata !DIExpression()), !dbg !8352
  call void @llvm.dbg.value(metadata i8 %1, metadata !8351, metadata !DIExpression()), !dbg !8352
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !8353
  ret void, !dbg !8355
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8356 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8360, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.value(metadata i8 %1, metadata !8361, metadata !DIExpression()), !dbg !8367
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8368
  call void @llvm.dbg.value(metadata i8 %3, metadata !8362, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8367
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !8369
  call void @llvm.dbg.value(metadata i32 %4, metadata !8362, metadata !DIExpression()), !dbg !8367
  %5 = icmp ne i32 %4, -22, !dbg !8370
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !8371
  call void @llvm.dbg.value(metadata i32 %4, metadata !8363, metadata !DIExpression()), !dbg !8372
  br i1 %7, label %8, label %12, !dbg !8371

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8363, metadata !DIExpression()), !dbg !8372
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !8373
  %10 = add i32 %9, 1, !dbg !8376
  call void @llvm.dbg.value(metadata i32 %10, metadata !8363, metadata !DIExpression()), !dbg !8372
  %11 = icmp eq i32 %10, 8, !dbg !8377
  br i1 %11, label %12, label %8, !dbg !8378, !llvm.loop !8379

12:                                               ; preds = %8, %2
  ret void, !dbg !8381
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !8382 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8385, metadata !DIExpression()), !dbg !8386
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8387
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8388
  ret void, !dbg !8389
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !8390 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !8395
  %2 = icmp ugt i32 %1, 8, !dbg !8397
  br i1 %2, label %14, label %3, !dbg !8398

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !8399
  call void @llvm.dbg.value(metadata i32 0, metadata !8394, metadata !DIExpression()), !dbg !8400
  %4 = icmp eq i32 %1, 0, !dbg !8401
  br i1 %4, label %12, label %5, !dbg !8404

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !8404

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8394, metadata !DIExpression()), !dbg !8400
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !8405
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #24, !dbg !8407
  %10 = add nuw i32 %8, 1, !dbg !8408
  call void @llvm.dbg.value(metadata i32 %10, metadata !8394, metadata !DIExpression()), !dbg !8400
  %11 = icmp eq i32 %10, %1, !dbg !8401
  br i1 %11, label %12, label %7, !dbg !8404, !llvm.loop !8409

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !8411
  store i8 %13, i8* @static_regions_num, align 1, !dbg !8412
  tail call void @arm_core_mpu_enable() #24, !dbg !8413
  br label %14, !dbg !8414

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !8400
  ret i32 %15, !dbg !8415
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8416 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8423, metadata !DIExpression()), !dbg !8426
  call void @llvm.dbg.value(metadata i8* %1, metadata !8424, metadata !DIExpression()), !dbg !8426
  call void @llvm.dbg.value(metadata i8* %0, metadata !8425, metadata !DIExpression()), !dbg !8426
  %3 = load i8, i8* %1, align 1, !dbg !8427
  %4 = icmp eq i8 %3, 0, !dbg !8428
  br i1 %4, label %13, label %5, !dbg !8429

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8423, metadata !DIExpression()), !dbg !8426
  call void @llvm.dbg.value(metadata i8* %8, metadata !8424, metadata !DIExpression()), !dbg !8426
  store i8 %6, i8* %7, align 1, !dbg !8430
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8432
  call void @llvm.dbg.value(metadata i8* %9, metadata !8423, metadata !DIExpression()), !dbg !8426
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8433
  call void @llvm.dbg.value(metadata i8* %10, metadata !8424, metadata !DIExpression()), !dbg !8426
  %11 = load i8, i8* %10, align 1, !dbg !8427
  %12 = icmp eq i8 %11, 0, !dbg !8428
  br i1 %12, label %13, label %5, !dbg !8429, !llvm.loop !8434

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8436
  ret i8* %0, !dbg !8437
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8438 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8442, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.value(metadata i8* %1, metadata !8443, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.value(metadata i32 %2, metadata !8444, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.value(metadata i8* %0, metadata !8445, metadata !DIExpression()), !dbg !8446
  %4 = icmp eq i32 %2, 0, !dbg !8447
  br i1 %4, label %22, label %5, !dbg !8448

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8442, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.value(metadata i32 %7, metadata !8444, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.value(metadata i8* %8, metadata !8443, metadata !DIExpression()), !dbg !8446
  %9 = load i8, i8* %8, align 1, !dbg !8449
  %10 = icmp eq i8 %9, 0, !dbg !8450
  br i1 %10, label %16, label %11, !dbg !8451

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8452
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8454
  call void @llvm.dbg.value(metadata i8* %12, metadata !8443, metadata !DIExpression()), !dbg !8446
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8455
  call void @llvm.dbg.value(metadata i8* %13, metadata !8442, metadata !DIExpression()), !dbg !8446
  %14 = add i32 %7, -1, !dbg !8456
  call void @llvm.dbg.value(metadata i32 %14, metadata !8444, metadata !DIExpression()), !dbg !8446
  %15 = icmp eq i32 %14, 0, !dbg !8447
  br i1 %15, label %22, label %5, !dbg !8448, !llvm.loop !8457

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8442, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.value(metadata i32 %18, metadata !8444, metadata !DIExpression()), !dbg !8446
  store i8 0, i8* %17, align 1, !dbg !8459
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8461
  call void @llvm.dbg.value(metadata i8* %19, metadata !8442, metadata !DIExpression()), !dbg !8446
  %20 = add i32 %18, -1, !dbg !8462
  call void @llvm.dbg.value(metadata i32 %20, metadata !8444, metadata !DIExpression()), !dbg !8446
  %21 = icmp eq i32 %20, 0, !dbg !8463
  br i1 %21, label %22, label %16, !dbg !8464, !llvm.loop !8465

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !8467
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !8468 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8472, metadata !DIExpression()), !dbg !8475
  call void @llvm.dbg.value(metadata i32 %1, metadata !8473, metadata !DIExpression()), !dbg !8475
  call void @llvm.dbg.value(metadata i32 %1, metadata !8474, metadata !DIExpression()), !dbg !8475
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8476

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !8472, metadata !DIExpression()), !dbg !8475
  %6 = load i8, i8* %5, align 1, !dbg !8477
  %7 = icmp eq i8 %6, %3, !dbg !8478
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !8479
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8480
  call void @llvm.dbg.value(metadata i8* %10, metadata !8472, metadata !DIExpression()), !dbg !8475
  br i1 %9, label %11, label %4, !dbg !8479, !llvm.loop !8482

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8484
  ret i8* %12, !dbg !8485
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !8486 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8488, metadata !DIExpression()), !dbg !8491
  call void @llvm.dbg.value(metadata i32 %1, metadata !8489, metadata !DIExpression()), !dbg !8491
  call void @llvm.dbg.value(metadata i8* null, metadata !8490, metadata !DIExpression()), !dbg !8491
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8492

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8491
  call void @llvm.dbg.value(metadata i8* %6, metadata !8490, metadata !DIExpression()), !dbg !8491
  call void @llvm.dbg.value(metadata i8* %5, metadata !8488, metadata !DIExpression()), !dbg !8491
  %7 = load i8, i8* %5, align 1, !dbg !8493
  %8 = icmp eq i8 %7, %3, !dbg !8496
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8497
  call void @llvm.dbg.value(metadata i8* %9, metadata !8490, metadata !DIExpression()), !dbg !8491
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8498
  call void @llvm.dbg.value(metadata i8* %10, metadata !8488, metadata !DIExpression()), !dbg !8491
  %11 = icmp eq i8 %7, 0, !dbg !8499
  br i1 %11, label %12, label %4, !dbg !8499, !llvm.loop !8500

12:                                               ; preds = %4
  ret i8* %9, !dbg !8502
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !8503 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8507, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata i32 0, metadata !8508, metadata !DIExpression()), !dbg !8509
  %2 = load i8, i8* %0, align 1, !dbg !8510
  %3 = icmp eq i8 %2, 0, !dbg !8511
  br i1 %3, label %11, label %4, !dbg !8512

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8508, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.value(metadata i8* %6, metadata !8507, metadata !DIExpression()), !dbg !8509
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8513
  call void @llvm.dbg.value(metadata i8* %7, metadata !8507, metadata !DIExpression()), !dbg !8509
  %8 = add i32 %5, 1, !dbg !8515
  call void @llvm.dbg.value(metadata i32 %8, metadata !8508, metadata !DIExpression()), !dbg !8509
  %9 = load i8, i8* %7, align 1, !dbg !8510
  %10 = icmp eq i8 %9, 0, !dbg !8511
  br i1 %10, label %11, label %4, !dbg !8512, !llvm.loop !8516

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8509
  ret i32 %12, !dbg !8518
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !8519 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8523, metadata !DIExpression()), !dbg !8526
  call void @llvm.dbg.value(metadata i32 %1, metadata !8524, metadata !DIExpression()), !dbg !8526
  call void @llvm.dbg.value(metadata i32 0, metadata !8525, metadata !DIExpression()), !dbg !8526
  %3 = load i8, i8* %0, align 1, !dbg !8527
  %4 = icmp ne i8 %3, 0, !dbg !8528
  %5 = icmp ne i32 %1, 0, !dbg !8529
  %6 = and i1 %4, %5, !dbg !8529
  br i1 %6, label %7, label %16, !dbg !8530

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8525, metadata !DIExpression()), !dbg !8526
  call void @llvm.dbg.value(metadata i8* %9, metadata !8523, metadata !DIExpression()), !dbg !8526
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8531
  call void @llvm.dbg.value(metadata i8* %10, metadata !8523, metadata !DIExpression()), !dbg !8526
  %11 = add nuw i32 %8, 1, !dbg !8533
  call void @llvm.dbg.value(metadata i32 %11, metadata !8525, metadata !DIExpression()), !dbg !8526
  %12 = load i8, i8* %10, align 1, !dbg !8527
  %13 = icmp ne i8 %12, 0, !dbg !8528
  %14 = icmp ult i32 %11, %1, !dbg !8529
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8529
  br i1 %15, label %7, label %16, !dbg !8530, !llvm.loop !8534

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8526
  ret i32 %17, !dbg !8536
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #9 !dbg !8537 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8541, metadata !DIExpression()), !dbg !8543
  call void @llvm.dbg.value(metadata i8* %1, metadata !8542, metadata !DIExpression()), !dbg !8543
  %3 = load i8, i8* %0, align 1, !dbg !8544
  %4 = load i8, i8* %1, align 1, !dbg !8545
  %5 = icmp ne i8 %3, %4, !dbg !8546
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8547
  br i1 %7, label %18, label %8, !dbg !8547

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8542, metadata !DIExpression()), !dbg !8543
  call void @llvm.dbg.value(metadata i8* %10, metadata !8541, metadata !DIExpression()), !dbg !8543
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8548
  call void @llvm.dbg.value(metadata i8* %11, metadata !8541, metadata !DIExpression()), !dbg !8543
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8550
  call void @llvm.dbg.value(metadata i8* %12, metadata !8542, metadata !DIExpression()), !dbg !8543
  %13 = load i8, i8* %11, align 1, !dbg !8544
  %14 = load i8, i8* %12, align 1, !dbg !8545
  %15 = icmp ne i8 %13, %14, !dbg !8546
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8547
  br i1 %17, label %18, label %8, !dbg !8547, !llvm.loop !8551

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8544
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8545
  %21 = zext i8 %19 to i32, !dbg !8554
  %22 = zext i8 %20 to i32, !dbg !8555
  %23 = sub nsw i32 %21, %22, !dbg !8556
  ret i32 %23, !dbg !8557
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #9 !dbg !8558 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8562, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.value(metadata i8* %1, metadata !8563, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.value(metadata i32 %2, metadata !8564, metadata !DIExpression()), !dbg !8565
  %4 = icmp eq i32 %2, 0, !dbg !8566
  br i1 %4, label %23, label %5, !dbg !8566

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8564, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.value(metadata i8* %7, metadata !8563, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.value(metadata i8* %8, metadata !8562, metadata !DIExpression()), !dbg !8565
  %9 = load i8, i8* %8, align 1, !dbg !8567
  %10 = load i8, i8* %7, align 1, !dbg !8568
  %11 = icmp ne i8 %9, %10, !dbg !8569
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8570
  br i1 %13, label %19, label %14, !dbg !8570

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8571
  call void @llvm.dbg.value(metadata i8* %15, metadata !8562, metadata !DIExpression()), !dbg !8565
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8573
  call void @llvm.dbg.value(metadata i8* %16, metadata !8563, metadata !DIExpression()), !dbg !8565
  %17 = add i32 %6, -1, !dbg !8574
  call void @llvm.dbg.value(metadata i32 %17, metadata !8564, metadata !DIExpression()), !dbg !8565
  %18 = icmp eq i32 %17, 0, !dbg !8566
  br i1 %18, label %23, label %5, !dbg !8566, !llvm.loop !8575

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8578
  %21 = zext i8 %10 to i32, !dbg !8579
  %22 = sub nsw i32 %20, %21, !dbg !8580
  br label %23, !dbg !8581

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8581
  ret i32 %24, !dbg !8582
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !8583 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8587, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata i8* %1, metadata !8588, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata i8** %2, metadata !8589, metadata !DIExpression()), !dbg !8592
  %4 = icmp eq i8* %0, null, !dbg !8593
  br i1 %4, label %5, label %7, !dbg !8593

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8594
  br label %7, !dbg !8593

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8593
  call void @llvm.dbg.value(metadata i8* %8, metadata !8590, metadata !DIExpression()), !dbg !8592
  %9 = load i8, i8* %8, align 1, !dbg !8595
  %10 = icmp eq i8 %9, 0, !dbg !8595
  br i1 %10, label %33, label %11, !dbg !8596

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8590, metadata !DIExpression()), !dbg !8592
  %14 = zext i8 %12 to i32, !dbg !8595
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !8597
  %16 = icmp eq i8* %15, null, !dbg !8596
  br i1 %16, label %21, label %17, !dbg !8598

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8599
  call void @llvm.dbg.value(metadata i8* %18, metadata !8590, metadata !DIExpression()), !dbg !8592
  %19 = load i8, i8* %18, align 1, !dbg !8595
  %20 = icmp eq i8 %19, 0, !dbg !8595
  br i1 %20, label %33, label %11, !dbg !8596, !llvm.loop !8601

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8591, metadata !DIExpression()), !dbg !8592
  %24 = zext i8 %22 to i32, !dbg !8603
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !8604
  %26 = icmp eq i8* %25, null, !dbg !8605
  br i1 %26, label %27, label %31, !dbg !8606

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8607
  call void @llvm.dbg.value(metadata i8* %28, metadata !8591, metadata !DIExpression()), !dbg !8592
  %29 = load i8, i8* %28, align 1, !dbg !8603
  %30 = icmp eq i8 %29, 0, !dbg !8603
  br i1 %30, label %33, label %21, !dbg !8609, !llvm.loop !8610

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8612
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8615
  br label %33, !dbg !8616

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8592
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8592
  store i8* %34, i8** %2, align 4, !dbg !8592
  ret i8* %35, !dbg !8617
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8618 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8620, metadata !DIExpression()), !dbg !8622
  call void @llvm.dbg.value(metadata i8* %1, metadata !8621, metadata !DIExpression()), !dbg !8622
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8623
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8624
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !8625
  ret i8* %0, !dbg !8626
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8627 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8629, metadata !DIExpression()), !dbg !8634
  call void @llvm.dbg.value(metadata i8* %1, metadata !8630, metadata !DIExpression()), !dbg !8634
  call void @llvm.dbg.value(metadata i32 %2, metadata !8631, metadata !DIExpression()), !dbg !8634
  call void @llvm.dbg.value(metadata i8* %0, metadata !8632, metadata !DIExpression()), !dbg !8634
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8635
  call void @llvm.dbg.value(metadata i32 %4, metadata !8633, metadata !DIExpression()), !dbg !8634
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8636
  call void @llvm.dbg.value(metadata i8* %5, metadata !8629, metadata !DIExpression()), !dbg !8634
  call void @llvm.dbg.value(metadata i8* %1, metadata !8630, metadata !DIExpression()), !dbg !8634
  call void @llvm.dbg.value(metadata i32 %2, metadata !8631, metadata !DIExpression()), !dbg !8634
  call void @llvm.dbg.value(metadata i32 %2, metadata !8631, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8634
  %6 = icmp eq i32 %2, 0, !dbg !8637
  br i1 %6, label %18, label %7, !dbg !8638

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8639
  call void @llvm.dbg.value(metadata i8* %9, metadata !8629, metadata !DIExpression()), !dbg !8634
  call void @llvm.dbg.value(metadata i8* %10, metadata !8630, metadata !DIExpression()), !dbg !8634
  %12 = load i8, i8* %10, align 1, !dbg !8640
  %13 = icmp eq i8 %12, 0, !dbg !8641
  br i1 %13, label %18, label %14, !dbg !8642

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8643
  call void @llvm.dbg.value(metadata i8* %15, metadata !8630, metadata !DIExpression()), !dbg !8634
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8645
  call void @llvm.dbg.value(metadata i8* %16, metadata !8629, metadata !DIExpression()), !dbg !8634
  store i8 %12, i8* %9, align 1, !dbg !8646
  call void @llvm.dbg.value(metadata i32 %11, metadata !8631, metadata !DIExpression()), !dbg !8634
  call void @llvm.dbg.value(metadata i32 %11, metadata !8631, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8634
  %17 = icmp eq i32 %11, 0, !dbg !8637
  br i1 %17, label %18, label %7, !dbg !8638, !llvm.loop !8647

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8634
  store i8 0, i8* %19, align 1, !dbg !8649
  ret i8* %0, !dbg !8650
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #9 !dbg !8651 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8655, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.value(metadata i8* %1, metadata !8656, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.value(metadata i32 %2, metadata !8657, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.value(metadata i8* %0, metadata !8658, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.value(metadata i8* %1, metadata !8659, metadata !DIExpression()), !dbg !8660
  %4 = icmp eq i32 %2, 0, !dbg !8661
  br i1 %4, label %31, label %5, !dbg !8663

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8659, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.value(metadata i8* %0, metadata !8658, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.value(metadata i32 %2, metadata !8657, metadata !DIExpression()), !dbg !8660
  %6 = add i32 %2, -1, !dbg !8664
  call void @llvm.dbg.value(metadata i32 %6, metadata !8657, metadata !DIExpression()), !dbg !8660
  %7 = icmp eq i32 %6, 0, !dbg !8665
  br i1 %7, label %23, label %8, !dbg !8666

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8667
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8667
  br label %11, !dbg !8667

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8659, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.value(metadata i8* %14, metadata !8658, metadata !DIExpression()), !dbg !8660
  %15 = load i8, i8* %14, align 1, !dbg !8668
  %16 = load i8, i8* %13, align 1, !dbg !8669
  %17 = icmp eq i8 %15, %16, !dbg !8670
  br i1 %17, label %18, label %23, !dbg !8667

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8671
  call void @llvm.dbg.value(metadata i8* %19, metadata !8658, metadata !DIExpression()), !dbg !8660
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8673
  call void @llvm.dbg.value(metadata i8* %20, metadata !8659, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.value(metadata i32 %12, metadata !8657, metadata !DIExpression()), !dbg !8660
  %21 = add i32 %12, -1, !dbg !8664
  call void @llvm.dbg.value(metadata i32 %21, metadata !8657, metadata !DIExpression()), !dbg !8660
  %22 = icmp eq i32 %21, 0, !dbg !8665
  br i1 %22, label %23, label %11, !dbg !8666, !llvm.loop !8674

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8660
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8660
  %26 = load i8, i8* %24, align 1, !dbg !8676
  %27 = zext i8 %26 to i32, !dbg !8676
  %28 = load i8, i8* %25, align 1, !dbg !8677
  %29 = zext i8 %28 to i32, !dbg !8677
  %30 = sub nsw i32 %27, %29, !dbg !8678
  br label %31, !dbg !8679

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8660
  ret i32 %32, !dbg !8680
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8681 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8685, metadata !DIExpression()), !dbg !8690
  call void @llvm.dbg.value(metadata i8* %1, metadata !8686, metadata !DIExpression()), !dbg !8690
  call void @llvm.dbg.value(metadata i32 %2, metadata !8687, metadata !DIExpression()), !dbg !8690
  call void @llvm.dbg.value(metadata i8* %0, metadata !8688, metadata !DIExpression()), !dbg !8690
  call void @llvm.dbg.value(metadata i8* %1, metadata !8689, metadata !DIExpression()), !dbg !8690
  %4 = ptrtoint i8* %0 to i32, !dbg !8691
  %5 = ptrtoint i8* %1 to i32, !dbg !8691
  %6 = sub i32 %4, %5, !dbg !8691
  %7 = icmp ult i32 %6, %2, !dbg !8693
  br i1 %7, label %10, label %8, !dbg !8694

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8689, metadata !DIExpression()), !dbg !8690
  call void @llvm.dbg.value(metadata i8* %0, metadata !8688, metadata !DIExpression()), !dbg !8690
  call void @llvm.dbg.value(metadata i32 %2, metadata !8687, metadata !DIExpression()), !dbg !8690
  %9 = icmp eq i32 %2, 0, !dbg !8695
  br i1 %9, label %26, label %17, !dbg !8697

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8687, metadata !DIExpression()), !dbg !8690
  %12 = add i32 %11, -1, !dbg !8698
  call void @llvm.dbg.value(metadata i32 %12, metadata !8687, metadata !DIExpression()), !dbg !8690
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8701
  %14 = load i8, i8* %13, align 1, !dbg !8701
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8702
  store i8 %14, i8* %15, align 1, !dbg !8703
  %16 = icmp eq i32 %12, 0, !dbg !8704
  br i1 %16, label %26, label %10, !dbg !8705, !llvm.loop !8706

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8689, metadata !DIExpression()), !dbg !8690
  call void @llvm.dbg.value(metadata i8* %19, metadata !8688, metadata !DIExpression()), !dbg !8690
  call void @llvm.dbg.value(metadata i32 %20, metadata !8687, metadata !DIExpression()), !dbg !8690
  %21 = load i8, i8* %18, align 1, !dbg !8708
  store i8 %21, i8* %19, align 1, !dbg !8710
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8711
  call void @llvm.dbg.value(metadata i8* %22, metadata !8688, metadata !DIExpression()), !dbg !8690
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8712
  call void @llvm.dbg.value(metadata i8* %23, metadata !8689, metadata !DIExpression()), !dbg !8690
  %24 = add i32 %20, -1, !dbg !8713
  call void @llvm.dbg.value(metadata i32 %24, metadata !8687, metadata !DIExpression()), !dbg !8690
  %25 = icmp eq i32 %24, 0, !dbg !8695
  br i1 %25, label %26, label %17, !dbg !8697, !llvm.loop !8714

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8716
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8717 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8723, metadata !DIExpression()), !dbg !8728
  call void @llvm.dbg.value(metadata i8* %1, metadata !8724, metadata !DIExpression()), !dbg !8728
  call void @llvm.dbg.value(metadata i32 %2, metadata !8725, metadata !DIExpression()), !dbg !8728
  call void @llvm.dbg.value(metadata i8* %0, metadata !8726, metadata !DIExpression()), !dbg !8728
  call void @llvm.dbg.value(metadata i8* %1, metadata !8727, metadata !DIExpression()), !dbg !8728
  %4 = icmp eq i32 %2, 0, !dbg !8729
  br i1 %4, label %14, label %5, !dbg !8730

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8727, metadata !DIExpression()), !dbg !8728
  call void @llvm.dbg.value(metadata i8* %7, metadata !8726, metadata !DIExpression()), !dbg !8728
  call void @llvm.dbg.value(metadata i32 %8, metadata !8725, metadata !DIExpression()), !dbg !8728
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8731
  call void @llvm.dbg.value(metadata i8* %9, metadata !8727, metadata !DIExpression()), !dbg !8728
  %10 = load i8, i8* %6, align 1, !dbg !8733
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8734
  call void @llvm.dbg.value(metadata i8* %11, metadata !8726, metadata !DIExpression()), !dbg !8728
  store i8 %10, i8* %7, align 1, !dbg !8735
  %12 = add i32 %8, -1, !dbg !8736
  call void @llvm.dbg.value(metadata i32 %12, metadata !8725, metadata !DIExpression()), !dbg !8728
  %13 = icmp eq i32 %12, 0, !dbg !8729
  br i1 %13, label %14, label %5, !dbg !8730, !llvm.loop !8737

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8739
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8740 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8744, metadata !DIExpression()), !dbg !8749
  call void @llvm.dbg.value(metadata i32 %1, metadata !8745, metadata !DIExpression()), !dbg !8749
  call void @llvm.dbg.value(metadata i32 %2, metadata !8746, metadata !DIExpression()), !dbg !8749
  call void @llvm.dbg.value(metadata i8* %0, metadata !8747, metadata !DIExpression()), !dbg !8749
  %4 = trunc i32 %1 to i8, !dbg !8750
  call void @llvm.dbg.value(metadata i8 %4, metadata !8748, metadata !DIExpression()), !dbg !8749
  call void @llvm.dbg.value(metadata i32 %2, metadata !8746, metadata !DIExpression()), !dbg !8749
  call void @llvm.dbg.value(metadata i8* %0, metadata !8747, metadata !DIExpression()), !dbg !8749
  %5 = icmp eq i32 %2, 0, !dbg !8751
  br i1 %5, label %12, label %6, !dbg !8752

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8746, metadata !DIExpression()), !dbg !8749
  call void @llvm.dbg.value(metadata i8* %8, metadata !8747, metadata !DIExpression()), !dbg !8749
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8753
  call void @llvm.dbg.value(metadata i8* %9, metadata !8747, metadata !DIExpression()), !dbg !8749
  store i8 %4, i8* %8, align 1, !dbg !8755
  %10 = add i32 %7, -1, !dbg !8756
  call void @llvm.dbg.value(metadata i32 %10, metadata !8746, metadata !DIExpression()), !dbg !8749
  %11 = icmp eq i32 %10, 0, !dbg !8751
  br i1 %11, label %12, label %6, !dbg !8752, !llvm.loop !8757

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8759
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #9 !dbg !8760 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8764, metadata !DIExpression()), !dbg !8770
  call void @llvm.dbg.value(metadata i32 %1, metadata !8765, metadata !DIExpression()), !dbg !8770
  call void @llvm.dbg.value(metadata i32 %2, metadata !8766, metadata !DIExpression()), !dbg !8770
  %4 = icmp eq i32 %2, 0, !dbg !8771
  br i1 %4, label %17, label %5, !dbg !8772

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8773

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8774
  call void @llvm.dbg.value(metadata i8* %9, metadata !8767, metadata !DIExpression()), !dbg !8774
  call void @llvm.dbg.value(metadata i32 %8, metadata !8766, metadata !DIExpression()), !dbg !8770
  call void @llvm.dbg.value(metadata i8* %9, metadata !8767, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8774
  %10 = load i8, i8* %9, align 1, !dbg !8775
  %11 = icmp eq i8 %10, %6, !dbg !8778
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8779
  call void @llvm.dbg.value(metadata i8* %12, metadata !8767, metadata !DIExpression()), !dbg !8774
  call void @llvm.dbg.value(metadata i32 %13, metadata !8766, metadata !DIExpression()), !dbg !8770
  br i1 %15, label %16, label %7, !dbg !8779, !llvm.loop !8780

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8782

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8770
  ret i8* %19, !dbg !8783
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #6 !dbg !8784 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8786, metadata !DIExpression()), !dbg !8787
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8788
  ret void, !dbg !8789
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !8790 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8792, metadata !DIExpression()), !dbg !8793
  ret i32 -1, !dbg !8794
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8795 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8799, metadata !DIExpression()), !dbg !8801
  call void @llvm.dbg.value(metadata i32* %1, metadata !8800, metadata !DIExpression()), !dbg !8801
  %3 = ptrtoint i32* %1 to i32, !dbg !8802
  %4 = and i32 %3, -2, !dbg !8802
  %5 = icmp eq i32 %4, 2, !dbg !8802
  br i1 %5, label %6, label %9, !dbg !8802

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8803
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8803
  br label %9, !dbg !8804

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8804
  ret i32 %10, !dbg !8805
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8806 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8808, metadata !DIExpression()), !dbg !8810
  call void @llvm.dbg.value(metadata i32* %1, metadata !8809, metadata !DIExpression()), !dbg !8810
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8811
  ret i32 %3, !dbg !8812
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8813 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8816, metadata !DIExpression()), !dbg !8818
  call void @llvm.dbg.value(metadata i32* %1, metadata !8817, metadata !DIExpression()), !dbg !8818
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8819, !srcloc !8821
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8822
  ret i32 %3, !dbg !8823
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8824 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8829, metadata !DIExpression()), !dbg !8833
  call void @llvm.dbg.value(metadata i32* %1, metadata !8830, metadata !DIExpression()), !dbg !8833
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8834
  call void @llvm.dbg.value(metadata i32 %3, metadata !8831, metadata !DIExpression()), !dbg !8833
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8835
  call void @llvm.dbg.value(metadata i32 %4, metadata !8832, metadata !DIExpression()), !dbg !8833
  %5 = icmp ne i32 %3, %4, !dbg !8836
  %6 = sext i1 %5 to i32, !dbg !8837
  ret i32 %6, !dbg !8838
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8839 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8843, metadata !DIExpression()), !dbg !8847
  call void @llvm.dbg.value(metadata i32 %1, metadata !8844, metadata !DIExpression()), !dbg !8847
  call void @llvm.dbg.value(metadata i32 %2, metadata !8845, metadata !DIExpression()), !dbg !8847
  call void @llvm.dbg.value(metadata i32* %3, metadata !8846, metadata !DIExpression()), !dbg !8847
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8848
  ret i32 %5, !dbg !8849
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8850 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8852, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.value(metadata i32 %1, metadata !8853, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.value(metadata i32 %2, metadata !8854, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.value(metadata i32* %3, metadata !8855, metadata !DIExpression()), !dbg !8856
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8857, !srcloc !8859
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8860
  ret i32 %5, !dbg !8861
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8862 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8864, metadata !DIExpression()), !dbg !8872
  call void @llvm.dbg.value(metadata i32 %1, metadata !8865, metadata !DIExpression()), !dbg !8872
  call void @llvm.dbg.value(metadata i32 %2, metadata !8866, metadata !DIExpression()), !dbg !8872
  call void @llvm.dbg.value(metadata i32* %3, metadata !8867, metadata !DIExpression()), !dbg !8872
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8873
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8875
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8875
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8875
  br i1 %11, label %33, label %12, !dbg !8875

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8872
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8872
  call void @llvm.dbg.value(metadata i8* %14, metadata !8870, metadata !DIExpression()), !dbg !8872
  call void @llvm.dbg.value(metadata i32 %13, metadata !8868, metadata !DIExpression()), !dbg !8872
  call void @llvm.dbg.value(metadata i32 %1, metadata !8869, metadata !DIExpression()), !dbg !8872
  br label %15, !dbg !8876

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8878
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8872
  call void @llvm.dbg.value(metadata i8* %17, metadata !8870, metadata !DIExpression()), !dbg !8872
  call void @llvm.dbg.value(metadata i32 %16, metadata !8869, metadata !DIExpression()), !dbg !8872
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8879
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8882
  call void @llvm.dbg.value(metadata i8* %19, metadata !8870, metadata !DIExpression()), !dbg !8872
  %20 = load i8, i8* %17, align 1, !dbg !8883
  %21 = zext i8 %20 to i32, !dbg !8884
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8879
  %23 = icmp eq i32 %22, -1, !dbg !8885
  br i1 %23, label %30, label %24, !dbg !8886

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8887
  call void @llvm.dbg.value(metadata i32 %25, metadata !8869, metadata !DIExpression()), !dbg !8872
  %26 = icmp eq i32 %25, 0, !dbg !8888
  br i1 %26, label %27, label %15, !dbg !8889, !llvm.loop !8890

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8892
  call void @llvm.dbg.value(metadata i32 %28, metadata !8868, metadata !DIExpression()), !dbg !8872
  %29 = icmp eq i32 %28, 0, !dbg !8893
  br i1 %29, label %30, label %12, !dbg !8894, !llvm.loop !8895

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8872
  call void @llvm.dbg.value(metadata i32 %31, metadata !8868, metadata !DIExpression()), !dbg !8872
  call void @llvm.dbg.label(metadata !8871), !dbg !8898
  %32 = sub i32 %2, %31, !dbg !8899
  br label %33, !dbg !8900

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8872
  ret i32 %34, !dbg !8901
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8902 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8906, metadata !DIExpression()), !dbg !8907
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8908
  %3 = icmp eq i32 %2, -1, !dbg !8910
  br i1 %3, label %8, label %4, !dbg !8911

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8912
  %6 = icmp eq i32 %5, -1, !dbg !8913
  %7 = sext i1 %6 to i32, !dbg !8912
  br label %8, !dbg !8914

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8907
  ret i32 %9, !dbg !8915
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @rtio_simple_submit(%struct.rtio* noundef %0) #1 !dbg !8916 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9007, metadata !DIExpression()), !dbg !9013
  %2 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9014
  %3 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9014
  %4 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %3, i32 0, i32 0, i32 3, !dbg !9014
  %5 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %4) #24, !dbg !9014
  %6 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9014
  %7 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 1, !dbg !9014
  %8 = load i32, i32* %7, align 4, !dbg !9014
  %9 = add i32 %8, %5, !dbg !9014
  call void @llvm.dbg.value(metadata i32 %9, metadata !9010, metadata !DIExpression()), !dbg !9015
  %10 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 2, !dbg !9014
  %11 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %10) #24, !dbg !9014
  %12 = icmp eq i32 %9, %11, !dbg !9014
  call void @llvm.dbg.value(metadata i1 %12, metadata !9012, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9015
  br i1 %12, label %23, label %13, !dbg !9014

13:                                               ; preds = %1
  %14 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9016
  %15 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %14, i32 0, i32 0, i32 1, !dbg !9016
  %16 = load i32, i32* %15, align 4, !dbg !9016
  %17 = add i32 %16, 1, !dbg !9016
  store i32 %17, i32* %15, align 4, !dbg !9016
  %18 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9014
  %19 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %18, i32 0, i32 0, i32 4, !dbg !9014
  %20 = load i32, i32* %19, align 4, !dbg !9014
  %21 = and i32 %20, %9, !dbg !9014
  %22 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %18, i32 0, i32 1, i32 %21, !dbg !9014
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %22, metadata !9008, metadata !DIExpression()), !dbg !9013
  tail call fastcc void @rtio_iodev_submit(%struct.rtio_sqe* noundef nonnull %22, %struct.rtio* noundef nonnull %0) #24, !dbg !9019
  br label %23, !dbg !9022

23:                                               ; preds = %1, %13
  ret i32 0, !dbg !9023
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get.90(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9024 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9026, metadata !DIExpression()), !dbg !9027
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !9028
  ret i32 %2, !dbg !9029
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_iodev_submit(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) unnamed_addr #1 !dbg !9030 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !9032, metadata !DIExpression()), !dbg !9034
  call void @llvm.dbg.value(metadata %struct.rtio* %1, metadata !9033, metadata !DIExpression()), !dbg !9034
  %3 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !9035
  %4 = load %struct.rtio_iodev*, %struct.rtio_iodev** %3, align 4, !dbg !9035
  %5 = getelementptr inbounds %struct.rtio_iodev, %struct.rtio_iodev* %4, i32 0, i32 0, !dbg !9036
  %6 = load %struct.rtio_iodev_api*, %struct.rtio_iodev_api** %5, align 4, !dbg !9036
  %7 = getelementptr inbounds %struct.rtio_iodev_api, %struct.rtio_iodev_api* %6, i32 0, i32 0, !dbg !9037
  %8 = load void (%struct.rtio_sqe*, %struct.rtio*)*, void (%struct.rtio_sqe*, %struct.rtio*)** %7, align 4, !dbg !9037
  tail call void %8(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) #25, !dbg !9038
  ret void, !dbg !9039
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_simple_ok(%struct.rtio* noundef %0, %struct.rtio_sqe* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9040 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9042, metadata !DIExpression()), !dbg !9046
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9043, metadata !DIExpression()), !dbg !9046
  call void @llvm.dbg.value(metadata i32 %2, metadata !9044, metadata !DIExpression()), !dbg !9046
  %4 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9047
  %5 = load i8*, i8** %4, align 4, !dbg !9047
  call void @llvm.dbg.value(metadata i8* %5, metadata !9045, metadata !DIExpression()), !dbg !9046
  %6 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9048
  %7 = load %struct.rtio_sq*, %struct.rtio_sq** %6, align 4, !dbg !9048
  %8 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %7, i32 0, i32 0, i32 1, !dbg !9048
  %9 = load i32, i32* %8, align 4, !dbg !9048
  %10 = icmp eq i32 %9, 0, !dbg !9048
  br i1 %10, label %15, label %11, !dbg !9051

11:                                               ; preds = %3
  %12 = add i32 %9, -1, !dbg !9052
  store i32 %12, i32* %8, align 4, !dbg !9052
  %13 = load %struct.rtio_sq*, %struct.rtio_sq** %6, align 4, !dbg !9052
  %14 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 3, !dbg !9052
  tail call fastcc void @atomic_add.93(i32* noundef nonnull %14) #24, !dbg !9052
  br label %15, !dbg !9052

15:                                               ; preds = %11, %3
  tail call fastcc void @rtio_cqe_submit(%struct.rtio* noundef nonnull %0, i32 noundef %2, i8* noundef %5) #24, !dbg !9054
  %16 = tail call i32 @rtio_simple_submit(%struct.rtio* noundef nonnull %0) #24, !dbg !9055
  ret void, !dbg !9056
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add.93(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9057 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9059, metadata !DIExpression()), !dbg !9061
  call void @llvm.dbg.value(metadata i32 1, metadata !9060, metadata !DIExpression()), !dbg !9061
  %2 = atomicrmw add i32* %0, i32 1 seq_cst, align 4, !dbg !9062
  ret void, !dbg !9063
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @rtio_cqe_submit(%struct.rtio* nocapture noundef %0, i32 noundef %1, i8* noundef %2) unnamed_addr #5 !dbg !9064 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9068, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.value(metadata i32 %1, metadata !9069, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.value(metadata i8* %2, metadata !9070, metadata !DIExpression()), !dbg !9076
  %4 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 3, !dbg !9077
  %5 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9077
  %6 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %5, i32 0, i32 0, i32 2, !dbg !9077
  %7 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %6) #24, !dbg !9077
  %8 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9077
  %9 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 0, !dbg !9077
  %10 = load i32, i32* %9, align 4, !dbg !9077
  %11 = add i32 %10, %7, !dbg !9077
  call void @llvm.dbg.value(metadata i32 %11, metadata !9073, metadata !DIExpression()), !dbg !9078
  %12 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 3, !dbg !9077
  %13 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %12) #24, !dbg !9077
  %14 = sub i32 %11, %13, !dbg !9077
  %15 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9077
  %16 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 4, !dbg !9077
  %17 = load i32, i32* %16, align 4, !dbg !9077
  %18 = add i32 %17, 1, !dbg !9077
  %19 = icmp ult i32 %14, %18, !dbg !9077
  call void @llvm.dbg.value(metadata i1 %19, metadata !9075, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9078
  br i1 %19, label %22, label %20, !dbg !9077

20:                                               ; preds = %3
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9071, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9076
  %21 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 1, !dbg !9079
  tail call fastcc void @atomic_inc(i32* noundef nonnull %21) #24, !dbg !9082
  br label %40, !dbg !9083

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 0, !dbg !9084
  %24 = load i32, i32* %23, align 4, !dbg !9084
  %25 = add i32 %24, 1, !dbg !9084
  store i32 %25, i32* %23, align 4, !dbg !9084
  %26 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9077
  %27 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 0, i32 4, !dbg !9077
  %28 = load i32, i32* %27, align 4, !dbg !9077
  %29 = and i32 %28, %11, !dbg !9077
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9071, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9076
  %30 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 0, !dbg !9087
  store i32 %1, i32* %30, align 4, !dbg !9089
  %31 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 1, !dbg !9090
  store i8* %2, i8** %31, align 4, !dbg !9091
  %32 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9092
  %33 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %32, i32 0, i32 0, i32 0, !dbg !9092
  %34 = load i32, i32* %33, align 4, !dbg !9092
  %35 = icmp eq i32 %34, 0, !dbg !9092
  br i1 %35, label %40, label %36, !dbg !9095

36:                                               ; preds = %22
  %37 = add i32 %34, -1, !dbg !9096
  store i32 %37, i32* %33, align 4, !dbg !9096
  %38 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9096
  %39 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %38, i32 0, i32 0, i32 2, !dbg !9096
  tail call fastcc void @atomic_add.93(i32* noundef nonnull %39) #24, !dbg !9096
  br label %40, !dbg !9096

40:                                               ; preds = %22, %36, %20
  ret void, !dbg !9098
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_inc(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9099 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9103, metadata !DIExpression()), !dbg !9104
  tail call fastcc void @atomic_add.93(i32* noundef %0) #24, !dbg !9105
  ret void, !dbg !9106
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_simple_err(%struct.rtio* noundef %0, %struct.rtio_sqe* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9107 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9109, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9110, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata i32 %2, metadata !9111, metadata !DIExpression()), !dbg !9124
  %4 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9125
  call void @llvm.dbg.value(metadata i8* undef, metadata !9113, metadata !DIExpression()), !dbg !9124
  %5 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 2, !dbg !9126
  %6 = load i16, i16* %5, align 2, !dbg !9126
  %7 = and i16 %6, 1, !dbg !9127
  %8 = icmp eq i16 %7, 0, !dbg !9128
  call void @llvm.dbg.value(metadata i1 %8, metadata !9114, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9124
  %9 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9129
  %10 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9129
  %11 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %10, i32 0, i32 0, i32 1, !dbg !9129
  %12 = load i32, i32* %11, align 4, !dbg !9129
  %13 = icmp eq i32 %12, 0, !dbg !9129
  br i1 %13, label %18, label %14, !dbg !9132

14:                                               ; preds = %3
  %15 = add i32 %12, -1, !dbg !9133
  store i32 %15, i32* %11, align 4, !dbg !9133
  %16 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9133
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 3, !dbg !9133
  tail call fastcc void @atomic_add.93(i32* noundef nonnull %17) #24, !dbg !9133
  br label %18, !dbg !9133

18:                                               ; preds = %14, %3
  %19 = load i8*, i8** %4, align 4, !dbg !9135
  tail call fastcc void @rtio_cqe_submit(%struct.rtio* noundef nonnull %0, i32 noundef %2, i8* noundef %19) #24, !dbg !9136
  br i1 %8, label %69, label %20, !dbg !9137

20:                                               ; preds = %18
  %21 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9138
  %22 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %21, i32 0, i32 0, i32 3, !dbg !9138
  %23 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %22) #24, !dbg !9138
  %24 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9138
  %25 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %24, i32 0, i32 0, i32 1, !dbg !9138
  %26 = load i32, i32* %25, align 4, !dbg !9138
  %27 = add i32 %26, %23, !dbg !9138
  call void @llvm.dbg.value(metadata i32 %27, metadata !9115, metadata !DIExpression()), !dbg !9139
  %28 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %24, i32 0, i32 0, i32 2, !dbg !9138
  %29 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %28) #24, !dbg !9138
  %30 = icmp eq i32 %27, %29, !dbg !9138
  call void @llvm.dbg.value(metadata i1 %30, metadata !9119, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9139
  br i1 %30, label %71, label %31, !dbg !9138

31:                                               ; preds = %20, %56
  %32 = phi i32 [ %63, %56 ], [ %27, %20 ]
  %33 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9140
  %34 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %33, i32 0, i32 0, i32 1, !dbg !9140
  %35 = load i32, i32* %34, align 4, !dbg !9140
  %36 = add i32 %35, 1, !dbg !9140
  store i32 %36, i32* %34, align 4, !dbg !9140
  %37 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9140
  %38 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 0, i32 4, !dbg !9140
  %39 = load i32, i32* %38, align 4, !dbg !9140
  %40 = and i32 %39, %32, !dbg !9140
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_sq* %37, i32 %40), metadata !9112, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 20, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9124
  %41 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 1, i32 %40, i32 2, !dbg !9141
  %42 = load i16, i16* %41, align 2, !dbg !9141
  %43 = and i16 %42, 1, !dbg !9142
  %44 = icmp eq i16 %43, 0, !dbg !9143
  br i1 %44, label %67, label %45, !dbg !9144

45:                                               ; preds = %31
  %46 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 1, i32 %40, i32 4, !dbg !9145
  %47 = load i8*, i8** %46, align 4, !dbg !9145
  call void @llvm.dbg.value(metadata i8* %47, metadata !9113, metadata !DIExpression()), !dbg !9124
  %48 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9146
  %49 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %48, i32 0, i32 0, i32 1, !dbg !9146
  %50 = load i32, i32* %49, align 4, !dbg !9146
  %51 = icmp eq i32 %50, 0, !dbg !9146
  br i1 %51, label %56, label %52, !dbg !9149

52:                                               ; preds = %45
  %53 = add i32 %50, -1, !dbg !9150
  store i32 %53, i32* %49, align 4, !dbg !9150
  %54 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9150
  %55 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %54, i32 0, i32 0, i32 3, !dbg !9150
  tail call fastcc void @atomic_add.93(i32* noundef nonnull %55) #24, !dbg !9150
  br label %56, !dbg !9150

56:                                               ; preds = %52, %45
  tail call fastcc void @rtio_cqe_submit(%struct.rtio* noundef nonnull %0, i32 noundef -140, i8* noundef %47) #24, !dbg !9152
  %57 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9153
  %58 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %57, i32 0, i32 0, i32 3, !dbg !9153
  %59 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %58) #24, !dbg !9153
  %60 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9153
  %61 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %60, i32 0, i32 0, i32 1, !dbg !9153
  %62 = load i32, i32* %61, align 4, !dbg !9153
  %63 = add i32 %62, %59, !dbg !9153
  call void @llvm.dbg.value(metadata i32 %63, metadata !9120, metadata !DIExpression()), !dbg !9154
  %64 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %60, i32 0, i32 0, i32 2, !dbg !9153
  %65 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %64) #24, !dbg !9153
  %66 = icmp eq i32 %63, %65, !dbg !9153
  call void @llvm.dbg.value(metadata i1 %66, metadata !9123, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9154
  br i1 %66, label %71, label %31, !dbg !9153

67:                                               ; preds = %31
  %68 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 1, i32 %40, !dbg !9140
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %68, metadata !9112, metadata !DIExpression()), !dbg !9124
  tail call fastcc void @rtio_iodev_submit(%struct.rtio_sqe* noundef nonnull %68, %struct.rtio* noundef nonnull %0) #24, !dbg !9155
  br label %71, !dbg !9158

69:                                               ; preds = %18
  %70 = tail call i32 @rtio_simple_submit(%struct.rtio* noundef nonnull %0) #24, !dbg !9159
  br label %71

71:                                               ; preds = %56, %20, %67, %69
  ret void, !dbg !9161
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @rtio_concurrent_submit(%struct.rtio* noundef %0) local_unnamed_addr #1 !dbg !9162 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9164, metadata !DIExpression()), !dbg !9195
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.98, i32 0, i32 0), i32 noundef 73) #25, !dbg !9196
  %2 = bitcast %struct.rtio* %0 to %struct.rtio_concurrent_executor**, !dbg !9201
  %3 = load %struct.rtio_concurrent_executor*, %struct.rtio_concurrent_executor** %2, align 4, !dbg !9201
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %3, metadata !9165, metadata !DIExpression()), !dbg !9195
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9202, metadata !DIExpression()) #23, !dbg !9209
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9211, !srcloc !9217
  call void @llvm.dbg.value(metadata i32 undef, metadata !9214, metadata !DIExpression()) #23, !dbg !9218
  call void @llvm.dbg.value(metadata i32 undef, metadata !9215, metadata !DIExpression()) #23, !dbg !9218
  call void @llvm.dbg.value(metadata i32 undef, metadata !9208, metadata !DIExpression()) #23, !dbg !9209
  call void @llvm.dbg.value(metadata i32 undef, metadata !9168, metadata !DIExpression()), !dbg !9195
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 6, !dbg !9219
  %6 = load %struct.rtio_sqe*, %struct.rtio_sqe** %5, align 4, !dbg !9219
  %7 = icmp eq %struct.rtio_sqe* %6, null, !dbg !9220
  %8 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9221
  %9 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9221
  br i1 %7, label %10, label %26, !dbg !9222

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 3, !dbg !9223
  %12 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %11) #24, !dbg !9223
  %13 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9223
  %14 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 1, !dbg !9223
  %15 = load i32, i32* %14, align 4, !dbg !9223
  %16 = add i32 %15, %12, !dbg !9223
  call void @llvm.dbg.value(metadata i32 %16, metadata !9173, metadata !DIExpression()), !dbg !9224
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 2, !dbg !9223
  %18 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %17) #24, !dbg !9223
  %19 = icmp eq i32 %16, %18, !dbg !9223
  call void @llvm.dbg.value(metadata i1 %19, metadata !9177, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9224
  br i1 %19, label %45, label %20, !dbg !9223

20:                                               ; preds = %10
  %21 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9223
  %22 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %21, i32 0, i32 0, i32 4, !dbg !9223
  %23 = load i32, i32* %22, align 4, !dbg !9223
  %24 = and i32 %23, %16, !dbg !9223
  %25 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %21, i32 0, i32 1, i32 %24, !dbg !9223
  br label %47, !dbg !9223

26:                                               ; preds = %1
  %27 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 1, i32 0, !dbg !9225
  %28 = ptrtoint %struct.rtio_sqe* %6 to i32, !dbg !9225
  %29 = ptrtoint %struct.rtio_sqe* %27 to i32, !dbg !9225
  %30 = sub i32 %28, %29, !dbg !9225
  %31 = sdiv exact i32 %30, 20, !dbg !9225
  call void @llvm.dbg.value(metadata i32 %31, metadata !9178, metadata !DIExpression()), !dbg !9226
  %32 = add nsw i32 %31, 1, !dbg !9225
  %33 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 4, !dbg !9225
  %34 = load i32, i32* %33, align 4, !dbg !9225
  %35 = and i32 %32, %34, !dbg !9225
  %36 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 2, !dbg !9225
  %37 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %36) #24, !dbg !9225
  %38 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9225
  %39 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %38, i32 0, i32 0, i32 4, !dbg !9225
  %40 = load i32, i32* %39, align 4, !dbg !9225
  %41 = and i32 %40, %37, !dbg !9225
  %42 = icmp eq i32 %35, %41, !dbg !9225
  call void @llvm.dbg.value(metadata i1 %42, metadata !9181, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9226
  %43 = and i32 %32, %40, !dbg !9225
  %44 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %38, i32 0, i32 1, i32 %43, !dbg !9225
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9166, metadata !DIExpression()), !dbg !9195
  br i1 %42, label %45, label %47

45:                                               ; preds = %26, %10
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9166, metadata !DIExpression()), !dbg !9195
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9167, metadata !DIExpression()), !dbg !9195
  %46 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 5, !dbg !9227
  store %struct.rtio_sqe* null, %struct.rtio_sqe** %46, align 4, !dbg !9228
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %112, metadata !9166, metadata !DIExpression()), !dbg !9195
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %111, metadata !9167, metadata !DIExpression()), !dbg !9195
  br label %140, !dbg !9229

47:                                               ; preds = %20, %26
  %48 = phi %struct.rtio_sqe* [ %44, %26 ], [ %25, %20 ], !dbg !9221
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9166, metadata !DIExpression()), !dbg !9195
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9167, metadata !DIExpression()), !dbg !9195
  %49 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 8
  %50 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 7
  %51 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9166, metadata !DIExpression()), !dbg !9195
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9167, metadata !DIExpression()), !dbg !9195
  %52 = tail call fastcc zeroext i1 @conex_task_free(%struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9230
  br i1 %52, label %55, label %110, !dbg !9231

53:                                               ; preds = %89
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %109, metadata !9166, metadata !DIExpression()), !dbg !9195
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %90, metadata !9167, metadata !DIExpression()), !dbg !9195
  %54 = tail call fastcc zeroext i1 @conex_task_free(%struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9230
  br i1 %54, label %55, label %110, !dbg !9231

55:                                               ; preds = %47, %53
  %56 = phi %struct.rtio_sqe* [ %109, %53 ], [ %48, %47 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %56, metadata !9166, metadata !DIExpression()), !dbg !9195
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.100, i32 0, i32 0), i32 noundef 73, %struct.rtio_sqe* noundef nonnull %56) #25, !dbg !9232
  %57 = tail call fastcc zeroext i16 @conex_task_next(%struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9237
  call void @llvm.dbg.value(metadata i16 %57, metadata !9182, metadata !DIExpression()), !dbg !9238
  %58 = zext i16 %57 to i32, !dbg !9239
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.101, i32 0, i32 0), i32 noundef 73, i32 noundef %58) #25, !dbg !9239
  %59 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %49, align 4, !dbg !9244
  %60 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %59, i32 %58, !dbg !9245
  store %struct.rtio_sqe* %56, %struct.rtio_sqe** %60, align 4, !dbg !9246
  %61 = load i8*, i8** %50, align 4, !dbg !9247
  %62 = getelementptr inbounds i8, i8* %61, i32 %58, !dbg !9248
  store i8 2, i8* %62, align 1, !dbg !9249
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.102, i32 0, i32 0), i32 noundef 73, %struct.rtio_sqe* noundef nonnull %56) #25, !dbg !9250
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %56, metadata !9166, metadata !DIExpression()), !dbg !9195
  br label %63, !dbg !9255

63:                                               ; preds = %55, %69
  %64 = phi %struct.rtio_sqe* [ %56, %55 ], [ %88, %69 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %64, metadata !9166, metadata !DIExpression()), !dbg !9195
  %65 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %64, i32 0, i32 2, !dbg !9256
  %66 = load i16, i16* %65, align 2, !dbg !9256
  %67 = and i16 %66, 1, !dbg !9257
  %68 = icmp eq i16 %67, 0, !dbg !9255
  br i1 %68, label %89, label %69, !dbg !9258

69:                                               ; preds = %63
  %70 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9259
  %71 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %70, i32 0, i32 1, i32 0, !dbg !9259
  %72 = ptrtoint %struct.rtio_sqe* %64 to i32, !dbg !9259
  %73 = ptrtoint %struct.rtio_sqe* %71 to i32, !dbg !9259
  %74 = sub i32 %72, %73, !dbg !9259
  %75 = sdiv exact i32 %74, 20, !dbg !9259
  call void @llvm.dbg.value(metadata i32 %75, metadata !9184, metadata !DIExpression()), !dbg !9260
  %76 = add nsw i32 %75, 1, !dbg !9259
  %77 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %70, i32 0, i32 0, i32 4, !dbg !9259
  %78 = load i32, i32* %77, align 4, !dbg !9259
  %79 = and i32 %76, %78, !dbg !9259
  %80 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %70, i32 0, i32 0, i32 2, !dbg !9259
  %81 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %80) #24, !dbg !9259
  %82 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9259
  %83 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %82, i32 0, i32 0, i32 4, !dbg !9259
  %84 = load i32, i32* %83, align 4, !dbg !9259
  %85 = and i32 %84, %81, !dbg !9259
  %86 = icmp eq i32 %79, %85, !dbg !9259
  call void @llvm.dbg.value(metadata i1 %86, metadata !9187, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9260
  %87 = and i32 %76, %84, !dbg !9259
  %88 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %82, i32 0, i32 1, i32 %87, !dbg !9259
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9166, metadata !DIExpression()), !dbg !9195
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9166, metadata !DIExpression()), !dbg !9195
  br i1 %86, label %89, label %63, !dbg !9255

89:                                               ; preds = %63, %69
  %90 = phi %struct.rtio_sqe* [ null, %69 ], [ %64, %63 ], !dbg !9195
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.103, i32 0, i32 0), i32 noundef 73, %struct.rtio_sqe* noundef %90) #25, !dbg !9261
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %90, metadata !9167, metadata !DIExpression()), !dbg !9195
  %91 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9266
  %92 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %91, i32 0, i32 1, i32 0, !dbg !9266
  %93 = ptrtoint %struct.rtio_sqe* %90 to i32, !dbg !9266
  %94 = ptrtoint %struct.rtio_sqe* %92 to i32, !dbg !9266
  %95 = sub i32 %93, %94, !dbg !9266
  %96 = sdiv exact i32 %95, 20, !dbg !9266
  call void @llvm.dbg.value(metadata i32 %96, metadata !9188, metadata !DIExpression()), !dbg !9267
  %97 = add nsw i32 %96, 1, !dbg !9266
  %98 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %91, i32 0, i32 0, i32 4, !dbg !9266
  %99 = load i32, i32* %98, align 4, !dbg !9266
  %100 = and i32 %97, %99, !dbg !9266
  %101 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %91, i32 0, i32 0, i32 2, !dbg !9266
  %102 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %101) #24, !dbg !9266
  %103 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9266
  %104 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %103, i32 0, i32 0, i32 4, !dbg !9266
  %105 = load i32, i32* %104, align 4, !dbg !9266
  %106 = and i32 %105, %102, !dbg !9266
  %107 = icmp eq i32 %100, %106, !dbg !9266
  call void @llvm.dbg.value(metadata i1 %107, metadata !9190, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9267
  %108 = and i32 %97, %105, !dbg !9266
  %109 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %103, i32 0, i32 1, i32 %108, !dbg !9266
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9166, metadata !DIExpression()), !dbg !9195
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9166, metadata !DIExpression()), !dbg !9195
  br i1 %107, label %110, label %53, !dbg !9268

110:                                              ; preds = %89, %53, %47
  %111 = phi %struct.rtio_sqe* [ %48, %47 ], [ %90, %53 ], [ %90, %89 ], !dbg !9195
  %112 = phi %struct.rtio_sqe* [ %48, %47 ], [ null, %89 ], [ %109, %53 ], !dbg !9195
  %113 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 5, !dbg !9227
  store %struct.rtio_sqe* %112, %struct.rtio_sqe** %113, align 4, !dbg !9228
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %112, metadata !9166, metadata !DIExpression()), !dbg !9195
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %111, metadata !9167, metadata !DIExpression()), !dbg !9195
  %114 = icmp eq %struct.rtio_sqe* %112, null, !dbg !9269
  br i1 %114, label %140, label %115, !dbg !9229

115:                                              ; preds = %110
  %116 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2
  %117 = load %struct.rtio_sq*, %struct.rtio_sq** %116, align 4, !dbg !9270
  %118 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %117, i32 0, i32 0, i32 4
  %119 = load i32, i32* %118, align 4, !dbg !9270
  br label %120, !dbg !9229

120:                                              ; preds = %115, %120
  %121 = phi i32 [ %119, %115 ], [ %135, %120 ], !dbg !9270
  %122 = phi %struct.rtio_sq* [ %117, %115 ], [ %133, %120 ], !dbg !9270
  %123 = phi %struct.rtio_sqe* [ %112, %115 ], [ %139, %120 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %123, metadata !9166, metadata !DIExpression()), !dbg !9195
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %123, metadata !9167, metadata !DIExpression()), !dbg !9195
  %124 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %122, i32 0, i32 1, i32 0, !dbg !9270
  %125 = ptrtoint %struct.rtio_sqe* %123 to i32, !dbg !9270
  %126 = ptrtoint %struct.rtio_sqe* %124 to i32, !dbg !9270
  %127 = sub i32 %125, %126, !dbg !9270
  %128 = sdiv exact i32 %127, 20, !dbg !9270
  call void @llvm.dbg.value(metadata i32 %128, metadata !9191, metadata !DIExpression()), !dbg !9271
  %129 = add nsw i32 %128, 1, !dbg !9270
  %130 = and i32 %129, %121, !dbg !9270
  %131 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %122, i32 0, i32 0, i32 2, !dbg !9270
  %132 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %131) #24, !dbg !9270
  %133 = load %struct.rtio_sq*, %struct.rtio_sq** %116, align 4, !dbg !9270
  %134 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %133, i32 0, i32 0, i32 4, !dbg !9270
  %135 = load i32, i32* %134, align 4, !dbg !9270
  %136 = and i32 %135, %132, !dbg !9270
  %137 = icmp eq i32 %130, %136, !dbg !9270
  call void @llvm.dbg.value(metadata i1 %137, metadata !9194, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9271
  %138 = and i32 %129, %135, !dbg !9270
  %139 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %133, i32 0, i32 1, i32 %138, !dbg !9270
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9166, metadata !DIExpression()), !dbg !9195
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9166, metadata !DIExpression()), !dbg !9195
  br i1 %137, label %140, label %120, !dbg !9229

140:                                              ; preds = %120, %45, %110
  %141 = phi %struct.rtio_sqe* [ %111, %110 ], [ null, %45 ], [ %123, %120 ], !dbg !9195
  %142 = extractvalue { i32, i32 } %4, 0, !dbg !9211
  call void @llvm.dbg.value(metadata i32 %142, metadata !9214, metadata !DIExpression()) #23, !dbg !9218
  call void @llvm.dbg.value(metadata i32 %142, metadata !9208, metadata !DIExpression()) #23, !dbg !9209
  call void @llvm.dbg.value(metadata i32 %142, metadata !9168, metadata !DIExpression()), !dbg !9195
  store %struct.rtio_sqe* %141, %struct.rtio_sqe** %5, align 4, !dbg !9272
  tail call fastcc void @conex_resume(%struct.rtio* noundef nonnull %0, %struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9273
  call void @llvm.dbg.value(metadata i32 undef, metadata !9274, metadata !DIExpression()) #23, !dbg !9280
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9279, metadata !DIExpression()) #23, !dbg !9280
  call void @llvm.dbg.value(metadata i32 undef, metadata !9282, metadata !DIExpression()) #23, !dbg !9285
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %142) #23, !dbg !9287, !srcloc !9288
  ret i32 0, !dbg !9289
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get.99(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9290 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9292, metadata !DIExpression()), !dbg !9293
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !9294
  ret i32 %2, !dbg !9295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @conex_task_free(%struct.rtio_concurrent_executor* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9296 {
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %0, metadata !9300, metadata !DIExpression()), !dbg !9301
  %2 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 2, !dbg !9302
  %3 = load i16, i16* %2, align 4, !dbg !9302
  %4 = zext i16 %3 to i32, !dbg !9303
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 3, !dbg !9304
  %6 = load i16, i16* %5, align 2, !dbg !9304
  %7 = zext i16 %6 to i32, !dbg !9305
  %8 = sub nsw i32 %4, %7, !dbg !9306
  %9 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 4, !dbg !9307
  %10 = load i16, i16* %9, align 4, !dbg !9307
  %11 = zext i16 %10 to i32, !dbg !9308
  %12 = icmp sle i32 %8, %11, !dbg !9309
  ret i1 %12, !dbg !9310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc zeroext i16 @conex_task_next(%struct.rtio_concurrent_executor* nocapture noundef %0) unnamed_addr #11 !dbg !9311 {
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %0, metadata !9315, metadata !DIExpression()), !dbg !9317
  %2 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 2, !dbg !9318
  %3 = load i16, i16* %2, align 4, !dbg !9318
  call void @llvm.dbg.value(metadata i16 %3, metadata !9316, metadata !DIExpression()), !dbg !9317
  %4 = add i16 %3, 1, !dbg !9319
  store i16 %4, i16* %2, align 4, !dbg !9319
  ret i16 %3, !dbg !9320
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @conex_resume(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9321 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9325, metadata !DIExpression()), !dbg !9329
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %1, metadata !9326, metadata !DIExpression()), !dbg !9329
  %3 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 3, !dbg !9330
  %4 = load i16, i16* %3, align 2, !dbg !9330
  call void @llvm.dbg.value(metadata i16 %4, metadata !9327, metadata !DIExpression()), !dbg !9331
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 2
  call void @llvm.dbg.value(metadata i16 %4, metadata !9327, metadata !DIExpression()), !dbg !9331
  %6 = load i16, i16* %5, align 4, !dbg !9332
  %7 = icmp ult i16 %4, %6, !dbg !9334
  br i1 %7, label %8, label %13, !dbg !9335

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 7
  %10 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 4
  %11 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 8
  %12 = zext i16 %4 to i32, !dbg !9335
  br label %14, !dbg !9335

13:                                               ; preds = %35, %2
  ret void, !dbg !9336

14:                                               ; preds = %8, %35
  %15 = phi i16 [ %6, %8 ], [ %36, %35 ]
  %16 = phi i32 [ %12, %8 ], [ %37, %35 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !9327, metadata !DIExpression()), !dbg !9331
  %17 = load i8*, i8** %9, align 4, !dbg !9337
  %18 = load i16, i16* %10, align 4, !dbg !9340
  %19 = trunc i32 %16 to i16, !dbg !9341
  %20 = and i16 %18, %19, !dbg !9341
  %21 = zext i16 %20 to i32, !dbg !9341
  %22 = getelementptr inbounds i8, i8* %17, i32 %21, !dbg !9342
  %23 = load i8, i8* %22, align 1, !dbg !9342
  %24 = and i8 %23, 2, !dbg !9343
  %25 = icmp eq i8 %24, 0, !dbg !9343
  br i1 %25, label %35, label %26, !dbg !9344

26:                                               ; preds = %14
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6.104, i32 0, i32 0), i32 noundef 73, i32 noundef %16) #25, !dbg !9345
  %27 = load i8*, i8** %9, align 4, !dbg !9351
  %28 = getelementptr inbounds i8, i8* %27, i32 %16, !dbg !9352
  %29 = load i8, i8* %28, align 1, !dbg !9353
  %30 = and i8 %29, -3, !dbg !9353
  store i8 %30, i8* %28, align 1, !dbg !9353
  %31 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %11, align 4, !dbg !9354
  %32 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %31, i32 %16, !dbg !9355
  %33 = load %struct.rtio_sqe*, %struct.rtio_sqe** %32, align 4, !dbg !9355
  tail call fastcc void @rtio_iodev_submit.105(%struct.rtio_sqe* noundef %33, %struct.rtio* noundef %0) #24, !dbg !9356
  %34 = load i16, i16* %5, align 4, !dbg !9332
  br label %35, !dbg !9357

35:                                               ; preds = %14, %26
  %36 = phi i16 [ %15, %14 ], [ %34, %26 ], !dbg !9332
  %37 = add nuw nsw i32 %16, 1, !dbg !9358
  call void @llvm.dbg.value(metadata i32 %37, metadata !9327, metadata !DIExpression()), !dbg !9331
  %38 = zext i16 %36 to i32, !dbg !9334
  %39 = icmp ult i32 %37, %38, !dbg !9334
  br i1 %39, label %14, label %13, !dbg !9335, !llvm.loop !9359
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_iodev_submit.105(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) unnamed_addr #1 !dbg !9361 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !9363, metadata !DIExpression()), !dbg !9365
  call void @llvm.dbg.value(metadata %struct.rtio* %1, metadata !9364, metadata !DIExpression()), !dbg !9365
  %3 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !9366
  %4 = load %struct.rtio_iodev*, %struct.rtio_iodev** %3, align 4, !dbg !9366
  %5 = getelementptr inbounds %struct.rtio_iodev, %struct.rtio_iodev* %4, i32 0, i32 0, !dbg !9367
  %6 = load %struct.rtio_iodev_api*, %struct.rtio_iodev_api** %5, align 4, !dbg !9367
  %7 = getelementptr inbounds %struct.rtio_iodev_api, %struct.rtio_iodev_api* %6, i32 0, i32 0, !dbg !9368
  %8 = load void (%struct.rtio_sqe*, %struct.rtio*)*, void (%struct.rtio_sqe*, %struct.rtio*)** %7, align 4, !dbg !9368
  tail call void %8(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) #25, !dbg !9369
  ret void, !dbg !9370
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_concurrent_ok(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9371 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9373, metadata !DIExpression()), !dbg !9385
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9374, metadata !DIExpression()), !dbg !9385
  call void @llvm.dbg.value(metadata i32 %2, metadata !9375, metadata !DIExpression()), !dbg !9385
  %4 = bitcast %struct.rtio* %0 to %struct.rtio_concurrent_executor**, !dbg !9386
  %5 = load %struct.rtio_concurrent_executor*, %struct.rtio_concurrent_executor** %4, align 4, !dbg !9386
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %5, metadata !9378, metadata !DIExpression()), !dbg !9385
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9202, metadata !DIExpression()) #23, !dbg !9387
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9389, !srcloc !9217
  call void @llvm.dbg.value(metadata i32 undef, metadata !9214, metadata !DIExpression()) #23, !dbg !9391
  call void @llvm.dbg.value(metadata i32 undef, metadata !9215, metadata !DIExpression()) #23, !dbg !9391
  call void @llvm.dbg.value(metadata i32 undef, metadata !9208, metadata !DIExpression()) #23, !dbg !9387
  call void @llvm.dbg.value(metadata i32 undef, metadata !9377, metadata !DIExpression()), !dbg !9385
  %7 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9392
  %8 = load i8*, i8** %7, align 4, !dbg !9392
  tail call fastcc void @rtio_cqe_submit.106(%struct.rtio* noundef %0, i32 noundef %2, i8* noundef %8) #24, !dbg !9393
  %9 = tail call fastcc zeroext i16 @conex_task_id(%struct.rtio_concurrent_executor* noundef %5, %struct.rtio_sqe* noundef %1) #24, !dbg !9394
  call void @llvm.dbg.value(metadata i16 %9, metadata !9379, metadata !DIExpression()), !dbg !9385
  %10 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 2, !dbg !9395
  %11 = load i16, i16* %10, align 2, !dbg !9395
  %12 = and i16 %11, 1, !dbg !9396
  %13 = icmp eq i16 %12, 0, !dbg !9396
  br i1 %13, label %40, label %14, !dbg !9397

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9398
  %16 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9398
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 1, i32 0, !dbg !9398
  %18 = ptrtoint %struct.rtio_sqe* %1 to i32, !dbg !9398
  %19 = ptrtoint %struct.rtio_sqe* %17 to i32, !dbg !9398
  %20 = sub i32 %18, %19, !dbg !9398
  %21 = sdiv exact i32 %20, 20, !dbg !9398
  call void @llvm.dbg.value(metadata i32 %21, metadata !9380, metadata !DIExpression()), !dbg !9399
  %22 = add nsw i32 %21, 1, !dbg !9398
  %23 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 4, !dbg !9398
  %24 = load i32, i32* %23, align 4, !dbg !9398
  %25 = and i32 %22, %24, !dbg !9398
  %26 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 2, !dbg !9398
  %27 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %26) #24, !dbg !9398
  %28 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9398
  %29 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 0, i32 4, !dbg !9398
  %30 = load i32, i32* %29, align 4, !dbg !9398
  %31 = and i32 %30, %27, !dbg !9398
  %32 = icmp eq i32 %25, %31, !dbg !9398
  call void @llvm.dbg.value(metadata i1 %32, metadata !9384, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9399
  %33 = and i32 %22, %30, !dbg !9398
  %34 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 1, i32 %33, !dbg !9398
  %35 = select i1 %32, %struct.rtio_sqe* null, %struct.rtio_sqe* %34, !dbg !9398
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %35, metadata !9376, metadata !DIExpression()), !dbg !9385
  tail call fastcc void @rtio_iodev_submit.105(%struct.rtio_sqe* noundef %35, %struct.rtio* noundef nonnull %0) #24, !dbg !9400
  %36 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %5, i32 0, i32 8, !dbg !9401
  %37 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %36, align 4, !dbg !9401
  %38 = zext i16 %9 to i32, !dbg !9402
  %39 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %37, i32 %38, !dbg !9402
  store %struct.rtio_sqe* %35, %struct.rtio_sqe** %39, align 4, !dbg !9403
  br label %47, !dbg !9404

40:                                               ; preds = %3
  %41 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %5, i32 0, i32 7, !dbg !9405
  %42 = load i8*, i8** %41, align 4, !dbg !9405
  %43 = zext i16 %9 to i32, !dbg !9407
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !9407
  %45 = load i8, i8* %44, align 1, !dbg !9408
  %46 = or i8 %45, 1, !dbg !9408
  store i8 %46, i8* %44, align 1, !dbg !9408
  br label %47

47:                                               ; preds = %40, %14
  %48 = extractvalue { i32, i32 } %6, 0, !dbg !9389
  call void @llvm.dbg.value(metadata i32 %48, metadata !9214, metadata !DIExpression()) #23, !dbg !9391
  call void @llvm.dbg.value(metadata i32 %48, metadata !9208, metadata !DIExpression()) #23, !dbg !9387
  call void @llvm.dbg.value(metadata i32 %48, metadata !9377, metadata !DIExpression()), !dbg !9385
  tail call fastcc void @conex_sweep_resume(%struct.rtio* noundef nonnull %0, %struct.rtio_concurrent_executor* noundef nonnull %5) #24, !dbg !9409
  call void @llvm.dbg.value(metadata i32 undef, metadata !9274, metadata !DIExpression()) #23, !dbg !9410
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9279, metadata !DIExpression()) #23, !dbg !9410
  call void @llvm.dbg.value(metadata i32 undef, metadata !9282, metadata !DIExpression()) #23, !dbg !9412
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %48) #23, !dbg !9414, !srcloc !9288
  ret void, !dbg !9415
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @rtio_cqe_submit.106(%struct.rtio* nocapture noundef %0, i32 noundef %1, i8* noundef %2) unnamed_addr #5 !dbg !9416 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9420, metadata !DIExpression()), !dbg !9428
  call void @llvm.dbg.value(metadata i32 %1, metadata !9421, metadata !DIExpression()), !dbg !9428
  call void @llvm.dbg.value(metadata i8* %2, metadata !9422, metadata !DIExpression()), !dbg !9428
  %4 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 3, !dbg !9429
  %5 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9429
  %6 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %5, i32 0, i32 0, i32 2, !dbg !9429
  %7 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %6) #24, !dbg !9429
  %8 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9429
  %9 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 0, !dbg !9429
  %10 = load i32, i32* %9, align 4, !dbg !9429
  %11 = add i32 %10, %7, !dbg !9429
  call void @llvm.dbg.value(metadata i32 %11, metadata !9425, metadata !DIExpression()), !dbg !9430
  %12 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 3, !dbg !9429
  %13 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %12) #24, !dbg !9429
  %14 = sub i32 %11, %13, !dbg !9429
  %15 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9429
  %16 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 4, !dbg !9429
  %17 = load i32, i32* %16, align 4, !dbg !9429
  %18 = add i32 %17, 1, !dbg !9429
  %19 = icmp ult i32 %14, %18, !dbg !9429
  call void @llvm.dbg.value(metadata i1 %19, metadata !9427, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9430
  br i1 %19, label %22, label %20, !dbg !9429

20:                                               ; preds = %3
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9423, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9428
  %21 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 1, !dbg !9431
  tail call fastcc void @atomic_inc.109(i32* noundef nonnull %21) #24, !dbg !9434
  br label %40, !dbg !9435

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 0, !dbg !9436
  %24 = load i32, i32* %23, align 4, !dbg !9436
  %25 = add i32 %24, 1, !dbg !9436
  store i32 %25, i32* %23, align 4, !dbg !9436
  %26 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9429
  %27 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 0, i32 4, !dbg !9429
  %28 = load i32, i32* %27, align 4, !dbg !9429
  %29 = and i32 %28, %11, !dbg !9429
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9423, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9428
  %30 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 0, !dbg !9439
  store i32 %1, i32* %30, align 4, !dbg !9441
  %31 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 1, !dbg !9442
  store i8* %2, i8** %31, align 4, !dbg !9443
  %32 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9444
  %33 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %32, i32 0, i32 0, i32 0, !dbg !9444
  %34 = load i32, i32* %33, align 4, !dbg !9444
  %35 = icmp eq i32 %34, 0, !dbg !9444
  br i1 %35, label %40, label %36, !dbg !9447

36:                                               ; preds = %22
  %37 = add i32 %34, -1, !dbg !9448
  store i32 %37, i32* %33, align 4, !dbg !9448
  %38 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9448
  %39 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %38, i32 0, i32 0, i32 2, !dbg !9448
  tail call fastcc void @atomic_add.108(i32* noundef nonnull %39) #24, !dbg !9448
  br label %40, !dbg !9448

40:                                               ; preds = %22, %36, %20
  ret void, !dbg !9450
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define internal fastcc zeroext i16 @conex_task_id(%struct.rtio_concurrent_executor* nocapture noundef readonly %0, %struct.rtio_sqe* noundef readnone %1) unnamed_addr #9 !dbg !9451 {
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %0, metadata !9455, metadata !DIExpression()), !dbg !9458
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9456, metadata !DIExpression()), !dbg !9458
  %3 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 3, !dbg !9459
  %4 = load i16, i16* %3, align 2, !dbg !9459
  call void @llvm.dbg.value(metadata i16 %4, metadata !9457, metadata !DIExpression()), !dbg !9458
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 2
  %6 = load i16, i16* %5, align 4
  call void @llvm.dbg.value(metadata i16 %4, metadata !9457, metadata !DIExpression()), !dbg !9458
  %7 = icmp ult i16 %4, %6, !dbg !9460
  br i1 %7, label %8, label %23, !dbg !9463

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 8, !dbg !9464
  %10 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %9, align 4
  %11 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 4
  %12 = load i16, i16* %11, align 4
  br label %13, !dbg !9463

13:                                               ; preds = %8, %20
  %14 = phi i16 [ %4, %8 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata i16 %14, metadata !9457, metadata !DIExpression()), !dbg !9458
  %15 = and i16 %12, %14, !dbg !9467
  %16 = zext i16 %15 to i32, !dbg !9467
  %17 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %10, i32 %16, !dbg !9468
  %18 = load %struct.rtio_sqe*, %struct.rtio_sqe** %17, align 4, !dbg !9468
  %19 = icmp eq %struct.rtio_sqe* %18, %1, !dbg !9469
  br i1 %19, label %23, label %20, !dbg !9470

20:                                               ; preds = %13
  %21 = add nuw i16 %14, 1, !dbg !9471
  call void @llvm.dbg.value(metadata i16 %21, metadata !9457, metadata !DIExpression()), !dbg !9458
  %22 = icmp ult i16 %21, %6, !dbg !9460
  br i1 %22, label %13, label %23, !dbg !9463, !llvm.loop !9472

23:                                               ; preds = %20, %13, %2
  %24 = phi i16 [ %4, %2 ], [ %14, %13 ], [ %6, %20 ], !dbg !9458
  ret i16 %24, !dbg !9474
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @conex_sweep_resume(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* nocapture noundef %1) unnamed_addr #1 !dbg !9475 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9477, metadata !DIExpression()), !dbg !9479
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %1, metadata !9478, metadata !DIExpression()), !dbg !9479
  tail call fastcc void @conex_sweep(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* noundef %1) #24, !dbg !9480
  tail call fastcc void @conex_resume(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* noundef %1) #24, !dbg !9481
  ret void, !dbg !9482
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @conex_sweep(%struct.rtio* nocapture noundef readonly %0, %struct.rtio_concurrent_executor* nocapture noundef %1) unnamed_addr #1 !dbg !9483 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9485, metadata !DIExpression()), !dbg !9489
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %1, metadata !9486, metadata !DIExpression()), !dbg !9489
  %3 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 3, !dbg !9490
  %4 = load i16, i16* %3, align 2, !dbg !9490
  call void @llvm.dbg.value(metadata i16 %4, metadata !9487, metadata !DIExpression()), !dbg !9491
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 7, !dbg !9492
  %6 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 2
  call void @llvm.dbg.value(metadata i16 %4, metadata !9487, metadata !DIExpression()), !dbg !9491
  %7 = load i16, i16* %6, align 4, !dbg !9496
  %8 = icmp ult i16 %4, %7, !dbg !9497
  br i1 %8, label %9, label %30, !dbg !9498

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 4
  %11 = zext i16 %4 to i32, !dbg !9498
  br label %12, !dbg !9498

12:                                               ; preds = %9, %23
  %13 = phi i32 [ %11, %9 ], [ %26, %23 ]
  call void @llvm.dbg.value(metadata i32 %13, metadata !9487, metadata !DIExpression()), !dbg !9491
  %14 = load i8*, i8** %5, align 4, !dbg !9492
  %15 = load i16, i16* %10, align 4, !dbg !9499
  %16 = trunc i32 %13 to i16, !dbg !9500
  %17 = and i16 %15, %16, !dbg !9500
  %18 = zext i16 %17 to i32, !dbg !9500
  %19 = getelementptr inbounds i8, i8* %14, i32 %18, !dbg !9501
  %20 = load i8, i8* %19, align 1, !dbg !9501
  %21 = and i8 %20, 1, !dbg !9502
  %22 = icmp eq i8 %21, 0, !dbg !9502
  br i1 %22, label %30, label %23, !dbg !9503

23:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.107, i32 0, i32 0), i32 noundef 73, i32 noundef %13) #25, !dbg !9504
  tail call fastcc void @conex_sweep_task(%struct.rtio* noundef %0) #24, !dbg !9510
  %24 = load i16, i16* %3, align 2, !dbg !9511
  %25 = add i16 %24, 1, !dbg !9511
  store i16 %25, i16* %3, align 2, !dbg !9511
  %26 = add nuw nsw i32 %13, 1, !dbg !9512
  call void @llvm.dbg.value(metadata i32 %26, metadata !9487, metadata !DIExpression()), !dbg !9491
  %27 = load i16, i16* %6, align 4, !dbg !9496
  %28 = zext i16 %27 to i32, !dbg !9497
  %29 = icmp ult i32 %26, %28, !dbg !9497
  br i1 %29, label %12, label %30, !dbg !9498, !llvm.loop !9513

30:                                               ; preds = %23, %12, %2
  ret void, !dbg !9515
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @conex_sweep_task(%struct.rtio* nocapture noundef readonly %0) unnamed_addr #15 !dbg !9516 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9518, metadata !DIExpression()), !dbg !9528
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* undef, metadata !9519, metadata !DIExpression()), !dbg !9528
  %2 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9529
  %3 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9529
  %4 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %3, i32 0, i32 0, i32 3, !dbg !9529
  %5 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %4) #24, !dbg !9529
  %6 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9529
  %7 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 1, !dbg !9529
  %8 = load i32, i32* %7, align 4, !dbg !9529
  %9 = add i32 %8, %5, !dbg !9529
  call void @llvm.dbg.value(metadata i32 %9, metadata !9521, metadata !DIExpression()), !dbg !9530
  %10 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 2, !dbg !9529
  %11 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %10) #24, !dbg !9529
  %12 = icmp eq i32 %9, %11, !dbg !9529
  call void @llvm.dbg.value(metadata i1 %12, metadata !9523, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9530
  br i1 %12, label %48, label %13, !dbg !9529

13:                                               ; preds = %1, %37
  %14 = phi i32 [ %44, %37 ], [ %9, %1 ]
  %15 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9528
  %16 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %15, i32 0, i32 0, i32 1, !dbg !9528
  %17 = load i32, i32* %16, align 4, !dbg !9528
  %18 = add i32 %17, 1, !dbg !9528
  store i32 %18, i32* %16, align 4, !dbg !9528
  %19 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9528
  %20 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %19, i32 0, i32 0, i32 4, !dbg !9528
  %21 = load i32, i32* %20, align 4, !dbg !9528
  %22 = and i32 %21, %14, !dbg !9528
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_sq* %19, i32 %22), metadata !9520, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 20, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9528
  %23 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %19, i32 0, i32 1, i32 %22, i32 2, !dbg !9531
  %24 = load i16, i16* %23, align 2, !dbg !9531
  %25 = and i16 %24, 1, !dbg !9532
  %26 = icmp eq i16 %25, 0, !dbg !9533
  br i1 %26, label %48, label %27, !dbg !9534

27:                                               ; preds = %13
  %28 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9535
  %29 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 0, i32 1, !dbg !9535
  %30 = load i32, i32* %29, align 4, !dbg !9535
  %31 = icmp eq i32 %30, 0, !dbg !9535
  br i1 %31, label %37, label %32, !dbg !9538

32:                                               ; preds = %27
  %33 = add i32 %30, -1, !dbg !9539
  store i32 %33, i32* %29, align 4, !dbg !9539
  %34 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9539
  %35 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %34, i32 0, i32 0, i32 3, !dbg !9539
  tail call fastcc void @atomic_add.108(i32* noundef nonnull %35) #24, !dbg !9539
  %36 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9541
  br label %37, !dbg !9539

37:                                               ; preds = %32, %27
  %38 = phi %struct.rtio_sq* [ %36, %32 ], [ %28, %27 ], !dbg !9541
  %39 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %38, i32 0, i32 0, i32 3, !dbg !9541
  %40 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %39) #24, !dbg !9541
  %41 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9541
  %42 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %41, i32 0, i32 0, i32 1, !dbg !9541
  %43 = load i32, i32* %42, align 4, !dbg !9541
  %44 = add i32 %43, %40, !dbg !9541
  call void @llvm.dbg.value(metadata i32 %44, metadata !9524, metadata !DIExpression()), !dbg !9542
  %45 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %41, i32 0, i32 0, i32 2, !dbg !9541
  %46 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %45) #24, !dbg !9541
  %47 = icmp eq i32 %44, %46, !dbg !9541
  call void @llvm.dbg.value(metadata i1 %47, metadata !9527, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9542
  br i1 %47, label %48, label %13, !dbg !9541

48:                                               ; preds = %37, %13, %1
  %49 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9543
  %50 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %49, i32 0, i32 0, i32 1, !dbg !9543
  %51 = load i32, i32* %50, align 4, !dbg !9543
  %52 = icmp eq i32 %51, 0, !dbg !9543
  br i1 %52, label %57, label %53, !dbg !9546

53:                                               ; preds = %48
  %54 = add i32 %51, -1, !dbg !9547
  store i32 %54, i32* %50, align 4, !dbg !9547
  %55 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9547
  %56 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %55, i32 0, i32 0, i32 3, !dbg !9547
  tail call fastcc void @atomic_add.108(i32* noundef nonnull %56) #24, !dbg !9547
  br label %57, !dbg !9547

57:                                               ; preds = %53, %48
  ret void, !dbg !9549
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add.108(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9550 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9552, metadata !DIExpression()), !dbg !9554
  call void @llvm.dbg.value(metadata i32 1, metadata !9553, metadata !DIExpression()), !dbg !9554
  %2 = atomicrmw add i32* %0, i32 1 seq_cst, align 4, !dbg !9555
  ret void, !dbg !9556
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_inc.109(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9557 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9559, metadata !DIExpression()), !dbg !9560
  tail call fastcc void @atomic_add.108(i32* noundef %0) #24, !dbg !9561
  ret void, !dbg !9562
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_concurrent_err(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9563 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9565, metadata !DIExpression()), !dbg !9581
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9566, metadata !DIExpression()), !dbg !9581
  call void @llvm.dbg.value(metadata i32 %2, metadata !9567, metadata !DIExpression()), !dbg !9581
  %4 = bitcast %struct.rtio* %0 to %struct.rtio_concurrent_executor**, !dbg !9582
  %5 = load %struct.rtio_concurrent_executor*, %struct.rtio_concurrent_executor** %4, align 4, !dbg !9582
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %5, metadata !9570, metadata !DIExpression()), !dbg !9581
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9202, metadata !DIExpression()) #23, !dbg !9583
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9585, !srcloc !9217
  call void @llvm.dbg.value(metadata i32 undef, metadata !9214, metadata !DIExpression()) #23, !dbg !9587
  call void @llvm.dbg.value(metadata i32 undef, metadata !9215, metadata !DIExpression()) #23, !dbg !9587
  call void @llvm.dbg.value(metadata i32 undef, metadata !9208, metadata !DIExpression()) #23, !dbg !9583
  call void @llvm.dbg.value(metadata i32 undef, metadata !9569, metadata !DIExpression()), !dbg !9581
  %7 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9588
  %8 = load i8*, i8** %7, align 4, !dbg !9588
  tail call fastcc void @rtio_cqe_submit.106(%struct.rtio* noundef %0, i32 noundef %2, i8* noundef %8) #24, !dbg !9589
  %9 = tail call fastcc zeroext i16 @conex_task_id(%struct.rtio_concurrent_executor* noundef %5, %struct.rtio_sqe* noundef %1) #24, !dbg !9590
  call void @llvm.dbg.value(metadata i16 %9, metadata !9571, metadata !DIExpression()), !dbg !9581
  %10 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 2, !dbg !9591
  %11 = load i16, i16* %10, align 2, !dbg !9591
  %12 = and i16 %11, 1, !dbg !9592
  %13 = icmp eq i16 %12, 0, !dbg !9592
  br i1 %13, label %64, label %14, !dbg !9593

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9594
  %16 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9594
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 1, i32 0, !dbg !9594
  %18 = ptrtoint %struct.rtio_sqe* %1 to i32, !dbg !9594
  %19 = ptrtoint %struct.rtio_sqe* %17 to i32, !dbg !9594
  %20 = sub i32 %18, %19, !dbg !9594
  %21 = sdiv exact i32 %20, 20, !dbg !9594
  call void @llvm.dbg.value(metadata i32 %21, metadata !9572, metadata !DIExpression()), !dbg !9595
  %22 = add nsw i32 %21, 1, !dbg !9594
  %23 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 4, !dbg !9594
  %24 = load i32, i32* %23, align 4, !dbg !9594
  %25 = and i32 %22, %24, !dbg !9594
  %26 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 2, !dbg !9594
  %27 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %26) #24, !dbg !9594
  %28 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9594
  %29 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 0, i32 4, !dbg !9594
  %30 = load i32, i32* %29, align 4, !dbg !9594
  %31 = and i32 %30, %27, !dbg !9594
  %32 = icmp eq i32 %25, %31, !dbg !9594
  call void @llvm.dbg.value(metadata i1 %32, metadata !9576, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9595
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9568, metadata !DIExpression()), !dbg !9581
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9568, metadata !DIExpression()), !dbg !9581
  br i1 %32, label %64, label %33, !dbg !9596

33:                                               ; preds = %14
  %34 = and i32 %22, %30, !dbg !9594
  %35 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 1, i32 %34, !dbg !9594
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %35, metadata !9568, metadata !DIExpression()), !dbg !9581
  br label %36, !dbg !9597

36:                                               ; preds = %33, %42
  %37 = phi %struct.rtio_sqe* [ %63, %42 ], [ %35, %33 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %37, metadata !9568, metadata !DIExpression()), !dbg !9581
  %38 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %37, i32 0, i32 2, !dbg !9598
  %39 = load i16, i16* %38, align 2, !dbg !9598
  %40 = and i16 %39, 1, !dbg !9599
  %41 = icmp eq i16 %40, 0, !dbg !9596
  br i1 %41, label %64, label %42, !dbg !9597

42:                                               ; preds = %36
  %43 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %37, i32 0, i32 4, !dbg !9600
  %44 = load i8*, i8** %43, align 4, !dbg !9600
  tail call fastcc void @rtio_cqe_submit.106(%struct.rtio* noundef nonnull %0, i32 noundef -140, i8* noundef %44) #24, !dbg !9601
  %45 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9602
  %46 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %45, i32 0, i32 1, i32 0, !dbg !9602
  %47 = ptrtoint %struct.rtio_sqe* %37 to i32, !dbg !9602
  %48 = ptrtoint %struct.rtio_sqe* %46 to i32, !dbg !9602
  %49 = sub i32 %47, %48, !dbg !9602
  %50 = sdiv exact i32 %49, 20, !dbg !9602
  call void @llvm.dbg.value(metadata i32 %50, metadata !9577, metadata !DIExpression()), !dbg !9603
  %51 = add nsw i32 %50, 1, !dbg !9602
  %52 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %45, i32 0, i32 0, i32 4, !dbg !9602
  %53 = load i32, i32* %52, align 4, !dbg !9602
  %54 = and i32 %51, %53, !dbg !9602
  %55 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %45, i32 0, i32 0, i32 2, !dbg !9602
  %56 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %55) #24, !dbg !9602
  %57 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9602
  %58 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %57, i32 0, i32 0, i32 4, !dbg !9602
  %59 = load i32, i32* %58, align 4, !dbg !9602
  %60 = and i32 %59, %56, !dbg !9602
  %61 = icmp eq i32 %54, %60, !dbg !9602
  call void @llvm.dbg.value(metadata i1 %61, metadata !9580, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9603
  %62 = and i32 %51, %59, !dbg !9602
  %63 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %57, i32 0, i32 1, i32 %62, !dbg !9602
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9568, metadata !DIExpression()), !dbg !9581
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9568, metadata !DIExpression()), !dbg !9581
  br i1 %61, label %64, label %36, !dbg !9596

64:                                               ; preds = %42, %36, %14, %3
  %65 = extractvalue { i32, i32 } %6, 0, !dbg !9585
  call void @llvm.dbg.value(metadata i32 %65, metadata !9214, metadata !DIExpression()) #23, !dbg !9587
  call void @llvm.dbg.value(metadata i32 %65, metadata !9208, metadata !DIExpression()) #23, !dbg !9583
  call void @llvm.dbg.value(metadata i32 %65, metadata !9569, metadata !DIExpression()), !dbg !9581
  %66 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %5, i32 0, i32 7, !dbg !9604
  %67 = load i8*, i8** %66, align 4, !dbg !9604
  %68 = zext i16 %9 to i32, !dbg !9605
  %69 = getelementptr inbounds i8, i8* %67, i32 %68, !dbg !9605
  %70 = load i8, i8* %69, align 1, !dbg !9606
  %71 = or i8 %70, 1, !dbg !9606
  store i8 %71, i8* %69, align 1, !dbg !9606
  tail call fastcc void @conex_sweep_resume(%struct.rtio* noundef nonnull %0, %struct.rtio_concurrent_executor* noundef %5) #24, !dbg !9607
  call void @llvm.dbg.value(metadata i32 undef, metadata !9274, metadata !DIExpression()) #23, !dbg !9608
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9279, metadata !DIExpression()) #23, !dbg !9608
  call void @llvm.dbg.value(metadata i32 undef, metadata !9282, metadata !DIExpression()) #23, !dbg !9610
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %65) #23, !dbg !9612, !srcloc !9288
  ret void, !dbg !9613
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9614 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9616, metadata !DIExpression()), !dbg !9617
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !9618
  ret void, !dbg !9619
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9620 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9624, metadata !DIExpression()), !dbg !9630
  call void @llvm.dbg.value(metadata i32 %1, metadata !9625, metadata !DIExpression()), !dbg !9630
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9626, metadata !DIExpression()), !dbg !9630
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9631
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9631
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9631
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9627, metadata !DIExpression()), !dbg !9630
  call void @llvm.dbg.value(metadata i32 %0, metadata !9629, metadata !DIExpression()), !dbg !9630
  %7 = icmp slt i32 %0, %1, !dbg !9632
  br i1 %7, label %8, label %22, !dbg !9635

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9629, metadata !DIExpression()), !dbg !9630
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !9636
  %11 = icmp eq i32 %10, 0, !dbg !9636
  br i1 %11, label %19, label %12, !dbg !9639

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !9640
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9642
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9642
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9644
  br i1 %15, label %19, label %16, !dbg !9645

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9646
  %18 = load i8*, i8** %17, align 4, !dbg !9646
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !9647
  br label %19, !dbg !9648

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9649
  call void @llvm.dbg.value(metadata i32 %20, metadata !9629, metadata !DIExpression()), !dbg !9630
  %21 = icmp eq i32 %20, %1, !dbg !9632
  br i1 %21, label %22, label %8, !dbg !9635, !llvm.loop !9650

22:                                               ; preds = %19, %3
  ret void, !dbg !9652
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #5 !dbg !9653 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9655, metadata !DIExpression()), !dbg !9656
  %2 = shl nuw i32 1, %0, !dbg !9657
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !9660
  ret i32 %3, !dbg !9661
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !9662 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9666, metadata !DIExpression()), !dbg !9667
  %2 = shl nuw i32 1, %0, !dbg !9668
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !9671
  ret void, !dbg !9672
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9673 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9676, metadata !DIExpression()), !dbg !9677
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9678
  ret void, !dbg !9679
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #5 !dbg !9680 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9682, metadata !DIExpression()), !dbg !9683
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9684
  %3 = and i32 %2, %0, !dbg !9684
  %4 = icmp eq i32 %3, %0, !dbg !9685
  %5 = zext i1 %4 to i32, !dbg !9685
  ret i32 %5, !dbg !9686
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9687 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9689, metadata !DIExpression()), !dbg !9690
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !9691
  ret void, !dbg !9692
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9693 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9695, metadata !DIExpression()), !dbg !9696
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !9697
  ret void, !dbg !9698
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9699 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9701, metadata !DIExpression()), !dbg !9702
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !9703
  ret void, !dbg !9704
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9705 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9707, metadata !DIExpression()), !dbg !9708
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !9709
  ret void, !dbg !9710
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9711 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9713, metadata !DIExpression()), !dbg !9714
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !9715
  ret void, !dbg !9716
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9717 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9719, metadata !DIExpression()), !dbg !9720
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !9721
  ret void, !dbg !9722
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9723 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9725, metadata !DIExpression()), !dbg !9726
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !9727
  ret void, !dbg !9728
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9729 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9731, metadata !DIExpression()), !dbg !9732
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !9733
  ret void, !dbg !9734
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9735 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9737, metadata !DIExpression()), !dbg !9738
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !9739
  ret void, !dbg !9740
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9741 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9743, metadata !DIExpression()), !dbg !9744
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !9745
  ret void, !dbg !9746
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9747 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9749, metadata !DIExpression()), !dbg !9750
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !9751
  ret i32 0, !dbg !9752
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !1118 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !1122, metadata !DIExpression()), !dbg !9753
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !9754
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !9756
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !9758
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !9760
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !9762
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !9764
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !9766
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !9768
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !9770
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !9772
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !9774
  ret void, !dbg !9776
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9777 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9779, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.value(metadata i32 0, metadata !9780, metadata !DIExpression()), !dbg !9781
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9782
  %3 = load i32, i32* %2, align 4, !dbg !9782
  call void @llvm.dbg.value(metadata i32 %3, metadata !9780, metadata !DIExpression()), !dbg !9781
  %4 = shl nuw i32 1, %0, !dbg !9783
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #24, !dbg !9784
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !9785
  ret void, !dbg !9786
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9787 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9789, metadata !DIExpression()), !dbg !9790
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9791
  %3 = or i32 %2, %0, !dbg !9791
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9791
  ret void, !dbg !9792
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !9793 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9795, metadata !DIExpression()), !dbg !9796
  %2 = icmp slt i32 %0, 32, !dbg !9797
  br i1 %2, label %3, label %5, !dbg !9799

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9800
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !9802
  br label %5, !dbg !9803

5:                                                ; preds = %1, %3
  ret void, !dbg !9804
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9805 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9807, metadata !DIExpression()), !dbg !9808
  %2 = xor i32 %0, -1, !dbg !9809
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9809
  %4 = and i32 %3, %2, !dbg !9809
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9809
  ret void, !dbg !9810
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !9811 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9815, metadata !DIExpression()), !dbg !9817
  call void @llvm.dbg.value(metadata i32 %1, metadata !9816, metadata !DIExpression()), !dbg !9817
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9818

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9819
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !9821
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !9822
  br label %11, !dbg !9823

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9824
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !9825
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !9826
  br label %11, !dbg !9827

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9828
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !9829
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !9830
  br label %11, !dbg !9831

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9832
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !9833
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !9834
  br label %11, !dbg !9835

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9836
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9837 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9839, metadata !DIExpression()), !dbg !9840
  %2 = xor i32 %0, -1, !dbg !9841
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9841
  %4 = and i32 %3, %2, !dbg !9841
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9841
  ret void, !dbg !9842
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9843 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9845, metadata !DIExpression()), !dbg !9846
  %2 = xor i32 %0, -1, !dbg !9847
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9847
  %4 = and i32 %3, %2, !dbg !9847
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9847
  ret void, !dbg !9848
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9849 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9851, metadata !DIExpression()), !dbg !9852
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9853
  %3 = or i32 %2, %0, !dbg !9853
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9853
  ret void, !dbg !9854
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9855 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9857, metadata !DIExpression()), !dbg !9858
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9859
  %3 = or i32 %2, %0, !dbg !9859
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9859
  ret void, !dbg !9860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #11 !dbg !9861 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9865, metadata !DIExpression()), !dbg !9871
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9866, metadata !DIExpression()), !dbg !9871
  call void @llvm.dbg.value(metadata i8* %2, metadata !9867, metadata !DIExpression()), !dbg !9871
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9868, metadata !DIExpression()), !dbg !9871
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9870, metadata !DIExpression()), !dbg !9871
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9872
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9872
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9874
  br i1 %6, label %7, label %9, !dbg !9875

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9876
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9877
  store i8* %2, i8** %8, align 4, !dbg !9878
  br label %9, !dbg !9879

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9871
  ret i32 %10, !dbg !9880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #6 !dbg !9881 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9883, metadata !DIExpression()), !dbg !9886
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9884, metadata !DIExpression()), !dbg !9886
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9885, metadata !DIExpression()), !dbg !9886
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9887
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9888
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9889
  store i8* null, i8** %3, align 4, !dbg !9890
  ret void, !dbg !9891
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !9892 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9894, metadata !DIExpression()), !dbg !9899
  call void @llvm.dbg.value(metadata i8* %1, metadata !9895, metadata !DIExpression()), !dbg !9899
  call void @llvm.dbg.value(metadata i8* %1, metadata !9896, metadata !DIExpression()), !dbg !9899
  %3 = bitcast i8* %1 to i32*, !dbg !9900
  %4 = load i32, i32* %3, align 4, !dbg !9900
  %5 = add i32 %4, -169, !dbg !9900
  %6 = icmp ult i32 %5, -121, !dbg !9900
  br i1 %6, label %15, label %7, !dbg !9902

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9903
  %9 = inttoptr i32 %8 to i32*, !dbg !9904
  call void @llvm.dbg.value(metadata i32* %9, metadata !9897, metadata !DIExpression()), !dbg !9899
  %10 = load volatile i32, i32* %9, align 4, !dbg !9905
  call void @llvm.dbg.value(metadata i32 %10, metadata !9898, metadata !DIExpression()), !dbg !9899
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9906
  %12 = bitcast i8* %11 to i32*, !dbg !9906
  %13 = load i32, i32* %12, align 4, !dbg !9906
  %14 = or i32 %13, %10, !dbg !9907
  call void @llvm.dbg.value(metadata i32 %14, metadata !9898, metadata !DIExpression()), !dbg !9899
  store volatile i32 %14, i32* %9, align 4, !dbg !9908
  br label %15, !dbg !9909

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9899
  ret i32 %16, !dbg !9910
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !9911 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9913, metadata !DIExpression()), !dbg !9918
  call void @llvm.dbg.value(metadata i8* %1, metadata !9914, metadata !DIExpression()), !dbg !9918
  call void @llvm.dbg.value(metadata i8* %1, metadata !9915, metadata !DIExpression()), !dbg !9918
  %3 = bitcast i8* %1 to i32*, !dbg !9919
  %4 = load i32, i32* %3, align 4, !dbg !9919
  %5 = add i32 %4, -169, !dbg !9919
  %6 = icmp ult i32 %5, -121, !dbg !9919
  br i1 %6, label %16, label %7, !dbg !9921

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9922
  %9 = inttoptr i32 %8 to i32*, !dbg !9923
  call void @llvm.dbg.value(metadata i32* %9, metadata !9916, metadata !DIExpression()), !dbg !9918
  %10 = load volatile i32, i32* %9, align 4, !dbg !9924
  call void @llvm.dbg.value(metadata i32 %10, metadata !9917, metadata !DIExpression()), !dbg !9918
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9925
  %12 = bitcast i8* %11 to i32*, !dbg !9925
  %13 = load i32, i32* %12, align 4, !dbg !9925
  %14 = xor i32 %13, -1, !dbg !9926
  %15 = and i32 %10, %14, !dbg !9927
  call void @llvm.dbg.value(metadata i32 %15, metadata !9917, metadata !DIExpression()), !dbg !9918
  store volatile i32 %15, i32* %9, align 4, !dbg !9928
  br label %16, !dbg !9929

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9918
  ret i32 %17, !dbg !9930
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !9931 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9933, metadata !DIExpression()), !dbg !9941
  call void @llvm.dbg.value(metadata i8* %1, metadata !9934, metadata !DIExpression()), !dbg !9941
  call void @llvm.dbg.value(metadata i32* %2, metadata !9935, metadata !DIExpression()), !dbg !9941
  call void @llvm.dbg.value(metadata i8* %1, metadata !9936, metadata !DIExpression()), !dbg !9941
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9942
  call void @llvm.dbg.value(metadata i32 %4, metadata !9937, metadata !DIExpression()), !dbg !9941
  call void @llvm.dbg.value(metadata i32 undef, metadata !9938, metadata !DIExpression()), !dbg !9941
  call void @llvm.dbg.value(metadata i32 undef, metadata !9939, metadata !DIExpression()), !dbg !9941
  call void @llvm.dbg.value(metadata i32 %4, metadata !9940, metadata !DIExpression()), !dbg !9941
  %5 = bitcast i8* %1 to i32*, !dbg !9943
  %6 = load i32, i32* %5, align 4, !dbg !9943
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !9944

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !9945
  call void @llvm.dbg.value(metadata i32 %8, metadata !9938, metadata !DIExpression()), !dbg !9941
  br label %19, !dbg !9946

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #24, !dbg !9948
  call void @llvm.dbg.value(metadata i32 %10, metadata !9939, metadata !DIExpression()), !dbg !9941
  br label %19, !dbg !9949

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9950
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 4) #24, !dbg !9951
  br label %19, !dbg !9952

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9953
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #24, !dbg !9954
  br label %19, !dbg !9955

17:                                               ; preds = %3
  br label %19, !dbg !9956

18:                                               ; preds = %3
  br label %19, !dbg !9957

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !9958
  br label %21, !dbg !9959

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !9941
  ret i32 %22, !dbg !9959
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !9960 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9962, metadata !DIExpression()), !dbg !9970
  call void @llvm.dbg.value(metadata i8* %1, metadata !9963, metadata !DIExpression()), !dbg !9970
  call void @llvm.dbg.value(metadata i8* %2, metadata !9964, metadata !DIExpression()), !dbg !9970
  call void @llvm.dbg.value(metadata i8* %1, metadata !9965, metadata !DIExpression()), !dbg !9970
  %4 = bitcast i8* %1 to i32*, !dbg !9971
  %5 = load i32, i32* %4, align 4, !dbg !9971
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !9972
  call void @llvm.dbg.value(metadata i32 %6, metadata !9969, metadata !DIExpression()), !dbg !9970
  %7 = icmp slt i32 %6, 0, !dbg !9973
  br i1 %7, label %22, label %8, !dbg !9975

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9965, metadata !DIExpression()), !dbg !9970
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9976
  %10 = bitcast i8* %9 to i32*, !dbg !9976
  %11 = load i32, i32* %10, align 4, !dbg !9976
  %12 = lshr i32 %11, 16, !dbg !9976
  %13 = and i32 %12, 7, !dbg !9976
  %14 = lshr i32 %11, 8, !dbg !9977
  %15 = and i32 %14, 31, !dbg !9977
  %16 = shl i32 %13, %15, !dbg !9978
  call void @llvm.dbg.value(metadata i32 %16, metadata !9968, metadata !DIExpression()), !dbg !9970
  %17 = and i32 %11, 255, !dbg !9979
  %18 = or i32 %17, 1073887232, !dbg !9980
  %19 = inttoptr i32 %18 to i32*, !dbg !9981
  call void @llvm.dbg.value(metadata i32* %19, metadata !9966, metadata !DIExpression()), !dbg !9970
  %20 = load volatile i32, i32* %19, align 4, !dbg !9982
  call void @llvm.dbg.value(metadata i32 %20, metadata !9967, metadata !DIExpression()), !dbg !9970
  %21 = or i32 %16, %20, !dbg !9983
  call void @llvm.dbg.value(metadata i32 %21, metadata !9967, metadata !DIExpression()), !dbg !9970
  store volatile i32 %21, i32* %19, align 4, !dbg !9984
  br label %22, !dbg !9985

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !9970
  ret i32 %23, !dbg !9986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !9987 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9991, metadata !DIExpression()), !dbg !9993
  call void @llvm.dbg.value(metadata i32 0, metadata !9992, metadata !DIExpression()), !dbg !9993
  %2 = add i32 %0, -1, !dbg !9994
  %3 = icmp ult i32 %2, 6, !dbg !9994
  br i1 %3, label %4, label %7, !dbg !9994

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !9994
  %6 = load i32, i32* %5, align 4, !dbg !9994
  call void @llvm.dbg.value(metadata i32 %6, metadata !9992, metadata !DIExpression()), !dbg !9993
  br label %7, !dbg !9995

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !9993
  ret i32 %8, !dbg !9996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9997 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10001, metadata !DIExpression()), !dbg !10003
  call void @llvm.dbg.value(metadata i32 %1, metadata !10002, metadata !DIExpression()), !dbg !10003
  %3 = udiv i32 %0, %1, !dbg !10004
  ret i32 %3, !dbg !10005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10006 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10010, metadata !DIExpression()), !dbg !10014
  call void @llvm.dbg.value(metadata i32 16, metadata !10011, metadata !DIExpression()), !dbg !10014
  call void @llvm.dbg.value(metadata i32 336, metadata !10012, metadata !DIExpression()), !dbg !10014
  call void @llvm.dbg.value(metadata i32 %1, metadata !10013, metadata !DIExpression()), !dbg !10014
  %3 = mul i32 %0, 336, !dbg !10015
  %4 = shl nsw i32 %1, 4, !dbg !10016
  %5 = udiv i32 %3, %4, !dbg !10017
  ret i32 %5, !dbg !10018
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !10019 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !10021, metadata !DIExpression()), !dbg !10024
  tail call void @config_enable_default_clocks() #25, !dbg !10025
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !10026
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !10026
  %4 = lshr i32 %3, 4, !dbg !10026
  %5 = and i32 %4, 15, !dbg !10026
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !10026
  %7 = load i8, i8* %6, align 1, !dbg !10026
  %8 = zext i8 %7 to i32, !dbg !10026
  %9 = lshr i32 %2, %8, !dbg !10026
  call void @llvm.dbg.value(metadata i32 %9, metadata !10022, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !10023, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !10024
  %10 = icmp ult i32 %9, 84000000, !dbg !10027
  br i1 %10, label %11, label %13, !dbg !10029

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !10030
  br label %13, !dbg !10032

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !10033
  tail call fastcc void @set_up_plls() #24, !dbg !10034
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !10035
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !10038
  br label %14, !dbg !10039

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !10040
  %16 = icmp eq i32 %15, 8, !dbg !10041
  br i1 %16, label %17, label %14, !dbg !10039, !llvm.loop !10042

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !10044
  br i1 %18, label %19, label %21, !dbg !10046

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !10047
  br label %21, !dbg !10049

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !10050
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !10051
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !10052
  ret i32 0, !dbg !10053
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #5 !dbg !10054 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10056
  %2 = and i32 %1, 240, !dbg !10056
  ret i32 %2, !dbg !10057
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !10058 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !10059
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !10064
  br label %1, !dbg !10065

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !10066
  %3 = icmp eq i32 %2, 1, !dbg !10067
  br i1 %3, label %4, label %1, !dbg !10065, !llvm.loop !10068

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !10070
  br label %5, !dbg !10073

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !10074
  %7 = icmp eq i32 %6, 1, !dbg !10075
  br i1 %7, label %8, label %5, !dbg !10073, !llvm.loop !10076

8:                                                ; preds = %5
  ret void, !dbg !10078
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10079 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !10080
  %2 = icmp eq i32 %1, 8, !dbg !10082
  br i1 %2, label %3, label %4, !dbg !10083

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !10084
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !10086
  br label %4, !dbg !10087

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !10088
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10089
  %6 = and i32 %5, -196609, !dbg !10089
  %7 = or i32 %6, 65536, !dbg !10089
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10089
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10090
  %9 = and i32 %8, -251658241, !dbg !10090
  %10 = or i32 %9, 117440512, !dbg !10090
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10090
  tail call void @config_pll_sysclock() #25, !dbg !10091
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !10092
  br label %11, !dbg !10093

11:                                               ; preds = %11, %4
  %12 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !10094
  %13 = icmp eq i32 %12, 1, !dbg !10095
  br i1 %13, label %14, label %11, !dbg !10093, !llvm.loop !10096

14:                                               ; preds = %11
  ret void, !dbg !10098
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !10099 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10101, metadata !DIExpression()), !dbg !10102
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10103
  %2 = and i32 %1, -241, !dbg !10103
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10103
  ret void, !dbg !10104
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !10105 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10107, metadata !DIExpression()), !dbg !10108
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10109
  %3 = and i32 %2, -4, !dbg !10109
  %4 = or i32 %3, %0, !dbg !10109
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10109
  ret void, !dbg !10110
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #5 !dbg !10111 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10112
  %2 = and i32 %1, 12, !dbg !10112
  ret i32 %2, !dbg !10113
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !10114 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !10116, metadata !DIExpression()), !dbg !10117
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10118
  %2 = and i32 %1, -7169, !dbg !10118
  %3 = or i32 %2, 4096, !dbg !10118
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10118
  ret void, !dbg !10119
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !10120 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10122, metadata !DIExpression()), !dbg !10123
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10124
  %2 = and i32 %1, -57345, !dbg !10124
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10124
  ret void, !dbg !10125
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !10126 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !10127
  %2 = icmp eq i32 %1, 1, !dbg !10129
  br i1 %2, label %7, label %3, !dbg !10130

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !10131
  br label %4, !dbg !10133

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !10134
  %6 = icmp eq i32 %5, 1, !dbg !10135
  br i1 %6, label %7, label %4, !dbg !10133, !llvm.loop !10136

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !10138
  br label %8, !dbg !10139

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !10140
  %10 = icmp eq i32 %9, 0, !dbg !10141
  br i1 %10, label %11, label %8, !dbg !10139, !llvm.loop !10142

11:                                               ; preds = %8
  ret void, !dbg !10144
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !10145 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10146
  %2 = and i32 %1, -16777217, !dbg !10146
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10146
  ret void, !dbg !10147
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !10148 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10149
  %2 = or i32 %1, 16777216, !dbg !10149
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10149
  ret void, !dbg !10150
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #5 !dbg !10151 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10152
  %2 = lshr i32 %1, 25, !dbg !10153
  %3 = and i32 %2, 1, !dbg !10153
  ret i32 %3, !dbg !10154
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #5 !dbg !10155 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10156
  %2 = lshr i32 %1, 1, !dbg !10157
  %3 = and i32 %2, 1, !dbg !10157
  ret i32 %3, !dbg !10158
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !10159 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10160
  %2 = or i32 %1, 1, !dbg !10160
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10160
  ret void, !dbg !10161
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !10162 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10163
  %2 = and i32 %1, -262145, !dbg !10163
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10163
  ret void, !dbg !10164
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !10165 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10166
  %2 = or i32 %1, 65536, !dbg !10166
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10166
  ret void, !dbg !10167
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #5 !dbg !10168 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10169
  %2 = lshr i32 %1, 17, !dbg !10170
  %3 = and i32 %2, 1, !dbg !10170
  ret i32 %3, !dbg !10171
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !10172 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10173
  %2 = or i32 %1, 1, !dbg !10173
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10173
  ret void, !dbg !10174
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #5 !dbg !10175 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10176
  %2 = lshr i32 %1, 1, !dbg !10177
  %3 = and i32 %2, 1, !dbg !10177
  ret i32 %3, !dbg !10178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !10179 {
  ret i32 16000000, !dbg !10181
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !10185 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !10186
  ret void, !dbg !10187
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !10188 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10192, metadata !DIExpression()), !dbg !10196
  call void @llvm.dbg.value(metadata i32 16, metadata !10193, metadata !DIExpression()), !dbg !10196
  call void @llvm.dbg.value(metadata i32 336, metadata !10194, metadata !DIExpression()), !dbg !10196
  call void @llvm.dbg.value(metadata i32 65536, metadata !10195, metadata !DIExpression()), !dbg !10196
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10197
  %2 = and i32 %1, -4227072, !dbg !10197
  %3 = or i32 %2, 4215824, !dbg !10197
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10197
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10198
  %5 = and i32 %4, -196609, !dbg !10198
  %6 = or i32 %5, 65536, !dbg !10198
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10198
  ret void, !dbg !10199
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !10200 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !10201
  ret void, !dbg !10202
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !10203 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10206, metadata !DIExpression()), !dbg !10208
  %2 = bitcast i32* %1 to i8*, !dbg !10209
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10209
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10207, metadata !DIExpression()), !dbg !10210
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10211
  %4 = or i32 %3, 268435456, !dbg !10211
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10211
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10212
  %6 = and i32 %5, 268435456, !dbg !10212
  store volatile i32 %6, i32* %1, align 4, !dbg !10213
  %7 = load volatile i32, i32* %1, align 4, !dbg !10214
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10215
  ret void, !dbg !10215
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10216 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10218, metadata !DIExpression()), !dbg !10219
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !10220
  br i1 %2, label %3, label %4, !dbg !10222

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !10223
  br label %4, !dbg !10224

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10219
  ret i32 %5, !dbg !10225
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10226 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_50, metadata !10231, metadata !DIExpression()), !dbg !10232
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10233, !srcloc !10235
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !10236
  ret i1 %1, !dbg !10237
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10238 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !10239
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !10240
  ret void, !dbg !10241
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10242 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10244, metadata !DIExpression()), !dbg !10245
  %2 = icmp eq i32 %0, 10, !dbg !10246
  br i1 %2, label %3, label %4, !dbg !10248

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !10249
  br label %4, !dbg !10251

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10252
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !10253
  ret i32 %0, !dbg !10254
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10255 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_50, metadata !10258, metadata !DIExpression()), !dbg !10260
  call void @llvm.dbg.value(metadata i8 %0, metadata !10259, metadata !DIExpression()), !dbg !10260
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10261, !srcloc !10263
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !10264
  ret void, !dbg !10265
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10266 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_50, metadata !10268, metadata !DIExpression()), !dbg !10271
  call void @llvm.dbg.value(metadata i8 %0, metadata !10269, metadata !DIExpression()), !dbg !10271
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_50, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10272
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10270, metadata !DIExpression()), !dbg !10271
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10273
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10273
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_50, i8 noundef zeroext %0) #25, !dbg !10274
  ret void, !dbg !10275
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10276 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_50, metadata !10278, metadata !DIExpression()), !dbg !10279
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_50) #25, !dbg !10280
  ret i1 %1, !dbg !10281
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !10282 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10329, metadata !DIExpression()), !dbg !10332
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10330, metadata !DIExpression()), !dbg !10332
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10331, metadata !DIExpression()), !dbg !10332
  ret void, !dbg !10333
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10334 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10336, metadata !DIExpression()), !dbg !10341
  call void @llvm.dbg.value(metadata i8 %1, metadata !10337, metadata !DIExpression()), !dbg !10341
  call void @llvm.dbg.value(metadata i32 %2, metadata !10338, metadata !DIExpression()), !dbg !10341
  %5 = bitcast i32* %4 to i8*, !dbg !10342
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10342
  call void @llvm.dbg.value(metadata i32* %4, metadata !10340, metadata !DIExpression(DW_OP_deref)), !dbg !10341
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !10343
  call void @llvm.dbg.value(metadata i32 %6, metadata !10339, metadata !DIExpression()), !dbg !10341
  %7 = icmp eq i32 %6, 0, !dbg !10344
  br i1 %7, label %8, label %31, !dbg !10346

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !10339, metadata !DIExpression()), !dbg !10341
  %9 = and i32 %2, 131072, !dbg !10347
  %10 = icmp eq i32 %9, 0, !dbg !10349
  br i1 %10, label %28, label %11, !dbg !10350

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !10351
  %13 = icmp eq i32 %12, 0, !dbg !10354
  br i1 %13, label %18, label %14, !dbg !10355

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !10356
  %16 = shl nuw i32 1, %15, !dbg !10356
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !10358
  br label %25, !dbg !10359

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !10360
  %20 = icmp eq i32 %19, 0, !dbg !10362
  %21 = zext i8 %1 to i32, !dbg !10341
  br i1 %20, label %25, label %22, !dbg !10363

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !10364
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !10366
  br label %25, !dbg !10367

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !10368
  %27 = load i32, i32* %4, align 4, !dbg !10369
  call void @llvm.dbg.value(metadata i32 %30, metadata !10340, metadata !DIExpression()), !dbg !10341
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !10370
  br label %31, !dbg !10371

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !10368
  %30 = load i32, i32* %4, align 4, !dbg !10369
  call void @llvm.dbg.value(metadata i32 %30, metadata !10340, metadata !DIExpression()), !dbg !10341
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !10370
  call void @llvm.dbg.value(metadata i32 0, metadata !10339, metadata !DIExpression()), !dbg !10341
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10372
  ret i32 %6, !dbg !10372
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #5 !dbg !10373 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10377, metadata !DIExpression()), !dbg !10382
  call void @llvm.dbg.value(metadata i32* %1, metadata !10378, metadata !DIExpression()), !dbg !10382
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10383
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10383
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10383
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10379, metadata !DIExpression()), !dbg !10382
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10384
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10384
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10384
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10381, metadata !DIExpression()), !dbg !10382
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !10385
  store i32 %9, i32* %1, align 4, !dbg !10386
  ret i32 0, !dbg !10387
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !10388 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10390, metadata !DIExpression()), !dbg !10396
  call void @llvm.dbg.value(metadata i32 %1, metadata !10391, metadata !DIExpression()), !dbg !10396
  call void @llvm.dbg.value(metadata i32 %2, metadata !10392, metadata !DIExpression()), !dbg !10396
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10397
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !10397
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !10397
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !10393, metadata !DIExpression()), !dbg !10396
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !10398
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !10398
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !10398
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !10394, metadata !DIExpression()), !dbg !10396
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !10399
  call void @llvm.dbg.value(metadata i32 %10, metadata !10395, metadata !DIExpression()), !dbg !10396
  %11 = xor i32 %1, -1, !dbg !10400
  %12 = and i32 %10, %11, !dbg !10401
  %13 = and i32 %2, %1, !dbg !10402
  %14 = or i32 %12, %13, !dbg !10403
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !10404
  ret i32 0, !dbg !10405
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !10406 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10408, metadata !DIExpression()), !dbg !10412
  call void @llvm.dbg.value(metadata i32 %1, metadata !10409, metadata !DIExpression()), !dbg !10412
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10413
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10413
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10413
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10410, metadata !DIExpression()), !dbg !10412
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10414
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10414
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10414
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10411, metadata !DIExpression()), !dbg !10412
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !10415
  store volatile i32 %1, i32* %9, align 4, !dbg !10415
  ret i32 0, !dbg !10416
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !10417 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10419, metadata !DIExpression()), !dbg !10423
  call void @llvm.dbg.value(metadata i32 %1, metadata !10420, metadata !DIExpression()), !dbg !10423
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10424
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10424
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10424
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10421, metadata !DIExpression()), !dbg !10423
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10425
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10425
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10425
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10422, metadata !DIExpression()), !dbg !10423
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !10426
  ret i32 0, !dbg !10427
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !10428 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10430, metadata !DIExpression()), !dbg !10434
  call void @llvm.dbg.value(metadata i32 %1, metadata !10431, metadata !DIExpression()), !dbg !10434
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10435
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10435
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10435
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10432, metadata !DIExpression()), !dbg !10434
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10436
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10436
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10436
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10433, metadata !DIExpression()), !dbg !10434
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !10437
  %10 = load volatile i32, i32* %9, align 4, !dbg !10437
  %11 = xor i32 %10, %1, !dbg !10437
  store volatile i32 %11, i32* %9, align 4, !dbg !10437
  ret i32 0, !dbg !10438
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10439 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10441, metadata !DIExpression()), !dbg !10451
  call void @llvm.dbg.value(metadata i8 %1, metadata !10442, metadata !DIExpression()), !dbg !10451
  call void @llvm.dbg.value(metadata i32 %2, metadata !10443, metadata !DIExpression()), !dbg !10451
  call void @llvm.dbg.value(metadata i32 %3, metadata !10444, metadata !DIExpression()), !dbg !10451
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10452
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10452
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10452
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10445, metadata !DIExpression()), !dbg !10451
  call void @llvm.dbg.value(metadata i8* undef, metadata !10446, metadata !DIExpression()), !dbg !10451
  call void @llvm.dbg.value(metadata i32 0, metadata !10448, metadata !DIExpression()), !dbg !10451
  call void @llvm.dbg.value(metadata i32 0, metadata !10449, metadata !DIExpression()), !dbg !10451
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !10453

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !10454
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !10458
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10459
  %12 = load i32, i32* %11, align 4, !dbg !10459
  %13 = icmp eq i32 %10, %12, !dbg !10460
  br i1 %13, label %14, label %29, !dbg !10461

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !10462
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !10464
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !10465
  br label %29, !dbg !10466

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10467
  %17 = load i8*, i8** %16, align 4, !dbg !10467
  call void @llvm.dbg.value(metadata i8* %17, metadata !10446, metadata !DIExpression()), !dbg !10451
  %18 = zext i8 %1 to i32, !dbg !10468
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !10470
  %20 = icmp eq i32 %19, 0, !dbg !10471
  br i1 %20, label %21, label %29, !dbg !10472

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10473
  %23 = load i32, i32* %22, align 4, !dbg !10473
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !10474
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10475

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !10448, metadata !DIExpression()), !dbg !10451
  br label %27, !dbg !10476

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !10448, metadata !DIExpression()), !dbg !10451
  br label %27, !dbg !10478

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !10448, metadata !DIExpression()), !dbg !10451
  br label %27, !dbg !10479

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !10451
  call void @llvm.dbg.value(metadata i32 %28, metadata !10448, metadata !DIExpression()), !dbg !10451
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !10480
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !10481
  br label %29, !dbg !10481

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !10451
  call void @llvm.dbg.value(metadata i32 %30, metadata !10449, metadata !DIExpression()), !dbg !10451
  call void @llvm.dbg.label(metadata !10450), !dbg !10482
  ret i32 %30, !dbg !10483
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !10484 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10486, metadata !DIExpression()), !dbg !10490
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10487, metadata !DIExpression()), !dbg !10490
  call void @llvm.dbg.value(metadata i1 %2, metadata !10488, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10490
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10491
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10491
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10491
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10489, metadata !DIExpression()), !dbg !10490
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10492
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !10493
  ret i32 %8, !dbg !10494
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !10495 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10501, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10502, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata i1 %2, metadata !10503, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10504
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !10505
  br i1 %4, label %10, label %5, !dbg !10507

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10508
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #24, !dbg !10511
  %8 = or i1 %7, %2, !dbg !10512
  %9 = select i1 %8, i32 0, i32 -22, !dbg !10512
  br i1 %2, label %11, label %13, !dbg !10512

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !10513

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10514
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #24, !dbg !10517
  br label %13, !dbg !10518

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !10504
  ret i32 %14, !dbg !10519
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10520 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10524, metadata !DIExpression()), !dbg !10525
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10526
  %3 = icmp eq %struct._snode* %2, null, !dbg !10526
  ret i1 %3, !dbg !10526
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !10527 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10531, metadata !DIExpression()), !dbg !10535
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10532, metadata !DIExpression()), !dbg !10535
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10533, metadata !DIExpression()), !dbg !10535
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10536
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10534, metadata !DIExpression()), !dbg !10535
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10533, metadata !DIExpression()), !dbg !10535
  %4 = icmp eq %struct._snode* %3, null, !dbg !10538
  br i1 %4, label %15, label %5, !dbg !10536

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10534, metadata !DIExpression()), !dbg !10535
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10533, metadata !DIExpression()), !dbg !10535
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10540
  br i1 %6, label %9, label %11, !dbg !10543

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10534, metadata !DIExpression()), !dbg !10535
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10533, metadata !DIExpression()), !dbg !10535
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10540
  br i1 %8, label %9, label %11, !dbg !10543, !llvm.loop !10544

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !10545
  br label %15, !dbg !10545

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10534, metadata !DIExpression()), !dbg !10535
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10533, metadata !DIExpression()), !dbg !10535
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !10538
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10534, metadata !DIExpression()), !dbg !10535
  %14 = icmp eq %struct._snode* %13, null, !dbg !10538
  br i1 %14, label %15, label %7, !dbg !10536, !llvm.loop !10544

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !10548 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10552, metadata !DIExpression()), !dbg !10554
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10553, metadata !DIExpression()), !dbg !10554
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10555
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !10555
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !10555
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10556
  %5 = icmp eq %struct._snode* %4, null, !dbg !10556
  br i1 %5, label %6, label %8, !dbg !10555

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10558
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !10558
  br label %8, !dbg !10558

8:                                                ; preds = %6, %2
  ret void, !dbg !10555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10560 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10564, metadata !DIExpression()), !dbg !10565
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10566
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10566
  ret %struct._snode* %3, !dbg !10567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !10568 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10572, metadata !DIExpression()), !dbg !10574
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10573, metadata !DIExpression()), !dbg !10574
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10575
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10576
  ret void, !dbg !10577
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !10578 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10580, metadata !DIExpression()), !dbg !10582
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10581, metadata !DIExpression()), !dbg !10582
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10583
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10584
  ret void, !dbg !10585
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10586 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10588, metadata !DIExpression()), !dbg !10589
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10590
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10590
  ret %struct._snode* %3, !dbg !10591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !10592 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10594, metadata !DIExpression()), !dbg !10596
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10595, metadata !DIExpression()), !dbg !10596
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10597
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10598
  ret void, !dbg !10599
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !10600 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10604, metadata !DIExpression()), !dbg !10607
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10605, metadata !DIExpression()), !dbg !10607
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10606, metadata !DIExpression()), !dbg !10607
  %4 = icmp eq %struct._snode* %1, null, !dbg !10608
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !10610
  br i1 %4, label %6, label %11, !dbg !10611

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !10612
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10614
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10614
  br i1 %8, label %9, label %15, !dbg !10612

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10616
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !10616
  br label %15, !dbg !10616

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !10618
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10620
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10620
  br i1 %13, label %14, label %15, !dbg !10618

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !10622
  br label %15, !dbg !10622

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !10611
  ret void, !dbg !10611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !10624 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10628, metadata !DIExpression()), !dbg !10629
  %2 = icmp eq %struct._snode* %0, null, !dbg !10630
  br i1 %2, label %5, label %3, !dbg !10630

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !10630
  br label %5, !dbg !10630

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10630
  ret %struct._snode* %6, !dbg !10630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10631 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10633, metadata !DIExpression()), !dbg !10634
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !10635
  ret %struct._snode* %2, !dbg !10635
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10636 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10638, metadata !DIExpression()), !dbg !10639
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10640
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10640
  ret %struct._snode* %3, !dbg !10641
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10642 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10644, metadata !DIExpression()), !dbg !10647
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !10648, !range !10649
  call void @llvm.dbg.value(metadata i32 %2, metadata !10645, metadata !DIExpression()), !dbg !10647
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !10650
  call void @llvm.dbg.value(metadata i32 %3, metadata !10646, metadata !DIExpression()), !dbg !10647
  ret i32 %3, !dbg !10651
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10654, metadata !DIExpression()), !dbg !10657
  call void @llvm.dbg.value(metadata i8* %1, metadata !10655, metadata !DIExpression()), !dbg !10657
  call void @llvm.dbg.value(metadata i8* %1, metadata !10656, metadata !DIExpression()), !dbg !10657
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10658
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10658
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10659
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10659
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10659
  %8 = shl nuw i32 1, %0, !dbg !10660
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !10661
  ret void, !dbg !10662
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10663 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10667, metadata !DIExpression()), !dbg !10673
  call void @llvm.dbg.value(metadata i32 %1, metadata !10668, metadata !DIExpression()), !dbg !10673
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10669, metadata !DIExpression()), !dbg !10673
  %4 = bitcast i64* %3 to i8*, !dbg !10674
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10674
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10671, metadata !DIExpression()), !dbg !10673
  store i64 70368744177732, i64* %3, align 8, !dbg !10675
  call void @llvm.dbg.value(metadata i64* %3, metadata !10671, metadata !DIExpression(DW_OP_deref)), !dbg !10673
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !10676
  call void @llvm.dbg.value(metadata i32 %5, metadata !10672, metadata !DIExpression()), !dbg !10673
  %6 = icmp eq i32 %5, 0, !dbg !10677
  br i1 %6, label %7, label %8, !dbg !10679

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !10680
  br label %8, !dbg !10681

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10682
  ret void, !dbg !10682
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10683 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10685, metadata !DIExpression()), !dbg !10688
  call void @llvm.dbg.value(metadata i8* %0, metadata !10686, metadata !DIExpression()), !dbg !10688
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10689
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10687, metadata !DIExpression()), !dbg !10688
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10690
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10690
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #25, !dbg !10691
  ret i32 %5, !dbg !10692
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10693 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10695, metadata !DIExpression()), !dbg !10698
  call void @llvm.dbg.value(metadata i32 %1, metadata !10696, metadata !DIExpression()), !dbg !10698
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !10699
  call void @llvm.dbg.value(metadata i32 %3, metadata !10697, metadata !DIExpression()), !dbg !10698
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !10700
  ret void, !dbg !10701
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !10702 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10706, metadata !DIExpression()), !dbg !10707
  %2 = sdiv i32 %0, 4, !dbg !10708
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10709
  %6 = add nsw i32 %5, 16, !dbg !10710
  %7 = shl i32 15, %6, !dbg !10711
  %8 = or i32 %7, %2, !dbg !10712
  ret i32 %8, !dbg !10713
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10714 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10718, metadata !DIExpression()), !dbg !10720
  call void @llvm.dbg.value(metadata i32 %1, metadata !10719, metadata !DIExpression()), !dbg !10720
  %3 = and i32 %1, 255, !dbg !10721
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10721
  %5 = load volatile i32, i32* %4, align 4, !dbg !10721
  %6 = lshr i32 %1, 16, !dbg !10721
  %7 = xor i32 %6, -1, !dbg !10721
  %8 = and i32 %5, %7, !dbg !10721
  call void @llvm.dbg.value(metadata i32 %6, metadata !10722, metadata !DIExpression()) #23, !dbg !10726
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10728, !srcloc !10729
  call void @llvm.dbg.value(metadata i32 %9, metadata !10725, metadata !DIExpression()) #23, !dbg !10726
  call void @llvm.dbg.value(metadata i32 %9, metadata !10730, metadata !DIExpression()) #23, !dbg !10735
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !10737, !range !8239
  %11 = shl i32 %0, %10, !dbg !10721
  %12 = or i32 %11, %8, !dbg !10721
  store volatile i32 %12, i32* %4, align 4, !dbg !10721
  ret void, !dbg !10738
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10739 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10743, metadata !DIExpression()), !dbg !10748
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10744, metadata !DIExpression()), !dbg !10748
  call void @llvm.dbg.value(metadata i32 %2, metadata !10745, metadata !DIExpression()), !dbg !10748
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10749
  %5 = icmp eq %struct._snode* %4, null, !dbg !10749
  br i1 %5, label %21, label %6, !dbg !10749

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !10751
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10747, metadata !DIExpression()), !dbg !10748
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10746, metadata !DIExpression()), !dbg !10748
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10752
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10752
  %11 = load i32, i32* %10, align 4, !dbg !10752
  %12 = and i32 %11, %2, !dbg !10756
  %13 = icmp eq i32 %12, 0, !dbg !10756
  br i1 %13, label %19, label %14, !dbg !10757

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10746, metadata !DIExpression()), !dbg !10748
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10758
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10758
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10758
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !10760
  br label %19, !dbg !10761

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10746, metadata !DIExpression()), !dbg !10748
  %20 = icmp eq %struct._snode* %8, null, !dbg !10762
  br i1 %20, label %21, label %6, !dbg !10762

21:                                               ; preds = %19, %3
  ret void, !dbg !10763
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10764 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10766, metadata !DIExpression()), !dbg !10767
  %2 = and i32 %0, 255, !dbg !10768
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10768
  %4 = load volatile i32, i32* %3, align 4, !dbg !10768
  %5 = lshr i32 %0, 16, !dbg !10768
  %6 = and i32 %4, %5, !dbg !10768
  call void @llvm.dbg.value(metadata i32 %5, metadata !10722, metadata !DIExpression()) #23, !dbg !10769
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !10771, !srcloc !10729
  call void @llvm.dbg.value(metadata i32 %7, metadata !10725, metadata !DIExpression()) #23, !dbg !10769
  call void @llvm.dbg.value(metadata i32 %7, metadata !10730, metadata !DIExpression()) #23, !dbg !10772
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10774, !range !8239
  %9 = lshr i32 %6, %8, !dbg !10775
  ret i32 %9, !dbg !10776
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10777 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10782, metadata !DIExpression()), !dbg !10784
  call void @llvm.dbg.value(metadata i32 %1, metadata !10783, metadata !DIExpression()), !dbg !10784
  %3 = shl i32 %1, 16, !dbg !10785
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10785
  store volatile i32 %3, i32* %4, align 4, !dbg !10785
  ret void, !dbg !10786
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !10787 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10791, metadata !DIExpression()), !dbg !10792
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10793
  %3 = load volatile i32, i32* %2, align 4, !dbg !10793
  ret i32 %3, !dbg !10794
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10795 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10797, metadata !DIExpression()), !dbg !10799
  call void @llvm.dbg.value(metadata i32 %1, metadata !10798, metadata !DIExpression()), !dbg !10799
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10800
  store volatile i32 %1, i32* %3, align 4, !dbg !10800
  ret void, !dbg !10801
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !10802 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10804, metadata !DIExpression()), !dbg !10805
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10806
  %3 = load volatile i32, i32* %2, align 4, !dbg !10806
  ret i32 %3, !dbg !10807
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #11 !dbg !10808 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10812, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.value(metadata i32* %1, metadata !10813, metadata !DIExpression()), !dbg !10814
  %3 = and i32 %0, 131072, !dbg !10815
  %4 = icmp eq i32 %3, 0, !dbg !10817
  br i1 %4, label %22, label %5, !dbg !10818

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10819
  %6 = and i32 %0, 2, !dbg !10821
  %7 = icmp eq i32 %6, 0, !dbg !10823
  br i1 %7, label %11, label %8, !dbg !10824

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10825
  %10 = icmp eq i32 %9, 0, !dbg !10825
  br i1 %10, label %33, label %11, !dbg !10828

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10829
  store i32 %12, i32* %1, align 4, !dbg !10829
  %13 = and i32 %0, 16, !dbg !10830
  %14 = icmp eq i32 %13, 0, !dbg !10832
  br i1 %14, label %17, label %15, !dbg !10833

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10834
  br label %31, !dbg !10836

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10837
  %19 = icmp eq i32 %18, 0, !dbg !10839
  br i1 %19, label %33, label %20, !dbg !10840

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10841
  br label %31, !dbg !10843

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10844
  %24 = icmp eq i32 %23, 0, !dbg !10846
  br i1 %24, label %31, label %25, !dbg !10847

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10848
  %27 = icmp eq i32 %26, 0, !dbg !10851
  br i1 %27, label %28, label %31, !dbg !10852

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10853
  br label %33, !dbg !10854

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10814
  ret i32 %34, !dbg !10854
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10855 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10859, metadata !DIExpression()), !dbg !10870
  call void @llvm.dbg.value(metadata i32 %1, metadata !10860, metadata !DIExpression()), !dbg !10870
  call void @llvm.dbg.value(metadata i32 %2, metadata !10861, metadata !DIExpression()), !dbg !10870
  call void @llvm.dbg.value(metadata i32 %3, metadata !10862, metadata !DIExpression()), !dbg !10870
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10871
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10871
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10871
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10863, metadata !DIExpression()), !dbg !10870
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10872
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10872
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10872
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10864, metadata !DIExpression()), !dbg !10870
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !10873
  call void @llvm.dbg.value(metadata i32 %11, metadata !10865, metadata !DIExpression()), !dbg !10870
  %12 = and i32 %2, 48, !dbg !10874
  call void @llvm.dbg.value(metadata i32 %12, metadata !10866, metadata !DIExpression()), !dbg !10870
  call void @llvm.dbg.value(metadata i32 %2, metadata !10867, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10870
  call void @llvm.dbg.value(metadata i32 %2, metadata !10868, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10870
  call void @llvm.dbg.value(metadata i32 %2, metadata !10869, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10870
  %13 = lshr i32 %2, 6, !dbg !10875
  %14 = and i32 %13, 1, !dbg !10875
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !10876
  %15 = lshr i32 %2, 7, !dbg !10877
  %16 = and i32 %15, 3, !dbg !10877
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !10878
  %17 = lshr i32 %2, 9, !dbg !10879
  %18 = and i32 %17, 3, !dbg !10879
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !10880
  %19 = icmp eq i32 %12, 32, !dbg !10881
  br i1 %19, label %20, label %24, !dbg !10883

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10884
  br i1 %21, label %22, label %23, !dbg !10887

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10888
  br label %24, !dbg !10890

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10891
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10893
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !10894
  ret void, !dbg !10895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !10896 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10898, metadata !DIExpression()), !dbg !10900
  %2 = shl nuw i32 1, %0, !dbg !10901
  call void @llvm.dbg.value(metadata i32 %2, metadata !10899, metadata !DIExpression()), !dbg !10900
  ret i32 %2, !dbg !10902
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10903 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10907, metadata !DIExpression()), !dbg !10910
  call void @llvm.dbg.value(metadata i32 %1, metadata !10908, metadata !DIExpression()), !dbg !10910
  call void @llvm.dbg.value(metadata i32 %2, metadata !10909, metadata !DIExpression()), !dbg !10910
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10911
  %5 = load volatile i32, i32* %4, align 4, !dbg !10911
  %6 = xor i32 %1, -1, !dbg !10911
  %7 = and i32 %5, %6, !dbg !10911
  %8 = mul i32 %2, %1, !dbg !10911
  %9 = or i32 %7, %8, !dbg !10911
  store volatile i32 %9, i32* %4, align 4, !dbg !10911
  ret void, !dbg !10912
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10913 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10915, metadata !DIExpression()), !dbg !10918
  call void @llvm.dbg.value(metadata i32 %1, metadata !10916, metadata !DIExpression()), !dbg !10918
  call void @llvm.dbg.value(metadata i32 %2, metadata !10917, metadata !DIExpression()), !dbg !10918
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10919
  %5 = load volatile i32, i32* %4, align 4, !dbg !10919
  call void @llvm.dbg.value(metadata i32 %1, metadata !10722, metadata !DIExpression()) #23, !dbg !10920
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10922, !srcloc !10729
  call void @llvm.dbg.value(metadata i32 %6, metadata !10725, metadata !DIExpression()) #23, !dbg !10920
  call void @llvm.dbg.value(metadata i32 %6, metadata !10730, metadata !DIExpression()) #23, !dbg !10923
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10925, !range !8239
  %8 = shl nuw nsw i32 %7, 1, !dbg !10919
  %9 = shl i32 3, %8, !dbg !10919
  %10 = xor i32 %9, -1, !dbg !10919
  %11 = and i32 %5, %10, !dbg !10919
  call void @llvm.dbg.value(metadata i32 %1, metadata !10722, metadata !DIExpression()) #23, !dbg !10926
  call void @llvm.dbg.value(metadata i32 %6, metadata !10725, metadata !DIExpression()) #23, !dbg !10926
  call void @llvm.dbg.value(metadata i32 %6, metadata !10730, metadata !DIExpression()) #23, !dbg !10928
  %12 = shl i32 %2, %8, !dbg !10919
  %13 = or i32 %11, %12, !dbg !10919
  store volatile i32 %13, i32* %4, align 4, !dbg !10919
  ret void, !dbg !10930
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10931 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10933, metadata !DIExpression()), !dbg !10936
  call void @llvm.dbg.value(metadata i32 %1, metadata !10934, metadata !DIExpression()), !dbg !10936
  call void @llvm.dbg.value(metadata i32 %2, metadata !10935, metadata !DIExpression()), !dbg !10936
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10937
  %5 = load volatile i32, i32* %4, align 4, !dbg !10937
  call void @llvm.dbg.value(metadata i32 %1, metadata !10722, metadata !DIExpression()) #23, !dbg !10938
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10940, !srcloc !10729
  call void @llvm.dbg.value(metadata i32 %6, metadata !10725, metadata !DIExpression()) #23, !dbg !10938
  call void @llvm.dbg.value(metadata i32 %6, metadata !10730, metadata !DIExpression()) #23, !dbg !10941
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10943, !range !8239
  %8 = shl nuw nsw i32 %7, 1, !dbg !10937
  %9 = shl i32 3, %8, !dbg !10937
  %10 = xor i32 %9, -1, !dbg !10937
  %11 = and i32 %5, %10, !dbg !10937
  call void @llvm.dbg.value(metadata i32 %1, metadata !10722, metadata !DIExpression()) #23, !dbg !10944
  call void @llvm.dbg.value(metadata i32 %6, metadata !10725, metadata !DIExpression()) #23, !dbg !10944
  call void @llvm.dbg.value(metadata i32 %6, metadata !10730, metadata !DIExpression()) #23, !dbg !10946
  %12 = shl i32 %2, %8, !dbg !10937
  %13 = or i32 %11, %12, !dbg !10937
  store volatile i32 %13, i32* %4, align 4, !dbg !10937
  ret void, !dbg !10948
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10949 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10951, metadata !DIExpression()), !dbg !10954
  call void @llvm.dbg.value(metadata i32 %1, metadata !10952, metadata !DIExpression()), !dbg !10954
  call void @llvm.dbg.value(metadata i32 %2, metadata !10953, metadata !DIExpression()), !dbg !10954
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10955
  %5 = load volatile i32, i32* %4, align 4, !dbg !10955
  call void @llvm.dbg.value(metadata i32 %1, metadata !10722, metadata !DIExpression()) #23, !dbg !10956
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10958, !srcloc !10729
  call void @llvm.dbg.value(metadata i32 %6, metadata !10725, metadata !DIExpression()) #23, !dbg !10956
  call void @llvm.dbg.value(metadata i32 %6, metadata !10730, metadata !DIExpression()) #23, !dbg !10959
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10961, !range !8239
  %8 = shl nuw nsw i32 %7, 2, !dbg !10955
  %9 = shl i32 15, %8, !dbg !10955
  %10 = xor i32 %9, -1, !dbg !10955
  %11 = and i32 %5, %10, !dbg !10955
  call void @llvm.dbg.value(metadata i32 %1, metadata !10722, metadata !DIExpression()) #23, !dbg !10962
  call void @llvm.dbg.value(metadata i32 %6, metadata !10725, metadata !DIExpression()) #23, !dbg !10962
  call void @llvm.dbg.value(metadata i32 %6, metadata !10730, metadata !DIExpression()) #23, !dbg !10964
  %12 = shl i32 %2, %8, !dbg !10955
  %13 = or i32 %11, %12, !dbg !10955
  store volatile i32 %13, i32* %4, align 4, !dbg !10955
  ret void, !dbg !10966
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10967 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10969, metadata !DIExpression()), !dbg !10972
  call void @llvm.dbg.value(metadata i32 %1, metadata !10970, metadata !DIExpression()), !dbg !10972
  call void @llvm.dbg.value(metadata i32 %2, metadata !10971, metadata !DIExpression()), !dbg !10972
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10973
  %5 = load volatile i32, i32* %4, align 4, !dbg !10973
  %6 = lshr i32 %1, 8, !dbg !10973
  call void @llvm.dbg.value(metadata i32 %6, metadata !10722, metadata !DIExpression()) #23, !dbg !10974
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10976, !srcloc !10729
  call void @llvm.dbg.value(metadata i32 %7, metadata !10725, metadata !DIExpression()) #23, !dbg !10974
  call void @llvm.dbg.value(metadata i32 %7, metadata !10730, metadata !DIExpression()) #23, !dbg !10977
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10979, !range !8239
  %9 = shl nuw nsw i32 %8, 2, !dbg !10973
  %10 = shl i32 15, %9, !dbg !10973
  %11 = xor i32 %10, -1, !dbg !10973
  %12 = and i32 %5, %11, !dbg !10973
  call void @llvm.dbg.value(metadata i32 %6, metadata !10722, metadata !DIExpression()) #23, !dbg !10980
  call void @llvm.dbg.value(metadata i32 %7, metadata !10725, metadata !DIExpression()) #23, !dbg !10980
  call void @llvm.dbg.value(metadata i32 %7, metadata !10730, metadata !DIExpression()) #23, !dbg !10982
  %13 = shl i32 %2, %9, !dbg !10973
  %14 = or i32 %12, %13, !dbg !10973
  store volatile i32 %14, i32* %4, align 4, !dbg !10973
  ret void, !dbg !10984
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10985 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10987, metadata !DIExpression()), !dbg !10990
  call void @llvm.dbg.value(metadata i32 %1, metadata !10988, metadata !DIExpression()), !dbg !10990
  call void @llvm.dbg.value(metadata i32 %2, metadata !10989, metadata !DIExpression()), !dbg !10990
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10991
  %5 = load volatile i32, i32* %4, align 4, !dbg !10991
  call void @llvm.dbg.value(metadata i32 %1, metadata !10722, metadata !DIExpression()) #23, !dbg !10992
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10994, !srcloc !10729
  call void @llvm.dbg.value(metadata i32 %6, metadata !10725, metadata !DIExpression()) #23, !dbg !10992
  call void @llvm.dbg.value(metadata i32 %6, metadata !10730, metadata !DIExpression()) #23, !dbg !10995
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10997, !range !8239
  %8 = shl nuw nsw i32 %7, 1, !dbg !10991
  %9 = shl i32 3, %8, !dbg !10991
  %10 = xor i32 %9, -1, !dbg !10991
  %11 = and i32 %5, %10, !dbg !10991
  call void @llvm.dbg.value(metadata i32 %1, metadata !10722, metadata !DIExpression()) #23, !dbg !10998
  call void @llvm.dbg.value(metadata i32 %6, metadata !10725, metadata !DIExpression()) #23, !dbg !10998
  call void @llvm.dbg.value(metadata i32 %6, metadata !10730, metadata !DIExpression()) #23, !dbg !11000
  %12 = shl i32 %2, %8, !dbg !10991
  %13 = or i32 %11, %12, !dbg !10991
  store volatile i32 %13, i32* %4, align 4, !dbg !10991
  ret void, !dbg !11002
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !11003 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11005, metadata !DIExpression()), !dbg !11008
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11009
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !11009
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !11009
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !11006, metadata !DIExpression()), !dbg !11008
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !11010
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !11011
  %6 = tail call fastcc zeroext i1 @device_is_ready.130() #24, !dbg !11012
  br i1 %6, label %7, label %11, !dbg !11014

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !11015
  call void @llvm.dbg.value(metadata i32 %8, metadata !11007, metadata !DIExpression()), !dbg !11008
  %9 = icmp slt i32 %8, 0, !dbg !11016
  %10 = select i1 %9, i32 %8, i32 0, !dbg !11018
  br label %11, !dbg !11018

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !11008
  ret i32 %12, !dbg !11019
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.130() unnamed_addr #1 !dbg !11020 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11024, metadata !DIExpression()), !dbg !11025
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11026, !srcloc !11028
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.131() #24, !dbg !11029
  ret i1 %1, !dbg !11030
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11031 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11035, metadata !DIExpression()), !dbg !11040
  call void @llvm.dbg.value(metadata i8 1, metadata !11036, metadata !DIExpression()), !dbg !11040
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !11037, metadata !DIExpression()), !dbg !11040
  call void @llvm.dbg.value(metadata i32 0, metadata !11038, metadata !DIExpression()), !dbg !11040
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11039, metadata !DIExpression()), !dbg !11040
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11041
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !11041
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !11041
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !11037, metadata !DIExpression()), !dbg !11040
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !11042
  %6 = bitcast %struct.vnd_sensor_config* %5 to i8*, !dbg !11045
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !11046
  call void @llvm.dbg.value(metadata i32 %7, metadata !11038, metadata !DIExpression()), !dbg !11040
  call void @llvm.dbg.value(metadata i32 %7, metadata !11038, metadata !DIExpression()), !dbg !11040
  ret i32 %7, !dbg !11047
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.131() unnamed_addr #1 !dbg !11048 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11050, metadata !DIExpression()), !dbg !11051
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #25, !dbg !11052
  ret i1 %1, !dbg !11053
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !11054 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11058, metadata !DIExpression()), !dbg !11066
  call void @llvm.dbg.value(metadata i32 %1, metadata !11059, metadata !DIExpression()), !dbg !11066
  call void @llvm.dbg.value(metadata i32 %2, metadata !11060, metadata !DIExpression()), !dbg !11066
  call void @llvm.dbg.value(metadata i32 %3, metadata !11061, metadata !DIExpression()), !dbg !11066
  call void @llvm.dbg.value(metadata i32 0, metadata !11062, metadata !DIExpression()), !dbg !11066
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !11067
  %5 = icmp eq i32 %3, 17, !dbg !11068
  br i1 %5, label %6, label %14, !dbg !11069

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !11070
  call void @llvm.dbg.value(metadata i32 %7, metadata !11063, metadata !DIExpression()), !dbg !11071
  %8 = icmp eq i32 %7, 0, !dbg !11072
  %9 = shl nuw i32 1, %1, !dbg !11074
  br i1 %8, label %12, label %10, !dbg !11075

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !11076
  br label %14, !dbg !11078

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !11079
  br label %14, !dbg !11082

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !11083
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !11084 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11086, metadata !DIExpression()), !dbg !11090
  call void @llvm.dbg.value(metadata i8* %1, metadata !11087, metadata !DIExpression()), !dbg !11090
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11091
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11091
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11091
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11088, metadata !DIExpression()), !dbg !11090
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11092
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11092
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !11094
  %9 = icmp eq i32 %8, 0, !dbg !11094
  br i1 %9, label %12, label %10, !dbg !11095

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11096
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !11098
  br label %12, !dbg !11099

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11100
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !11102
  %15 = icmp eq i32 %14, 0, !dbg !11102
  br i1 %15, label %19, label %16, !dbg !11103

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11104
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !11105
  store i8 %18, i8* %1, align 1, !dbg !11106
  br label %19, !dbg !11107

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !11090
  ret i32 %20, !dbg !11108
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !11109 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11111, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.value(metadata i8 %1, metadata !11112, metadata !DIExpression()), !dbg !11115
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11116
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11116
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11116
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11113, metadata !DIExpression()), !dbg !11115
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !11117

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11118
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !11121
  %10 = icmp eq i32 %9, 0, !dbg !11121
  br i1 %10, label %18, label %11, !dbg !11122

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11123, !srcloc !11130
  call void @llvm.dbg.value(metadata i32 undef, metadata !11126, metadata !DIExpression()) #23, !dbg !11131
  call void @llvm.dbg.value(metadata i32 undef, metadata !11127, metadata !DIExpression()) #23, !dbg !11131
  call void @llvm.dbg.value(metadata i32 undef, metadata !11114, metadata !DIExpression()), !dbg !11115
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11132
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !11134
  %15 = icmp eq i32 %14, 0, !dbg !11134
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !11123
  br i1 %15, label %17, label %19, !dbg !11135

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !11126, metadata !DIExpression()) #23, !dbg !11131
  call void @llvm.dbg.value(metadata i32 %16, metadata !11114, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.value(metadata i32 undef, metadata !11136, metadata !DIExpression()) #23, !dbg !11139
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !11141, !srcloc !11142
  br label %18, !dbg !11143

18:                                               ; preds = %17, %7
  br label %7, !dbg !11118, !llvm.loop !11144

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !11123
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11146
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !11147
  call void @llvm.dbg.value(metadata i32 %20, metadata !11136, metadata !DIExpression()) #23, !dbg !11148
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !11150, !srcloc !11142
  ret void, !dbg !11151
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !11152 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11154, metadata !DIExpression()), !dbg !11157
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11158
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11158
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11158
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11155, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata i32 0, metadata !11156, metadata !DIExpression()), !dbg !11157
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11159
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11159
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !11161
  %8 = icmp ne i32 %7, 0, !dbg !11161
  %9 = zext i1 %8 to i32, !dbg !11162
  call void @llvm.dbg.value(metadata i32 %9, metadata !11156, metadata !DIExpression()), !dbg !11157
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11163
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !11165
  %12 = icmp eq i32 %11, 0, !dbg !11165
  %13 = or i32 %9, 2, !dbg !11166
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !11166
  call void @llvm.dbg.value(metadata i32 %14, metadata !11156, metadata !DIExpression()), !dbg !11157
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11167
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !11169
  %17 = icmp eq i32 %16, 0, !dbg !11169
  %18 = or i32 %14, 4, !dbg !11170
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !11170
  call void @llvm.dbg.value(metadata i32 %19, metadata !11156, metadata !DIExpression()), !dbg !11157
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11171
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !11173
  %22 = icmp eq i32 %21, 0, !dbg !11173
  %23 = or i32 %19, 8, !dbg !11174
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !11174
  call void @llvm.dbg.value(metadata i32 %24, metadata !11156, metadata !DIExpression()), !dbg !11157
  %25 = and i32 %24, 8, !dbg !11175
  %26 = icmp eq i32 %25, 0, !dbg !11175
  br i1 %26, label %29, label %27, !dbg !11177

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11178
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !11180
  br label %29, !dbg !11181

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !11182
  %31 = icmp eq i32 %30, 0, !dbg !11182
  br i1 %31, label %34, label %32, !dbg !11184

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11185
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !11187
  br label %34, !dbg !11188

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !11189
  %36 = icmp eq i32 %35, 0, !dbg !11189
  br i1 %36, label %39, label %37, !dbg !11191

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11192
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !11194
  br label %39, !dbg !11195

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !11196
  %41 = icmp eq i32 %40, 0, !dbg !11196
  br i1 %41, label %44, label %42, !dbg !11198

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11199
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !11201
  br label %44, !dbg !11202

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11203
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !11204
  ret i32 %24, !dbg !11205
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !11206 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11208, metadata !DIExpression()), !dbg !11217
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11209, metadata !DIExpression()), !dbg !11217
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11218
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11218
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11218
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11210, metadata !DIExpression()), !dbg !11217
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11219
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !11219
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !11219
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !11211, metadata !DIExpression()), !dbg !11217
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11220
  %10 = load i8, i8* %9, align 4, !dbg !11220
  %11 = zext i8 %10 to i32, !dbg !11221
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !11222
  call void @llvm.dbg.value(metadata i32 %12, metadata !11213, metadata !DIExpression()), !dbg !11217
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11223
  %14 = load i8, i8* %13, align 1, !dbg !11223
  %15 = zext i8 %14 to i32, !dbg !11224
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !11225
  call void @llvm.dbg.value(metadata i32 %16, metadata !11214, metadata !DIExpression()), !dbg !11217
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11226
  %18 = load i8, i8* %17, align 2, !dbg !11226
  %19 = zext i8 %18 to i32, !dbg !11227
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !11228
  call void @llvm.dbg.value(metadata i32 %20, metadata !11215, metadata !DIExpression()), !dbg !11217
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11229
  %22 = load i8, i8* %21, align 1, !dbg !11229
  %23 = zext i8 %22 to i32, !dbg !11230
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !11231
  call void @llvm.dbg.value(metadata i32 %24, metadata !11216, metadata !DIExpression()), !dbg !11217
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !11232

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !11234
  br i1 %26, label %69, label %27, !dbg !11236

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !11237

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !11238
  br i1 %29, label %65, label %30, !dbg !11238

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !11240
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !11217
  br i1 %31, label %38, label %34, !dbg !11242

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !11243
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !11243

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !11246
  br i1 %37, label %38, label %69, !dbg !11247

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11248
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !11249
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !11250
  %41 = icmp eq i32 %12, %40, !dbg !11252
  br i1 %41, label %43, label %42, !dbg !11253

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !11254
  br label %43, !dbg !11256

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !11257
  %45 = icmp eq i32 %16, %44, !dbg !11259
  br i1 %45, label %47, label %46, !dbg !11260

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !11261
  br label %47, !dbg !11263

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !11264
  %49 = icmp eq i32 %20, %48, !dbg !11266
  br i1 %49, label %51, label %50, !dbg !11267

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !11268
  br label %51, !dbg !11270

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !11271
  %53 = icmp eq i32 %24, %52, !dbg !11273
  br i1 %53, label %55, label %54, !dbg !11274

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !11275
  br label %55, !dbg !11277

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11278
  %57 = load i32, i32* %56, align 4, !dbg !11278
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !11280
  %59 = load i32, i32* %58, align 4, !dbg !11280
  %60 = icmp eq i32 %57, %59, !dbg !11281
  br i1 %60, label %63, label %61, !dbg !11282

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !11283
  %62 = load i32, i32* %56, align 4, !dbg !11285
  store i32 %62, i32* %58, align 4, !dbg !11286
  br label %63, !dbg !11287

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !11288
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !11289
  br label %69, !dbg !11290

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !11238
  %67 = and i8 %66, 1, !dbg !11238
  %68 = icmp eq i8 %67, 0, !dbg !11238
  br i1 %68, label %30, label %69, !dbg !11238

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !11217
  ret i32 %70, !dbg !11291
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !11292 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11294, metadata !DIExpression()), !dbg !11297
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11295, metadata !DIExpression()), !dbg !11297
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11298
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !11298
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !11298
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !11296, metadata !DIExpression()), !dbg !11297
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !11299
  %7 = load i32, i32* %6, align 4, !dbg !11299
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11300
  store i32 %7, i32* %8, align 4, !dbg !11301
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !11302, !range !11303
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !11304
  %11 = trunc i32 %10 to i8, !dbg !11304
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11305
  store i8 %11, i8* %12, align 4, !dbg !11306
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !11307, !range !11308
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !11309
  %15 = trunc i32 %14 to i8, !dbg !11309
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11310
  store i8 %15, i8* %16, align 1, !dbg !11311
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !11312
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !11313, !range !11303
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !11314
  %20 = trunc i32 %19 to i8, !dbg !11314
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11315
  store i8 %20, i8* %21, align 2, !dbg !11316
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !11317, !range !11318
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !11319
  %24 = trunc i32 %23 to i8, !dbg !11319
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11320
  store i8 %24, i8* %25, align 1, !dbg !11321
  ret i32 0, !dbg !11322
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11323 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11327, metadata !DIExpression()), !dbg !11329
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11330
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11330
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11330
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11328, metadata !DIExpression()), !dbg !11329
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11331
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11331
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !11332
  ret i32 %7, !dbg !11333
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !11334 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11338, metadata !DIExpression()), !dbg !11339
  %2 = icmp eq i32 %0, 1024, !dbg !11340
  %3 = select i1 %2, i32 2, i32 0, !dbg !11340
  %4 = icmp eq i32 %0, 1536, !dbg !11340
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11340
  ret i32 %5, !dbg !11341
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11342 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11344, metadata !DIExpression()), !dbg !11346
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11347
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11347
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11347
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11345, metadata !DIExpression()), !dbg !11346
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11348
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11348
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !11349
  ret i32 %7, !dbg !11350
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #12 !dbg !11351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11355, metadata !DIExpression()), !dbg !11356
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11357
  %3 = icmp ult i32 %2, 4, !dbg !11357
  br i1 %3, label %4, label %7, !dbg !11357

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11357
  %6 = load i32, i32* %5, align 4, !dbg !11357
  br label %7, !dbg !11357

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11358
  ret i32 %8, !dbg !11360
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11361 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11363, metadata !DIExpression()), !dbg !11365
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11366
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11366
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11366
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11364, metadata !DIExpression()), !dbg !11365
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11367
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11367
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !11368
  ret i32 %7, !dbg !11369
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !11370 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11374, metadata !DIExpression()), !dbg !11376
  call void @llvm.dbg.value(metadata i32 %1, metadata !11375, metadata !DIExpression()), !dbg !11376
  %3 = icmp eq i32 %0, 4096, !dbg !11377
  %4 = icmp eq i32 %1, 0, !dbg !11377
  %5 = select i1 %4, i32 4, i32 3, !dbg !11377
  %6 = select i1 %4, i32 3, i32 2, !dbg !11377
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11377
  ret i32 %7, !dbg !11378
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11379 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11381, metadata !DIExpression()), !dbg !11383
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11384
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11384
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11384
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11382, metadata !DIExpression()), !dbg !11383
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11385
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11385
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !11386
  ret i32 %7, !dbg !11387
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !11388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11392, metadata !DIExpression()), !dbg !11393
  %2 = icmp eq i32 %0, 768, !dbg !11394
  %3 = zext i1 %2 to i32, !dbg !11393
  ret i32 %3, !dbg !11396
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11397 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11402, metadata !DIExpression()), !dbg !11403
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11404
  %3 = load volatile i32, i32* %2, align 4, !dbg !11404
  %4 = and i32 %3, 768, !dbg !11404
  ret i32 %4, !dbg !11405
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11406 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11408, metadata !DIExpression()), !dbg !11409
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11410
  %3 = load volatile i32, i32* %2, align 4, !dbg !11410
  %4 = and i32 %3, 4096, !dbg !11410
  ret i32 %4, !dbg !11411
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11412 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11414, metadata !DIExpression()), !dbg !11415
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11416
  %3 = load volatile i32, i32* %2, align 4, !dbg !11416
  %4 = and i32 %3, 12288, !dbg !11416
  ret i32 %4, !dbg !11417
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11418 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11420, metadata !DIExpression()), !dbg !11421
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11422
  %3 = load volatile i32, i32* %2, align 4, !dbg !11422
  %4 = and i32 %3, 1536, !dbg !11422
  ret i32 %4, !dbg !11423
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !11424 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11428, metadata !DIExpression()), !dbg !11429
  %2 = icmp eq i32 %0, 2, !dbg !11430
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11430
  %4 = icmp eq i32 %0, 1, !dbg !11430
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11430
  ret i32 %5, !dbg !11431
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !11432 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11436, metadata !DIExpression()), !dbg !11437
  %2 = icmp ult i32 %0, 3, !dbg !11438
  br i1 %2, label %3, label %6, !dbg !11438

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11438
  %5 = load i32, i32* %4, align 4, !dbg !11438
  br label %6, !dbg !11438

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11439
  ret i32 %7, !dbg !11441
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !11442 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11446, metadata !DIExpression()), !dbg !11448
  call void @llvm.dbg.value(metadata i32 %1, metadata !11447, metadata !DIExpression()), !dbg !11448
  %3 = icmp eq i32 %0, 4, !dbg !11449
  %4 = icmp eq i32 %1, 0, !dbg !11449
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11449
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11449
  ret i32 %6, !dbg !11450
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !11451 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11455, metadata !DIExpression()), !dbg !11456
  %2 = icmp eq i32 %0, 1, !dbg !11457
  %3 = select i1 %2, i32 768, i32 0, !dbg !11456
  ret i32 %3, !dbg !11459
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11460 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11464, metadata !DIExpression()), !dbg !11465
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11466
  %3 = load volatile i32, i32* %2, align 4, !dbg !11466
  %4 = and i32 %3, -8193, !dbg !11466
  store volatile i32 %4, i32* %2, align 4, !dbg !11466
  ret void, !dbg !11467
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11468 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11472, metadata !DIExpression()), !dbg !11475
  call void @llvm.dbg.value(metadata i32 %1, metadata !11473, metadata !DIExpression()), !dbg !11475
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11476
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11476
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11476
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11474, metadata !DIExpression()), !dbg !11475
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11477
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11477
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11478
  ret void, !dbg !11479
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11480 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11482, metadata !DIExpression()), !dbg !11485
  call void @llvm.dbg.value(metadata i32 %1, metadata !11483, metadata !DIExpression()), !dbg !11485
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11486
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11486
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11486
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11484, metadata !DIExpression()), !dbg !11485
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11487
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11487
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11488
  ret void, !dbg !11489
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11490 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11492, metadata !DIExpression()), !dbg !11495
  call void @llvm.dbg.value(metadata i32 %1, metadata !11493, metadata !DIExpression()), !dbg !11495
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11496
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11496
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11496
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11494, metadata !DIExpression()), !dbg !11495
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11497
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11497
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11498
  ret void, !dbg !11499
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11500 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11502, metadata !DIExpression()), !dbg !11505
  call void @llvm.dbg.value(metadata i32 %1, metadata !11503, metadata !DIExpression()), !dbg !11505
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11506
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11506
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11506
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11504, metadata !DIExpression()), !dbg !11505
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11507
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11507
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11508
  ret void, !dbg !11509
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11510 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11512, metadata !DIExpression()), !dbg !11517
  call void @llvm.dbg.value(metadata i32 %1, metadata !11513, metadata !DIExpression()), !dbg !11517
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11518
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11518
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11518
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11514, metadata !DIExpression()), !dbg !11517
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11519
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11519
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11519
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11515, metadata !DIExpression()), !dbg !11517
  %10 = bitcast i32* %3 to i8*, !dbg !11520
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11520
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11521
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11521
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11525
  %14 = bitcast %struct.vnd_sensor_config** %13 to i8**, !dbg !11525
  %15 = load i8*, i8** %14, align 4, !dbg !11525
  call void @llvm.dbg.value(metadata i32* %3, metadata !11516, metadata !DIExpression(DW_OP_deref)), !dbg !11517
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !11526
  %17 = icmp slt i32 %16, 0, !dbg !11527
  br i1 %17, label %18, label %21, !dbg !11528

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef 1) #24, !dbg !11529
  %20 = zext i8 %19 to i32, !dbg !11529
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.137, i32 0, i32 0), i32 noundef %20) #25, !dbg !11529
  br label %26, !dbg !11535

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11536
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11536
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !11537
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11538
  %25 = load i32, i32* %3, align 4, !dbg !11539
  call void @llvm.dbg.value(metadata i32 %25, metadata !11516, metadata !DIExpression()), !dbg !11517
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !11540
  br label %26, !dbg !11541

26:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11541
  ret void, !dbg !11541
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11542 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11544, metadata !DIExpression()), !dbg !11545
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11546
  %3 = load volatile i32, i32* %2, align 4, !dbg !11546
  %4 = or i32 %3, 8192, !dbg !11546
  store volatile i32 %4, i32* %2, align 4, !dbg !11546
  ret void, !dbg !11547
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11548 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11550, metadata !DIExpression()), !dbg !11554
  call void @llvm.dbg.value(metadata i8* %1, metadata !11551, metadata !DIExpression()), !dbg !11554
  call void @llvm.dbg.value(metadata i32* %2, metadata !11552, metadata !DIExpression()), !dbg !11554
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11555
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11555
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11555
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11553, metadata !DIExpression()), !dbg !11554
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11556
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11556
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11558
  br i1 %9, label %12, label %10, !dbg !11559

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11560
  br label %12, !dbg !11561

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11554
  ret i32 %13, !dbg !11562
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef %0) unnamed_addr #4 !dbg !11563 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11565, metadata !DIExpression()), !dbg !11566
  %2 = icmp eq i32 %0, 2, !dbg !11567
  %3 = select i1 %2, i8 87, i8 63, !dbg !11567
  %4 = icmp eq i32 %0, 1, !dbg !11567
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11567
  ret i8 %5, !dbg !11568
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11569 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11573, metadata !DIExpression()), !dbg !11575
  call void @llvm.dbg.value(metadata i32 0, metadata !11574, metadata !DIExpression()), !dbg !11575
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11576
  %3 = load volatile i32, i32* %2, align 4, !dbg !11576
  %4 = and i32 %3, -32769, !dbg !11576
  store volatile i32 %4, i32* %2, align 4, !dbg !11576
  ret void, !dbg !11577
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11578 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11582, metadata !DIExpression()), !dbg !11586
  call void @llvm.dbg.value(metadata i32 %1, metadata !11583, metadata !DIExpression()), !dbg !11586
  call void @llvm.dbg.value(metadata i32 0, metadata !11584, metadata !DIExpression()), !dbg !11586
  call void @llvm.dbg.value(metadata i32 %2, metadata !11585, metadata !DIExpression()), !dbg !11586
  %4 = zext i32 %1 to i64, !dbg !11587
  %5 = mul nuw nsw i64 %4, 25, !dbg !11587
  %6 = zext i32 %2 to i64, !dbg !11587
  %7 = shl nuw nsw i64 %6, 2, !dbg !11587
  %8 = udiv i64 %5, %7, !dbg !11587
  %9 = trunc i64 %8 to i32, !dbg !11587
  %10 = udiv i32 %9, 100, !dbg !11587
  %11 = shl nuw nsw i32 %10, 4, !dbg !11587
  %12 = mul i32 %10, -100, !dbg !11587
  %13 = add i32 %12, %9, !dbg !11587
  %14 = shl i32 %13, 4, !dbg !11587
  %15 = add i32 %14, 50, !dbg !11587
  %16 = udiv i32 %15, 100, !dbg !11587
  %17 = and i32 %16, 240, !dbg !11587
  %18 = add nuw nsw i32 %17, %11, !dbg !11587
  %19 = and i32 %16, 15, !dbg !11587
  %20 = and i32 %18, 65520, !dbg !11590
  %21 = or i32 %20, %19, !dbg !11590
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11591
  store volatile i32 %21, i32* %22, align 4, !dbg !11592
  ret void, !dbg !11593
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11594 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11596, metadata !DIExpression()), !dbg !11598
  call void @llvm.dbg.value(metadata i32 %1, metadata !11597, metadata !DIExpression()), !dbg !11598
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11599
  %4 = load volatile i32, i32* %3, align 4, !dbg !11599
  %5 = and i32 %4, -769, !dbg !11599
  %6 = or i32 %5, %1, !dbg !11599
  store volatile i32 %6, i32* %3, align 4, !dbg !11599
  ret void, !dbg !11600
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11601 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11603, metadata !DIExpression()), !dbg !11605
  call void @llvm.dbg.value(metadata i32 %1, metadata !11604, metadata !DIExpression()), !dbg !11605
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11606
  %4 = load volatile i32, i32* %3, align 4, !dbg !11606
  %5 = and i32 %4, -4097, !dbg !11606
  %6 = or i32 %5, %1, !dbg !11606
  store volatile i32 %6, i32* %3, align 4, !dbg !11606
  ret void, !dbg !11607
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11608 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11610, metadata !DIExpression()), !dbg !11612
  call void @llvm.dbg.value(metadata i32 %1, metadata !11611, metadata !DIExpression()), !dbg !11612
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11613
  %4 = load volatile i32, i32* %3, align 4, !dbg !11613
  %5 = and i32 %4, -12289, !dbg !11613
  %6 = or i32 %5, %1, !dbg !11613
  store volatile i32 %6, i32* %3, align 4, !dbg !11613
  ret void, !dbg !11614
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11615 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11617, metadata !DIExpression()), !dbg !11619
  call void @llvm.dbg.value(metadata i32 %1, metadata !11618, metadata !DIExpression()), !dbg !11619
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11620
  %4 = load volatile i32, i32* %3, align 4, !dbg !11620
  %5 = and i32 %4, -1537, !dbg !11620
  %6 = or i32 %5, %1, !dbg !11620
  store volatile i32 %6, i32* %3, align 4, !dbg !11620
  ret void, !dbg !11621
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11622 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11624, metadata !DIExpression()), !dbg !11625
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11626
  %3 = load volatile i32, i32* %2, align 4, !dbg !11626
  %4 = lshr i32 %3, 3, !dbg !11627
  %5 = and i32 %4, 1, !dbg !11627
  ret i32 %5, !dbg !11628
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11629 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11631, metadata !DIExpression()), !dbg !11632
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11633
  %3 = load volatile i32, i32* %2, align 4, !dbg !11633
  %4 = and i32 %3, 1, !dbg !11633
  ret i32 %4, !dbg !11634
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11635 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11637, metadata !DIExpression()), !dbg !11638
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11639
  %3 = load volatile i32, i32* %2, align 4, !dbg !11639
  %4 = lshr i32 %3, 1, !dbg !11640
  %5 = and i32 %4, 1, !dbg !11640
  ret i32 %5, !dbg !11641
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11642 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11644, metadata !DIExpression()), !dbg !11645
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11646
  %3 = load volatile i32, i32* %2, align 4, !dbg !11646
  %4 = lshr i32 %3, 8, !dbg !11647
  %5 = and i32 %4, 1, !dbg !11647
  ret i32 %5, !dbg !11648
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11649 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11651, metadata !DIExpression()), !dbg !11652
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11653
  store volatile i32 -257, i32* %2, align 4, !dbg !11653
  ret void, !dbg !11654
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11655 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11657, metadata !DIExpression()), !dbg !11659
  %3 = bitcast i32* %2 to i8*, !dbg !11660
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11660
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11658, metadata !DIExpression()), !dbg !11661
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11662
  %5 = load volatile i32, i32* %4, align 4, !dbg !11662
  store volatile i32 %5, i32* %2, align 4, !dbg !11663
  %6 = load volatile i32, i32* %2, align 4, !dbg !11664
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11665
  %8 = load volatile i32, i32* %7, align 4, !dbg !11665
  store volatile i32 %8, i32* %2, align 4, !dbg !11666
  %9 = load volatile i32, i32* %2, align 4, !dbg !11667
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11668
  ret void, !dbg !11668
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11669 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11671, metadata !DIExpression()), !dbg !11673
  %3 = bitcast i32* %2 to i8*, !dbg !11674
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11674
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11672, metadata !DIExpression()), !dbg !11675
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11676
  %5 = load volatile i32, i32* %4, align 4, !dbg !11676
  store volatile i32 %5, i32* %2, align 4, !dbg !11677
  %6 = load volatile i32, i32* %2, align 4, !dbg !11678
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11679
  %8 = load volatile i32, i32* %7, align 4, !dbg !11679
  store volatile i32 %8, i32* %2, align 4, !dbg !11680
  %9 = load volatile i32, i32* %2, align 4, !dbg !11681
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11682
  ret void, !dbg !11682
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11683 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11685, metadata !DIExpression()), !dbg !11687
  %3 = bitcast i32* %2 to i8*, !dbg !11688
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11688
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11686, metadata !DIExpression()), !dbg !11689
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11690
  %5 = load volatile i32, i32* %4, align 4, !dbg !11690
  store volatile i32 %5, i32* %2, align 4, !dbg !11691
  %6 = load volatile i32, i32* %2, align 4, !dbg !11692
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11693
  %8 = load volatile i32, i32* %7, align 4, !dbg !11693
  store volatile i32 %8, i32* %2, align 4, !dbg !11694
  %9 = load volatile i32, i32* %2, align 4, !dbg !11695
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11696
  ret void, !dbg !11696
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11697 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11699, metadata !DIExpression()), !dbg !11701
  %3 = bitcast i32* %2 to i8*, !dbg !11702
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11702
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11700, metadata !DIExpression()), !dbg !11703
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11704
  %5 = load volatile i32, i32* %4, align 4, !dbg !11704
  store volatile i32 %5, i32* %2, align 4, !dbg !11705
  %6 = load volatile i32, i32* %2, align 4, !dbg !11706
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11707
  %8 = load volatile i32, i32* %7, align 4, !dbg !11707
  store volatile i32 %8, i32* %2, align 4, !dbg !11708
  %9 = load volatile i32, i32* %2, align 4, !dbg !11709
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11710
  ret void, !dbg !11710
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11711 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11713, metadata !DIExpression()), !dbg !11714
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11715
  %3 = load volatile i32, i32* %2, align 4, !dbg !11715
  %4 = lshr i32 %3, 7, !dbg !11716
  %5 = and i32 %4, 1, !dbg !11716
  ret i32 %5, !dbg !11717
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !11718 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11722, metadata !DIExpression()), !dbg !11724
  call void @llvm.dbg.value(metadata i8 %1, metadata !11723, metadata !DIExpression()), !dbg !11724
  %3 = zext i8 %1 to i32, !dbg !11725
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11726
  store volatile i32 %3, i32* %4, align 4, !dbg !11727
  ret void, !dbg !11728
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11729 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11731, metadata !DIExpression()), !dbg !11732
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11733
  %3 = load volatile i32, i32* %2, align 4, !dbg !11733
  %4 = lshr i32 %3, 5, !dbg !11734
  %5 = and i32 %4, 1, !dbg !11734
  ret i32 %5, !dbg !11735
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11736 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11740, metadata !DIExpression()), !dbg !11741
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11742
  %3 = load volatile i32, i32* %2, align 4, !dbg !11742
  %4 = trunc i32 %3 to i8, !dbg !11743
  ret i8 %4, !dbg !11744
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11745 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11747, metadata !DIExpression()), !dbg !11753
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11754
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11754
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11754
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11748, metadata !DIExpression()), !dbg !11753
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11755
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11755
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11755
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11749, metadata !DIExpression()), !dbg !11753
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !11756
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11757
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11757
  %10 = tail call fastcc zeroext i1 @device_is_ready.141(%struct.device* noundef %9) #24, !dbg !11759
  br i1 %10, label %14, label %11, !dbg !11760

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef 1) #24, !dbg !11761
  %13 = zext i8 %12 to i32, !dbg !11761
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5.142, i32 0, i32 0), i32 noundef %13) #25, !dbg !11761
  br label %62, !dbg !11767

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11768
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11769
  %17 = bitcast %struct.vnd_sensor_config** %16 to i8**, !dbg !11769
  %18 = load i8*, i8** %17, align 4, !dbg !11769
  %19 = tail call fastcc i32 @clock_control_on.143(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !11770
  call void @llvm.dbg.value(metadata i32 %19, metadata !11752, metadata !DIExpression()), !dbg !11753
  %20 = icmp eq i32 %19, 0, !dbg !11771
  br i1 %20, label %24, label %21, !dbg !11773

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef 1) #24, !dbg !11774
  %23 = zext i8 %22 to i32, !dbg !11774
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6.144, i32 0, i32 0), i32 noundef %23) #25, !dbg !11774
  br label %62, !dbg !11780

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11781
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11781
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !11782
  call void @llvm.dbg.value(metadata i32 %27, metadata !11752, metadata !DIExpression()), !dbg !11753
  %28 = icmp slt i32 %27, 0, !dbg !11783
  br i1 %28, label %62, label %29, !dbg !11785

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11786
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11786
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !11787
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11788
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !11789
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11790
  %34 = load i32, i32* %33, align 4, !dbg !11790
  %35 = icmp ult i32 %34, 3, !dbg !11792
  br i1 %35, label %39, label %36, !dbg !11792

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef 2) #24, !dbg !11793
  %38 = zext i8 %37 to i32, !dbg !11793
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7.145, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !11793
  call void @llvm.dbg.value(metadata i32 0, metadata !11750, metadata !DIExpression()), !dbg !11753
  call void @llvm.dbg.value(metadata i32 0, metadata !11751, metadata !DIExpression()), !dbg !11753
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11792
  %41 = load i32, i32* %40, align 4, !dbg !11792
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.8, i32 0, i32 %34, !dbg !11792
  %43 = load i32, i32* %42, align 4, !dbg !11792
  br label %44, !dbg !11792

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11802
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11802
  call void @llvm.dbg.value(metadata i32 %46, metadata !11751, metadata !DIExpression()), !dbg !11753
  call void @llvm.dbg.value(metadata i32 %45, metadata !11750, metadata !DIExpression()), !dbg !11753
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11803
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !11804
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11805
  %49 = load i8, i8* %48, align 4, !dbg !11805, !range !7428
  %50 = icmp eq i8 %49, 0, !dbg !11805
  br i1 %50, label %52, label %51, !dbg !11807

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !11808
  br label %52, !dbg !11810

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11811
  %54 = load i32, i32* %53, align 4, !dbg !11811
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !11812
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11813
  %56 = load i8, i8* %55, align 4, !dbg !11813, !range !7428
  %57 = icmp eq i8 %56, 0, !dbg !11813
  br i1 %57, label %60, label %58, !dbg !11815

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11816
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !11818
  br label %60, !dbg !11819

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11820
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !11821
  br label %62, !dbg !11822

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11753
  ret i32 %63, !dbg !11823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #11 !dbg !11824 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11828, metadata !DIExpression()), !dbg !11832
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11833
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11833
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11833
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11829, metadata !DIExpression()), !dbg !11832
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11830, metadata !DIExpression()), !dbg !11832
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11834
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !11835
  ret void, !dbg !11836
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.141(%struct.device* noundef %0) unnamed_addr #1 !dbg !11837 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11841, metadata !DIExpression()), !dbg !11842
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11843, !srcloc !11845
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.146(%struct.device* noundef %0) #24, !dbg !11846
  ret i1 %2, !dbg !11847
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.143(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11848 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11850, metadata !DIExpression()), !dbg !11853
  call void @llvm.dbg.value(metadata i8* %1, metadata !11851, metadata !DIExpression()), !dbg !11853
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11854
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11854
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11854
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11852, metadata !DIExpression()), !dbg !11853
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11855
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11855
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11856
  ret i32 %8, !dbg !11857
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11858 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11862, metadata !DIExpression()), !dbg !11866
  call void @llvm.dbg.value(metadata i8 0, metadata !11863, metadata !DIExpression()), !dbg !11866
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11867
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11867
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11865, metadata !DIExpression(DW_OP_deref)), !dbg !11866
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11868
  call void @llvm.dbg.value(metadata i32 %4, metadata !11864, metadata !DIExpression()), !dbg !11866
  %5 = icmp slt i32 %4, 0, !dbg !11869
  br i1 %5, label %9, label %6, !dbg !11871

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11872
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11865, metadata !DIExpression()), !dbg !11866
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !11873
  br label %9, !dbg !11874

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11866
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11875
  ret i32 %10, !dbg !11875
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11876 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11878, metadata !DIExpression()), !dbg !11882
  call void @llvm.dbg.value(metadata i32 12, metadata !11879, metadata !DIExpression()), !dbg !11882
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11883

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11884, metadata !DIExpression()) #23, !dbg !11890
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !11893, !srcloc !11894
  call void @llvm.dbg.value(metadata i32 %4, metadata !11889, metadata !DIExpression()) #23, !dbg !11890
  %5 = or i32 %4, 12, !dbg !11895
  call void @llvm.dbg.value(metadata i32 %5, metadata !11880, metadata !DIExpression()), !dbg !11896
  call void @llvm.dbg.value(metadata i32 %5, metadata !11897, metadata !DIExpression()) #23, !dbg !11904
  call void @llvm.dbg.value(metadata i32* %2, metadata !11902, metadata !DIExpression()) #23, !dbg !11904
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !11906, !srcloc !11907
  call void @llvm.dbg.value(metadata i32 %6, metadata !11903, metadata !DIExpression()) #23, !dbg !11904
  %7 = icmp eq i32 %6, 0, !dbg !11883
  br i1 %7, label %8, label %3, !dbg !11895, !llvm.loop !11908

8:                                                ; preds = %3
  ret void, !dbg !11909
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11910 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11912, metadata !DIExpression()), !dbg !11916
  call void @llvm.dbg.value(metadata i32 %1, metadata !11913, metadata !DIExpression()), !dbg !11916
  call void @llvm.dbg.value(metadata i32 %2, metadata !11914, metadata !DIExpression()), !dbg !11916
  call void @llvm.dbg.value(metadata i32 0, metadata !11915, metadata !DIExpression()), !dbg !11916
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11917
  %5 = load volatile i32, i32* %4, align 4, !dbg !11917
  %6 = and i32 %5, -5633, !dbg !11917
  %7 = or i32 %2, %1, !dbg !11917
  %8 = or i32 %7, %6, !dbg !11917
  store volatile i32 %8, i32* %4, align 4, !dbg !11917
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11918
  %10 = load volatile i32, i32* %9, align 4, !dbg !11918
  %11 = and i32 %10, -12289, !dbg !11918
  store volatile i32 %11, i32* %9, align 4, !dbg !11918
  ret void, !dbg !11919
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11920 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11922, metadata !DIExpression()), !dbg !11923
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11924
  %3 = load volatile i32, i32* %2, align 4, !dbg !11924
  %4 = or i32 %3, 8, !dbg !11924
  store volatile i32 %4, i32* %2, align 4, !dbg !11924
  ret void, !dbg !11925
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11926 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11930, metadata !DIExpression()), !dbg !11933
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11931, metadata !DIExpression()), !dbg !11933
  call void @llvm.dbg.value(metadata i32 0, metadata !11932, metadata !DIExpression()), !dbg !11933
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11934
  %3 = load %struct.vnd_sensor_config*, %struct.vnd_sensor_config** %2, align 4, !dbg !11934
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11935
  %5 = load i8, i8* %4, align 4, !dbg !11935
  %6 = tail call i32 @pinctrl_configure_pins(%struct.vnd_sensor_config* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11936
  ret i32 %6, !dbg !11937
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.146(%struct.device* noundef %0) unnamed_addr #1 !dbg !11938 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11940, metadata !DIExpression()), !dbg !11941
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11942
  ret i1 %2, !dbg !11943
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !11944 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11946, metadata !DIExpression()), !dbg !11947
  tail call fastcc void @__NVIC_SetPriority.148() #24, !dbg !11948
  store i32 8399, i32* @last_load, align 4, !dbg !11949
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11950
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11951
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11952
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11953
  %3 = or i32 %2, 7, !dbg !11953
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11953
  ret i32 0, !dbg !11954
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.148() unnamed_addr #15 !dbg !11955 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11957, metadata !DIExpression()), !dbg !11959
  call void @llvm.dbg.value(metadata i32 1, metadata !11958, metadata !DIExpression()), !dbg !11959
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11960
  ret void, !dbg !11963
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11964 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11966, metadata !DIExpression()), !dbg !11968
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !11969
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11970
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11971
  %5 = add i32 %4, %3, !dbg !11971
  store i32 %5, i32* @cycle_count, align 4, !dbg !11971
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11972
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11973
  %7 = sub i32 %5, %6, !dbg !11976
  %8 = udiv i32 %7, 8400, !dbg !11977
  call void @llvm.dbg.value(metadata i32 %8, metadata !11967, metadata !DIExpression()), !dbg !11968
  %9 = mul nuw i32 %8, 8400, !dbg !11978
  %10 = add i32 %9, %6, !dbg !11979
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11979
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11980
  tail call void @z_arm_int_exit() #25, !dbg !11981
  ret void, !dbg !11982
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !11983 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11988
  call void @llvm.dbg.value(metadata i32 %1, metadata !11985, metadata !DIExpression()), !dbg !11989
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11990
  call void @llvm.dbg.value(metadata i32 %2, metadata !11986, metadata !DIExpression()), !dbg !11989
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11991
  call void @llvm.dbg.value(metadata i32 %3, metadata !11987, metadata !DIExpression()), !dbg !11989
  %4 = and i32 %2, 65536, !dbg !11992
  %5 = icmp ne i32 %4, 0, !dbg !11992
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11994
  %8 = load i32, i32* @last_load, align 4, !dbg !11989
  br i1 %7, label %9, label %13, !dbg !11994

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11995
  %11 = add i32 %10, %8, !dbg !11995
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11995
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11997
  br label %13, !dbg !11998

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11999
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12000
  %16 = add i32 %14, %15, !dbg !12001
  ret i32 %16, !dbg !12002
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !12003 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12007, metadata !DIExpression()), !dbg !12020
  call void @llvm.dbg.value(metadata i1 %1, metadata !12008, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12020
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !12021
  br i1 %4, label %5, label %8, !dbg !12021

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12023
  %7 = and i32 %6, -2, !dbg !12023
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12023
  store i32 -16777216, i32* @last_load, align 4, !dbg !12025
  br label %54, !dbg !12026

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !12027
  call void @llvm.dbg.value(metadata i32 %9, metadata !12012, metadata !DIExpression()), !dbg !12020
  br i1 %3, label %18, label %10, !dbg !12028

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !12028
  call void @llvm.dbg.value(metadata i32 undef, metadata !12007, metadata !DIExpression()), !dbg !12020
  %12 = icmp slt i32 %11, 1, !dbg !12029
  br i1 %12, label %18, label %13, !dbg !12029

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !12029
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !12029
  %16 = mul nuw nsw i32 %15, 8400, !dbg !12029
  %17 = add nuw nsw i32 %16, 8399, !dbg !12029
  br label %18, !dbg !12029

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12007, metadata !DIExpression()), !dbg !12020
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12030, metadata !DIExpression()) #23, !dbg !12037
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12039, !srcloc !12045
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !12039
  call void @llvm.dbg.value(metadata i32 %21, metadata !12042, metadata !DIExpression()) #23, !dbg !12046
  call void @llvm.dbg.value(metadata i32 undef, metadata !12043, metadata !DIExpression()) #23, !dbg !12046
  call void @llvm.dbg.value(metadata i32 %21, metadata !12036, metadata !DIExpression()) #23, !dbg !12037
  call void @llvm.dbg.value(metadata i32 %21, metadata !12013, metadata !DIExpression()), !dbg !12020
  %22 = tail call fastcc i32 @elapsed() #24, !dbg !12047
  call void @llvm.dbg.value(metadata i32 %22, metadata !12018, metadata !DIExpression()), !dbg !12020
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12048
  call void @llvm.dbg.value(metadata i32 %23, metadata !12010, metadata !DIExpression()), !dbg !12020
  %24 = load i32, i32* @cycle_count, align 4, !dbg !12049
  %25 = add i32 %24, %22, !dbg !12049
  store i32 %25, i32* @cycle_count, align 4, !dbg !12049
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12050
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !12051
  %27 = sub i32 %25, %26, !dbg !12052
  call void @llvm.dbg.value(metadata i32 %27, metadata !12019, metadata !DIExpression()), !dbg !12020
  %28 = icmp slt i32 %27, 0, !dbg !12053
  br i1 %28, label %38, label %29, !dbg !12055

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !12009, metadata !DIExpression()), !dbg !12020
  call void @llvm.dbg.value(metadata i32 undef, metadata !12009, metadata !DIExpression()), !dbg !12020
  %30 = add nuw i32 %19, %27, !dbg !12056
  %31 = urem i32 %30, 8400, !dbg !12058
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !12009, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12020
  %32 = sub nuw nsw i32 %19, %31, !dbg !12059
  call void @llvm.dbg.value(metadata i32 %32, metadata !12009, metadata !DIExpression()), !dbg !12020
  %33 = icmp ugt i32 %32, 1024, !dbg !12060
  br i1 %33, label %34, label %36, !dbg !12060

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !12009, metadata !DIExpression()), !dbg !12020
  %35 = icmp ugt i32 %32, 16766400, !dbg !12061
  br i1 %35, label %38, label %36, !dbg !12063

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !12064
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12065
  call void @llvm.dbg.value(metadata i32 %40, metadata !12011, metadata !DIExpression()), !dbg !12020
  %41 = add nsw i32 %39, -1, !dbg !12066
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12067
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12068
  %42 = icmp ult i32 %23, %40, !dbg !12069
  br i1 %42, label %43, label %48, !dbg !12071

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !12072
  %45 = add i32 %23, %9, !dbg !12074
  %46 = sub i32 %45, %40, !dbg !12075
  %47 = add i32 %46, %44, !dbg !12072
  br label %52, !dbg !12076

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !12077
  %50 = load i32, i32* @cycle_count, align 4, !dbg !12079
  %51 = add i32 %49, %50, !dbg !12079
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !12080
  store i32 %53, i32* @cycle_count, align 4, !dbg !12080
  call void @llvm.dbg.value(metadata i32 %21, metadata !12081, metadata !DIExpression()) #23, !dbg !12087
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12086, metadata !DIExpression()) #23, !dbg !12087
  call void @llvm.dbg.value(metadata i32 %21, metadata !12089, metadata !DIExpression()) #23, !dbg !12092
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !12094, !srcloc !12095
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !12096
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !12097 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12030, metadata !DIExpression()) #23, !dbg !12101
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12103, !srcloc !12045
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12103
  call void @llvm.dbg.value(metadata i32 %2, metadata !12042, metadata !DIExpression()) #23, !dbg !12105
  call void @llvm.dbg.value(metadata i32 undef, metadata !12043, metadata !DIExpression()) #23, !dbg !12105
  call void @llvm.dbg.value(metadata i32 %2, metadata !12036, metadata !DIExpression()) #23, !dbg !12101
  call void @llvm.dbg.value(metadata i32 %2, metadata !12099, metadata !DIExpression()), !dbg !12106
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !12107
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12108
  %5 = add i32 %4, %3, !dbg !12109
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12110
  %7 = sub i32 %5, %6, !dbg !12111
  call void @llvm.dbg.value(metadata i32 %7, metadata !12100, metadata !DIExpression()), !dbg !12106
  call void @llvm.dbg.value(metadata i32 %2, metadata !12081, metadata !DIExpression()) #23, !dbg !12112
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12086, metadata !DIExpression()) #23, !dbg !12112
  call void @llvm.dbg.value(metadata i32 %2, metadata !12089, metadata !DIExpression()) #23, !dbg !12114
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12116, !srcloc !12095
  %8 = udiv i32 %7, 8400, !dbg !12117
  ret i32 %8, !dbg !12118
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !12119 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12030, metadata !DIExpression()) #23, !dbg !12123
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12125, !srcloc !12045
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12125
  call void @llvm.dbg.value(metadata i32 %2, metadata !12042, metadata !DIExpression()) #23, !dbg !12127
  call void @llvm.dbg.value(metadata i32 undef, metadata !12043, metadata !DIExpression()) #23, !dbg !12127
  call void @llvm.dbg.value(metadata i32 %2, metadata !12036, metadata !DIExpression()) #23, !dbg !12123
  call void @llvm.dbg.value(metadata i32 %2, metadata !12121, metadata !DIExpression()), !dbg !12128
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !12129
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12130
  %5 = add i32 %4, %3, !dbg !12131
  call void @llvm.dbg.value(metadata i32 %5, metadata !12122, metadata !DIExpression()), !dbg !12128
  call void @llvm.dbg.value(metadata i32 %2, metadata !12081, metadata !DIExpression()) #23, !dbg !12132
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12086, metadata !DIExpression()) #23, !dbg !12132
  call void @llvm.dbg.value(metadata i32 %2, metadata !12089, metadata !DIExpression()) #23, !dbg !12134
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12136, !srcloc !12095
  ret i32 %5, !dbg !12137
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !12138 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12139
  %2 = icmp eq i32 %1, -16777216, !dbg !12141
  br i1 %2, label %3, label %6, !dbg !12142

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12143
  %5 = or i32 %4, 1, !dbg !12143
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12143
  br label %6, !dbg !12145

6:                                                ; preds = %3, %0
  ret void, !dbg !12146
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !12147 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12148
  %2 = and i32 %1, -2, !dbg !12148
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12148
  ret void, !dbg !12149
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !12150 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12176, metadata !DIExpression()), !dbg !12179
  call void @llvm.dbg.value(metadata i8 %1, metadata !12177, metadata !DIExpression()), !dbg !12179
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12178, metadata !DIExpression()), !dbg !12179
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12180
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12180
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12179
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12181
  %8 = load i8, i8* %6, align 4, !dbg !12182
  %9 = zext i8 %8 to i32, !dbg !12183
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12183
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12184
  br i1 %11, label %18, label %24, !dbg !12185

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12179
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12181
  %14 = load i8, i8* %6, align 4, !dbg !12182
  %15 = zext i8 %14 to i32, !dbg !12183
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12183
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12184
  br i1 %17, label %18, label %24, !dbg !12185, !llvm.loop !12186

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12188
  %21 = load i8, i8* %20, align 1, !dbg !12188
  %22 = icmp eq i8 %21, %1, !dbg !12191
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12192
  br i1 %22, label %24, label %12, !dbg !12193

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12179
  ret i32 %25, !dbg !12194
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct.vnd_sensor_config* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12195 {
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_config* %0, metadata !12206, metadata !DIExpression()), !dbg !12222
  call void @llvm.dbg.value(metadata i8 %1, metadata !12207, metadata !DIExpression()), !dbg !12222
  call void @llvm.dbg.value(metadata i32 %2, metadata !12208, metadata !DIExpression()), !dbg !12222
  call void @llvm.dbg.value(metadata i32 0, metadata !12211, metadata !DIExpression()), !dbg !12222
  call void @llvm.dbg.value(metadata i32 0, metadata !12212, metadata !DIExpression()), !dbg !12222
  call void @llvm.dbg.value(metadata i8 0, metadata !12213, metadata !DIExpression()), !dbg !12223
  %4 = icmp eq i8 %1, 0, !dbg !12224
  br i1 %4, label %35, label %5, !dbg !12225

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12224
  br label %9, !dbg !12225

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12213, metadata !DIExpression()), !dbg !12223
  call void @llvm.dbg.value(metadata i32 %29, metadata !12211, metadata !DIExpression()), !dbg !12222
  %8 = icmp eq i32 %34, %6, !dbg !12224
  br i1 %8, label %35, label %9, !dbg !12225, !llvm.loop !12226

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12213, metadata !DIExpression()), !dbg !12223
  call void @llvm.dbg.value(metadata i32 %11, metadata !12211, metadata !DIExpression()), !dbg !12222
  %12 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %0, i32 %10, i32 0, !dbg !12228
  %13 = load i32, i32* %12, align 4, !dbg !12228
  call void @llvm.dbg.value(metadata i32 %13, metadata !12210, metadata !DIExpression()), !dbg !12222
  %14 = and i32 %13, 31, !dbg !12229
  %15 = icmp ult i32 %14, 16, !dbg !12230
  br i1 %15, label %16, label %20, !dbg !12231

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %0, i32 %10, i32 1, !dbg !12232
  %18 = load i32, i32* %17, align 4, !dbg !12232
  %19 = or i32 %18, 32, !dbg !12234
  call void @llvm.dbg.value(metadata i32 %19, metadata !12211, metadata !DIExpression()), !dbg !12222
  br label %28, !dbg !12235

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12236

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %0, i32 %10, i32 1, !dbg !12237
  %23 = load i32, i32* %22, align 4, !dbg !12237
  call void @llvm.dbg.value(metadata i32 %23, metadata !12215, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12238
  %24 = lshr i32 %23, 7, !dbg !12239
  %25 = and i32 %24, 16, !dbg !12239
  %26 = or i32 %25, %23, !dbg !12239
  call void @llvm.dbg.value(metadata i32 %26, metadata !12211, metadata !DIExpression()), !dbg !12222
  br label %28, !dbg !12240

27:                                               ; preds = %20
  br label %28, !dbg !12241

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !12222
  call void @llvm.dbg.value(metadata i32 %29, metadata !12211, metadata !DIExpression()), !dbg !12222
  %30 = lshr i32 %13, 5, !dbg !12241
  %31 = and i32 %30, 255, !dbg !12241
  call void @llvm.dbg.value(metadata i32 %31, metadata !12209, metadata !DIExpression()), !dbg !12222
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !12242
  call void @llvm.dbg.value(metadata i32 %32, metadata !12212, metadata !DIExpression()), !dbg !12222
  %33 = icmp slt i32 %32, 0, !dbg !12243
  %34 = add nuw nsw i32 %10, 1, !dbg !12245
  call void @llvm.dbg.value(metadata i32 %34, metadata !12213, metadata !DIExpression()), !dbg !12223
  br i1 %33, label %35, label %7, !dbg !12246

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12247
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12248 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12252, metadata !DIExpression()), !dbg !12256
  call void @llvm.dbg.value(metadata i32 %1, metadata !12253, metadata !DIExpression()), !dbg !12256
  call void @llvm.dbg.value(metadata i32 %2, metadata !12254, metadata !DIExpression()), !dbg !12256
  %4 = icmp ugt i32 %0, 175, !dbg !12257
  br i1 %4, label %16, label %5, !dbg !12259

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12260
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12261
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12261
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12255, metadata !DIExpression()), !dbg !12256
  %9 = add nsw i32 %6, -8, !dbg !12262
  %10 = icmp ult i32 %9, 3, !dbg !12262
  br i1 %10, label %16, label %11, !dbg !12264

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.153(%struct.device* noundef %8) #24, !dbg !12265
  br i1 %12, label %13, label %16, !dbg !12266

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !12267
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !12268
  br label %16, !dbg !12269

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12256
  ret i32 %17, !dbg !12270
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.153(%struct.device* noundef %0) unnamed_addr #1 !dbg !12271 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12275, metadata !DIExpression()), !dbg !12276
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12277, !srcloc !12279
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.154(%struct.device* noundef %0) #24, !dbg !12280
  ret i1 %2, !dbg !12281
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.154(%struct.device* noundef %0) unnamed_addr #1 !dbg !12282 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12284, metadata !DIExpression()), !dbg !12285
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !12286
  ret i1 %2, !dbg !12287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !12288 {
  ret void, !dbg !12289
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #5 !dbg !12290 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12292, metadata !DIExpression()), !dbg !12297
  call void @llvm.dbg.value(metadata i32 0, metadata !12293, metadata !DIExpression()), !dbg !12297
  call void @llvm.dbg.value(metadata i32 2, metadata !12294, metadata !DIExpression()), !dbg !12297
  call void @llvm.dbg.value(metadata i32 0, metadata !12295, metadata !DIExpression()), !dbg !12297
  call void @llvm.dbg.value(metadata i32 2, metadata !12296, metadata !DIExpression()), !dbg !12297
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12298
  %2 = and i32 %1, 12, !dbg !12299
  call void @llvm.dbg.value(metadata i32 %2, metadata !12292, metadata !DIExpression()), !dbg !12297
  %3 = icmp eq i32 %2, 8, !dbg !12300
  br i1 %3, label %4, label %18, !dbg !12300

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12301
  call void @llvm.dbg.value(metadata i32 %5, metadata !12295, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12297
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12303
  %7 = and i32 %6, 63, !dbg !12304
  call void @llvm.dbg.value(metadata i32 %7, metadata !12296, metadata !DIExpression()), !dbg !12297
  %8 = udiv i32 16000000, %7, !dbg !12305
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12305
  %10 = lshr i32 %9, 6, !dbg !12305
  %11 = and i32 %10, 511, !dbg !12305
  %12 = mul i32 %11, %8, !dbg !12305
  call void @llvm.dbg.value(metadata i32 %12, metadata !12293, metadata !DIExpression()), !dbg !12297
  call void @llvm.dbg.value(metadata i32 %12, metadata !12293, metadata !DIExpression()), !dbg !12297
  call void @llvm.dbg.value(metadata i32 %12, metadata !12293, metadata !DIExpression()), !dbg !12297
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12307
  %14 = lshr i32 %13, 15, !dbg !12308
  %15 = and i32 %14, 6, !dbg !12308
  %16 = add nuw nsw i32 %15, 2, !dbg !12308
  call void @llvm.dbg.value(metadata i32 %16, metadata !12294, metadata !DIExpression()), !dbg !12297
  %17 = udiv i32 %12, %16, !dbg !12309
  br label %18, !dbg !12310

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !12311
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12312
  %21 = lshr i32 %20, 4, !dbg !12313
  %22 = and i32 %21, 15, !dbg !12313
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !12314
  %24 = load i8, i8* %23, align 1, !dbg !12314
  %25 = zext i8 %24 to i32, !dbg !12314
  call void @llvm.dbg.value(metadata i32 %25, metadata !12292, metadata !DIExpression()), !dbg !12297
  %26 = lshr i32 %19, %25, !dbg !12315
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !12315
  ret void, !dbg !12316
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12317 {
  ret i32 0, !dbg !12322
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12323 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12349, metadata !DIExpression()), !dbg !12360
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12361
  br i1 %3, label %311, label %4, !dbg !12363

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12364
  %6 = load i32, i32* %5, align 4, !dbg !12364
  %7 = and i32 %6, 1, !dbg !12366
  %8 = icmp eq i32 %7, 0, !dbg !12367
  br i1 %8, label %66, label %9, !dbg !12368

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12369
  %11 = and i32 %10, 12, !dbg !12369
  %12 = icmp eq i32 %11, 4, !dbg !12372
  br i1 %12, label %21, label %13, !dbg !12373

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12374
  %15 = and i32 %14, 12, !dbg !12374
  %16 = icmp eq i32 %15, 8, !dbg !12375
  br i1 %16, label %17, label %29, !dbg !12376

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12377
  %19 = and i32 %18, 4194304, !dbg !12378
  %20 = icmp eq i32 %19, 0, !dbg !12379
  br i1 %20, label %29, label %21, !dbg !12380

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12381
  %23 = and i32 %22, 131072, !dbg !12381
  %24 = icmp eq i32 %23, 0, !dbg !12381
  br i1 %24, label %66, label %25, !dbg !12384

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12385
  %27 = load i32, i32* %26, align 4, !dbg !12385
  %28 = icmp eq i32 %27, 0, !dbg !12386
  br i1 %28, label %311, label %66, !dbg !12387

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12388
  %31 = load i32, i32* %30, align 4, !dbg !12388
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !12392

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12393
  %34 = or i32 %33, 65536, !dbg !12393
  br label %45, !dbg !12393

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12395
  %37 = or i32 %36, 262144, !dbg !12395
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12395
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12395
  %39 = or i32 %38, 65536, !dbg !12395
  br label %45, !dbg !12395

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12398
  %42 = and i32 %41, -65537, !dbg !12398
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12398
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12398
  %44 = and i32 %43, -262145, !dbg !12398
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12400
  %47 = load i32, i32* %30, align 4, !dbg !12401
  %48 = icmp eq i32 %47, 0, !dbg !12403
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !12404
  call void @llvm.dbg.value(metadata i32 %49, metadata !12350, metadata !DIExpression()), !dbg !12360
  call void @llvm.dbg.value(metadata i32 %49, metadata !12350, metadata !DIExpression()), !dbg !12360
  br i1 %48, label %58, label %50, !dbg !12405

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12406
  %52 = and i32 %51, 131072, !dbg !12408
  %53 = icmp eq i32 %52, 0, !dbg !12408
  br i1 %53, label %54, label %66, !dbg !12409

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !12410
  %56 = sub i32 %55, %49, !dbg !12413
  %57 = icmp ugt i32 %56, 100, !dbg !12414
  br i1 %57, label %311, label %50, !dbg !12415, !llvm.loop !12416

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12418
  %60 = and i32 %59, 131072, !dbg !12418
  %61 = icmp eq i32 %60, 0, !dbg !12418
  br i1 %61, label %66, label %62, !dbg !12420

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !12421
  %64 = sub i32 %63, %49, !dbg !12424
  %65 = icmp ugt i32 %64, 100, !dbg !12425
  br i1 %65, label %311, label %58, !dbg !12426, !llvm.loop !12427

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !12429
  %68 = and i32 %67, 2, !dbg !12431
  %69 = icmp eq i32 %68, 0, !dbg !12432
  br i1 %69, label %121, label %70, !dbg !12433

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12434
  %72 = and i32 %71, 12, !dbg !12434
  %73 = icmp eq i32 %72, 0, !dbg !12437
  br i1 %73, label %82, label %74, !dbg !12438

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12439
  %76 = and i32 %75, 12, !dbg !12439
  %77 = icmp eq i32 %76, 8, !dbg !12440
  br i1 %77, label %78, label %90, !dbg !12441

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12442
  %80 = and i32 %79, 4194304, !dbg !12443
  %81 = icmp eq i32 %80, 0, !dbg !12444
  br i1 %81, label %82, label %90, !dbg !12445

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12446
  %84 = and i32 %83, 2, !dbg !12446
  %85 = icmp eq i32 %84, 0, !dbg !12446
  br i1 %85, label %114, label %86, !dbg !12449

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12450
  %88 = load i32, i32* %87, align 4, !dbg !12450
  %89 = icmp eq i32 %88, 1, !dbg !12451
  br i1 %89, label %114, label %311, !dbg !12452

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12453
  %92 = load i32, i32* %91, align 4, !dbg !12453
  %93 = icmp eq i32 %92, 0, !dbg !12456
  br i1 %93, label %104, label %94, !dbg !12457

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12458
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !12460
  call void @llvm.dbg.value(metadata i32 %95, metadata !12350, metadata !DIExpression()), !dbg !12360
  br label %96, !dbg !12461

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12462
  %98 = and i32 %97, 2, !dbg !12463
  %99 = icmp eq i32 %98, 0, !dbg !12463
  br i1 %99, label %100, label %114, !dbg !12461

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !12464
  %102 = sub i32 %101, %95, !dbg !12467
  %103 = icmp ugt i32 %102, 2, !dbg !12468
  br i1 %103, label %311, label %96, !dbg !12469, !llvm.loop !12470

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12472
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !12474
  call void @llvm.dbg.value(metadata i32 %105, metadata !12350, metadata !DIExpression()), !dbg !12360
  br label %106, !dbg !12475

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12476
  %108 = and i32 %107, 2, !dbg !12476
  %109 = icmp eq i32 %108, 0, !dbg !12476
  br i1 %109, label %121, label %110, !dbg !12475

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !12477
  %112 = sub i32 %111, %105, !dbg !12480
  %113 = icmp ugt i32 %112, 2, !dbg !12481
  br i1 %113, label %311, label %106, !dbg !12482, !llvm.loop !12483

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12485
  %116 = and i32 %115, -249, !dbg !12485
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12485
  %118 = load i32, i32* %117, align 4, !dbg !12485
  %119 = shl i32 %118, 3, !dbg !12485
  %120 = or i32 %119, %116, !dbg !12485
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12485
  br label %121, !dbg !12486

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12486
  %123 = and i32 %122, 8, !dbg !12488
  %124 = icmp eq i32 %123, 0, !dbg !12489
  br i1 %124, label %149, label %125, !dbg !12490

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12491
  %127 = load i32, i32* %126, align 4, !dbg !12491
  %128 = icmp eq i32 %127, 0, !dbg !12494
  br i1 %128, label %139, label %129, !dbg !12495

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12496
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !12498
  call void @llvm.dbg.value(metadata i32 %130, metadata !12350, metadata !DIExpression()), !dbg !12360
  br label %131, !dbg !12499

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12500
  %133 = and i32 %132, 2, !dbg !12501
  %134 = icmp eq i32 %133, 0, !dbg !12501
  br i1 %134, label %135, label %149, !dbg !12499

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !12502
  %137 = sub i32 %136, %130, !dbg !12505
  %138 = icmp ugt i32 %137, 2, !dbg !12506
  br i1 %138, label %311, label %131, !dbg !12507, !llvm.loop !12508

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12510
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !12512
  call void @llvm.dbg.value(metadata i32 %140, metadata !12350, metadata !DIExpression()), !dbg !12360
  br label %141, !dbg !12513

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12514
  %143 = and i32 %142, 2, !dbg !12514
  %144 = icmp eq i32 %143, 0, !dbg !12514
  br i1 %144, label %149, label %145, !dbg !12513

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !12515
  %147 = sub i32 %146, %140, !dbg !12518
  %148 = icmp ugt i32 %147, 2, !dbg !12519
  br i1 %148, label %311, label %141, !dbg !12520, !llvm.loop !12521

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12523
  %151 = and i32 %150, 4, !dbg !12524
  %152 = icmp eq i32 %151, 0, !dbg !12525
  br i1 %152, label %221, label %153, !dbg !12526

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !12352, metadata !DIExpression()), !dbg !12527
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12528
  %155 = and i32 %154, 268435456, !dbg !12528
  %156 = icmp eq i32 %155, 0, !dbg !12528
  br i1 %156, label %157, label %164, !dbg !12529

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12530
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12530
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12356, metadata !DIExpression()), !dbg !12530
  store volatile i32 0, i32* %2, align 4, !dbg !12530
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12530
  %160 = or i32 %159, 268435456, !dbg !12530
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12530
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12530
  %162 = and i32 %161, 268435456, !dbg !12530
  store volatile i32 %162, i32* %2, align 4, !dbg !12530
  %163 = load volatile i32, i32* %2, align 4, !dbg !12530
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12531
  call void @llvm.dbg.value(metadata i32 1, metadata !12352, metadata !DIExpression()), !dbg !12527
  br label %164, !dbg !12532

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12352, metadata !DIExpression()), !dbg !12527
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12533
  %166 = and i32 %165, 256, !dbg !12533
  %167 = icmp eq i32 %166, 0, !dbg !12533
  br i1 %167, label %168, label %180, !dbg !12535

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12536
  %170 = or i32 %169, 256, !dbg !12536
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12536
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !12538
  call void @llvm.dbg.value(metadata i32 %171, metadata !12350, metadata !DIExpression()), !dbg !12360
  br label %172, !dbg !12539

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12540
  %174 = and i32 %173, 256, !dbg !12540
  %175 = icmp eq i32 %174, 0, !dbg !12540
  br i1 %175, label %176, label %180, !dbg !12539

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !12541
  %178 = sub i32 %177, %171, !dbg !12544
  %179 = icmp ugt i32 %178, 2, !dbg !12545
  br i1 %179, label %311, label %172, !dbg !12546, !llvm.loop !12547

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12549
  %182 = load i32, i32* %181, align 4, !dbg !12549
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12552

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12553
  %185 = or i32 %184, 1, !dbg !12553
  br label %196, !dbg !12553

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12555
  %188 = or i32 %187, 4, !dbg !12555
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12555
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12555
  %190 = or i32 %189, 1, !dbg !12555
  br label %196, !dbg !12555

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12558
  %193 = and i32 %192, -2, !dbg !12558
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12558
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12558
  %195 = and i32 %194, -5, !dbg !12558
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12560
  %198 = load i32, i32* %181, align 4, !dbg !12561
  %199 = icmp eq i32 %198, 0, !dbg !12563
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !12564
  call void @llvm.dbg.value(metadata i32 %200, metadata !12350, metadata !DIExpression()), !dbg !12360
  call void @llvm.dbg.value(metadata i32 %200, metadata !12350, metadata !DIExpression()), !dbg !12360
  br i1 %199, label %209, label %201, !dbg !12565

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12566
  %203 = and i32 %202, 2, !dbg !12568
  %204 = icmp eq i32 %203, 0, !dbg !12568
  br i1 %204, label %205, label %217, !dbg !12569

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !12570
  %207 = sub i32 %206, %200, !dbg !12573
  %208 = icmp ugt i32 %207, 5000, !dbg !12574
  br i1 %208, label %311, label %201, !dbg !12575, !llvm.loop !12576

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12578
  %211 = and i32 %210, 2, !dbg !12578
  %212 = icmp eq i32 %211, 0, !dbg !12578
  br i1 %212, label %217, label %213, !dbg !12580

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !12581
  %215 = sub i32 %214, %200, !dbg !12584
  %216 = icmp ugt i32 %215, 5000, !dbg !12585
  br i1 %216, label %311, label %209, !dbg !12586, !llvm.loop !12587

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12589

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12590
  %220 = and i32 %219, -268435457, !dbg !12590
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12590
  br label %221, !dbg !12593

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12594
  %223 = load i32, i32* %222, align 4, !dbg !12594
  %224 = icmp eq i32 %223, 0, !dbg !12596
  br i1 %224, label %310, label %225, !dbg !12597

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12598
  %227 = and i32 %226, 12, !dbg !12598
  %228 = icmp eq i32 %227, 8, !dbg !12601
  br i1 %228, label %277, label %229, !dbg !12602

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12603
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12606
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !12606
  call void @llvm.dbg.value(metadata i32 %231, metadata !12350, metadata !DIExpression()), !dbg !12360
  call void @llvm.dbg.value(metadata i32 %231, metadata !12350, metadata !DIExpression()), !dbg !12360
  br i1 %230, label %232, label %269, !dbg !12607

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12608
  %234 = and i32 %233, 33554432, !dbg !12608
  %235 = icmp eq i32 %234, 0, !dbg !12608
  br i1 %235, label %240, label %236, !dbg !12610

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !12611
  %238 = sub i32 %237, %231, !dbg !12614
  %239 = icmp ugt i32 %238, 2, !dbg !12615
  br i1 %239, label %311, label %232, !dbg !12616, !llvm.loop !12617

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12619
  %242 = load i32, i32* %241, align 4, !dbg !12619
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12619
  %244 = load i32, i32* %243, align 4, !dbg !12619
  %245 = or i32 %244, %242, !dbg !12619
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12619
  %247 = load i32, i32* %246, align 4, !dbg !12619
  %248 = shl i32 %247, 6, !dbg !12619
  %249 = or i32 %245, %248, !dbg !12619
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12619
  %251 = load i32, i32* %250, align 4, !dbg !12619
  %252 = shl i32 %251, 15, !dbg !12619
  %253 = add i32 %252, -65536, !dbg !12619
  %254 = and i32 %253, -65536, !dbg !12619
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12619
  %256 = load i32, i32* %255, align 4, !dbg !12619
  %257 = shl i32 %256, 24, !dbg !12619
  %258 = or i32 %249, %257, !dbg !12619
  %259 = or i32 %258, %254, !dbg !12619
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12619
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12620
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !12621
  call void @llvm.dbg.value(metadata i32 %260, metadata !12350, metadata !DIExpression()), !dbg !12360
  br label %261, !dbg !12622

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12623
  %263 = and i32 %262, 33554432, !dbg !12624
  %264 = icmp eq i32 %263, 0, !dbg !12624
  br i1 %264, label %265, label %310, !dbg !12622

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !12625
  %267 = sub i32 %266, %260, !dbg !12628
  %268 = icmp ugt i32 %267, 2, !dbg !12629
  br i1 %268, label %311, label %261, !dbg !12630, !llvm.loop !12631

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12633
  %271 = and i32 %270, 33554432, !dbg !12633
  %272 = icmp eq i32 %271, 0, !dbg !12633
  br i1 %272, label %310, label %273, !dbg !12635

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !12636
  %275 = sub i32 %274, %231, !dbg !12639
  %276 = icmp ugt i32 %275, 2, !dbg !12640
  br i1 %276, label %311, label %269, !dbg !12641, !llvm.loop !12642

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12644
  br i1 %278, label %311, label %279, !dbg !12647

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12648
  call void @llvm.dbg.value(metadata i32 %280, metadata !12351, metadata !DIExpression()), !dbg !12360
  %281 = and i32 %280, 4194304, !dbg !12650
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12652
  %283 = load i32, i32* %282, align 4, !dbg !12652
  %284 = icmp eq i32 %281, %283, !dbg !12653
  br i1 %284, label %285, label %311, !dbg !12654

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12655
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12656
  %288 = load i32, i32* %287, align 4, !dbg !12656
  %289 = icmp eq i32 %286, %288, !dbg !12657
  br i1 %289, label %290, label %311, !dbg !12658

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12659
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12660
  %293 = load i32, i32* %292, align 4, !dbg !12660
  %294 = shl i32 %293, 6, !dbg !12661
  %295 = icmp eq i32 %291, %294, !dbg !12662
  br i1 %295, label %296, label %311, !dbg !12663

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12664
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12665
  %299 = load i32, i32* %298, align 4, !dbg !12665
  %300 = shl i32 %299, 15, !dbg !12666
  %301 = add i32 %300, -65536, !dbg !12666
  %302 = and i32 %301, -65536, !dbg !12666
  %303 = icmp eq i32 %297, %302, !dbg !12667
  br i1 %303, label %304, label %311, !dbg !12668

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12669
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12670
  %307 = load i32, i32* %306, align 4, !dbg !12670
  %308 = shl i32 %307, 24, !dbg !12671
  %309 = icmp eq i32 %305, %308, !dbg !12672
  br i1 %309, label %310, label %311, !dbg !12673

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !12674

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !12360
  ret i32 %312, !dbg !12675
}

; Function Attrs: optsize
declare !dbg !12676 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.rtio_spsc* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12678 {
  call void @llvm.dbg.value(metadata %struct.rtio_spsc* %0, metadata !12691, metadata !DIExpression()), !dbg !12694
  call void @llvm.dbg.value(metadata i32 %1, metadata !12692, metadata !DIExpression()), !dbg !12694
  %3 = icmp eq %struct.rtio_spsc* %0, null, !dbg !12695
  br i1 %3, label %115, label %4, !dbg !12697

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12698
  %6 = and i32 %5, 7, !dbg !12698
  %7 = icmp ult i32 %6, %1, !dbg !12700
  br i1 %7, label %8, label %13, !dbg !12701

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12702
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12702
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12704
  %11 = and i32 %10, 7, !dbg !12704
  %12 = icmp eq i32 %11, %1, !dbg !12706
  br i1 %12, label %13, label %115, !dbg !12707

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 0, !dbg !12708
  %15 = load i32, i32* %14, align 4, !dbg !12708
  %16 = and i32 %15, 2, !dbg !12710
  %17 = icmp eq i32 %16, 0, !dbg !12711
  br i1 %17, label %39, label %18, !dbg !12712

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12713
  %20 = icmp eq i32 %19, 0, !dbg !12716
  br i1 %20, label %25, label %21, !dbg !12717

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12718
  %23 = or i32 %22, 7168, !dbg !12718
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12718
  %24 = load i32, i32* %14, align 4, !dbg !12720
  br label %25, !dbg !12722

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12720
  %27 = and i32 %26, 8, !dbg !12723
  %28 = icmp eq i32 %27, 0, !dbg !12724
  br i1 %28, label %32, label %29, !dbg !12725

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12726
  %31 = or i32 %30, 57344, !dbg !12726
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12726
  br label %32, !dbg !12728

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12729
  %34 = and i32 %33, -241, !dbg !12729
  %35 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 2, !dbg !12729
  %36 = load i32, i32* %35, align 4, !dbg !12729
  %37 = or i32 %34, %36, !dbg !12729
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12729
  %38 = load i32, i32* %14, align 4, !dbg !12730
  br label %39, !dbg !12732

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12730
  %41 = and i32 %40, 1, !dbg !12733
  %42 = icmp eq i32 %41, 0, !dbg !12734
  br i1 %42, label %73, label %43, !dbg !12735

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 1, !dbg !12736
  %45 = load i32, i32* %44, align 4, !dbg !12736
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12739

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12740
  %48 = and i32 %47, 131072, !dbg !12743
  %49 = icmp eq i32 %48, 0, !dbg !12743
  br i1 %49, label %115, label %58, !dbg !12744

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12745
  %52 = and i32 %51, 33554432, !dbg !12749
  %53 = icmp eq i32 %52, 0, !dbg !12749
  br i1 %53, label %115, label %58, !dbg !12750

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12751
  %56 = and i32 %55, 2, !dbg !12754
  %57 = icmp eq i32 %56, 0, !dbg !12754
  br i1 %57, label %115, label %58, !dbg !12755

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12756
  %60 = and i32 %59, -4, !dbg !12756
  %61 = or i32 %60, %45, !dbg !12756
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12756
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !12757
  call void @llvm.dbg.value(metadata i32 %62, metadata !12693, metadata !DIExpression()), !dbg !12694
  br label %63, !dbg !12758

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12759
  %65 = and i32 %64, 12, !dbg !12759
  %66 = load i32, i32* %44, align 4, !dbg !12760
  %67 = shl i32 %66, 2, !dbg !12761
  %68 = icmp eq i32 %65, %67, !dbg !12762
  br i1 %68, label %73, label %69, !dbg !12758

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !12763
  %71 = sub i32 %70, %62, !dbg !12766
  %72 = icmp ugt i32 %71, 5000, !dbg !12767
  br i1 %72, label %115, label %63, !dbg !12768, !llvm.loop !12769

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12771
  %75 = and i32 %74, 7, !dbg !12771
  %76 = icmp ugt i32 %75, %1, !dbg !12773
  br i1 %76, label %77, label %82, !dbg !12774

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12775
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12775
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12777
  %80 = and i32 %79, 7, !dbg !12777
  %81 = icmp eq i32 %80, %1, !dbg !12779
  br i1 %81, label %82, label %115, !dbg !12780

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12781
  %84 = and i32 %83, 4, !dbg !12783
  %85 = icmp eq i32 %84, 0, !dbg !12784
  br i1 %85, label %93, label %86, !dbg !12785

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12786
  %88 = and i32 %87, -7169, !dbg !12786
  %89 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 3, !dbg !12786
  %90 = load i32, i32* %89, align 4, !dbg !12786
  %91 = or i32 %88, %90, !dbg !12786
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12786
  %92 = load i32, i32* %14, align 4, !dbg !12788
  br label %93, !dbg !12790

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12788
  %95 = and i32 %94, 8, !dbg !12791
  %96 = icmp eq i32 %95, 0, !dbg !12792
  br i1 %96, label %104, label %97, !dbg !12793

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12794
  %99 = and i32 %98, -57345, !dbg !12794
  %100 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 4, !dbg !12794
  %101 = load i32, i32* %100, align 4, !dbg !12794
  %102 = shl i32 %101, 3, !dbg !12794
  %103 = or i32 %102, %99, !dbg !12794
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12794
  br label %104, !dbg !12796

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !12797
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12798
  %107 = lshr i32 %106, 4, !dbg !12799
  %108 = and i32 %107, 15, !dbg !12799
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12800
  %110 = load i8, i8* %109, align 1, !dbg !12800
  %111 = zext i8 %110 to i32, !dbg !12800
  %112 = lshr i32 %105, %111, !dbg !12801
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12802
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12803
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !12804
  br label %115, !dbg !12805

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12694
  ret i32 %116, !dbg !12806
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12807 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12809, metadata !DIExpression()), !dbg !12813
  call void @llvm.dbg.value(metadata i32 0, metadata !12810, metadata !DIExpression()), !dbg !12813
  call void @llvm.dbg.value(metadata i32 0, metadata !12811, metadata !DIExpression()), !dbg !12813
  call void @llvm.dbg.value(metadata i32 0, metadata !12812, metadata !DIExpression()), !dbg !12813
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12814
  %2 = and i32 %1, 12, !dbg !12815
  %3 = icmp eq i32 %2, 8, !dbg !12816
  br i1 %3, label %4, label %21, !dbg !12816

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12817
  %6 = and i32 %5, 63, !dbg !12820
  call void @llvm.dbg.value(metadata i32 %6, metadata !12809, metadata !DIExpression()), !dbg !12813
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12821
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12823
  %9 = lshr i32 %8, 6, !dbg !12823
  %10 = and i32 %9, 511, !dbg !12823
  %11 = zext i32 %10 to i64, !dbg !12823
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !12823
  %13 = zext i32 %6 to i64, !dbg !12823
  %14 = udiv i64 %12, %13, !dbg !12823
  %15 = trunc i64 %14 to i32, !dbg !12823
  call void @llvm.dbg.value(metadata i32 %15, metadata !12810, metadata !DIExpression()), !dbg !12813
  call void @llvm.dbg.value(metadata i32 %15, metadata !12810, metadata !DIExpression()), !dbg !12813
  call void @llvm.dbg.value(metadata i32 %15, metadata !12810, metadata !DIExpression()), !dbg !12813
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12824
  %17 = lshr i32 %16, 15, !dbg !12825
  %18 = and i32 %17, 6, !dbg !12825
  %19 = add nuw nsw i32 %18, 2, !dbg !12825
  call void @llvm.dbg.value(metadata i32 %19, metadata !12811, metadata !DIExpression()), !dbg !12813
  %20 = udiv i32 %15, %19, !dbg !12826
  call void @llvm.dbg.value(metadata i32 %20, metadata !12812, metadata !DIExpression()), !dbg !12813
  br label %21, !dbg !12827

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !12828
  call void @llvm.dbg.value(metadata i32 %22, metadata !12812, metadata !DIExpression()), !dbg !12813
  ret i32 %22, !dbg !12829
}

; Function Attrs: optsize
declare !dbg !12830 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12833 {
  %4 = alloca %struct.rtio_spsc, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12837, metadata !DIExpression()), !dbg !12857
  call void @llvm.dbg.value(metadata i32 %1, metadata !12838, metadata !DIExpression()), !dbg !12857
  call void @llvm.dbg.value(metadata i32 %2, metadata !12839, metadata !DIExpression()), !dbg !12857
  %7 = bitcast %struct.rtio_spsc* %4 to i8*, !dbg !12858
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !12858
  call void @llvm.dbg.declare(metadata %struct.rtio_spsc* %4, metadata !12840, metadata !DIExpression()), !dbg !12859
  %8 = icmp eq i32 %0, 0, !dbg !12860
  br i1 %8, label %9, label %23, !dbg !12861

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !12862
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !12862
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12850, metadata !DIExpression()), !dbg !12862
  store volatile i32 0, i32* %5, align 4, !dbg !12862
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12862
  %12 = or i32 %11, 1, !dbg !12862
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12862
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12862
  %14 = and i32 %13, 1, !dbg !12862
  store volatile i32 %14, i32* %5, align 4, !dbg !12862
  %15 = load volatile i32, i32* %5, align 4, !dbg !12862
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !12863
  %16 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 0, !dbg !12864
  store i32 256, i32* %16, align 4, !dbg !12865
  %17 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 1, !dbg !12866
  store i32 2, i32* %17, align 4, !dbg !12867
  %18 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 3, !dbg !12868
  store i32 3, i32* %18, align 4, !dbg !12869
  %19 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 2, !dbg !12870
  store i32 0, i32* %19, align 4, !dbg !12871
  %20 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 4, !dbg !12872
  store i32 0, i32* %20, align 4, !dbg !12873
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.rtio_spsc* noundef nonnull %4) #25, !dbg !12874
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12875
  %22 = and i32 %21, -123731969, !dbg !12875
  br label %38, !dbg !12876

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !12877
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !12877
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12854, metadata !DIExpression()), !dbg !12877
  store volatile i32 0, i32* %6, align 4, !dbg !12877
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12877
  %26 = or i32 %25, 4, !dbg !12877
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12877
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12877
  %28 = and i32 %27, 4, !dbg !12877
  store volatile i32 %28, i32* %6, align 4, !dbg !12877
  %29 = load volatile i32, i32* %6, align 4, !dbg !12877
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !12878
  %30 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 0, !dbg !12879
  store i32 512, i32* %30, align 4, !dbg !12880
  %31 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 1, !dbg !12881
  store i32 2, i32* %31, align 4, !dbg !12882
  %32 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 3, !dbg !12883
  store i32 3, i32* %32, align 4, !dbg !12884
  %33 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 2, !dbg !12885
  store i32 0, i32* %33, align 4, !dbg !12886
  %34 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %4, i32 0, i32 4, !dbg !12887
  store i32 0, i32* %34, align 4, !dbg !12888
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.rtio_spsc* noundef nonnull %4) #25, !dbg !12889
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12890
  %36 = and i32 %35, 134217727, !dbg !12890
  %37 = shl i32 %2, 3, !dbg !12890
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !12891
  %42 = or i32 %41, %40, !dbg !12891
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12891
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !12892
  ret void, !dbg !12892
}

; Function Attrs: optsize
declare !dbg !12893 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.rtio_spsc* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !12897 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12898
  ret void, !dbg !12899
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !12900 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12901
  ret void, !dbg !12902
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #10 !dbg !12903 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12904
  ret i32 %1, !dbg !12905
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #5 !dbg !12906 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12907
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12908
  %3 = lshr i32 %2, 10, !dbg !12909
  %4 = and i32 %3, 7, !dbg !12909
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12910
  %6 = load i8, i8* %5, align 1, !dbg !12910
  %7 = zext i8 %6 to i32, !dbg !12910
  %8 = lshr i32 %1, %7, !dbg !12911
  ret i32 %8, !dbg !12912
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #5 !dbg !12913 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12914
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12915
  %3 = lshr i32 %2, 13, !dbg !12916
  %4 = and i32 %3, 7, !dbg !12916
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12917
  %6 = load i8, i8* %5, align 1, !dbg !12917
  %7 = zext i8 %6 to i32, !dbg !12917
  %8 = lshr i32 %1, %7, !dbg !12918
  ret i32 %8, !dbg !12919
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12920 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12924, metadata !DIExpression()), !dbg !12925
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12926
  store i32 15, i32* %2, align 4, !dbg !12927
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12928
  %4 = and i32 %3, 262144, !dbg !12930
  %5 = icmp eq i32 %4, 0, !dbg !12931
  br i1 %5, label %8, label %6, !dbg !12932

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12933
  store i32 327680, i32* %7, align 4, !dbg !12935
  br label %15, !dbg !12936

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12937
  %10 = and i32 %9, 65536, !dbg !12939
  %11 = icmp eq i32 %10, 0, !dbg !12940
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12941
  br i1 %11, label %14, label %13, !dbg !12942

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12943
  br label %15, !dbg !12945

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12946
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12948
  %17 = and i32 %16, 1, !dbg !12950
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12951
  store i32 %17, i32* %18, align 4, !dbg !12953
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12954
  %20 = lshr i32 %19, 3, !dbg !12955
  %21 = and i32 %20, 31, !dbg !12955
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12956
  store i32 %21, i32* %22, align 4, !dbg !12957
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12958
  %24 = and i32 %23, 4, !dbg !12960
  %25 = icmp eq i32 %24, 0, !dbg !12961
  br i1 %25, label %28, label %26, !dbg !12962

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12963
  store i32 5, i32* %27, align 4, !dbg !12965
  br label %35, !dbg !12966

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12967
  %30 = and i32 %29, 1, !dbg !12969
  %31 = icmp eq i32 %30, 0, !dbg !12970
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12971
  br i1 %31, label %34, label %33, !dbg !12972

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12973
  br label %35, !dbg !12975

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12976
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12978
  %37 = and i32 %36, 1, !dbg !12980
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12981
  store i32 %37, i32* %38, align 4, !dbg !12983
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12984
  %40 = and i32 %39, 16777216, !dbg !12986
  %41 = icmp eq i32 %40, 0, !dbg !12987
  %42 = select i1 %41, i32 1, i32 2, !dbg !12988
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12989
  store i32 %42, i32* %43, align 4, !dbg !12991
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12992
  %45 = and i32 %44, 4194304, !dbg !12993
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12994
  store i32 %45, i32* %46, align 4, !dbg !12995
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12996
  %48 = and i32 %47, 63, !dbg !12997
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12998
  store i32 %48, i32* %49, align 4, !dbg !12999
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13000
  %51 = lshr i32 %50, 6, !dbg !13001
  %52 = and i32 %51, 511, !dbg !13001
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13002
  store i32 %52, i32* %53, align 4, !dbg !13003
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13004
  %55 = shl i32 %54, 1, !dbg !13005
  %56 = and i32 %55, 393216, !dbg !13005
  %57 = add nuw nsw i32 %56, 131072, !dbg !13005
  %58 = lshr exact i32 %57, 16, !dbg !13006
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13007
  store i32 %58, i32* %59, align 4, !dbg !13008
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13009
  %61 = lshr i32 %60, 24, !dbg !13010
  %62 = and i32 %61, 15, !dbg !13010
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13011
  store i32 %62, i32* %63, align 4, !dbg !13012
  ret void, !dbg !13013
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.rtio_spsc* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #5 !dbg !13014 {
  call void @llvm.dbg.value(metadata %struct.rtio_spsc* %0, metadata !13018, metadata !DIExpression()), !dbg !13020
  call void @llvm.dbg.value(metadata i32* %1, metadata !13019, metadata !DIExpression()), !dbg !13020
  %3 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 0, !dbg !13021
  store i32 15, i32* %3, align 4, !dbg !13022
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13023
  %5 = and i32 %4, 3, !dbg !13024
  %6 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 1, !dbg !13025
  store i32 %5, i32* %6, align 4, !dbg !13026
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13027
  %8 = and i32 %7, 240, !dbg !13028
  %9 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 2, !dbg !13029
  store i32 %8, i32* %9, align 4, !dbg !13030
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13031
  %11 = and i32 %10, 7168, !dbg !13032
  %12 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 3, !dbg !13033
  store i32 %11, i32* %12, align 4, !dbg !13034
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13035
  %14 = lshr i32 %13, 3, !dbg !13036
  %15 = and i32 %14, 7168, !dbg !13036
  %16 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 4, !dbg !13037
  store i32 %15, i32* %16, align 4, !dbg !13038
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13039
  %18 = and i32 %17, 7, !dbg !13040
  store i32 %18, i32* %1, align 4, !dbg !13041
  ret void, !dbg !13042
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !13043 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13044
  %2 = and i32 %1, 128, !dbg !13044
  %3 = icmp eq i32 %2, 0, !dbg !13044
  br i1 %3, label %5, label %4, !dbg !13046

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !13047
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !13049
  br label %5, !dbg !13050

5:                                                ; preds = %4, %0
  ret void, !dbg !13051
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !13052 {
  ret void, !dbg !13053
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !13054 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13057, metadata !DIExpression()), !dbg !13058
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !13059
  ret void, !dbg !13060
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !13061 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13064, metadata !DIExpression()), !dbg !13066
  call void @llvm.dbg.value(metadata i32 1000, metadata !13065, metadata !DIExpression()), !dbg !13066
  %2 = udiv i32 %0, 1000, !dbg !13067
  %3 = add nsw i32 %2, -1, !dbg !13068
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13069
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13070
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13071
  ret void, !dbg !13072
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !13073 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13075, metadata !DIExpression()), !dbg !13077
  %3 = bitcast i32* %2 to i8*, !dbg !13078
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13078
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13076, metadata !DIExpression()), !dbg !13079
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13080
  store volatile i32 %4, i32* %2, align 4, !dbg !13079
  %5 = load volatile i32, i32* %2, align 4, !dbg !13081
  %6 = icmp eq i32 %0, -1, !dbg !13082
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13075, metadata !DIExpression()), !dbg !13077
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !13077
  call void @llvm.dbg.value(metadata i32 %8, metadata !13075, metadata !DIExpression()), !dbg !13077
  br label %9, !dbg !13084

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13075, metadata !DIExpression()), !dbg !13077
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13085
  call void @llvm.dbg.value(metadata i32 undef, metadata !13075, metadata !DIExpression()), !dbg !13077
  %12 = shl i32 %11, 15, !dbg !13077
  %13 = ashr i32 %12, 31, !dbg !13077
  %14 = add i32 %13, %10, !dbg !13077
  call void @llvm.dbg.value(metadata i32 %14, metadata !13075, metadata !DIExpression()), !dbg !13077
  %15 = icmp eq i32 %14, 0, !dbg !13084
  br i1 %15, label %16, label %9, !dbg !13084

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13088
  ret void, !dbg !13088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #6 !dbg !13089 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13091, metadata !DIExpression()), !dbg !13092
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13093
  ret void, !dbg !13094
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !13095 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13100, metadata !DIExpression()), !dbg !13105
  call void @llvm.dbg.value(metadata i32 0, metadata !13103, metadata !DIExpression()), !dbg !13105
  call void @llvm.dbg.value(metadata i32 0, metadata !13104, metadata !DIExpression()), !dbg !13105
  %2 = icmp eq i32 %0, 0, !dbg !13106
  br i1 %2, label %35, label %3, !dbg !13108

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !13109
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !13112
  %6 = icmp eq i32 %5, 32768, !dbg !13114
  br i1 %6, label %7, label %12, !dbg !13115

7:                                                ; preds = %3
  %8 = icmp ugt i32 %0, 60000000, !dbg !13116
  br i1 %8, label %12, label %9, !dbg !13119

9:                                                ; preds = %7
  %10 = icmp ugt i32 %0, 30000000, !dbg !13120
  %11 = zext i1 %10 to i32, !dbg !13123
  call void @llvm.dbg.value(metadata i32 %11, metadata !13103, metadata !DIExpression()), !dbg !13105
  br label %12, !dbg !13123

12:                                               ; preds = %7, %9, %3
  %13 = phi i32 [ %11, %9 ], [ 0, %3 ], [ 2, %7 ], !dbg !13105
  call void @llvm.dbg.value(metadata i32 %13, metadata !13103, metadata !DIExpression()), !dbg !13105
  %14 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !13124
  %15 = icmp eq i32 %14, 16384, !dbg !13126
  br i1 %15, label %16, label %24, !dbg !13127

16:                                               ; preds = %12
  %17 = icmp ugt i32 %0, 60000000, !dbg !13128
  %18 = icmp eq i32 %13, 0
  %19 = and i1 %17, %18, !dbg !13131
  br i1 %19, label %24, label %20, !dbg !13131

20:                                               ; preds = %16
  %21 = icmp ugt i32 %0, 30000000, !dbg !13132
  %22 = and i1 %21, %18, !dbg !13135
  %23 = select i1 %22, i32 1, i32 %13, !dbg !13135
  call void @llvm.dbg.value(metadata i32 %23, metadata !13103, metadata !DIExpression()), !dbg !13105
  br label %24, !dbg !13135

24:                                               ; preds = %16, %20, %12
  %25 = phi i32 [ %23, %20 ], [ %13, %12 ], [ 2, %16 ], !dbg !13136
  call void @llvm.dbg.value(metadata i32 %25, metadata !13103, metadata !DIExpression()), !dbg !13105
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %25) #24, !dbg !13137
  call void @llvm.dbg.value(metadata i32 2, metadata !13101, metadata !DIExpression()), !dbg !13105
  br label %26, !dbg !13138

26:                                               ; preds = %26, %24
  %27 = phi i32 [ 2, %24 ], [ %29, %26 ], !dbg !13136
  call void @llvm.dbg.value(metadata i32 %27, metadata !13101, metadata !DIExpression()), !dbg !13105
  %28 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !13139
  call void @llvm.dbg.value(metadata i32 %28, metadata !13102, metadata !DIExpression()), !dbg !13105
  %29 = add nsw i32 %27, -1, !dbg !13141
  call void @llvm.dbg.value(metadata i32 %29, metadata !13101, metadata !DIExpression()), !dbg !13105
  %30 = icmp ne i32 %28, %25, !dbg !13142
  %31 = icmp ne i32 %29, 0, !dbg !13143
  %32 = select i1 %30, i1 %31, i1 false, !dbg !13143
  br i1 %32, label %26, label %33, !dbg !13144, !llvm.loop !13145

33:                                               ; preds = %26
  %34 = zext i1 %30 to i32
  br label %35

35:                                               ; preds = %33, %1
  %36 = phi i32 [ 1, %1 ], [ %34, %33 ], !dbg !13147
  call void @llvm.dbg.value(metadata i32 %36, metadata !13104, metadata !DIExpression()), !dbg !13105
  ret i32 %36, !dbg !13148
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #5 !dbg !13149 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13151
  %2 = and i32 %1, 49152, !dbg !13151
  ret i32 %2, !dbg !13152
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !13153 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13155, metadata !DIExpression()), !dbg !13156
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13157
  %3 = and i32 %2, -8, !dbg !13157
  %4 = or i32 %3, %0, !dbg !13157
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13157
  ret void, !dbg !13158
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #5 !dbg !13159 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13160
  %2 = and i32 %1, 7, !dbg !13160
  ret i32 %2, !dbg !13161
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !13162 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !13180, metadata !DIExpression()), !dbg !13184
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13181, metadata !DIExpression()), !dbg !13184
  call void @llvm.dbg.value(metadata i32 0, metadata !13182, metadata !DIExpression()), !dbg !13184
  call void @llvm.dbg.value(metadata i32 0, metadata !13183, metadata !DIExpression()), !dbg !13184
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !13185
  %4 = icmp eq i32 %3, 0, !dbg !13187
  br i1 %4, label %5, label %21, !dbg !13188

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #24, !dbg !13189
  call void @llvm.dbg.value(metadata i32 %6, metadata !13183, metadata !DIExpression()), !dbg !13184
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.163() #24, !dbg !13191
  %8 = icmp eq i32 %7, 1, !dbg !13193
  br i1 %8, label %13, label %9, !dbg !13194

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.164() #24, !dbg !13195
  br label %10, !dbg !13197

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.163() #24, !dbg !13198
  %12 = icmp eq i32 %11, 1, !dbg !13199
  br i1 %12, label %13, label %10, !dbg !13197, !llvm.loop !13200

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !13202
  %15 = load i32, i32* %14, align 4, !dbg !13202
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !13203
  %17 = load i32, i32* %16, align 4, !dbg !13203
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !13204
  %19 = load i32, i32* %18, align 4, !dbg !13204
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.165(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !13205
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !13206
  call void @llvm.dbg.value(metadata i32 %20, metadata !13182, metadata !DIExpression()), !dbg !13184
  br label %21, !dbg !13207

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !13208
  call void @llvm.dbg.value(metadata i32 %22, metadata !13182, metadata !DIExpression()), !dbg !13184
  ret i32 %22, !dbg !13209
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #5 !dbg !13210 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13214, metadata !DIExpression()), !dbg !13215
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.167() #24, !dbg !13216
  %2 = icmp ne i32 %1, 0, !dbg !13218
  call void @llvm.dbg.value(metadata i1 %2, metadata !13214, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13215
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !13219
  %4 = icmp ne i32 %3, 0, !dbg !13221
  %5 = select i1 %4, i1 true, i1 %2, !dbg !13222
  %6 = zext i1 %5 to i32, !dbg !13222
  call void @llvm.dbg.value(metadata i32 %6, metadata !13214, metadata !DIExpression()), !dbg !13215
  ret i32 %6, !dbg !13223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #10 !dbg !13224 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13228, metadata !DIExpression()), !dbg !13231
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13229, metadata !DIExpression()), !dbg !13231
  call void @llvm.dbg.value(metadata i32 0, metadata !13230, metadata !DIExpression()), !dbg !13231
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13232
  %4 = load i32, i32* %3, align 4, !dbg !13232
  %5 = and i32 %4, 63, !dbg !13233
  %6 = udiv i32 %0, %5, !dbg !13234
  call void @llvm.dbg.value(metadata i32 %6, metadata !13230, metadata !DIExpression()), !dbg !13231
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13235
  %8 = load i32, i32* %7, align 4, !dbg !13235
  %9 = and i32 %8, 511, !dbg !13236
  %10 = mul i32 %9, %6, !dbg !13237
  call void @llvm.dbg.value(metadata i32 %10, metadata !13230, metadata !DIExpression()), !dbg !13231
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13238
  %12 = load i32, i32* %11, align 4, !dbg !13238
  %13 = lshr i32 %12, 15, !dbg !13239
  %14 = and i32 %13, 131070, !dbg !13239
  %15 = add nuw nsw i32 %14, 2, !dbg !13239
  %16 = udiv i32 %10, %15, !dbg !13240
  call void @llvm.dbg.value(metadata i32 %16, metadata !13230, metadata !DIExpression()), !dbg !13231
  ret i32 %16, !dbg !13241
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.163() unnamed_addr #5 !dbg !13242 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13243
  %2 = lshr i32 %1, 1, !dbg !13244
  %3 = and i32 %2, 1, !dbg !13244
  ret i32 %3, !dbg !13245
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.164() unnamed_addr #15 !dbg !13246 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13247
  %2 = or i32 %1, 1, !dbg !13247
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13247
  ret void, !dbg !13248
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.165(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !13249 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13251, metadata !DIExpression()), !dbg !13255
  call void @llvm.dbg.value(metadata i32 %1, metadata !13252, metadata !DIExpression()), !dbg !13255
  call void @llvm.dbg.value(metadata i32 %2, metadata !13253, metadata !DIExpression()), !dbg !13255
  call void @llvm.dbg.value(metadata i32 %3, metadata !13254, metadata !DIExpression()), !dbg !13255
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13256
  %6 = and i32 %5, -4227072, !dbg !13256
  %7 = or i32 %1, %0, !dbg !13256
  %8 = shl i32 %2, 6, !dbg !13256
  %9 = or i32 %7, %8, !dbg !13256
  %10 = or i32 %9, %6, !dbg !13256
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13256
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13257
  %12 = and i32 %11, -196609, !dbg !13257
  %13 = or i32 %12, %3, !dbg !13257
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13257
  ret void, !dbg !13258
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !13259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13263, metadata !DIExpression()), !dbg !13267
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13264, metadata !DIExpression()), !dbg !13267
  call void @llvm.dbg.value(metadata i32 0, metadata !13265, metadata !DIExpression()), !dbg !13267
  call void @llvm.dbg.value(metadata i32 0, metadata !13266, metadata !DIExpression()), !dbg !13267
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13268
  %4 = load i32, i32* %3, align 4, !dbg !13268
  %5 = lshr i32 %4, 4, !dbg !13268
  %6 = and i32 %5, 15, !dbg !13268
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13268
  %8 = load i8, i8* %7, align 1, !dbg !13268
  %9 = zext i8 %8 to i32, !dbg !13268
  %10 = lshr i32 %0, %9, !dbg !13268
  call void @llvm.dbg.value(metadata i32 %10, metadata !13266, metadata !DIExpression()), !dbg !13267
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13269
  %12 = icmp ult i32 %11, %10, !dbg !13271
  br i1 %12, label %13, label %16, !dbg !13272

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !13273
  call void @llvm.dbg.value(metadata i32 %14, metadata !13265, metadata !DIExpression()), !dbg !13267
  %15 = icmp eq i32 %14, 0, !dbg !13275
  br i1 %15, label %16, label %30, !dbg !13277

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.166() #24, !dbg !13278
  br label %17, !dbg !13280

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.167() #24, !dbg !13281
  %19 = icmp eq i32 %18, 1, !dbg !13282
  br i1 %19, label %20, label %17, !dbg !13280, !llvm.loop !13283

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13285
  tail call fastcc void @LL_RCC_SetAHBPrescaler.168(i32 noundef %21) #24, !dbg !13286
  tail call fastcc void @LL_RCC_SetSysClkSource.169() #24, !dbg !13287
  br label %22, !dbg !13288

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.170() #24, !dbg !13289
  %24 = icmp eq i32 %23, 8, !dbg !13290
  br i1 %24, label %25, label %22, !dbg !13288, !llvm.loop !13291

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13293
  %27 = load i32, i32* %26, align 4, !dbg !13293
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.171(i32 noundef %27) #24, !dbg !13294
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13295
  %29 = load i32, i32* %28, align 4, !dbg !13295
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.172(i32 noundef %29) #24, !dbg !13296
  br label %30, !dbg !13297

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13298
  %33 = icmp ugt i32 %32, %10, !dbg !13300
  br i1 %33, label %34, label %36, !dbg !13301

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !13302
  call void @llvm.dbg.value(metadata i32 %35, metadata !13265, metadata !DIExpression()), !dbg !13267
  br label %36, !dbg !13304

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13267
  call void @llvm.dbg.value(metadata i32 %37, metadata !13265, metadata !DIExpression()), !dbg !13267
  %38 = icmp eq i32 %37, 0, !dbg !13305
  br i1 %38, label %39, label %40, !dbg !13307

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !13308
  br label %40, !dbg !13310

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13311
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.166() unnamed_addr #15 !dbg !13312 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13313
  %2 = or i32 %1, 16777216, !dbg !13313
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13313
  ret void, !dbg !13314
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.167() unnamed_addr #5 !dbg !13315 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13316
  %2 = lshr i32 %1, 25, !dbg !13317
  %3 = and i32 %2, 1, !dbg !13317
  ret i32 %3, !dbg !13318
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.168(i32 noundef %0) unnamed_addr #15 !dbg !13319 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13321, metadata !DIExpression()), !dbg !13322
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13323
  %3 = and i32 %2, -241, !dbg !13323
  %4 = or i32 %3, %0, !dbg !13323
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13323
  ret void, !dbg !13324
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.169() unnamed_addr #15 !dbg !13325 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13327, metadata !DIExpression()), !dbg !13328
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13329
  %2 = and i32 %1, -4, !dbg !13329
  %3 = or i32 %2, 2, !dbg !13329
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13329
  ret void, !dbg !13330
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.170() unnamed_addr #5 !dbg !13331 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13332
  %2 = and i32 %1, 12, !dbg !13332
  ret i32 %2, !dbg !13333
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.171(i32 noundef %0) unnamed_addr #15 !dbg !13334 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13336, metadata !DIExpression()), !dbg !13337
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13338
  %3 = and i32 %2, -7169, !dbg !13338
  %4 = or i32 %3, %0, !dbg !13338
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13338
  ret void, !dbg !13339
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.172(i32 noundef %0) unnamed_addr #15 !dbg !13340 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13342, metadata !DIExpression()), !dbg !13343
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13344
  %3 = and i32 %2, -57345, !dbg !13344
  %4 = or i32 %3, %0, !dbg !13344
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13344
  ret void, !dbg !13345
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #5 !dbg !13346 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13347
  %2 = lshr i32 %1, 27, !dbg !13348
  %3 = and i32 %2, 1, !dbg !13348
  ret i32 %3, !dbg !13349
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !13350 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13354, metadata !DIExpression()), !dbg !13360
  call void @llvm.dbg.value(metadata i32 %1, metadata !13355, metadata !DIExpression()), !dbg !13360
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !13356, metadata !DIExpression()), !dbg !13360
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13357, metadata !DIExpression()), !dbg !13360
  call void @llvm.dbg.value(metadata i32 0, metadata !13358, metadata !DIExpression()), !dbg !13360
  call void @llvm.dbg.value(metadata i32 0, metadata !13359, metadata !DIExpression()), !dbg !13360
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !13361
  %6 = icmp eq i32 %5, 0, !dbg !13363
  br i1 %6, label %7, label %27, !dbg !13364

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #24, !dbg !13365
  call void @llvm.dbg.value(metadata i32 %8, metadata !13359, metadata !DIExpression()), !dbg !13360
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.173() #24, !dbg !13367
  %10 = icmp eq i32 %9, 1, !dbg !13369
  br i1 %10, label %19, label %11, !dbg !13370

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13371
  br i1 %12, label %13, label %14, !dbg !13374

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !13375
  br label %15, !dbg !13377

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.174() #24, !dbg !13378
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.175() #24, !dbg !13380
  br label %16, !dbg !13381

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.173() #24, !dbg !13382
  %18 = icmp eq i32 %17, 1, !dbg !13383
  br i1 %18, label %19, label %16, !dbg !13381, !llvm.loop !13384

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !13386
  %21 = load i32, i32* %20, align 4, !dbg !13386
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !13387
  %23 = load i32, i32* %22, align 4, !dbg !13387
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !13388
  %25 = load i32, i32* %24, align 4, !dbg !13388
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.165(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !13389
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !13390
  call void @llvm.dbg.value(metadata i32 %26, metadata !13358, metadata !DIExpression()), !dbg !13360
  br label %27, !dbg !13391

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13392
  call void @llvm.dbg.value(metadata i32 %28, metadata !13358, metadata !DIExpression()), !dbg !13360
  ret i32 %28, !dbg !13393
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.173() unnamed_addr #5 !dbg !13394 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13395
  %2 = lshr i32 %1, 17, !dbg !13396
  %3 = and i32 %2, 1, !dbg !13396
  ret i32 %3, !dbg !13397
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !13398 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13399
  %2 = or i32 %1, 262144, !dbg !13399
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13399
  ret void, !dbg !13400
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.174() unnamed_addr #15 !dbg !13401 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13402
  %2 = and i32 %1, -262145, !dbg !13402
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13402
  ret void, !dbg !13403
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.175() unnamed_addr #15 !dbg !13404 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13405
  %2 = or i32 %1, 65536, !dbg !13405
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13405
  ret void, !dbg !13406
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !13407 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13410, metadata !DIExpression()), !dbg !13426
  call void @llvm.dbg.value(metadata i32 undef, metadata !13410, metadata !DIExpression()), !dbg !13426
  call void @llvm.dbg.value(metadata i32 undef, metadata !13410, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13426
  ret void, !dbg !13427
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13428 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13432, metadata !DIExpression()), !dbg !13434
  %2 = icmp eq i8* %0, null, !dbg !13435
  br i1 %2, label %29, label %3, !dbg !13437

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13438
  %5 = icmp eq i8 %4, 0, !dbg !13439
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13440
  br i1 %6, label %29, label %8, !dbg !13440

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13433, metadata !DIExpression()), !dbg !13434
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13441

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13433, metadata !DIExpression()), !dbg !13434
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !13443
  br i1 %10, label %11, label %15, !dbg !13448

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13449
  %13 = load i8*, i8** %12, align 4, !dbg !13449
  %14 = icmp eq i8* %13, %0, !dbg !13450
  br i1 %14, label %29, label %15, !dbg !13451

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13452
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13433, metadata !DIExpression()), !dbg !13434
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13453
  br i1 %17, label %7, label %8, !dbg !13454, !llvm.loop !13455

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13433, metadata !DIExpression()), !dbg !13434
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !13457
  br i1 %20, label %21, label %26, !dbg !13461

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13462
  %23 = load i8*, i8** %22, align 4, !dbg !13462
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13463
  %25 = icmp eq i32 %24, 0, !dbg !13464
  br i1 %25, label %29, label %26, !dbg !13465

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13466
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13433, metadata !DIExpression()), !dbg !13434
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13467
  br i1 %28, label %29, label %18, !dbg !13441, !llvm.loop !13468

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13434
  ret %struct.device* %30, !dbg !13470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #10 !dbg !13471 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13475, metadata !DIExpression()), !dbg !13476
  %2 = icmp eq %struct.device* %0, null, !dbg !13477
  br i1 %2, label %14, label %3, !dbg !13479

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13480
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13480
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13481
  %7 = load i8, i8* %6, align 1, !dbg !13481
  %8 = and i8 %7, 1, !dbg !13481
  %9 = icmp eq i8 %8, 0, !dbg !13481
  br i1 %9, label %14, label %10, !dbg !13482

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13483
  %12 = load i8, i8* %11, align 1, !dbg !13483
  %13 = icmp eq i8 %12, 0, !dbg !13484
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13476
  ret i1 %15, !dbg !13485
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #6 !dbg !13486 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13491, metadata !DIExpression()), !dbg !13492
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13493
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13494
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13495 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13503, metadata !DIExpression()), !dbg !13508
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13504, metadata !DIExpression()), !dbg !13508
  call void @llvm.dbg.value(metadata i8* %2, metadata !13505, metadata !DIExpression()), !dbg !13508
  %5 = bitcast i32* %4 to i8*, !dbg !13509
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13509
  call void @llvm.dbg.value(metadata i32 0, metadata !13506, metadata !DIExpression()), !dbg !13508
  store i32 0, i32* %4, align 4, !dbg !13510
  call void @llvm.dbg.value(metadata i32* %4, metadata !13506, metadata !DIExpression(DW_OP_deref)), !dbg !13508
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13511
  call void @llvm.dbg.value(metadata i16* %6, metadata !13507, metadata !DIExpression()), !dbg !13508
  %7 = load i32, i32* %4, align 4, !dbg !13512
  call void @llvm.dbg.value(metadata i32 %7, metadata !13506, metadata !DIExpression()), !dbg !13508
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13513
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13514
  ret i32 %8, !dbg !13515
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13516 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13520, metadata !DIExpression()), !dbg !13526
  call void @llvm.dbg.value(metadata i32* %1, metadata !13521, metadata !DIExpression()), !dbg !13526
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13527
  %4 = load i16*, i16** %3, align 4, !dbg !13527
  call void @llvm.dbg.value(metadata i16* %4, metadata !13522, metadata !DIExpression()), !dbg !13526
  %5 = icmp eq i16* %4, null, !dbg !13528
  br i1 %5, label %14, label %6, !dbg !13529

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13530
  call void @llvm.dbg.value(metadata i32 %7, metadata !13523, metadata !DIExpression()), !dbg !13530
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13531
  %9 = load i16, i16* %8, align 2, !dbg !13531
  %10 = add i16 %9, -32767, !dbg !13532
  %11 = icmp ult i16 %10, 2, !dbg !13532
  %12 = add i32 %7, 1, !dbg !13533
  call void @llvm.dbg.value(metadata i32 %12, metadata !13523, metadata !DIExpression()), !dbg !13530
  br i1 %11, label %13, label %6, !dbg !13532, !llvm.loop !13535

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13538
  br label %14, !dbg !13539

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13540
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13541 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13545, metadata !DIExpression()), !dbg !13556
  call void @llvm.dbg.value(metadata i32 %1, metadata !13546, metadata !DIExpression()), !dbg !13556
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13547, metadata !DIExpression()), !dbg !13556
  call void @llvm.dbg.value(metadata i8* %3, metadata !13548, metadata !DIExpression()), !dbg !13556
  call void @llvm.dbg.value(metadata i32 0, metadata !13549, metadata !DIExpression()), !dbg !13557
  %5 = icmp eq i32 %1, 0, !dbg !13558
  br i1 %5, label %16, label %8, !dbg !13559

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13549, metadata !DIExpression()), !dbg !13557
  %7 = icmp eq i32 %15, %1, !dbg !13558
  br i1 %7, label %16, label %8, !dbg !13559, !llvm.loop !13560

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13549, metadata !DIExpression()), !dbg !13557
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13562
  %11 = load i16, i16* %10, align 2, !dbg !13562
  call void @llvm.dbg.value(metadata i16 %11, metadata !13551, metadata !DIExpression()), !dbg !13563
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !13564
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13554, metadata !DIExpression()), !dbg !13563
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13565
  call void @llvm.dbg.value(metadata i32 %13, metadata !13555, metadata !DIExpression()), !dbg !13563
  %14 = icmp slt i32 %13, 0, !dbg !13566
  %15 = add nuw i32 %9, 1, !dbg !13568
  call void @llvm.dbg.value(metadata i32 %15, metadata !13549, metadata !DIExpression()), !dbg !13557
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !13570 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13574, metadata !DIExpression()), !dbg !13577
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13575, metadata !DIExpression()), !dbg !13577
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13576, metadata !DIExpression()), !dbg !13577
  %2 = sext i16 %0 to i32, !dbg !13578
  %3 = icmp slt i16 %0, 1, !dbg !13580
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13581
  %6 = add nsw i32 %2, -1, !dbg !13581
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13581
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13581
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13575, metadata !DIExpression()), !dbg !13577
  ret %struct.device* %8, !dbg !13582
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13583 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13585, metadata !DIExpression()), !dbg !13590
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13586, metadata !DIExpression()), !dbg !13590
  call void @llvm.dbg.value(metadata i8* %2, metadata !13587, metadata !DIExpression()), !dbg !13590
  %5 = bitcast i32* %4 to i8*, !dbg !13591
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13591
  call void @llvm.dbg.value(metadata i32 0, metadata !13588, metadata !DIExpression()), !dbg !13590
  store i32 0, i32* %4, align 4, !dbg !13592
  call void @llvm.dbg.value(metadata i32* %4, metadata !13588, metadata !DIExpression(DW_OP_deref)), !dbg !13590
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13593
  call void @llvm.dbg.value(metadata i16* %6, metadata !13589, metadata !DIExpression()), !dbg !13590
  %7 = load i32, i32* %4, align 4, !dbg !13594
  call void @llvm.dbg.value(metadata i32 %7, metadata !13588, metadata !DIExpression()), !dbg !13590
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13595
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13596
  ret i32 %8, !dbg !13597
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13598 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13600, metadata !DIExpression()), !dbg !13605
  call void @llvm.dbg.value(metadata i32* %1, metadata !13601, metadata !DIExpression()), !dbg !13605
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13606
  %4 = load i16*, i16** %3, align 4, !dbg !13606
  call void @llvm.dbg.value(metadata i16* %4, metadata !13602, metadata !DIExpression()), !dbg !13605
  call void @llvm.dbg.value(metadata i32 0, metadata !13603, metadata !DIExpression()), !dbg !13605
  call void @llvm.dbg.value(metadata i32 0, metadata !13604, metadata !DIExpression()), !dbg !13605
  %5 = icmp eq i16* %4, null, !dbg !13607
  br i1 %5, label %22, label %6, !dbg !13609

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13603, metadata !DIExpression()), !dbg !13605
  call void @llvm.dbg.value(metadata i16* %8, metadata !13602, metadata !DIExpression()), !dbg !13605
  %9 = load i16, i16* %8, align 2, !dbg !13610
  %10 = icmp eq i16 %9, -32768, !dbg !13614
  call void @llvm.dbg.value(metadata i32 undef, metadata !13603, metadata !DIExpression()), !dbg !13605
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13615
  call void @llvm.dbg.value(metadata i16* %11, metadata !13602, metadata !DIExpression()), !dbg !13605
  %12 = zext i1 %10 to i32, !dbg !13616
  %13 = add i32 %7, %12, !dbg !13616
  call void @llvm.dbg.value(metadata i32 %13, metadata !13603, metadata !DIExpression()), !dbg !13605
  %14 = icmp eq i32 %13, 2, !dbg !13617
  br i1 %14, label %15, label %6, !dbg !13618

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13605
  call void @llvm.dbg.value(metadata i32 %16, metadata !13604, metadata !DIExpression()), !dbg !13605
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13619
  %18 = load i16, i16* %17, align 2, !dbg !13619
  %19 = icmp eq i16 %18, 32767, !dbg !13620
  %20 = add i32 %16, 1, !dbg !13621
  call void @llvm.dbg.value(metadata i32 %20, metadata !13604, metadata !DIExpression()), !dbg !13605
  br i1 %19, label %21, label %15, !dbg !13623, !llvm.loop !13624

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13626
  br label %22, !dbg !13627

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13628
  call void @llvm.dbg.value(metadata i16* %23, metadata !13602, metadata !DIExpression()), !dbg !13605
  ret i16* %23, !dbg !13629
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #10 !dbg !13630 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13633
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13634
  ret i32* %2, !dbg !13635
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !13636 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13784, metadata !DIExpression()), !dbg !13787
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13785, metadata !DIExpression()), !dbg !13787
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13786, metadata !DIExpression()), !dbg !13787
  ret void, !dbg !13788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13793, metadata !DIExpression()), !dbg !13795
  call void @llvm.dbg.value(metadata i32 %1, metadata !13794, metadata !DIExpression()), !dbg !13795
  ret void, !dbg !13796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13797 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13801, metadata !DIExpression()), !dbg !13803
  call void @llvm.dbg.value(metadata i32 %1, metadata !13802, metadata !DIExpression()), !dbg !13803
  ret void, !dbg !13804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13805 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13809, metadata !DIExpression()), !dbg !13811
  call void @llvm.dbg.value(metadata i8* %1, metadata !13810, metadata !DIExpression()), !dbg !13811
  ret i32 -134, !dbg !13812
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13813 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13817, metadata !DIExpression()), !dbg !13819
  call void @llvm.dbg.value(metadata i8* %1, metadata !13818, metadata !DIExpression()), !dbg !13819
  ret i32 -134, !dbg !13820
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13821 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13824, metadata !DIExpression()), !dbg !13825
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13826, !srcloc !13832
  call void @llvm.dbg.value(metadata i32 undef, metadata !13829, metadata !DIExpression()) #23, !dbg !13833
  call void @llvm.dbg.value(metadata i32 undef, metadata !13830, metadata !DIExpression()) #23, !dbg !13833
  br label %3, !dbg !13834

3:                                                ; preds = %3, %1
  br label %3, !dbg !13835, !llvm.loop !13838
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13841 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13845, metadata !DIExpression()), !dbg !13847
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13846, metadata !DIExpression()), !dbg !13847
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.180, i32 0, i32 0), i32 noundef 69) #25, !dbg !13848
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13853
  unreachable, !dbg !13853
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13854 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13856, metadata !DIExpression()), !dbg !13857
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13858
  unreachable, !dbg !13858
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13859 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13861, metadata !DIExpression()), !dbg !13865
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13862, metadata !DIExpression()), !dbg !13865
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13866, !srcloc !13832
  call void @llvm.dbg.value(metadata i32 undef, metadata !13829, metadata !DIExpression()) #23, !dbg !13868
  call void @llvm.dbg.value(metadata i32 undef, metadata !13830, metadata !DIExpression()) #23, !dbg !13868
  call void @llvm.dbg.value(metadata i32 undef, metadata !13863, metadata !DIExpression()), !dbg !13865
  %4 = tail call fastcc %struct.k_thread* @k_current_get.183() #26, !dbg !13869
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13864, metadata !DIExpression()), !dbg !13865
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !13870
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.184, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #25, !dbg !13870
  %6 = icmp eq %struct.__esf* %1, null, !dbg !13875
  br i1 %6, label %15, label %7, !dbg !13877

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13878, metadata !DIExpression()), !dbg !13883
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13885
  %9 = load i32, i32* %8, align 4, !dbg !13885
  %10 = and i32 %9, 511, !dbg !13886
  %11 = icmp eq i32 %10, 0, !dbg !13887
  br i1 %11, label %13, label %12, !dbg !13888

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 69) #25, !dbg !13889
  br label %13, !dbg !13895

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #24, !dbg !13896
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.186, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #25, !dbg !13896
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !13901
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13878, metadata !DIExpression()), !dbg !13902
  br label %17, !dbg !13907

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #24, !dbg !13896
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.186, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #25, !dbg !13896
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !13901
  br label %17, !dbg !13908

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !13866
  call void @llvm.dbg.value(metadata i32 %18, metadata !13829, metadata !DIExpression()) #23, !dbg !13868
  call void @llvm.dbg.value(metadata i32 %18, metadata !13863, metadata !DIExpression()), !dbg !13865
  call void @llvm.dbg.value(metadata i32 undef, metadata !13909, metadata !DIExpression()) #23, !dbg !13912
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !13914, !srcloc !13915
  tail call fastcc void @k_thread_abort.187(%struct.k_thread* noundef %4) #24, !dbg !13916
  ret void, !dbg !13919
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.183() unnamed_addr #12 !dbg !13920 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.195() #26, !dbg !13924
  ret %struct.k_thread* %1, !dbg !13925
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #4 !dbg !13926 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13930, metadata !DIExpression()), !dbg !13931
  %2 = icmp ult i32 %0, 5, !dbg !13932
  br i1 %2, label %3, label %6, !dbg !13932

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !13932
  %5 = load i8*, i8** %4, align 4, !dbg !13932
  br label %6, !dbg !13932

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.189, i32 0, i32 0), %1 ], !dbg !13933
  ret i8* %7, !dbg !13935
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13936 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13940, metadata !DIExpression()), !dbg !13942
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !13943
  br i1 %2, label %9, label %3, !dbg !13944

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !13945
  call void @llvm.dbg.value(metadata i8* %4, metadata !13941, metadata !DIExpression()), !dbg !13942
  %5 = icmp eq i8* %4, null, !dbg !13946
  br i1 %5, label %9, label %6, !dbg !13948

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !13949
  %8 = icmp eq i8 %7, 0, !dbg !13950
  br i1 %8, label %9, label %10, !dbg !13951

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.188, i32 0, i32 0), metadata !13941, metadata !DIExpression()), !dbg !13942
  br label %10, !dbg !13952

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.188, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !13942
  call void @llvm.dbg.value(metadata i8* %11, metadata !13941, metadata !DIExpression()), !dbg !13942
  ret i8* %11, !dbg !13954
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.187(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13955 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13959, metadata !DIExpression()), !dbg !13960
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13961, !srcloc !13963
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !13964
  ret void, !dbg !13965
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.195() unnamed_addr #12 !dbg !13966 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13967, !srcloc !13969
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !13970
  ret %struct.k_thread* %1, !dbg !13971
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13972 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13976, metadata !DIExpression()), !dbg !13979
  call void @llvm.dbg.value(metadata i32 %1, metadata !13977, metadata !DIExpression()), !dbg !13979
  call void @llvm.dbg.value(metadata i32 %2, metadata !13978, metadata !DIExpression()), !dbg !13979
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !13980
  ret void, !dbg !13981
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13982 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13986, metadata !DIExpression()), !dbg !13989
  call void @llvm.dbg.value(metadata i8* %1, metadata !13987, metadata !DIExpression()), !dbg !13989
  call void @llvm.dbg.value(metadata i32 %2, metadata !13988, metadata !DIExpression()), !dbg !13989
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !13990
  ret void, !dbg !13991
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13992 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !13993
  ret void, !dbg !13994
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13995 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13997, metadata !DIExpression()), !dbg !13998
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !13999
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14000
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !14001
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !14002
  %4 = trunc i32 %0 to i8, !dbg !14003
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !14004
  store i8 %4, i8* %5, align 4, !dbg !14005
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14006
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !14007
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14008
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14009
  store i8* %8, i8** %9, align 4, !dbg !14010
  ret void, !dbg !14011
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14012 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14014, metadata !DIExpression()), !dbg !14020
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14021
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14015, metadata !DIExpression()), !dbg !14020
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14022
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !14016, metadata !DIExpression()), !dbg !14020
  call void @llvm.dbg.value(metadata i8* null, metadata !14019, metadata !DIExpression()), !dbg !14020
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !14023
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !14024
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !14025
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !14026
  ret void, !dbg !14027
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !14028 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14032, metadata !DIExpression()), !dbg !14033
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14034
  ret i8* %2, !dbg !14035
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14036 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14041, metadata !DIExpression()), !dbg !14042
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14043
  %3 = load i8, i8* %2, align 1, !dbg !14044
  %4 = and i8 %3, -5, !dbg !14044
  store i8 %4, i8* %2, align 1, !dbg !14044
  ret void, !dbg !14045
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !14046 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !14049
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !14050
  %3 = ptrtoint i8* %2 to i32, !dbg !14059
  %4 = add i32 %3, 2048, !dbg !14060
  call void @llvm.dbg.value(metadata i32 %4, metadata !14054, metadata !DIExpression()) #23, !dbg !14061
  call void @llvm.dbg.value(metadata i32 %4, metadata !14062, metadata !DIExpression()) #23, !dbg !14065
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !14067, !srcloc !14068
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14069
  %6 = or i32 %5, 512, !dbg !14069
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14069
  tail call fastcc void @__NVIC_SetPriority.204(i32 noundef -2, i32 noundef 255) #25, !dbg !14070
  tail call fastcc void @__NVIC_SetPriority.204(i32 noundef -5, i32 noundef 0) #25, !dbg !14073
  tail call fastcc void @__NVIC_SetPriority.204(i32 noundef -12, i32 noundef 0) #25, !dbg !14074
  tail call fastcc void @__NVIC_SetPriority.204(i32 noundef -11, i32 noundef 0) #25, !dbg !14075
  tail call fastcc void @__NVIC_SetPriority.204(i32 noundef -10, i32 noundef 0) #25, !dbg !14076
  tail call fastcc void @__NVIC_SetPriority.204(i32 noundef -4, i32 noundef 0) #25, !dbg !14077
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14078
  %8 = or i32 %7, 458752, !dbg !14078
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14078
  tail call void @z_arm_fault_init() #25, !dbg !14079
  tail call void @z_arm_cpu_idle_init() #25, !dbg !14080
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14081
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14084
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !14085
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !14086
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14087
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #23, !dbg !14087
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !14048, metadata !DIExpression()), !dbg !14088
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !14089
  call void @z_device_state_init() #25, !dbg !14090
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !14091
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !14092
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !14093
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !14094
  unreachable, !dbg !14094
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2422 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2426, metadata !DIExpression()), !dbg !14095
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14096
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14096
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2427, metadata !DIExpression()), !dbg !14095
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2427, metadata !DIExpression()), !dbg !14095
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14097
  br i1 %7, label %8, label %35, !dbg !14098

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2427, metadata !DIExpression()), !dbg !14095
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14099
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14099
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2437, metadata !DIExpression()), !dbg !14100
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14101
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14101
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !14102
  call void @llvm.dbg.value(metadata i32 %14, metadata !2441, metadata !DIExpression()), !dbg !14100
  %15 = icmp eq %struct.device* %11, null, !dbg !14103
  br i1 %15, label %32, label %16, !dbg !14105

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14106
  br i1 %17, label %26, label %18, !dbg !14109

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14110
  call void @llvm.dbg.value(metadata i32 %19, metadata !2441, metadata !DIExpression()), !dbg !14100
  %20 = icmp ult i32 %19, 255, !dbg !14112
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14112
  call void @llvm.dbg.value(metadata i32 %21, metadata !2441, metadata !DIExpression()), !dbg !14100
  %22 = trunc i32 %21 to i8, !dbg !14113
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14114
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14114
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14115
  store i8 %22, i8* %25, align 1, !dbg !14116
  br label %26, !dbg !14117

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14118
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14118
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14119
  %30 = load i8, i8* %29, align 1, !dbg !14120
  %31 = or i8 %30, 1, !dbg !14120
  store i8 %31, i8* %29, align 1, !dbg !14120
  br label %32, !dbg !14121

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14122
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2427, metadata !DIExpression()), !dbg !14095
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14097
  br i1 %34, label %8, label %35, !dbg !14098, !llvm.loop !14123

35:                                               ; preds = %32, %1
  ret void, !dbg !14125
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.204(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !14126 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14128, metadata !DIExpression()), !dbg !14130
  call void @llvm.dbg.value(metadata i32 %1, metadata !14129, metadata !DIExpression()), !dbg !14130
  %3 = trunc i32 %1 to i8, !dbg !14131
  %4 = shl i8 %3, 4, !dbg !14131
  %5 = and i32 %0, 15, !dbg !14134
  %6 = add nsw i32 %5, -4, !dbg !14135
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14136
  store volatile i8 %4, i8* %7, align 1, !dbg !14137
  ret void, !dbg !14138
}

; Function Attrs: optsize
declare !dbg !14139 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #6 !dbg !14140 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14143, metadata !DIExpression()), !dbg !14144
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14145
  store i8 1, i8* %2, align 1, !dbg !14146
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14147
  store i8 1, i8* %3, align 4, !dbg !14148
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14149
  store i32 0, i32* %4, align 4, !dbg !14150
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14151
  store i32 0, i32* %5, align 4, !dbg !14152
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14153
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !14154
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14155
  ret void, !dbg !14156
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14157 {
  tail call void @z_sched_init() #25, !dbg !14162
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14163
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.205, i32 0, i32 0)) #25, !dbg !14164
  call void @llvm.dbg.value(metadata i8* %1, metadata !14161, metadata !DIExpression()), !dbg !14165
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !14166
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !14167
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !14168
  ret i8* %1, !dbg !14169
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !14170 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14174, metadata !DIExpression()), !dbg !14175
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !14176
  unreachable, !dbg !14177
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14178 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14180, metadata !DIExpression()), !dbg !14183
  call void @llvm.dbg.value(metadata i8* %1, metadata !14181, metadata !DIExpression()), !dbg !14183
  call void @llvm.dbg.value(metadata i8* %2, metadata !14182, metadata !DIExpression()), !dbg !14183
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14184
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !14185
  tail call void @boot_banner() #25, !dbg !14186
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !14187
  tail call void @z_init_static_threads() #25, !dbg !14188
  tail call void @main() #25, !dbg !14189
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14190
  %5 = and i8 %4, -2, !dbg !14190
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14190
  ret void, !dbg !14191
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !14192 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14202, metadata !DIExpression()), !dbg !14204
  call void @llvm.dbg.value(metadata i8* %1, metadata !14203, metadata !DIExpression()), !dbg !14204
  ret void, !dbg !14205
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !14206 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14208, metadata !DIExpression()), !dbg !14210
  call void @llvm.dbg.value(metadata i8* %1, metadata !14209, metadata !DIExpression()), !dbg !14210
  ret void, !dbg !14211
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !14212 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14213, !srcloc !14220
  call void @llvm.dbg.value(metadata i32 %1, metadata !14216, metadata !DIExpression()) #23, !dbg !14221
  %2 = icmp ne i32 %1, 0, !dbg !14222
  ret i1 %2, !dbg !14223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #11 !dbg !14224 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14225
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14226
  %3 = load i8, i8* %2, align 4, !dbg !14227
  %4 = or i8 %3, 1, !dbg !14227
  store i8 %4, i8* %2, align 4, !dbg !14227
  ret void, !dbg !14228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #11 !dbg !14229 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14230
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14231
  %3 = load i8, i8* %2, align 4, !dbg !14232
  %4 = and i8 %3, -2, !dbg !14232
  store i8 %4, i8* %2, align 4, !dbg !14232
  ret void, !dbg !14233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #10 !dbg !14234 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14235
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14236
  %3 = load i8, i8* %2, align 4, !dbg !14236
  %4 = and i8 %3, 1, !dbg !14237
  %5 = icmp ne i8 %4, 0, !dbg !14238
  ret i1 %5, !dbg !14239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !14240 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14244, metadata !DIExpression()), !dbg !14246
  call void @llvm.dbg.value(metadata i8* %1, metadata !14245, metadata !DIExpression()), !dbg !14246
  ret i32 -88, !dbg !14247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !14248 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14252, metadata !DIExpression()), !dbg !14253
  ret i8* null, !dbg !14254
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #4 !dbg !14255 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14259, metadata !DIExpression()), !dbg !14262
  call void @llvm.dbg.value(metadata i8* %1, metadata !14260, metadata !DIExpression()), !dbg !14262
  call void @llvm.dbg.value(metadata i32 %2, metadata !14261, metadata !DIExpression()), !dbg !14262
  ret i32 -88, !dbg !14263
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2450 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2564, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.value(metadata i8* %1, metadata !2565, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.value(metadata i32 %2, metadata !2566, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.value(metadata i32 0, metadata !2567, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.value(metadata i8 undef, metadata !2569, metadata !DIExpression()), !dbg !14264
  %4 = icmp eq i8* %1, null, !dbg !14265
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14267
  br i1 %6, label %46, label %7, !dbg !14267

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14268
  %9 = load i8, i8* %8, align 1, !dbg !14268
  call void @llvm.dbg.value(metadata i8 %9, metadata !2569, metadata !DIExpression()), !dbg !14264
  %10 = add i32 %2, -1, !dbg !14269
  call void @llvm.dbg.value(metadata i32 %10, metadata !2566, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.value(metadata i8 0, metadata !2570, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata i8 %9, metadata !2569, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.value(metadata i32 0, metadata !2567, metadata !DIExpression()), !dbg !14264
  %11 = icmp eq i8 %9, 0, !dbg !14271
  br i1 %11, label %12, label %15, !dbg !14273

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14274
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14275
  store i8 0, i8* %14, align 1, !dbg !14276
  br label %46, !dbg !14277

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2570, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata i8 %17, metadata !2569, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.value(metadata i32 %18, metadata !2567, metadata !DIExpression()), !dbg !14264
  %19 = zext i8 %17 to i32, !dbg !14278
  %20 = zext i8 %16 to i32, !dbg !14279
  %21 = shl nuw i32 1, %20, !dbg !14279
  call void @llvm.dbg.value(metadata i32 %21, metadata !2568, metadata !DIExpression()), !dbg !14264
  %22 = and i32 %21, %19, !dbg !14281
  %23 = icmp eq i32 %22, 0, !dbg !14283
  br i1 %23, label %42, label %24, !dbg !14284

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14285
  %26 = sub i32 %10, %18, !dbg !14286
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14287
  %28 = load i8*, i8** %27, align 4, !dbg !14287
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14288
  %30 = load i32, i32* %29, align 4, !dbg !14288
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !14289
  %32 = add i32 %31, %18, !dbg !14290
  call void @llvm.dbg.value(metadata i32 %32, metadata !2567, metadata !DIExpression()), !dbg !14264
  %33 = trunc i32 %21 to i8, !dbg !14291
  %34 = xor i8 %33, -1, !dbg !14291
  %35 = and i8 %17, %34, !dbg !14291
  call void @llvm.dbg.value(metadata i8 %35, metadata !2569, metadata !DIExpression()), !dbg !14264
  %36 = icmp eq i8 %35, 0, !dbg !14292
  br i1 %36, label %12, label %37, !dbg !14294

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14295
  %39 = sub i32 %10, %32, !dbg !14297
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.208, i32 0, i32 0), i32 noundef 1) #24, !dbg !14298
  %41 = add i32 %40, %32, !dbg !14299
  call void @llvm.dbg.value(metadata i32 %41, metadata !2567, metadata !DIExpression()), !dbg !14264
  br label %42, !dbg !14300

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14264
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14264
  call void @llvm.dbg.value(metadata i8 %44, metadata !2569, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.value(metadata i32 %43, metadata !2567, metadata !DIExpression()), !dbg !14264
  %45 = add i8 %16, 1, !dbg !14301
  call void @llvm.dbg.value(metadata i8 %45, metadata !2570, metadata !DIExpression()), !dbg !14270
  br label %15, !dbg !14273

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.209, i32 0, i32 0), %3 ], !dbg !14264
  ret i8* %47, !dbg !14302
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14303 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14307, metadata !DIExpression()), !dbg !14312
  call void @llvm.dbg.value(metadata i32 %1, metadata !14308, metadata !DIExpression()), !dbg !14312
  call void @llvm.dbg.value(metadata i8* %2, metadata !14309, metadata !DIExpression()), !dbg !14312
  call void @llvm.dbg.value(metadata i32 %3, metadata !14310, metadata !DIExpression()), !dbg !14312
  %5 = icmp ult i32 %1, %3, !dbg !14313
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14313
  call void @llvm.dbg.value(metadata i32 %6, metadata !14311, metadata !DIExpression()), !dbg !14312
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !14314
  ret i32 %6, !dbg !14315
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14316 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14320, metadata !DIExpression()), !dbg !14321
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !14322
  ret void, !dbg !14323
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14324 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14333, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14334, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata i32 %2, metadata !14335, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14336, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata i8* %4, metadata !14337, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata i8* %5, metadata !14338, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata i8* %6, metadata !14339, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata i32 %7, metadata !14340, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata i32 %8, metadata !14341, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata i8* undef, metadata !14342, metadata !DIExpression()), !dbg !14344
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14345
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %11) #24, !dbg !14346
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14347
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !14348
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !14349
  call void @llvm.dbg.value(metadata i8* %13, metadata !14343, metadata !DIExpression()), !dbg !14344
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !14350
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14351
  store i8* null, i8** %14, align 4, !dbg !14352
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14353
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !14353
  br i1 %16, label %20, label %17, !dbg !14355

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !14356
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !14356
  br label %20, !dbg !14357

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !14344
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14358
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !14360
  ret i8* %13, !dbg !14361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !14362 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14367, metadata !DIExpression()), !dbg !14368
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14369
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !14370
  ret void, !dbg !14371
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #6 !dbg !14372 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14377, metadata !DIExpression()), !dbg !14381
  call void @llvm.dbg.value(metadata i32 %1, metadata !14378, metadata !DIExpression()), !dbg !14381
  call void @llvm.dbg.value(metadata i32 %2, metadata !14379, metadata !DIExpression()), !dbg !14381
  call void @llvm.dbg.value(metadata i32 %3, metadata !14380, metadata !DIExpression()), !dbg !14381
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14382
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !14383
  %6 = trunc i32 %3 to i8, !dbg !14384
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14385
  store i8 %6, i8* %7, align 4, !dbg !14386
  %8 = trunc i32 %2 to i8, !dbg !14387
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14388
  store i8 %8, i8* %9, align 1, !dbg !14389
  %10 = trunc i32 %1 to i8, !dbg !14390
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14391
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14391
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14391
  store i8 %10, i8* %13, align 2, !dbg !14392
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14393
  store i8 0, i8* %14, align 1, !dbg !14394
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !14395
  ret void, !dbg !14396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !14397 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14401, metadata !DIExpression()), !dbg !14409
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14402, metadata !DIExpression()), !dbg !14409
  call void @llvm.dbg.value(metadata i32 %2, metadata !14403, metadata !DIExpression()), !dbg !14409
  call void @llvm.dbg.value(metadata i32 0, metadata !14408, metadata !DIExpression()), !dbg !14409
  %4 = add i32 %2, 7, !dbg !14410
  %5 = and i32 %4, -8, !dbg !14410
  %6 = add i32 %5, 64, !dbg !14410
  call void @llvm.dbg.value(metadata i32 %6, metadata !14404, metadata !DIExpression()), !dbg !14409
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.219(%struct.z_thread_stack_element* noundef %1) #24, !dbg !14412
  call void @llvm.dbg.value(metadata i8* %7, metadata !14407, metadata !DIExpression()), !dbg !14409
  call void @llvm.dbg.value(metadata i32 %5, metadata !14405, metadata !DIExpression()), !dbg !14409
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14413
  call void @llvm.dbg.value(metadata i8* %8, metadata !14406, metadata !DIExpression()), !dbg !14409
  call void @llvm.dbg.value(metadata i32 0, metadata !14408, metadata !DIExpression()), !dbg !14409
  %9 = ptrtoint i8* %7 to i32, !dbg !14414
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14415
  store i32 %9, i32* %10, align 4, !dbg !14416
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14417
  store i32 %5, i32* %11, align 4, !dbg !14418
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14419
  store i32 0, i32* %12, align 4, !dbg !14420
  call void @llvm.dbg.value(metadata i8* %8, metadata !14406, metadata !DIExpression()), !dbg !14409
  ret i8* %8, !dbg !14421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.219(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !14422 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14426, metadata !DIExpression()), !dbg !14427
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14428
  ret i8* %2, !dbg !14429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !14430 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14435, metadata !DIExpression()), !dbg !14436
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14437
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14438
  ret void, !dbg !14439
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !14440 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14442, metadata !DIExpression()), !dbg !14443
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14444
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !14445
  ret void, !dbg !14446
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !14447 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14451, metadata !DIExpression()), !dbg !14452
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14453
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14454
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14455
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14456
  ret void, !dbg !14457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !14458 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14463, metadata !DIExpression()), !dbg !14464
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14465
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14466
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14467
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14468
  ret void, !dbg !14469
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14470 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14487, metadata !DIExpression()), !dbg !14488
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14478, metadata !DIExpression()), !dbg !14488
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14479, metadata !DIExpression()), !dbg !14488
  call void @llvm.dbg.value(metadata i32 %2, metadata !14480, metadata !DIExpression()), !dbg !14488
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14481, metadata !DIExpression()), !dbg !14488
  call void @llvm.dbg.value(metadata i8* %4, metadata !14482, metadata !DIExpression()), !dbg !14488
  call void @llvm.dbg.value(metadata i8* %5, metadata !14483, metadata !DIExpression()), !dbg !14488
  call void @llvm.dbg.value(metadata i8* %6, metadata !14484, metadata !DIExpression()), !dbg !14488
  call void @llvm.dbg.value(metadata i32 %7, metadata !14485, metadata !DIExpression()), !dbg !14488
  call void @llvm.dbg.value(metadata i32 %8, metadata !14486, metadata !DIExpression()), !dbg !14488
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #24, !dbg !14489
  %13 = icmp eq i64 %11, -1, !dbg !14490
  br i1 %13, label %15, label %14, !dbg !14492

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !14493
  br label %15, !dbg !14495

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !14496
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14497 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14502, metadata !DIExpression()), !dbg !14503
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14501, metadata !DIExpression()), !dbg !14503
  %4 = icmp eq i64 %3, 0, !dbg !14504
  br i1 %4, label %5, label %6, !dbg !14506

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14507
  br label %7, !dbg !14509

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14510
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14512
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14513 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14517, metadata !DIExpression()), !dbg !14518
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14519, !srcloc !14521
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14522
  ret void, !dbg !14523
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14524 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14527, metadata !DIExpression()), !dbg !14528
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14526, metadata !DIExpression()), !dbg !14528
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14529
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14530
  ret void, !dbg !14531
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14532 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14534, metadata !DIExpression()), !dbg !14554
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !14555

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14556
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14552, metadata !DIExpression()), !dbg !14557
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !14558

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14534, metadata !DIExpression()), !dbg !14554
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14559
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14559
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14562
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !14562
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14563
  %9 = load i32, i32* %8, align 4, !dbg !14563
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14564
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !14564
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14565
  %13 = load i8*, i8** %12, align 4, !dbg !14565
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14566
  %15 = load i8*, i8** %14, align 4, !dbg !14566
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14567
  %17 = load i8*, i8** %16, align 4, !dbg !14567
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14568
  %19 = load i32, i32* %18, align 4, !dbg !14568
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14569
  %21 = load i32, i32* %20, align 4, !dbg !14569
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #24, !dbg !14570
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14571
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !14572
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !14573
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !14573
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14574
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !14534, metadata !DIExpression()), !dbg !14554
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14575
  br i1 %27, label %2, label %1, !dbg !14555, !llvm.loop !14577

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !14556
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14552, metadata !DIExpression()), !dbg !14557
  br label %29, !dbg !14558

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !14579
  ret void, !dbg !14580

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14552, metadata !DIExpression()), !dbg !14557
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !14581
  %33 = load i32, i32* %32, align 4, !dbg !14581
  %34 = icmp eq i32 %33, -1, !dbg !14585
  br i1 %34, label %43, label %35, !dbg !14586

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !14587
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !14587
  %38 = icmp sgt i32 %33, 0, !dbg !14589
  %39 = select i1 %38, i32 %33, i32 0, !dbg !14589
  %40 = zext i32 %39 to i64, !dbg !14589
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.222(i64 noundef %40) #24, !dbg !14589
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !14590
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #24, !dbg !14590
  br label %43, !dbg !14591

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !14592
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !14552, metadata !DIExpression()), !dbg !14557
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14593
  br i1 %45, label %30, label %29, !dbg !14558, !llvm.loop !14595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.222(i64 noundef %0) unnamed_addr #4 !dbg !14597 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14599, metadata !DIExpression()), !dbg !14600
  call void @llvm.dbg.value(metadata i64 %0, metadata !14601, metadata !DIExpression()), !dbg !14616
  call void @llvm.dbg.value(metadata i32 1000, metadata !14604, metadata !DIExpression()), !dbg !14616
  call void @llvm.dbg.value(metadata i32 10000, metadata !14605, metadata !DIExpression()), !dbg !14616
  call void @llvm.dbg.value(metadata i8 1, metadata !14606, metadata !DIExpression()), !dbg !14616
  call void @llvm.dbg.value(metadata i8 0, metadata !14607, metadata !DIExpression()), !dbg !14616
  call void @llvm.dbg.value(metadata i8 1, metadata !14608, metadata !DIExpression()), !dbg !14616
  call void @llvm.dbg.value(metadata i8 0, metadata !14609, metadata !DIExpression()), !dbg !14616
  call void @llvm.dbg.value(metadata i8 1, metadata !14610, metadata !DIExpression()), !dbg !14616
  call void @llvm.dbg.value(metadata i8 0, metadata !14611, metadata !DIExpression()), !dbg !14616
  call void @llvm.dbg.value(metadata i64 0, metadata !14612, metadata !DIExpression()), !dbg !14616
  call void @llvm.dbg.value(metadata i64 0, metadata !14612, metadata !DIExpression()), !dbg !14616
  %2 = mul i64 %0, 10, !dbg !14618
  ret i64 %2, !dbg !14624
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !14625 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14627, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.value(metadata i8* %1, metadata !14628, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.value(metadata i8* %2, metadata !14629, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.value(metadata i8* %3, metadata !14630, metadata !DIExpression()), !dbg !14631
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14632
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14633
  %7 = load i8, i8* %6, align 4, !dbg !14634
  %8 = or i8 %7, 4, !dbg !14634
  store i8 %8, i8* %6, align 4, !dbg !14634
  tail call void @z_thread_essential_clear() #24, !dbg !14635
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !14636
  unreachable, !dbg !14636
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !14637 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14641, metadata !DIExpression()), !dbg !14642
  ret i32 -134, !dbg !14643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !14644 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14648, metadata !DIExpression()), !dbg !14650
  call void @llvm.dbg.value(metadata i32 %1, metadata !14649, metadata !DIExpression()), !dbg !14650
  ret i32 -134, !dbg !14651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #4 !dbg !14652 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14659, metadata !DIExpression()), !dbg !14661
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !14660, metadata !DIExpression()), !dbg !14661
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14662
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !14664
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14661
  ret i32 %6, !dbg !14665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #4 !dbg !14666 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14670, metadata !DIExpression()), !dbg !14671
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !14672
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14671
  ret i32 %3, !dbg !14674
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14675 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14677
  ret void, !dbg !14678
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !14679 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14681, metadata !DIExpression()), !dbg !14684
  call void @llvm.dbg.value(metadata i8* %1, metadata !14682, metadata !DIExpression()), !dbg !14684
  call void @llvm.dbg.value(metadata i8* %2, metadata !14683, metadata !DIExpression()), !dbg !14684
  br label %4, !dbg !14685

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14686, !srcloc !14693
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #23, !dbg !14694
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()) #23, !dbg !14694
  tail call fastcc void @k_cpu_idle() #24, !dbg !14695
  br label %4, !dbg !14685, !llvm.loop !14696
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14698 {
  tail call void @arch_cpu_idle() #25, !dbg !14699
  ret void, !dbg !14700
}

; Function Attrs: optsize
declare !dbg !14701 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !14702 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14706, metadata !DIExpression()), !dbg !14710
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14707, metadata !DIExpression()), !dbg !14710
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14711
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14711
  %5 = load i8, i8* %4, align 2, !dbg !14711
  call void @llvm.dbg.value(metadata i8 %5, metadata !14708, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14710
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14712
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14712
  %8 = load i8, i8* %7, align 2, !dbg !14712
  call void @llvm.dbg.value(metadata i8 %8, metadata !14709, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14710
  %9 = icmp eq i8 %8, %5, !dbg !14713
  %10 = sext i8 %5 to i32, !dbg !14715
  %11 = sext i8 %8 to i32, !dbg !14715
  %12 = sub nsw i32 %11, %10, !dbg !14715
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14715
  ret i32 %13, !dbg !14716
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14717 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14721, metadata !DIExpression()), !dbg !14722
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !14723
  %3 = icmp eq i32 %2, 0, !dbg !14725
  br i1 %3, label %8, label %4, !dbg !14726

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14727
  %6 = add i32 %5, %2, !dbg !14729
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14730
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !14731
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14732
  br label %8, !dbg !14733

8:                                                ; preds = %4, %1
  ret void, !dbg !14734
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #10 !dbg !14735 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14739, metadata !DIExpression()), !dbg !14741
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14742
  call void @llvm.dbg.value(metadata i32 %1, metadata !14740, metadata !DIExpression()), !dbg !14741
  ret i32 %1, !dbg !14743
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14744 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14748, metadata !DIExpression()), !dbg !14757
  call void @llvm.dbg.value(metadata i32 %1, metadata !14749, metadata !DIExpression()), !dbg !14757
  call void @llvm.dbg.value(metadata i32 0, metadata !14750, metadata !DIExpression()), !dbg !14758
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14759, metadata !DIExpression()) #23, !dbg !14766
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14768, !srcloc !14774
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14768
  call void @llvm.dbg.value(metadata i32 %4, metadata !14771, metadata !DIExpression()) #23, !dbg !14775
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #23, !dbg !14775
  call void @llvm.dbg.value(metadata i32 %4, metadata !14765, metadata !DIExpression()) #23, !dbg !14766
  call void @llvm.dbg.value(metadata i32 %4, metadata !14756, metadata !DIExpression()), !dbg !14758
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()), !dbg !14758
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14776
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14779
  %6 = icmp sgt i32 %0, 0, !dbg !14780
  %7 = icmp sgt i32 %5, 2, !dbg !14782
  %8 = select i1 %7, i32 %5, i32 2, !dbg !14782
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !14782
  store i32 %9, i32* @slice_ticks, align 4, !dbg !14783
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14784
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14785
  call void @llvm.dbg.value(metadata i32 %4, metadata !14786, metadata !DIExpression()) #23, !dbg !14792
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14791, metadata !DIExpression()) #23, !dbg !14792
  call void @llvm.dbg.value(metadata i32 %4, metadata !14794, metadata !DIExpression()) #23, !dbg !14797
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !14799, !srcloc !14800
  call void @llvm.dbg.value(metadata i32 1, metadata !14750, metadata !DIExpression()), !dbg !14758
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()), !dbg !14758
  ret void, !dbg !14801
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !14802 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14804, metadata !DIExpression()), !dbg !14805
  call void @llvm.dbg.value(metadata i32 %0, metadata !14806, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14821
  call void @llvm.dbg.value(metadata i32 1000, metadata !14809, metadata !DIExpression()), !dbg !14821
  call void @llvm.dbg.value(metadata i32 10000, metadata !14810, metadata !DIExpression()), !dbg !14821
  call void @llvm.dbg.value(metadata i8 1, metadata !14811, metadata !DIExpression()), !dbg !14821
  call void @llvm.dbg.value(metadata i1 true, metadata !14812, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14821
  call void @llvm.dbg.value(metadata i1 true, metadata !14813, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14821
  call void @llvm.dbg.value(metadata i8 0, metadata !14814, metadata !DIExpression()), !dbg !14821
  call void @llvm.dbg.value(metadata i1 true, metadata !14815, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14821
  call void @llvm.dbg.value(metadata i1 false, metadata !14816, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14821
  call void @llvm.dbg.value(metadata i64 0, metadata !14817, metadata !DIExpression()), !dbg !14821
  call void @llvm.dbg.value(metadata i64 0, metadata !14817, metadata !DIExpression()), !dbg !14821
  %2 = mul i32 %0, 10, !dbg !14823
  ret i32 %2, !dbg !14829
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14830 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14832, metadata !DIExpression()), !dbg !14834
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14759, metadata !DIExpression()) #23, !dbg !14835
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14837, !srcloc !14774
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14837
  call void @llvm.dbg.value(metadata i32 %3, metadata !14771, metadata !DIExpression()) #23, !dbg !14839
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #23, !dbg !14839
  call void @llvm.dbg.value(metadata i32 %3, metadata !14765, metadata !DIExpression()) #23, !dbg !14835
  call void @llvm.dbg.value(metadata i32 %3, metadata !14833, metadata !DIExpression()), !dbg !14834
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14840
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14842
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !14843
  br i1 %6, label %7, label %8, !dbg !14844

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14845
  call void @llvm.dbg.value(metadata i32 %3, metadata !14786, metadata !DIExpression()) #23, !dbg !14847
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14791, metadata !DIExpression()) #23, !dbg !14847
  call void @llvm.dbg.value(metadata i32 %3, metadata !14794, metadata !DIExpression()) #23, !dbg !14849
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14851, !srcloc !14800
  br label %24, !dbg !14852

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14853
  %9 = tail call fastcc i32 @slice_time() #24, !dbg !14854
  %10 = icmp eq i32 %9, 0, !dbg !14854
  br i1 %10, label %21, label %11, !dbg !14856

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #24, !dbg !14857
  br i1 %12, label %13, label %21, !dbg !14858

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14859
  %15 = icmp sgt i32 %14, %0, !dbg !14862
  br i1 %15, label %19, label %16, !dbg !14863

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14864
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #24, !dbg !14864
  call void @llvm.dbg.value(metadata i32 %18, metadata !14833, metadata !DIExpression()), !dbg !14834
  br label %22, !dbg !14866

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !14867
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14867
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14869
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !14834
  call void @llvm.dbg.value(metadata i32 %23, metadata !14833, metadata !DIExpression()), !dbg !14834
  call void @llvm.dbg.value(metadata i32 %23, metadata !14786, metadata !DIExpression()) #23, !dbg !14871
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14791, metadata !DIExpression()) #23, !dbg !14871
  call void @llvm.dbg.value(metadata i32 %23, metadata !14794, metadata !DIExpression()) #23, !dbg !14873
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !14875, !srcloc !14800
  br label %24, !dbg !14876

24:                                               ; preds = %22, %7
  ret void, !dbg !14876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !14877 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14881, metadata !DIExpression()), !dbg !14883
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14884
  %3 = icmp eq i32 %2, 0, !dbg !14884
  br i1 %3, label %16, label %4, !dbg !14885

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14886
  br i1 %5, label %16, label %6, !dbg !14887

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14888
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14888
  %9 = load i8, i8* %8, align 2, !dbg !14888
  %10 = sext i8 %9 to i32, !dbg !14889
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14890
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !14891
  br i1 %12, label %16, label %13, !dbg !14892

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14893
  %15 = xor i1 %14, true, !dbg !14894
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14883
  call void @llvm.dbg.value(metadata i1 %17, metadata !14882, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14883
  ret i1 %17, !dbg !14895
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14896 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14900, metadata !DIExpression()), !dbg !14902
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14903
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14901, metadata !DIExpression()), !dbg !14902
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14904
  br i1 %3, label %5, label %4, !dbg !14906

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14907
  br label %5, !dbg !14909

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14900, metadata !DIExpression()), !dbg !14902
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14910
  ret i32 %6, !dbg !14911
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14912 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14914, metadata !DIExpression()), !dbg !14916
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14917
  %3 = load i8, i8* %2, align 1, !dbg !14917
  call void @llvm.dbg.value(metadata i8 %3, metadata !14915, metadata !DIExpression()), !dbg !14916
  %4 = and i8 %3, 31, !dbg !14918
  %5 = icmp ne i8 %4, 0, !dbg !14919
  ret i1 %5, !dbg !14920
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14921 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14923, metadata !DIExpression()), !dbg !14924
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14925
  br i1 %2, label %3, label %7, !dbg !14927

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14928, metadata !DIExpression()) #23, !dbg !14931
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14934
  %5 = load i8, i8* %4, align 1, !dbg !14935
  %6 = and i8 %5, 127, !dbg !14935
  store i8 %6, i8* %4, align 1, !dbg !14935
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14936, metadata !DIExpression()) #23, !dbg !14939
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14943
  br label %7, !dbg !14944

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14945, metadata !DIExpression()) #23, !dbg !14948
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14950
  %9 = load i8, i8* %8, align 1, !dbg !14951
  %10 = or i8 %9, -128, !dbg !14951
  store i8 %10, i8* %8, align 1, !dbg !14951
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14952, metadata !DIExpression()) #23, !dbg !14955
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14959, metadata !DIExpression()) #23, !dbg !14967
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14965, metadata !DIExpression()) #23, !dbg !14967
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14969
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !14966, metadata !DIExpression()) #23, !dbg !14967
  %12 = icmp eq %struct._dnode* %11, null, !dbg !14971
  br i1 %12, label %23, label %13, !dbg !14969

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14966, metadata !DIExpression()) #23, !dbg !14967
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !14973
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14966, metadata !DIExpression()) #23, !dbg !14967
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !14974
  %17 = icmp sgt i32 %16, 0, !dbg !14977
  br i1 %17, label %18, label %20, !dbg !14978

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14979
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !14981
  br label %25, !dbg !14982

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !14971
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14966, metadata !DIExpression()) #23, !dbg !14967
  %22 = icmp eq %struct._dnode* %21, null, !dbg !14971
  br i1 %22, label %23, label %13, !dbg !14969, !llvm.loop !14983

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14985
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !14986
  br label %25, !dbg !14987

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14988
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !14989
  %28 = zext i1 %27 to i32, !dbg !14989
  tail call fastcc void @update_cache(i32 noundef %28) #24, !dbg !14990
  ret void, !dbg !14991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14992 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14994, metadata !DIExpression()), !dbg !14995
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #24, !dbg !14996
  ret i1 %2, !dbg !14997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #11 !dbg !14998 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !15000, metadata !DIExpression()), !dbg !15002
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15001, metadata !DIExpression()), !dbg !15002
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !15003
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #24, !dbg !15004
  ret void, !dbg !15005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !15006 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15010, metadata !DIExpression()), !dbg !15011
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !15012
  br i1 %2, label %6, label %3, !dbg !15012

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15013
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15013
  br label %6, !dbg !15012

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15012
  ret %struct._dnode* %7, !dbg !15014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !15015 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15019, metadata !DIExpression()), !dbg !15023
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15020, metadata !DIExpression()), !dbg !15023
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15024
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15024
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15021, metadata !DIExpression()), !dbg !15023
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15025
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15026
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15027
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15028
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15029
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15030
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15031
  ret void, !dbg !15032
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !15033 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15037, metadata !DIExpression()), !dbg !15039
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15038, metadata !DIExpression()), !dbg !15039
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15040
  br i1 %3, label %6, label %4, !dbg !15041

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !15042
  br label %6, !dbg !15041

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15041
  ret %struct._dnode* %7, !dbg !15043
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !15044 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15048, metadata !DIExpression()), !dbg !15051
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15049, metadata !DIExpression()), !dbg !15051
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15052
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15052
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15050, metadata !DIExpression()), !dbg !15051
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15053
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15054
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15055
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15056
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15057
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15058
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15059
  ret void, !dbg !15060
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15061 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15063, metadata !DIExpression()), !dbg !15065
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15066
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15073, metadata !DIExpression()) #23, !dbg !15075
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15076
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15077
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15077
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15064, metadata !DIExpression()), !dbg !15065
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15078, metadata !DIExpression()) #23, !dbg !15084
  call void @llvm.dbg.value(metadata i32 %0, metadata !15083, metadata !DIExpression()) #23, !dbg !15084
  %6 = icmp eq i32 %0, 0, !dbg !15087
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15089
  br i1 %6, label %8, label %15, !dbg !15090

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !15091
  br i1 %9, label %15, label %10, !dbg !15093

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !15094
  br i1 %11, label %15, label %12, !dbg !15096

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !15097
  %14 = icmp eq i32 %13, 0, !dbg !15097
  br i1 %14, label %18, label %15, !dbg !15099

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !15100
  br i1 %16, label %18, label %17, !dbg !15103

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !15104
  br label %18, !dbg !15106

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !15089
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15089
  ret void, !dbg !15107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #10 !dbg !15108 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15112, metadata !DIExpression()), !dbg !15115
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15113, metadata !DIExpression()), !dbg !15115
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !15116
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15114, metadata !DIExpression()), !dbg !15115
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15113, metadata !DIExpression()), !dbg !15115
  ret %struct.k_thread* %3, !dbg !15117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15118 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15120, metadata !DIExpression()), !dbg !15121
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15122
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !15123
  %4 = xor i1 %3, true, !dbg !15124
  ret i1 %4, !dbg !15125
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15126 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15128, metadata !DIExpression()), !dbg !15129
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15130
  %3 = load i16, i16* %2, align 2, !dbg !15130
  %4 = icmp ult i16 %3, 128, !dbg !15131
  %5 = zext i1 %4 to i32, !dbg !15131
  ret i32 %5, !dbg !15132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15133 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15139, metadata !DIExpression()), !dbg !15140
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15141
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !15142
  %4 = xor i1 %3, true, !dbg !15143
  ret i1 %4, !dbg !15144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15145 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15151, metadata !DIExpression()), !dbg !15152
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15153
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15153
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15154
  ret i1 %4, !dbg !15155
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !15156 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15158, metadata !DIExpression()), !dbg !15160
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15159, metadata !DIExpression()), !dbg !15160
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15161
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15161
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15162
  br i1 %5, label %9, label %6, !dbg !15163

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15164
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15164
  br label %9, !dbg !15163

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15163
  ret %struct._dnode* %10, !dbg !15165
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !15166 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15170, metadata !DIExpression()), !dbg !15171
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15172
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15172
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15173
  ret i1 %4, !dbg !15174
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !15175 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15179, metadata !DIExpression()), !dbg !15182
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15183
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15183
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15180, metadata !DIExpression()), !dbg !15182
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15184
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15184
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15181, metadata !DIExpression()), !dbg !15182
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15185
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15186
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15187
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15188
  tail call fastcc void @sys_dnode_init.225(%struct._dnode* noundef %0) #24, !dbg !15189
  ret void, !dbg !15190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.225(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !15191 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15193, metadata !DIExpression()), !dbg !15194
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15195
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15196
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15197
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15198
  ret void, !dbg !15199
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15200 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15204, metadata !DIExpression()), !dbg !15206
  call void @llvm.dbg.value(metadata i32 128, metadata !15205, metadata !DIExpression()), !dbg !15206
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15207
  %3 = load i8, i8* %2, align 1, !dbg !15207
  %4 = icmp slt i8 %3, 0, !dbg !15208
  ret i1 %4, !dbg !15209
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !15210 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15214, metadata !DIExpression()), !dbg !15216
  call void @llvm.dbg.value(metadata i32 %1, metadata !15215, metadata !DIExpression()), !dbg !15216
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !15217
  ret i1 %3, !dbg !15218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !15219 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15221, metadata !DIExpression()), !dbg !15222
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !15223
  ret i1 %2, !dbg !15224
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !15225 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15227, metadata !DIExpression()), !dbg !15229
  call void @llvm.dbg.value(metadata i32 %1, metadata !15228, metadata !DIExpression()), !dbg !15229
  %3 = icmp slt i32 %0, %1, !dbg !15230
  ret i1 %3, !dbg !15231
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15232 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15234, metadata !DIExpression()), !dbg !15238
  call void @llvm.dbg.value(metadata i32 0, metadata !15235, metadata !DIExpression()), !dbg !15239
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14759, metadata !DIExpression()) #23, !dbg !15240
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15242, !srcloc !14774
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15242
  call void @llvm.dbg.value(metadata i32 %3, metadata !14771, metadata !DIExpression()) #23, !dbg !15244
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #23, !dbg !15244
  call void @llvm.dbg.value(metadata i32 %3, metadata !14765, metadata !DIExpression()) #23, !dbg !15240
  call void @llvm.dbg.value(metadata i32 %3, metadata !15237, metadata !DIExpression()), !dbg !15239
  call void @llvm.dbg.value(metadata i32 undef, metadata !15235, metadata !DIExpression()), !dbg !15239
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15245
  call void @llvm.dbg.value(metadata i32 %3, metadata !14786, metadata !DIExpression()) #23, !dbg !15250
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14791, metadata !DIExpression()) #23, !dbg !15250
  call void @llvm.dbg.value(metadata i32 %3, metadata !14794, metadata !DIExpression()) #23, !dbg !15252
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15254, !srcloc !14800
  call void @llvm.dbg.value(metadata i32 1, metadata !15235, metadata !DIExpression()), !dbg !15239
  call void @llvm.dbg.value(metadata i32 undef, metadata !15235, metadata !DIExpression()), !dbg !15239
  ret void, !dbg !15255
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15256 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15258, metadata !DIExpression()), !dbg !15259
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15260
  br i1 %2, label %24, label %3, !dbg !15262

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15263
  br i1 %4, label %5, label %24, !dbg !15264

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14945, metadata !DIExpression()) #23, !dbg !15265
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15268
  %7 = load i8, i8* %6, align 1, !dbg !15269
  %8 = or i8 %7, -128, !dbg !15269
  store i8 %8, i8* %6, align 1, !dbg !15269
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14952, metadata !DIExpression()) #23, !dbg !15270
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14959, metadata !DIExpression()) #23, !dbg !15272
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14965, metadata !DIExpression()) #23, !dbg !15272
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15274
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !14966, metadata !DIExpression()) #23, !dbg !15272
  %10 = icmp eq %struct._dnode* %9, null, !dbg !15275
  br i1 %10, label %21, label %11, !dbg !15274

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14966, metadata !DIExpression()) #23, !dbg !15272
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !15276
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14966, metadata !DIExpression()) #23, !dbg !15272
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !15277
  %15 = icmp sgt i32 %14, 0, !dbg !15278
  br i1 %15, label %16, label %18, !dbg !15279

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15280
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !15281
  br label %23, !dbg !15282

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !15275
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !14966, metadata !DIExpression()) #23, !dbg !15272
  %20 = icmp eq %struct._dnode* %19, null, !dbg !15275
  br i1 %20, label %21, label %11, !dbg !15274, !llvm.loop !15283

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15285
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !15286
  br label %23, !dbg !15287

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15288
  br label %24, !dbg !15289

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !15290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15291 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15293, metadata !DIExpression()), !dbg !15294
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15295
  br i1 %2, label %6, label %3, !dbg !15296

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !15297
  %5 = xor i1 %4, true, !dbg !15296
  br label %6, !dbg !15296

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15298
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15299 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15301, metadata !DIExpression()), !dbg !15305
  call void @llvm.dbg.value(metadata i32 0, metadata !15302, metadata !DIExpression()), !dbg !15306
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14759, metadata !DIExpression()) #23, !dbg !15307
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15309, !srcloc !14774
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15309
  call void @llvm.dbg.value(metadata i32 %3, metadata !14771, metadata !DIExpression()) #23, !dbg !15311
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #23, !dbg !15311
  call void @llvm.dbg.value(metadata i32 %3, metadata !14765, metadata !DIExpression()) #23, !dbg !15307
  call void @llvm.dbg.value(metadata i32 %3, metadata !15304, metadata !DIExpression()), !dbg !15306
  call void @llvm.dbg.value(metadata i32 undef, metadata !15302, metadata !DIExpression()), !dbg !15306
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !15312
  call void @llvm.dbg.value(metadata i32 %3, metadata !14786, metadata !DIExpression()) #23, !dbg !15315
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14791, metadata !DIExpression()) #23, !dbg !15315
  call void @llvm.dbg.value(metadata i32 %3, metadata !14794, metadata !DIExpression()) #23, !dbg !15317
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15319, !srcloc !14800
  call void @llvm.dbg.value(metadata i32 1, metadata !15302, metadata !DIExpression()), !dbg !15306
  call void @llvm.dbg.value(metadata i32 undef, metadata !15302, metadata !DIExpression()), !dbg !15306
  ret void, !dbg !15320
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15321 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15323, metadata !DIExpression()), !dbg !15325
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14759, metadata !DIExpression()) #23, !dbg !15326
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15328, !srcloc !14774
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15328
  call void @llvm.dbg.value(metadata i32 %3, metadata !14771, metadata !DIExpression()) #23, !dbg !15330
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #23, !dbg !15330
  call void @llvm.dbg.value(metadata i32 %3, metadata !14765, metadata !DIExpression()) #23, !dbg !15326
  call void @llvm.dbg.value(metadata i32 %3, metadata !15324, metadata !DIExpression()), !dbg !15325
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !15331
  br i1 %4, label %5, label %6, !dbg !15333

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14786, metadata !DIExpression()) #23, !dbg !15334
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14791, metadata !DIExpression()) #23, !dbg !15334
  call void @llvm.dbg.value(metadata i32 %3, metadata !14794, metadata !DIExpression()) #23, !dbg !15337
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15339, !srcloc !14800
  br label %8, !dbg !15340

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.230(%struct.k_thread* noundef %0) #24, !dbg !15341
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15342
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15343
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !15343
  br label %8, !dbg !15344

8:                                                ; preds = %6, %5
  ret void, !dbg !15344
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15345 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15347, metadata !DIExpression()), !dbg !15348
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15349
  %3 = load i8, i8* %2, align 1, !dbg !15349
  %4 = and i8 %3, 4, !dbg !15350
  %5 = icmp eq i8 %4, 0, !dbg !15351
  ret i1 %5, !dbg !15352
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.230(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15353 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15355, metadata !DIExpression()), !dbg !15356
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15357
  %3 = load i8, i8* %2, align 1, !dbg !15358
  %4 = and i8 %3, -5, !dbg !15358
  store i8 %4, i8* %2, align 1, !dbg !15358
  ret void, !dbg !15359
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15360 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15363, metadata !DIExpression()), !dbg !15364
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15362, metadata !DIExpression()), !dbg !15364
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !15365
  br i1 %4, label %5, label %9, !dbg !15367

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !15368
  br i1 %6, label %7, label %9, !dbg !15369

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !15370, metadata !DIExpression()) #23, !dbg !15376
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15375, metadata !DIExpression()) #23, !dbg !15376
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15379
  br label %10, !dbg !15380

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !14786, metadata !DIExpression()) #23, !dbg !15381
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14791, metadata !DIExpression()) #23, !dbg !15381
  call void @llvm.dbg.value(metadata i32 %3, metadata !14794, metadata !DIExpression()) #23, !dbg !15384
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15386, !srcloc !14800
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !15387
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15392, metadata !DIExpression()), !dbg !15393
  call void @llvm.dbg.value(metadata i32 %0, metadata !15394, metadata !DIExpression()), !dbg !15399
  %2 = icmp eq i32 %0, 0, !dbg !15401
  br i1 %2, label %3, label %6, !dbg !15402

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15403, !srcloc !15410
  call void @llvm.dbg.value(metadata i32 %4, metadata !15406, metadata !DIExpression()) #23, !dbg !15411
  %5 = icmp eq i32 %4, 0, !dbg !15412
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15393
  ret i1 %7, !dbg !15413
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #10 !dbg !15414 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15417
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15416, metadata !DIExpression()), !dbg !15418
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15419
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15420
  ret i1 %3, !dbg !15421
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15422 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15424, metadata !DIExpression()), !dbg !15426
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15427
  call void @llvm.dbg.value(metadata i32 %2, metadata !15425, metadata !DIExpression()), !dbg !15426
  ret i32 %2, !dbg !15428
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15429 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15431, metadata !DIExpression()), !dbg !15435
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15436
  call void @llvm.dbg.value(metadata i32 0, metadata !15432, metadata !DIExpression()), !dbg !15437
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14759, metadata !DIExpression()) #23, !dbg !15438
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15440, !srcloc !14774
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15440
  call void @llvm.dbg.value(metadata i32 %4, metadata !14771, metadata !DIExpression()) #23, !dbg !15442
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #23, !dbg !15442
  call void @llvm.dbg.value(metadata i32 %4, metadata !14765, metadata !DIExpression()) #23, !dbg !15438
  call void @llvm.dbg.value(metadata i32 %4, metadata !15434, metadata !DIExpression()), !dbg !15437
  call void @llvm.dbg.value(metadata i32 undef, metadata !15432, metadata !DIExpression()), !dbg !15437
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15443
  br i1 %5, label %6, label %10, !dbg !15447

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14928, metadata !DIExpression()) #23, !dbg !15448
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15451
  %8 = load i8, i8* %7, align 1, !dbg !15452
  %9 = and i8 %8, 127, !dbg !15452
  store i8 %9, i8* %7, align 1, !dbg !15452
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14936, metadata !DIExpression()) #23, !dbg !15453
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15455
  br label %10, !dbg !15456

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !15457
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15458
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !15459
  %13 = zext i1 %12 to i32, !dbg !15459
  tail call fastcc void @update_cache(i32 noundef %13) #24, !dbg !15460
  call void @llvm.dbg.value(metadata i32 %4, metadata !14786, metadata !DIExpression()) #23, !dbg !15461
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14791, metadata !DIExpression()) #23, !dbg !15461
  call void @llvm.dbg.value(metadata i32 %4, metadata !14794, metadata !DIExpression()) #23, !dbg !15463
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !15465, !srcloc !14800
  call void @llvm.dbg.value(metadata i32 1, metadata !15432, metadata !DIExpression()), !dbg !15437
  call void @llvm.dbg.value(metadata i32 undef, metadata !15432, metadata !DIExpression()), !dbg !15437
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15466
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15468
  br i1 %15, label %16, label %17, !dbg !15469

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15470
  br label %17, !dbg !15472

17:                                               ; preds = %16, %10
  ret void, !dbg !15473
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15474 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15476, metadata !DIExpression()), !dbg !15477
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15478
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15479
  ret i32 %3, !dbg !15480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15481 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15483, metadata !DIExpression()), !dbg !15484
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15485
  %3 = load i8, i8* %2, align 1, !dbg !15486
  %4 = or i8 %3, 16, !dbg !15486
  store i8 %4, i8* %2, align 1, !dbg !15486
  ret void, !dbg !15487
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15488 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15489, !srcloc !14774
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15489
  call void @llvm.dbg.value(metadata i32 %2, metadata !14771, metadata !DIExpression()) #23, !dbg !15491
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #23, !dbg !15491
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !15492
  ret void, !dbg !15493
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15494 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15496, metadata !DIExpression()), !dbg !15497
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !15498
  br i1 %2, label %3, label %5, !dbg !15500

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15501
  br label %6, !dbg !15503

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14794, metadata !DIExpression()) #23, !dbg !15504
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !15507, !srcloc !14800
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15508
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15509 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15511, metadata !DIExpression()), !dbg !15513
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14759, metadata !DIExpression()) #23, !dbg !15514
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15516, !srcloc !14774
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15516
  call void @llvm.dbg.value(metadata i32 %3, metadata !14771, metadata !DIExpression()) #23, !dbg !15518
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #23, !dbg !15518
  call void @llvm.dbg.value(metadata i32 %3, metadata !14765, metadata !DIExpression()) #23, !dbg !15514
  call void @llvm.dbg.value(metadata i32 %3, metadata !15512, metadata !DIExpression()), !dbg !15513
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !15519
  br i1 %4, label %6, label %5, !dbg !15521

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14786, metadata !DIExpression()) #23, !dbg !15522
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14791, metadata !DIExpression()) #23, !dbg !15522
  call void @llvm.dbg.value(metadata i32 %3, metadata !14794, metadata !DIExpression()) #23, !dbg !15525
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15527, !srcloc !14800
  br label %8, !dbg !15528

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15529
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15530
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15531
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !15531
  br label %8, !dbg !15532

8:                                                ; preds = %6, %5
  ret void, !dbg !15532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15533 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15535, metadata !DIExpression()), !dbg !15536
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15537
  %3 = load i8, i8* %2, align 1, !dbg !15537
  %4 = and i8 %3, 16, !dbg !15538
  %5 = icmp ne i8 %4, 0, !dbg !15539
  ret i1 %5, !dbg !15540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15541 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15543, metadata !DIExpression()), !dbg !15544
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15545
  %3 = load i8, i8* %2, align 1, !dbg !15546
  %4 = and i8 %3, -17, !dbg !15546
  store i8 %4, i8* %2, align 1, !dbg !15546
  ret void, !dbg !15547
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15548 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15558, metadata !DIExpression()), !dbg !15562
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15556, metadata !DIExpression()), !dbg !15562
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15557, metadata !DIExpression()), !dbg !15562
  call void @llvm.dbg.value(metadata i32 0, metadata !15559, metadata !DIExpression()), !dbg !15563
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14759, metadata !DIExpression()) #23, !dbg !15564
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15566, !srcloc !14774
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15566
  call void @llvm.dbg.value(metadata i32 %5, metadata !14771, metadata !DIExpression()) #23, !dbg !15568
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #23, !dbg !15568
  call void @llvm.dbg.value(metadata i32 %5, metadata !14765, metadata !DIExpression()) #23, !dbg !15564
  call void @llvm.dbg.value(metadata i32 %5, metadata !15561, metadata !DIExpression()), !dbg !15563
  call void @llvm.dbg.value(metadata i32 undef, metadata !15559, metadata !DIExpression()), !dbg !15563
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15569
  call void @llvm.dbg.value(metadata i32 %5, metadata !14786, metadata !DIExpression()) #23, !dbg !15572
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14791, metadata !DIExpression()) #23, !dbg !15572
  call void @llvm.dbg.value(metadata i32 %5, metadata !14794, metadata !DIExpression()) #23, !dbg !15574
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !15576, !srcloc !14800
  call void @llvm.dbg.value(metadata i32 1, metadata !15559, metadata !DIExpression()), !dbg !15563
  call void @llvm.dbg.value(metadata i32 undef, metadata !15559, metadata !DIExpression()), !dbg !15563
  ret void, !dbg !15577
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15578 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15582, metadata !DIExpression()), !dbg !15583
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15580, metadata !DIExpression()), !dbg !15583
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15581, metadata !DIExpression()), !dbg !15583
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #24, !dbg !15584
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !15585
  ret void, !dbg !15586
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !15587 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15591, metadata !DIExpression()), !dbg !15593
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15592, metadata !DIExpression()), !dbg !15593
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !15594
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !15595
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !15596
  br i1 %3, label %21, label %4, !dbg !15598

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15599
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !15601
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !15602
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14959, metadata !DIExpression()) #23, !dbg !15603
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14965, metadata !DIExpression()) #23, !dbg !15603
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !15605
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14966, metadata !DIExpression()) #23, !dbg !15603
  %8 = icmp eq %struct._dnode* %7, null, !dbg !15606
  br i1 %8, label %19, label %9, !dbg !15605

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14966, metadata !DIExpression()) #23, !dbg !15603
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !15607
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !14966, metadata !DIExpression()) #23, !dbg !15603
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !15608
  %13 = icmp sgt i32 %12, 0, !dbg !15609
  br i1 %13, label %14, label %16, !dbg !15610

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15611
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !15612
  br label %21, !dbg !15613

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !15606
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14966, metadata !DIExpression()) #23, !dbg !15603
  %18 = icmp eq %struct._dnode* %17, null, !dbg !15606
  br i1 %18, label %19, label %9, !dbg !15605, !llvm.loop !15614

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15616
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !15617
  br label %21, !dbg !15618

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !15619
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15620 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15625, metadata !DIExpression()), !dbg !15626
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15624, metadata !DIExpression()), !dbg !15626
  %4 = icmp eq i64 %3, -1, !dbg !15627
  br i1 %4, label %6, label %5, !dbg !15629

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.231(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15630
  br label %6, !dbg !15632

6:                                                ; preds = %5, %2
  ret void, !dbg !15633
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.231(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15634 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15637, metadata !DIExpression()), !dbg !15638
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15636, metadata !DIExpression()), !dbg !15638
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15639
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15640
  ret void, !dbg !15641
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15642 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15644, metadata !DIExpression()), !dbg !15652
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15653
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15653
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15645, metadata !DIExpression()), !dbg !15652
  call void @llvm.dbg.value(metadata i32 0, metadata !15646, metadata !DIExpression()), !dbg !15654
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14759, metadata !DIExpression()) #23, !dbg !15655
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15657, !srcloc !14774
  call void @llvm.dbg.value(metadata i32 undef, metadata !14771, metadata !DIExpression()) #23, !dbg !15659
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #23, !dbg !15659
  call void @llvm.dbg.value(metadata i32 undef, metadata !14765, metadata !DIExpression()) #23, !dbg !15655
  call void @llvm.dbg.value(metadata i32 undef, metadata !15648, metadata !DIExpression()), !dbg !15654
  call void @llvm.dbg.value(metadata i32 undef, metadata !15646, metadata !DIExpression()), !dbg !15654
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15660
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !15661
  %7 = load i8, i8* %6, align 1, !dbg !15661
  %8 = and i8 %7, 40, !dbg !15662
  %9 = icmp eq i8 %8, 0, !dbg !15662
  call void @llvm.dbg.value(metadata i1 %9, metadata !15649, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15663
  br i1 %9, label %10, label %17, !dbg !15664

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15665
  %12 = bitcast void (%struct._timeout*)** %11 to %struct._wait_q_t**, !dbg !15665
  %13 = load %struct._wait_q_t*, %struct._wait_q_t** %12, align 8, !dbg !15665
  %14 = icmp eq %struct._wait_q_t* %13, null, !dbg !15669
  br i1 %14, label %16, label %15, !dbg !15670

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15671
  br label %16, !dbg !15673

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.230(%struct.k_thread* noundef nonnull %3) #24, !dbg !15674
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15675
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15676
  br label %17, !dbg !15677

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !15657
  call void @llvm.dbg.value(metadata i32 %18, metadata !14771, metadata !DIExpression()) #23, !dbg !15659
  call void @llvm.dbg.value(metadata i32 %18, metadata !14765, metadata !DIExpression()) #23, !dbg !15655
  call void @llvm.dbg.value(metadata i32 %18, metadata !15648, metadata !DIExpression()), !dbg !15654
  call void @llvm.dbg.value(metadata i32 undef, metadata !14786, metadata !DIExpression()) #23, !dbg !15678
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14791, metadata !DIExpression()) #23, !dbg !15678
  call void @llvm.dbg.value(metadata i32 undef, metadata !14794, metadata !DIExpression()) #23, !dbg !15680
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !15682, !srcloc !14800
  call void @llvm.dbg.value(metadata i32 1, metadata !15646, metadata !DIExpression()), !dbg !15654
  call void @llvm.dbg.value(metadata i32 undef, metadata !15646, metadata !DIExpression()), !dbg !15654
  ret void, !dbg !15683
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15684 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15686, metadata !DIExpression()), !dbg !15687
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15688
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15689
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15690
  store %struct._wait_q_t* null, %struct._wait_q_t** %2, align 8, !dbg !15691
  ret void, !dbg !15692
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15693 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15695, metadata !DIExpression()), !dbg !15696
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15697
  %3 = load i8, i8* %2, align 1, !dbg !15698
  %4 = and i8 %3, -3, !dbg !15698
  store i8 %4, i8* %2, align 1, !dbg !15698
  ret void, !dbg !15699
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15700 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15702, metadata !DIExpression()), !dbg !15703
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15704
  br i1 %2, label %3, label %7, !dbg !15706

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14928, metadata !DIExpression()) #23, !dbg !15707
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15710
  %5 = load i8, i8* %4, align 1, !dbg !15711
  %6 = and i8 %5, 127, !dbg !15711
  store i8 %6, i8* %4, align 1, !dbg !15711
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14936, metadata !DIExpression()) #23, !dbg !15712
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15714
  br label %7, !dbg !15715

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15716
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15717
  %10 = zext i1 %9 to i32, !dbg !15717
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15718
  ret void, !dbg !15719
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15720 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15722, metadata !DIExpression()), !dbg !15723
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15724
  %3 = load i8, i8* %2, align 1, !dbg !15725
  %4 = or i8 %3, 2, !dbg !15725
  store i8 %4, i8* %2, align 1, !dbg !15725
  ret void, !dbg !15726
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #22 !dbg !15727 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15729, metadata !DIExpression()), !dbg !15733
  call void @llvm.dbg.value(metadata i32 0, metadata !15730, metadata !DIExpression()), !dbg !15734
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14759, metadata !DIExpression()) #23, !dbg !15735
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15737, !srcloc !14774
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15737
  call void @llvm.dbg.value(metadata i32 %3, metadata !14771, metadata !DIExpression()) #23, !dbg !15739
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #23, !dbg !15739
  call void @llvm.dbg.value(metadata i32 %3, metadata !14765, metadata !DIExpression()) #23, !dbg !15735
  call void @llvm.dbg.value(metadata i32 %3, metadata !15732, metadata !DIExpression()), !dbg !15734
  call void @llvm.dbg.value(metadata i32 undef, metadata !15730, metadata !DIExpression()), !dbg !15734
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15740
  call void @llvm.dbg.value(metadata i32 %3, metadata !14786, metadata !DIExpression()) #23, !dbg !15743
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14791, metadata !DIExpression()) #23, !dbg !15743
  call void @llvm.dbg.value(metadata i32 %3, metadata !14794, metadata !DIExpression()) #23, !dbg !15745
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15747, !srcloc !14800
  call void @llvm.dbg.value(metadata i32 1, metadata !15730, metadata !DIExpression()), !dbg !15734
  call void @llvm.dbg.value(metadata i32 undef, metadata !15730, metadata !DIExpression()), !dbg !15734
  ret void, !dbg !15748
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15749 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15755, metadata !DIExpression()), !dbg !15760
  call void @llvm.dbg.value(metadata i32 %0, metadata !15753, metadata !DIExpression()), !dbg !15760
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15754, metadata !DIExpression()), !dbg !15760
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15761
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15762
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15763
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15764
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15765
  call void @llvm.dbg.value(metadata i32 %6, metadata !15756, metadata !DIExpression()), !dbg !15760
  call void @llvm.dbg.value(metadata i32 0, metadata !15757, metadata !DIExpression()), !dbg !15766
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14759, metadata !DIExpression()) #23, !dbg !15767
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15769, !srcloc !14774
  call void @llvm.dbg.value(metadata i32 undef, metadata !14771, metadata !DIExpression()) #23, !dbg !15771
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #23, !dbg !15771
  call void @llvm.dbg.value(metadata i32 undef, metadata !14765, metadata !DIExpression()) #23, !dbg !15767
  call void @llvm.dbg.value(metadata i32 undef, metadata !15759, metadata !DIExpression()), !dbg !15766
  call void @llvm.dbg.value(metadata i32 undef, metadata !15757, metadata !DIExpression()), !dbg !15766
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15772
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15776
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !15777
  br i1 %10, label %11, label %12, !dbg !15778

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15779
  br label %12, !dbg !15781

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !15769
  call void @llvm.dbg.value(metadata i32 %13, metadata !14771, metadata !DIExpression()) #23, !dbg !15771
  call void @llvm.dbg.value(metadata i32 %13, metadata !14765, metadata !DIExpression()) #23, !dbg !15767
  call void @llvm.dbg.value(metadata i32 %13, metadata !15759, metadata !DIExpression()), !dbg !15766
  call void @llvm.dbg.value(metadata i32 undef, metadata !14786, metadata !DIExpression()) #23, !dbg !15782
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14791, metadata !DIExpression()) #23, !dbg !15782
  call void @llvm.dbg.value(metadata i32 undef, metadata !14794, metadata !DIExpression()) #23, !dbg !15784
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !15786, !srcloc !14800
  call void @llvm.dbg.value(metadata i32 1, metadata !15757, metadata !DIExpression()), !dbg !15766
  call void @llvm.dbg.value(metadata i32 undef, metadata !15757, metadata !DIExpression()), !dbg !15766
  ret i32 %6, !dbg !15787
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15788 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15793, metadata !DIExpression()), !dbg !15796
  call void @llvm.dbg.value(metadata i64 undef, metadata !15795, metadata !DIExpression()), !dbg !15796
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15792, metadata !DIExpression()), !dbg !15796
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15794, metadata !DIExpression()), !dbg !15796
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15797
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15798
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14759, metadata !DIExpression()) #23, !dbg !15799
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15801, !srcloc !14774
  call void @llvm.dbg.value(metadata i32 undef, metadata !14771, metadata !DIExpression()) #23, !dbg !15803
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #23, !dbg !15803
  call void @llvm.dbg.value(metadata i32 undef, metadata !14765, metadata !DIExpression()) #23, !dbg !15799
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15804
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !15805
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !15370, metadata !DIExpression()) #23, !dbg !15806
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15375, metadata !DIExpression()) #23, !dbg !15806
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !15808
  ret i32 %9, !dbg !15809
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15810 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15814, metadata !DIExpression()), !dbg !15819
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15815, metadata !DIExpression()), !dbg !15819
  call void @llvm.dbg.value(metadata i32 0, metadata !15816, metadata !DIExpression()), !dbg !15820
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14759, metadata !DIExpression()) #23, !dbg !15821
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15823, !srcloc !14774
  call void @llvm.dbg.value(metadata i32 undef, metadata !14771, metadata !DIExpression()) #23, !dbg !15825
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #23, !dbg !15825
  call void @llvm.dbg.value(metadata i32 undef, metadata !14765, metadata !DIExpression()) #23, !dbg !15821
  call void @llvm.dbg.value(metadata i32 undef, metadata !15818, metadata !DIExpression()), !dbg !15820
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15815, metadata !DIExpression()), !dbg !15819
  call void @llvm.dbg.value(metadata i32 undef, metadata !15816, metadata !DIExpression()), !dbg !15820
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !15826
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15815, metadata !DIExpression()), !dbg !15819
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15829
  br i1 %5, label %7, label %6, !dbg !15831

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !15832
  br label %7, !dbg !15834

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15823
  call void @llvm.dbg.value(metadata i32 %8, metadata !14771, metadata !DIExpression()) #23, !dbg !15825
  call void @llvm.dbg.value(metadata i32 %8, metadata !14765, metadata !DIExpression()) #23, !dbg !15821
  call void @llvm.dbg.value(metadata i32 %8, metadata !15818, metadata !DIExpression()), !dbg !15820
  call void @llvm.dbg.value(metadata i32 undef, metadata !14786, metadata !DIExpression()) #23, !dbg !15835
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14791, metadata !DIExpression()) #23, !dbg !15835
  call void @llvm.dbg.value(metadata i32 undef, metadata !14794, metadata !DIExpression()) #23, !dbg !15837
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15839, !srcloc !14800
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15815, metadata !DIExpression()), !dbg !15819
  call void @llvm.dbg.value(metadata i32 undef, metadata !15816, metadata !DIExpression()), !dbg !15820
  ret %struct.k_thread* %4, !dbg !15840
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15841 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15843, metadata !DIExpression()), !dbg !15848
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15844, metadata !DIExpression()), !dbg !15848
  call void @llvm.dbg.value(metadata i32 0, metadata !15845, metadata !DIExpression()), !dbg !15849
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14759, metadata !DIExpression()) #23, !dbg !15850
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15852, !srcloc !14774
  call void @llvm.dbg.value(metadata i32 undef, metadata !14771, metadata !DIExpression()) #23, !dbg !15854
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #23, !dbg !15854
  call void @llvm.dbg.value(metadata i32 undef, metadata !14765, metadata !DIExpression()) #23, !dbg !15850
  call void @llvm.dbg.value(metadata i32 undef, metadata !15847, metadata !DIExpression()), !dbg !15849
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15844, metadata !DIExpression()), !dbg !15848
  call void @llvm.dbg.value(metadata i32 undef, metadata !15845, metadata !DIExpression()), !dbg !15849
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !15855
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15844, metadata !DIExpression()), !dbg !15848
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15858
  br i1 %5, label %8, label %6, !dbg !15860

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !15861
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !15863
  br label %8, !dbg !15864

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15852
  call void @llvm.dbg.value(metadata i32 %9, metadata !14771, metadata !DIExpression()) #23, !dbg !15854
  call void @llvm.dbg.value(metadata i32 %9, metadata !14765, metadata !DIExpression()) #23, !dbg !15850
  call void @llvm.dbg.value(metadata i32 %9, metadata !15847, metadata !DIExpression()), !dbg !15849
  call void @llvm.dbg.value(metadata i32 undef, metadata !14786, metadata !DIExpression()) #23, !dbg !15865
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14791, metadata !DIExpression()) #23, !dbg !15865
  call void @llvm.dbg.value(metadata i32 undef, metadata !14794, metadata !DIExpression()) #23, !dbg !15867
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15869, !srcloc !14800
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15844, metadata !DIExpression()), !dbg !15848
  call void @llvm.dbg.value(metadata i32 undef, metadata !15845, metadata !DIExpression()), !dbg !15849
  ret %struct.k_thread* %4, !dbg !15870
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15871 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15873, metadata !DIExpression()), !dbg !15874
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15729, metadata !DIExpression()) #23, !dbg !15875
  call void @llvm.dbg.value(metadata i32 0, metadata !15730, metadata !DIExpression()) #23, !dbg !15877
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14759, metadata !DIExpression()) #23, !dbg !15878
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15880, !srcloc !14774
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15880
  call void @llvm.dbg.value(metadata i32 %3, metadata !14771, metadata !DIExpression()) #23, !dbg !15882
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #23, !dbg !15882
  call void @llvm.dbg.value(metadata i32 %3, metadata !14765, metadata !DIExpression()) #23, !dbg !15878
  call void @llvm.dbg.value(metadata i32 %3, metadata !15732, metadata !DIExpression()) #23, !dbg !15877
  call void @llvm.dbg.value(metadata i32 undef, metadata !15730, metadata !DIExpression()) #23, !dbg !15877
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15883
  call void @llvm.dbg.value(metadata i32 %3, metadata !14786, metadata !DIExpression()) #23, !dbg !15884
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14791, metadata !DIExpression()) #23, !dbg !15884
  call void @llvm.dbg.value(metadata i32 %3, metadata !14794, metadata !DIExpression()) #23, !dbg !15886
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15888, !srcloc !14800
  call void @llvm.dbg.value(metadata i32 1, metadata !15730, metadata !DIExpression()) #23, !dbg !15877
  call void @llvm.dbg.value(metadata i32 undef, metadata !15730, metadata !DIExpression()) #23, !dbg !15877
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15889
  ret void, !dbg !15890
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15891 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15893, metadata !DIExpression()), !dbg !15899
  call void @llvm.dbg.value(metadata i32 %1, metadata !15894, metadata !DIExpression()), !dbg !15899
  call void @llvm.dbg.value(metadata i8 0, metadata !15895, metadata !DIExpression()), !dbg !15899
  call void @llvm.dbg.value(metadata i32 0, metadata !15896, metadata !DIExpression()), !dbg !15900
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14759, metadata !DIExpression()) #23, !dbg !15901
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15903, !srcloc !14774
  call void @llvm.dbg.value(metadata i32 undef, metadata !14771, metadata !DIExpression()) #23, !dbg !15905
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #23, !dbg !15905
  call void @llvm.dbg.value(metadata i32 undef, metadata !14765, metadata !DIExpression()) #23, !dbg !15901
  call void @llvm.dbg.value(metadata i32 undef, metadata !15898, metadata !DIExpression()), !dbg !15900
  call void @llvm.dbg.value(metadata i8 poison, metadata !15895, metadata !DIExpression()), !dbg !15899
  call void @llvm.dbg.value(metadata i32 undef, metadata !15896, metadata !DIExpression()), !dbg !15900
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15906
  call void @llvm.dbg.value(metadata i1 %6, metadata !15895, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15899
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !15909

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14928, metadata !DIExpression()) #23, !dbg !15910
  %11 = load i8, i8* %4, align 1, !dbg !15916
  %12 = and i8 %11, 127, !dbg !15916
  store i8 %12, i8* %4, align 1, !dbg !15916
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14936, metadata !DIExpression()) #23, !dbg !15917
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15919
  store i8 %9, i8* %8, align 2, !dbg !15920
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14945, metadata !DIExpression()) #23, !dbg !15921
  %13 = load i8, i8* %4, align 1, !dbg !15923
  %14 = or i8 %13, -128, !dbg !15923
  store i8 %14, i8* %4, align 1, !dbg !15923
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14952, metadata !DIExpression()) #23, !dbg !15924
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14959, metadata !DIExpression()) #23, !dbg !15926
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14965, metadata !DIExpression()) #23, !dbg !15926
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15928
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14966, metadata !DIExpression()) #23, !dbg !15926
  %16 = icmp eq %struct._dnode* %15, null, !dbg !15929
  br i1 %16, label %26, label %17, !dbg !15928

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !14966, metadata !DIExpression()) #23, !dbg !15926
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !15930
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14966, metadata !DIExpression()) #23, !dbg !15926
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !15931
  %21 = icmp sgt i32 %20, 0, !dbg !15932
  br i1 %21, label %22, label %23, !dbg !15933

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !15934
  br label %27, !dbg !15935

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !15929
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14966, metadata !DIExpression()) #23, !dbg !15926
  %25 = icmp eq %struct._dnode* %24, null, !dbg !15929
  br i1 %25, label %26, label %17, !dbg !15928, !llvm.loop !15936

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !15938
  br label %27, !dbg !15939

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15940
  br label %29, !dbg !15941

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !15942
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !15903
  call void @llvm.dbg.value(metadata i32 %30, metadata !14771, metadata !DIExpression()) #23, !dbg !15905
  call void @llvm.dbg.value(metadata i32 %30, metadata !14765, metadata !DIExpression()) #23, !dbg !15901
  call void @llvm.dbg.value(metadata i32 %30, metadata !15898, metadata !DIExpression()), !dbg !15900
  call void @llvm.dbg.value(metadata i32 undef, metadata !14786, metadata !DIExpression()) #23, !dbg !15944
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14791, metadata !DIExpression()) #23, !dbg !15944
  call void @llvm.dbg.value(metadata i32 undef, metadata !14794, metadata !DIExpression()) #23, !dbg !15946
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !15948, !srcloc !14800
  call void @llvm.dbg.value(metadata i8 poison, metadata !15895, metadata !DIExpression()), !dbg !15899
  call void @llvm.dbg.value(metadata i32 undef, metadata !15896, metadata !DIExpression()), !dbg !15900
  ret i1 %6, !dbg !15949
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15950 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15954, metadata !DIExpression()), !dbg !15957
  call void @llvm.dbg.value(metadata i32 %1, metadata !15955, metadata !DIExpression()), !dbg !15957
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15958
  call void @llvm.dbg.value(metadata i1 %3, metadata !15956, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15957
  br i1 %3, label %4, label %12, !dbg !15959

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15961
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15962
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15962
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15962
  %9 = load i8, i8* %8, align 1, !dbg !15962
  %10 = icmp eq i8 %9, 0, !dbg !15963
  br i1 %10, label %11, label %12, !dbg !15964

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15965
  br label %12, !dbg !15967

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15968
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15969 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15971, metadata !DIExpression()), !dbg !15974
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14759, metadata !DIExpression()) #23, !dbg !15975
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15977, !srcloc !14774
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15977
  call void @llvm.dbg.value(metadata i32 %2, metadata !14771, metadata !DIExpression()) #23, !dbg !15979
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #23, !dbg !15979
  call void @llvm.dbg.value(metadata i32 %2, metadata !14765, metadata !DIExpression()) #23, !dbg !15975
  call void @llvm.dbg.value(metadata i32 %2, metadata !15973, metadata !DIExpression()), !dbg !15974
  call void @llvm.dbg.value(metadata i32 undef, metadata !15971, metadata !DIExpression()), !dbg !15974
  tail call fastcc void @z_sched_lock() #24, !dbg !15980
  call void @llvm.dbg.value(metadata i32 %2, metadata !14786, metadata !DIExpression()) #23, !dbg !15983
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14791, metadata !DIExpression()) #23, !dbg !15983
  call void @llvm.dbg.value(metadata i32 %2, metadata !14794, metadata !DIExpression()) #23, !dbg !15985
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !15987, !srcloc !14800
  call void @llvm.dbg.value(metadata i32 1, metadata !15971, metadata !DIExpression()), !dbg !15974
  call void @llvm.dbg.value(metadata i32 undef, metadata !15971, metadata !DIExpression()), !dbg !15974
  ret void, !dbg !15988
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15989 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15990
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15991
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !15991
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !15991
  %5 = load i8, i8* %4, align 1, !dbg !15992
  %6 = add i8 %5, -1, !dbg !15992
  store i8 %6, i8* %4, align 1, !dbg !15992
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15993, !srcloc !15995
  ret void, !dbg !15996
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15997 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15999, metadata !DIExpression()), !dbg !16002
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14759, metadata !DIExpression()) #23, !dbg !16003
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16005, !srcloc !14774
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16005
  call void @llvm.dbg.value(metadata i32 %2, metadata !14771, metadata !DIExpression()) #23, !dbg !16007
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #23, !dbg !16007
  call void @llvm.dbg.value(metadata i32 %2, metadata !14765, metadata !DIExpression()) #23, !dbg !16003
  call void @llvm.dbg.value(metadata i32 %2, metadata !16001, metadata !DIExpression()), !dbg !16002
  call void @llvm.dbg.value(metadata i32 undef, metadata !15999, metadata !DIExpression()), !dbg !16002
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16008
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !16011
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !16011
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !16011
  %7 = load i8, i8* %6, align 1, !dbg !16012
  %8 = add i8 %7, 1, !dbg !16012
  store i8 %8, i8* %6, align 1, !dbg !16012
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !16013
  call void @llvm.dbg.value(metadata i32 %2, metadata !14786, metadata !DIExpression()) #23, !dbg !16014
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14791, metadata !DIExpression()) #23, !dbg !16014
  call void @llvm.dbg.value(metadata i32 %2, metadata !14794, metadata !DIExpression()) #23, !dbg !16016
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !16018, !srcloc !14800
  call void @llvm.dbg.value(metadata i32 1, metadata !15999, metadata !DIExpression()), !dbg !16002
  call void @llvm.dbg.value(metadata i32 undef, metadata !15999, metadata !DIExpression()), !dbg !16002
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16019
  ret void, !dbg !16020
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #10 !dbg !16021 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16022
  ret %struct.k_thread* %1, !dbg !16023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !16024 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16028, metadata !DIExpression()), !dbg !16033
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16029, metadata !DIExpression()), !dbg !16033
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16034
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16030, metadata !DIExpression()), !dbg !16033
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16035
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16031, metadata !DIExpression()), !dbg !16033
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !16036
  call void @llvm.dbg.value(metadata i32 %5, metadata !16032, metadata !DIExpression()), !dbg !16033
  %6 = icmp sgt i32 %5, 0, !dbg !16037
  br i1 %6, label %17, label %7, !dbg !16039

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16040
  br i1 %8, label %17, label %9, !dbg !16042

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16043
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16043
  %12 = load i32, i32* %11, align 8, !dbg !16043
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16045
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16045
  %15 = load i32, i32* %14, align 8, !dbg !16045
  %16 = icmp ult i32 %12, %15, !dbg !16046
  br label %17, !dbg !16047

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16048
  ret i1 %18, !dbg !16049
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16050 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16067, metadata !DIExpression()), !dbg !16082
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16068, metadata !DIExpression()), !dbg !16082
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16083
  %5 = load i32, i32* %4, align 4, !dbg !16084
  %6 = add nsw i32 %5, 1, !dbg !16084
  store i32 %6, i32* %4, align 4, !dbg !16084
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16085
  store i32 %5, i32* %7, align 8, !dbg !16086
  %8 = load i32, i32* %4, align 4, !dbg !16087
  %9 = icmp eq i32 %8, 0, !dbg !16088
  br i1 %9, label %10, label %32, !dbg !16089

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16090
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !16090
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16070, metadata !DIExpression()), !dbg !16090
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16090
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16090
  %14 = load i32, i32* %13, align 4, !dbg !16090
  %15 = shl i32 %14, 2, !dbg !16090
  %16 = alloca i8, i32 %15, align 8, !dbg !16090
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16090
  store i8* %16, i8** %17, align 4, !dbg !16090
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16090
  %19 = alloca i8, i32 %14, align 8, !dbg !16090
  store i8* %19, i8** %18, align 4, !dbg !16090
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16090
  store i32 -1, i32* %20, align 4, !dbg !16090
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16091
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16079, metadata !DIExpression()), !dbg !16092
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16069, metadata !DIExpression()), !dbg !16082
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !16093
  br i1 %22, label %23, label %24, !dbg !16090

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !16093
  br label %32, !dbg !16094

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !16069, metadata !DIExpression()), !dbg !16082
  %26 = load i32, i32* %4, align 4, !dbg !16095
  %27 = add nsw i32 %26, 1, !dbg !16095
  store i32 %27, i32* %4, align 4, !dbg !16095
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !16097
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !16097
  store i32 %26, i32* %29, align 8, !dbg !16098
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16091
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16079, metadata !DIExpression()), !dbg !16092
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16069, metadata !DIExpression()), !dbg !16082
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !16093
  br i1 %31, label %23, label %24, !dbg !16090, !llvm.loop !16099

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16101
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16102
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !16103
  ret void, !dbg !16104
}

; Function Attrs: optsize
declare !dbg !16105 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16110 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16113 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16115, metadata !DIExpression()), !dbg !16117
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16116, metadata !DIExpression()), !dbg !16117
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16118
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16119
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !16120
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16121
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !16121
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !16123
  br i1 %7, label %8, label %10, !dbg !16124

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16125
  store i32 0, i32* %9, align 4, !dbg !16127
  br label %10, !dbg !16128

10:                                               ; preds = %8, %2
  ret void, !dbg !16129
}

; Function Attrs: optsize
declare !dbg !16130 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16131 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16135, metadata !DIExpression()), !dbg !16138
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16136, metadata !DIExpression()), !dbg !16138
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16139
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !16140
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16137, metadata !DIExpression()), !dbg !16138
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16136, metadata !DIExpression()), !dbg !16138
  ret %struct.k_thread* %4, !dbg !16141
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16142 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16146, metadata !DIExpression()), !dbg !16147
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16148
  ret %struct.rbnode* %2, !dbg !16149
}

; Function Attrs: optsize
declare !dbg !16150 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !16153 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16165, metadata !DIExpression()), !dbg !16169
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16170
  %3 = load i32, i32* %2, align 4, !dbg !16170
  %4 = icmp eq i32 %3, 0, !dbg !16172
  br i1 %4, label %10, label %5, !dbg !16173

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16166, metadata !DIExpression()), !dbg !16169
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16174, !range !8239
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16175
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16167, metadata !DIExpression()), !dbg !16169
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !16176
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16168, metadata !DIExpression()), !dbg !16169
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16166, metadata !DIExpression()), !dbg !16169
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16169
  ret %struct.k_thread* %11, !dbg !16177
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16178 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16182, metadata !DIExpression()), !dbg !16185
  call void @llvm.dbg.value(metadata i32 0, metadata !16183, metadata !DIExpression()), !dbg !16185
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16186
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16184, metadata !DIExpression()), !dbg !16185
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16187
  br i1 %3, label %8, label %4, !dbg !16188

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16189
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16191
  call void @llvm.dbg.value(metadata i32 1, metadata !16183, metadata !DIExpression()), !dbg !16185
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16186
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16184, metadata !DIExpression()), !dbg !16185
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16187
  br i1 %7, label %8, label %4, !dbg !16188, !llvm.loop !16192

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16185
  ret i32 %9, !dbg !16194
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #10 !dbg !16195 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16197, metadata !DIExpression()), !dbg !16198
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16199
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !16200
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16201
  ret %struct.k_thread* %4, !dbg !16202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #6 !dbg !16203 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16212, metadata !DIExpression()), !dbg !16213
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16214
  tail call fastcc void @sys_dlist_init.238(%struct._dnode* noundef nonnull %2) #24, !dbg !16215
  ret void, !dbg !16216
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.238(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !16217 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16221, metadata !DIExpression()), !dbg !16222
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16223
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16224
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16225
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16226
  ret void, !dbg !16227
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16228 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !16229
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !16230
  ret void, !dbg !16231
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !16232 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16237, metadata !DIExpression()), !dbg !16238
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16239
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16239
  %4 = load i8, i8* %3, align 2, !dbg !16239
  %5 = sext i8 %4 to i32, !dbg !16240
  ret i32 %5, !dbg !16241
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16242 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16246, metadata !DIExpression()), !dbg !16249
  call void @llvm.dbg.value(metadata i32 %1, metadata !16247, metadata !DIExpression()), !dbg !16249
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16248, metadata !DIExpression()), !dbg !16249
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16250
  ret void, !dbg !16251
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16252 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !16253
  br i1 %1, label %8, label %2, !dbg !16254

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16255
  br i1 %3, label %8, label %4, !dbg !16256

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16257
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !16258
  %7 = xor i1 %6, true, !dbg !16256
  br label %8, !dbg !16256

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16259
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #10 !dbg !16260 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16261, !range !7428
  %2 = icmp eq i8 %1, 0, !dbg !16261
  ret i1 %2, !dbg !16262
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16263 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14759, metadata !DIExpression()) #23, !dbg !16266
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16268, !srcloc !14774
  call void @llvm.dbg.value(metadata i32 undef, metadata !14771, metadata !DIExpression()) #23, !dbg !16270
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #23, !dbg !16270
  call void @llvm.dbg.value(metadata i32 undef, metadata !14765, metadata !DIExpression()) #23, !dbg !16266
  call void @llvm.dbg.value(metadata i32 undef, metadata !16265, metadata !DIExpression()), !dbg !16271
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16272
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14928, metadata !DIExpression()) #23, !dbg !16275
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !16277
  %4 = load i8, i8* %3, align 1, !dbg !16278
  %5 = and i8 %4, 127, !dbg !16278
  store i8 %5, i8* %3, align 1, !dbg !16278
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14936, metadata !DIExpression()) #23, !dbg !16279
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !16281
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16282
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14945, metadata !DIExpression()) #23, !dbg !16283
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !16285
  %8 = load i8, i8* %7, align 1, !dbg !16286
  %9 = or i8 %8, -128, !dbg !16286
  store i8 %9, i8* %7, align 1, !dbg !16286
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14952, metadata !DIExpression()) #23, !dbg !16287
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14959, metadata !DIExpression()) #23, !dbg !16289
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14965, metadata !DIExpression()) #23, !dbg !16289
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16291
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14966, metadata !DIExpression()) #23, !dbg !16289
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16292
  br i1 %11, label %22, label %12, !dbg !16291

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14966, metadata !DIExpression()) #23, !dbg !16289
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16293
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14966, metadata !DIExpression()) #23, !dbg !16289
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !16294
  %16 = icmp sgt i32 %15, 0, !dbg !16295
  br i1 %16, label %17, label %19, !dbg !16296

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16297
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !16298
  br label %24, !dbg !16299

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !16292
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14966, metadata !DIExpression()) #23, !dbg !16289
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16292
  br i1 %21, label %22, label %12, !dbg !16291, !llvm.loop !16300

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16302
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !16303
  br label %24, !dbg !16304

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !16268
  call void @llvm.dbg.value(metadata i32 %25, metadata !14771, metadata !DIExpression()) #23, !dbg !16270
  call void @llvm.dbg.value(metadata i32 %25, metadata !14765, metadata !DIExpression()) #23, !dbg !16266
  call void @llvm.dbg.value(metadata i32 %25, metadata !16265, metadata !DIExpression()), !dbg !16271
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16305
  call void @llvm.dbg.value(metadata i32 undef, metadata !15370, metadata !DIExpression()) #23, !dbg !16306
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15375, metadata !DIExpression()) #23, !dbg !16306
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !16308
  ret void, !dbg !16309
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16310 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16314, metadata !DIExpression()), !dbg !16317
  %3 = icmp eq i64 %2, -1, !dbg !16318
  br i1 %3, label %4, label %6, !dbg !16320

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16321
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #24, !dbg !16323
  br label %11, !dbg !16324

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16315, metadata !DIExpression()), !dbg !16317
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !16325
  %8 = sext i32 %7 to i64, !dbg !16325
  call void @llvm.dbg.value(metadata i64 %8, metadata !16315, metadata !DIExpression()), !dbg !16317
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #24, !dbg !16326
  %10 = trunc i64 %9 to i32, !dbg !16326
  call void @llvm.dbg.value(metadata i32 %10, metadata !16316, metadata !DIExpression()), !dbg !16317
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !16317
  ret i32 %12, !dbg !16327
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16328 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16332, metadata !DIExpression()), !dbg !16333
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16334, !srcloc !16336
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !16337
  ret void, !dbg !16338
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16339 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16343, metadata !DIExpression()), !dbg !16347
  %2 = icmp eq i64 %0, 0, !dbg !16348
  br i1 %2, label %3, label %4, !dbg !16350

3:                                                ; preds = %1
  tail call fastcc void @k_yield.245() #24, !dbg !16351
  br label %29, !dbg !16353

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !16345, metadata !DIExpression()), !dbg !16347
  %5 = icmp sgt i64 %0, -3, !dbg !16354
  br i1 %5, label %6, label %10, !dbg !16356

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16357
  %8 = trunc i64 %0 to i32, !dbg !16359
  %9 = add i32 %7, %8, !dbg !16359
  call void @llvm.dbg.value(metadata i32 %9, metadata !16344, metadata !DIExpression()), !dbg !16347
  br label %13, !dbg !16360

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !16361
  %12 = sub i32 -2, %11, !dbg !16361
  call void @llvm.dbg.value(metadata i32 %12, metadata !16344, metadata !DIExpression()), !dbg !16347
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !16363
  call void @llvm.dbg.value(metadata i32 %14, metadata !16344, metadata !DIExpression()), !dbg !16347
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14759, metadata !DIExpression()) #23, !dbg !16364
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16366, !srcloc !14774
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !16366
  call void @llvm.dbg.value(metadata i32 %16, metadata !14771, metadata !DIExpression()) #23, !dbg !16368
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #23, !dbg !16368
  call void @llvm.dbg.value(metadata i32 %16, metadata !14765, metadata !DIExpression()) #23, !dbg !16364
  call void @llvm.dbg.value(metadata i32 %16, metadata !16346, metadata !DIExpression()), !dbg !16347
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16369
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !16370
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #24, !dbg !16371
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16372
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16373
  tail call fastcc void @z_add_thread_timeout.231(%struct.k_thread* noundef %18, [1 x i64] %19) #24, !dbg !16373
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16374
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #24, !dbg !16375
  call void @llvm.dbg.value(metadata i32 %16, metadata !15370, metadata !DIExpression()) #23, !dbg !16376
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15375, metadata !DIExpression()) #23, !dbg !16376
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !16378
  %22 = zext i32 %14 to i64, !dbg !16379
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16380
  %24 = zext i32 %23 to i64, !dbg !16380
  %25 = sub nsw i64 %22, %24, !dbg !16381
  call void @llvm.dbg.value(metadata i64 %25, metadata !16343, metadata !DIExpression()), !dbg !16347
  %26 = icmp sgt i64 %25, 0, !dbg !16382
  %27 = select i1 %26, i64 %25, i64 0, !dbg !16382
  %28 = trunc i64 %27 to i32, !dbg !16382
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !16347
  ret i32 %30, !dbg !16383
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16384 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16386, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i64 %0, metadata !14806, metadata !DIExpression()), !dbg !16388
  call void @llvm.dbg.value(metadata i32 10000, metadata !14809, metadata !DIExpression()), !dbg !16388
  call void @llvm.dbg.value(metadata i32 1000, metadata !14810, metadata !DIExpression()), !dbg !16388
  call void @llvm.dbg.value(metadata i8 1, metadata !14811, metadata !DIExpression()), !dbg !16388
  call void @llvm.dbg.value(metadata i1 false, metadata !14812, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16388
  call void @llvm.dbg.value(metadata i1 false, metadata !14813, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16388
  call void @llvm.dbg.value(metadata i8 0, metadata !14814, metadata !DIExpression()), !dbg !16388
  call void @llvm.dbg.value(metadata i1 false, metadata !14815, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16388
  call void @llvm.dbg.value(metadata i1 true, metadata !14816, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16388
  call void @llvm.dbg.value(metadata i64 0, metadata !14817, metadata !DIExpression()), !dbg !16388
  call void @llvm.dbg.value(metadata i64 0, metadata !14817, metadata !DIExpression()), !dbg !16388
  call void @llvm.dbg.value(metadata i64 %0, metadata !14806, metadata !DIExpression()), !dbg !16388
  %2 = udiv i64 %0, 10, !dbg !16390
  ret i64 %2, !dbg !16394
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield.245() unnamed_addr #1 !dbg !16395 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16396, !srcloc !16398
  tail call void @z_impl_k_yield() #24, !dbg !16399
  ret void, !dbg !16400
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16401 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16405, metadata !DIExpression()), !dbg !16407
  %2 = sext i32 %0 to i64, !dbg !16408
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16409
  call void @llvm.dbg.value(metadata i64 %3, metadata !16406, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16407
  %4 = shl i64 %3, 32, !dbg !16410
  %5 = ashr exact i64 %4, 32, !dbg !16410
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16411
  call void @llvm.dbg.value(metadata i32 %6, metadata !16406, metadata !DIExpression()), !dbg !16407
  %7 = sext i32 %6 to i64, !dbg !16412
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16413
  %9 = trunc i64 %8 to i32, !dbg !16413
  ret i32 %9, !dbg !16414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !16415 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16417, metadata !DIExpression()), !dbg !16418
  call void @llvm.dbg.value(metadata i64 %0, metadata !14806, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14809, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i32 10000, metadata !14810, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i8 1, metadata !14811, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i1 false, metadata !14812, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16419
  call void @llvm.dbg.value(metadata i1 true, metadata !14813, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16419
  call void @llvm.dbg.value(metadata i8 0, metadata !14814, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i1 false, metadata !14815, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16419
  call void @llvm.dbg.value(metadata i1 true, metadata !14816, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16419
  call void @llvm.dbg.value(metadata i64 0, metadata !14817, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i64 0, metadata !14817, metadata !DIExpression()), !dbg !16419
  %2 = add i64 %0, 99, !dbg !16421
  call void @llvm.dbg.value(metadata i64 %2, metadata !14806, metadata !DIExpression()), !dbg !16419
  %3 = udiv i64 %2, 100, !dbg !16422
  ret i64 %3, !dbg !16423
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16424 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16426, metadata !DIExpression()), !dbg !16427
  call void @llvm.dbg.value(metadata i64 %0, metadata !14806, metadata !DIExpression()), !dbg !16428
  call void @llvm.dbg.value(metadata i32 10000, metadata !14809, metadata !DIExpression()), !dbg !16428
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14810, metadata !DIExpression()), !dbg !16428
  call void @llvm.dbg.value(metadata i8 1, metadata !14811, metadata !DIExpression()), !dbg !16428
  call void @llvm.dbg.value(metadata i1 false, metadata !14812, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16428
  call void @llvm.dbg.value(metadata i1 false, metadata !14813, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16428
  call void @llvm.dbg.value(metadata i8 0, metadata !14814, metadata !DIExpression()), !dbg !16428
  call void @llvm.dbg.value(metadata i1 true, metadata !14815, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16428
  call void @llvm.dbg.value(metadata i1 false, metadata !14816, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16428
  call void @llvm.dbg.value(metadata i64 0, metadata !14817, metadata !DIExpression()), !dbg !16428
  call void @llvm.dbg.value(metadata i64 0, metadata !14817, metadata !DIExpression()), !dbg !16428
  %2 = mul i64 %0, 100, !dbg !16430
  ret i64 %2, !dbg !16432
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16433 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16435, metadata !DIExpression()), !dbg !16436
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16437
  br i1 %2, label %14, label %3, !dbg !16439

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16440
  %5 = icmp slt i32 %4, 0, !dbg !16442
  br i1 %5, label %6, label %10, !dbg !16443

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16444
  %8 = load i8, i8* %7, align 1, !dbg !16444
  %9 = icmp eq i8 %8, 16, !dbg !16447
  br i1 %9, label %10, label %14, !dbg !16448

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16449
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16450
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16451, !srcloc !15410
  call void @llvm.dbg.value(metadata i32 %11, metadata !15406, metadata !DIExpression()) #23, !dbg !16455
  %12 = icmp eq i32 %11, 0, !dbg !16456
  br i1 %12, label %13, label %14, !dbg !16457

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16458
  br label %14, !dbg !16460

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16461
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16462 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16464, metadata !DIExpression()), !dbg !16465
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16466
  %3 = load i8, i8* %2, align 1, !dbg !16466
  %4 = and i8 %3, 2, !dbg !16467
  %5 = icmp ne i8 %4, 0, !dbg !16468
  ret i1 %5, !dbg !16469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #10 !dbg !16470 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16475
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16474, metadata !DIExpression()), !dbg !16476
  ret %struct.k_thread* %1, !dbg !16477
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16478 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16479, !srcloc !15410
  call void @llvm.dbg.value(metadata i32 %1, metadata !15406, metadata !DIExpression()) #23, !dbg !16482
  %2 = icmp eq i32 %1, 0, !dbg !16483
  br i1 %2, label %3, label %8, !dbg !16484

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16485
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16486
  %6 = icmp ne i32 %5, 0, !dbg !16484
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16487
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16488 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16490, metadata !DIExpression()), !dbg !16492
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14759, metadata !DIExpression()) #23, !dbg !16493
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16495, !srcloc !14774
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16495
  call void @llvm.dbg.value(metadata i32 %3, metadata !14771, metadata !DIExpression()) #23, !dbg !16497
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #23, !dbg !16497
  call void @llvm.dbg.value(metadata i32 %3, metadata !14765, metadata !DIExpression()) #23, !dbg !16493
  call void @llvm.dbg.value(metadata i32 %3, metadata !16491, metadata !DIExpression()), !dbg !16492
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16498
  %5 = load i8, i8* %4, align 4, !dbg !16498
  %6 = and i8 %5, 1, !dbg !16500
  %7 = icmp eq i8 %6, 0, !dbg !16501
  br i1 %7, label %9, label %8, !dbg !16502

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14786, metadata !DIExpression()) #23, !dbg !16503
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14791, metadata !DIExpression()) #23, !dbg !16503
  call void @llvm.dbg.value(metadata i32 %3, metadata !14794, metadata !DIExpression()) #23, !dbg !16506
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16508, !srcloc !14800
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !16509, !srcloc !16511
  br label %24, !dbg !16512

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16513
  %11 = load i8, i8* %10, align 1, !dbg !16513
  %12 = and i8 %11, 8, !dbg !16515
  %13 = icmp eq i8 %12, 0, !dbg !16516
  br i1 %13, label %15, label %14, !dbg !16517

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !14786, metadata !DIExpression()) #23, !dbg !16518
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14791, metadata !DIExpression()) #23, !dbg !16518
  call void @llvm.dbg.value(metadata i32 %3, metadata !14794, metadata !DIExpression()) #23, !dbg !16521
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16523, !srcloc !14800
  br label %24, !dbg !16524

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16525
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16526
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16528
  br i1 %17, label %18, label %23, !dbg !16529

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16530, !srcloc !15410
  call void @llvm.dbg.value(metadata i32 %19, metadata !15406, metadata !DIExpression()) #23, !dbg !16533
  %20 = icmp eq i32 %19, 0, !dbg !16534
  br i1 %20, label %21, label %23, !dbg !16535

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !15370, metadata !DIExpression()) #23, !dbg !16536
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15375, metadata !DIExpression()) #23, !dbg !16536
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !16539
  br label %23, !dbg !16540

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !14786, metadata !DIExpression()) #23, !dbg !16541
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14791, metadata !DIExpression()) #23, !dbg !16541
  call void @llvm.dbg.value(metadata i32 %3, metadata !14794, metadata !DIExpression()) #23, !dbg !16543
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16545, !srcloc !14800
  br label %24, !dbg !16546

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !16546
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16547 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16549, metadata !DIExpression()), !dbg !16550
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16551
  %3 = load i8, i8* %2, align 1, !dbg !16551
  %4 = and i8 %3, 8, !dbg !16553
  %5 = icmp eq i8 %4, 0, !dbg !16554
  br i1 %5, label %6, label %20, !dbg !16555

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16556
  %8 = or i8 %7, 8, !dbg !16556
  store i8 %8, i8* %2, align 1, !dbg !16556
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16558
  br i1 %9, label %10, label %12, !dbg !16560

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14928, metadata !DIExpression()) #23, !dbg !16561
  %11 = and i8 %8, 95, !dbg !16564
  store i8 %11, i8* %2, align 1, !dbg !16564
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14936, metadata !DIExpression()) #23, !dbg !16565
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16567
  br label %12, !dbg !16568

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16569
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !16569
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !16571
  br i1 %15, label %17, label %16, !dbg !16572

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16573
  br label %17, !dbg !16575

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16576
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16577
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #24, !dbg !16578
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16579
  br label %20, !dbg !16580

20:                                               ; preds = %17, %1
  ret void, !dbg !16581
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !16582 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16586, metadata !DIExpression()), !dbg !16588
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16589
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16587, metadata !DIExpression()), !dbg !16588
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16590
  br i1 %3, label %10, label %4, !dbg !16591

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16592
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16594
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16595, metadata !DIExpression()), !dbg !16601
  call void @llvm.dbg.value(metadata i32 0, metadata !16600, metadata !DIExpression()), !dbg !16601
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16603
  store i32 0, i32* %7, align 4, !dbg !16604
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16605
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16589
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16587, metadata !DIExpression()), !dbg !16588
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16590
  br i1 %9, label %10, label %4, !dbg !16591, !llvm.loop !16606

10:                                               ; preds = %4, %1
  ret void, !dbg !16608
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16609 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16614, metadata !DIExpression()), !dbg !16617
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16613, metadata !DIExpression()), !dbg !16617
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14759, metadata !DIExpression()) #23, !dbg !16618
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16620, !srcloc !14774
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16620
  call void @llvm.dbg.value(metadata i32 %4, metadata !14771, metadata !DIExpression()) #23, !dbg !16622
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #23, !dbg !16622
  call void @llvm.dbg.value(metadata i32 %4, metadata !14765, metadata !DIExpression()) #23, !dbg !16618
  call void @llvm.dbg.value(metadata i32 %4, metadata !16615, metadata !DIExpression()), !dbg !16617
  call void @llvm.dbg.value(metadata i32 0, metadata !16616, metadata !DIExpression()), !dbg !16617
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16623
  %6 = load i8, i8* %5, align 1, !dbg !16623
  %7 = and i8 %6, 8, !dbg !16625
  %8 = icmp eq i8 %7, 0, !dbg !16626
  br i1 %8, label %9, label %24, !dbg !16627

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !16614, metadata !DIExpression()), !dbg !16617
  %11 = icmp eq i64 %10, 0, !dbg !16628
  br i1 %11, label %24, label %12, !dbg !16630

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16631
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !16633
  br i1 %14, label %24, label %15, !dbg !16634

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16635
  %17 = load %struct._wait_q_t*, %struct._wait_q_t** %16, align 8, !dbg !16635
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !16636
  %19 = icmp eq %struct._wait_q_t* %17, %18, !dbg !16637
  br i1 %19, label %24, label %20, !dbg !16638

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16639
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef nonnull %21) #24, !dbg !16641
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16642
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #24, !dbg !16643
  call void @llvm.dbg.value(metadata i32 %4, metadata !15370, metadata !DIExpression()) #23, !dbg !16644
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15375, metadata !DIExpression()) #23, !dbg !16644
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !16646
  call void @llvm.dbg.value(metadata i32 %23, metadata !16616, metadata !DIExpression()), !dbg !16617
  br label %26, !dbg !16647

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !16648
  call void @llvm.dbg.value(metadata i32 %25, metadata !16616, metadata !DIExpression()), !dbg !16617
  call void @llvm.dbg.value(metadata i32 %4, metadata !14786, metadata !DIExpression()) #23, !dbg !16649
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14791, metadata !DIExpression()) #23, !dbg !16649
  call void @llvm.dbg.value(metadata i32 %4, metadata !14794, metadata !DIExpression()) #23, !dbg !16651
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !16653, !srcloc !14800
  br label %26, !dbg !16654

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !16617
  ret i32 %27, !dbg !16655
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16656 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16660, metadata !DIExpression()), !dbg !16668
  call void @llvm.dbg.value(metadata i32 %1, metadata !16661, metadata !DIExpression()), !dbg !16668
  call void @llvm.dbg.value(metadata i8* %2, metadata !16662, metadata !DIExpression()), !dbg !16668
  call void @llvm.dbg.value(metadata i8 0, metadata !16664, metadata !DIExpression()), !dbg !16668
  call void @llvm.dbg.value(metadata i32 0, metadata !16665, metadata !DIExpression()), !dbg !16669
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14759, metadata !DIExpression()) #23, !dbg !16670
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16672, !srcloc !14774
  call void @llvm.dbg.value(metadata i32 undef, metadata !14771, metadata !DIExpression()) #23, !dbg !16674
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #23, !dbg !16674
  call void @llvm.dbg.value(metadata i32 undef, metadata !14765, metadata !DIExpression()) #23, !dbg !16670
  call void @llvm.dbg.value(metadata i32 undef, metadata !16667, metadata !DIExpression()), !dbg !16669
  call void @llvm.dbg.value(metadata i8 poison, metadata !16664, metadata !DIExpression()), !dbg !16668
  call void @llvm.dbg.value(metadata i32 undef, metadata !16665, metadata !DIExpression()), !dbg !16669
  %5 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #24, !dbg !16675
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16663, metadata !DIExpression()), !dbg !16668
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16678
  br i1 %7, label %12, label %8, !dbg !16680

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16681, metadata !DIExpression()), !dbg !16689
  call void @llvm.dbg.value(metadata i32 %1, metadata !16687, metadata !DIExpression()), !dbg !16689
  call void @llvm.dbg.value(metadata i8* %2, metadata !16688, metadata !DIExpression()), !dbg !16689
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16595, metadata !DIExpression()), !dbg !16692
  call void @llvm.dbg.value(metadata i32 %1, metadata !16600, metadata !DIExpression()), !dbg !16692
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !16694
  store i32 %1, i32* %9, align 4, !dbg !16695
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !16696
  store i8* %2, i8** %10, align 4, !dbg !16697
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !16698
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !16699
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #24, !dbg !16700
  call void @llvm.dbg.value(metadata i8 1, metadata !16664, metadata !DIExpression()), !dbg !16668
  br label %12, !dbg !16701

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !16672
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !16672
  call void @llvm.dbg.value(metadata i32 %14, metadata !14771, metadata !DIExpression()) #23, !dbg !16674
  call void @llvm.dbg.value(metadata i32 %14, metadata !14765, metadata !DIExpression()) #23, !dbg !16670
  call void @llvm.dbg.value(metadata i32 %14, metadata !16667, metadata !DIExpression()), !dbg !16669
  call void @llvm.dbg.value(metadata i8 poison, metadata !16664, metadata !DIExpression()), !dbg !16668
  call void @llvm.dbg.value(metadata i32 undef, metadata !14786, metadata !DIExpression()) #23, !dbg !16702
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14791, metadata !DIExpression()) #23, !dbg !16702
  call void @llvm.dbg.value(metadata i32 undef, metadata !14794, metadata !DIExpression()) #23, !dbg !16704
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16706, !srcloc !14800
  call void @llvm.dbg.value(metadata i32 undef, metadata !16665, metadata !DIExpression()), !dbg !16669
  ret i1 %13, !dbg !16707
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16708 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()), !dbg !16719
  call void @llvm.dbg.value(metadata i64 undef, metadata !16716, metadata !DIExpression()), !dbg !16719
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16713, metadata !DIExpression()), !dbg !16719
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16715, metadata !DIExpression()), !dbg !16719
  call void @llvm.dbg.value(metadata i8** %4, metadata !16717, metadata !DIExpression()), !dbg !16719
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !16720
  call void @llvm.dbg.value(metadata i32 %6, metadata !16718, metadata !DIExpression()), !dbg !16719
  %7 = icmp eq i8** %4, null, !dbg !16721
  br i1 %7, label %12, label %8, !dbg !16723

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16724
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16726
  %11 = load i8*, i8** %10, align 4, !dbg !16726
  store i8* %11, i8** %4, align 4, !dbg !16727
  br label %12, !dbg !16728

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16729
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16730 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16732
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16733
  ret void, !dbg !16734
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16735 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16745, metadata !DIExpression()), !dbg !16762
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16743, metadata !DIExpression()), !dbg !16762
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16744, metadata !DIExpression()), !dbg !16762
  %5 = icmp eq i64 %4, -1, !dbg !16763
  br i1 %5, label %55, label %6, !dbg !16765

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16766
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !16767
  call void @llvm.dbg.value(metadata i32 0, metadata !16746, metadata !DIExpression()), !dbg !16768
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16769, metadata !DIExpression()) #23, !dbg !16776
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16778, !srcloc !16784
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !16778
  call void @llvm.dbg.value(metadata i32 %9, metadata !16781, metadata !DIExpression()) #23, !dbg !16785
  call void @llvm.dbg.value(metadata i32 undef, metadata !16782, metadata !DIExpression()) #23, !dbg !16785
  call void @llvm.dbg.value(metadata i32 %9, metadata !16775, metadata !DIExpression()) #23, !dbg !16776
  call void @llvm.dbg.value(metadata i32 %9, metadata !16752, metadata !DIExpression()), !dbg !16768
  call void @llvm.dbg.value(metadata i32 undef, metadata !16746, metadata !DIExpression()), !dbg !16768
  %10 = icmp slt i64 %4, -1, !dbg !16786
  br i1 %10, label %11, label %17, !dbg !16787

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !16788
  %13 = add i64 %4, %12, !dbg !16789
  %14 = sub i64 -2, %13, !dbg !16789
  call void @llvm.dbg.value(metadata i64 %14, metadata !16756, metadata !DIExpression()), !dbg !16790
  %15 = icmp sgt i64 %14, 1, !dbg !16791
  %16 = select i1 %15, i64 %14, i64 1, !dbg !16791
  br label %22, !dbg !16792

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !16793
  %19 = tail call fastcc i32 @elapsed.254() #24, !dbg !16795
  %20 = sext i32 %19 to i64, !dbg !16795
  %21 = add nsw i64 %18, %20, !dbg !16796
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !16797
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16798
  store i64 %23, i64* %24, align 8, !dbg !16799
  %25 = tail call fastcc %struct._timeout* @first() #24, !dbg !16800
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !16753, metadata !DIExpression()), !dbg !16802
  %26 = icmp eq %struct._timeout* %25, null, !dbg !16803
  br i1 %26, label %42, label %27, !dbg !16803

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !16804
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !16753, metadata !DIExpression()), !dbg !16802
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16808
  %31 = load i64, i64* %30, align 8, !dbg !16808
  %32 = icmp slt i64 %28, %31, !dbg !16809
  br i1 %32, label %33, label %38, !dbg !16810

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16808
  %35 = sub nsw i64 %31, %28, !dbg !16811
  store i64 %35, i64* %34, align 8, !dbg !16811
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !16813
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16814
  tail call fastcc void @sys_dlist_insert.255(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #24, !dbg !16815
  br label %44, !dbg !16816

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !16817
  store i64 %39, i64* %24, align 8, !dbg !16817
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #24, !dbg !16818
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !16753, metadata !DIExpression()), !dbg !16802
  %41 = icmp eq %struct._timeout* %40, null, !dbg !16803
  br i1 %41, label %42, label %27, !dbg !16803, !llvm.loop !16819

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16821
  tail call fastcc void @sys_dlist_append.256(%struct._dnode* noundef %43) #24, !dbg !16824
  br label %44, !dbg !16825

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #24, !dbg !16826
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !16827
  br i1 %46, label %47, label %54, !dbg !16828

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #24, !dbg !16829
  call void @llvm.dbg.value(metadata i32 %48, metadata !16759, metadata !DIExpression()), !dbg !16830
  %49 = icmp ne i32 %48, 0, !dbg !16831
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !16833
  br i1 %52, label %54, label %53, !dbg !16833

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !16834
  br label %54, !dbg !16836

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !16837, metadata !DIExpression()) #23, !dbg !16843
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16842, metadata !DIExpression()) #23, !dbg !16843
  call void @llvm.dbg.value(metadata i32 %9, metadata !16845, metadata !DIExpression()) #23, !dbg !16848
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !16850, !srcloc !16851
  call void @llvm.dbg.value(metadata i32 undef, metadata !16746, metadata !DIExpression()), !dbg !16768
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !16852
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.254() unnamed_addr #1 !dbg !16853 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16856
  %2 = icmp eq i32 %1, 0, !dbg !16857
  br i1 %2, label %3, label %5, !dbg !16856

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16858
  br label %5, !dbg !16856

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16856
  ret i32 %6, !dbg !16859
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #10 !dbg !16860 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.259() #24, !dbg !16866
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16864, metadata !DIExpression()), !dbg !16867
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16868
  ret %struct._timeout* %2, !dbg !16869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.255(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !16870 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16874, metadata !DIExpression()), !dbg !16878
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16875, metadata !DIExpression()), !dbg !16878
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16879
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16879
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16876, metadata !DIExpression()), !dbg !16878
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16880
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16881
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16882
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16883
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16884
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16885
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16886
  ret void, !dbg !16887
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #10 !dbg !16888 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16892, metadata !DIExpression()), !dbg !16894
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16895
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.257(%struct._dnode* noundef %2) #24, !dbg !16896
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16893, metadata !DIExpression()), !dbg !16894
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16897
  ret %struct._timeout* %4, !dbg !16898
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.256(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !16899 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16904, metadata !DIExpression()), !dbg !16907
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16905, metadata !DIExpression()), !dbg !16907
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16908
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16906, metadata !DIExpression()), !dbg !16907
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16909
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16910
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16911
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16912
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16913
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16914
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16915
  ret void, !dbg !16916
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16917 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !16922
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16919, metadata !DIExpression()), !dbg !16923
  %2 = tail call fastcc i32 @elapsed.254() #24, !dbg !16924
  call void @llvm.dbg.value(metadata i32 %2, metadata !16920, metadata !DIExpression()), !dbg !16923
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16925
  br i1 %3, label %14, label %4, !dbg !16927

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16928
  %6 = load i64, i64* %5, align 8, !dbg !16928
  %7 = sext i32 %2 to i64, !dbg !16929
  %8 = sub nsw i64 %6, %7, !dbg !16930
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16931
  br i1 %9, label %14, label %10, !dbg !16932

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16933
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16933
  %13 = trunc i64 %12 to i32, !dbg !16933
  call void @llvm.dbg.value(metadata i32 %13, metadata !16921, metadata !DIExpression()), !dbg !16923
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16935
  call void @llvm.dbg.value(metadata i32 %15, metadata !16921, metadata !DIExpression()), !dbg !16923
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16936
  %17 = icmp ne i32 %16, 0, !dbg !16938
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16939
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16939
  call void @llvm.dbg.value(metadata i32 %20, metadata !16921, metadata !DIExpression()), !dbg !16923
  ret i32 %20, !dbg !16940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.257(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16941 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16945, metadata !DIExpression()), !dbg !16947
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16946, metadata !DIExpression()), !dbg !16947
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16948
  br i1 %2, label %5, label %3, !dbg !16949

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.258(%struct._dnode* noundef nonnull %0) #24, !dbg !16950
  br label %5, !dbg !16949

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16949
  ret %struct._dnode* %6, !dbg !16951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.258(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16952 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16954, metadata !DIExpression()), !dbg !16956
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16955, metadata !DIExpression()), !dbg !16956
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16957
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16958
  br i1 %3, label %7, label %4, !dbg !16959

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16960
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16960
  br label %7, !dbg !16959

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16959
  ret %struct._dnode* %8, !dbg !16961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.259() unnamed_addr #10 !dbg !16962 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16966, metadata !DIExpression()), !dbg !16967
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.260() #24, !dbg !16968
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16968
  ret %struct._dnode* %3, !dbg !16969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.260() unnamed_addr #10 !dbg !16970 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16974, metadata !DIExpression()), !dbg !16975
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16976
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16977
  ret i1 %2, !dbg !16978
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16979 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16983, metadata !DIExpression()), !dbg !16988
  call void @llvm.dbg.value(metadata i32 -22, metadata !16984, metadata !DIExpression()), !dbg !16988
  call void @llvm.dbg.value(metadata i32 0, metadata !16985, metadata !DIExpression()), !dbg !16989
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16769, metadata !DIExpression()) #23, !dbg !16990
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16992, !srcloc !16784
  call void @llvm.dbg.value(metadata i32 undef, metadata !16781, metadata !DIExpression()) #23, !dbg !16994
  call void @llvm.dbg.value(metadata i32 undef, metadata !16782, metadata !DIExpression()) #23, !dbg !16994
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !16990
  call void @llvm.dbg.value(metadata i32 undef, metadata !16987, metadata !DIExpression()), !dbg !16989
  call void @llvm.dbg.value(metadata i32 -22, metadata !16984, metadata !DIExpression()), !dbg !16988
  call void @llvm.dbg.value(metadata i32 undef, metadata !16985, metadata !DIExpression()), !dbg !16989
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16984, metadata !DIExpression()), !dbg !16988
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.263(%struct._dnode* noundef %3) #24, !dbg !16995
  br i1 %4, label %5, label %6, !dbg !16999

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !17000
  call void @llvm.dbg.value(metadata i32 0, metadata !16984, metadata !DIExpression()), !dbg !16988
  br label %6, !dbg !17002

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !16988
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16992
  call void @llvm.dbg.value(metadata i32 %8, metadata !16781, metadata !DIExpression()) #23, !dbg !16994
  call void @llvm.dbg.value(metadata i32 %8, metadata !16775, metadata !DIExpression()) #23, !dbg !16990
  call void @llvm.dbg.value(metadata i32 %8, metadata !16987, metadata !DIExpression()), !dbg !16989
  call void @llvm.dbg.value(metadata i32 %7, metadata !16984, metadata !DIExpression()), !dbg !16988
  call void @llvm.dbg.value(metadata i32 undef, metadata !16837, metadata !DIExpression()) #23, !dbg !17003
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16842, metadata !DIExpression()) #23, !dbg !17003
  call void @llvm.dbg.value(metadata i32 undef, metadata !16845, metadata !DIExpression()) #23, !dbg !17005
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !17007, !srcloc !16851
  call void @llvm.dbg.value(metadata i32 undef, metadata !16985, metadata !DIExpression()), !dbg !16989
  ret i32 %7, !dbg !17008
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.263(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17009 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17015, metadata !DIExpression()), !dbg !17016
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17017
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17017
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17018
  ret i1 %4, !dbg !17019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #11 !dbg !17020 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17022, metadata !DIExpression()), !dbg !17023
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !17024
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17026
  br i1 %3, label %10, label %4, !dbg !17027

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17028
  %6 = load i64, i64* %5, align 8, !dbg !17028
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17030
  %8 = load i64, i64* %7, align 8, !dbg !17031
  %9 = add nsw i64 %8, %6, !dbg !17031
  store i64 %9, i64* %7, align 8, !dbg !17031
  br label %10, !dbg !17032

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17033
  tail call fastcc void @sys_dlist_remove.264(%struct._dnode* noundef %11) #24, !dbg !17034
  ret void, !dbg !17035
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.264(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !17036 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17040, metadata !DIExpression()), !dbg !17043
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17044
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17044
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17041, metadata !DIExpression()), !dbg !17043
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17045
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17045
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17042, metadata !DIExpression()), !dbg !17043
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17046
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17047
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17048
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17049
  tail call fastcc void @sys_dnode_init.265(%struct._dnode* noundef %0) #24, !dbg !17050
  ret void, !dbg !17051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.265(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !17052 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17054, metadata !DIExpression()), !dbg !17055
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17056
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17057
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17058
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17059
  ret void, !dbg !17060
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17061 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17067, metadata !DIExpression()), !dbg !17072
  call void @llvm.dbg.value(metadata i64 0, metadata !17068, metadata !DIExpression()), !dbg !17072
  call void @llvm.dbg.value(metadata i32 0, metadata !17069, metadata !DIExpression()), !dbg !17073
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16769, metadata !DIExpression()) #23, !dbg !17074
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17076, !srcloc !16784
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17076
  call void @llvm.dbg.value(metadata i32 %3, metadata !16781, metadata !DIExpression()) #23, !dbg !17078
  call void @llvm.dbg.value(metadata i32 undef, metadata !16782, metadata !DIExpression()) #23, !dbg !17078
  call void @llvm.dbg.value(metadata i32 %3, metadata !16775, metadata !DIExpression()) #23, !dbg !17074
  call void @llvm.dbg.value(metadata i32 %3, metadata !17071, metadata !DIExpression()), !dbg !17073
  call void @llvm.dbg.value(metadata i64 0, metadata !17068, metadata !DIExpression()), !dbg !17072
  call void @llvm.dbg.value(metadata i32 undef, metadata !17069, metadata !DIExpression()), !dbg !17073
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17079
  call void @llvm.dbg.value(metadata i64 %4, metadata !17068, metadata !DIExpression()), !dbg !17072
  call void @llvm.dbg.value(metadata i32 %3, metadata !16837, metadata !DIExpression()) #23, !dbg !17082
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16842, metadata !DIExpression()) #23, !dbg !17082
  call void @llvm.dbg.value(metadata i32 %3, metadata !16845, metadata !DIExpression()) #23, !dbg !17084
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !17086, !srcloc !16851
  call void @llvm.dbg.value(metadata i32 undef, metadata !17069, metadata !DIExpression()), !dbg !17073
  ret i64 %4, !dbg !17087
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17088 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17090, metadata !DIExpression()), !dbg !17094
  call void @llvm.dbg.value(metadata i64 0, metadata !17091, metadata !DIExpression()), !dbg !17094
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.266(%struct._timeout* noundef %0) #24, !dbg !17095
  br i1 %2, label %21, label %3, !dbg !17097

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17098
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17092, metadata !DIExpression()), !dbg !17099
  call void @llvm.dbg.value(metadata i64 0, metadata !17091, metadata !DIExpression()), !dbg !17094
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17100
  br i1 %5, label %16, label %6, !dbg !17102

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17092, metadata !DIExpression()), !dbg !17099
  call void @llvm.dbg.value(metadata i64 %8, metadata !17091, metadata !DIExpression()), !dbg !17094
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17103
  %10 = load i64, i64* %9, align 8, !dbg !17103
  %11 = add nsw i64 %10, %8, !dbg !17105
  call void @llvm.dbg.value(metadata i64 %11, metadata !17091, metadata !DIExpression()), !dbg !17094
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17106
  br i1 %12, label %16, label %13, !dbg !17108

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17109
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17092, metadata !DIExpression()), !dbg !17099
  call void @llvm.dbg.value(metadata i64 %11, metadata !17091, metadata !DIExpression()), !dbg !17094
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17100
  br i1 %15, label %16, label %6, !dbg !17102, !llvm.loop !17110

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17094
  call void @llvm.dbg.value(metadata i64 %17, metadata !17091, metadata !DIExpression()), !dbg !17094
  %18 = tail call fastcc i32 @elapsed.254() #24, !dbg !17112
  %19 = sext i32 %18 to i64, !dbg !17112
  %20 = sub nsw i64 %17, %19, !dbg !17113
  br label %21, !dbg !17114

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17094
  ret i64 %22, !dbg !17115
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.266(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17116 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17120, metadata !DIExpression()), !dbg !17121
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17122
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.263(%struct._dnode* noundef %2) #24, !dbg !17123
  %4 = xor i1 %3, true, !dbg !17124
  ret i1 %4, !dbg !17125
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17126 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17128, metadata !DIExpression()), !dbg !17133
  call void @llvm.dbg.value(metadata i64 0, metadata !17129, metadata !DIExpression()), !dbg !17133
  call void @llvm.dbg.value(metadata i32 0, metadata !17130, metadata !DIExpression()), !dbg !17134
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16769, metadata !DIExpression()) #23, !dbg !17135
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17137, !srcloc !16784
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17137
  call void @llvm.dbg.value(metadata i32 %3, metadata !16781, metadata !DIExpression()) #23, !dbg !17139
  call void @llvm.dbg.value(metadata i32 undef, metadata !16782, metadata !DIExpression()) #23, !dbg !17139
  call void @llvm.dbg.value(metadata i32 %3, metadata !16775, metadata !DIExpression()) #23, !dbg !17135
  call void @llvm.dbg.value(metadata i32 %3, metadata !17132, metadata !DIExpression()), !dbg !17134
  call void @llvm.dbg.value(metadata i64 0, metadata !17129, metadata !DIExpression()), !dbg !17133
  call void @llvm.dbg.value(metadata i32 undef, metadata !17130, metadata !DIExpression()), !dbg !17134
  %4 = load i64, i64* @curr_tick, align 8, !dbg !17140
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17143
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !17129, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17133
  call void @llvm.dbg.value(metadata i32 %3, metadata !16837, metadata !DIExpression()) #23, !dbg !17144
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16842, metadata !DIExpression()) #23, !dbg !17144
  call void @llvm.dbg.value(metadata i32 %3, metadata !16845, metadata !DIExpression()) #23, !dbg !17146
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !17148, !srcloc !16851
  call void @llvm.dbg.value(metadata i32 undef, metadata !17130, metadata !DIExpression()), !dbg !17134
  %6 = add i64 %5, %4, !dbg !17149
  ret i64 %6, !dbg !17150
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17151 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17153, metadata !DIExpression()), !dbg !17157
  call void @llvm.dbg.value(metadata i32 0, metadata !17154, metadata !DIExpression()), !dbg !17158
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16769, metadata !DIExpression()) #23, !dbg !17159
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17161, !srcloc !16784
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17161
  call void @llvm.dbg.value(metadata i32 %2, metadata !16781, metadata !DIExpression()) #23, !dbg !17163
  call void @llvm.dbg.value(metadata i32 undef, metadata !16782, metadata !DIExpression()) #23, !dbg !17163
  call void @llvm.dbg.value(metadata i32 %2, metadata !16775, metadata !DIExpression()) #23, !dbg !17159
  call void @llvm.dbg.value(metadata i32 %2, metadata !17156, metadata !DIExpression()), !dbg !17158
  call void @llvm.dbg.value(metadata i32 -1, metadata !17153, metadata !DIExpression()), !dbg !17157
  call void @llvm.dbg.value(metadata i32 undef, metadata !17154, metadata !DIExpression()), !dbg !17158
  %3 = tail call fastcc i32 @next_timeout() #24, !dbg !17164
  call void @llvm.dbg.value(metadata i32 %3, metadata !17153, metadata !DIExpression()), !dbg !17157
  call void @llvm.dbg.value(metadata i32 %2, metadata !16837, metadata !DIExpression()) #23, !dbg !17167
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16842, metadata !DIExpression()) #23, !dbg !17167
  call void @llvm.dbg.value(metadata i32 %2, metadata !16845, metadata !DIExpression()) #23, !dbg !17169
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !17171, !srcloc !16851
  call void @llvm.dbg.value(metadata i32 undef, metadata !17154, metadata !DIExpression()), !dbg !17158
  ret i32 %3, !dbg !17172
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17175, metadata !DIExpression()), !dbg !17185
  call void @llvm.dbg.value(metadata i1 %1, metadata !17176, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17185
  call void @llvm.dbg.value(metadata i32 0, metadata !17177, metadata !DIExpression()), !dbg !17186
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16769, metadata !DIExpression()) #23, !dbg !17187
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17189, !srcloc !16784
  call void @llvm.dbg.value(metadata i32 undef, metadata !16781, metadata !DIExpression()) #23, !dbg !17191
  call void @llvm.dbg.value(metadata i32 undef, metadata !16782, metadata !DIExpression()) #23, !dbg !17191
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !17187
  call void @llvm.dbg.value(metadata i32 undef, metadata !17179, metadata !DIExpression()), !dbg !17186
  call void @llvm.dbg.value(metadata i32 undef, metadata !17177, metadata !DIExpression()), !dbg !17186
  %4 = tail call fastcc i32 @next_timeout() #24, !dbg !17192
  call void @llvm.dbg.value(metadata i32 %4, metadata !17180, metadata !DIExpression()), !dbg !17193
  call void @llvm.dbg.value(metadata i1 undef, metadata !17183, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17193
  %5 = icmp slt i32 %4, 2, !dbg !17194
  call void @llvm.dbg.value(metadata i1 %5, metadata !17184, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17193
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !17195
  call void @llvm.dbg.value(metadata i1 %6, metadata !17183, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17193
  br i1 %7, label %11, label %8, !dbg !17195

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !17197
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !17197
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !17199
  br label %11, !dbg !17200

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !17189
  call void @llvm.dbg.value(metadata i32 %12, metadata !16781, metadata !DIExpression()) #23, !dbg !17191
  call void @llvm.dbg.value(metadata i32 %12, metadata !16775, metadata !DIExpression()) #23, !dbg !17187
  call void @llvm.dbg.value(metadata i32 %12, metadata !17179, metadata !DIExpression()), !dbg !17186
  call void @llvm.dbg.value(metadata i32 undef, metadata !16837, metadata !DIExpression()) #23, !dbg !17201
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16842, metadata !DIExpression()) #23, !dbg !17201
  call void @llvm.dbg.value(metadata i32 undef, metadata !16845, metadata !DIExpression()) #23, !dbg !17203
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17205, !srcloc !16851
  call void @llvm.dbg.value(metadata i32 1, metadata !17177, metadata !DIExpression()), !dbg !17186
  call void @llvm.dbg.value(metadata i32 undef, metadata !17177, metadata !DIExpression()), !dbg !17186
  ret void, !dbg !17206
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17207 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17211, metadata !DIExpression()), !dbg !17216
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17217
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16769, metadata !DIExpression()) #23, !dbg !17218
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17220, !srcloc !16784
  call void @llvm.dbg.value(metadata i32 undef, metadata !16781, metadata !DIExpression()) #23, !dbg !17222
  call void @llvm.dbg.value(metadata i32 undef, metadata !16782, metadata !DIExpression()) #23, !dbg !17222
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !17218
  call void @llvm.dbg.value(metadata i32 undef, metadata !17212, metadata !DIExpression()), !dbg !17216
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17216
  call void @llvm.dbg.value(metadata i32 undef, metadata !17212, metadata !DIExpression()), !dbg !17216
  %3 = tail call fastcc %struct._timeout* @first() #24, !dbg !17223
  %4 = icmp eq %struct._timeout* %3, null, !dbg !17224
  br i1 %4, label %28, label %5, !dbg !17225

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !17226
  %10 = load i64, i64* %9, align 8, !dbg !17226
  %11 = sext i32 %8 to i64, !dbg !17227
  %12 = icmp sgt i64 %10, %11, !dbg !17228
  br i1 %12, label %26, label %13, !dbg !17229

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !17216
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !17213, metadata !DIExpression()), !dbg !17230
  %15 = trunc i64 %10 to i32, !dbg !17231
  call void @llvm.dbg.value(metadata i32 %15, metadata !17215, metadata !DIExpression()), !dbg !17230
  %16 = sext i32 %15 to i64, !dbg !17232
  %17 = load i64, i64* @curr_tick, align 8, !dbg !17233
  %18 = add i64 %17, %16, !dbg !17233
  store i64 %18, i64* @curr_tick, align 8, !dbg !17233
  store i64 0, i64* %9, align 8, !dbg !17234
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #24, !dbg !17235
  call void @llvm.dbg.value(metadata i32 %14, metadata !16837, metadata !DIExpression()) #23, !dbg !17236
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16842, metadata !DIExpression()) #23, !dbg !17236
  call void @llvm.dbg.value(metadata i32 %14, metadata !16845, metadata !DIExpression()) #23, !dbg !17238
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17240, !srcloc !16851
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !17241
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !17241
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !17242
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16769, metadata !DIExpression()) #23, !dbg !17243
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17245, !srcloc !16784
  call void @llvm.dbg.value(metadata i32 undef, metadata !16781, metadata !DIExpression()) #23, !dbg !17247
  call void @llvm.dbg.value(metadata i32 undef, metadata !16782, metadata !DIExpression()) #23, !dbg !17247
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !17243
  call void @llvm.dbg.value(metadata i32 undef, metadata !17212, metadata !DIExpression()), !dbg !17216
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !17248
  %23 = sub nsw i32 %22, %15, !dbg !17248
  store i32 %23, i32* @announce_remaining, align 4, !dbg !17216
  call void @llvm.dbg.value(metadata i32 undef, metadata !17212, metadata !DIExpression()), !dbg !17216
  %24 = tail call fastcc %struct._timeout* @first() #24, !dbg !17223
  %25 = icmp eq %struct._timeout* %24, null, !dbg !17224
  br i1 %25, label %28, label %5, !dbg !17225, !llvm.loop !17249

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !17251
  store i64 %27, i64* %9, align 8, !dbg !17251
  br label %32, !dbg !17254

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !17216
  %31 = sext i32 %30 to i64, !dbg !17255
  br label %32, !dbg !17255

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !17255
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !17216
  %36 = load i64, i64* @curr_tick, align 8, !dbg !17256
  %37 = add i64 %36, %33, !dbg !17256
  store i64 %37, i64* @curr_tick, align 8, !dbg !17256
  store i32 0, i32* @announce_remaining, align 4, !dbg !17257
  %38 = tail call fastcc i32 @next_timeout() #24, !dbg !17258
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !17259
  call void @llvm.dbg.value(metadata i32 %35, metadata !16837, metadata !DIExpression()) #23, !dbg !17260
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16842, metadata !DIExpression()) #23, !dbg !17260
  call void @llvm.dbg.value(metadata i32 %35, metadata !16845, metadata !DIExpression()) #23, !dbg !17262
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !17264, !srcloc !16851
  ret void, !dbg !17265
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17266 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17270, metadata !DIExpression()), !dbg !17274
  call void @llvm.dbg.value(metadata i32 0, metadata !17271, metadata !DIExpression()), !dbg !17275
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16769, metadata !DIExpression()) #23, !dbg !17276
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17278, !srcloc !16784
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17278
  call void @llvm.dbg.value(metadata i32 %2, metadata !16781, metadata !DIExpression()) #23, !dbg !17280
  call void @llvm.dbg.value(metadata i32 undef, metadata !16782, metadata !DIExpression()) #23, !dbg !17280
  call void @llvm.dbg.value(metadata i32 %2, metadata !16775, metadata !DIExpression()) #23, !dbg !17276
  call void @llvm.dbg.value(metadata i32 %2, metadata !17273, metadata !DIExpression()), !dbg !17275
  call void @llvm.dbg.value(metadata i64 0, metadata !17270, metadata !DIExpression()), !dbg !17274
  call void @llvm.dbg.value(metadata i32 undef, metadata !17271, metadata !DIExpression()), !dbg !17275
  %3 = load i64, i64* @curr_tick, align 8, !dbg !17281
  %4 = tail call fastcc i32 @elapsed.254() #24, !dbg !17284
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !17270, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17274
  call void @llvm.dbg.value(metadata i32 %2, metadata !16837, metadata !DIExpression()) #23, !dbg !17285
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16842, metadata !DIExpression()) #23, !dbg !17285
  call void @llvm.dbg.value(metadata i32 %2, metadata !16845, metadata !DIExpression()) #23, !dbg !17287
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !17289, !srcloc !16851
  call void @llvm.dbg.value(metadata i32 undef, metadata !17271, metadata !DIExpression()), !dbg !17275
  %5 = sext i32 %4 to i64, !dbg !17284
  %6 = add i64 %3, %5, !dbg !17290
  ret i64 %6, !dbg !17291
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17292 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17293
  %2 = trunc i64 %1 to i32, !dbg !17294
  ret i32 %2, !dbg !17295
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17296 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17297
  ret i64 %1, !dbg !17298
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17299 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17301, metadata !DIExpression()), !dbg !17308
  %2 = icmp eq i32 %0, 0, !dbg !17309
  br i1 %2, label %10, label %3, !dbg !17311

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17312
  call void @llvm.dbg.value(metadata i32 %4, metadata !17302, metadata !DIExpression()), !dbg !17308
  %5 = mul i32 %0, 84, !dbg !17313
  call void @llvm.dbg.value(metadata i32 %5, metadata !17303, metadata !DIExpression()), !dbg !17308
  br label %6, !dbg !17314

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17315
  call void @llvm.dbg.value(metadata i32 %7, metadata !17304, metadata !DIExpression()), !dbg !17316
  %8 = sub i32 %7, %4, !dbg !17317
  %9 = icmp ult i32 %8, %5, !dbg !17319
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17320
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17321 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !17322
  ret i32 %1, !dbg !17323
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17324 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17326
  ret i32 %1, !dbg !17327
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17328 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17332, metadata !DIExpression()), !dbg !17334
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17335

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17336
  br label %14, !dbg !17340

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17333, metadata !DIExpression()), !dbg !17334
  %6 = icmp slt i64 %2, -1, !dbg !17341
  br i1 %6, label %7, label %9, !dbg !17344

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17345
  br label %14, !dbg !17346

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17348
  %11 = icmp ugt i64 %2, 1, !dbg !17349
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17349
  %13 = add nsw i64 %10, %12, !dbg !17350
  br label %14, !dbg !17351

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17352
  ret i64 %15, !dbg !17353
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_timer_expiration_handler(%struct._timeout* noundef %0) #1 !dbg !17354 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17356, metadata !DIExpression()), !dbg !17367
  %2 = bitcast %struct._timeout* %0 to %struct.k_timer*, !dbg !17368
  call void @llvm.dbg.value(metadata %struct.k_timer* %2, metadata !17357, metadata !DIExpression()), !dbg !17367
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17369, metadata !DIExpression()) #23, !dbg !17376
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17378, !srcloc !17384
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17378
  call void @llvm.dbg.value(metadata i32 %4, metadata !17381, metadata !DIExpression()) #23, !dbg !17385
  call void @llvm.dbg.value(metadata i32 undef, metadata !17382, metadata !DIExpression()) #23, !dbg !17385
  call void @llvm.dbg.value(metadata i32 %4, metadata !17375, metadata !DIExpression()) #23, !dbg !17376
  call void @llvm.dbg.value(metadata i32 %4, metadata !17359, metadata !DIExpression()), !dbg !17367
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 1, i32 2, !dbg !17386
  %6 = load i64, i64* %5, align 8, !dbg !17386
  switch i64 %6, label %7 [
    i64 0, label %21
    i64 -1, label %21
  ], !dbg !17387

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 undef, metadata !17364, metadata !DIExpression()), !dbg !17388
  %8 = tail call fastcc i64 @k_uptime_ticks() #24, !dbg !17389
  %9 = add nsw i64 %8, 1, !dbg !17389
  %10 = load i64, i64* %5, align 8, !dbg !17389
  %11 = add nsw i64 %9, %10, !dbg !17389
  %12 = icmp sgt i64 %11, 0, !dbg !17389
  br i1 %12, label %13, label %18, !dbg !17389

13:                                               ; preds = %7
  %14 = tail call fastcc i64 @k_uptime_ticks() #24, !dbg !17389
  %15 = load i64, i64* %5, align 8, !dbg !17389
  %16 = add i64 %14, %15, !dbg !17389
  %17 = sub i64 -3, %16, !dbg !17389
  br label %18, !dbg !17389

18:                                               ; preds = %7, %13
  %19 = phi i64 [ %17, %13 ], [ -2, %7 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !17364, metadata !DIExpression()), !dbg !17388
  %20 = insertvalue [1 x i64] poison, i64 %19, 0, !dbg !17390
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %0, void (%struct._timeout*)* noundef nonnull @z_timer_expiration_handler, [1 x i64] %20) #25, !dbg !17390
  br label %21, !dbg !17391

21:                                               ; preds = %1, %1, %18
  %22 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 2, !dbg !17392
  %23 = bitcast %struct._timeout* %22 to i32*, !dbg !17392
  %24 = load i32, i32* %23, align 8, !dbg !17393
  %25 = add i32 %24, 1, !dbg !17393
  store i32 %25, i32* %23, align 8, !dbg !17393
  %26 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 1, i32 1, !dbg !17394
  %27 = bitcast void (%struct._timeout*)** %26 to void (%struct.k_timer*)**, !dbg !17394
  %28 = load void (%struct.k_timer*)*, void (%struct.k_timer*)** %27, align 8, !dbg !17394
  %29 = icmp eq void (%struct.k_timer*)* %28, null, !dbg !17396
  br i1 %29, label %34, label %30, !dbg !17397

30:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 %4, metadata !17398, metadata !DIExpression()) #23, !dbg !17404
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17403, metadata !DIExpression()) #23, !dbg !17404
  call void @llvm.dbg.value(metadata i32 %4, metadata !17407, metadata !DIExpression()) #23, !dbg !17410
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !17412, !srcloc !17413
  %31 = load void (%struct.k_timer*)*, void (%struct.k_timer*)** %27, align 8, !dbg !17414
  tail call void %31(%struct.k_timer* noundef nonnull %2) #25, !dbg !17415
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17369, metadata !DIExpression()) #23, !dbg !17416
  %32 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17418, !srcloc !17384
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !17418
  call void @llvm.dbg.value(metadata i32 %33, metadata !17381, metadata !DIExpression()) #23, !dbg !17420
  call void @llvm.dbg.value(metadata i32 undef, metadata !17382, metadata !DIExpression()) #23, !dbg !17420
  call void @llvm.dbg.value(metadata i32 %33, metadata !17375, metadata !DIExpression()) #23, !dbg !17416
  call void @llvm.dbg.value(metadata i32 %33, metadata !17359, metadata !DIExpression()), !dbg !17367
  br label %34, !dbg !17421

34:                                               ; preds = %30, %21
  %35 = phi i32 [ %33, %30 ], [ %4, %21 ], !dbg !17367
  call void @llvm.dbg.value(metadata i32 %35, metadata !17359, metadata !DIExpression()), !dbg !17367
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 1, !dbg !17422
  %37 = bitcast %struct._timeout* %36 to %struct._wait_q_t*, !dbg !17422
  %38 = tail call fastcc %struct.k_thread* @z_waitq_head.273(%struct._wait_q_t* noundef nonnull %37) #24, !dbg !17423
  call void @llvm.dbg.value(metadata %struct.k_thread* %38, metadata !17358, metadata !DIExpression()), !dbg !17367
  %39 = icmp eq %struct.k_thread* %38, null, !dbg !17424
  br i1 %39, label %40, label %41, !dbg !17426

40:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %35, metadata !17398, metadata !DIExpression()) #23, !dbg !17427
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17403, metadata !DIExpression()) #23, !dbg !17427
  call void @llvm.dbg.value(metadata i32 %35, metadata !17407, metadata !DIExpression()) #23, !dbg !17430
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !17432, !srcloc !17413
  br label %43, !dbg !17433

41:                                               ; preds = %34
  tail call void @z_unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %38) #25, !dbg !17434
  call void @llvm.dbg.value(metadata %struct.k_thread* %38, metadata !17435, metadata !DIExpression()), !dbg !17441
  call void @llvm.dbg.value(metadata i32 0, metadata !17440, metadata !DIExpression()), !dbg !17441
  %42 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %38, i32 0, i32 7, i32 1, !dbg !17443
  store i32 0, i32* %42, align 4, !dbg !17444
  call void @llvm.dbg.value(metadata i32 %35, metadata !17398, metadata !DIExpression()) #23, !dbg !17445
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17403, metadata !DIExpression()) #23, !dbg !17445
  call void @llvm.dbg.value(metadata i32 %35, metadata !17407, metadata !DIExpression()) #23, !dbg !17447
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !17449, !srcloc !17413
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %38) #25, !dbg !17450
  br label %43, !dbg !17451

43:                                               ; preds = %41, %40
  ret void, !dbg !17451
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_ticks() unnamed_addr #1 !dbg !17452 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !17453, !srcloc !17455
  %1 = tail call i64 @z_impl_k_uptime_ticks() #25, !dbg !17456
  ret i64 %1, !dbg !17457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.273(%struct._wait_q_t* noundef readonly %0) unnamed_addr #10 !dbg !17458 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17462, metadata !DIExpression()), !dbg !17463
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17464
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.274(%struct._dnode* noundef %2) #24, !dbg !17465
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17466
  ret %struct.k_thread* %4, !dbg !17467
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.274(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !17468 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17473, metadata !DIExpression()), !dbg !17474
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.275(%struct._dnode* noundef %0) #24, !dbg !17475
  br i1 %2, label %6, label %3, !dbg !17475

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17476
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17476
  br label %6, !dbg !17475

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !17475
  ret %struct._dnode* %7, !dbg !17477
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.275(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !17478 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17482, metadata !DIExpression()), !dbg !17483
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17484
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17484
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !17485
  ret i1 %4, !dbg !17486
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_timer_init(%struct.k_timer* noundef %0, void (%struct.k_timer*)* noundef %1, void (%struct.k_timer*)* noundef %2) local_unnamed_addr #6 !dbg !17487 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17493, metadata !DIExpression()), !dbg !17496
  call void @llvm.dbg.value(metadata void (%struct.k_timer*)* %1, metadata !17494, metadata !DIExpression()), !dbg !17496
  call void @llvm.dbg.value(metadata void (%struct.k_timer*)* %2, metadata !17495, metadata !DIExpression()), !dbg !17496
  %4 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 2, !dbg !17497
  store void (%struct.k_timer*)* %1, void (%struct.k_timer*)** %4, align 8, !dbg !17498
  %5 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 3, !dbg !17499
  store void (%struct.k_timer*)* %2, void (%struct.k_timer*)** %5, align 4, !dbg !17500
  %6 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17501
  store i32 0, i32* %6, align 8, !dbg !17502
  %7 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 1, !dbg !17503
  tail call fastcc void @z_waitq_init.278(%struct._wait_q_t* noundef nonnull %7) #24, !dbg !17506
  %8 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17507
  tail call fastcc void @z_init_timeout.279(%struct._timeout* noundef %8) #24, !dbg !17508
  %9 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 6, !dbg !17509
  store i8* null, i8** %9, align 4, !dbg !17510
  ret void, !dbg !17511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.278(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !17512 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17516, metadata !DIExpression()), !dbg !17517
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17518
  tail call fastcc void @sys_dlist_init.281(%struct._dnode* noundef %2) #24, !dbg !17519
  ret void, !dbg !17520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout.279(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !17521 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17523, metadata !DIExpression()), !dbg !17524
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17525
  tail call fastcc void @sys_dnode_init.280(%struct._dnode* noundef %2) #24, !dbg !17526
  ret void, !dbg !17527
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.280(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !17528 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17532, metadata !DIExpression()), !dbg !17533
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17534
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17535
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17536
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17537
  ret void, !dbg !17538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.281(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !17539 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17543, metadata !DIExpression()), !dbg !17544
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17545
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17546
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17547
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17548
  ret void, !dbg !17549
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_timer_start(%struct.k_timer* noundef %0, [1 x i64] %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17550 {
  %4 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17555, metadata !DIExpression()), !dbg !17557
  %5 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17556, metadata !DIExpression()), !dbg !17557
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17554, metadata !DIExpression()), !dbg !17557
  %6 = icmp eq i64 %4, -1, !dbg !17558
  br i1 %6, label %23, label %7, !dbg !17560

7:                                                ; preds = %3
  %8 = icmp sgt i64 %5, 0, !dbg !17561
  %9 = icmp sgt i64 %5, 2, !dbg !17561
  %10 = select i1 %9, i64 %5, i64 2, !dbg !17561
  %11 = add nsw i64 %10, -1, !dbg !17561
  %12 = select i1 %8, i64 %11, i64 %5, !dbg !17561
  call void @llvm.dbg.value(metadata i64 %12, metadata !17556, metadata !DIExpression()), !dbg !17557
  %13 = icmp sgt i64 %4, -2, !dbg !17563
  %14 = icmp sgt i64 %4, 1, !dbg !17565
  %15 = select i1 %14, i64 %4, i64 1, !dbg !17565
  %16 = add nsw i64 %15, -1, !dbg !17565
  %17 = select i1 %13, i64 %16, i64 %4, !dbg !17565
  call void @llvm.dbg.value(metadata i64 %17, metadata !17555, metadata !DIExpression()), !dbg !17557
  %18 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17566
  %19 = tail call i32 @z_abort_timeout(%struct._timeout* noundef %18) #25, !dbg !17567
  %20 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 4, i32 0, !dbg !17568
  store i64 %12, i64* %20, align 8, !dbg !17568
  %21 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17569
  store i32 0, i32* %21, align 8, !dbg !17570
  %22 = insertvalue [1 x i64] poison, i64 %17, 0, !dbg !17571
  tail call void @z_add_timeout(%struct._timeout* noundef %18, void (%struct._timeout*)* noundef nonnull @z_timer_expiration_handler, [1 x i64] %22) #25, !dbg !17571
  br label %23, !dbg !17572

23:                                               ; preds = %3, %7
  ret void, !dbg !17572
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_timer_stop(%struct.k_timer* noundef %0) local_unnamed_addr #1 !dbg !17573 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17575, metadata !DIExpression()), !dbg !17580
  %2 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17581
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef %2) #25, !dbg !17582
  %4 = icmp eq i32 %3, 0, !dbg !17583
  call void @llvm.dbg.value(metadata i1 %4, metadata !17576, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17580
  br i1 %4, label %5, label %15, !dbg !17584

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 3, !dbg !17585
  %7 = load void (%struct.k_timer*)*, void (%struct.k_timer*)** %6, align 4, !dbg !17585
  %8 = icmp eq void (%struct.k_timer*)* %7, null, !dbg !17587
  br i1 %8, label %10, label %9, !dbg !17588

9:                                                ; preds = %5
  tail call void %7(%struct.k_timer* noundef nonnull %0) #25, !dbg !17589
  br label %10, !dbg !17591

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 1, !dbg !17592
  %12 = tail call %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef nonnull %11) #25, !dbg !17593
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !17577, metadata !DIExpression()), !dbg !17594
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !17595
  br i1 %13, label %15, label %14, !dbg !17597

14:                                               ; preds = %10
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %12) #25, !dbg !17598
  tail call fastcc void @z_reschedule_unlocked.284() #24, !dbg !17600
  br label %15, !dbg !17601

15:                                               ; preds = %10, %14, %1
  ret void, !dbg !17602
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked.284() unnamed_addr #1 !dbg !17603 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17604, !srcloc !17384
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17604
  call void @llvm.dbg.value(metadata i32 %2, metadata !17381, metadata !DIExpression()) #23, !dbg !17606
  call void @llvm.dbg.value(metadata i32 undef, metadata !17382, metadata !DIExpression()) #23, !dbg !17606
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !17607
  ret void, !dbg !17608
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_timer_status_get(%struct.k_timer* nocapture noundef %0) local_unnamed_addr #1 !dbg !17609 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17613, metadata !DIExpression()), !dbg !17616
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17369, metadata !DIExpression()) #23, !dbg !17617
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17619, !srcloc !17384
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17619
  call void @llvm.dbg.value(metadata i32 %3, metadata !17381, metadata !DIExpression()) #23, !dbg !17621
  call void @llvm.dbg.value(metadata i32 undef, metadata !17382, metadata !DIExpression()) #23, !dbg !17621
  call void @llvm.dbg.value(metadata i32 %3, metadata !17375, metadata !DIExpression()) #23, !dbg !17617
  call void @llvm.dbg.value(metadata i32 %3, metadata !17614, metadata !DIExpression()), !dbg !17616
  %4 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17622
  %5 = load i32, i32* %4, align 8, !dbg !17622
  call void @llvm.dbg.value(metadata i32 %5, metadata !17615, metadata !DIExpression()), !dbg !17616
  store i32 0, i32* %4, align 8, !dbg !17623
  call void @llvm.dbg.value(metadata i32 %3, metadata !17398, metadata !DIExpression()) #23, !dbg !17624
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17403, metadata !DIExpression()) #23, !dbg !17624
  call void @llvm.dbg.value(metadata i32 %3, metadata !17407, metadata !DIExpression()) #23, !dbg !17626
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !17628, !srcloc !17413
  ret i32 %5, !dbg !17629
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_timer_status_sync(%struct.k_timer* noundef %0) local_unnamed_addr #1 !dbg !17630 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17632, metadata !DIExpression()), !dbg !17635
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17369, metadata !DIExpression()) #23, !dbg !17636
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17638, !srcloc !17384
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17638
  call void @llvm.dbg.value(metadata i32 %3, metadata !17381, metadata !DIExpression()) #23, !dbg !17640
  call void @llvm.dbg.value(metadata i32 undef, metadata !17382, metadata !DIExpression()) #23, !dbg !17640
  call void @llvm.dbg.value(metadata i32 %3, metadata !17375, metadata !DIExpression()) #23, !dbg !17636
  call void @llvm.dbg.value(metadata i32 %3, metadata !17633, metadata !DIExpression()), !dbg !17635
  %4 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17641
  %5 = load i32, i32* %4, align 8, !dbg !17641
  call void @llvm.dbg.value(metadata i32 %5, metadata !17634, metadata !DIExpression()), !dbg !17635
  %6 = icmp eq i32 %5, 0, !dbg !17642
  br i1 %6, label %7, label %17, !dbg !17644

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17645
  %9 = tail call fastcc zeroext i1 @z_is_inactive_timeout.285(%struct._timeout* noundef %8) #24, !dbg !17648
  br i1 %9, label %17, label %10, !dbg !17649

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 1, !dbg !17650
  %12 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !17652
  %13 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %12, %struct._wait_q_t* noundef nonnull %11, [1 x i64] [i64 -1]) #25, !dbg !17652
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17369, metadata !DIExpression()) #23, !dbg !17653
  %14 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17655, !srcloc !17384
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !17655
  call void @llvm.dbg.value(metadata i32 %15, metadata !17381, metadata !DIExpression()) #23, !dbg !17657
  call void @llvm.dbg.value(metadata i32 undef, metadata !17382, metadata !DIExpression()) #23, !dbg !17657
  call void @llvm.dbg.value(metadata i32 %15, metadata !17375, metadata !DIExpression()) #23, !dbg !17653
  call void @llvm.dbg.value(metadata i32 %15, metadata !17633, metadata !DIExpression()), !dbg !17635
  %16 = load i32, i32* %4, align 8, !dbg !17658
  call void @llvm.dbg.value(metadata i32 %16, metadata !17634, metadata !DIExpression()), !dbg !17635
  br label %17, !dbg !17659

17:                                               ; preds = %1, %10, %7
  %18 = phi i32 [ 0, %7 ], [ %16, %10 ], [ %5, %1 ], !dbg !17635
  %19 = phi i32 [ %3, %7 ], [ %15, %10 ], [ %3, %1 ], !dbg !17635
  call void @llvm.dbg.value(metadata i32 %19, metadata !17633, metadata !DIExpression()), !dbg !17635
  call void @llvm.dbg.value(metadata i32 %18, metadata !17634, metadata !DIExpression()), !dbg !17635
  store i32 0, i32* %4, align 8, !dbg !17660
  call void @llvm.dbg.value(metadata i32 %19, metadata !17398, metadata !DIExpression()) #23, !dbg !17661
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17403, metadata !DIExpression()) #23, !dbg !17661
  call void @llvm.dbg.value(metadata i32 %19, metadata !17407, metadata !DIExpression()) #23, !dbg !17663
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !17665, !srcloc !17413
  ret i32 %18, !dbg !17666
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.285(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17667 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17673, metadata !DIExpression()), !dbg !17674
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17675
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.286(%struct._dnode* noundef %2) #24, !dbg !17676
  %4 = xor i1 %3, true, !dbg !17677
  ret i1 %4, !dbg !17678
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.286(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17679 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17685, metadata !DIExpression()), !dbg !17686
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17687
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17687
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17688
  ret i1 %4, !dbg !17689
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17690 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.289, i32 0, i32 0)) #25, !dbg !17692
  ret void, !dbg !17693
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { argmemonly nofree nosync nounwind willreturn }
attributes #8 = { nofree nosync nounwind willreturn }
attributes #9 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!496, !2, !2852, !27, !260, !534, !555, !2854, !2856, !2890, !565, !608, !2892, !2895, !2906, !2952, !2954, !2982, !3010, !3053, !3125, !3170, !637, !787, !3198, !823, !833, !858, !869, !986, !1154, !3203, !1292, !1358, !1664, !1926, !3242, !2039, !2129, !3244, !3330, !3395, !2180, !3398, !2187, !2555, !3416, !2575, !3418, !2690, !2729, !3421}
!llvm.ident = !{!3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423, !3423}
!llvm.module.flags = !{!3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 97, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5440, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 85)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2720, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "log_const_main", scope: !27, file: !119, line: 12, type: !252, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !103, globals: !116, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/rtio/sensor_batch_processing/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_RTIO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_RTIO_IODEV", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 66)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 67)
!102 = !DIEnumerator(name: "K_OBJ_LAST", value: 68)
!103 = !{!104, !105, !108, !109, !113, !114}
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!107 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!108 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !110, line: 46, baseType: !111)
!110 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !112)
!112 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !115)
!115 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!116 = !{!25, !117, !227, !229, !235, !237, !245}
!117 = !DIGlobalVariableExpression(var: !118, expr: !DIExpression())
!118 = distinct !DIGlobalVariable(name: "simple_exec", scope: !27, file: !119, line: 24, type: !120, isLocal: false, isDefinition: true)
!119 = !DIFile(filename: "zephyr/samples/subsys/rtio/sensor_batch_processing/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_simple_executor", file: !121, line: 57, size: 32, elements: !122)
!121 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio_executor_simple.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!122 = !{!123}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !120, file: !121, line: 58, baseType: !124, size: 32)
!124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !126)
!125 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!126 = !{!127}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !124, file: !125, line: 211, baseType: !128, size: 32)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !130)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !131)
!131 = !{!132, !222, !226}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !130, file: !125, line: 177, baseType: !133, size: 32)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!134 = !DISubroutineType(types: !135)
!135 = !{!108, !136}
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 32)
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !138)
!138 = !{!139, !141, !145, !210}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !137, file: !125, line: 228, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !137, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!142 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !143, line: 22, baseType: !144)
!143 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!144 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !137, file: !125, line: 254, baseType: !146, size: 32, offset: 64)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !148)
!148 = !{!149, !159}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !147, file: !125, line: 143, baseType: !150, size: 160)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !152)
!151 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio_spsc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!152 = !{!153, !154, !155, !156, !157}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !150, file: !151, line: 60, baseType: !24, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !150, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !150, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !150, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !150, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !24)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !147, file: !125, line: 144, baseType: !160, offset: 160)
!160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, elements: !197)
!161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !162)
!162 = !{!163, !166, !167, !170, !200, !201}
!163 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !161, file: !125, line: 110, baseType: !164, size: 8)
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !165)
!165 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !161, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !161, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !169)
!169 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !161, file: !125, line: 116, baseType: !171, size: 32, offset: 32)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 32)
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !174)
!174 = !{!175, !186, !199}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !173, file: !125, line: 308, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !178)
!178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !179)
!179 = !{!180}
!180 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !178, file: !125, line: 271, baseType: !181, size: 32)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 32)
!182 = !DISubroutineType(types: !183)
!183 = !{null, !184, !136}
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !161)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !173, file: !125, line: 311, baseType: !187, size: 32, offset: 32)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !188, file: !125, line: 299, baseType: !150, size: 160)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !188, file: !125, line: 300, baseType: !192, offset: 160)
!192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !193, elements: !197)
!193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !194)
!194 = !{!195, !196}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !193, file: !125, line: 289, baseType: !184, size: 32)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !193, file: !125, line: 290, baseType: !136, size: 32, offset: 32)
!197 = !{!198}
!198 = !DISubrange(count: -1)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !173, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !161, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!201 = !DIDerivedType(tag: DW_TAG_member, scope: !161, file: !125, line: 127, baseType: !202, size: 64, offset: 96)
!202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !161, file: !125, line: 127, size: 64, elements: !203)
!203 = !{!204}
!204 = !DIDerivedType(tag: DW_TAG_member, scope: !202, file: !125, line: 128, baseType: !205, size: 64)
!205 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !202, file: !125, line: 128, size: 64, elements: !206)
!206 = !{!207, !208}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !205, file: !125, line: 129, baseType: !113, size: 32)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !205, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !137, file: !125, line: 257, baseType: !211, size: 32, offset: 96)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 32)
!212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !213)
!213 = !{!214, !215}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !212, file: !125, line: 162, baseType: !150, size: 160)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !212, file: !125, line: 163, baseType: !216, offset: 160)
!216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, elements: !197)
!217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !218)
!218 = !{!219, !221}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !217, file: !125, line: 151, baseType: !220, size: 32)
!220 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !108)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !217, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !130, file: !125, line: 182, baseType: !223, size: 32, offset: 32)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 32)
!224 = !DISubroutineType(types: !225)
!225 = !{null, !136, !184, !108}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !130, file: !125, line: 187, baseType: !223, size: 32, offset: 64)
!227 = !DIGlobalVariableExpression(var: !228, expr: !DIExpression())
!228 = distinct !DIGlobalVariable(name: "ez_io", scope: !27, file: !119, line: 25, type: !137, isLocal: false, isDefinition: true, align: 32)
!229 = !DIGlobalVariableExpression(var: !230, expr: !DIExpression())
!230 = distinct !DIGlobalVariable(name: "bufs", scope: !27, file: !119, line: 27, type: !231, isLocal: true, isDefinition: true)
!231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 1024, elements: !232)
!232 = !{!233, !234}
!233 = !DISubrange(count: 8)
!234 = !DISubrange(count: 16)
!235 = !DIGlobalVariableExpression(var: !236, expr: !DIExpression())
!236 = distinct !DIGlobalVariable(name: "z_rtio_simple_api", scope: !27, file: !121, line: 64, type: !129, isLocal: true, isDefinition: true)
!237 = !DIGlobalVariableExpression(var: !238, expr: !DIExpression())
!238 = distinct !DIGlobalVariable(name: "_sq_ez_io", scope: !27, file: !119, line: 25, type: !239, isLocal: true, isDefinition: true)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc__sq_ez_io", file: !119, line: 25, size: 1440, elements: !240)
!240 = !{!241, !242}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !239, file: !119, line: 25, baseType: !150, size: 160)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !239, file: !119, line: 25, baseType: !243, size: 1280, offset: 160)
!243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 1280, elements: !244)
!244 = !{!233}
!245 = !DIGlobalVariableExpression(var: !246, expr: !DIExpression())
!246 = distinct !DIGlobalVariable(name: "_cq_ez_io", scope: !27, file: !119, line: 25, type: !247, isLocal: true, isDefinition: true)
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc__cq_ez_io", file: !119, line: 25, size: 672, elements: !248)
!248 = !{!249, !250}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !247, file: !119, line: 25, baseType: !150, size: 160)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !247, file: !119, line: 25, baseType: !251, size: 512, offset: 160)
!251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, size: 512, elements: !244)
!252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !253)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !255)
!254 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!255 = !{!256, !257}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !253, file: !254, line: 17, baseType: !105, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !253, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!258 = !DIGlobalVariableExpression(var: !259, expr: !DIExpression())
!259 = distinct !DIGlobalVariable(name: "log_const_vnd_sensor", scope: !260, file: !265, line: 14, type: !489, isLocal: false, isDefinition: true)
!260 = distinct !DICompileUnit(language: DW_LANG_C99, file: !261, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !262, globals: !450, splitDebugInlining: false, nameTableKind: None)
!261 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/rtio/sensor_batch_processing/src/vnd_sensor.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!262 = !{!104, !108, !263, !109, !443, !113, !114}
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 32)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vnd_sensor_data", file: !265, line: 21, size: 960, elements: !266)
!265 = !DIFile(filename: "zephyr/samples/subsys/rtio/sensor_batch_processing/src/vnd_sensor.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!266 = !{!267, !357, !407, !430, !449}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !264, file: !265, line: 22, baseType: !268, size: 96)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !269)
!269 = !{!270, !345, !356}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !268, file: !125, line: 308, baseType: !271, size: 32)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 32)
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !274)
!274 = !{!275}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !273, file: !125, line: 271, baseType: !276, size: 32)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DISubroutineType(types: !278)
!278 = !{null, !279, !298}
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !282)
!282 = !{!283, !284, !285, !286, !289, !290}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !281, file: !125, line: 110, baseType: !164, size: 8)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !281, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !281, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !281, file: !125, line: 116, baseType: !287, size: 32, offset: 32)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !268)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !281, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!290 = !DIDerivedType(tag: DW_TAG_member, scope: !281, file: !125, line: 127, baseType: !291, size: 64, offset: 96)
!291 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !281, file: !125, line: 127, size: 64, elements: !292)
!292 = !{!293}
!293 = !DIDerivedType(tag: DW_TAG_member, scope: !291, file: !125, line: 128, baseType: !294, size: 64)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !291, file: !125, line: 128, size: 64, elements: !295)
!295 = !{!296, !297}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !294, file: !125, line: 129, baseType: !113, size: 32)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !294, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 32)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !300)
!300 = !{!301, !319, !320, !334}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !299, file: !125, line: 228, baseType: !302, size: 32)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !304)
!304 = !{!305}
!305 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !303, file: !125, line: 211, baseType: !306, size: 32)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !308)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !309)
!309 = !{!310, !314, !318}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !308, file: !125, line: 177, baseType: !311, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 32)
!312 = !DISubroutineType(types: !313)
!313 = !{!108, !298}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !308, file: !125, line: 182, baseType: !315, size: 32, offset: 32)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!316 = !DISubroutineType(types: !317)
!317 = !{null, !298, !279, !108}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !308, file: !125, line: 187, baseType: !315, size: 32, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !299, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !299, file: !125, line: 254, baseType: !321, size: 32, offset: 64)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 32)
!322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !323)
!323 = !{!324, !332}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !322, file: !125, line: 143, baseType: !325, size: 160)
!325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !326)
!326 = !{!327, !328, !329, !330, !331}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !325, file: !151, line: 60, baseType: !24, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !325, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !325, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !325, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !325, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !322, file: !125, line: 144, baseType: !333, offset: 160)
!333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, elements: !197)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !299, file: !125, line: 257, baseType: !335, size: 32, offset: 96)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 32)
!336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !337)
!337 = !{!338, !339}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !336, file: !125, line: 162, baseType: !325, size: 160)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !336, file: !125, line: 163, baseType: !340, offset: 160)
!340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, elements: !197)
!341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !342)
!342 = !{!343, !344}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !341, file: !125, line: 151, baseType: !220, size: 32)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !341, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !268, file: !125, line: 311, baseType: !346, size: 32, offset: 32)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 32)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !348)
!348 = !{!349, !350}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !347, file: !125, line: 299, baseType: !325, size: 160)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !347, file: !125, line: 300, baseType: !351, offset: 160)
!351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !352, elements: !197)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !353)
!353 = !{!354, !355}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !352, file: !125, line: 289, baseType: !279, size: 32)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !352, file: !125, line: 290, baseType: !298, size: 32, offset: 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !268, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !264, file: !265, line: 23, baseType: !358, size: 448, offset: 128)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_timer", file: !359, line: 1318, size: 448, elements: !360)
!359 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!360 = !{!361, !388, !394, !399, !400, !405, !406}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !358, file: !359, line: 1324, baseType: !362, size: 192)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !364)
!363 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!364 = !{!365, !381, !387}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !362, file: !363, line: 245, baseType: !366, size: 64)
!366 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !368)
!367 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !369)
!369 = !{!370, !376}
!370 = !DIDerivedType(tag: DW_TAG_member, scope: !368, file: !367, line: 38, baseType: !371, size: 32)
!371 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !368, file: !367, line: 38, size: 32, elements: !372)
!372 = !{!373, !375}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !371, file: !367, line: 39, baseType: !374, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !371, file: !367, line: 40, baseType: !374, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, scope: !368, file: !367, line: 42, baseType: !377, size: 32, offset: 32)
!377 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !368, file: !367, line: 42, size: 32, elements: !378)
!378 = !{!379, !380}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !377, file: !367, line: 43, baseType: !374, size: 32)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !377, file: !367, line: 44, baseType: !374, size: 32)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !362, file: !363, line: 246, baseType: !382, size: 32, offset: 64)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !383)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 32)
!384 = !DISubroutineType(types: !385)
!385 = !{null, !386}
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !362, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !358, file: !359, line: 1327, baseType: !389, size: 64, offset: 192)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !390)
!390 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !391)
!391 = !{!392}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !390, file: !363, line: 232, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !368)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_fn", scope: !358, file: !359, line: 1330, baseType: !395, size: 32, offset: 256)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 32)
!396 = !DISubroutineType(types: !397)
!397 = !{null, !398}
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 32)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "stop_fn", scope: !358, file: !359, line: 1333, baseType: !395, size: 32, offset: 288)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !358, file: !359, line: 1336, baseType: !401, size: 64, offset: 320)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !402)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !403)
!403 = !{!404}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !402, file: !110, line: 66, baseType: !109, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !358, file: !359, line: 1339, baseType: !113, size: 32, offset: 384)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !358, file: !359, line: 1342, baseType: !104, size: 32, offset: 416)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !264, file: !265, line: 24, baseType: !408, size: 32, offset: 576)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !410)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !412)
!411 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!412 = !{!413, !414, !415, !416, !423, !424}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !410, file: !411, line: 380, baseType: !105, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !410, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !410, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !410, file: !411, line: 386, baseType: !417, size: 32, offset: 96)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !419)
!419 = !{!420, !421}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !418, file: !411, line: 359, baseType: !164, size: 8)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !418, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!422 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !410, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !410, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 32)
!426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !427)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !411, line: 43, baseType: !428)
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !429)
!429 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "msgq", scope: !264, file: !265, line: 25, baseType: !431, size: 320, offset: 608)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !359, line: 4204, size: 320, elements: !432)
!432 = !{!433, !434, !438, !441, !442, !444, !445, !446, !447, !448}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !431, file: !359, line: 4206, baseType: !389, size: 64)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !431, file: !359, line: 4208, baseType: !435, offset: 64)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!436 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!437 = !{}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !431, file: !359, line: 4210, baseType: !439, size: 32, offset: 64)
!439 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !440, line: 214, baseType: !32)
!440 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!441 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !431, file: !359, line: 4212, baseType: !113, size: 32, offset: 96)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !431, file: !359, line: 4214, baseType: !443, size: 32, offset: 128)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !431, file: !359, line: 4216, baseType: !443, size: 32, offset: 160)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !431, file: !359, line: 4218, baseType: !443, size: 32, offset: 192)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !431, file: !359, line: 4220, baseType: !443, size: 32, offset: 224)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !431, file: !359, line: 4222, baseType: !113, size: 32, offset: 256)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !431, file: !359, line: 4227, baseType: !164, size: 8, offset: 288)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "sample_number", scope: !264, file: !265, line: 26, baseType: !113, size: 32, offset: 928)
!450 = !{!258, !451, !458, !463, !465, !476, !478, !485, !487}
!451 = !DIGlobalVariableExpression(var: !452, expr: !DIExpression())
!452 = distinct !DIGlobalVariable(name: "vnd_sensor_iodev_sq_0", scope: !260, file: !265, line: 152, type: !453, isLocal: false, isDefinition: true)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc_vnd_sensor_iodev_sq_0", file: !265, line: 152, size: 672, elements: !454)
!454 = !{!455, !456}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !453, file: !265, line: 152, baseType: !325, size: 160)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !453, file: !265, line: 152, baseType: !457, size: 512, offset: 160)
!457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !352, size: 512, elements: !244)
!458 = !DIGlobalVariableExpression(var: !459, expr: !DIExpression())
!459 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !260, file: !265, line: 152, type: !460, isLocal: false, isDefinition: true, align: 16)
!460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 64, elements: !461)
!461 = !{!462}
!462 = !DISubrange(count: 4)
!463 = !DIGlobalVariableExpression(var: !464, expr: !DIExpression())
!464 = distinct !DIGlobalVariable(name: "__device_dts_ord_14", scope: !260, file: !265, line: 152, type: !409, isLocal: false, isDefinition: true, align: 32)
!465 = !DIGlobalVariableExpression(var: !466, expr: !DIExpression())
!466 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_14", scope: !260, file: !265, line: 152, type: !467, isLocal: true, isDefinition: true, align: 32)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !468)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !470)
!469 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!470 = !{!471, !475}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !468, file: !469, line: 60, baseType: !472, size: 32)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 32)
!473 = !DISubroutineType(types: !474)
!474 = !{!108, !408}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !468, file: !469, line: 65, baseType: !408, size: 32, offset: 32)
!476 = !DIGlobalVariableExpression(var: !477, expr: !DIExpression())
!477 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_14", scope: !260, file: !265, line: 152, type: !418, isLocal: true, isDefinition: true, align: 8)
!478 = !DIGlobalVariableExpression(var: !479, expr: !DIExpression())
!479 = distinct !DIGlobalVariable(name: "vnd_sensor_config_0", scope: !260, file: !265, line: 152, type: !480, isLocal: true, isDefinition: true)
!480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !481)
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vnd_sensor_config", file: !265, line: 16, size: 64, elements: !482)
!482 = !{!483, !484}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "sample_period", scope: !481, file: !265, line: 17, baseType: !113, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "sample_size", scope: !481, file: !265, line: 18, baseType: !439, size: 32, offset: 32)
!485 = !DIGlobalVariableExpression(var: !486, expr: !DIExpression())
!486 = distinct !DIGlobalVariable(name: "vnd_sensor_data_0", scope: !260, file: !265, line: 152, type: !264, isLocal: true, isDefinition: true)
!487 = !DIGlobalVariableExpression(var: !488, expr: !DIExpression())
!488 = distinct !DIGlobalVariable(name: "vnd_sensor_iodev_api", scope: !260, file: !265, line: 127, type: !272, isLocal: true, isDefinition: true)
!489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !490)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !491)
!491 = !{!492, !493}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !490, file: !254, line: 17, baseType: !105, size: 32)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !490, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!494 = !DIGlobalVariableExpression(var: !495, expr: !DIExpression())
!495 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !496, file: !501, line: 106, type: !507, isLocal: false, isDefinition: true, align: 16)
!496 = distinct !DICompileUnit(language: DW_LANG_C99, file: !497, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !498, splitDebugInlining: false, nameTableKind: None)
!497 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!498 = !{!499, !505, !510, !512, !514, !516, !518, !520, !522, !524, !526, !528, !530, !494}
!499 = !DIGlobalVariableExpression(var: !500, expr: !DIExpression())
!500 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !496, file: !501, line: 19, type: !502, isLocal: false, isDefinition: true, align: 16)
!501 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 224, elements: !503)
!503 = !{!504}
!504 = !DISubrange(count: 14)
!505 = !DIGlobalVariableExpression(var: !506, expr: !DIExpression())
!506 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !496, file: !501, line: 24, type: !507, isLocal: false, isDefinition: true, align: 16)
!507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 48, elements: !508)
!508 = !{!509}
!509 = !DISubrange(count: 3)
!510 = !DIGlobalVariableExpression(var: !511, expr: !DIExpression())
!511 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !496, file: !501, line: 31, type: !460, isLocal: false, isDefinition: true, align: 16)
!512 = !DIGlobalVariableExpression(var: !513, expr: !DIExpression())
!513 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !496, file: !501, line: 38, type: !460, isLocal: false, isDefinition: true, align: 16)
!514 = !DIGlobalVariableExpression(var: !515, expr: !DIExpression())
!515 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !496, file: !501, line: 45, type: !460, isLocal: false, isDefinition: true, align: 16)
!516 = !DIGlobalVariableExpression(var: !517, expr: !DIExpression())
!517 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !496, file: !501, line: 52, type: !460, isLocal: false, isDefinition: true, align: 16)
!518 = !DIGlobalVariableExpression(var: !519, expr: !DIExpression())
!519 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_26", scope: !496, file: !501, line: 59, type: !460, isLocal: false, isDefinition: true, align: 16)
!520 = !DIGlobalVariableExpression(var: !521, expr: !DIExpression())
!521 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !496, file: !501, line: 66, type: !460, isLocal: false, isDefinition: true, align: 16)
!522 = !DIGlobalVariableExpression(var: !523, expr: !DIExpression())
!523 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !496, file: !501, line: 73, type: !460, isLocal: false, isDefinition: true, align: 16)
!524 = !DIGlobalVariableExpression(var: !525, expr: !DIExpression())
!525 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_28", scope: !496, file: !501, line: 80, type: !460, isLocal: false, isDefinition: true, align: 16)
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !496, file: !501, line: 87, type: !460, isLocal: false, isDefinition: true, align: 16)
!528 = !DIGlobalVariableExpression(var: !529, expr: !DIExpression())
!529 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !496, file: !501, line: 94, type: !460, isLocal: false, isDefinition: true, align: 16)
!530 = !DIGlobalVariableExpression(var: !531, expr: !DIExpression())
!531 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_50", scope: !496, file: !501, line: 101, type: !460, isLocal: false, isDefinition: true, align: 16)
!532 = !DIGlobalVariableExpression(var: !533, expr: !DIExpression())
!533 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !534, file: !547, line: 18, type: !548, isLocal: false, isDefinition: true)
!534 = distinct !DICompileUnit(language: DW_LANG_C99, file: !535, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !536, globals: !546, splitDebugInlining: false, nameTableKind: None)
!535 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!536 = !{!22, !104, !24, !537, !539, !541, !439, !108, !542, !543, !544, !545, !443, !209, !168, !105}
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 32)
!538 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 32)
!540 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 32)
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 32)
!546 = !{!532}
!547 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !549)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !550)
!550 = !{!551, !552}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !549, file: !254, line: 17, baseType: !105, size: 32)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !549, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!553 = !DIGlobalVariableExpression(var: !554, expr: !DIExpression())
!554 = distinct !DIGlobalVariable(name: "_char_out", scope: !555, file: !559, line: 54, type: !560, isLocal: false, isDefinition: true)
!555 = distinct !DICompileUnit(language: DW_LANG_C99, file: !556, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !557, globals: !558, splitDebugInlining: false, nameTableKind: None)
!556 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!557 = !{!104, !108}
!558 = !{!553}
!559 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 32)
!561 = !DISubroutineType(types: !562)
!562 = !{!108, !108}
!563 = !DIGlobalVariableExpression(var: !564, expr: !DIExpression())
!564 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !565, file: !582, line: 56, type: !583, isLocal: true, isDefinition: true, align: 32)
!565 = distinct !DICompileUnit(language: DW_LANG_C99, file: !566, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !567, globals: !581, splitDebugInlining: false, nameTableKind: None)
!566 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!567 = !{!568}
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 32)
!569 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !570, line: 258, baseType: !571)
!570 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f401xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!571 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !570, line: 249, size: 224, elements: !572)
!572 = !{!573, !575, !576, !577, !578, !579, !580}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !571, file: !570, line: 251, baseType: !574, size: 32)
!574 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !113)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !571, file: !570, line: 252, baseType: !574, size: 32, offset: 32)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !571, file: !570, line: 253, baseType: !574, size: 32, offset: 64)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !571, file: !570, line: 254, baseType: !574, size: 32, offset: 96)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !571, file: !570, line: 255, baseType: !574, size: 32, offset: 128)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !571, file: !570, line: 256, baseType: !574, size: 32, offset: 160)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !571, file: !570, line: 257, baseType: !574, size: 32, offset: 192)
!581 = !{!563}
!582 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !584)
!584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !585)
!585 = !{!586, !605}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !584, file: !469, line: 60, baseType: !587, size: 32)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 32)
!588 = !DISubroutineType(types: !589)
!589 = !{!108, !590}
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 32)
!591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !592)
!592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !593)
!593 = !{!594, !595, !596, !597, !603, !604}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !592, file: !411, line: 380, baseType: !105, size: 32)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !592, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !592, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !592, file: !411, line: 386, baseType: !598, size: 32, offset: 96)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 32)
!599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !600)
!600 = !{!601, !602}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !599, file: !411, line: 359, baseType: !164, size: 8)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !599, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !592, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !592, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !584, file: !469, line: 65, baseType: !590, size: 32, offset: 32)
!606 = !DIGlobalVariableExpression(var: !607, expr: !DIExpression())
!607 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !608, file: !611, line: 71, type: !612, isLocal: true, isDefinition: true, align: 32)
!608 = distinct !DICompileUnit(language: DW_LANG_C99, file: !609, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !610, splitDebugInlining: false, nameTableKind: None)
!609 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!610 = !{!606}
!611 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !613)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !614)
!614 = !{!615, !634}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !613, file: !469, line: 60, baseType: !616, size: 32)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 32)
!617 = !DISubroutineType(types: !618)
!618 = !{!108, !619}
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 32)
!620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !621)
!621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !622)
!622 = !{!623, !624, !625, !626, !632, !633}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !621, file: !411, line: 380, baseType: !105, size: 32)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !621, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !621, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !621, file: !411, line: 386, baseType: !627, size: 32, offset: 96)
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 32)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !629)
!629 = !{!630, !631}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !628, file: !411, line: 359, baseType: !164, size: 8)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !628, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !621, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !621, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !613, file: !469, line: 65, baseType: !619, size: 32, offset: 32)
!635 = !DIGlobalVariableExpression(var: !636, expr: !DIExpression())
!636 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !637, file: !644, line: 17, type: !780, isLocal: false, isDefinition: true)
!637 = distinct !DICompileUnit(language: DW_LANG_C99, file: !638, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !639, globals: !640, splitDebugInlining: false, nameTableKind: None)
!638 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!639 = !{!439, !108, !113, !104}
!640 = !{!635, !641, !776}
!641 = !DIGlobalVariableExpression(var: !642, expr: !DIExpression())
!642 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !643, file: !644, line: 198, type: !762, isLocal: true, isDefinition: true)
!643 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !644, file: !644, line: 175, type: !645, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !637, retainedNodes: !757)
!644 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!645 = !DISubroutineType(types: !646)
!646 = !{null, !647}
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 32)
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !649, line: 245, size: 1024, elements: !650)
!649 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!650 = !{!651, !714, !727, !728, !729, !730, !736, !752}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !648, file: !649, line: 247, baseType: !652, size: 384)
!652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !649, line: 57, size: 384, elements: !653)
!653 = !{!654, !681, !688, !689, !690, !701, !702, !703}
!654 = !DIDerivedType(tag: DW_TAG_member, scope: !652, file: !649, line: 60, baseType: !655, size: 64)
!655 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !652, file: !649, line: 60, size: 64, elements: !656)
!656 = !{!657, !672}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !655, file: !649, line: 61, baseType: !658, size: 64)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !659)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !660)
!660 = !{!661, !667}
!661 = !DIDerivedType(tag: DW_TAG_member, scope: !659, file: !367, line: 38, baseType: !662, size: 32)
!662 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !659, file: !367, line: 38, size: 32, elements: !663)
!663 = !{!664, !666}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !662, file: !367, line: 39, baseType: !665, size: 32)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 32)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !662, file: !367, line: 40, baseType: !665, size: 32)
!667 = !DIDerivedType(tag: DW_TAG_member, scope: !659, file: !367, line: 42, baseType: !668, size: 32, offset: 32)
!668 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !659, file: !367, line: 42, size: 32, elements: !669)
!669 = !{!670, !671}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !668, file: !367, line: 43, baseType: !665, size: 32)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !668, file: !367, line: 44, baseType: !665, size: 32)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !655, file: !649, line: 62, baseType: !673, size: 64)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !674, line: 49, size: 64, elements: !675)
!674 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!675 = !{!676}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !673, file: !674, line: 50, baseType: !677, size: 64)
!677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !678, size: 64, elements: !679)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 32)
!679 = !{!680}
!680 = !DISubrange(count: 2)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !652, file: !649, line: 68, baseType: !682, size: 32, offset: 64)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !684)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !685)
!685 = !{!686}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !684, file: !363, line: 232, baseType: !687, size: 64)
!687 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !659)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !652, file: !649, line: 71, baseType: !164, size: 8, offset: 96)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !652, file: !649, line: 74, baseType: !164, size: 8, offset: 104)
!690 = !DIDerivedType(tag: DW_TAG_member, scope: !652, file: !649, line: 90, baseType: !691, size: 16, offset: 112)
!691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !652, file: !649, line: 90, size: 16, elements: !692)
!692 = !{!693, !700}
!693 = !DIDerivedType(tag: DW_TAG_member, scope: !691, file: !649, line: 91, baseType: !694, size: 16)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !691, file: !649, line: 91, size: 16, elements: !695)
!695 = !{!696, !699}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !694, file: !649, line: 96, baseType: !697, size: 8)
!697 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !698)
!698 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !694, file: !649, line: 97, baseType: !164, size: 8, offset: 8)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !691, file: !649, line: 100, baseType: !168, size: 16)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !652, file: !649, line: 107, baseType: !113, size: 32, offset: 128)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !652, file: !649, line: 127, baseType: !104, size: 32, offset: 160)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !652, file: !649, line: 131, baseType: !704, size: 192, offset: 192)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !705)
!705 = !{!706, !707, !713}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !704, file: !363, line: 245, baseType: !658, size: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !704, file: !363, line: 246, baseType: !708, size: 32, offset: 64)
!708 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !709)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 32)
!710 = !DISubroutineType(types: !711)
!711 = !{null, !712}
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !704, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !648, file: !649, line: 250, baseType: !715, size: 288, offset: 384)
!715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !716, line: 25, size: 288, elements: !717)
!716 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!717 = !{!718, !719, !720, !721, !722, !723, !724, !725, !726}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !715, file: !716, line: 26, baseType: !113, size: 32)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !715, file: !716, line: 27, baseType: !113, size: 32, offset: 32)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !715, file: !716, line: 28, baseType: !113, size: 32, offset: 64)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !715, file: !716, line: 29, baseType: !113, size: 32, offset: 96)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !715, file: !716, line: 30, baseType: !113, size: 32, offset: 128)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !715, file: !716, line: 31, baseType: !113, size: 32, offset: 160)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !715, file: !716, line: 32, baseType: !113, size: 32, offset: 192)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !715, file: !716, line: 33, baseType: !113, size: 32, offset: 224)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !715, file: !716, line: 34, baseType: !113, size: 32, offset: 256)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !648, file: !649, line: 253, baseType: !104, size: 32, offset: 672)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !648, file: !649, line: 256, baseType: !683, size: 64, offset: 704)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !648, file: !649, line: 294, baseType: !108, size: 32, offset: 768)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !648, file: !649, line: 300, baseType: !731, size: 96, offset: 800)
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !649, line: 149, size: 96, elements: !732)
!732 = !{!733, !734, !735}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !731, file: !649, line: 153, baseType: !22, size: 32)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !731, file: !649, line: 162, baseType: !439, size: 32, offset: 32)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !731, file: !649, line: 168, baseType: !439, size: 32, offset: 64)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !648, file: !649, line: 325, baseType: !737, size: 32, offset: 896)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 32)
!738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !739)
!739 = !{!740, !749, !750}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !738, file: !359, line: 5074, baseType: !741, size: 96)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !742, line: 56, size: 96, elements: !743)
!742 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!743 = !{!744, !747, !748}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !741, file: !742, line: 57, baseType: !745, size: 32)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 32)
!746 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !742, line: 57, flags: DIFlagFwdDecl)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !741, file: !742, line: 58, baseType: !104, size: 32, offset: 32)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !741, file: !742, line: 59, baseType: !439, size: 32, offset: 64)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !738, file: !359, line: 5075, baseType: !683, size: 64, offset: 96)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !738, file: !359, line: 5076, baseType: !751, offset: 160)
!751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !648, file: !649, line: 343, baseType: !753, size: 64, offset: 928)
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !716, line: 60, size: 64, elements: !754)
!754 = !{!755, !756}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !753, file: !716, line: 63, baseType: !113, size: 32)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !753, file: !716, line: 66, baseType: !113, size: 32, offset: 32)
!757 = !{!758, !759, !760, !761}
!758 = !DILocalVariable(name: "thread", arg: 1, scope: !643, file: !644, line: 175, type: !647)
!759 = !DILocalVariable(name: "region_num", scope: !643, file: !644, line: 200, type: !164)
!760 = !DILocalVariable(name: "guard_start", scope: !643, file: !644, line: 265, type: !22)
!761 = !DILocalVariable(name: "guard_size", scope: !643, file: !644, line: 266, type: !439)
!762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !763, size: 96, elements: !774)
!763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !764, line: 52, size: 96, elements: !765)
!764 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!765 = !{!766, !767, !768}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !763, file: !764, line: 53, baseType: !22, size: 32)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !763, file: !764, line: 54, baseType: !439, size: 32, offset: 32)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !763, file: !764, line: 55, baseType: !769, size: 32, offset: 64)
!769 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !770, line: 151, baseType: !771)
!770 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!771 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !770, line: 149, size: 32, elements: !772)
!772 = !{!773}
!773 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !771, file: !770, line: 150, baseType: !113, size: 32)
!774 = !{!775}
!775 = !DISubrange(count: 1)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "static_regions", scope: !637, file: !644, line: 62, type: !778, isLocal: true, isDefinition: true)
!778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !779, size: 96, elements: !774)
!779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !763)
!780 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !781)
!781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !782)
!782 = !{!783, !784}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !781, file: !254, line: 17, baseType: !105, size: 32)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !781, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!785 = !DIGlobalVariableExpression(var: !786, expr: !DIExpression())
!786 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !787, file: !820, line: 39, type: !164, isLocal: true, isDefinition: true)
!787 = distinct !DICompileUnit(language: DW_LANG_C99, file: !788, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !789, globals: !819, splitDebugInlining: false, nameTableKind: None)
!788 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!789 = !{!790, !104, !108, !807, !164}
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 32)
!791 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !792, line: 1226, baseType: !793)
!792 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!793 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !792, line: 1213, size: 352, elements: !794)
!794 = !{!795, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !793, file: !792, line: 1215, baseType: !796, size: 32)
!796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !574)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !793, file: !792, line: 1216, baseType: !574, size: 32, offset: 32)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !793, file: !792, line: 1217, baseType: !574, size: 32, offset: 64)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !793, file: !792, line: 1218, baseType: !574, size: 32, offset: 96)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !793, file: !792, line: 1219, baseType: !574, size: 32, offset: 128)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !793, file: !792, line: 1220, baseType: !574, size: 32, offset: 160)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !793, file: !792, line: 1221, baseType: !574, size: 32, offset: 192)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !793, file: !792, line: 1222, baseType: !574, size: 32, offset: 224)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !793, file: !792, line: 1223, baseType: !574, size: 32, offset: 256)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !793, file: !792, line: 1224, baseType: !574, size: 32, offset: 288)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !793, file: !792, line: 1225, baseType: !574, size: 32, offset: 320)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 32)
!808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !809)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !810, line: 27, size: 96, elements: !811)
!810 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!811 = !{!812, !813, !814}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !809, file: !810, line: 29, baseType: !113, size: 32)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !809, file: !810, line: 31, baseType: !105, size: 32, offset: 32)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !809, file: !810, line: 37, baseType: !815, size: 32, offset: 64)
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !770, line: 146, baseType: !816)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !770, line: 141, size: 32, elements: !817)
!817 = !{!818}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !816, file: !770, line: 143, baseType: !113, size: 32)
!819 = !{!785}
!820 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!821 = !DIGlobalVariableExpression(var: !822, expr: !DIExpression())
!822 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !823, file: !830, line: 21, type: !560, isLocal: true, isDefinition: true)
!823 = distinct !DICompileUnit(language: DW_LANG_C99, file: !824, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !825, globals: !829, splitDebugInlining: false, nameTableKind: None)
!824 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!825 = !{!826, !108, !104}
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 32)
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !828, line: 22, baseType: !108)
!828 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!829 = !{!821}
!830 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!831 = !DIGlobalVariableExpression(var: !832, expr: !DIExpression())
!832 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !833, file: !838, line: 13, type: !855, isLocal: true, isDefinition: true)
!833 = distinct !DICompileUnit(language: DW_LANG_C99, file: !834, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !835, splitDebugInlining: false, nameTableKind: None)
!834 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!835 = !{!836, !831}
!836 = !DIGlobalVariableExpression(var: !837, expr: !DIExpression())
!837 = distinct !DIGlobalVariable(name: "mpu_config", scope: !833, file: !838, line: 37, type: !839, isLocal: false, isDefinition: true)
!838 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !840)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !810, line: 41, size: 64, elements: !841)
!841 = !{!842, !843}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !840, file: !810, line: 43, baseType: !113, size: 32)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !840, file: !810, line: 45, baseType: !844, size: 32, offset: 32)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !846)
!846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !810, line: 27, size: 96, elements: !847)
!847 = !{!848, !849, !850}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !846, file: !810, line: 29, baseType: !113, size: 32)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !846, file: !810, line: 31, baseType: !105, size: 32, offset: 32)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !846, file: !810, line: 37, baseType: !851, size: 32, offset: 64)
!851 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !770, line: 146, baseType: !852)
!852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !770, line: 141, size: 32, elements: !853)
!853 = !{!854}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !852, file: !770, line: 143, baseType: !113, size: 32)
!855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !845, size: 192, elements: !679)
!856 = !DIGlobalVariableExpression(var: !857, expr: !DIExpression())
!857 = distinct !DIGlobalVariable(name: "log_const_rtio_executor_simple", scope: !858, file: !861, line: 12, type: !862, isLocal: false, isDefinition: true)
!858 = distinct !DICompileUnit(language: DW_LANG_C99, file: !859, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !557, globals: !860, splitDebugInlining: false, nameTableKind: None)
!859 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/rtio/rtio_executor_simple.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!860 = !{!856}
!861 = !DIFile(filename: "zephyr/subsys/rtio/rtio_executor_simple.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!862 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !863)
!863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !864)
!864 = !{!865, !866}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !863, file: !254, line: 17, baseType: !105, size: 32)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !863, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!867 = !DIGlobalVariableExpression(var: !868, expr: !DIExpression())
!868 = distinct !DIGlobalVariable(name: "log_const_rtio_executor_concurrent", scope: !869, file: !978, line: 13, type: !979, isLocal: false, isDefinition: true)
!869 = distinct !DICompileUnit(language: DW_LANG_C99, file: !870, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !871, globals: !977, splitDebugInlining: false, nameTableKind: None)
!870 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/rtio/rtio_executor_concurrent.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!871 = !{!872, !104, !108}
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 32)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_concurrent_executor", file: !874, line: 61, size: 224, elements: !875)
!874 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio_executor_concurrent.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!875 = !{!876, !966, !968, !969, !970, !971, !973, !974, !975}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !873, file: !874, line: 62, baseType: !877, size: 32)
!877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !878)
!878 = !{!879}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !877, file: !125, line: 211, baseType: !880, size: 32)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 32)
!881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !882)
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !883)
!883 = !{!884, !961, !965}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !882, file: !125, line: 177, baseType: !885, size: 32)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 32)
!886 = !DISubroutineType(types: !887)
!887 = !{!108, !888}
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 32)
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !890)
!890 = !{!891, !893, !894, !950}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !889, file: !125, line: 228, baseType: !892, size: 32)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 32)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !889, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !889, file: !125, line: 254, baseType: !895, size: 32, offset: 64)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 32)
!896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !897)
!897 = !{!898, !906}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !896, file: !125, line: 143, baseType: !899, size: 160)
!899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !900)
!900 = !{!901, !902, !903, !904, !905}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !899, file: !151, line: 60, baseType: !24, size: 32)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !899, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !899, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !899, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !899, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !896, file: !125, line: 144, baseType: !907, offset: 160)
!907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !908, elements: !197)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !909)
!909 = !{!910, !911, !912, !913, !941, !942}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !908, file: !125, line: 110, baseType: !164, size: 8)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !908, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !908, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !908, file: !125, line: 116, baseType: !914, size: 32, offset: 32)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 32)
!915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !916)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !917)
!917 = !{!918, !929, !940}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !916, file: !125, line: 308, baseType: !919, size: 32)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 32)
!920 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !921)
!921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !922)
!922 = !{!923}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !921, file: !125, line: 271, baseType: !924, size: 32)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 32)
!925 = !DISubroutineType(types: !926)
!926 = !{null, !927, !888}
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 32)
!928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !908)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !916, file: !125, line: 311, baseType: !930, size: 32, offset: 32)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 32)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !932)
!932 = !{!933, !934}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !931, file: !125, line: 299, baseType: !899, size: 160)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !931, file: !125, line: 300, baseType: !935, offset: 160)
!935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !936, elements: !197)
!936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !937)
!937 = !{!938, !939}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !936, file: !125, line: 289, baseType: !927, size: 32)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !936, file: !125, line: 290, baseType: !888, size: 32, offset: 32)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !916, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !908, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!942 = !DIDerivedType(tag: DW_TAG_member, scope: !908, file: !125, line: 127, baseType: !943, size: 64, offset: 96)
!943 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !908, file: !125, line: 127, size: 64, elements: !944)
!944 = !{!945}
!945 = !DIDerivedType(tag: DW_TAG_member, scope: !943, file: !125, line: 128, baseType: !946, size: 64)
!946 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !943, file: !125, line: 128, size: 64, elements: !947)
!947 = !{!948, !949}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !946, file: !125, line: 129, baseType: !113, size: 32)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !946, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !889, file: !125, line: 257, baseType: !951, size: 32, offset: 96)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 32)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !953)
!953 = !{!954, !955}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !952, file: !125, line: 162, baseType: !899, size: 160)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !952, file: !125, line: 163, baseType: !956, offset: 160)
!956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !957, elements: !197)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !958)
!958 = !{!959, !960}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !957, file: !125, line: 151, baseType: !220, size: 32)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !957, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !882, file: !125, line: 182, baseType: !962, size: 32, offset: 32)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 32)
!963 = !DISubroutineType(types: !964)
!964 = !{null, !888, !927, !108}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !882, file: !125, line: 187, baseType: !962, size: 32, offset: 64)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !873, file: !874, line: 65, baseType: !967, offset: 32)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "task_in", scope: !873, file: !874, line: 68, baseType: !168, size: 16, offset: 32)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "task_out", scope: !873, file: !874, line: 68, baseType: !168, size: 16, offset: 48)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "task_mask", scope: !873, file: !874, line: 68, baseType: !168, size: 16, offset: 64)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "pending_sqe", scope: !873, file: !874, line: 71, baseType: !972, size: 32, offset: 96)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 32)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "last_sqe", scope: !873, file: !874, line: 74, baseType: !972, size: 32, offset: 128)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "task_status", scope: !873, file: !874, line: 77, baseType: !209, size: 32, offset: 160)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "task_cur", scope: !873, file: !874, line: 80, baseType: !976, size: 32, offset: 192)
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 32)
!977 = !{!867}
!978 = !DIFile(filename: "zephyr/subsys/rtio/rtio_executor_concurrent.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !980)
!980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !981)
!981 = !{!982, !983}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !980, file: !254, line: 17, baseType: !105, size: 32)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !980, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!984 = !DIGlobalVariableExpression(var: !985, expr: !DIExpression())
!985 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !986, file: !1069, line: 72, type: !1149, isLocal: true, isDefinition: true)
!986 = distinct !DICompileUnit(language: DW_LANG_C99, file: !987, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !988, retainedTypes: !1055, globals: !1066, splitDebugInlining: false, nameTableKind: None)
!987 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!988 = !{!30, !989}
!989 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !570, line: 65, baseType: !108, size: 32, elements: !990)
!990 = !{!991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054}
!991 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!992 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!993 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!994 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!995 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!996 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!997 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!998 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!999 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!1000 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!1001 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!1002 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!1003 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!1004 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!1005 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!1006 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!1007 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!1008 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!1009 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!1010 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!1011 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!1012 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!1013 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!1014 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!1015 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!1016 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!1017 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!1018 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!1019 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!1020 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!1021 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!1022 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!1023 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!1024 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!1025 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!1026 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!1027 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!1028 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!1029 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!1030 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!1031 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!1032 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!1033 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!1034 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!1035 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!1036 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!1037 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!1038 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!1039 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!1040 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!1041 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!1042 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!1043 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!1044 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!1045 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!1046 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!1047 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!1048 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!1049 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!1050 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!1051 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!1052 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!1053 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!1054 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!1055 = !{!439, !108, !104, !1056}
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!1057 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !570, line: 243, baseType: !1058)
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !570, line: 235, size: 192, elements: !1059)
!1059 = !{!1060, !1061, !1062, !1063, !1064, !1065}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1058, file: !570, line: 237, baseType: !574, size: 32)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !1058, file: !570, line: 238, baseType: !574, size: 32, offset: 32)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !1058, file: !570, line: 239, baseType: !574, size: 32, offset: 64)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !1058, file: !570, line: 240, baseType: !574, size: 32, offset: 96)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !1058, file: !570, line: 241, baseType: !574, size: 32, offset: 128)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !1058, file: !570, line: 242, baseType: !574, size: 32, offset: 160)
!1066 = !{!1067, !1070, !1086, !1097, !1114, !984, !1116, !1129, !1131, !1133, !1135, !1137, !1139, !1141, !1143, !1145, !1147}
!1067 = !DIGlobalVariableExpression(var: !1068, expr: !DIExpression())
!1068 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !986, file: !1069, line: 424, type: !460, isLocal: false, isDefinition: true, align: 16)
!1069 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1070 = !DIGlobalVariableExpression(var: !1071, expr: !DIExpression())
!1071 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !986, file: !1069, line: 424, type: !1072, isLocal: false, isDefinition: true, align: 32)
!1072 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1073)
!1073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1074)
!1074 = !{!1075, !1076, !1077, !1078, !1084, !1085}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1073, file: !411, line: 380, baseType: !105, size: 32)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1073, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1073, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1073, file: !411, line: 386, baseType: !1079, size: 32, offset: 96)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 32)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1081)
!1081 = !{!1082, !1083}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1080, file: !411, line: 359, baseType: !164, size: 8)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1080, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1073, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1073, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1086 = !DIGlobalVariableExpression(var: !1087, expr: !DIExpression())
!1087 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !986, file: !1069, line: 424, type: !1088, isLocal: true, isDefinition: true, align: 32)
!1088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1089)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1090)
!1090 = !{!1091, !1096}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1089, file: !469, line: 60, baseType: !1092, size: 32)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 32)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!108, !1095}
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 32)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1089, file: !469, line: 65, baseType: !1095, size: 32, offset: 32)
!1097 = !DIGlobalVariableExpression(var: !1098, expr: !DIExpression())
!1098 = distinct !DIGlobalVariable(name: "exti_data", scope: !986, file: !1069, line: 423, type: !1099, isLocal: true, isDefinition: true)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !1069, line: 107, size: 1472, elements: !1100)
!1100 = !{!1101}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1099, file: !1069, line: 109, baseType: !1102, size: 1472)
!1102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1103, size: 1472, elements: !1112)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !1069, line: 101, size: 64, elements: !1104)
!1104 = !{!1105, !1111}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1103, file: !1069, line: 102, baseType: !1106, size: 32)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !1107, line: 63, baseType: !1108)
!1107 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 32)
!1109 = !DISubroutineType(types: !1110)
!1110 = !{null, !108, !104}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1103, file: !1069, line: 103, baseType: !104, size: 32, offset: 32)
!1112 = !{!1113}
!1113 = !DISubrange(count: 23)
!1114 = !DIGlobalVariableExpression(var: !1115, expr: !DIExpression())
!1115 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !986, file: !1069, line: 424, type: !1080, isLocal: true, isDefinition: true, align: 8)
!1116 = !DIGlobalVariableExpression(var: !1117, expr: !DIExpression())
!1117 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !1118, file: !1069, line: 493, type: !1123, isLocal: true, isDefinition: true, align: 32)
!1118 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !1069, file: !1069, line: 460, type: !1119, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !1121)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{null, !1095}
!1121 = !{!1122}
!1122 = !DILocalVariable(name: "dev", arg: 1, scope: !1118, file: !1069, line: 460, type: !1095)
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1124)
!1124 = !{!1125, !1126, !1127, !1128}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1123, file: !10, line: 55, baseType: !220, size: 32)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1123, file: !10, line: 57, baseType: !220, size: 32, offset: 32)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1123, file: !10, line: 59, baseType: !104, size: 32, offset: 64)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1123, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1129 = !DIGlobalVariableExpression(var: !1130, expr: !DIExpression())
!1130 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !1118, file: !1069, line: 497, type: !1123, isLocal: true, isDefinition: true, align: 32)
!1131 = !DIGlobalVariableExpression(var: !1132, expr: !DIExpression())
!1132 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !1118, file: !1069, line: 507, type: !1123, isLocal: true, isDefinition: true, align: 32)
!1133 = !DIGlobalVariableExpression(var: !1134, expr: !DIExpression())
!1134 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !1118, file: !1069, line: 512, type: !1123, isLocal: true, isDefinition: true, align: 32)
!1135 = !DIGlobalVariableExpression(var: !1136, expr: !DIExpression())
!1136 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !1118, file: !1069, line: 516, type: !1123, isLocal: true, isDefinition: true, align: 32)
!1137 = !DIGlobalVariableExpression(var: !1138, expr: !DIExpression())
!1138 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !1118, file: !1069, line: 523, type: !1123, isLocal: true, isDefinition: true, align: 32)
!1139 = !DIGlobalVariableExpression(var: !1140, expr: !DIExpression())
!1140 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !1118, file: !1069, line: 527, type: !1123, isLocal: true, isDefinition: true, align: 32)
!1141 = !DIGlobalVariableExpression(var: !1142, expr: !DIExpression())
!1142 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !1118, file: !1069, line: 581, type: !1123, isLocal: true, isDefinition: true, align: 32)
!1143 = !DIGlobalVariableExpression(var: !1144, expr: !DIExpression())
!1144 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !1118, file: !1069, line: 586, type: !1123, isLocal: true, isDefinition: true, align: 32)
!1145 = !DIGlobalVariableExpression(var: !1146, expr: !DIExpression())
!1146 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !1118, file: !1069, line: 591, type: !1123, isLocal: true, isDefinition: true, align: 32)
!1147 = !DIGlobalVariableExpression(var: !1148, expr: !DIExpression())
!1148 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !1118, file: !1069, line: 595, type: !1123, isLocal: true, isDefinition: true, align: 32)
!1149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1150, size: 736, elements: !1112)
!1150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1151)
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !570, line: 133, baseType: !989)
!1152 = !DIGlobalVariableExpression(var: !1153, expr: !DIExpression())
!1153 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !1154, file: !1218, line: 398, type: !1251, isLocal: true, isDefinition: true)
!1154 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1155, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1156, retainedTypes: !1169, globals: !1215, splitDebugInlining: false, nameTableKind: None)
!1155 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!1156 = !{!1157, !30, !1162}
!1157 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1158, line: 197, baseType: !32, size: 32, elements: !1159)
!1158 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1159 = !{!1160, !1161}
!1160 = !DIEnumerator(name: "SUCCESS", value: 0)
!1161 = !DIEnumerator(name: "ERROR", value: 1)
!1162 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !1163, line: 44, baseType: !32, size: 32, elements: !1164)
!1163 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1164 = !{!1165, !1166, !1167, !1168}
!1165 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!1166 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!1167 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!1168 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!1169 = !{!104, !108, !113, !1170, !1208, !1214}
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 32)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !570, line: 369, baseType: !1172)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !570, line: 335, size: 1152, elements: !1173)
!1173 = !{!1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1207}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1172, file: !570, line: 337, baseType: !574, size: 32)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1172, file: !570, line: 338, baseType: !574, size: 32, offset: 32)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1172, file: !570, line: 339, baseType: !574, size: 32, offset: 64)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1172, file: !570, line: 340, baseType: !574, size: 32, offset: 96)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1172, file: !570, line: 341, baseType: !574, size: 32, offset: 128)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1172, file: !570, line: 342, baseType: !574, size: 32, offset: 160)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1172, file: !570, line: 343, baseType: !574, size: 32, offset: 192)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1172, file: !570, line: 344, baseType: !113, size: 32, offset: 224)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1172, file: !570, line: 345, baseType: !574, size: 32, offset: 256)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1172, file: !570, line: 346, baseType: !574, size: 32, offset: 288)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1172, file: !570, line: 347, baseType: !1185, size: 64, offset: 320)
!1185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 64, elements: !679)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1172, file: !570, line: 348, baseType: !574, size: 32, offset: 384)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1172, file: !570, line: 349, baseType: !574, size: 32, offset: 416)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1172, file: !570, line: 350, baseType: !574, size: 32, offset: 448)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1172, file: !570, line: 351, baseType: !113, size: 32, offset: 480)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1172, file: !570, line: 352, baseType: !574, size: 32, offset: 512)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1172, file: !570, line: 353, baseType: !574, size: 32, offset: 544)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1172, file: !570, line: 354, baseType: !1185, size: 64, offset: 576)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1172, file: !570, line: 355, baseType: !574, size: 32, offset: 640)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1172, file: !570, line: 356, baseType: !574, size: 32, offset: 672)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1172, file: !570, line: 357, baseType: !574, size: 32, offset: 704)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1172, file: !570, line: 358, baseType: !113, size: 32, offset: 736)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1172, file: !570, line: 359, baseType: !574, size: 32, offset: 768)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1172, file: !570, line: 360, baseType: !574, size: 32, offset: 800)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1172, file: !570, line: 361, baseType: !1185, size: 64, offset: 832)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1172, file: !570, line: 362, baseType: !574, size: 32, offset: 896)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1172, file: !570, line: 363, baseType: !574, size: 32, offset: 928)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1172, file: !570, line: 364, baseType: !1185, size: 64, offset: 960)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1172, file: !570, line: 365, baseType: !574, size: 32, offset: 1024)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1172, file: !570, line: 366, baseType: !574, size: 32, offset: 1056)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1172, file: !570, line: 367, baseType: !1206, size: 32, offset: 1088)
!1206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 32, elements: !774)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1172, file: !570, line: 368, baseType: !574, size: 32, offset: 1120)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 32)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1210, line: 343, size: 64, elements: !1211)
!1210 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1211 = !{!1212, !1213}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1209, file: !1210, line: 344, baseType: !113, size: 32)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1209, file: !1210, line: 345, baseType: !113, size: 32, offset: 32)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!1215 = !{!1216, !1222, !1238, !1249, !1152}
!1216 = !DIGlobalVariableExpression(var: !1217, expr: !DIExpression())
!1217 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !1154, file: !1218, line: 752, type: !1219, isLocal: false, isDefinition: true, align: 16)
!1218 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 640, elements: !1220)
!1220 = !{!1221}
!1221 = !DISubrange(count: 40)
!1222 = !DIGlobalVariableExpression(var: !1223, expr: !DIExpression())
!1223 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !1154, file: !1218, line: 752, type: !1224, isLocal: false, isDefinition: true, align: 32)
!1224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1225)
!1225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1226)
!1226 = !{!1227, !1228, !1229, !1230, !1236, !1237}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1225, file: !411, line: 380, baseType: !105, size: 32)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1225, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1225, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1225, file: !411, line: 386, baseType: !1231, size: 32, offset: 96)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1233)
!1233 = !{!1234, !1235}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1232, file: !411, line: 359, baseType: !164, size: 8)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1232, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1225, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1225, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1238 = !DIGlobalVariableExpression(var: !1239, expr: !DIExpression())
!1239 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !1154, file: !1218, line: 752, type: !1240, isLocal: true, isDefinition: true, align: 32)
!1240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1241)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1242)
!1242 = !{!1243, !1248}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1241, file: !469, line: 60, baseType: !1244, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 32)
!1245 = !DISubroutineType(types: !1246)
!1246 = !{!108, !1247}
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1241, file: !469, line: 65, baseType: !1247, size: 32, offset: 32)
!1249 = !DIGlobalVariableExpression(var: !1250, expr: !DIExpression())
!1250 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !1154, file: !1218, line: 752, type: !1232, isLocal: true, isDefinition: true, align: 8)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1163, line: 100, size: 224, elements: !1252)
!1252 = !{!1253, !1259, !1260, !1269, !1274, !1279, !1285}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1251, file: !1163, line: 101, baseType: !1254, size: 32)
!1254 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1163, line: 76, baseType: !1255)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 32)
!1256 = !DISubroutineType(types: !1257)
!1257 = !{!108, !1247, !1258}
!1258 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !1163, line: 56, baseType: !104)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1251, file: !1163, line: 102, baseType: !1254, size: 32, offset: 32)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1251, file: !1163, line: 103, baseType: !1261, size: 32, offset: 64)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1163, line: 83, baseType: !1262)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = !DISubroutineType(types: !1264)
!1264 = !{!108, !1247, !1258, !1265, !104}
!1265 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1163, line: 72, baseType: !1266)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 32)
!1267 = !DISubroutineType(types: !1268)
!1268 = !{null, !1247, !1258, !104}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1251, file: !1163, line: 104, baseType: !1270, size: 32, offset: 96)
!1270 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1163, line: 79, baseType: !1271)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 32)
!1272 = !DISubroutineType(types: !1273)
!1273 = !{!108, !1247, !1258, !1214}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1251, file: !1163, line: 105, baseType: !1275, size: 32, offset: 128)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1163, line: 88, baseType: !1276)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1277 = !DISubroutineType(types: !1278)
!1278 = !{!1162, !1247, !1258}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1251, file: !1163, line: 106, baseType: !1280, size: 32, offset: 160)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1163, line: 92, baseType: !1281)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 32)
!1282 = !DISubroutineType(types: !1283)
!1283 = !{!108, !1247, !1258, !1284}
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !1163, line: 64, baseType: !104)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1251, file: !1163, line: 107, baseType: !1286, size: 32, offset: 192)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1163, line: 96, baseType: !1287)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 32)
!1288 = !DISubroutineType(types: !1289)
!1289 = !{!108, !1247, !1258, !104}
!1290 = !DIGlobalVariableExpression(var: !1291, expr: !DIExpression())
!1291 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1292, file: !1349, line: 603, type: !1351, isLocal: true, isDefinition: true, align: 32)
!1292 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1293, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1294, globals: !1346, splitDebugInlining: false, nameTableKind: None)
!1293 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!1294 = !{!104, !108, !1295}
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 32)
!1296 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1297)
!1297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1298, line: 336, size: 160, elements: !1299)
!1298 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1299 = !{!1300, !1320, !1324, !1328, !1341}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1297, file: !1298, line: 365, baseType: !1301, size: 32)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 32)
!1302 = !DISubroutineType(types: !1303)
!1303 = !{!108, !1304, !1319}
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 32)
!1305 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1306)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1307)
!1307 = !{!1308, !1309, !1310, !1311, !1317, !1318}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1306, file: !411, line: 380, baseType: !105, size: 32)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1306, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1306, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1306, file: !411, line: 386, baseType: !1312, size: 32, offset: 96)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 32)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1314)
!1314 = !{!1315, !1316}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1313, file: !411, line: 359, baseType: !164, size: 8)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1313, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1306, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1306, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 32)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1297, file: !1298, line: 366, baseType: !1321, size: 32, offset: 32)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 32)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{null, !1304, !165}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1297, file: !1298, line: 374, baseType: !1325, size: 32, offset: 64)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 32)
!1326 = !DISubroutineType(types: !1327)
!1327 = !{!108, !1304}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1297, file: !1298, line: 377, baseType: !1329, size: 32, offset: 96)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 32)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{!108, !1304, !1332}
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 32)
!1333 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1334)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1298, line: 122, size: 64, elements: !1335)
!1335 = !{!1336, !1337, !1338, !1339, !1340}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1334, file: !1298, line: 123, baseType: !113, size: 32)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1334, file: !1298, line: 124, baseType: !164, size: 8, offset: 32)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1334, file: !1298, line: 125, baseType: !164, size: 8, offset: 40)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1334, file: !1298, line: 126, baseType: !164, size: 8, offset: 48)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1334, file: !1298, line: 127, baseType: !164, size: 8, offset: 56)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1297, file: !1298, line: 379, baseType: !1342, size: 32, offset: 128)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 32)
!1343 = !DISubroutineType(types: !1344)
!1344 = !{!108, !1304, !1345}
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 32)
!1346 = !{!1290, !1347}
!1347 = !DIGlobalVariableExpression(var: !1348, expr: !DIExpression())
!1348 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1292, file: !1349, line: 38, type: !1350, isLocal: true, isDefinition: true)
!1349 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1350 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1304)
!1351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1352)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1353)
!1353 = !{!1354, !1355}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1352, file: !469, line: 60, baseType: !1325, size: 32)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1352, file: !469, line: 65, baseType: !1304, size: 32, offset: 32)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1358, file: !1527, line: 762, type: !1639, isLocal: true, isDefinition: true)
!1358 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1359, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1360, retainedTypes: !1378, globals: !1524, splitDebugInlining: false, nameTableKind: None)
!1359 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!1360 = !{!30, !1361, !1367, !1372, !1162}
!1361 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1362, line: 506, baseType: !32, size: 32, elements: !1363)
!1362 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1363 = !{!1364, !1365, !1366}
!1364 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1365 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1366 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1367 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1362, line: 512, baseType: !32, size: 32, elements: !1368)
!1368 = !{!1369, !1370, !1371}
!1369 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1370 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1371 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1372 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !1107, line: 43, baseType: !32, size: 32, elements: !1373)
!1373 = !{!1374, !1375, !1376, !1377}
!1374 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1375 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1376 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1377 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1378 = !{!104, !108, !1379, !1449, !1454, !1414, !1367, !1361, !1459, !1460, !113, !1474, !1429, !443, !1484, !1485}
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 32)
!1380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1381)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1362, line: 523, size: 288, elements: !1382)
!1382 = !{!1383, !1404, !1410, !1415, !1419, !1420, !1421, !1425, !1445}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1381, file: !1362, line: 524, baseType: !1384, size: 32)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 32)
!1385 = !DISubroutineType(types: !1386)
!1386 = !{!108, !1387, !1402, !1403}
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 32)
!1388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1389)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1390)
!1390 = !{!1391, !1392, !1393, !1394, !1400, !1401}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1389, file: !411, line: 380, baseType: !105, size: 32)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1389, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1389, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1389, file: !411, line: 386, baseType: !1395, size: 32, offset: 96)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 32)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1397)
!1397 = !{!1398, !1399}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1396, file: !411, line: 359, baseType: !164, size: 8)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1396, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1389, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1389, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1402 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1362, line: 237, baseType: !164)
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1362, line: 257, baseType: !113)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1381, file: !1362, line: 530, baseType: !1405, size: 32, offset: 32)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 32)
!1406 = !DISubroutineType(types: !1407)
!1407 = !{!108, !1387, !1408}
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 32)
!1409 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1362, line: 229, baseType: !113)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1381, file: !1362, line: 532, baseType: !1411, size: 32, offset: 64)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 32)
!1412 = !DISubroutineType(types: !1413)
!1413 = !{!108, !1387, !1414, !1409}
!1414 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1362, line: 216, baseType: !113)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1381, file: !1362, line: 535, baseType: !1416, size: 32, offset: 96)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 32)
!1417 = !DISubroutineType(types: !1418)
!1418 = !{!108, !1387, !1414}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1381, file: !1362, line: 537, baseType: !1416, size: 32, offset: 128)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1381, file: !1362, line: 539, baseType: !1416, size: 32, offset: 160)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1381, file: !1362, line: 541, baseType: !1422, size: 32, offset: 192)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 32)
!1423 = !DISubroutineType(types: !1424)
!1424 = !{!108, !1387, !1402, !1361, !1367}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1381, file: !1362, line: 544, baseType: !1426, size: 32, offset: 224)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 32)
!1427 = !DISubroutineType(types: !1428)
!1428 = !{!108, !1387, !1429, !422}
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 32)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1362, line: 478, size: 96, elements: !1431)
!1431 = !{!1432, !1439, !1444}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1430, file: !1362, line: 482, baseType: !1433, size: 32)
!1433 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1434, line: 33, baseType: !1435)
!1434 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1434, line: 29, size: 32, elements: !1436)
!1436 = !{!1437}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1435, file: !1434, line: 30, baseType: !1438, size: 32)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 32)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1430, file: !1362, line: 485, baseType: !1440, size: 32, offset: 32)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1362, line: 464, baseType: !1441)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 32)
!1442 = !DISubroutineType(types: !1443)
!1443 = !{null, !1387, !1429, !1414}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1430, file: !1362, line: 493, baseType: !1414, size: 32, offset: 64)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1381, file: !1362, line: 547, baseType: !1446, size: 32, offset: 256)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 32)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{!113, !1387}
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 32)
!1450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1451)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1362, line: 428, size: 32, elements: !1452)
!1452 = !{!1453}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1451, file: !1362, line: 434, baseType: !1414, size: 32)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 32)
!1455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1456)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1362, line: 441, size: 32, elements: !1457)
!1457 = !{!1458}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1456, file: !1362, line: 447, baseType: !1414, size: 32)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 32)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 32)
!1461 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !570, line: 275, baseType: !1462)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !570, line: 264, size: 320, elements: !1463)
!1463 = !{!1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1462, file: !570, line: 266, baseType: !574, size: 32)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1462, file: !570, line: 267, baseType: !574, size: 32, offset: 32)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1462, file: !570, line: 268, baseType: !574, size: 32, offset: 64)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1462, file: !570, line: 269, baseType: !574, size: 32, offset: 96)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1462, file: !570, line: 270, baseType: !574, size: 32, offset: 128)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1462, file: !570, line: 271, baseType: !574, size: 32, offset: 160)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1462, file: !570, line: 272, baseType: !574, size: 32, offset: 192)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1462, file: !570, line: 273, baseType: !574, size: 32, offset: 224)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1462, file: !570, line: 274, baseType: !1473, size: 64, offset: 256)
!1473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !574, size: 64, elements: !679)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 32)
!1475 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !570, line: 288, baseType: !1476)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !570, line: 281, size: 288, elements: !1477)
!1477 = !{!1478, !1479, !1480, !1482, !1483}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1476, file: !570, line: 283, baseType: !574, size: 32)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1476, file: !570, line: 284, baseType: !574, size: 32, offset: 32)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1476, file: !570, line: 285, baseType: !1481, size: 128, offset: 64)
!1481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !574, size: 128, elements: !461)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1476, file: !570, line: 286, baseType: !1185, size: 64, offset: 192)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1476, file: !570, line: 287, baseType: !574, size: 32, offset: 256)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 32)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 32)
!1486 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1487)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1163, line: 100, size: 224, elements: !1488)
!1488 = !{!1489, !1494, !1495, !1504, !1509, !1514, !1519}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1487, file: !1163, line: 101, baseType: !1490, size: 32)
!1490 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1163, line: 76, baseType: !1491)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 32)
!1492 = !DISubroutineType(types: !1493)
!1493 = !{!108, !1387, !1258}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1487, file: !1163, line: 102, baseType: !1490, size: 32, offset: 32)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1487, file: !1163, line: 103, baseType: !1496, size: 32, offset: 64)
!1496 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1163, line: 83, baseType: !1497)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 32)
!1498 = !DISubroutineType(types: !1499)
!1499 = !{!108, !1387, !1258, !1500, !104}
!1500 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1163, line: 72, baseType: !1501)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 32)
!1502 = !DISubroutineType(types: !1503)
!1503 = !{null, !1387, !1258, !104}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1487, file: !1163, line: 104, baseType: !1505, size: 32, offset: 96)
!1505 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1163, line: 79, baseType: !1506)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 32)
!1507 = !DISubroutineType(types: !1508)
!1508 = !{!108, !1387, !1258, !1214}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1487, file: !1163, line: 105, baseType: !1510, size: 32, offset: 128)
!1510 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1163, line: 88, baseType: !1511)
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 32)
!1512 = !DISubroutineType(types: !1513)
!1513 = !{!1162, !1387, !1258}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1487, file: !1163, line: 106, baseType: !1515, size: 32, offset: 160)
!1515 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1163, line: 92, baseType: !1516)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 32)
!1517 = !DISubroutineType(types: !1518)
!1518 = !{!108, !1387, !1258, !1284}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1487, file: !1163, line: 107, baseType: !1520, size: 32, offset: 192)
!1520 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1163, line: 96, baseType: !1521)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 32)
!1522 = !DISubroutineType(types: !1523)
!1523 = !{!108, !1387, !1258, !104}
!1524 = !{!1525, !1531, !1533, !1543, !1545, !1547, !1549, !1554, !1556, !1558, !1563, !1565, !1567, !1569, !1571, !1573, !1575, !1577, !1579, !1581, !1583, !1585, !1587, !1589, !1591, !1605, !1607, !1609, !1611, !1613, !1615, !1617, !1619, !1621, !1623, !1625, !1627, !1629, !1631, !1633, !1356, !1635, !1637, !1650, !1652, !1654, !1656, !1658, !1660}
!1525 = !DIGlobalVariableExpression(var: !1526, expr: !DIExpression())
!1526 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_28", scope: !1358, file: !1527, line: 762, type: !1528, isLocal: false, isDefinition: true, align: 16)
!1527 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 112, elements: !1529)
!1529 = !{!1530}
!1530 = !DISubrange(count: 7)
!1531 = !DIGlobalVariableExpression(var: !1532, expr: !DIExpression())
!1532 = distinct !DIGlobalVariable(name: "__device_dts_ord_28", scope: !1358, file: !1527, line: 762, type: !1388, isLocal: false, isDefinition: true, align: 32)
!1533 = !DIGlobalVariableExpression(var: !1534, expr: !DIExpression())
!1534 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_28", scope: !1358, file: !1527, line: 762, type: !1535, isLocal: true, isDefinition: true, align: 32)
!1535 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1536)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1537)
!1537 = !{!1538, !1542}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1536, file: !469, line: 60, baseType: !1539, size: 32)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 32)
!1540 = !DISubroutineType(types: !1541)
!1541 = !{!108, !1387}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1536, file: !469, line: 65, baseType: !1387, size: 32, offset: 32)
!1543 = !DIGlobalVariableExpression(var: !1544, expr: !DIExpression())
!1544 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !1358, file: !1527, line: 766, type: !1528, isLocal: false, isDefinition: true, align: 16)
!1545 = !DIGlobalVariableExpression(var: !1546, expr: !DIExpression())
!1546 = distinct !DIGlobalVariable(name: "__device_dts_ord_23", scope: !1358, file: !1527, line: 766, type: !1388, isLocal: false, isDefinition: true, align: 32)
!1547 = !DIGlobalVariableExpression(var: !1548, expr: !DIExpression())
!1548 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_23", scope: !1358, file: !1527, line: 766, type: !1535, isLocal: true, isDefinition: true, align: 32)
!1549 = !DIGlobalVariableExpression(var: !1550, expr: !DIExpression())
!1550 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1358, file: !1527, line: 770, type: !1551, isLocal: false, isDefinition: true, align: 16)
!1551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 80, elements: !1552)
!1552 = !{!1553}
!1553 = !DISubrange(count: 5)
!1554 = !DIGlobalVariableExpression(var: !1555, expr: !DIExpression())
!1555 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1358, file: !1527, line: 770, type: !1388, isLocal: false, isDefinition: true, align: 32)
!1556 = !DIGlobalVariableExpression(var: !1557, expr: !DIExpression())
!1557 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1358, file: !1527, line: 770, type: !1535, isLocal: true, isDefinition: true, align: 32)
!1558 = !DIGlobalVariableExpression(var: !1559, expr: !DIExpression())
!1559 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_26", scope: !1358, file: !1527, line: 774, type: !1560, isLocal: false, isDefinition: true, align: 16)
!1560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 96, elements: !1561)
!1561 = !{!1562}
!1562 = !DISubrange(count: 6)
!1563 = !DIGlobalVariableExpression(var: !1564, expr: !DIExpression())
!1564 = distinct !DIGlobalVariable(name: "__device_dts_ord_26", scope: !1358, file: !1527, line: 774, type: !1388, isLocal: false, isDefinition: true, align: 32)
!1565 = !DIGlobalVariableExpression(var: !1566, expr: !DIExpression())
!1566 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_26", scope: !1358, file: !1527, line: 774, type: !1535, isLocal: true, isDefinition: true, align: 32)
!1567 = !DIGlobalVariableExpression(var: !1568, expr: !DIExpression())
!1568 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1358, file: !1527, line: 778, type: !1551, isLocal: false, isDefinition: true, align: 16)
!1569 = !DIGlobalVariableExpression(var: !1570, expr: !DIExpression())
!1570 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1358, file: !1527, line: 778, type: !1388, isLocal: false, isDefinition: true, align: 32)
!1571 = !DIGlobalVariableExpression(var: !1572, expr: !DIExpression())
!1572 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1358, file: !1527, line: 778, type: !1535, isLocal: true, isDefinition: true, align: 32)
!1573 = !DIGlobalVariableExpression(var: !1574, expr: !DIExpression())
!1574 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !1358, file: !1527, line: 782, type: !1551, isLocal: false, isDefinition: true, align: 16)
!1575 = !DIGlobalVariableExpression(var: !1576, expr: !DIExpression())
!1576 = distinct !DIGlobalVariable(name: "__device_dts_ord_77", scope: !1358, file: !1527, line: 782, type: !1388, isLocal: false, isDefinition: true, align: 32)
!1577 = !DIGlobalVariableExpression(var: !1578, expr: !DIExpression())
!1578 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_77", scope: !1358, file: !1527, line: 782, type: !1535, isLocal: true, isDefinition: true, align: 32)
!1579 = !DIGlobalVariableExpression(var: !1580, expr: !DIExpression())
!1580 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !1358, file: !1527, line: 786, type: !1551, isLocal: false, isDefinition: true, align: 16)
!1581 = !DIGlobalVariableExpression(var: !1582, expr: !DIExpression())
!1582 = distinct !DIGlobalVariable(name: "__device_dts_ord_78", scope: !1358, file: !1527, line: 786, type: !1388, isLocal: false, isDefinition: true, align: 32)
!1583 = !DIGlobalVariableExpression(var: !1584, expr: !DIExpression())
!1584 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_78", scope: !1358, file: !1527, line: 786, type: !1535, isLocal: true, isDefinition: true, align: 32)
!1585 = !DIGlobalVariableExpression(var: !1586, expr: !DIExpression())
!1586 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !1358, file: !1527, line: 790, type: !1551, isLocal: false, isDefinition: true, align: 16)
!1587 = !DIGlobalVariableExpression(var: !1588, expr: !DIExpression())
!1588 = distinct !DIGlobalVariable(name: "__device_dts_ord_79", scope: !1358, file: !1527, line: 790, type: !1388, isLocal: false, isDefinition: true, align: 32)
!1589 = !DIGlobalVariableExpression(var: !1590, expr: !DIExpression())
!1590 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_79", scope: !1358, file: !1527, line: 790, type: !1535, isLocal: true, isDefinition: true, align: 32)
!1591 = !DIGlobalVariableExpression(var: !1592, expr: !DIExpression())
!1592 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1358, file: !1527, line: 762, type: !1593, isLocal: true, isDefinition: true)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1594, line: 237, size: 128, elements: !1595)
!1594 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1595 = !{!1596, !1597, !1598}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1593, file: !1594, line: 239, baseType: !1456, size: 32)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1593, file: !1594, line: 241, baseType: !1387, size: 32, offset: 32)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1593, file: !1594, line: 243, baseType: !1599, size: 64, offset: 64)
!1599 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1434, line: 40, baseType: !1600)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1434, line: 35, size: 64, elements: !1601)
!1601 = !{!1602, !1604}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1600, file: !1434, line: 36, baseType: !1603, size: 32)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 32)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1600, file: !1434, line: 37, baseType: !1603, size: 32, offset: 32)
!1605 = !DIGlobalVariableExpression(var: !1606, expr: !DIExpression())
!1606 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_28", scope: !1358, file: !1527, line: 762, type: !1396, isLocal: true, isDefinition: true, align: 8)
!1607 = !DIGlobalVariableExpression(var: !1608, expr: !DIExpression())
!1608 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1358, file: !1527, line: 766, type: !1593, isLocal: true, isDefinition: true)
!1609 = !DIGlobalVariableExpression(var: !1610, expr: !DIExpression())
!1610 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_23", scope: !1358, file: !1527, line: 766, type: !1396, isLocal: true, isDefinition: true, align: 8)
!1611 = !DIGlobalVariableExpression(var: !1612, expr: !DIExpression())
!1612 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1358, file: !1527, line: 770, type: !1593, isLocal: true, isDefinition: true)
!1613 = !DIGlobalVariableExpression(var: !1614, expr: !DIExpression())
!1614 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1358, file: !1527, line: 770, type: !1396, isLocal: true, isDefinition: true, align: 8)
!1615 = !DIGlobalVariableExpression(var: !1616, expr: !DIExpression())
!1616 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1358, file: !1527, line: 774, type: !1593, isLocal: true, isDefinition: true)
!1617 = !DIGlobalVariableExpression(var: !1618, expr: !DIExpression())
!1618 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_26", scope: !1358, file: !1527, line: 774, type: !1396, isLocal: true, isDefinition: true, align: 8)
!1619 = !DIGlobalVariableExpression(var: !1620, expr: !DIExpression())
!1620 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1358, file: !1527, line: 778, type: !1593, isLocal: true, isDefinition: true)
!1621 = !DIGlobalVariableExpression(var: !1622, expr: !DIExpression())
!1622 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1358, file: !1527, line: 778, type: !1396, isLocal: true, isDefinition: true, align: 8)
!1623 = !DIGlobalVariableExpression(var: !1624, expr: !DIExpression())
!1624 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1358, file: !1527, line: 782, type: !1593, isLocal: true, isDefinition: true)
!1625 = !DIGlobalVariableExpression(var: !1626, expr: !DIExpression())
!1626 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_77", scope: !1358, file: !1527, line: 782, type: !1396, isLocal: true, isDefinition: true, align: 8)
!1627 = !DIGlobalVariableExpression(var: !1628, expr: !DIExpression())
!1628 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1358, file: !1527, line: 786, type: !1593, isLocal: true, isDefinition: true)
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_78", scope: !1358, file: !1527, line: 786, type: !1396, isLocal: true, isDefinition: true, align: 8)
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1358, file: !1527, line: 790, type: !1593, isLocal: true, isDefinition: true)
!1633 = !DIGlobalVariableExpression(var: !1634, expr: !DIExpression())
!1634 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_79", scope: !1358, file: !1527, line: 790, type: !1396, isLocal: true, isDefinition: true, align: 8)
!1635 = !DIGlobalVariableExpression(var: !1636, expr: !DIExpression())
!1636 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1358, file: !1527, line: 656, type: !1380, isLocal: true, isDefinition: true)
!1637 = !DIGlobalVariableExpression(var: !1638, expr: !DIExpression())
!1638 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1358, file: !1527, line: 766, type: !1639, isLocal: true, isDefinition: true)
!1639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1640)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1594, line: 224, size: 160, elements: !1641)
!1641 = !{!1642, !1643, !1644, !1645}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1640, file: !1594, line: 226, baseType: !1451, size: 32)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1640, file: !1594, line: 228, baseType: !1214, size: 32, offset: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1640, file: !1594, line: 230, baseType: !108, size: 32, offset: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1640, file: !1594, line: 231, baseType: !1646, size: 64, offset: 96)
!1646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1210, line: 343, size: 64, elements: !1647)
!1647 = !{!1648, !1649}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1646, file: !1210, line: 344, baseType: !113, size: 32)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1646, file: !1210, line: 345, baseType: !113, size: 32, offset: 32)
!1650 = !DIGlobalVariableExpression(var: !1651, expr: !DIExpression())
!1651 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1358, file: !1527, line: 770, type: !1639, isLocal: true, isDefinition: true)
!1652 = !DIGlobalVariableExpression(var: !1653, expr: !DIExpression())
!1653 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1358, file: !1527, line: 774, type: !1639, isLocal: true, isDefinition: true)
!1654 = !DIGlobalVariableExpression(var: !1655, expr: !DIExpression())
!1655 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1358, file: !1527, line: 778, type: !1639, isLocal: true, isDefinition: true)
!1656 = !DIGlobalVariableExpression(var: !1657, expr: !DIExpression())
!1657 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1358, file: !1527, line: 782, type: !1639, isLocal: true, isDefinition: true)
!1658 = !DIGlobalVariableExpression(var: !1659, expr: !DIExpression())
!1659 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1358, file: !1527, line: 786, type: !1639, isLocal: true, isDefinition: true)
!1660 = !DIGlobalVariableExpression(var: !1661, expr: !DIExpression())
!1661 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1358, file: !1527, line: 790, type: !1639, isLocal: true, isDefinition: true)
!1662 = !DIGlobalVariableExpression(var: !1663, expr: !DIExpression())
!1663 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1664, file: !1803, line: 44, type: !1919, isLocal: false, isDefinition: true)
!1664 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1665, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1666, retainedTypes: !1699, globals: !1800, splitDebugInlining: false, nameTableKind: None)
!1665 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!1666 = !{!30, !1667, !1674, !1681, !1688, !1694, !1162}
!1667 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1298, line: 47, baseType: !32, size: 32, elements: !1668)
!1668 = !{!1669, !1670, !1671, !1672, !1673}
!1669 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1670 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1671 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1672 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1673 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1674 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1298, line: 75, baseType: !32, size: 32, elements: !1675)
!1675 = !{!1676, !1677, !1678, !1679, !1680}
!1676 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1677 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1678 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1679 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1680 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1681 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1298, line: 92, baseType: !32, size: 32, elements: !1682)
!1682 = !{!1683, !1684, !1685, !1686, !1687}
!1683 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1684 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1685 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1686 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1687 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1688 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1298, line: 84, baseType: !32, size: 32, elements: !1689)
!1689 = !{!1690, !1691, !1692, !1693}
!1690 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1691 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1692 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1693 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1694 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1298, line: 107, baseType: !32, size: 32, elements: !1695)
!1695 = !{!1696, !1697, !1698}
!1696 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1697 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1698 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1699 = !{!104, !108, !1700, !165, !164, !1749, !113, !1258, !1760, !168, !114, !1799}
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 32)
!1701 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1702)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1298, line: 336, size: 160, elements: !1703)
!1703 = !{!1704, !1723, !1727, !1731, !1744}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1702, file: !1298, line: 365, baseType: !1705, size: 32)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 32)
!1706 = !DISubroutineType(types: !1707)
!1707 = !{!108, !1708, !1319}
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 32)
!1709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1710)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1711)
!1711 = !{!1712, !1713, !1714, !1715, !1721, !1722}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1710, file: !411, line: 380, baseType: !105, size: 32)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1710, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1710, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1710, file: !411, line: 386, baseType: !1716, size: 32, offset: 96)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 32)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1718)
!1718 = !{!1719, !1720}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1717, file: !411, line: 359, baseType: !164, size: 8)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1717, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1710, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1710, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1702, file: !1298, line: 366, baseType: !1724, size: 32, offset: 32)
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 32)
!1725 = !DISubroutineType(types: !1726)
!1726 = !{null, !1708, !165}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1702, file: !1298, line: 374, baseType: !1728, size: 32, offset: 64)
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 32)
!1729 = !DISubroutineType(types: !1730)
!1730 = !{!108, !1708}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1702, file: !1298, line: 377, baseType: !1732, size: 32, offset: 96)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 32)
!1733 = !DISubroutineType(types: !1734)
!1734 = !{!108, !1708, !1735}
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1737)
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1298, line: 122, size: 64, elements: !1738)
!1738 = !{!1739, !1740, !1741, !1742, !1743}
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1737, file: !1298, line: 123, baseType: !113, size: 32)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1737, file: !1298, line: 124, baseType: !164, size: 8, offset: 32)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1737, file: !1298, line: 125, baseType: !164, size: 8, offset: 40)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1737, file: !1298, line: 126, baseType: !164, size: 8, offset: 48)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1737, file: !1298, line: 127, baseType: !164, size: 8, offset: 56)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1702, file: !1298, line: 379, baseType: !1745, size: 32, offset: 128)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 32)
!1746 = !DISubroutineType(types: !1747)
!1747 = !{!108, !1708, !1748}
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1737, size: 32)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 32)
!1750 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !570, line: 507, baseType: !1751)
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !570, line: 498, size: 224, elements: !1752)
!1752 = !{!1753, !1754, !1755, !1756, !1757, !1758, !1759}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1751, file: !570, line: 500, baseType: !574, size: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1751, file: !570, line: 501, baseType: !574, size: 32, offset: 32)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1751, file: !570, line: 502, baseType: !574, size: 32, offset: 64)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1751, file: !570, line: 503, baseType: !574, size: 32, offset: 96)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1751, file: !570, line: 504, baseType: !574, size: 32, offset: 128)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1751, file: !570, line: 505, baseType: !574, size: 32, offset: 160)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1751, file: !570, line: 506, baseType: !574, size: 32, offset: 192)
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 32)
!1761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1762)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1163, line: 100, size: 224, elements: !1763)
!1763 = !{!1764, !1769, !1770, !1779, !1784, !1789, !1794}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1762, file: !1163, line: 101, baseType: !1765, size: 32)
!1765 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1163, line: 76, baseType: !1766)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 32)
!1767 = !DISubroutineType(types: !1768)
!1768 = !{!108, !1708, !1258}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1762, file: !1163, line: 102, baseType: !1765, size: 32, offset: 32)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1762, file: !1163, line: 103, baseType: !1771, size: 32, offset: 64)
!1771 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1163, line: 83, baseType: !1772)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 32)
!1773 = !DISubroutineType(types: !1774)
!1774 = !{!108, !1708, !1258, !1775, !104}
!1775 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1163, line: 72, baseType: !1776)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 32)
!1777 = !DISubroutineType(types: !1778)
!1778 = !{null, !1708, !1258, !104}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1762, file: !1163, line: 104, baseType: !1780, size: 32, offset: 96)
!1780 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1163, line: 79, baseType: !1781)
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 32)
!1782 = !DISubroutineType(types: !1783)
!1783 = !{!108, !1708, !1258, !1214}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1762, file: !1163, line: 105, baseType: !1785, size: 32, offset: 128)
!1785 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1163, line: 88, baseType: !1786)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 32)
!1787 = !DISubroutineType(types: !1788)
!1788 = !{!1162, !1708, !1258}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1762, file: !1163, line: 106, baseType: !1790, size: 32, offset: 160)
!1790 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1163, line: 92, baseType: !1791)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 32)
!1792 = !DISubroutineType(types: !1793)
!1793 = !{!108, !1708, !1258, !1284}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1762, file: !1163, line: 107, baseType: !1795, size: 32, offset: 192)
!1795 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1163, line: 96, baseType: !1796)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 32)
!1797 = !DISubroutineType(types: !1798)
!1798 = !{!108, !1708, !1258, !104}
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 32)
!1800 = !{!1662, !1801, !1805, !1807, !1814, !1816, !1818, !1820, !1822, !1824, !1826, !1828, !1830, !1832, !1876, !1879, !1881, !1884, !1887, !1889, !1895, !1897, !1899, !1901, !1903, !1905, !1907, !1909, !1911, !1913, !1915, !1917}
!1801 = !DIGlobalVariableExpression(var: !1802, expr: !DIExpression())
!1802 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_50", scope: !1664, file: !1803, line: 1914, type: !1804, isLocal: false, isDefinition: true, align: 16)
!1803 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 128, elements: !244)
!1805 = !DIGlobalVariableExpression(var: !1806, expr: !DIExpression())
!1806 = distinct !DIGlobalVariable(name: "__device_dts_ord_50", scope: !1664, file: !1803, line: 1914, type: !1709, isLocal: false, isDefinition: true, align: 32)
!1807 = !DIGlobalVariableExpression(var: !1808, expr: !DIExpression())
!1808 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_50", scope: !1664, file: !1803, line: 1914, type: !1809, isLocal: true, isDefinition: true, align: 32)
!1809 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1810)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1811)
!1811 = !{!1812, !1813}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1810, file: !469, line: 60, baseType: !1728, size: 32)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1810, file: !469, line: 65, baseType: !1708, size: 32, offset: 32)
!1814 = !DIGlobalVariableExpression(var: !1815, expr: !DIExpression())
!1815 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !1664, file: !1803, line: 1914, type: !1804, isLocal: false, isDefinition: true, align: 16)
!1816 = !DIGlobalVariableExpression(var: !1817, expr: !DIExpression())
!1817 = distinct !DIGlobalVariable(name: "__device_dts_ord_47", scope: !1664, file: !1803, line: 1914, type: !1709, isLocal: false, isDefinition: true, align: 32)
!1818 = !DIGlobalVariableExpression(var: !1819, expr: !DIExpression())
!1819 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_47", scope: !1664, file: !1803, line: 1914, type: !1809, isLocal: true, isDefinition: true, align: 32)
!1820 = !DIGlobalVariableExpression(var: !1821, expr: !DIExpression())
!1821 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !1664, file: !1803, line: 1914, type: !1804, isLocal: false, isDefinition: true, align: 16)
!1822 = !DIGlobalVariableExpression(var: !1823, expr: !DIExpression())
!1823 = distinct !DIGlobalVariable(name: "__device_dts_ord_53", scope: !1664, file: !1803, line: 1914, type: !1709, isLocal: false, isDefinition: true, align: 32)
!1824 = !DIGlobalVariableExpression(var: !1825, expr: !DIExpression())
!1825 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_53", scope: !1664, file: !1803, line: 1914, type: !1809, isLocal: true, isDefinition: true, align: 32)
!1826 = !DIGlobalVariableExpression(var: !1827, expr: !DIExpression())
!1827 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_50", scope: !1664, file: !1803, line: 1914, type: !1717, isLocal: true, isDefinition: true, align: 8)
!1828 = !DIGlobalVariableExpression(var: !1829, expr: !DIExpression())
!1829 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_47", scope: !1664, file: !1803, line: 1914, type: !1717, isLocal: true, isDefinition: true, align: 8)
!1830 = !DIGlobalVariableExpression(var: !1831, expr: !DIExpression())
!1831 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_53", scope: !1664, file: !1803, line: 1914, type: !1717, isLocal: true, isDefinition: true, align: 8)
!1832 = !DIGlobalVariableExpression(var: !1833, expr: !DIExpression())
!1833 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1664, file: !1803, line: 1914, type: !1834, isLocal: true, isDefinition: true)
!1834 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1835)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1836, line: 22, size: 224, elements: !1837)
!1836 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1837 = !{!1838, !1839, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1835, file: !1836, line: 24, baseType: !1749, size: 32)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1835, file: !1836, line: 26, baseType: !1840, size: 32, offset: 32)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 32)
!1841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1842)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1210, line: 343, size: 64, elements: !1843)
!1843 = !{!1844, !1845}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1842, file: !1210, line: 344, baseType: !113, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1842, file: !1210, line: 345, baseType: !113, size: 32, offset: 32)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1835, file: !1836, line: 28, baseType: !439, size: 32, offset: 64)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1835, file: !1836, line: 30, baseType: !422, size: 8, offset: 96)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1835, file: !1836, line: 32, baseType: !108, size: 32, offset: 128)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1835, file: !1836, line: 34, baseType: !422, size: 8, offset: 160)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1835, file: !1836, line: 36, baseType: !422, size: 8, offset: 168)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1835, file: !1836, line: 38, baseType: !422, size: 8, offset: 176)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1835, file: !1836, line: 40, baseType: !422, size: 8, offset: 184)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1835, file: !1836, line: 41, baseType: !1854, size: 32, offset: 192)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 32)
!1855 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1856)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1857, line: 60, size: 64, elements: !1858)
!1857 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1858 = !{!1859, !1875}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1856, file: !1857, line: 69, baseType: !1860, size: 32)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 32)
!1861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1862)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1857, line: 50, size: 64, elements: !1863)
!1863 = !{!1864, !1873, !1874}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1862, file: !1857, line: 52, baseType: !1865, size: 32)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 32)
!1866 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1867)
!1867 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1868, line: 37, baseType: !1869)
!1868 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1868, line: 32, size: 64, elements: !1870)
!1870 = !{!1871, !1872}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1869, file: !1868, line: 34, baseType: !113, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1869, file: !1868, line: 36, baseType: !113, size: 32, offset: 32)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1862, file: !1857, line: 54, baseType: !164, size: 8, offset: 32)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1862, file: !1857, line: 56, baseType: !164, size: 8, offset: 40)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1856, file: !1857, line: 71, baseType: !164, size: 8, offset: 32)
!1876 = !DIGlobalVariableExpression(var: !1877, expr: !DIExpression())
!1877 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1664, file: !1803, line: 1914, type: !1878, isLocal: true, isDefinition: true)
!1878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1841, size: 64, elements: !774)
!1879 = !DIGlobalVariableExpression(var: !1880, expr: !DIExpression())
!1880 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_50", scope: !1664, file: !1803, line: 1914, type: !1855, isLocal: true, isDefinition: true)
!1881 = !DIGlobalVariableExpression(var: !1882, expr: !DIExpression())
!1882 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_50", scope: !1664, file: !1803, line: 1914, type: !1883, isLocal: true, isDefinition: true)
!1883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1861, size: 64, elements: !774)
!1884 = !DIGlobalVariableExpression(var: !1885, expr: !DIExpression())
!1885 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_50", scope: !1664, file: !1803, line: 1914, type: !1886, isLocal: true, isDefinition: true)
!1886 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1866, size: 128, elements: !679)
!1887 = !DIGlobalVariableExpression(var: !1888, expr: !DIExpression())
!1888 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1664, file: !1803, line: 1539, type: !1701, isLocal: true, isDefinition: true)
!1889 = !DIGlobalVariableExpression(var: !1890, expr: !DIExpression())
!1890 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1664, file: !1803, line: 1914, type: !1891, isLocal: true, isDefinition: true)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1836, line: 74, size: 64, elements: !1892)
!1892 = !{!1893, !1894}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1891, file: !1836, line: 76, baseType: !113, size: 32)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1891, file: !1836, line: 78, baseType: !1708, size: 32, offset: 32)
!1895 = !DIGlobalVariableExpression(var: !1896, expr: !DIExpression())
!1896 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1664, file: !1803, line: 1914, type: !1834, isLocal: true, isDefinition: true)
!1897 = !DIGlobalVariableExpression(var: !1898, expr: !DIExpression())
!1898 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1664, file: !1803, line: 1914, type: !1878, isLocal: true, isDefinition: true)
!1899 = !DIGlobalVariableExpression(var: !1900, expr: !DIExpression())
!1900 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_47", scope: !1664, file: !1803, line: 1914, type: !1855, isLocal: true, isDefinition: true)
!1901 = !DIGlobalVariableExpression(var: !1902, expr: !DIExpression())
!1902 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_47", scope: !1664, file: !1803, line: 1914, type: !1883, isLocal: true, isDefinition: true)
!1903 = !DIGlobalVariableExpression(var: !1904, expr: !DIExpression())
!1904 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_47", scope: !1664, file: !1803, line: 1914, type: !1886, isLocal: true, isDefinition: true)
!1905 = !DIGlobalVariableExpression(var: !1906, expr: !DIExpression())
!1906 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1664, file: !1803, line: 1914, type: !1891, isLocal: true, isDefinition: true)
!1907 = !DIGlobalVariableExpression(var: !1908, expr: !DIExpression())
!1908 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1664, file: !1803, line: 1914, type: !1834, isLocal: true, isDefinition: true)
!1909 = !DIGlobalVariableExpression(var: !1910, expr: !DIExpression())
!1910 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1664, file: !1803, line: 1914, type: !1878, isLocal: true, isDefinition: true)
!1911 = !DIGlobalVariableExpression(var: !1912, expr: !DIExpression())
!1912 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_53", scope: !1664, file: !1803, line: 1914, type: !1855, isLocal: true, isDefinition: true)
!1913 = !DIGlobalVariableExpression(var: !1914, expr: !DIExpression())
!1914 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_53", scope: !1664, file: !1803, line: 1914, type: !1883, isLocal: true, isDefinition: true)
!1915 = !DIGlobalVariableExpression(var: !1916, expr: !DIExpression())
!1916 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_53", scope: !1664, file: !1803, line: 1914, type: !1886, isLocal: true, isDefinition: true)
!1917 = !DIGlobalVariableExpression(var: !1918, expr: !DIExpression())
!1918 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1664, file: !1803, line: 1914, type: !1891, isLocal: true, isDefinition: true)
!1919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1920)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !1921)
!1921 = !{!1922, !1923}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1920, file: !254, line: 17, baseType: !105, size: 32)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1920, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!1924 = !DIGlobalVariableExpression(var: !1925, expr: !DIExpression())
!1925 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1926, file: !2004, line: 65, type: !574, isLocal: true, isDefinition: true)
!1926 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1927, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1928, retainedTypes: !1929, globals: !2001, splitDebugInlining: false, nameTableKind: None)
!1927 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!1928 = !{!989}
!1929 = !{!109, !1930, !220, !164, !113, !1938, !1969}
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 32)
!1931 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !792, line: 770, baseType: !1932)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !792, line: 764, size: 128, elements: !1933)
!1933 = !{!1934, !1935, !1936, !1937}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1932, file: !792, line: 766, baseType: !574, size: 32)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1932, file: !792, line: 767, baseType: !574, size: 32, offset: 32)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1932, file: !792, line: 768, baseType: !574, size: 32, offset: 64)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1932, file: !792, line: 769, baseType: !796, size: 32, offset: 96)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 32)
!1939 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !792, line: 426, baseType: !1940)
!1940 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !792, line: 411, size: 28704, elements: !1941)
!1941 = !{!1942, !1944, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1959, !1964, !1968}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1940, file: !792, line: 413, baseType: !1943, size: 256)
!1943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !574, size: 256, elements: !244)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1940, file: !792, line: 414, baseType: !1945, size: 768, offset: 256)
!1945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 768, elements: !1946)
!1946 = !{!1947}
!1947 = !DISubrange(count: 24)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1940, file: !792, line: 415, baseType: !1943, size: 256, offset: 1024)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1940, file: !792, line: 416, baseType: !1945, size: 768, offset: 1280)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1940, file: !792, line: 417, baseType: !1943, size: 256, offset: 2048)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1940, file: !792, line: 418, baseType: !1945, size: 768, offset: 2304)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1940, file: !792, line: 419, baseType: !1943, size: 256, offset: 3072)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1940, file: !792, line: 420, baseType: !1945, size: 768, offset: 3328)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1940, file: !792, line: 421, baseType: !1943, size: 256, offset: 4096)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1940, file: !792, line: 422, baseType: !1956, size: 1792, offset: 4352)
!1956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1792, elements: !1957)
!1957 = !{!1958}
!1958 = !DISubrange(count: 56)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1940, file: !792, line: 423, baseType: !1960, size: 1920, offset: 6144)
!1960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1961, size: 1920, elements: !1962)
!1961 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !164)
!1962 = !{!1963}
!1963 = !DISubrange(count: 240)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1940, file: !792, line: 424, baseType: !1965, size: 20608, offset: 8064)
!1965 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 20608, elements: !1966)
!1966 = !{!1967}
!1967 = !DISubrange(count: 644)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1940, file: !792, line: 425, baseType: !574, size: 32, offset: 28672)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !792, line: 468, baseType: !1971)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !792, line: 445, size: 1120, elements: !1972)
!1972 = !{!1973, !1974, !1975, !1976, !1977, !1978, !1979, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1992, !1993, !1994, !1996, !1998, !2000}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1971, file: !792, line: 447, baseType: !796, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1971, file: !792, line: 448, baseType: !574, size: 32, offset: 32)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1971, file: !792, line: 449, baseType: !574, size: 32, offset: 64)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1971, file: !792, line: 450, baseType: !574, size: 32, offset: 96)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1971, file: !792, line: 451, baseType: !574, size: 32, offset: 128)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1971, file: !792, line: 452, baseType: !574, size: 32, offset: 160)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1971, file: !792, line: 453, baseType: !1980, size: 96, offset: 192)
!1980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1961, size: 96, elements: !1981)
!1981 = !{!1982}
!1982 = !DISubrange(count: 12)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1971, file: !792, line: 454, baseType: !574, size: 32, offset: 288)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1971, file: !792, line: 455, baseType: !574, size: 32, offset: 320)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1971, file: !792, line: 456, baseType: !574, size: 32, offset: 352)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1971, file: !792, line: 457, baseType: !574, size: 32, offset: 384)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1971, file: !792, line: 458, baseType: !574, size: 32, offset: 416)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1971, file: !792, line: 459, baseType: !574, size: 32, offset: 448)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1971, file: !792, line: 460, baseType: !574, size: 32, offset: 480)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1971, file: !792, line: 461, baseType: !1991, size: 64, offset: 512)
!1991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !796, size: 64, elements: !679)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1971, file: !792, line: 462, baseType: !796, size: 32, offset: 576)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1971, file: !792, line: 463, baseType: !796, size: 32, offset: 608)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1971, file: !792, line: 464, baseType: !1995, size: 128, offset: 640)
!1995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !796, size: 128, elements: !461)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1971, file: !792, line: 465, baseType: !1997, size: 160, offset: 768)
!1997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !796, size: 160, elements: !1552)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1971, file: !792, line: 466, baseType: !1999, size: 160, offset: 928)
!1999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 160, elements: !1552)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1971, file: !792, line: 467, baseType: !574, size: 32, offset: 1088)
!2001 = !{!2002, !2028, !2031, !2033, !2035, !1924}
!2002 = !DIGlobalVariableExpression(var: !2003, expr: !DIExpression())
!2003 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1926, file: !2004, line: 285, type: !2005, isLocal: true, isDefinition: true, align: 32)
!2004 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2005 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2006)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !2007)
!2007 = !{!2008, !2027}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2006, file: !469, line: 60, baseType: !2009, size: 32)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 32)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{!108, !2012}
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2014)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !2015)
!2015 = !{!2016, !2017, !2018, !2019, !2025, !2026}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2014, file: !411, line: 380, baseType: !105, size: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2014, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2014, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2014, file: !411, line: 386, baseType: !2020, size: 32, offset: 96)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 32)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !2022)
!2022 = !{!2023, !2024}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2021, file: !411, line: 359, baseType: !164, size: 8)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2021, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2014, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2014, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2006, file: !469, line: 65, baseType: !2012, size: 32, offset: 32)
!2028 = !DIGlobalVariableExpression(var: !2029, expr: !DIExpression())
!2029 = distinct !DIGlobalVariable(name: "lock", scope: !1926, file: !2004, line: 34, type: !2030, isLocal: true, isDefinition: true)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2031 = !DIGlobalVariableExpression(var: !2032, expr: !DIExpression())
!2032 = distinct !DIGlobalVariable(name: "last_load", scope: !1926, file: !2004, line: 36, type: !113, isLocal: true, isDefinition: true)
!2033 = !DIGlobalVariableExpression(var: !2034, expr: !DIExpression())
!2034 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1926, file: !2004, line: 48, type: !113, isLocal: true, isDefinition: true)
!2035 = !DIGlobalVariableExpression(var: !2036, expr: !DIExpression())
!2036 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1926, file: !2004, line: 54, type: !113, isLocal: true, isDefinition: true)
!2037 = !DIGlobalVariableExpression(var: !2038, expr: !DIExpression())
!2038 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !2039, file: !2121, line: 22, type: !2123, isLocal: true, isDefinition: true)
!2039 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2040, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2041, retainedTypes: !2042, globals: !2118, splitDebugInlining: false, nameTableKind: None)
!2040 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!2041 = !{!1361, !1367}
!2042 = !{!2043, !2107, !2112, !1414, !1367, !1361, !2117, !104}
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 32)
!2044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2045)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1362, line: 523, size: 288, elements: !2046)
!2046 = !{!2047, !2066, !2070, !2074, !2078, !2079, !2080, !2084, !2103}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !2045, file: !1362, line: 524, baseType: !2048, size: 32)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 32)
!2049 = !DISubroutineType(types: !2050)
!2050 = !{!108, !2051, !1402, !1403}
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 32)
!2052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2053)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !2054)
!2054 = !{!2055, !2056, !2057, !2058, !2064, !2065}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2053, file: !411, line: 380, baseType: !105, size: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2053, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2053, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2053, file: !411, line: 386, baseType: !2059, size: 32, offset: 96)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 32)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !2061)
!2061 = !{!2062, !2063}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2060, file: !411, line: 359, baseType: !164, size: 8)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2060, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2053, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2053, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !2045, file: !1362, line: 530, baseType: !2067, size: 32, offset: 32)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 32)
!2068 = !DISubroutineType(types: !2069)
!2069 = !{!108, !2051, !1408}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !2045, file: !1362, line: 532, baseType: !2071, size: 32, offset: 64)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 32)
!2072 = !DISubroutineType(types: !2073)
!2073 = !{!108, !2051, !1414, !1409}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !2045, file: !1362, line: 535, baseType: !2075, size: 32, offset: 96)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 32)
!2076 = !DISubroutineType(types: !2077)
!2077 = !{!108, !2051, !1414}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !2045, file: !1362, line: 537, baseType: !2075, size: 32, offset: 128)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !2045, file: !1362, line: 539, baseType: !2075, size: 32, offset: 160)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !2045, file: !1362, line: 541, baseType: !2081, size: 32, offset: 192)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 32)
!2082 = !DISubroutineType(types: !2083)
!2083 = !{!108, !2051, !1402, !1361, !1367}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !2045, file: !1362, line: 544, baseType: !2085, size: 32, offset: 224)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 32)
!2086 = !DISubroutineType(types: !2087)
!2087 = !{!108, !2051, !2088, !422}
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 32)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1362, line: 478, size: 96, elements: !2090)
!2090 = !{!2091, !2097, !2102}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2089, file: !1362, line: 482, baseType: !2092, size: 32)
!2092 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1434, line: 33, baseType: !2093)
!2093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1434, line: 29, size: 32, elements: !2094)
!2094 = !{!2095}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2093, file: !1434, line: 30, baseType: !2096, size: 32)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 32)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2089, file: !1362, line: 485, baseType: !2098, size: 32, offset: 32)
!2098 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1362, line: 464, baseType: !2099)
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 32)
!2100 = !DISubroutineType(types: !2101)
!2101 = !{null, !2051, !2088, !1414}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !2089, file: !1362, line: 493, baseType: !1414, size: 32, offset: 64)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !2045, file: !1362, line: 547, baseType: !2104, size: 32, offset: 256)
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 32)
!2105 = !DISubroutineType(types: !2106)
!2106 = !{!113, !2051}
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2109)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1362, line: 428, size: 32, elements: !2110)
!2110 = !{!2111}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !2109, file: !1362, line: 434, baseType: !1414, size: 32)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 32)
!2113 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2114)
!2114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1362, line: 441, size: 32, elements: !2115)
!2115 = !{!2116}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2114, file: !1362, line: 447, baseType: !1414, size: 32)
!2117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 32)
!2118 = !{!2119, !2037}
!2119 = !DIGlobalVariableExpression(var: !2120, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!2120 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !2039, file: !2121, line: 37, type: !2122, isLocal: true, isDefinition: true)
!2121 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !439)
!2123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2124, size: 352, elements: !2125)
!2124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2051)
!2125 = !{!2126}
!2126 = !DISubrange(count: 11)
!2127 = !DIGlobalVariableExpression(var: !2128, expr: !DIExpression())
!2128 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !2129, file: !2171, line: 139, type: !2177, isLocal: false, isDefinition: true)
!2129 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2130, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2131, globals: !2168, splitDebugInlining: false, nameTableKind: None)
!2130 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!2131 = !{!2132}
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 32)
!2133 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !570, line: 369, baseType: !2134)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !570, line: 335, size: 1152, elements: !2135)
!2135 = !{!2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2134, file: !570, line: 337, baseType: !574, size: 32)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2134, file: !570, line: 338, baseType: !574, size: 32, offset: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2134, file: !570, line: 339, baseType: !574, size: 32, offset: 64)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2134, file: !570, line: 340, baseType: !574, size: 32, offset: 96)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2134, file: !570, line: 341, baseType: !574, size: 32, offset: 128)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2134, file: !570, line: 342, baseType: !574, size: 32, offset: 160)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2134, file: !570, line: 343, baseType: !574, size: 32, offset: 192)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2134, file: !570, line: 344, baseType: !113, size: 32, offset: 224)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2134, file: !570, line: 345, baseType: !574, size: 32, offset: 256)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2134, file: !570, line: 346, baseType: !574, size: 32, offset: 288)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2134, file: !570, line: 347, baseType: !1185, size: 64, offset: 320)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2134, file: !570, line: 348, baseType: !574, size: 32, offset: 384)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2134, file: !570, line: 349, baseType: !574, size: 32, offset: 416)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2134, file: !570, line: 350, baseType: !574, size: 32, offset: 448)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2134, file: !570, line: 351, baseType: !113, size: 32, offset: 480)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2134, file: !570, line: 352, baseType: !574, size: 32, offset: 512)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2134, file: !570, line: 353, baseType: !574, size: 32, offset: 544)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2134, file: !570, line: 354, baseType: !1185, size: 64, offset: 576)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2134, file: !570, line: 355, baseType: !574, size: 32, offset: 640)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2134, file: !570, line: 356, baseType: !574, size: 32, offset: 672)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2134, file: !570, line: 357, baseType: !574, size: 32, offset: 704)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2134, file: !570, line: 358, baseType: !113, size: 32, offset: 736)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2134, file: !570, line: 359, baseType: !574, size: 32, offset: 768)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2134, file: !570, line: 360, baseType: !574, size: 32, offset: 800)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2134, file: !570, line: 361, baseType: !1185, size: 64, offset: 832)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2134, file: !570, line: 362, baseType: !574, size: 32, offset: 896)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2134, file: !570, line: 363, baseType: !574, size: 32, offset: 928)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2134, file: !570, line: 364, baseType: !1185, size: 64, offset: 960)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2134, file: !570, line: 365, baseType: !574, size: 32, offset: 1024)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2134, file: !570, line: 366, baseType: !574, size: 32, offset: 1056)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2134, file: !570, line: 367, baseType: !1206, size: 32, offset: 1088)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2134, file: !570, line: 368, baseType: !574, size: 32, offset: 1120)
!2168 = !{!2169, !2172, !2127}
!2169 = !DIGlobalVariableExpression(var: !2170, expr: !DIExpression())
!2170 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2129, file: !2171, line: 137, type: !113, isLocal: false, isDefinition: true)
!2171 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2172 = !DIGlobalVariableExpression(var: !2173, expr: !DIExpression())
!2173 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !2129, file: !2171, line: 138, type: !2174, isLocal: false, isDefinition: true)
!2174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2175, size: 128, elements: !2176)
!2175 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !164)
!2176 = !{!234}
!2177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2175, size: 64, elements: !244)
!2178 = !DIGlobalVariableExpression(var: !2179, expr: !DIExpression())
!2179 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2180, file: !2183, line: 23, type: !2184, isLocal: false, isDefinition: true)
!2180 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2181, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !557, globals: !2182, splitDebugInlining: false, nameTableKind: None)
!2181 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!2182 = !{!2178}
!2183 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!2185 = !DIGlobalVariableExpression(var: !2186, expr: !DIExpression())
!2186 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2187, file: !2191, line: 37, type: !2443, isLocal: false, isDefinition: true)
!2187 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2188, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2189, retainedTypes: !2198, globals: !2271, splitDebugInlining: false, nameTableKind: None)
!2188 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!2189 = !{!2190, !30, !989}
!2190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2191, line: 63, baseType: !32, size: 32, elements: !2192)
!2191 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2192 = !{!2193, !2194, !2195, !2196, !2197}
!2193 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2194 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2195 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2196 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2197 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2198 = !{!439, !104, !108, !2199, !443, !113, !2229, !220, !164, !2254}
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2200, size: 32)
!2200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2201)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2202, line: 51, size: 64, elements: !2203)
!2202 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2203 = !{!2204, !2224}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2201, file: !2202, line: 52, baseType: !2205, size: 32)
!2205 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2202, line: 38, baseType: !2206)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 32)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{!108, !2209, !209, !168}
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 32)
!2210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2211)
!2211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !2212)
!2212 = !{!2213, !2214, !2215, !2216, !2222, !2223}
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2211, file: !411, line: 380, baseType: !105, size: 32)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2211, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2211, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2211, file: !411, line: 386, baseType: !2217, size: 32, offset: 96)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 32)
!2218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !2219)
!2219 = !{!2220, !2221}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2218, file: !411, line: 359, baseType: !164, size: 8)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2218, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2211, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2211, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2201, file: !2202, line: 53, baseType: !2225, size: 32, offset: 32)
!2225 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2202, line: 47, baseType: !2226)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 32)
!2227 = !DISubroutineType(types: !2228)
!2228 = !{!108, !2209, !209, !168, !113}
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 32)
!2230 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !792, line: 468, baseType: !2231)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !792, line: 445, size: 1120, elements: !2232)
!2232 = !{!2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2231, file: !792, line: 447, baseType: !796, size: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2231, file: !792, line: 448, baseType: !574, size: 32, offset: 32)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2231, file: !792, line: 449, baseType: !574, size: 32, offset: 64)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2231, file: !792, line: 450, baseType: !574, size: 32, offset: 96)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2231, file: !792, line: 451, baseType: !574, size: 32, offset: 128)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2231, file: !792, line: 452, baseType: !574, size: 32, offset: 160)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2231, file: !792, line: 453, baseType: !1980, size: 96, offset: 192)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2231, file: !792, line: 454, baseType: !574, size: 32, offset: 288)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2231, file: !792, line: 455, baseType: !574, size: 32, offset: 320)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2231, file: !792, line: 456, baseType: !574, size: 32, offset: 352)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2231, file: !792, line: 457, baseType: !574, size: 32, offset: 384)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2231, file: !792, line: 458, baseType: !574, size: 32, offset: 416)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2231, file: !792, line: 459, baseType: !574, size: 32, offset: 448)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2231, file: !792, line: 460, baseType: !574, size: 32, offset: 480)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2231, file: !792, line: 461, baseType: !1991, size: 64, offset: 512)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2231, file: !792, line: 462, baseType: !796, size: 32, offset: 576)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2231, file: !792, line: 463, baseType: !796, size: 32, offset: 608)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2231, file: !792, line: 464, baseType: !1995, size: 128, offset: 640)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2231, file: !792, line: 465, baseType: !1997, size: 160, offset: 768)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2231, file: !792, line: 466, baseType: !1999, size: 160, offset: 928)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2231, file: !792, line: 467, baseType: !574, size: 32, offset: 1088)
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 32)
!2255 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !792, line: 426, baseType: !2256)
!2256 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !792, line: 411, size: 28704, elements: !2257)
!2257 = !{!2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2256, file: !792, line: 413, baseType: !1943, size: 256)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2256, file: !792, line: 414, baseType: !1945, size: 768, offset: 256)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2256, file: !792, line: 415, baseType: !1943, size: 256, offset: 1024)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2256, file: !792, line: 416, baseType: !1945, size: 768, offset: 1280)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2256, file: !792, line: 417, baseType: !1943, size: 256, offset: 2048)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2256, file: !792, line: 418, baseType: !1945, size: 768, offset: 2304)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2256, file: !792, line: 419, baseType: !1943, size: 256, offset: 3072)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2256, file: !792, line: 420, baseType: !1945, size: 768, offset: 3328)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2256, file: !792, line: 421, baseType: !1943, size: 256, offset: 4096)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2256, file: !792, line: 422, baseType: !1956, size: 1792, offset: 4352)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2256, file: !792, line: 423, baseType: !1960, size: 1920, offset: 6144)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2256, file: !792, line: 424, baseType: !1965, size: 20608, offset: 8064)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2256, file: !792, line: 425, baseType: !574, size: 32, offset: 28672)
!2271 = !{!2185, !2272, !2394, !2403, !2405, !2408, !2413, !2415, !2420}
!2272 = !DIGlobalVariableExpression(var: !2273, expr: !DIExpression())
!2273 = distinct !DIGlobalVariable(name: "_kernel", scope: !2187, file: !2191, line: 40, type: !2274, isLocal: false, isDefinition: true)
!2274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !363, line: 158, size: 288, elements: !2275)
!2275 = !{!2276, !2389}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2274, file: !363, line: 159, baseType: !2277, size: 192)
!2277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2278, size: 192, elements: !774)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !363, line: 100, size: 192, elements: !2279)
!2279 = !{!2280, !2281, !2282, !2383, !2384, !2385, !2386}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2278, file: !363, line: 102, baseType: !113, size: 32)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2278, file: !363, line: 105, baseType: !443, size: 32, offset: 32)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2278, file: !363, line: 108, baseType: !2283, size: 32, offset: 64)
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2284, size: 32)
!2284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !649, line: 245, size: 1024, elements: !2285)
!2285 = !{!2286, !2344, !2356, !2357, !2358, !2359, !2365, !2378}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2284, file: !649, line: 247, baseType: !2287, size: 384)
!2287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !649, line: 57, size: 384, elements: !2288)
!2288 = !{!2289, !2313, !2320, !2321, !2322, !2331, !2332, !2333}
!2289 = !DIDerivedType(tag: DW_TAG_member, scope: !2287, file: !649, line: 60, baseType: !2290, size: 64)
!2290 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2287, file: !649, line: 60, size: 64, elements: !2291)
!2291 = !{!2292, !2307}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2290, file: !649, line: 61, baseType: !2293, size: 64)
!2293 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2294)
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2295)
!2295 = !{!2296, !2302}
!2296 = !DIDerivedType(tag: DW_TAG_member, scope: !2294, file: !367, line: 38, baseType: !2297, size: 32)
!2297 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2294, file: !367, line: 38, size: 32, elements: !2298)
!2298 = !{!2299, !2301}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2297, file: !367, line: 39, baseType: !2300, size: 32)
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 32)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2297, file: !367, line: 40, baseType: !2300, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, scope: !2294, file: !367, line: 42, baseType: !2303, size: 32, offset: 32)
!2303 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2294, file: !367, line: 42, size: 32, elements: !2304)
!2304 = !{!2305, !2306}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2303, file: !367, line: 43, baseType: !2300, size: 32)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2303, file: !367, line: 44, baseType: !2300, size: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2290, file: !649, line: 62, baseType: !2308, size: 64)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !674, line: 49, size: 64, elements: !2309)
!2309 = !{!2310}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2308, file: !674, line: 50, baseType: !2311, size: 64)
!2311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2312, size: 64, elements: !679)
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 32)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2287, file: !649, line: 68, baseType: !2314, size: 32, offset: 64)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 32)
!2315 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2316)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2317)
!2317 = !{!2318}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2316, file: !363, line: 232, baseType: !2319, size: 64)
!2319 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2294)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2287, file: !649, line: 71, baseType: !164, size: 8, offset: 96)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2287, file: !649, line: 74, baseType: !164, size: 8, offset: 104)
!2322 = !DIDerivedType(tag: DW_TAG_member, scope: !2287, file: !649, line: 90, baseType: !2323, size: 16, offset: 112)
!2323 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2287, file: !649, line: 90, size: 16, elements: !2324)
!2324 = !{!2325, !2330}
!2325 = !DIDerivedType(tag: DW_TAG_member, scope: !2323, file: !649, line: 91, baseType: !2326, size: 16)
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2323, file: !649, line: 91, size: 16, elements: !2327)
!2327 = !{!2328, !2329}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2326, file: !649, line: 96, baseType: !697, size: 8)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2326, file: !649, line: 97, baseType: !164, size: 8, offset: 8)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2323, file: !649, line: 100, baseType: !168, size: 16)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2287, file: !649, line: 107, baseType: !113, size: 32, offset: 128)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2287, file: !649, line: 127, baseType: !104, size: 32, offset: 160)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2287, file: !649, line: 131, baseType: !2334, size: 192, offset: 192)
!2334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2335)
!2335 = !{!2336, !2337, !2343}
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2334, file: !363, line: 245, baseType: !2293, size: 64)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2334, file: !363, line: 246, baseType: !2338, size: 32, offset: 64)
!2338 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2339)
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2340, size: 32)
!2340 = !DISubroutineType(types: !2341)
!2341 = !{null, !2342}
!2342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 32)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2334, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2284, file: !649, line: 250, baseType: !2345, size: 288, offset: 384)
!2345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !716, line: 25, size: 288, elements: !2346)
!2346 = !{!2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2345, file: !716, line: 26, baseType: !113, size: 32)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2345, file: !716, line: 27, baseType: !113, size: 32, offset: 32)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2345, file: !716, line: 28, baseType: !113, size: 32, offset: 64)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2345, file: !716, line: 29, baseType: !113, size: 32, offset: 96)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2345, file: !716, line: 30, baseType: !113, size: 32, offset: 128)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2345, file: !716, line: 31, baseType: !113, size: 32, offset: 160)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2345, file: !716, line: 32, baseType: !113, size: 32, offset: 192)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2345, file: !716, line: 33, baseType: !113, size: 32, offset: 224)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2345, file: !716, line: 34, baseType: !113, size: 32, offset: 256)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2284, file: !649, line: 253, baseType: !104, size: 32, offset: 672)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2284, file: !649, line: 256, baseType: !2315, size: 64, offset: 704)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2284, file: !649, line: 294, baseType: !108, size: 32, offset: 768)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2284, file: !649, line: 300, baseType: !2360, size: 96, offset: 800)
!2360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !649, line: 149, size: 96, elements: !2361)
!2361 = !{!2362, !2363, !2364}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2360, file: !649, line: 153, baseType: !22, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2360, file: !649, line: 162, baseType: !439, size: 32, offset: 32)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2360, file: !649, line: 168, baseType: !439, size: 32, offset: 64)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2284, file: !649, line: 325, baseType: !2366, size: 32, offset: 896)
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 32)
!2367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2368)
!2368 = !{!2369, !2375, !2376}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2367, file: !359, line: 5074, baseType: !2370, size: 96)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !742, line: 56, size: 96, elements: !2371)
!2371 = !{!2372, !2373, !2374}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2370, file: !742, line: 57, baseType: !745, size: 32)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2370, file: !742, line: 58, baseType: !104, size: 32, offset: 32)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2370, file: !742, line: 59, baseType: !439, size: 32, offset: 64)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2367, file: !359, line: 5075, baseType: !2315, size: 64, offset: 96)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2367, file: !359, line: 5076, baseType: !2377, offset: 160)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2284, file: !649, line: 343, baseType: !2379, size: 64, offset: 928)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !716, line: 60, size: 64, elements: !2380)
!2380 = !{!2381, !2382}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2379, file: !716, line: 63, baseType: !113, size: 32)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2379, file: !716, line: 66, baseType: !113, size: 32, offset: 32)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2278, file: !363, line: 111, baseType: !2283, size: 32, offset: 96)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2278, file: !363, line: 124, baseType: !108, size: 32, offset: 128)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2278, file: !363, line: 127, baseType: !164, size: 8, offset: 160)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2278, file: !363, line: 153, baseType: !2387, offset: 168)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2388, line: 33, elements: !437)
!2388 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2274, file: !363, line: 170, baseType: !2390, size: 96, offset: 192)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !363, line: 83, size: 96, elements: !2391)
!2391 = !{!2392, !2393}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2390, file: !363, line: 86, baseType: !2283, size: 32)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2390, file: !363, line: 90, baseType: !2319, size: 64, offset: 32)
!2394 = !DIGlobalVariableExpression(var: !2395, expr: !DIExpression())
!2395 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2187, file: !2191, line: 43, type: !2396, isLocal: false, isDefinition: true, align: 512)
!2396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2397, size: 8704, elements: !2401)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2398, line: 47, size: 8, elements: !2399)
!2398 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2399 = !{!2400}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2397, file: !2398, line: 48, baseType: !107, size: 8)
!2401 = !{!2402}
!2402 = !DISubrange(count: 1088)
!2403 = !DIGlobalVariableExpression(var: !2404, expr: !DIExpression())
!2404 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2187, file: !2191, line: 44, type: !2284, isLocal: false, isDefinition: true)
!2405 = !DIGlobalVariableExpression(var: !2406, expr: !DIExpression())
!2406 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2187, file: !2191, line: 48, type: !2407, isLocal: false, isDefinition: true)
!2407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2284, size: 1024, elements: !774)
!2408 = !DIGlobalVariableExpression(var: !2409, expr: !DIExpression())
!2409 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2187, file: !2191, line: 86, type: !2410, isLocal: false, isDefinition: true, align: 512)
!2410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2397, size: 16896, elements: !2411)
!2411 = !{!775, !2412}
!2412 = !DISubrange(count: 2112)
!2413 = !DIGlobalVariableExpression(var: !2414, expr: !DIExpression())
!2414 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2187, file: !2191, line: 217, type: !422, isLocal: false, isDefinition: true)
!2415 = !DIGlobalVariableExpression(var: !2416, expr: !DIExpression())
!2416 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2187, file: !2191, line: 50, type: !2417, isLocal: true, isDefinition: true, align: 512)
!2417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2397, size: 3072, elements: !2418)
!2418 = !{!775, !2419}
!2419 = !DISubrange(count: 384)
!2420 = !DIGlobalVariableExpression(var: !2421, expr: !DIExpression())
!2421 = distinct !DIGlobalVariable(name: "levels", scope: !2422, file: !2191, line: 232, type: !2442, isLocal: true, isDefinition: true)
!2422 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2191, file: !2191, line: 230, type: !2423, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !2425)
!2423 = !DISubroutineType(types: !2424)
!2424 = !{null, !2190}
!2425 = !{!2426, !2427, !2437, !2441}
!2426 = !DILocalVariable(name: "level", arg: 1, scope: !2422, file: !2191, line: 230, type: !2190)
!2427 = !DILocalVariable(name: "entry", scope: !2422, file: !2191, line: 244, type: !2428)
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2430)
!2430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !2431)
!2431 = !{!2432, !2436}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2430, file: !469, line: 60, baseType: !2433, size: 32)
!2433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 32)
!2434 = !DISubroutineType(types: !2435)
!2435 = !{!108, !2209}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2430, file: !469, line: 65, baseType: !2209, size: 32, offset: 32)
!2437 = !DILocalVariable(name: "dev", scope: !2438, file: !2191, line: 247, type: !2209)
!2438 = distinct !DILexicalBlock(scope: !2439, file: !2191, line: 246, column: 64)
!2439 = distinct !DILexicalBlock(scope: !2440, file: !2191, line: 246, column: 2)
!2440 = distinct !DILexicalBlock(scope: !2422, file: !2191, line: 246, column: 2)
!2441 = !DILocalVariable(name: "rc", scope: !2438, file: !2191, line: 248, type: !108)
!2442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2428, size: 192, elements: !1561)
!2443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2444)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !2445)
!2445 = !{!2446, !2447}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2444, file: !254, line: 17, baseType: !105, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2444, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!2448 = !DIGlobalVariableExpression(var: !2449, expr: !DIExpression())
!2449 = distinct !DIGlobalVariable(name: "states_str", scope: !2450, file: !2451, line: 276, type: !2572, isLocal: true, isDefinition: true)
!2450 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2451, file: !2451, line: 271, type: !2452, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !2563)
!2451 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2452 = !DISubroutineType(types: !2453)
!2453 = !{!105, !2454, !443, !439}
!2454 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !649, line: 347, baseType: !2455)
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 32)
!2456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !649, line: 245, size: 1024, elements: !2457)
!2457 = !{!2458, !2516, !2528, !2529, !2530, !2531, !2537, !2550}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2456, file: !649, line: 247, baseType: !2459, size: 384)
!2459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !649, line: 57, size: 384, elements: !2460)
!2460 = !{!2461, !2485, !2492, !2493, !2494, !2503, !2504, !2505}
!2461 = !DIDerivedType(tag: DW_TAG_member, scope: !2459, file: !649, line: 60, baseType: !2462, size: 64)
!2462 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2459, file: !649, line: 60, size: 64, elements: !2463)
!2463 = !{!2464, !2479}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2462, file: !649, line: 61, baseType: !2465, size: 64)
!2465 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2466)
!2466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2467)
!2467 = !{!2468, !2474}
!2468 = !DIDerivedType(tag: DW_TAG_member, scope: !2466, file: !367, line: 38, baseType: !2469, size: 32)
!2469 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2466, file: !367, line: 38, size: 32, elements: !2470)
!2470 = !{!2471, !2473}
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2469, file: !367, line: 39, baseType: !2472, size: 32)
!2472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2466, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2469, file: !367, line: 40, baseType: !2472, size: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, scope: !2466, file: !367, line: 42, baseType: !2475, size: 32, offset: 32)
!2475 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2466, file: !367, line: 42, size: 32, elements: !2476)
!2476 = !{!2477, !2478}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2475, file: !367, line: 43, baseType: !2472, size: 32)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2475, file: !367, line: 44, baseType: !2472, size: 32)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2462, file: !649, line: 62, baseType: !2480, size: 64)
!2480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !674, line: 49, size: 64, elements: !2481)
!2481 = !{!2482}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2480, file: !674, line: 50, baseType: !2483, size: 64)
!2483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2484, size: 64, elements: !679)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 32)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2459, file: !649, line: 68, baseType: !2486, size: 32, offset: 64)
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2487, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2488)
!2488 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2489)
!2489 = !{!2490}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2488, file: !363, line: 232, baseType: !2491, size: 64)
!2491 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2466)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2459, file: !649, line: 71, baseType: !164, size: 8, offset: 96)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2459, file: !649, line: 74, baseType: !164, size: 8, offset: 104)
!2494 = !DIDerivedType(tag: DW_TAG_member, scope: !2459, file: !649, line: 90, baseType: !2495, size: 16, offset: 112)
!2495 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2459, file: !649, line: 90, size: 16, elements: !2496)
!2496 = !{!2497, !2502}
!2497 = !DIDerivedType(tag: DW_TAG_member, scope: !2495, file: !649, line: 91, baseType: !2498, size: 16)
!2498 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2495, file: !649, line: 91, size: 16, elements: !2499)
!2499 = !{!2500, !2501}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2498, file: !649, line: 96, baseType: !697, size: 8)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2498, file: !649, line: 97, baseType: !164, size: 8, offset: 8)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2495, file: !649, line: 100, baseType: !168, size: 16)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2459, file: !649, line: 107, baseType: !113, size: 32, offset: 128)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2459, file: !649, line: 127, baseType: !104, size: 32, offset: 160)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2459, file: !649, line: 131, baseType: !2506, size: 192, offset: 192)
!2506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2507)
!2507 = !{!2508, !2509, !2515}
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2506, file: !363, line: 245, baseType: !2465, size: 64)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2506, file: !363, line: 246, baseType: !2510, size: 32, offset: 64)
!2510 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2511)
!2511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2512, size: 32)
!2512 = !DISubroutineType(types: !2513)
!2513 = !{null, !2514}
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2506, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2456, file: !649, line: 250, baseType: !2517, size: 288, offset: 384)
!2517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !716, line: 25, size: 288, elements: !2518)
!2518 = !{!2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527}
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2517, file: !716, line: 26, baseType: !113, size: 32)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2517, file: !716, line: 27, baseType: !113, size: 32, offset: 32)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2517, file: !716, line: 28, baseType: !113, size: 32, offset: 64)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2517, file: !716, line: 29, baseType: !113, size: 32, offset: 96)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2517, file: !716, line: 30, baseType: !113, size: 32, offset: 128)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2517, file: !716, line: 31, baseType: !113, size: 32, offset: 160)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2517, file: !716, line: 32, baseType: !113, size: 32, offset: 192)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2517, file: !716, line: 33, baseType: !113, size: 32, offset: 224)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2517, file: !716, line: 34, baseType: !113, size: 32, offset: 256)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2456, file: !649, line: 253, baseType: !104, size: 32, offset: 672)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2456, file: !649, line: 256, baseType: !2487, size: 64, offset: 704)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2456, file: !649, line: 294, baseType: !108, size: 32, offset: 768)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2456, file: !649, line: 300, baseType: !2532, size: 96, offset: 800)
!2532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !649, line: 149, size: 96, elements: !2533)
!2533 = !{!2534, !2535, !2536}
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2532, file: !649, line: 153, baseType: !22, size: 32)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2532, file: !649, line: 162, baseType: !439, size: 32, offset: 32)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2532, file: !649, line: 168, baseType: !439, size: 32, offset: 64)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2456, file: !649, line: 325, baseType: !2538, size: 32, offset: 896)
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 32)
!2539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2540)
!2540 = !{!2541, !2547, !2548}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2539, file: !359, line: 5074, baseType: !2542, size: 96)
!2542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !742, line: 56, size: 96, elements: !2543)
!2543 = !{!2544, !2545, !2546}
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2542, file: !742, line: 57, baseType: !745, size: 32)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2542, file: !742, line: 58, baseType: !104, size: 32, offset: 32)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2542, file: !742, line: 59, baseType: !439, size: 32, offset: 64)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2539, file: !359, line: 5075, baseType: !2487, size: 64, offset: 96)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2539, file: !359, line: 5076, baseType: !2549, offset: 160)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2456, file: !649, line: 343, baseType: !2551, size: 64, offset: 928)
!2551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !716, line: 60, size: 64, elements: !2552)
!2552 = !{!2553, !2554}
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2551, file: !716, line: 63, baseType: !113, size: 32)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2551, file: !716, line: 66, baseType: !113, size: 32, offset: 32)
!2555 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2556, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2557, globals: !2559, splitDebugInlining: false, nameTableKind: None)
!2556 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!2557 = !{!104, !105, !109, !164, !108, !2558, !24, !439, !443, !22, !113, !114}
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 32)
!2559 = !{!2448, !2560}
!2560 = !DIGlobalVariableExpression(var: !2561, expr: !DIExpression())
!2561 = distinct !DIGlobalVariable(name: "states_sz", scope: !2450, file: !2451, line: 279, type: !2562, isLocal: true, isDefinition: true)
!2562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2122, size: 256, elements: !244)
!2563 = !{!2564, !2565, !2566, !2567, !2568, !2569, !2570}
!2564 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2450, file: !2451, line: 271, type: !2454)
!2565 = !DILocalVariable(name: "buf", arg: 2, scope: !2450, file: !2451, line: 271, type: !443)
!2566 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2450, file: !2451, line: 271, type: !439)
!2567 = !DILocalVariable(name: "off", scope: !2450, file: !2451, line: 273, type: !439)
!2568 = !DILocalVariable(name: "bit", scope: !2450, file: !2451, line: 274, type: !164)
!2569 = !DILocalVariable(name: "thread_state", scope: !2450, file: !2451, line: 275, type: !164)
!2570 = !DILocalVariable(name: "index", scope: !2571, file: !2451, line: 293, type: !164)
!2571 = distinct !DILexicalBlock(scope: !2450, file: !2451, line: 293, column: 2)
!2572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 256, elements: !244)
!2573 = !DIGlobalVariableExpression(var: !2574, expr: !DIExpression())
!2574 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2575, file: !2683, line: 56, type: !2672, isLocal: false, isDefinition: true)
!2575 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2576, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2577, globals: !2680, splitDebugInlining: false, nameTableKind: None)
!2576 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!2577 = !{!2578, !443, !104, !2678, !209, !109, !220, !108, !113, !114, !2679}
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 32)
!2579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !649, line: 245, size: 1024, elements: !2580)
!2580 = !{!2581, !2639, !2651, !2652, !2653, !2654, !2660, !2673}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2579, file: !649, line: 247, baseType: !2582, size: 384)
!2582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !649, line: 57, size: 384, elements: !2583)
!2583 = !{!2584, !2608, !2615, !2616, !2617, !2626, !2627, !2628}
!2584 = !DIDerivedType(tag: DW_TAG_member, scope: !2582, file: !649, line: 60, baseType: !2585, size: 64)
!2585 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2582, file: !649, line: 60, size: 64, elements: !2586)
!2586 = !{!2587, !2602}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2585, file: !649, line: 61, baseType: !2588, size: 64)
!2588 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2589)
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2590)
!2590 = !{!2591, !2597}
!2591 = !DIDerivedType(tag: DW_TAG_member, scope: !2589, file: !367, line: 38, baseType: !2592, size: 32)
!2592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2589, file: !367, line: 38, size: 32, elements: !2593)
!2593 = !{!2594, !2596}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2592, file: !367, line: 39, baseType: !2595, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2592, file: !367, line: 40, baseType: !2595, size: 32)
!2597 = !DIDerivedType(tag: DW_TAG_member, scope: !2589, file: !367, line: 42, baseType: !2598, size: 32, offset: 32)
!2598 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2589, file: !367, line: 42, size: 32, elements: !2599)
!2599 = !{!2600, !2601}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2598, file: !367, line: 43, baseType: !2595, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2598, file: !367, line: 44, baseType: !2595, size: 32)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2585, file: !649, line: 62, baseType: !2603, size: 64)
!2603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !674, line: 49, size: 64, elements: !2604)
!2604 = !{!2605}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2603, file: !674, line: 50, baseType: !2606, size: 64)
!2606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2607, size: 64, elements: !679)
!2607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2603, size: 32)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2582, file: !649, line: 68, baseType: !2609, size: 32, offset: 64)
!2609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 32)
!2610 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2611)
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2612)
!2612 = !{!2613}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2611, file: !363, line: 232, baseType: !2614, size: 64)
!2614 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2589)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2582, file: !649, line: 71, baseType: !164, size: 8, offset: 96)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2582, file: !649, line: 74, baseType: !164, size: 8, offset: 104)
!2617 = !DIDerivedType(tag: DW_TAG_member, scope: !2582, file: !649, line: 90, baseType: !2618, size: 16, offset: 112)
!2618 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2582, file: !649, line: 90, size: 16, elements: !2619)
!2619 = !{!2620, !2625}
!2620 = !DIDerivedType(tag: DW_TAG_member, scope: !2618, file: !649, line: 91, baseType: !2621, size: 16)
!2621 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2618, file: !649, line: 91, size: 16, elements: !2622)
!2622 = !{!2623, !2624}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2621, file: !649, line: 96, baseType: !697, size: 8)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2621, file: !649, line: 97, baseType: !164, size: 8, offset: 8)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2618, file: !649, line: 100, baseType: !168, size: 16)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2582, file: !649, line: 107, baseType: !113, size: 32, offset: 128)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2582, file: !649, line: 127, baseType: !104, size: 32, offset: 160)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2582, file: !649, line: 131, baseType: !2629, size: 192, offset: 192)
!2629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2630)
!2630 = !{!2631, !2632, !2638}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2629, file: !363, line: 245, baseType: !2588, size: 64)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2629, file: !363, line: 246, baseType: !2633, size: 32, offset: 64)
!2633 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2634)
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2635, size: 32)
!2635 = !DISubroutineType(types: !2636)
!2636 = !{null, !2637}
!2637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2629, size: 32)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2629, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2579, file: !649, line: 250, baseType: !2640, size: 288, offset: 384)
!2640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !716, line: 25, size: 288, elements: !2641)
!2641 = !{!2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2640, file: !716, line: 26, baseType: !113, size: 32)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2640, file: !716, line: 27, baseType: !113, size: 32, offset: 32)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2640, file: !716, line: 28, baseType: !113, size: 32, offset: 64)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2640, file: !716, line: 29, baseType: !113, size: 32, offset: 96)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2640, file: !716, line: 30, baseType: !113, size: 32, offset: 128)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2640, file: !716, line: 31, baseType: !113, size: 32, offset: 160)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2640, file: !716, line: 32, baseType: !113, size: 32, offset: 192)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2640, file: !716, line: 33, baseType: !113, size: 32, offset: 224)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2640, file: !716, line: 34, baseType: !113, size: 32, offset: 256)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2579, file: !649, line: 253, baseType: !104, size: 32, offset: 672)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2579, file: !649, line: 256, baseType: !2610, size: 64, offset: 704)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2579, file: !649, line: 294, baseType: !108, size: 32, offset: 768)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2579, file: !649, line: 300, baseType: !2655, size: 96, offset: 800)
!2655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !649, line: 149, size: 96, elements: !2656)
!2656 = !{!2657, !2658, !2659}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2655, file: !649, line: 153, baseType: !22, size: 32)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2655, file: !649, line: 162, baseType: !439, size: 32, offset: 32)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2655, file: !649, line: 168, baseType: !439, size: 32, offset: 64)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2579, file: !649, line: 325, baseType: !2661, size: 32, offset: 896)
!2661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2662, size: 32)
!2662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2663)
!2663 = !{!2664, !2670, !2671}
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2662, file: !359, line: 5074, baseType: !2665, size: 96)
!2665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !742, line: 56, size: 96, elements: !2666)
!2666 = !{!2667, !2668, !2669}
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2665, file: !742, line: 57, baseType: !745, size: 32)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2665, file: !742, line: 58, baseType: !104, size: 32, offset: 32)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2665, file: !742, line: 59, baseType: !439, size: 32, offset: 64)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2662, file: !359, line: 5075, baseType: !2610, size: 64, offset: 96)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2662, file: !359, line: 5076, baseType: !2672, offset: 160)
!2672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2579, file: !649, line: 343, baseType: !2674, size: 64, offset: 928)
!2674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !716, line: 60, size: 64, elements: !2675)
!2675 = !{!2676, !2677}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2674, file: !716, line: 63, baseType: !113, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2674, file: !716, line: 66, baseType: !113, size: 32, offset: 32)
!2678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2607, size: 32)
!2679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 32)
!2680 = !{!2573, !2681, !2684, !2686}
!2681 = !DIGlobalVariableExpression(var: !2682, expr: !DIExpression())
!2682 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2575, file: !2683, line: 404, type: !108, isLocal: true, isDefinition: true)
!2683 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2684 = !DIGlobalVariableExpression(var: !2685, expr: !DIExpression())
!2685 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2575, file: !2683, line: 405, type: !108, isLocal: true, isDefinition: true)
!2686 = !DIGlobalVariableExpression(var: !2687, expr: !DIExpression())
!2687 = distinct !DIGlobalVariable(name: "pending_current", scope: !2575, file: !2683, line: 425, type: !2578, isLocal: true, isDefinition: true)
!2688 = !DIGlobalVariableExpression(var: !2689, expr: !DIExpression())
!2689 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2690, file: !2720, line: 15, type: !114, isLocal: true, isDefinition: true)
!2690 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2691, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2692, globals: !2717, splitDebugInlining: false, nameTableKind: None)
!2691 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!2692 = !{!109, !104, !220, !113, !114, !108, !2693, !443, !111}
!2693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2694, size: 32)
!2694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2695)
!2695 = !{!2696, !2711, !2716}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2694, file: !363, line: 245, baseType: !2697, size: 64)
!2697 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2698)
!2698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2699)
!2699 = !{!2700, !2706}
!2700 = !DIDerivedType(tag: DW_TAG_member, scope: !2698, file: !367, line: 38, baseType: !2701, size: 32)
!2701 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2698, file: !367, line: 38, size: 32, elements: !2702)
!2702 = !{!2703, !2705}
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2701, file: !367, line: 39, baseType: !2704, size: 32)
!2704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2698, size: 32)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2701, file: !367, line: 40, baseType: !2704, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_member, scope: !2698, file: !367, line: 42, baseType: !2707, size: 32, offset: 32)
!2707 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2698, file: !367, line: 42, size: 32, elements: !2708)
!2708 = !{!2709, !2710}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2707, file: !367, line: 43, baseType: !2704, size: 32)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2707, file: !367, line: 44, baseType: !2704, size: 32)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2694, file: !363, line: 246, baseType: !2712, size: 32, offset: 64)
!2712 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2713)
!2713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2714, size: 32)
!2714 = !DISubroutineType(types: !2715)
!2715 = !{null, !2693}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2694, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2717 = !{!2688, !2718, !2722, !2724}
!2718 = !DIGlobalVariableExpression(var: !2719, expr: !DIExpression())
!2719 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2690, file: !2720, line: 19, type: !2721, isLocal: true, isDefinition: true)
!2720 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2722 = !DIGlobalVariableExpression(var: !2723, expr: !DIExpression())
!2723 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2690, file: !2720, line: 25, type: !108, isLocal: true, isDefinition: true)
!2724 = !DIGlobalVariableExpression(var: !2725, expr: !DIExpression())
!2725 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2690, file: !2720, line: 17, type: !2726, isLocal: true, isDefinition: true)
!2726 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2698)
!2727 = !DIGlobalVariableExpression(var: !2728, expr: !DIExpression())
!2728 = distinct !DIGlobalVariable(name: "lock", scope: !2729, file: !2851, line: 16, type: !2843, isLocal: true, isDefinition: true)
!2729 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2730, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2731, globals: !2850, splitDebugInlining: false, nameTableKind: None)
!2730 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!2731 = !{!2732, !443, !109, !104, !108, !2778, !2849}
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 32)
!2733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_timer", file: !359, line: 1318, size: 448, elements: !2734)
!2734 = !{!2735, !2760, !2766, !2770, !2771, !2776, !2777}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2733, file: !359, line: 1324, baseType: !2736, size: 192)
!2736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2737)
!2737 = !{!2738, !2753, !2759}
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2736, file: !363, line: 245, baseType: !2739, size: 64)
!2739 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2740)
!2740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2741)
!2741 = !{!2742, !2748}
!2742 = !DIDerivedType(tag: DW_TAG_member, scope: !2740, file: !367, line: 38, baseType: !2743, size: 32)
!2743 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2740, file: !367, line: 38, size: 32, elements: !2744)
!2744 = !{!2745, !2747}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2743, file: !367, line: 39, baseType: !2746, size: 32)
!2746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2740, size: 32)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2743, file: !367, line: 40, baseType: !2746, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_member, scope: !2740, file: !367, line: 42, baseType: !2749, size: 32, offset: 32)
!2749 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2740, file: !367, line: 42, size: 32, elements: !2750)
!2750 = !{!2751, !2752}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2749, file: !367, line: 43, baseType: !2746, size: 32)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2749, file: !367, line: 44, baseType: !2746, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2736, file: !363, line: 246, baseType: !2754, size: 32, offset: 64)
!2754 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2755)
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 32)
!2756 = !DISubroutineType(types: !2757)
!2757 = !{null, !2758}
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2736, size: 32)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2736, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2733, file: !359, line: 1327, baseType: !2761, size: 64, offset: 192)
!2761 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2762)
!2762 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2763)
!2763 = !{!2764}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2762, file: !363, line: 232, baseType: !2765, size: 64)
!2765 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2740)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_fn", scope: !2733, file: !359, line: 1330, baseType: !2767, size: 32, offset: 256)
!2767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2768, size: 32)
!2768 = !DISubroutineType(types: !2769)
!2769 = !{null, !2732}
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "stop_fn", scope: !2733, file: !359, line: 1333, baseType: !2767, size: 32, offset: 288)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !2733, file: !359, line: 1336, baseType: !2772, size: 64, offset: 320)
!2772 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !2773)
!2773 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !2774)
!2774 = !{!2775}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !2773, file: !110, line: 66, baseType: !109, size: 64)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2733, file: !359, line: 1339, baseType: !113, size: 32, offset: 384)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !2733, file: !359, line: 1342, baseType: !104, size: 32, offset: 416)
!2778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2779, size: 32)
!2779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !649, line: 245, size: 1024, elements: !2780)
!2780 = !{!2781, !2810, !2822, !2823, !2824, !2825, !2831, !2844}
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2779, file: !649, line: 247, baseType: !2782, size: 384)
!2782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !649, line: 57, size: 384, elements: !2783)
!2783 = !{!2784, !2794, !2796, !2797, !2798, !2807, !2808, !2809}
!2784 = !DIDerivedType(tag: DW_TAG_member, scope: !2782, file: !649, line: 60, baseType: !2785, size: 64)
!2785 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2782, file: !649, line: 60, size: 64, elements: !2786)
!2786 = !{!2787, !2788}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2785, file: !649, line: 61, baseType: !2739, size: 64)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2785, file: !649, line: 62, baseType: !2789, size: 64)
!2789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !674, line: 49, size: 64, elements: !2790)
!2790 = !{!2791}
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2789, file: !674, line: 50, baseType: !2792, size: 64)
!2792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2793, size: 64, elements: !679)
!2793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 32)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2782, file: !649, line: 68, baseType: !2795, size: 32, offset: 64)
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2761, size: 32)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2782, file: !649, line: 71, baseType: !164, size: 8, offset: 96)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2782, file: !649, line: 74, baseType: !164, size: 8, offset: 104)
!2798 = !DIDerivedType(tag: DW_TAG_member, scope: !2782, file: !649, line: 90, baseType: !2799, size: 16, offset: 112)
!2799 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2782, file: !649, line: 90, size: 16, elements: !2800)
!2800 = !{!2801, !2806}
!2801 = !DIDerivedType(tag: DW_TAG_member, scope: !2799, file: !649, line: 91, baseType: !2802, size: 16)
!2802 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2799, file: !649, line: 91, size: 16, elements: !2803)
!2803 = !{!2804, !2805}
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2802, file: !649, line: 96, baseType: !697, size: 8)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2802, file: !649, line: 97, baseType: !164, size: 8, offset: 8)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2799, file: !649, line: 100, baseType: !168, size: 16)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2782, file: !649, line: 107, baseType: !113, size: 32, offset: 128)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2782, file: !649, line: 127, baseType: !104, size: 32, offset: 160)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2782, file: !649, line: 131, baseType: !2736, size: 192, offset: 192)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2779, file: !649, line: 250, baseType: !2811, size: 288, offset: 384)
!2811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !716, line: 25, size: 288, elements: !2812)
!2812 = !{!2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821}
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2811, file: !716, line: 26, baseType: !113, size: 32)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2811, file: !716, line: 27, baseType: !113, size: 32, offset: 32)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2811, file: !716, line: 28, baseType: !113, size: 32, offset: 64)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2811, file: !716, line: 29, baseType: !113, size: 32, offset: 96)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2811, file: !716, line: 30, baseType: !113, size: 32, offset: 128)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2811, file: !716, line: 31, baseType: !113, size: 32, offset: 160)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2811, file: !716, line: 32, baseType: !113, size: 32, offset: 192)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2811, file: !716, line: 33, baseType: !113, size: 32, offset: 224)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2811, file: !716, line: 34, baseType: !113, size: 32, offset: 256)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2779, file: !649, line: 253, baseType: !104, size: 32, offset: 672)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2779, file: !649, line: 256, baseType: !2761, size: 64, offset: 704)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2779, file: !649, line: 294, baseType: !108, size: 32, offset: 768)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2779, file: !649, line: 300, baseType: !2826, size: 96, offset: 800)
!2826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !649, line: 149, size: 96, elements: !2827)
!2827 = !{!2828, !2829, !2830}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2826, file: !649, line: 153, baseType: !22, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2826, file: !649, line: 162, baseType: !439, size: 32, offset: 32)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2826, file: !649, line: 168, baseType: !439, size: 32, offset: 64)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2779, file: !649, line: 325, baseType: !2832, size: 32, offset: 896)
!2832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2833, size: 32)
!2833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2834)
!2834 = !{!2835, !2841, !2842}
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2833, file: !359, line: 5074, baseType: !2836, size: 96)
!2836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !742, line: 56, size: 96, elements: !2837)
!2837 = !{!2838, !2839, !2840}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2836, file: !742, line: 57, baseType: !745, size: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2836, file: !742, line: 58, baseType: !104, size: 32, offset: 32)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2836, file: !742, line: 59, baseType: !439, size: 32, offset: 64)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2833, file: !359, line: 5075, baseType: !2761, size: 64, offset: 96)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2833, file: !359, line: 5076, baseType: !2843, offset: 160)
!2843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2779, file: !649, line: 343, baseType: !2845, size: 64, offset: 928)
!2845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !716, line: 60, size: 64, elements: !2846)
!2846 = !{!2847, !2848}
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2845, file: !716, line: 63, baseType: !113, size: 32)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2845, file: !716, line: 66, baseType: !113, size: 32, offset: 32)
!2849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2739, size: 32)
!2850 = !{!2727}
!2851 = !DIFile(filename: "zephyr/kernel/timer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2852 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2853, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !557, splitDebugInlining: false, nameTableKind: None)
!2853 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!2854 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2855, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !557, splitDebugInlining: false, nameTableKind: None)
!2855 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!2856 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2857, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2858, retainedTypes: !2878, splitDebugInlining: false, nameTableKind: None)
!2857 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!2858 = !{!2859, !2867}
!2859 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2860, line: 69, baseType: !32, size: 32, elements: !2861)
!2860 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2861 = !{!2862, !2863, !2864, !2865, !2866}
!2862 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2863 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2864 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2865 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2866 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2867 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2860, line: 56, baseType: !32, size: 32, elements: !2868)
!2868 = !{!2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877}
!2869 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2870 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2871 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2872 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2873 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2874 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2875 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2876 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2877 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2878 = !{!108, !2859, !2867, !2879, !698, !429, !2881, !2882, !165, !169, !105, !439, !104, !22, !32, !542, !2884, !2885, !144, !543, !112, !544, !2880, !2886, !2887, !2888, !2889}
!2879 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2860, line: 31, baseType: !2880)
!2880 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !112)
!2881 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !440, line: 329, baseType: !32)
!2882 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2860, line: 32, baseType: !2883)
!2883 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !115)
!2884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 32)
!2885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!2886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2880, size: 32)
!2887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 32)
!2888 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !440, line: 145, baseType: !108)
!2889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2888, size: 32)
!2890 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2891, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2891 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!2892 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2893, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2894, splitDebugInlining: false, nameTableKind: None)
!2893 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!2894 = !{!105, !165, !108, !32}
!2895 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2896, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2897, retainedTypes: !557, splitDebugInlining: false, nameTableKind: None)
!2896 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!2897 = !{!2898, !30}
!2898 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2899, line: 27, baseType: !32, size: 32, elements: !2900)
!2899 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2900 = !{!2901, !2902, !2903, !2904, !2905}
!2901 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2902 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2903 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2904 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2905 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2906 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2907, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2908, retainedTypes: !2909, splitDebugInlining: false, nameTableKind: None)
!2907 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!2908 = !{!989, !2898, !30}
!2909 = !{!1151, !2910, !104, !108, !220, !113, !164, !2927}
!2910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2911, size: 32)
!2911 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !792, line: 426, baseType: !2912)
!2912 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !792, line: 411, size: 28704, elements: !2913)
!2913 = !{!2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926}
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2912, file: !792, line: 413, baseType: !1943, size: 256)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2912, file: !792, line: 414, baseType: !1945, size: 768, offset: 256)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2912, file: !792, line: 415, baseType: !1943, size: 256, offset: 1024)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2912, file: !792, line: 416, baseType: !1945, size: 768, offset: 1280)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2912, file: !792, line: 417, baseType: !1943, size: 256, offset: 2048)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2912, file: !792, line: 418, baseType: !1945, size: 768, offset: 2304)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2912, file: !792, line: 419, baseType: !1943, size: 256, offset: 3072)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2912, file: !792, line: 420, baseType: !1945, size: 768, offset: 3328)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2912, file: !792, line: 421, baseType: !1943, size: 256, offset: 4096)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2912, file: !792, line: 422, baseType: !1956, size: 1792, offset: 4352)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2912, file: !792, line: 423, baseType: !1960, size: 1920, offset: 6144)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2912, file: !792, line: 424, baseType: !1965, size: 20608, offset: 8064)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2912, file: !792, line: 425, baseType: !574, size: 32, offset: 28672)
!2927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2928, size: 32)
!2928 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !792, line: 468, baseType: !2929)
!2929 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !792, line: 445, size: 1120, elements: !2930)
!2930 = !{!2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951}
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2929, file: !792, line: 447, baseType: !796, size: 32)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2929, file: !792, line: 448, baseType: !574, size: 32, offset: 32)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2929, file: !792, line: 449, baseType: !574, size: 32, offset: 64)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2929, file: !792, line: 450, baseType: !574, size: 32, offset: 96)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2929, file: !792, line: 451, baseType: !574, size: 32, offset: 128)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2929, file: !792, line: 452, baseType: !574, size: 32, offset: 160)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2929, file: !792, line: 453, baseType: !1980, size: 96, offset: 192)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2929, file: !792, line: 454, baseType: !574, size: 32, offset: 288)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2929, file: !792, line: 455, baseType: !574, size: 32, offset: 320)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2929, file: !792, line: 456, baseType: !574, size: 32, offset: 352)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2929, file: !792, line: 457, baseType: !574, size: 32, offset: 384)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2929, file: !792, line: 458, baseType: !574, size: 32, offset: 416)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2929, file: !792, line: 459, baseType: !574, size: 32, offset: 448)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2929, file: !792, line: 460, baseType: !574, size: 32, offset: 480)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2929, file: !792, line: 461, baseType: !1991, size: 64, offset: 512)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2929, file: !792, line: 462, baseType: !796, size: 32, offset: 576)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2929, file: !792, line: 463, baseType: !796, size: 32, offset: 608)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2929, file: !792, line: 464, baseType: !1995, size: 128, offset: 640)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2929, file: !792, line: 465, baseType: !1997, size: 160, offset: 768)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2929, file: !792, line: 466, baseType: !1999, size: 160, offset: 928)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2929, file: !792, line: 467, baseType: !574, size: 32, offset: 1088)
!2952 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2953, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !557, splitDebugInlining: false, nameTableKind: None)
!2953 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!2954 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2955, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2956, splitDebugInlining: false, nameTableKind: None)
!2955 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!2956 = !{!104, !108, !22, !2957}
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2958, size: 32)
!2958 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !792, line: 468, baseType: !2959)
!2959 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !792, line: 445, size: 1120, elements: !2960)
!2960 = !{!2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981}
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2959, file: !792, line: 447, baseType: !796, size: 32)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2959, file: !792, line: 448, baseType: !574, size: 32, offset: 32)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2959, file: !792, line: 449, baseType: !574, size: 32, offset: 64)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2959, file: !792, line: 450, baseType: !574, size: 32, offset: 96)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2959, file: !792, line: 451, baseType: !574, size: 32, offset: 128)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2959, file: !792, line: 452, baseType: !574, size: 32, offset: 160)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2959, file: !792, line: 453, baseType: !1980, size: 96, offset: 192)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2959, file: !792, line: 454, baseType: !574, size: 32, offset: 288)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2959, file: !792, line: 455, baseType: !574, size: 32, offset: 320)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2959, file: !792, line: 456, baseType: !574, size: 32, offset: 352)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2959, file: !792, line: 457, baseType: !574, size: 32, offset: 384)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2959, file: !792, line: 458, baseType: !574, size: 32, offset: 416)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2959, file: !792, line: 459, baseType: !574, size: 32, offset: 448)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2959, file: !792, line: 460, baseType: !574, size: 32, offset: 480)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2959, file: !792, line: 461, baseType: !1991, size: 64, offset: 512)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2959, file: !792, line: 462, baseType: !796, size: 32, offset: 576)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2959, file: !792, line: 463, baseType: !796, size: 32, offset: 608)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2959, file: !792, line: 464, baseType: !1995, size: 128, offset: 640)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2959, file: !792, line: 465, baseType: !1997, size: 160, offset: 768)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2959, file: !792, line: 466, baseType: !1999, size: 160, offset: 928)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2959, file: !792, line: 467, baseType: !574, size: 32, offset: 1088)
!2982 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2983, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2984, splitDebugInlining: false, nameTableKind: None)
!2983 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!2984 = !{!2985, !104, !108}
!2985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2986, size: 32)
!2986 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !792, line: 468, baseType: !2987)
!2987 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !792, line: 445, size: 1120, elements: !2988)
!2988 = !{!2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009}
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2987, file: !792, line: 447, baseType: !796, size: 32)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2987, file: !792, line: 448, baseType: !574, size: 32, offset: 32)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2987, file: !792, line: 449, baseType: !574, size: 32, offset: 64)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2987, file: !792, line: 450, baseType: !574, size: 32, offset: 96)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2987, file: !792, line: 451, baseType: !574, size: 32, offset: 128)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2987, file: !792, line: 452, baseType: !574, size: 32, offset: 160)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2987, file: !792, line: 453, baseType: !1980, size: 96, offset: 192)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2987, file: !792, line: 454, baseType: !574, size: 32, offset: 288)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2987, file: !792, line: 455, baseType: !574, size: 32, offset: 320)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2987, file: !792, line: 456, baseType: !574, size: 32, offset: 352)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2987, file: !792, line: 457, baseType: !574, size: 32, offset: 384)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2987, file: !792, line: 458, baseType: !574, size: 32, offset: 416)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2987, file: !792, line: 459, baseType: !574, size: 32, offset: 448)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2987, file: !792, line: 460, baseType: !574, size: 32, offset: 480)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2987, file: !792, line: 461, baseType: !1991, size: 64, offset: 512)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2987, file: !792, line: 462, baseType: !796, size: 32, offset: 576)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2987, file: !792, line: 463, baseType: !796, size: 32, offset: 608)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2987, file: !792, line: 464, baseType: !1995, size: 128, offset: 640)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2987, file: !792, line: 465, baseType: !1997, size: 160, offset: 768)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2987, file: !792, line: 466, baseType: !1999, size: 160, offset: 928)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2987, file: !792, line: 467, baseType: !574, size: 32, offset: 1088)
!3010 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3011, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3012, splitDebugInlining: false, nameTableKind: None)
!3011 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!3012 = !{!3013, !113, !104, !108}
!3013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3014, size: 32)
!3014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3015, line: 98, size: 256, elements: !3016)
!3015 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3016 = !{!3017, !3022, !3027, !3032, !3037, !3042, !3047, !3052}
!3017 = !DIDerivedType(tag: DW_TAG_member, scope: !3014, file: !3015, line: 99, baseType: !3018, size: 32)
!3018 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3014, file: !3015, line: 99, size: 32, elements: !3019)
!3019 = !{!3020, !3021}
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3018, file: !3015, line: 99, baseType: !113, size: 32)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3018, file: !3015, line: 99, baseType: !113, size: 32)
!3022 = !DIDerivedType(tag: DW_TAG_member, scope: !3014, file: !3015, line: 100, baseType: !3023, size: 32, offset: 32)
!3023 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3014, file: !3015, line: 100, size: 32, elements: !3024)
!3024 = !{!3025, !3026}
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3023, file: !3015, line: 100, baseType: !113, size: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3023, file: !3015, line: 100, baseType: !113, size: 32)
!3027 = !DIDerivedType(tag: DW_TAG_member, scope: !3014, file: !3015, line: 101, baseType: !3028, size: 32, offset: 64)
!3028 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3014, file: !3015, line: 101, size: 32, elements: !3029)
!3029 = !{!3030, !3031}
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3028, file: !3015, line: 101, baseType: !113, size: 32)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3028, file: !3015, line: 101, baseType: !113, size: 32)
!3032 = !DIDerivedType(tag: DW_TAG_member, scope: !3014, file: !3015, line: 102, baseType: !3033, size: 32, offset: 96)
!3033 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3014, file: !3015, line: 102, size: 32, elements: !3034)
!3034 = !{!3035, !3036}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3033, file: !3015, line: 102, baseType: !113, size: 32)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3033, file: !3015, line: 102, baseType: !113, size: 32)
!3037 = !DIDerivedType(tag: DW_TAG_member, scope: !3014, file: !3015, line: 103, baseType: !3038, size: 32, offset: 128)
!3038 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3014, file: !3015, line: 103, size: 32, elements: !3039)
!3039 = !{!3040, !3041}
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3038, file: !3015, line: 103, baseType: !113, size: 32)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3038, file: !3015, line: 103, baseType: !113, size: 32)
!3042 = !DIDerivedType(tag: DW_TAG_member, scope: !3014, file: !3015, line: 104, baseType: !3043, size: 32, offset: 160)
!3043 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3014, file: !3015, line: 104, size: 32, elements: !3044)
!3044 = !{!3045, !3046}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3043, file: !3015, line: 104, baseType: !113, size: 32)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3043, file: !3015, line: 104, baseType: !113, size: 32)
!3047 = !DIDerivedType(tag: DW_TAG_member, scope: !3014, file: !3015, line: 105, baseType: !3048, size: 32, offset: 192)
!3048 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3014, file: !3015, line: 105, size: 32, elements: !3049)
!3049 = !{!3050, !3051}
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3048, file: !3015, line: 105, baseType: !113, size: 32)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3048, file: !3015, line: 105, baseType: !113, size: 32)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3014, file: !3015, line: 106, baseType: !113, size: 32, offset: 224)
!3053 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3054, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2897, retainedTypes: !3055, splitDebugInlining: false, nameTableKind: None)
!3054 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!3055 = !{!3056, !104, !108, !3081, !3124, !113}
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3057, size: 32)
!3057 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !792, line: 468, baseType: !3058)
!3058 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !792, line: 445, size: 1120, elements: !3059)
!3059 = !{!3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3058, file: !792, line: 447, baseType: !796, size: 32)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3058, file: !792, line: 448, baseType: !574, size: 32, offset: 32)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3058, file: !792, line: 449, baseType: !574, size: 32, offset: 64)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3058, file: !792, line: 450, baseType: !574, size: 32, offset: 96)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3058, file: !792, line: 451, baseType: !574, size: 32, offset: 128)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3058, file: !792, line: 452, baseType: !574, size: 32, offset: 160)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3058, file: !792, line: 453, baseType: !1980, size: 96, offset: 192)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3058, file: !792, line: 454, baseType: !574, size: 32, offset: 288)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3058, file: !792, line: 455, baseType: !574, size: 32, offset: 320)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3058, file: !792, line: 456, baseType: !574, size: 32, offset: 352)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3058, file: !792, line: 457, baseType: !574, size: 32, offset: 384)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3058, file: !792, line: 458, baseType: !574, size: 32, offset: 416)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3058, file: !792, line: 459, baseType: !574, size: 32, offset: 448)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3058, file: !792, line: 460, baseType: !574, size: 32, offset: 480)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3058, file: !792, line: 461, baseType: !1991, size: 64, offset: 512)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3058, file: !792, line: 462, baseType: !796, size: 32, offset: 576)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3058, file: !792, line: 463, baseType: !796, size: 32, offset: 608)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3058, file: !792, line: 464, baseType: !1995, size: 128, offset: 640)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3058, file: !792, line: 465, baseType: !1997, size: 160, offset: 768)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3058, file: !792, line: 466, baseType: !1999, size: 160, offset: 928)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3058, file: !792, line: 467, baseType: !574, size: 32, offset: 1088)
!3081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3082, size: 32)
!3082 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3015, line: 141, baseType: !3083)
!3083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3015, line: 97, size: 256, elements: !3084)
!3084 = !{!3085}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !3083, file: !3015, line: 107, baseType: !3086, size: 256)
!3086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3015, line: 98, size: 256, elements: !3087)
!3087 = !{!3088, !3093, !3098, !3103, !3108, !3113, !3118, !3123}
!3088 = !DIDerivedType(tag: DW_TAG_member, scope: !3086, file: !3015, line: 99, baseType: !3089, size: 32)
!3089 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3086, file: !3015, line: 99, size: 32, elements: !3090)
!3090 = !{!3091, !3092}
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3089, file: !3015, line: 99, baseType: !113, size: 32)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3089, file: !3015, line: 99, baseType: !113, size: 32)
!3093 = !DIDerivedType(tag: DW_TAG_member, scope: !3086, file: !3015, line: 100, baseType: !3094, size: 32, offset: 32)
!3094 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3086, file: !3015, line: 100, size: 32, elements: !3095)
!3095 = !{!3096, !3097}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3094, file: !3015, line: 100, baseType: !113, size: 32)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3094, file: !3015, line: 100, baseType: !113, size: 32)
!3098 = !DIDerivedType(tag: DW_TAG_member, scope: !3086, file: !3015, line: 101, baseType: !3099, size: 32, offset: 64)
!3099 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3086, file: !3015, line: 101, size: 32, elements: !3100)
!3100 = !{!3101, !3102}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3099, file: !3015, line: 101, baseType: !113, size: 32)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3099, file: !3015, line: 101, baseType: !113, size: 32)
!3103 = !DIDerivedType(tag: DW_TAG_member, scope: !3086, file: !3015, line: 102, baseType: !3104, size: 32, offset: 96)
!3104 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3086, file: !3015, line: 102, size: 32, elements: !3105)
!3105 = !{!3106, !3107}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3104, file: !3015, line: 102, baseType: !113, size: 32)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3104, file: !3015, line: 102, baseType: !113, size: 32)
!3108 = !DIDerivedType(tag: DW_TAG_member, scope: !3086, file: !3015, line: 103, baseType: !3109, size: 32, offset: 128)
!3109 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3086, file: !3015, line: 103, size: 32, elements: !3110)
!3110 = !{!3111, !3112}
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3109, file: !3015, line: 103, baseType: !113, size: 32)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3109, file: !3015, line: 103, baseType: !113, size: 32)
!3113 = !DIDerivedType(tag: DW_TAG_member, scope: !3086, file: !3015, line: 104, baseType: !3114, size: 32, offset: 160)
!3114 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3086, file: !3015, line: 104, size: 32, elements: !3115)
!3115 = !{!3116, !3117}
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3114, file: !3015, line: 104, baseType: !113, size: 32)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3114, file: !3015, line: 104, baseType: !113, size: 32)
!3118 = !DIDerivedType(tag: DW_TAG_member, scope: !3086, file: !3015, line: 105, baseType: !3119, size: 32, offset: 192)
!3119 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3086, file: !3015, line: 105, size: 32, elements: !3120)
!3120 = !{!3121, !3122}
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3119, file: !3015, line: 105, baseType: !113, size: 32)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3119, file: !3015, line: 105, baseType: !113, size: 32)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3086, file: !3015, line: 106, baseType: !113, size: 32, offset: 224)
!3124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 32)
!3125 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3126, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1928, retainedTypes: !3127, splitDebugInlining: false, nameTableKind: None)
!3126 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!3127 = !{!1151, !220, !164, !113, !3128, !3145}
!3128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3129, size: 32)
!3129 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !792, line: 426, baseType: !3130)
!3130 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !792, line: 411, size: 28704, elements: !3131)
!3131 = !{!3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144}
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3130, file: !792, line: 413, baseType: !1943, size: 256)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3130, file: !792, line: 414, baseType: !1945, size: 768, offset: 256)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3130, file: !792, line: 415, baseType: !1943, size: 256, offset: 1024)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3130, file: !792, line: 416, baseType: !1945, size: 768, offset: 1280)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3130, file: !792, line: 417, baseType: !1943, size: 256, offset: 2048)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3130, file: !792, line: 418, baseType: !1945, size: 768, offset: 2304)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3130, file: !792, line: 419, baseType: !1943, size: 256, offset: 3072)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3130, file: !792, line: 420, baseType: !1945, size: 768, offset: 3328)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3130, file: !792, line: 421, baseType: !1943, size: 256, offset: 4096)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3130, file: !792, line: 422, baseType: !1956, size: 1792, offset: 4352)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3130, file: !792, line: 423, baseType: !1960, size: 1920, offset: 6144)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3130, file: !792, line: 424, baseType: !1965, size: 20608, offset: 8064)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3130, file: !792, line: 425, baseType: !574, size: 32, offset: 28672)
!3145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3146, size: 32)
!3146 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !792, line: 468, baseType: !3147)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !792, line: 445, size: 1120, elements: !3148)
!3148 = !{!3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3147, file: !792, line: 447, baseType: !796, size: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3147, file: !792, line: 448, baseType: !574, size: 32, offset: 32)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3147, file: !792, line: 449, baseType: !574, size: 32, offset: 64)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3147, file: !792, line: 450, baseType: !574, size: 32, offset: 96)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3147, file: !792, line: 451, baseType: !574, size: 32, offset: 128)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3147, file: !792, line: 452, baseType: !574, size: 32, offset: 160)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3147, file: !792, line: 453, baseType: !1980, size: 96, offset: 192)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3147, file: !792, line: 454, baseType: !574, size: 32, offset: 288)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3147, file: !792, line: 455, baseType: !574, size: 32, offset: 320)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3147, file: !792, line: 456, baseType: !574, size: 32, offset: 352)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3147, file: !792, line: 457, baseType: !574, size: 32, offset: 384)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3147, file: !792, line: 458, baseType: !574, size: 32, offset: 416)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3147, file: !792, line: 459, baseType: !574, size: 32, offset: 448)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3147, file: !792, line: 460, baseType: !574, size: 32, offset: 480)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3147, file: !792, line: 461, baseType: !1991, size: 64, offset: 512)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3147, file: !792, line: 462, baseType: !796, size: 32, offset: 576)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3147, file: !792, line: 463, baseType: !796, size: 32, offset: 608)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3147, file: !792, line: 464, baseType: !1995, size: 128, offset: 640)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3147, file: !792, line: 465, baseType: !1997, size: 160, offset: 768)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3147, file: !792, line: 466, baseType: !1999, size: 160, offset: 928)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3147, file: !792, line: 467, baseType: !574, size: 32, offset: 1088)
!3170 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3171, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3172, splitDebugInlining: false, nameTableKind: None)
!3171 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!3172 = !{!3173, !104, !108}
!3173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3174, size: 32)
!3174 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !792, line: 468, baseType: !3175)
!3175 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !792, line: 445, size: 1120, elements: !3176)
!3176 = !{!3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197}
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3175, file: !792, line: 447, baseType: !796, size: 32)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3175, file: !792, line: 448, baseType: !574, size: 32, offset: 32)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3175, file: !792, line: 449, baseType: !574, size: 32, offset: 64)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3175, file: !792, line: 450, baseType: !574, size: 32, offset: 96)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3175, file: !792, line: 451, baseType: !574, size: 32, offset: 128)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3175, file: !792, line: 452, baseType: !574, size: 32, offset: 160)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3175, file: !792, line: 453, baseType: !1980, size: 96, offset: 192)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3175, file: !792, line: 454, baseType: !574, size: 32, offset: 288)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3175, file: !792, line: 455, baseType: !574, size: 32, offset: 320)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3175, file: !792, line: 456, baseType: !574, size: 32, offset: 352)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3175, file: !792, line: 457, baseType: !574, size: 32, offset: 384)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3175, file: !792, line: 458, baseType: !574, size: 32, offset: 416)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3175, file: !792, line: 459, baseType: !574, size: 32, offset: 448)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3175, file: !792, line: 460, baseType: !574, size: 32, offset: 480)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3175, file: !792, line: 461, baseType: !1991, size: 64, offset: 512)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3175, file: !792, line: 462, baseType: !796, size: 32, offset: 576)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3175, file: !792, line: 463, baseType: !796, size: 32, offset: 608)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3175, file: !792, line: 464, baseType: !1995, size: 128, offset: 640)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3175, file: !792, line: 465, baseType: !1997, size: 160, offset: 768)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3175, file: !792, line: 466, baseType: !1999, size: 160, offset: 928)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3175, file: !792, line: 467, baseType: !574, size: 32, offset: 1088)
!3198 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3199, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3200, splitDebugInlining: false, nameTableKind: None)
!3199 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!3200 = !{!107, !443, !439, !1319, !3201, !165, !104}
!3201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3202, size: 32)
!3202 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!3203 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3204, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3205, splitDebugInlining: false, nameTableKind: None)
!3204 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!3205 = !{!3206}
!3206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3207, size: 32)
!3207 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !570, line: 369, baseType: !3208)
!3208 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !570, line: 335, size: 1152, elements: !3209)
!3209 = !{!3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241}
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3208, file: !570, line: 337, baseType: !574, size: 32)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3208, file: !570, line: 338, baseType: !574, size: 32, offset: 32)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3208, file: !570, line: 339, baseType: !574, size: 32, offset: 64)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3208, file: !570, line: 340, baseType: !574, size: 32, offset: 96)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3208, file: !570, line: 341, baseType: !574, size: 32, offset: 128)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3208, file: !570, line: 342, baseType: !574, size: 32, offset: 160)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3208, file: !570, line: 343, baseType: !574, size: 32, offset: 192)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3208, file: !570, line: 344, baseType: !113, size: 32, offset: 224)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3208, file: !570, line: 345, baseType: !574, size: 32, offset: 256)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3208, file: !570, line: 346, baseType: !574, size: 32, offset: 288)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3208, file: !570, line: 347, baseType: !1185, size: 64, offset: 320)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3208, file: !570, line: 348, baseType: !574, size: 32, offset: 384)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3208, file: !570, line: 349, baseType: !574, size: 32, offset: 416)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3208, file: !570, line: 350, baseType: !574, size: 32, offset: 448)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3208, file: !570, line: 351, baseType: !113, size: 32, offset: 480)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3208, file: !570, line: 352, baseType: !574, size: 32, offset: 512)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3208, file: !570, line: 353, baseType: !574, size: 32, offset: 544)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3208, file: !570, line: 354, baseType: !1185, size: 64, offset: 576)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3208, file: !570, line: 355, baseType: !574, size: 32, offset: 640)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3208, file: !570, line: 356, baseType: !574, size: 32, offset: 672)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3208, file: !570, line: 357, baseType: !574, size: 32, offset: 704)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3208, file: !570, line: 358, baseType: !113, size: 32, offset: 736)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3208, file: !570, line: 359, baseType: !574, size: 32, offset: 768)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3208, file: !570, line: 360, baseType: !574, size: 32, offset: 800)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3208, file: !570, line: 361, baseType: !1185, size: 64, offset: 832)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3208, file: !570, line: 362, baseType: !574, size: 32, offset: 896)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3208, file: !570, line: 363, baseType: !574, size: 32, offset: 928)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3208, file: !570, line: 364, baseType: !1185, size: 64, offset: 960)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3208, file: !570, line: 365, baseType: !574, size: 32, offset: 1024)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3208, file: !570, line: 366, baseType: !574, size: 32, offset: 1056)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3208, file: !570, line: 367, baseType: !1206, size: 32, offset: 1088)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3208, file: !570, line: 368, baseType: !574, size: 32, offset: 1120)
!3242 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3243, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3243 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!3244 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3245, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3246, retainedTypes: !3262, splitDebugInlining: false, nameTableKind: None)
!3245 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!3246 = !{!3247, !3254, !3258}
!3247 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3248, line: 38, baseType: !32, size: 32, elements: !3249)
!3248 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3249 = !{!3250, !3251, !3252, !3253}
!3250 = !DIEnumerator(name: "HAL_OK", value: 0)
!3251 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3252 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3253 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3254 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1158, line: 184, baseType: !32, size: 32, elements: !3255)
!3255 = !{!3256, !3257}
!3256 = !DIEnumerator(name: "RESET", value: 0)
!3257 = !DIEnumerator(name: "SET", value: 1)
!3258 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1158, line: 190, baseType: !32, size: 32, elements: !3259)
!3259 = !{!3260, !3261}
!3260 = !DIEnumerator(name: "DISABLE", value: 0)
!3261 = !DIEnumerator(name: "ENABLE", value: 1)
!3262 = !{!104, !3263, !164, !113, !1799, !3299, !3305, !3316, !168, !3317, !114}
!3263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3264, size: 32)
!3264 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !570, line: 369, baseType: !3265)
!3265 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !570, line: 335, size: 1152, elements: !3266)
!3266 = !{!3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298}
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3265, file: !570, line: 337, baseType: !574, size: 32)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3265, file: !570, line: 338, baseType: !574, size: 32, offset: 32)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3265, file: !570, line: 339, baseType: !574, size: 32, offset: 64)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3265, file: !570, line: 340, baseType: !574, size: 32, offset: 96)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3265, file: !570, line: 341, baseType: !574, size: 32, offset: 128)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3265, file: !570, line: 342, baseType: !574, size: 32, offset: 160)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3265, file: !570, line: 343, baseType: !574, size: 32, offset: 192)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3265, file: !570, line: 344, baseType: !113, size: 32, offset: 224)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3265, file: !570, line: 345, baseType: !574, size: 32, offset: 256)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3265, file: !570, line: 346, baseType: !574, size: 32, offset: 288)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3265, file: !570, line: 347, baseType: !1185, size: 64, offset: 320)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3265, file: !570, line: 348, baseType: !574, size: 32, offset: 384)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3265, file: !570, line: 349, baseType: !574, size: 32, offset: 416)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3265, file: !570, line: 350, baseType: !574, size: 32, offset: 448)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3265, file: !570, line: 351, baseType: !113, size: 32, offset: 480)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3265, file: !570, line: 352, baseType: !574, size: 32, offset: 512)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3265, file: !570, line: 353, baseType: !574, size: 32, offset: 544)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3265, file: !570, line: 354, baseType: !1185, size: 64, offset: 576)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3265, file: !570, line: 355, baseType: !574, size: 32, offset: 640)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3265, file: !570, line: 356, baseType: !574, size: 32, offset: 672)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3265, file: !570, line: 357, baseType: !574, size: 32, offset: 704)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3265, file: !570, line: 358, baseType: !113, size: 32, offset: 736)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3265, file: !570, line: 359, baseType: !574, size: 32, offset: 768)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3265, file: !570, line: 360, baseType: !574, size: 32, offset: 800)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3265, file: !570, line: 361, baseType: !1185, size: 64, offset: 832)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3265, file: !570, line: 362, baseType: !574, size: 32, offset: 896)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3265, file: !570, line: 363, baseType: !574, size: 32, offset: 928)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3265, file: !570, line: 364, baseType: !1185, size: 64, offset: 960)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3265, file: !570, line: 365, baseType: !574, size: 32, offset: 1024)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3265, file: !570, line: 366, baseType: !574, size: 32, offset: 1056)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3265, file: !570, line: 367, baseType: !1206, size: 32, offset: 1088)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3265, file: !570, line: 368, baseType: !574, size: 32, offset: 1120)
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3300, size: 32)
!3300 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !570, line: 329, baseType: !3301)
!3301 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !570, line: 325, size: 64, elements: !3302)
!3302 = !{!3303, !3304}
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3301, file: !570, line: 327, baseType: !574, size: 32)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3301, file: !570, line: 328, baseType: !574, size: 32, offset: 32)
!3305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3306, size: 32)
!3306 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !570, line: 258, baseType: !3307)
!3307 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !570, line: 249, size: 224, elements: !3308)
!3308 = !{!3309, !3310, !3311, !3312, !3313, !3314, !3315}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3307, file: !570, line: 251, baseType: !574, size: 32)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3307, file: !570, line: 252, baseType: !574, size: 32, offset: 32)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3307, file: !570, line: 253, baseType: !574, size: 32, offset: 64)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3307, file: !570, line: 254, baseType: !574, size: 32, offset: 96)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3307, file: !570, line: 255, baseType: !574, size: 32, offset: 128)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3307, file: !570, line: 256, baseType: !574, size: 32, offset: 160)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3307, file: !570, line: 257, baseType: !574, size: 32, offset: 192)
!3316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 32)
!3317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3318, size: 32)
!3318 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !570, line: 275, baseType: !3319)
!3319 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !570, line: 264, size: 320, elements: !3320)
!3320 = !{!3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329}
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3319, file: !570, line: 266, baseType: !574, size: 32)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3319, file: !570, line: 267, baseType: !574, size: 32, offset: 32)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3319, file: !570, line: 268, baseType: !574, size: 32, offset: 64)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3319, file: !570, line: 269, baseType: !574, size: 32, offset: 96)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3319, file: !570, line: 270, baseType: !574, size: 32, offset: 128)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3319, file: !570, line: 271, baseType: !574, size: 32, offset: 160)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3319, file: !570, line: 272, baseType: !574, size: 32, offset: 192)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3319, file: !570, line: 273, baseType: !574, size: 32, offset: 224)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3319, file: !570, line: 274, baseType: !1473, size: 64, offset: 256)
!3330 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3331, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3332, retainedTypes: !3333, splitDebugInlining: false, nameTableKind: None)
!3331 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!3332 = !{!1157}
!3333 = !{!3334, !113, !3342, !3348, !3359}
!3334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3335, size: 32)
!3335 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !792, line: 770, baseType: !3336)
!3336 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !792, line: 764, size: 128, elements: !3337)
!3337 = !{!3338, !3339, !3340, !3341}
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3336, file: !792, line: 766, baseType: !574, size: 32)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3336, file: !792, line: 767, baseType: !574, size: 32, offset: 32)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3336, file: !792, line: 768, baseType: !574, size: 32, offset: 64)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3336, file: !792, line: 769, baseType: !796, size: 32, offset: 96)
!3342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3343, size: 32)
!3343 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !570, line: 329, baseType: !3344)
!3344 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !570, line: 325, size: 64, elements: !3345)
!3345 = !{!3346, !3347}
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3344, file: !570, line: 327, baseType: !574, size: 32)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3344, file: !570, line: 328, baseType: !574, size: 32, offset: 32)
!3348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3349, size: 32)
!3349 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !570, line: 258, baseType: !3350)
!3350 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !570, line: 249, size: 224, elements: !3351)
!3351 = !{!3352, !3353, !3354, !3355, !3356, !3357, !3358}
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3350, file: !570, line: 251, baseType: !574, size: 32)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3350, file: !570, line: 252, baseType: !574, size: 32, offset: 32)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3350, file: !570, line: 253, baseType: !574, size: 32, offset: 64)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3350, file: !570, line: 254, baseType: !574, size: 32, offset: 96)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3350, file: !570, line: 255, baseType: !574, size: 32, offset: 128)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3350, file: !570, line: 256, baseType: !574, size: 32, offset: 160)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3350, file: !570, line: 257, baseType: !574, size: 32, offset: 192)
!3359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3360, size: 32)
!3360 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !570, line: 369, baseType: !3361)
!3361 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !570, line: 335, size: 1152, elements: !3362)
!3362 = !{!3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394}
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3361, file: !570, line: 337, baseType: !574, size: 32)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3361, file: !570, line: 338, baseType: !574, size: 32, offset: 32)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3361, file: !570, line: 339, baseType: !574, size: 32, offset: 64)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3361, file: !570, line: 340, baseType: !574, size: 32, offset: 96)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3361, file: !570, line: 341, baseType: !574, size: 32, offset: 128)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3361, file: !570, line: 342, baseType: !574, size: 32, offset: 160)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3361, file: !570, line: 343, baseType: !574, size: 32, offset: 192)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3361, file: !570, line: 344, baseType: !113, size: 32, offset: 224)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3361, file: !570, line: 345, baseType: !574, size: 32, offset: 256)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3361, file: !570, line: 346, baseType: !574, size: 32, offset: 288)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3361, file: !570, line: 347, baseType: !1185, size: 64, offset: 320)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3361, file: !570, line: 348, baseType: !574, size: 32, offset: 384)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3361, file: !570, line: 349, baseType: !574, size: 32, offset: 416)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3361, file: !570, line: 350, baseType: !574, size: 32, offset: 448)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3361, file: !570, line: 351, baseType: !113, size: 32, offset: 480)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3361, file: !570, line: 352, baseType: !574, size: 32, offset: 512)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3361, file: !570, line: 353, baseType: !574, size: 32, offset: 544)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3361, file: !570, line: 354, baseType: !1185, size: 64, offset: 576)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3361, file: !570, line: 355, baseType: !574, size: 32, offset: 640)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3361, file: !570, line: 356, baseType: !574, size: 32, offset: 672)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3361, file: !570, line: 357, baseType: !574, size: 32, offset: 704)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3361, file: !570, line: 358, baseType: !113, size: 32, offset: 736)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3361, file: !570, line: 359, baseType: !574, size: 32, offset: 768)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3361, file: !570, line: 360, baseType: !574, size: 32, offset: 800)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3361, file: !570, line: 361, baseType: !1185, size: 64, offset: 832)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3361, file: !570, line: 362, baseType: !574, size: 32, offset: 896)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3361, file: !570, line: 363, baseType: !574, size: 32, offset: 928)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3361, file: !570, line: 364, baseType: !1185, size: 64, offset: 960)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3361, file: !570, line: 365, baseType: !574, size: 32, offset: 1024)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3361, file: !570, line: 366, baseType: !574, size: 32, offset: 1056)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3361, file: !570, line: 367, baseType: !1206, size: 32, offset: 1088)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3361, file: !570, line: 368, baseType: !574, size: 32, offset: 1120)
!3395 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3396, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3397, splitDebugInlining: false, nameTableKind: None)
!3396 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!3397 = !{!104, !439}
!3398 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3399, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3400, retainedTypes: !557, splitDebugInlining: false, nameTableKind: None)
!3399 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!3400 = !{!3401, !3408, !30}
!3401 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3402, line: 14, baseType: !32, size: 32, elements: !3403)
!3402 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3403 = !{!3404, !3405, !3406, !3407}
!3404 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3405 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3406 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3407 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3408 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3402, line: 42, baseType: !32, size: 32, elements: !3409)
!3409 = !{!3410, !3411, !3412, !3413, !3414, !3415}
!3410 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3411 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3412 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3413 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3414 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3415 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3416 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3417, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !557, splitDebugInlining: false, nameTableKind: None)
!3417 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!3418 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3419, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3420, splitDebugInlining: false, nameTableKind: None)
!3419 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!3420 = !{!22, !104, !108}
!3421 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3422, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !557, splitDebugInlining: false, nameTableKind: None)
!3422 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!3423 = !{!"Ubuntu clang version 14.0.6"}
!3424 = !{i32 7, !"Dwarf Version", i32 4}
!3425 = !{i32 2, !"Debug Info Version", i32 3}
!3426 = !{i32 1, !"wchar_size", i32 4}
!3427 = !{i32 1, !"min_enum_size", i32 4}
!3428 = !{i32 1, !"branch-target-enforcement", i32 0}
!3429 = !{i32 1, !"sign-return-address", i32 0}
!3430 = !{i32 1, !"sign-return-address-all", i32 0}
!3431 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3432 = !{i32 7, !"frame-pointer", i32 2}
!3433 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3434, file: !3434, line: 26, type: !3435, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2852, retainedNodes: !437)
!3434 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3435 = !DISubroutineType(types: !3436)
!3436 = !{null}
!3437 = !DILocation(line: 28, column: 1, scope: !3433)
!3438 = !{i64 2154457255, i64 2154457275, i64 2154457338}
!3439 = !DILocation(line: 29, column: 1, scope: !3433)
!3440 = !{i64 2154457670, i64 2154457690, i64 2154457753}
!3441 = !DILocation(line: 30, column: 1, scope: !3433)
!3442 = !{i64 2154458089, i64 2154458109, i64 2154458172}
!3443 = !DILocation(line: 31, column: 1, scope: !3433)
!3444 = !{i64 2154458508, i64 2154458528, i64 2154458591}
!3445 = !DILocation(line: 33, column: 1, scope: !3433)
!3446 = !{i64 2154458800, i64 2154458820, i64 2154458883}
!3447 = !DILocation(line: 35, column: 1, scope: !3433)
!3448 = !{i64 2154459125, i64 2154459145, i64 2154459208}
!3449 = !DILocation(line: 50, column: 1, scope: !3433)
!3450 = !{i64 2154459552, i64 2154459572, i64 2154459635}
!3451 = !DILocation(line: 54, column: 1, scope: !3433)
!3452 = !{i64 2154459991, i64 2154460011, i64 2154460074}
!3453 = !DILocation(line: 61, column: 1, scope: !3433)
!3454 = !{i64 2154460308, i64 2154460328, i64 2154460391}
!3455 = !DILocation(line: 63, column: 1, scope: !3433)
!3456 = !{i64 2154460688, i64 2154460708, i64 2154460771}
!3457 = !DILocation(line: 64, column: 1, scope: !3433)
!3458 = !{i64 2154461210, i64 2154461230, i64 2154461293}
!3459 = !DILocation(line: 65, column: 1, scope: !3433)
!3460 = !{i64 2154461708, i64 2154461728, i64 2154461791}
!3461 = !DILocation(line: 66, column: 1, scope: !3433)
!3462 = !{i64 2154462190, i64 2154462210, i64 2154462273}
!3463 = !DILocation(line: 67, column: 1, scope: !3433)
!3464 = !{i64 2154466758, i64 2154466778, i64 2154466841}
!3465 = !DILocation(line: 68, column: 1, scope: !3433)
!3466 = !{i64 2154467246, i64 2154467266, i64 2154467329}
!3467 = !DILocation(line: 70, column: 1, scope: !3433)
!3468 = !{i64 2154467714, i64 2154467734, i64 2154467797}
!3469 = !DILocation(line: 71, column: 1, scope: !3433)
!3470 = !{i64 2154468156, i64 2154468176, i64 2154468239}
!3471 = !DILocation(line: 72, column: 1, scope: !3433)
!3472 = !{i64 2154468614, i64 2154468634, i64 2154468697}
!3473 = !DILocation(line: 79, column: 1, scope: !3433)
!3474 = !{i64 2154469068, i64 2154469088, i64 2154469151}
!3475 = !DILocation(line: 80, column: 1, scope: !3433)
!3476 = !{i64 2154469579, i64 2154469599, i64 2154469662}
!3477 = !DILocation(line: 82, column: 1, scope: !3433)
!3478 = !{i64 2154470070, i64 2154470090, i64 2154470153}
!3479 = !DILocation(line: 97, column: 1, scope: !3433)
!3480 = !{i64 2154470407, i64 2154470427, i64 2154470490}
!3481 = !DILocation(line: 99, column: 1, scope: !3433)
!3482 = !{i64 2154470625, i64 2154470645, i64 2154470708}
!3483 = !DILocation(line: 102, column: 1, scope: !3433)
!3484 = !{i64 2154470882, i64 2154470902, i64 2154470965}
!3485 = !DILocation(line: 105, column: 1, scope: !3433)
!3486 = !{i64 2154471122, i64 2154471142, i64 2154471205}
!3487 = !DILocation(line: 115, column: 1, scope: !3433)
!3488 = !{i64 2154471461, i64 2154471481, i64 2154471544}
!3489 = !DILocation(line: 118, column: 1, scope: !3433)
!3490 = !{i64 2154471805, i64 2154471825, i64 2154471888}
!3491 = !DILocation(line: 32, column: 1, scope: !3492)
!3492 = !DILexicalBlockFile(scope: !3433, file: !3493, discriminator: 0)
!3493 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3494 = !{i64 2154472161, i64 2154472181, i64 2154472244}
!3495 = !DILocation(line: 33, column: 1, scope: !3492)
!3496 = !{i64 2154472673, i64 2154472693, i64 2154472756}
!3497 = !DILocation(line: 53, column: 1, scope: !3492)
!3498 = !{i64 2154473181, i64 2154473201, i64 2154473264}
!3499 = !DILocation(line: 54, column: 1, scope: !3492)
!3500 = !{i64 2154473599, i64 2154473619, i64 2154473682}
!3501 = !DILocation(line: 55, column: 1, scope: !3492)
!3502 = !{i64 2154474017, i64 2154474037, i64 2154474100}
!3503 = !DILocation(line: 56, column: 1, scope: !3492)
!3504 = !{i64 2154474435, i64 2154474455, i64 2154474518}
!3505 = !DILocation(line: 57, column: 1, scope: !3492)
!3506 = !{i64 2154474853, i64 2154474873, i64 2154474936}
!3507 = !DILocation(line: 58, column: 1, scope: !3492)
!3508 = !{i64 2154475271, i64 2154475291, i64 2154475354}
!3509 = !DILocation(line: 59, column: 1, scope: !3492)
!3510 = !{i64 2154475689, i64 2154475709, i64 2154475772}
!3511 = !DILocation(line: 60, column: 1, scope: !3492)
!3512 = !{i64 2154480174, i64 2154480194, i64 2154480257}
!3513 = !DILocation(line: 61, column: 1, scope: !3492)
!3514 = !{i64 2154480491, i64 2154480511, i64 2154480574}
!3515 = !DILocation(line: 70, column: 1, scope: !3492)
!3516 = !{i64 2154480720, i64 2154480740, i64 2154480803}
!3517 = !DILocation(line: 72, column: 1, scope: !3492)
!3518 = !{i64 2154481052, i64 2154481072, i64 2154481135}
!3519 = !DILocation(line: 73, column: 1, scope: !3492)
!3520 = !{i64 2154481502, i64 2154481522, i64 2154481585}
!3521 = !DILocation(line: 74, column: 1, scope: !3492)
!3522 = !{i64 2154481952, i64 2154481972, i64 2154482035}
!3523 = !DILocation(line: 75, column: 1, scope: !3492)
!3524 = !{i64 2154482402, i64 2154482422, i64 2154482485}
!3525 = !DILocation(line: 76, column: 1, scope: !3492)
!3526 = !{i64 2154482852, i64 2154482872, i64 2154482935}
!3527 = !DILocation(line: 77, column: 1, scope: !3492)
!3528 = !{i64 2154483302, i64 2154483322, i64 2154483385}
!3529 = !DILocation(line: 78, column: 1, scope: !3492)
!3530 = !{i64 2154483752, i64 2154483772, i64 2154483835}
!3531 = !DILocation(line: 79, column: 1, scope: !3492)
!3532 = !{i64 2154484202, i64 2154484222, i64 2154484285}
!3533 = !DILocation(line: 80, column: 1, scope: !3492)
!3534 = !{i64 2154484655, i64 2154484675, i64 2154484738}
!3535 = !DILocation(line: 84, column: 1, scope: !3492)
!3536 = !{i64 2154484987, i64 2154485007, i64 2154485070}
!3537 = !DILocation(line: 91, column: 1, scope: !3492)
!3538 = !{i64 2154485384, i64 2154485404, i64 2154485467}
!3539 = !DILocation(line: 93, column: 1, scope: !3492)
!3540 = !{i64 2154485751, i64 2154485771, i64 2154485834}
!3541 = !DILocation(line: 106, column: 1, scope: !3492)
!3542 = !{i64 2154486021, i64 2154486041, i64 2154486104}
!3543 = !DILocation(line: 11, column: 1, scope: !3544)
!3544 = !DILexicalBlockFile(scope: !3433, file: !3545, discriminator: 0)
!3545 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3546 = distinct !DISubprogram(name: "main", scope: !119, file: !119, line: 29, type: !3435, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3547)
!3547 = !{!3548, !3565, !3567, !3569, !3573, !3575, !3576, !3578, !3580, !3583, !3585, !3586, !3591, !3592, !3593, !3597, !3599}
!3548 = !DILocalVariable(name: "vnd_sensor", scope: !3546, file: !119, line: 31, type: !3549)
!3549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3550)
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 32)
!3551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3552)
!3552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !3553)
!3553 = !{!3554, !3555, !3556, !3557, !3563, !3564}
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3552, file: !411, line: 380, baseType: !105, size: 32)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !3552, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !3552, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3552, file: !411, line: 386, baseType: !3558, size: 32, offset: 96)
!3558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3559, size: 32)
!3559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !3560)
!3560 = !{!3561, !3562}
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !3559, file: !411, line: 359, baseType: !164, size: 8)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !3559, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3552, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !3552, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!3565 = !DILocalVariable(name: "iodev", scope: !3546, file: !119, line: 32, type: !3566)
!3566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 32)
!3567 = !DILocalVariable(name: "n", scope: !3568, file: !119, line: 35, type: !108)
!3568 = distinct !DILexicalBlock(scope: !3546, file: !119, line: 35, column: 2)
!3569 = !DILocalVariable(name: "sqe", scope: !3570, file: !119, line: 36, type: !3572)
!3570 = distinct !DILexicalBlock(scope: !3571, file: !119, line: 35, column: 30)
!3571 = distinct !DILexicalBlock(scope: !3568, file: !119, line: 35, column: 2)
!3572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!3573 = !DILocalVariable(name: "idx", scope: !3574, file: !119, line: 36, type: !24)
!3574 = distinct !DILexicalBlock(scope: !3570, file: !119, line: 36, column: 26)
!3575 = !DILocalVariable(name: "acq", scope: !3574, file: !119, line: 36, type: !422)
!3576 = !DILocalVariable(name: "m", scope: !3577, file: !119, line: 44, type: !108)
!3577 = distinct !DILexicalBlock(scope: !3546, file: !119, line: 43, column: 15)
!3578 = !DILocalVariable(name: "userdata", scope: !3577, file: !119, line: 45, type: !3579)
!3579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 128, elements: !461)
!3580 = !DILocalVariable(name: "cqe", scope: !3581, file: !119, line: 55, type: !3582)
!3581 = distinct !DILexicalBlock(scope: !3577, file: !119, line: 54, column: 17)
!3582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 32)
!3583 = !DILocalVariable(name: "idx", scope: !3584, file: !119, line: 55, type: !24)
!3584 = distinct !DILexicalBlock(scope: !3581, file: !119, line: 55, column: 27)
!3585 = !DILocalVariable(name: "has_consumable", scope: !3584, file: !119, line: 55, type: !422)
!3586 = !DILocalVariable(name: "_str", scope: !3587, file: !119, line: 81, type: !105)
!3587 = distinct !DILexicalBlock(scope: !3588, file: !119, line: 81, column: 4)
!3588 = distinct !DILexicalBlock(scope: !3589, file: !119, line: 80, column: 27)
!3589 = distinct !DILexicalBlock(scope: !3590, file: !119, line: 80, column: 3)
!3590 = distinct !DILexicalBlock(scope: !3577, file: !119, line: 80, column: 3)
!3591 = !DILocalVariable(name: "is_user_context", scope: !3587, file: !119, line: 81, type: !422)
!3592 = !DILocalVariable(name: "filters", scope: !3587, file: !119, line: 81, type: !113)
!3593 = !DILocalVariable(name: "sqe", scope: !3594, file: !119, line: 90, type: !3572)
!3594 = distinct !DILexicalBlock(scope: !3595, file: !119, line: 89, column: 27)
!3595 = distinct !DILexicalBlock(scope: !3596, file: !119, line: 89, column: 3)
!3596 = distinct !DILexicalBlock(scope: !3577, file: !119, line: 89, column: 3)
!3597 = !DILocalVariable(name: "idx", scope: !3598, file: !119, line: 90, type: !24)
!3598 = distinct !DILexicalBlock(scope: !3594, file: !119, line: 90, column: 27)
!3599 = !DILocalVariable(name: "acq", scope: !3598, file: !119, line: 90, type: !422)
!3600 = !DILocation(line: 0, scope: !3546)
!3601 = !DILocation(line: 32, column: 41, scope: !3546)
!3602 = !DILocation(line: 0, scope: !3568)
!3603 = !DILocation(line: 36, column: 26, scope: !3574)
!3604 = !DILocation(line: 35, column: 2, scope: !3568)
!3605 = !DILocation(line: 43, column: 2, scope: !3546)
!3606 = !DILocation(line: 0, scope: !3574)
!3607 = !DILocation(line: 36, column: 26, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3609, file: !119, line: 36, column: 26)
!3609 = distinct !DILexicalBlock(scope: !3574, file: !119, line: 36, column: 26)
!3610 = !DILocation(line: 0, scope: !3570)
!3611 = !DILocation(line: 38, column: 50, scope: !3570)
!3612 = !DILocation(line: 38, column: 3, scope: !3570)
!3613 = !DILocation(line: 40, column: 3, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3615, file: !119, line: 40, column: 3)
!3615 = distinct !DILexicalBlock(scope: !3570, file: !119, line: 40, column: 3)
!3616 = !DILocation(line: 40, column: 3, scope: !3615)
!3617 = !DILocation(line: 40, column: 3, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3614, file: !119, line: 40, column: 3)
!3619 = !DILocation(line: 35, column: 26, scope: !3571)
!3620 = !DILocation(line: 35, column: 20, scope: !3571)
!3621 = distinct !{!3621, !3604, !3622}
!3622 = !DILocation(line: 41, column: 2, scope: !3568)
!3623 = !DILocation(line: 0, scope: !3577)
!3624 = !DILocation(line: 45, column: 3, scope: !3577)
!3625 = !DILocation(line: 45, column: 12, scope: !3577)
!3626 = !DILocation(line: 47, column: 3, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3628, file: !119, line: 47, column: 3)
!3628 = distinct !DILexicalBlock(scope: !3629, file: !119, line: 47, column: 3)
!3629 = distinct !DILexicalBlock(scope: !3630, file: !119, line: 47, column: 3)
!3630 = distinct !DILexicalBlock(scope: !3577, file: !119, line: 47, column: 3)
!3631 = !DILocation(line: 48, column: 3, scope: !3577)
!3632 = !DILocation(line: 54, column: 3, scope: !3577)
!3633 = !DILocation(line: 55, column: 27, scope: !3584)
!3634 = !DILocation(line: 0, scope: !3584)
!3635 = !DILocation(line: 0, scope: !3581)
!3636 = !DILocation(line: 58, column: 5, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3638, file: !119, line: 58, column: 5)
!3638 = distinct !DILexicalBlock(scope: !3639, file: !119, line: 58, column: 5)
!3639 = distinct !DILexicalBlock(scope: !3640, file: !119, line: 58, column: 5)
!3640 = distinct !DILexicalBlock(scope: !3641, file: !119, line: 58, column: 5)
!3641 = distinct !DILexicalBlock(scope: !3642, file: !119, line: 57, column: 21)
!3642 = distinct !DILexicalBlock(scope: !3581, file: !119, line: 57, column: 8)
!3643 = !DILocation(line: 59, column: 5, scope: !3641)
!3644 = !DILocation(line: 60, column: 5, scope: !3641)
!3645 = distinct !{!3645, !3632, !3646}
!3646 = !DILocation(line: 71, column: 3, scope: !3577)
!3647 = !DILocation(line: 55, column: 27, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3649, file: !119, line: 55, column: 27)
!3649 = distinct !DILexicalBlock(scope: !3584, file: !119, line: 55, column: 27)
!3650 = !DILocation(line: 62, column: 4, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3652, file: !119, line: 62, column: 4)
!3652 = distinct !DILexicalBlock(scope: !3653, file: !119, line: 62, column: 4)
!3653 = distinct !DILexicalBlock(scope: !3654, file: !119, line: 62, column: 4)
!3654 = distinct !DILexicalBlock(scope: !3581, file: !119, line: 62, column: 4)
!3655 = !DILocation(line: 64, column: 13, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3581, file: !119, line: 64, column: 8)
!3657 = !DILocation(line: 64, column: 20, scope: !3656)
!3658 = !DILocation(line: 64, column: 8, scope: !3581)
!3659 = !DILocation(line: 65, column: 5, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3661, file: !119, line: 65, column: 5)
!3661 = distinct !DILexicalBlock(scope: !3662, file: !119, line: 65, column: 5)
!3662 = distinct !DILexicalBlock(scope: !3663, file: !119, line: 65, column: 5)
!3663 = distinct !DILexicalBlock(scope: !3664, file: !119, line: 65, column: 5)
!3664 = distinct !DILexicalBlock(scope: !3656, file: !119, line: 64, column: 25)
!3665 = !DILocation(line: 66, column: 4, scope: !3664)
!3666 = !DILocation(line: 68, column: 23, scope: !3581)
!3667 = !DILocation(line: 68, column: 4, scope: !3581)
!3668 = !DILocation(line: 68, column: 16, scope: !3581)
!3669 = !DILocation(line: 69, column: 4, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3671, file: !119, line: 69, column: 4)
!3671 = distinct !DILexicalBlock(scope: !3581, file: !119, line: 69, column: 4)
!3672 = !DILocation(line: 69, column: 4, scope: !3671)
!3673 = !DILocation(line: 69, column: 4, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3670, file: !119, line: 69, column: 4)
!3675 = !DILocation(line: 70, column: 5, scope: !3581)
!3676 = !DILocation(line: 54, column: 12, scope: !3577)
!3677 = !DILocation(line: 79, column: 3, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3679, file: !119, line: 79, column: 3)
!3679 = distinct !DILexicalBlock(scope: !3680, file: !119, line: 79, column: 3)
!3680 = distinct !DILexicalBlock(scope: !3681, file: !119, line: 79, column: 3)
!3681 = distinct !DILexicalBlock(scope: !3577, file: !119, line: 79, column: 3)
!3682 = !DILocation(line: 80, column: 3, scope: !3590)
!3683 = !DILocation(line: 0, scope: !3587)
!3684 = !DILocation(line: 81, column: 4, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3686, file: !119, line: 81, column: 4)
!3686 = distinct !DILexicalBlock(scope: !3687, file: !119, line: 81, column: 4)
!3687 = distinct !DILexicalBlock(scope: !3587, file: !119, line: 81, column: 4)
!3688 = !DILocation(line: 81, column: 4, scope: !3686)
!3689 = !DILocation(line: 80, column: 23, scope: !3589)
!3690 = !DILocation(line: 80, column: 17, scope: !3589)
!3691 = distinct !{!3691, !3682, !3692}
!3692 = !DILocation(line: 82, column: 3, scope: !3590)
!3693 = !DILocation(line: 83, column: 3, scope: !3577)
!3694 = !DILocation(line: 84, column: 3, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3696, file: !119, line: 84, column: 3)
!3696 = distinct !DILexicalBlock(scope: !3697, file: !119, line: 84, column: 3)
!3697 = distinct !DILexicalBlock(scope: !3698, file: !119, line: 84, column: 3)
!3698 = distinct !DILexicalBlock(scope: !3577, file: !119, line: 84, column: 3)
!3699 = !DILocation(line: 90, column: 27, scope: !3598)
!3700 = !DILocation(line: 89, column: 3, scope: !3596)
!3701 = !DILocation(line: 0, scope: !3598)
!3702 = !DILocation(line: 90, column: 27, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3704, file: !119, line: 90, column: 27)
!3704 = distinct !DILexicalBlock(scope: !3598, file: !119, line: 90, column: 27)
!3705 = !DILocation(line: 0, scope: !3594)
!3706 = !DILocation(line: 93, column: 9, scope: !3594)
!3707 = !DILocation(line: 92, column: 4, scope: !3594)
!3708 = !DILocation(line: 95, column: 4, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3710, file: !119, line: 95, column: 4)
!3710 = distinct !DILexicalBlock(scope: !3594, file: !119, line: 95, column: 4)
!3711 = !DILocation(line: 95, column: 4, scope: !3710)
!3712 = !DILocation(line: 95, column: 4, scope: !3713)
!3713 = distinct !DILexicalBlock(scope: !3709, file: !119, line: 95, column: 4)
!3714 = !DILocation(line: 89, column: 23, scope: !3595)
!3715 = !DILocation(line: 89, column: 17, scope: !3595)
!3716 = distinct !{!3716, !3700, !3717}
!3717 = !DILocation(line: 96, column: 3, scope: !3596)
!3718 = !DILocation(line: 97, column: 2, scope: !3546)
!3719 = distinct !{!3719, !3605, !3718}
!3720 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3721, file: !3721, line: 175, type: !3722, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3724)
!3721 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3722 = !DISubroutineType(types: !3723)
!3723 = !{!107, !108}
!3724 = !{!3725}
!3725 = !DILocalVariable(name: "level", arg: 1, scope: !3720, file: !3721, line: 175, type: !108)
!3726 = !DILocation(line: 0, scope: !3720)
!3727 = !DILocation(line: 177, column: 2, scope: !3720)
!3728 = !DILocation(line: 189, column: 1, scope: !3720)
!3729 = distinct !DISubprogram(name: "atomic_get", scope: !3730, file: !3730, line: 159, type: !3731, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3736)
!3730 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3731 = !DISubroutineType(types: !3732)
!3732 = !{!3733, !3734}
!3733 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !143, line: 23, baseType: !142)
!3734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3735, size: 32)
!3735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!3736 = !{!3737}
!3737 = !DILocalVariable(name: "target", arg: 1, scope: !3729, file: !3730, line: 159, type: !3734)
!3738 = !DILocation(line: 0, scope: !3729)
!3739 = !DILocation(line: 161, column: 9, scope: !3729)
!3740 = !DILocation(line: 161, column: 2, scope: !3729)
!3741 = distinct !DISubprogram(name: "rtio_sqe_prep_read", scope: !125, file: !125, line: 341, type: !3742, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3744)
!3742 = !DISubroutineType(types: !3743)
!3743 = !{null, !3572, !171, !697, !209, !113, !104}
!3744 = !{!3745, !3746, !3747, !3748, !3749, !3750}
!3745 = !DILocalVariable(name: "sqe", arg: 1, scope: !3741, file: !125, line: 341, type: !3572)
!3746 = !DILocalVariable(name: "iodev", arg: 2, scope: !3741, file: !125, line: 342, type: !171)
!3747 = !DILocalVariable(name: "prio", arg: 3, scope: !3741, file: !125, line: 343, type: !697)
!3748 = !DILocalVariable(name: "buf", arg: 4, scope: !3741, file: !125, line: 344, type: !209)
!3749 = !DILocalVariable(name: "len", arg: 5, scope: !3741, file: !125, line: 345, type: !113)
!3750 = !DILocalVariable(name: "userdata", arg: 6, scope: !3741, file: !125, line: 346, type: !104)
!3751 = !DILocation(line: 0, scope: !3741)
!3752 = !DILocation(line: 348, column: 7, scope: !3741)
!3753 = !DILocation(line: 348, column: 10, scope: !3741)
!3754 = !DILocation(line: 349, column: 7, scope: !3741)
!3755 = !DILocation(line: 349, column: 12, scope: !3741)
!3756 = !DILocation(line: 350, column: 7, scope: !3741)
!3757 = !DILocation(line: 350, column: 13, scope: !3741)
!3758 = !DILocation(line: 351, column: 7, scope: !3741)
!3759 = !DILocation(line: 351, column: 15, scope: !3741)
!3760 = !DILocation(line: 352, column: 7, scope: !3741)
!3761 = !DILocation(line: 352, column: 11, scope: !3741)
!3762 = !DILocation(line: 353, column: 7, scope: !3741)
!3763 = !DILocation(line: 353, column: 16, scope: !3741)
!3764 = !DILocation(line: 354, column: 1, scope: !3741)
!3765 = distinct !DISubprogram(name: "atomic_add", scope: !3730, file: !3730, line: 86, type: !3766, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3769)
!3766 = !DISubroutineType(types: !3767)
!3767 = !{!3733, !3768, !3733}
!3768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!3769 = !{!3770, !3771}
!3770 = !DILocalVariable(name: "target", arg: 1, scope: !3765, file: !3730, line: 86, type: !3768)
!3771 = !DILocalVariable(name: "value", arg: 2, scope: !3765, file: !3730, line: 86, type: !3733)
!3772 = !DILocation(line: 0, scope: !3765)
!3773 = !DILocation(line: 88, column: 9, scope: !3765)
!3774 = !DILocation(line: 88, column: 2, scope: !3765)
!3775 = distinct !DISubprogram(name: "rtio_submit", scope: !3776, file: !3776, line: 75, type: !3777, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3779)
!3776 = !DIFile(filename: "zephyr/include/generated/syscalls/rtio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!3777 = !DISubroutineType(types: !3778)
!3778 = !{!108, !136, !113}
!3779 = !{!3780, !3781}
!3780 = !DILocalVariable(name: "r", arg: 1, scope: !3775, file: !3776, line: 75, type: !136)
!3781 = !DILocalVariable(name: "wait_count", arg: 2, scope: !3775, file: !3776, line: 75, type: !113)
!3782 = !DILocation(line: 0, scope: !3775)
!3783 = !DILocation(line: 84, column: 2, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3775, file: !3776, line: 84, column: 2)
!3785 = !{i64 2154398276}
!3786 = !DILocation(line: 85, column: 9, scope: !3775)
!3787 = !DILocation(line: 85, column: 2, scope: !3775)
!3788 = distinct !DISubprogram(name: "k_msleep", scope: !359, file: !359, line: 439, type: !3789, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3791)
!3789 = !DISubroutineType(types: !3790)
!3790 = !{!220, !220}
!3791 = !{!3792}
!3792 = !DILocalVariable(name: "ms", arg: 1, scope: !3788, file: !359, line: 439, type: !220)
!3793 = !DILocation(line: 0, scope: !3788)
!3794 = !DILocation(line: 441, column: 17, scope: !3788)
!3795 = !DILocation(line: 441, column: 9, scope: !3788)
!3796 = !DILocation(line: 441, column: 2, scope: !3788)
!3797 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3798, file: !3798, line: 403, type: !3799, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3801)
!3798 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3799 = !DISubroutineType(types: !3800)
!3800 = !{!114, !114}
!3801 = !{!3802}
!3802 = !DILocalVariable(name: "t", arg: 1, scope: !3797, file: !3798, line: 403, type: !114)
!3803 = !DILocation(line: 0, scope: !3797)
!3804 = !DILocalVariable(name: "t", arg: 1, scope: !3805, file: !3798, line: 102, type: !114)
!3805 = distinct !DISubprogram(name: "z_tmcvt", scope: !3798, file: !3798, line: 102, type: !3806, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3808)
!3806 = !DISubroutineType(types: !3807)
!3807 = !{!114, !114, !113, !113, !422, !422, !422, !422}
!3808 = !{!3804, !3809, !3810, !3811, !3812, !3813, !3814, !3815, !3816, !3817, !3818}
!3809 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3805, file: !3798, line: 102, type: !113)
!3810 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3805, file: !3798, line: 103, type: !113)
!3811 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3805, file: !3798, line: 103, type: !422)
!3812 = !DILocalVariable(name: "result32", arg: 5, scope: !3805, file: !3798, line: 104, type: !422)
!3813 = !DILocalVariable(name: "round_up", arg: 6, scope: !3805, file: !3798, line: 104, type: !422)
!3814 = !DILocalVariable(name: "round_off", arg: 7, scope: !3805, file: !3798, line: 105, type: !422)
!3815 = !DILocalVariable(name: "mul_ratio", scope: !3805, file: !3798, line: 107, type: !422)
!3816 = !DILocalVariable(name: "div_ratio", scope: !3805, file: !3798, line: 109, type: !422)
!3817 = !DILocalVariable(name: "off", scope: !3805, file: !3798, line: 116, type: !114)
!3818 = !DILocalVariable(name: "rdivisor", scope: !3819, file: !3798, line: 119, type: !113)
!3819 = distinct !DILexicalBlock(scope: !3820, file: !3798, line: 118, column: 18)
!3820 = distinct !DILexicalBlock(scope: !3805, file: !3798, line: 118, column: 6)
!3821 = !DILocation(line: 0, scope: !3805, inlinedAt: !3822)
!3822 = distinct !DILocation(line: 406, column: 9, scope: !3797)
!3823 = !DILocation(line: 145, column: 13, scope: !3824, inlinedAt: !3822)
!3824 = distinct !DILexicalBlock(scope: !3825, file: !3798, line: 144, column: 10)
!3825 = distinct !DILexicalBlock(scope: !3826, file: !3798, line: 142, column: 7)
!3826 = distinct !DILexicalBlock(scope: !3827, file: !3798, line: 141, column: 24)
!3827 = distinct !DILexicalBlock(scope: !3828, file: !3798, line: 141, column: 13)
!3828 = distinct !DILexicalBlock(scope: !3805, file: !3798, line: 134, column: 6)
!3829 = !DILocation(line: 406, column: 2, scope: !3797)
!3830 = distinct !DISubprogram(name: "k_sleep", scope: !3831, file: !3831, line: 91, type: !3832, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3838)
!3831 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!3832 = !DISubroutineType(types: !3833)
!3833 = !{!220, !3834}
!3834 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !3835)
!3835 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !3836)
!3836 = !{!3837}
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3835, file: !110, line: 66, baseType: !109, size: 64)
!3838 = !{!3839}
!3839 = !DILocalVariable(name: "timeout", arg: 1, scope: !3830, file: !3831, line: 91, type: !3834)
!3840 = !DILocation(line: 0, scope: !3830)
!3841 = !DILocation(line: 99, column: 2, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3830, file: !3831, line: 99, column: 2)
!3843 = !{i64 2154165322}
!3844 = !DILocation(line: 100, column: 9, scope: !3830)
!3845 = !DILocation(line: 100, column: 2, scope: !3830)
!3846 = distinct !DISubprogram(name: "z_impl_rtio_submit", scope: !125, file: !125, line: 744, type: !3777, scopeLine: 745, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3847)
!3847 = !{!3848, !3849, !3850, !3851}
!3848 = !DILocalVariable(name: "r", arg: 1, scope: !3846, file: !125, line: 744, type: !136)
!3849 = !DILocalVariable(name: "wait_count", arg: 2, scope: !3846, file: !125, line: 744, type: !113)
!3850 = !DILocalVariable(name: "res", scope: !3846, file: !125, line: 746, type: !108)
!3851 = !DILocalVariable(name: "acquired", scope: !3852, file: !125, line: 763, type: !24)
!3852 = distinct !DILexicalBlock(scope: !3853, file: !125, line: 763, column: 2)
!3853 = distinct !DILexicalBlock(scope: !3854, file: !125, line: 763, column: 2)
!3854 = distinct !DILexicalBlock(scope: !3846, file: !125, line: 763, column: 2)
!3855 = !DILocation(line: 0, scope: !3846)
!3856 = !DILocation(line: 763, column: 2, scope: !3853)
!3857 = !DILocation(line: 763, column: 2, scope: !3854)
!3858 = !DILocation(line: 0, scope: !3852)
!3859 = !DILocation(line: 763, column: 2, scope: !3852)
!3860 = !DILocation(line: 768, column: 11, scope: !3846)
!3861 = !DILocation(line: 768, column: 21, scope: !3846)
!3862 = !DILocation(line: 768, column: 26, scope: !3846)
!3863 = !DILocation(line: 768, column: 8, scope: !3846)
!3864 = !DILocation(line: 769, column: 10, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3846, file: !125, line: 769, column: 6)
!3866 = !DILocation(line: 769, column: 6, scope: !3846)
!3867 = !DILocation(line: 784, column: 9, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3846, file: !125, line: 784, column: 9)
!3869 = !DILocation(line: 784, column: 37, scope: !3846)
!3870 = !DILocation(line: 784, column: 2, scope: !3846)
!3871 = !DILocation(line: 788, column: 3, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3846, file: !125, line: 784, column: 51)
!3873 = distinct !{!3873, !3870, !3874}
!3874 = !DILocation(line: 790, column: 2, scope: !3846)
!3875 = !DILocation(line: 794, column: 1, scope: !3846)
!3876 = distinct !DISubprogram(name: "k_yield", scope: !3831, file: !3831, line: 140, type: !3435, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !437)
!3877 = !DILocation(line: 148, column: 2, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3876, file: !3831, line: 148, column: 2)
!3879 = !{i64 2154165526}
!3880 = !DILocation(line: 149, column: 2, scope: !3876)
!3881 = !DILocation(line: 150, column: 1, scope: !3876)
!3882 = distinct !DISubprogram(name: "vnd_sensor_iodev_submit", scope: !265, file: !265, line: 74, type: !277, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3883)
!3883 = !{!3884, !3885, !3886, !3887, !3888, !3890, !3892}
!3884 = !DILocalVariable(name: "sqe", arg: 1, scope: !3882, file: !265, line: 74, type: !279)
!3885 = !DILocalVariable(name: "r", arg: 2, scope: !3882, file: !265, line: 74, type: !298)
!3886 = !DILocalVariable(name: "data", scope: !3882, file: !265, line: 76, type: !263)
!3887 = !DILocalVariable(name: "dev", scope: !3882, file: !265, line: 77, type: !408)
!3888 = !DILocalVariable(name: "iodev_sqe", scope: !3882, file: !265, line: 78, type: !3889)
!3889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 32)
!3890 = !DILocalVariable(name: "idx", scope: !3891, file: !265, line: 78, type: !24)
!3891 = distinct !DILexicalBlock(scope: !3882, file: !265, line: 78, column: 37)
!3892 = !DILocalVariable(name: "acq", scope: !3891, file: !265, line: 78, type: !422)
!3893 = !DILocation(line: 0, scope: !3882)
!3894 = !DILocation(line: 76, column: 65, scope: !3882)
!3895 = !DILocation(line: 77, column: 35, scope: !3882)
!3896 = !DILocation(line: 78, column: 37, scope: !3891)
!3897 = !DILocation(line: 0, scope: !3891)
!3898 = !DILocation(line: 78, column: 37, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3900, file: !265, line: 78, column: 37)
!3900 = distinct !DILexicalBlock(scope: !3891, file: !265, line: 78, column: 37)
!3901 = !DILocation(line: 81, column: 14, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3903, file: !265, line: 80, column: 25)
!3903 = distinct !DILexicalBlock(scope: !3882, file: !265, line: 80, column: 6)
!3904 = !DILocation(line: 81, column: 18, scope: !3902)
!3905 = !DILocation(line: 82, column: 14, scope: !3902)
!3906 = !DILocation(line: 82, column: 16, scope: !3902)
!3907 = !DILocation(line: 83, column: 3, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3909, file: !265, line: 83, column: 3)
!3909 = distinct !DILexicalBlock(scope: !3902, file: !265, line: 83, column: 3)
!3910 = !DILocation(line: 83, column: 3, scope: !3909)
!3911 = !DILocation(line: 83, column: 3, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3908, file: !265, line: 83, column: 3)
!3913 = !DILocation(line: 85, column: 3, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3915, file: !265, line: 85, column: 3)
!3915 = distinct !DILexicalBlock(scope: !3916, file: !265, line: 85, column: 3)
!3916 = distinct !DILexicalBlock(scope: !3917, file: !265, line: 85, column: 3)
!3917 = distinct !DILexicalBlock(scope: !3918, file: !265, line: 85, column: 3)
!3918 = distinct !DILexicalBlock(scope: !3903, file: !265, line: 84, column: 9)
!3919 = !DILocation(line: 86, column: 3, scope: !3918)
!3920 = !DILocation(line: 88, column: 1, scope: !3882)
!3921 = distinct !DISubprogram(name: "atomic_get", scope: !3730, file: !3730, line: 159, type: !3731, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3922)
!3922 = !{!3923}
!3923 = !DILocalVariable(name: "target", arg: 1, scope: !3921, file: !3730, line: 159, type: !3734)
!3924 = !DILocation(line: 0, scope: !3921)
!3925 = !DILocation(line: 161, column: 9, scope: !3921)
!3926 = !DILocation(line: 161, column: 2, scope: !3921)
!3927 = distinct !DISubprogram(name: "atomic_add", scope: !3730, file: !3730, line: 86, type: !3766, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3928)
!3928 = !{!3929, !3930}
!3929 = !DILocalVariable(name: "target", arg: 1, scope: !3927, file: !3730, line: 86, type: !3768)
!3930 = !DILocalVariable(name: "value", arg: 2, scope: !3927, file: !3730, line: 86, type: !3733)
!3931 = !DILocation(line: 0, scope: !3927)
!3932 = !DILocation(line: 88, column: 9, scope: !3927)
!3933 = !DILocation(line: 88, column: 2, scope: !3927)
!3934 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3721, file: !3721, line: 175, type: !3722, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3935)
!3935 = !{!3936}
!3936 = !DILocalVariable(name: "level", arg: 1, scope: !3934, file: !3721, line: 175, type: !108)
!3937 = !DILocation(line: 0, scope: !3934)
!3938 = !DILocation(line: 177, column: 2, scope: !3934)
!3939 = !DILocation(line: 189, column: 1, scope: !3934)
!3940 = distinct !DISubprogram(name: "rtio_sqe_err", scope: !125, file: !125, line: 592, type: !316, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3941)
!3941 = !{!3942, !3943, !3944}
!3942 = !DILocalVariable(name: "r", arg: 1, scope: !3940, file: !125, line: 592, type: !298)
!3943 = !DILocalVariable(name: "sqe", arg: 2, scope: !3940, file: !125, line: 592, type: !279)
!3944 = !DILocalVariable(name: "result", arg: 3, scope: !3940, file: !125, line: 592, type: !108)
!3945 = !DILocation(line: 0, scope: !3940)
!3946 = !DILocation(line: 594, column: 5, scope: !3940)
!3947 = !DILocation(line: 594, column: 15, scope: !3940)
!3948 = !DILocation(line: 594, column: 20, scope: !3940)
!3949 = !DILocation(line: 594, column: 2, scope: !3940)
!3950 = !DILocation(line: 595, column: 1, scope: !3940)
!3951 = distinct !DISubprogram(name: "vnd_sensor_init", scope: !265, file: !265, line: 111, type: !473, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3952)
!3952 = !{!3953, !3954, !3956, !3957}
!3953 = !DILocalVariable(name: "dev", arg: 1, scope: !3951, file: !265, line: 111, type: !408)
!3954 = !DILocalVariable(name: "config", scope: !3951, file: !265, line: 113, type: !3955)
!3955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 32)
!3956 = !DILocalVariable(name: "data", scope: !3951, file: !265, line: 114, type: !263)
!3957 = !DILocalVariable(name: "sample_period", scope: !3951, file: !265, line: 115, type: !113)
!3958 = !DILocation(line: 0, scope: !3951)
!3959 = !DILocation(line: 113, column: 48, scope: !3951)
!3960 = !DILocation(line: 114, column: 38, scope: !3951)
!3961 = !DILocation(line: 115, column: 35, scope: !3951)
!3962 = !DILocation(line: 117, column: 8, scope: !3951)
!3963 = !DILocation(line: 117, column: 12, scope: !3951)
!3964 = !DILocation(line: 119, column: 22, scope: !3951)
!3965 = !DILocation(line: 119, column: 2, scope: !3951)
!3966 = !DILocation(line: 121, column: 30, scope: !3951)
!3967 = !DILocation(line: 121, column: 2, scope: !3951)
!3968 = !DILocation(line: 124, column: 2, scope: !3951)
!3969 = distinct !DISubprogram(name: "vnd_sensor_timer_expiry", scope: !265, file: !265, line: 103, type: !396, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3970)
!3970 = !{!3971, !3972}
!3971 = !DILocalVariable(name: "timer", arg: 1, scope: !3969, file: !265, line: 103, type: !398)
!3972 = !DILocalVariable(name: "data", scope: !3969, file: !265, line: 105, type: !263)
!3973 = !DILocation(line: 0, scope: !3969)
!3974 = !DILocation(line: 106, column: 3, scope: !3969)
!3975 = !DILocation(line: 108, column: 30, scope: !3969)
!3976 = !DILocation(line: 108, column: 2, scope: !3969)
!3977 = !DILocation(line: 109, column: 1, scope: !3969)
!3978 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3798, file: !3798, line: 403, type: !3799, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3979)
!3979 = !{!3980}
!3980 = !DILocalVariable(name: "t", arg: 1, scope: !3978, file: !3798, line: 403, type: !114)
!3981 = !DILocation(line: 0, scope: !3978)
!3982 = !DILocalVariable(name: "t", arg: 1, scope: !3983, file: !3798, line: 102, type: !114)
!3983 = distinct !DISubprogram(name: "z_tmcvt", scope: !3798, file: !3798, line: 102, type: !3806, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3984)
!3984 = !{!3982, !3985, !3986, !3987, !3988, !3989, !3990, !3991, !3992, !3993, !3994}
!3985 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3983, file: !3798, line: 102, type: !113)
!3986 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3983, file: !3798, line: 103, type: !113)
!3987 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3983, file: !3798, line: 103, type: !422)
!3988 = !DILocalVariable(name: "result32", arg: 5, scope: !3983, file: !3798, line: 104, type: !422)
!3989 = !DILocalVariable(name: "round_up", arg: 6, scope: !3983, file: !3798, line: 104, type: !422)
!3990 = !DILocalVariable(name: "round_off", arg: 7, scope: !3983, file: !3798, line: 105, type: !422)
!3991 = !DILocalVariable(name: "mul_ratio", scope: !3983, file: !3798, line: 107, type: !422)
!3992 = !DILocalVariable(name: "div_ratio", scope: !3983, file: !3798, line: 109, type: !422)
!3993 = !DILocalVariable(name: "off", scope: !3983, file: !3798, line: 116, type: !114)
!3994 = !DILocalVariable(name: "rdivisor", scope: !3995, file: !3798, line: 119, type: !113)
!3995 = distinct !DILexicalBlock(scope: !3996, file: !3798, line: 118, column: 18)
!3996 = distinct !DILexicalBlock(scope: !3983, file: !3798, line: 118, column: 6)
!3997 = !DILocation(line: 0, scope: !3983, inlinedAt: !3998)
!3998 = distinct !DILocation(line: 406, column: 9, scope: !3978)
!3999 = !DILocation(line: 145, column: 13, scope: !4000, inlinedAt: !3998)
!4000 = distinct !DILexicalBlock(scope: !4001, file: !3798, line: 144, column: 10)
!4001 = distinct !DILexicalBlock(scope: !4002, file: !3798, line: 142, column: 7)
!4002 = distinct !DILexicalBlock(scope: !4003, file: !3798, line: 141, column: 24)
!4003 = distinct !DILexicalBlock(scope: !4004, file: !3798, line: 141, column: 13)
!4004 = distinct !DILexicalBlock(scope: !3983, file: !3798, line: 134, column: 6)
!4005 = !DILocation(line: 406, column: 2, scope: !3978)
!4006 = distinct !DISubprogram(name: "k_timer_start", scope: !3831, file: !3831, line: 426, type: !4007, scopeLine: 427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4009)
!4007 = !DISubroutineType(types: !4008)
!4008 = !{null, !398, !401, !401}
!4009 = !{!4010, !4011, !4012}
!4010 = !DILocalVariable(name: "timer", arg: 1, scope: !4006, file: !3831, line: 426, type: !398)
!4011 = !DILocalVariable(name: "duration", arg: 2, scope: !4006, file: !3831, line: 426, type: !401)
!4012 = !DILocalVariable(name: "period", arg: 3, scope: !4006, file: !3831, line: 426, type: !401)
!4013 = !DILocation(line: 0, scope: !4006)
!4014 = !DILocation(line: 437, column: 2, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !4006, file: !3831, line: 437, column: 2)
!4016 = !{i64 2154168972}
!4017 = !DILocation(line: 438, column: 2, scope: !4006)
!4018 = !DILocation(line: 439, column: 1, scope: !4006)
!4019 = distinct !DISubprogram(name: "vnd_sensor_handle_int", scope: !265, file: !265, line: 90, type: !4020, scopeLine: 91, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4022)
!4020 = !DISubroutineType(types: !4021)
!4021 = !{null, !408}
!4022 = !{!4023, !4024, !4025, !4026, !4028}
!4023 = !DILocalVariable(name: "dev", arg: 1, scope: !4019, file: !265, line: 90, type: !408)
!4024 = !DILocalVariable(name: "data", scope: !4019, file: !265, line: 92, type: !263)
!4025 = !DILocalVariable(name: "iodev_sqe", scope: !4019, file: !265, line: 93, type: !3889)
!4026 = !DILocalVariable(name: "idx", scope: !4027, file: !265, line: 93, type: !24)
!4027 = distinct !DILexicalBlock(scope: !4019, file: !265, line: 93, column: 37)
!4028 = !DILocalVariable(name: "has_consumable", scope: !4027, file: !265, line: 93, type: !422)
!4029 = !DILocation(line: 0, scope: !4019)
!4030 = !DILocation(line: 92, column: 38, scope: !4019)
!4031 = !DILocation(line: 93, column: 37, scope: !4027)
!4032 = !DILocation(line: 0, scope: !4027)
!4033 = !DILocation(line: 93, column: 37, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4035, file: !265, line: 93, column: 37)
!4035 = distinct !DILexicalBlock(scope: !4027, file: !265, line: 93, column: 37)
!4036 = !DILocation(line: 96, column: 44, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4038, file: !265, line: 95, column: 25)
!4038 = distinct !DILexicalBlock(scope: !4019, file: !265, line: 95, column: 6)
!4039 = !DILocation(line: 96, column: 60, scope: !4037)
!4040 = !DILocation(line: 96, column: 3, scope: !4037)
!4041 = !DILocation(line: 97, column: 3, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4043, file: !265, line: 97, column: 3)
!4043 = distinct !DILexicalBlock(scope: !4037, file: !265, line: 97, column: 3)
!4044 = !DILocation(line: 97, column: 3, scope: !4043)
!4045 = !DILocation(line: 97, column: 3, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4042, file: !265, line: 97, column: 3)
!4047 = !DILocation(line: 99, column: 3, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4049, file: !265, line: 99, column: 3)
!4049 = distinct !DILexicalBlock(scope: !4050, file: !265, line: 99, column: 3)
!4050 = distinct !DILexicalBlock(scope: !4051, file: !265, line: 99, column: 3)
!4051 = distinct !DILexicalBlock(scope: !4052, file: !265, line: 99, column: 3)
!4052 = distinct !DILexicalBlock(scope: !4038, file: !265, line: 98, column: 9)
!4053 = !DILocation(line: 101, column: 1, scope: !4019)
!4054 = distinct !DISubprogram(name: "vnd_sensor_iodev_execute", scope: !265, file: !265, line: 55, type: !4055, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4057)
!4055 = !DISubroutineType(types: !4056)
!4056 = !{null, !408, !279, !298}
!4057 = !{!4058, !4059, !4060, !4061}
!4058 = !DILocalVariable(name: "dev", arg: 1, scope: !4054, file: !265, line: 55, type: !408)
!4059 = !DILocalVariable(name: "sqe", arg: 2, scope: !4054, file: !265, line: 56, type: !279)
!4060 = !DILocalVariable(name: "r", arg: 3, scope: !4054, file: !265, line: 56, type: !298)
!4061 = !DILocalVariable(name: "result", scope: !4054, file: !265, line: 58, type: !108)
!4062 = !DILocation(line: 0, scope: !4054)
!4063 = !DILocation(line: 60, column: 11, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4054, file: !265, line: 60, column: 6)
!4065 = !DILocation(line: 60, column: 14, scope: !4064)
!4066 = !DILocation(line: 60, column: 6, scope: !4054)
!4067 = !DILocation(line: 63, column: 3, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4069, file: !265, line: 63, column: 3)
!4069 = distinct !DILexicalBlock(scope: !4070, file: !265, line: 63, column: 3)
!4070 = distinct !DILexicalBlock(scope: !4071, file: !265, line: 63, column: 3)
!4071 = distinct !DILexicalBlock(scope: !4072, file: !265, line: 63, column: 3)
!4072 = distinct !DILexicalBlock(scope: !4064, file: !265, line: 62, column: 9)
!4073 = !DILocation(line: 67, column: 6, scope: !4054)
!4074 = !DILocation(line: 61, column: 44, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4064, file: !265, line: 60, column: 29)
!4076 = !DILocation(line: 61, column: 54, scope: !4075)
!4077 = !DILocation(line: 61, column: 12, scope: !4075)
!4078 = !DILocation(line: 67, column: 13, scope: !4079)
!4079 = distinct !DILexicalBlock(scope: !4054, file: !265, line: 67, column: 6)
!4080 = !DILocation(line: 68, column: 3, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4079, file: !265, line: 67, column: 18)
!4082 = !DILocation(line: 69, column: 2, scope: !4081)
!4083 = !DILocation(line: 70, column: 3, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4079, file: !265, line: 69, column: 9)
!4085 = !DILocation(line: 72, column: 1, scope: !4054)
!4086 = distinct !DISubprogram(name: "vnd_sensor_iodev_read", scope: !265, file: !265, line: 29, type: !4087, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4089)
!4087 = !DISubroutineType(types: !4088)
!4088 = !{!108, !408, !209, !113}
!4089 = !{!4090, !4091, !4092, !4093, !4094, !4095, !4096, !4097}
!4090 = !DILocalVariable(name: "dev", arg: 1, scope: !4086, file: !265, line: 29, type: !408)
!4091 = !DILocalVariable(name: "buf", arg: 2, scope: !4086, file: !265, line: 29, type: !209)
!4092 = !DILocalVariable(name: "buf_len", arg: 3, scope: !4086, file: !265, line: 30, type: !113)
!4093 = !DILocalVariable(name: "config", scope: !4086, file: !265, line: 32, type: !3955)
!4094 = !DILocalVariable(name: "data", scope: !4086, file: !265, line: 33, type: !263)
!4095 = !DILocalVariable(name: "sample_number", scope: !4086, file: !265, line: 34, type: !113)
!4096 = !DILocalVariable(name: "key", scope: !4086, file: !265, line: 35, type: !113)
!4097 = !DILocalVariable(name: "i", scope: !4098, file: !265, line: 48, type: !108)
!4098 = distinct !DILexicalBlock(scope: !4086, file: !265, line: 48, column: 2)
!4099 = !DILocation(line: 0, scope: !4086)
!4100 = !DILocation(line: 32, column: 48, scope: !4086)
!4101 = !DILocation(line: 33, column: 38, scope: !4086)
!4102 = !DILocation(line: 37, column: 2, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4104, file: !265, line: 37, column: 2)
!4104 = distinct !DILexicalBlock(scope: !4105, file: !265, line: 37, column: 2)
!4105 = distinct !DILexicalBlock(scope: !4106, file: !265, line: 37, column: 2)
!4106 = distinct !DILexicalBlock(scope: !4086, file: !265, line: 37, column: 2)
!4107 = !DILocation(line: 55, column: 2, scope: !4108, inlinedAt: !4115)
!4108 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4109, file: !4109, line: 42, type: !4110, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4112)
!4109 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4110 = !DISubroutineType(types: !4111)
!4111 = !{!32}
!4112 = !{!4113, !4114}
!4113 = !DILocalVariable(name: "key", scope: !4108, file: !4109, line: 44, type: !32)
!4114 = !DILocalVariable(name: "tmp", scope: !4108, file: !4109, line: 53, type: !32)
!4115 = distinct !DILocation(line: 39, column: 8, scope: !4086)
!4116 = !{i64 2056292}
!4117 = !DILocation(line: 0, scope: !4108, inlinedAt: !4115)
!4118 = !DILocation(line: 40, column: 24, scope: !4086)
!4119 = !DILocation(line: 40, column: 37, scope: !4086)
!4120 = !DILocalVariable(name: "key", arg: 1, scope: !4121, file: !4109, line: 84, type: !32)
!4121 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4109, file: !4109, line: 84, type: !4122, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4124)
!4122 = !DISubroutineType(types: !4123)
!4123 = !{null, !32}
!4124 = !{!4120}
!4125 = !DILocation(line: 0, scope: !4121, inlinedAt: !4126)
!4126 = distinct !DILocation(line: 41, column: 2, scope: !4086)
!4127 = !DILocation(line: 95, column: 2, scope: !4121, inlinedAt: !4126)
!4128 = !{i64 2057109}
!4129 = !DILocation(line: 43, column: 24, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4086, file: !265, line: 43, column: 6)
!4131 = !DILocation(line: 43, column: 14, scope: !4130)
!4132 = !DILocation(line: 43, column: 6, scope: !4086)
!4133 = !DILocation(line: 0, scope: !4098)
!4134 = !DILocation(line: 48, column: 22, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4098, file: !265, line: 48, column: 2)
!4136 = !DILocation(line: 48, column: 20, scope: !4135)
!4137 = !DILocation(line: 48, column: 2, scope: !4098)
!4138 = !DILocation(line: 44, column: 3, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4140, file: !265, line: 44, column: 3)
!4140 = distinct !DILexicalBlock(scope: !4141, file: !265, line: 44, column: 3)
!4141 = distinct !DILexicalBlock(scope: !4142, file: !265, line: 44, column: 3)
!4142 = distinct !DILexicalBlock(scope: !4143, file: !265, line: 44, column: 3)
!4143 = distinct !DILexicalBlock(scope: !4130, file: !265, line: 43, column: 37)
!4144 = !DILocation(line: 45, column: 3, scope: !4143)
!4145 = !DILocation(line: 49, column: 26, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4135, file: !265, line: 48, column: 62)
!4147 = !DILocation(line: 49, column: 48, scope: !4146)
!4148 = !DILocation(line: 49, column: 12, scope: !4146)
!4149 = !DILocation(line: 49, column: 3, scope: !4146)
!4150 = !DILocation(line: 49, column: 10, scope: !4146)
!4151 = !DILocation(line: 48, column: 58, scope: !4135)
!4152 = distinct !{!4152, !4137, !4153}
!4153 = !DILocation(line: 50, column: 2, scope: !4098)
!4154 = !DILocation(line: 53, column: 1, scope: !4086)
!4155 = distinct !DISubprogram(name: "rtio_sqe_ok", scope: !125, file: !125, line: 578, type: !316, scopeLine: 579, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4156)
!4156 = !{!4157, !4158, !4159}
!4157 = !DILocalVariable(name: "r", arg: 1, scope: !4155, file: !125, line: 578, type: !298)
!4158 = !DILocalVariable(name: "sqe", arg: 2, scope: !4155, file: !125, line: 578, type: !279)
!4159 = !DILocalVariable(name: "result", arg: 3, scope: !4155, file: !125, line: 578, type: !108)
!4160 = !DILocation(line: 0, scope: !4155)
!4161 = !DILocation(line: 580, column: 5, scope: !4155)
!4162 = !DILocation(line: 580, column: 15, scope: !4155)
!4163 = !DILocation(line: 580, column: 20, scope: !4155)
!4164 = !DILocation(line: 580, column: 2, scope: !4155)
!4165 = !DILocation(line: 581, column: 1, scope: !4155)
!4166 = distinct !DISubprogram(name: "cbvprintf_package", scope: !547, file: !547, line: 233, type: !4167, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !534, retainedNodes: !4176)
!4167 = !DISubroutineType(types: !4168)
!4168 = !{!108, !104, !439, !113, !105, !4169}
!4169 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4170, line: 99, baseType: !4171)
!4170 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4171 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4170, line: 40, baseType: !4172)
!4172 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !547, baseType: !4173)
!4173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4174)
!4174 = !{!4175}
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4173, file: !547, line: 18, baseType: !104, size: 32)
!4176 = !{!4177, !4178, !4179, !4180, !4181, !4182, !4183, !4184, !4185, !4186, !4188, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4212, !4221, !4224, !4225, !4228, !4231, !4234, !4237, !4243}
!4177 = !DILocalVariable(name: "packaged", arg: 1, scope: !4166, file: !547, line: 233, type: !104)
!4178 = !DILocalVariable(name: "len", arg: 2, scope: !4166, file: !547, line: 233, type: !439)
!4179 = !DILocalVariable(name: "flags", arg: 3, scope: !4166, file: !547, line: 233, type: !113)
!4180 = !DILocalVariable(name: "fmt", arg: 4, scope: !4166, file: !547, line: 234, type: !105)
!4181 = !DILocalVariable(name: "ap", arg: 5, scope: !4166, file: !547, line: 234, type: !4169)
!4182 = !DILocalVariable(name: "buf0", scope: !4166, file: !547, line: 247, type: !209)
!4183 = !DILocalVariable(name: "buf", scope: !4166, file: !547, line: 248, type: !209)
!4184 = !DILocalVariable(name: "size", scope: !4166, file: !547, line: 249, type: !32)
!4185 = !DILocalVariable(name: "align", scope: !4166, file: !547, line: 250, type: !32)
!4186 = !DILocalVariable(name: "str_ptr_pos", scope: !4166, file: !547, line: 251, type: !4187)
!4187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 128, elements: !2176)
!4188 = !DILocalVariable(name: "str_ptr_arg", scope: !4166, file: !547, line: 252, type: !4187)
!4189 = !DILocalVariable(name: "s_idx", scope: !4166, file: !547, line: 253, type: !32)
!4190 = !DILocalVariable(name: "s_rw_cnt", scope: !4166, file: !547, line: 254, type: !32)
!4191 = !DILocalVariable(name: "s_ro_cnt", scope: !4166, file: !547, line: 255, type: !32)
!4192 = !DILocalVariable(name: "arg_idx", scope: !4166, file: !547, line: 256, type: !108)
!4193 = !DILocalVariable(name: "i", scope: !4166, file: !547, line: 257, type: !32)
!4194 = !DILocalVariable(name: "s", scope: !4166, file: !547, line: 258, type: !105)
!4195 = !DILocalVariable(name: "parsing", scope: !4166, file: !547, line: 259, type: !422)
!4196 = !DILocalVariable(name: "rws_pos_en", scope: !4166, file: !547, line: 263, type: !422)
!4197 = !DILocalVariable(name: "fros_cnt", scope: !4166, file: !547, line: 268, type: !108)
!4198 = !DILocalVariable(name: "is_str_arg", scope: !4166, file: !547, line: 269, type: !422)
!4199 = !DILocalVariable(name: "pkg_hdr", scope: !4166, file: !547, line: 270, type: !4200)
!4200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4201, size: 32)
!4201 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4202, line: 78, size: 32, elements: !4203)
!4202 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4203 = !{!4204, !4211}
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4201, file: !4202, line: 80, baseType: !4205, size: 32)
!4205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4202, line: 45, size: 32, elements: !4206)
!4206 = !{!4207, !4208, !4209, !4210}
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4205, file: !4202, line: 47, baseType: !164, size: 8)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4205, file: !4202, line: 50, baseType: !164, size: 8, offset: 8)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4205, file: !4202, line: 53, baseType: !164, size: 8, offset: 16)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4205, file: !4202, line: 56, baseType: !164, size: 8, offset: 24)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4201, file: !4202, line: 82, baseType: !104, size: 32)
!4212 = !DILocalVariable(name: "v", scope: !4213, file: !547, line: 567, type: !4217)
!4213 = distinct !DILexicalBlock(scope: !4214, file: !547, line: 562, column: 14)
!4214 = distinct !DILexicalBlock(scope: !4215, file: !547, line: 481, column: 18)
!4215 = distinct !DILexicalBlock(scope: !4216, file: !547, line: 466, column: 3)
!4216 = distinct !DILexicalBlock(scope: !4166, file: !547, line: 343, column: 15)
!4217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4166, file: !547, line: 567, size: 64, elements: !4218)
!4218 = !{!4219, !4220}
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4217, file: !547, line: 567, baseType: !540, size: 64)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4217, file: !547, line: 567, baseType: !538, size: 64)
!4221 = !DILocalVariable(name: "is_ro", scope: !4222, file: !547, line: 620, type: !422)
!4222 = distinct !DILexicalBlock(scope: !4223, file: !547, line: 613, column: 19)
!4223 = distinct !DILexicalBlock(scope: !4216, file: !547, line: 613, column: 7)
!4224 = !DILocalVariable(name: "do_ro", scope: !4222, file: !547, line: 621, type: !422)
!4225 = !DILocalVariable(name: "s_ptr_idx", scope: !4226, file: !547, line: 626, type: !113)
!4226 = distinct !DILexicalBlock(scope: !4227, file: !547, line: 625, column: 11)
!4227 = distinct !DILexicalBlock(scope: !4222, file: !547, line: 623, column: 8)
!4228 = !DILocalVariable(name: "v", scope: !4229, file: !547, line: 684, type: !108)
!4229 = distinct !DILexicalBlock(scope: !4230, file: !547, line: 683, column: 35)
!4230 = distinct !DILexicalBlock(scope: !4223, file: !547, line: 683, column: 14)
!4231 = !DILocalVariable(name: "v", scope: !4232, file: !547, line: 691, type: !144)
!4232 = distinct !DILexicalBlock(scope: !4233, file: !547, line: 690, column: 36)
!4233 = distinct !DILexicalBlock(scope: !4230, file: !547, line: 690, column: 14)
!4234 = !DILocalVariable(name: "v", scope: !4235, file: !547, line: 698, type: !112)
!4235 = distinct !DILexicalBlock(scope: !4236, file: !547, line: 697, column: 41)
!4236 = distinct !DILexicalBlock(scope: !4233, file: !547, line: 697, column: 14)
!4237 = !DILocalVariable(name: "pos", scope: !4238, file: !547, line: 762, type: !164)
!4238 = distinct !DILexicalBlock(scope: !4239, file: !547, line: 757, column: 31)
!4239 = distinct !DILexicalBlock(scope: !4240, file: !547, line: 757, column: 3)
!4240 = distinct !DILexicalBlock(scope: !4241, file: !547, line: 757, column: 3)
!4241 = distinct !DILexicalBlock(scope: !4242, file: !547, line: 756, column: 16)
!4242 = distinct !DILexicalBlock(scope: !4166, file: !547, line: 756, column: 6)
!4243 = !DILabel(scope: !4222, name: "process_string", file: !547, line: 615)
!4244 = !DILocation(line: 0, scope: !4166)
!4245 = !DILocation(line: 251, column: 2, scope: !4166)
!4246 = !DILocation(line: 251, column: 10, scope: !4166)
!4247 = !DILocation(line: 252, column: 2, scope: !4166)
!4248 = !DILocation(line: 252, column: 10, scope: !4166)
!4249 = !DILocation(line: 263, column: 29, scope: !4166)
!4250 = !DILocation(line: 263, column: 21, scope: !4166)
!4251 = !DILocation(line: 268, column: 21, scope: !4166)
!4252 = !DILocation(line: 268, column: 19, scope: !4166)
!4253 = !DILocation(line: 273, column: 6, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4166, file: !547, line: 273, column: 6)
!4255 = !DILocation(line: 273, column: 26, scope: !4254)
!4256 = !DILocation(line: 273, column: 6, scope: !4166)
!4257 = !DILocation(line: 297, column: 6, scope: !4166)
!4258 = !DILocation(line: 305, column: 11, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4166, file: !547, line: 305, column: 6)
!4260 = !DILocation(line: 305, column: 6, scope: !4166)
!4261 = !DILocation(line: 327, column: 19, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4166, file: !547, line: 327, column: 6)
!4263 = !DILocation(line: 327, column: 22, scope: !4262)
!4264 = !DILocation(line: 327, column: 33, scope: !4262)
!4265 = !DILocation(line: 327, column: 50, scope: !4262)
!4266 = !DILocation(line: 327, column: 6, scope: !4166)
!4267 = !DILocation(line: 338, column: 9, scope: !4166)
!4268 = !DILocation(line: 341, column: 2, scope: !4166)
!4269 = !DILocation(line: 472, column: 8, scope: !4215)
!4270 = !DILocation(line: 473, column: 14, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4272, file: !547, line: 473, column: 9)
!4272 = distinct !DILexicalBlock(scope: !4273, file: !547, line: 472, column: 18)
!4273 = distinct !DILexicalBlock(scope: !4215, file: !547, line: 472, column: 8)
!4274 = !DILocation(line: 473, column: 9, scope: !4272)
!4275 = !DILocation(line: 479, column: 5, scope: !4272)
!4276 = !DILocation(line: 468, column: 9, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4215, file: !547, line: 468, column: 8)
!4278 = !DILocation(line: 468, column: 8, scope: !4277)
!4279 = !DILocation(line: 468, column: 15, scope: !4277)
!4280 = !DILocation(line: 468, column: 8, scope: !4215)
!4281 = distinct !{!4281, !4282, !4283}
!4282 = !DILocation(line: 343, column: 2, scope: !4166)
!4283 = !DILocation(line: 712, column: 2, scope: !4166)
!4284 = !DILocation(line: 481, column: 4, scope: !4215)
!4285 = !DILocation(line: 484, column: 12, scope: !4214)
!4286 = !DILocation(line: 485, column: 5, scope: !4214)
!4287 = !DILocation(line: 505, column: 5, scope: !4214)
!4288 = !DILocation(line: 518, column: 5, scope: !4214)
!4289 = !DILocation(line: 523, column: 5, scope: !4214)
!4290 = !DILocation(line: 532, column: 9, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4214, file: !547, line: 532, column: 9)
!4292 = !DILocation(line: 532, column: 17, scope: !4291)
!4293 = !DILocation(line: 532, column: 9, scope: !4214)
!4294 = !DILocation(line: 533, column: 10, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4296, file: !547, line: 533, column: 10)
!4296 = distinct !DILexicalBlock(scope: !4291, file: !547, line: 532, column: 25)
!4297 = !DILocation(line: 533, column: 18, scope: !4295)
!4298 = !DILocation(line: 0, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4213, file: !547, line: 569, column: 9)
!4300 = !DILocation(line: 0, scope: !4213)
!4301 = !DILocation(line: 579, column: 20, scope: !4213)
!4302 = !DILocation(line: 579, column: 11, scope: !4213)
!4303 = !DILocation(line: 580, column: 9, scope: !4213)
!4304 = !DILocation(line: 582, column: 21, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4306, file: !547, line: 582, column: 10)
!4306 = distinct !DILexicalBlock(scope: !4307, file: !547, line: 580, column: 23)
!4307 = distinct !DILexicalBlock(scope: !4213, file: !547, line: 580, column: 9)
!4308 = !DILocation(line: 582, column: 28, scope: !4305)
!4309 = !DILocation(line: 582, column: 10, scope: !4306)
!4310 = !DILocation(line: 0, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4312, file: !547, line: 587, column: 17)
!4312 = distinct !DILexicalBlock(scope: !4306, file: !547, line: 585, column: 10)
!4313 = !DILocation(line: 593, column: 9, scope: !4213)
!4314 = !DILocation(line: 600, column: 5, scope: !4214)
!4315 = !DILocation(line: 605, column: 18, scope: !4216)
!4316 = !DILocation(line: 605, column: 9, scope: !4216)
!4317 = !DILocation(line: 608, column: 20, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4216, file: !547, line: 608, column: 7)
!4319 = !DILocation(line: 608, column: 23, scope: !4318)
!4320 = !DILocation(line: 608, column: 34, scope: !4318)
!4321 = !DILocation(line: 608, column: 41, scope: !4318)
!4322 = !DILocation(line: 608, column: 7, scope: !4216)
!4323 = !DILocation(line: 613, column: 7, scope: !4216)
!4324 = !DILocation(line: 614, column: 8, scope: !4222)
!4325 = !DILocation(line: 614, column: 4, scope: !4222)
!4326 = !DILocation(line: 255, column: 15, scope: !4166)
!4327 = !DILocation(line: 256, column: 6, scope: !4166)
!4328 = !DILocation(line: 254, column: 15, scope: !4166)
!4329 = !DILocation(line: 253, column: 15, scope: !4166)
!4330 = !DILocation(line: 320, column: 7, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4259, file: !547, line: 305, column: 20)
!4332 = !DILocation(line: 615, column: 1, scope: !4222)
!4333 = !DILocation(line: 616, column: 8, scope: !4222)
!4334 = !DILocation(line: 617, column: 5, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4336, file: !547, line: 616, column: 22)
!4336 = distinct !DILexicalBlock(scope: !4222, file: !547, line: 616, column: 8)
!4337 = !DILocation(line: 617, column: 25, scope: !4335)
!4338 = !DILocation(line: 618, column: 4, scope: !4335)
!4339 = !DILocation(line: 620, column: 26, scope: !4222)
!4340 = !DILocation(line: 620, column: 29, scope: !4222)
!4341 = !DILocation(line: 620, column: 17, scope: !4222)
!4342 = !DILocation(line: 620, column: 43, scope: !4222)
!4343 = !DILocation(line: 0, scope: !4222)
!4344 = !DILocation(line: 623, column: 14, scope: !4227)
!4345 = !DILocation(line: 626, column: 26, scope: !4226)
!4346 = !DILocation(line: 626, column: 37, scope: !4226)
!4347 = !DILocation(line: 0, scope: !4226)
!4348 = !DILocation(line: 634, column: 15, scope: !4349)
!4349 = distinct !DILexicalBlock(scope: !4226, file: !547, line: 634, column: 9)
!4350 = !DILocation(line: 644, column: 9, scope: !4226)
!4351 = !DILocation(line: 649, column: 27, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4353, file: !547, line: 644, column: 23)
!4353 = distinct !DILexicalBlock(scope: !4226, file: !547, line: 644, column: 9)
!4354 = !DILocation(line: 649, column: 6, scope: !4352)
!4355 = !DILocation(line: 649, column: 25, scope: !4352)
!4356 = !DILocation(line: 650, column: 27, scope: !4352)
!4357 = !DILocation(line: 650, column: 6, scope: !4352)
!4358 = !DILocation(line: 650, column: 25, scope: !4352)
!4359 = !DILocation(line: 651, column: 10, scope: !4352)
!4360 = !DILocation(line: 653, column: 26, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4362, file: !547, line: 651, column: 17)
!4362 = distinct !DILexicalBlock(scope: !4352, file: !547, line: 651, column: 10)
!4363 = !DILocation(line: 654, column: 15, scope: !4361)
!4364 = !DILocation(line: 655, column: 6, scope: !4361)
!4365 = !DILocation(line: 656, column: 15, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4362, file: !547, line: 655, column: 13)
!4367 = !DILocation(line: 658, column: 16, scope: !4353)
!4368 = !DILocation(line: 663, column: 10, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4370, file: !547, line: 658, column: 23)
!4370 = distinct !DILexicalBlock(scope: !4353, file: !547, line: 658, column: 16)
!4371 = !DILocation(line: 664, column: 5, scope: !4369)
!4372 = !DILocation(line: 664, column: 16, scope: !4370)
!4373 = !DILocation(line: 669, column: 10, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4375, file: !547, line: 664, column: 28)
!4375 = distinct !DILexicalBlock(scope: !4370, file: !547, line: 664, column: 16)
!4376 = !DILocation(line: 670, column: 5, scope: !4374)
!4377 = !DILocation(line: 675, column: 13, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4375, file: !547, line: 670, column: 12)
!4379 = !DILocation(line: 675, column: 27, scope: !4378)
!4380 = !DILocation(line: 675, column: 10, scope: !4378)
!4381 = !DILocation(line: 678, column: 10, scope: !4226)
!4382 = !DILocation(line: 680, column: 8, scope: !4222)
!4383 = !DILocation(line: 683, column: 14, scope: !4223)
!4384 = !DILocation(line: 684, column: 12, scope: !4229)
!4385 = !DILocation(line: 0, scope: !4229)
!4386 = !DILocation(line: 686, column: 8, scope: !4229)
!4387 = !DILocation(line: 687, column: 5, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4389, file: !547, line: 686, column: 22)
!4389 = distinct !DILexicalBlock(scope: !4229, file: !547, line: 686, column: 8)
!4390 = !DILocation(line: 687, column: 17, scope: !4388)
!4391 = !DILocation(line: 688, column: 4, scope: !4388)
!4392 = !DILocation(line: 698, column: 18, scope: !4235)
!4393 = !DILocation(line: 0, scope: !4235)
!4394 = !DILocation(line: 700, column: 8, scope: !4235)
!4395 = !DILocation(line: 704, column: 6, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4397, file: !547, line: 703, column: 12)
!4397 = distinct !DILexicalBlock(scope: !4398, file: !547, line: 701, column: 9)
!4398 = distinct !DILexicalBlock(scope: !4399, file: !547, line: 700, column: 22)
!4399 = distinct !DILexicalBlock(scope: !4235, file: !547, line: 700, column: 8)
!4400 = !DILocation(line: 704, column: 24, scope: !4396)
!4401 = !DILocation(line: 706, column: 4, scope: !4398)
!4402 = !DILocation(line: 0, scope: !4230)
!4403 = !DILocation(line: 0, scope: !4216)
!4404 = !DILocation(line: 720, column: 6, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4166, file: !547, line: 720, column: 6)
!4406 = !DILocation(line: 720, column: 17, scope: !4405)
!4407 = !DILocation(line: 720, column: 31, scope: !4405)
!4408 = !DILocation(line: 720, column: 6, scope: !4166)
!4409 = !DILocation(line: 729, column: 6, scope: !4166)
!4410 = !DILocation(line: 730, column: 21, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4412, file: !547, line: 729, column: 20)
!4412 = distinct !DILexicalBlock(scope: !4166, file: !547, line: 729, column: 6)
!4413 = !DILocation(line: 730, column: 27, scope: !4411)
!4414 = !DILocation(line: 730, column: 3, scope: !4411)
!4415 = !DILocation(line: 737, column: 22, scope: !4166)
!4416 = !DILocation(line: 737, column: 20, scope: !4166)
!4417 = !DILocation(line: 0, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4166, file: !547, line: 739, column: 6)
!4419 = !DILocation(line: 745, column: 17, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4418, file: !547, line: 743, column: 9)
!4421 = !DILocation(line: 745, column: 25, scope: !4420)
!4422 = !DILocation(line: 746, column: 17, scope: !4420)
!4423 = !DILocation(line: 746, column: 28, scope: !4420)
!4424 = !DILocation(line: 749, column: 29, scope: !4166)
!4425 = !DILocation(line: 749, column: 16, scope: !4166)
!4426 = !DILocation(line: 749, column: 27, scope: !4166)
!4427 = !DILocation(line: 756, column: 6, scope: !4242)
!4428 = !DILocation(line: 756, column: 6, scope: !4166)
!4429 = !DILocation(line: 757, column: 3, scope: !4240)
!4430 = !DILocation(line: 758, column: 10, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4238, file: !547, line: 758, column: 8)
!4432 = !DILocation(line: 758, column: 25, scope: !4431)
!4433 = !DILocation(line: 758, column: 8, scope: !4238)
!4434 = !DILocation(line: 0, scope: !4238)
!4435 = !DILocation(line: 765, column: 8, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4238, file: !547, line: 765, column: 8)
!4437 = !DILocation(line: 765, column: 19, scope: !4436)
!4438 = !DILocation(line: 765, column: 23, scope: !4436)
!4439 = !DILocation(line: 765, column: 8, scope: !4238)
!4440 = !DILocation(line: 762, column: 33, scope: !4238)
!4441 = !DILocation(line: 769, column: 8, scope: !4238)
!4442 = !DILocation(line: 769, column: 11, scope: !4238)
!4443 = !DILocation(line: 757, column: 27, scope: !4239)
!4444 = !DILocation(line: 757, column: 17, scope: !4239)
!4445 = distinct !{!4445, !4429, !4446}
!4446 = !DILocation(line: 770, column: 3, scope: !4240)
!4447 = !DILocation(line: 774, column: 16, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4449, file: !547, line: 774, column: 2)
!4449 = distinct !DILexicalBlock(scope: !4166, file: !547, line: 774, column: 2)
!4450 = !DILocation(line: 774, column: 2, scope: !4449)
!4451 = !DILocation(line: 776, column: 16, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4453, file: !547, line: 776, column: 7)
!4453 = distinct !DILexicalBlock(scope: !4448, file: !547, line: 774, column: 30)
!4454 = !DILocation(line: 776, column: 19, scope: !4452)
!4455 = !DILocation(line: 776, column: 34, scope: !4452)
!4456 = !DILocation(line: 776, column: 7, scope: !4453)
!4457 = !DILocation(line: 780, column: 7, scope: !4453)
!4458 = !DILocation(line: 782, column: 13, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4460, file: !547, line: 780, column: 19)
!4460 = distinct !DILexicalBlock(scope: !4453, file: !547, line: 780, column: 7)
!4461 = !DILocation(line: 782, column: 8, scope: !4459)
!4462 = !DILocation(line: 782, column: 11, scope: !4459)
!4463 = !DILocation(line: 783, column: 3, scope: !4459)
!4464 = !DILocation(line: 785, column: 26, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4460, file: !547, line: 783, column: 10)
!4466 = !DILocation(line: 785, column: 41, scope: !4465)
!4467 = !DILocation(line: 785, column: 24, scope: !4465)
!4468 = !DILocation(line: 785, column: 8, scope: !4465)
!4469 = !DILocation(line: 787, column: 52, scope: !4465)
!4470 = !DILocation(line: 789, column: 11, scope: !4465)
!4471 = !DILocation(line: 789, column: 21, scope: !4465)
!4472 = !DILocation(line: 0, scope: !4460)
!4473 = !DILocation(line: 793, column: 7, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4453, file: !547, line: 793, column: 7)
!4475 = !DILocation(line: 793, column: 18, scope: !4474)
!4476 = !DILocation(line: 793, column: 22, scope: !4474)
!4477 = !DILocation(line: 793, column: 29, scope: !4474)
!4478 = !DILocation(line: 793, column: 7, scope: !4453)
!4479 = !DILocation(line: 797, column: 12, scope: !4453)
!4480 = !DILocation(line: 797, column: 7, scope: !4453)
!4481 = !DILocation(line: 797, column: 10, scope: !4453)
!4482 = !DILocation(line: 799, column: 3, scope: !4453)
!4483 = !DILocation(line: 800, column: 7, scope: !4453)
!4484 = !DILocation(line: 801, column: 2, scope: !4453)
!4485 = !DILocation(line: 338, column: 4, scope: !4166)
!4486 = !DILocation(line: 774, column: 26, scope: !4448)
!4487 = distinct !{!4487, !4450, !4488}
!4488 = !DILocation(line: 801, column: 2, scope: !4449)
!4489 = !DILocation(line: 808, column: 9, scope: !4166)
!4490 = !DILocation(line: 808, column: 2, scope: !4166)
!4491 = !DILocation(line: 813, column: 1, scope: !4166)
!4492 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !547, file: !547, line: 33, type: !4493, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !534, retainedNodes: !4495)
!4493 = !DISubroutineType(types: !4494)
!4494 = !{!422, !105}
!4495 = !{!4496}
!4496 = !DILocalVariable(name: "addr", arg: 1, scope: !4492, file: !547, line: 33, type: !105)
!4497 = !DILocation(line: 0, scope: !4492)
!4498 = !DILocation(line: 41, column: 9, scope: !4492)
!4499 = !DILocation(line: 41, column: 2, scope: !4492)
!4500 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4501, file: !4501, line: 24, type: !4502, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !534, retainedNodes: !4504)
!4501 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4502 = !DISubroutineType(types: !4503)
!4503 = !{!422, !13}
!4504 = !{!4505}
!4505 = !DILocalVariable(name: "addr", arg: 1, scope: !4500, file: !4501, line: 24, type: !13)
!4506 = !DILocation(line: 0, scope: !4500)
!4507 = !DILocation(line: 49, column: 30, scope: !4500)
!4508 = !DILocation(line: 49, column: 57, scope: !4500)
!4509 = !DILocation(line: 49, column: 2, scope: !4500)
!4510 = distinct !DISubprogram(name: "cbprintf_package", scope: !547, file: !547, line: 815, type: !4511, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !534, retainedNodes: !4513)
!4511 = !DISubroutineType(types: !4512)
!4512 = !{!108, !104, !439, !113, !105, null}
!4513 = !{!4514, !4515, !4516, !4517, !4518, !4519}
!4514 = !DILocalVariable(name: "packaged", arg: 1, scope: !4510, file: !547, line: 815, type: !104)
!4515 = !DILocalVariable(name: "len", arg: 2, scope: !4510, file: !547, line: 815, type: !439)
!4516 = !DILocalVariable(name: "flags", arg: 3, scope: !4510, file: !547, line: 815, type: !113)
!4517 = !DILocalVariable(name: "format", arg: 4, scope: !4510, file: !547, line: 816, type: !105)
!4518 = !DILocalVariable(name: "ap", scope: !4510, file: !547, line: 818, type: !4169)
!4519 = !DILocalVariable(name: "ret", scope: !4510, file: !547, line: 819, type: !108)
!4520 = !DILocation(line: 0, scope: !4510)
!4521 = !DILocation(line: 818, column: 2, scope: !4510)
!4522 = !DILocation(line: 818, column: 10, scope: !4510)
!4523 = !DILocation(line: 821, column: 2, scope: !4510)
!4524 = !DILocation(line: 822, column: 8, scope: !4510)
!4525 = !DILocation(line: 823, column: 2, scope: !4510)
!4526 = !DILocation(line: 825, column: 1, scope: !4510)
!4527 = !DILocation(line: 824, column: 2, scope: !4510)
!4528 = distinct !DISubprogram(name: "cbpprintf_external", scope: !547, file: !547, line: 827, type: !4529, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !534, retainedNodes: !4539)
!4529 = !DISubroutineType(types: !4530)
!4530 = !{!108, !4531, !4535, !104, !104}
!4531 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4202, line: 297, baseType: !4532)
!4532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4533, size: 32)
!4533 = !DISubroutineType(types: !4534)
!4534 = !{!108, null}
!4535 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4202, line: 328, baseType: !4536)
!4536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4537, size: 32)
!4537 = !DISubroutineType(types: !4538)
!4538 = !{!108, !4531, !104, !105, !4169}
!4539 = !{!4540, !4541, !4542, !4543, !4544, !4545, !4551, !4552, !4553, !4554, !4555, !4556, !4557, !4558}
!4540 = !DILocalVariable(name: "out", arg: 1, scope: !4528, file: !547, line: 827, type: !4531)
!4541 = !DILocalVariable(name: "formatter", arg: 2, scope: !4528, file: !547, line: 828, type: !4535)
!4542 = !DILocalVariable(name: "ctx", arg: 3, scope: !4528, file: !547, line: 829, type: !104)
!4543 = !DILocalVariable(name: "packaged", arg: 4, scope: !4528, file: !547, line: 829, type: !104)
!4544 = !DILocalVariable(name: "buf", scope: !4528, file: !547, line: 831, type: !209)
!4545 = !DILocalVariable(name: "hdr", scope: !4528, file: !547, line: 832, type: !4546)
!4546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4547, size: 32)
!4547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4202, line: 96, size: 64, elements: !4548)
!4548 = !{!4549, !4550}
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4547, file: !4202, line: 98, baseType: !4201, size: 32)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4547, file: !4202, line: 101, baseType: !443, size: 32, offset: 32)
!4551 = !DILocalVariable(name: "s", scope: !4528, file: !547, line: 833, type: !443)
!4552 = !DILocalVariable(name: "ps", scope: !4528, file: !547, line: 833, type: !545)
!4553 = !DILocalVariable(name: "i", scope: !4528, file: !547, line: 834, type: !32)
!4554 = !DILocalVariable(name: "args_size", scope: !4528, file: !547, line: 834, type: !32)
!4555 = !DILocalVariable(name: "s_nbr", scope: !4528, file: !547, line: 834, type: !32)
!4556 = !DILocalVariable(name: "ros_nbr", scope: !4528, file: !547, line: 834, type: !32)
!4557 = !DILocalVariable(name: "rws_nbr", scope: !4528, file: !547, line: 834, type: !32)
!4558 = !DILocalVariable(name: "s_idx", scope: !4528, file: !547, line: 834, type: !32)
!4559 = !DILocation(line: 0, scope: !4528)
!4560 = !DILocation(line: 836, column: 10, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4528, file: !547, line: 836, column: 6)
!4562 = !DILocation(line: 836, column: 6, scope: !4528)
!4563 = !DILocation(line: 842, column: 28, scope: !4528)
!4564 = !DILocation(line: 842, column: 14, scope: !4528)
!4565 = !DILocation(line: 852, column: 16, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4567, file: !547, line: 852, column: 2)
!4567 = distinct !DILexicalBlock(scope: !4528, file: !547, line: 852, column: 2)
!4568 = !DILocation(line: 852, column: 2, scope: !4567)
!4569 = !DILocation(line: 841, column: 28, scope: !4528)
!4570 = !DILocation(line: 841, column: 14, scope: !4528)
!4571 = !DILocation(line: 841, column: 32, scope: !4528)
!4572 = !DILocation(line: 847, column: 19, scope: !4528)
!4573 = !DILocation(line: 843, column: 28, scope: !4528)
!4574 = !DILocation(line: 843, column: 14, scope: !4528)
!4575 = !DILocation(line: 847, column: 31, scope: !4528)
!4576 = !DILocation(line: 844, column: 28, scope: !4528)
!4577 = !DILocation(line: 844, column: 14, scope: !4528)
!4578 = !DILocation(line: 847, column: 45, scope: !4528)
!4579 = !DILocation(line: 847, column: 41, scope: !4528)
!4580 = !DILocation(line: 854, column: 24, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4566, file: !547, line: 852, column: 30)
!4582 = !DILocation(line: 854, column: 11, scope: !4581)
!4583 = !DILocation(line: 855, column: 30, scope: !4581)
!4584 = !DILocation(line: 855, column: 22, scope: !4581)
!4585 = !DILocation(line: 855, column: 8, scope: !4581)
!4586 = !DILocation(line: 857, column: 7, scope: !4581)
!4587 = !DILocation(line: 859, column: 8, scope: !4581)
!4588 = !DILocation(line: 859, column: 18, scope: !4581)
!4589 = !DILocation(line: 859, column: 5, scope: !4581)
!4590 = !DILocation(line: 852, column: 26, scope: !4566)
!4591 = distinct !{!4591, !4568, !4592}
!4592 = !DILocation(line: 860, column: 2, scope: !4567)
!4593 = !DILocation(line: 863, column: 6, scope: !4528)
!4594 = !DILocation(line: 866, column: 56, scope: !4528)
!4595 = !DILocation(line: 866, column: 9, scope: !4528)
!4596 = !DILocation(line: 866, column: 2, scope: !4528)
!4597 = !DILocation(line: 867, column: 1, scope: !4528)
!4598 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !547, file: !547, line: 179, type: !4599, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !534, retainedNodes: !4601)
!4599 = !DISubroutineType(types: !4600)
!4600 = !{!108, !4531, !4535, !104, !105, !104}
!4601 = !{!4602, !4603, !4604, !4605, !4606, !4607}
!4602 = !DILocalVariable(name: "out", arg: 1, scope: !4598, file: !547, line: 179, type: !4531)
!4603 = !DILocalVariable(name: "formatter", arg: 2, scope: !4598, file: !547, line: 180, type: !4535)
!4604 = !DILocalVariable(name: "ctx", arg: 3, scope: !4598, file: !547, line: 181, type: !104)
!4605 = !DILocalVariable(name: "fmt", arg: 4, scope: !4598, file: !547, line: 182, type: !105)
!4606 = !DILocalVariable(name: "buf", arg: 5, scope: !4598, file: !547, line: 182, type: !104)
!4607 = !DILocalVariable(name: "u", scope: !4598, file: !547, line: 187, type: !4608)
!4608 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4598, file: !547, line: 184, size: 32, elements: !4609)
!4609 = !{!4610, !4611}
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4608, file: !547, line: 185, baseType: !4169, size: 32)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4608, file: !547, line: 186, baseType: !104, size: 32)
!4612 = !DILocation(line: 0, scope: !4598)
!4613 = !DILocation(line: 191, column: 9, scope: !4598)
!4614 = !DILocation(line: 191, column: 2, scope: !4598)
!4615 = distinct !DISubprogram(name: "is_ptr", scope: !547, file: !547, line: 881, type: !4616, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !534, retainedNodes: !4618)
!4616 = !DISubroutineType(types: !4617)
!4617 = !{!422, !105, !108}
!4618 = !{!4619, !4620, !4621, !4622, !4623}
!4619 = !DILocalVariable(name: "fmt", arg: 1, scope: !4615, file: !547, line: 881, type: !105)
!4620 = !DILocalVariable(name: "n", arg: 2, scope: !4615, file: !547, line: 881, type: !108)
!4621 = !DILocalVariable(name: "c", scope: !4615, file: !547, line: 883, type: !107)
!4622 = !DILocalVariable(name: "mod", scope: !4615, file: !547, line: 884, type: !422)
!4623 = !DILocalVariable(name: "cnt", scope: !4615, file: !547, line: 885, type: !108)
!4624 = !DILocation(line: 0, scope: !4615)
!4625 = !DILocation(line: 887, column: 14, scope: !4615)
!4626 = !DILocation(line: 887, column: 22, scope: !4615)
!4627 = !DILocation(line: 887, column: 2, scope: !4615)
!4628 = !DILocation(line: 887, column: 18, scope: !4615)
!4629 = !DILocation(line: 888, column: 7, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4615, file: !547, line: 887, column: 31)
!4631 = !DILocation(line: 889, column: 12, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4633, file: !547, line: 889, column: 8)
!4633 = distinct !DILexicalBlock(scope: !4634, file: !547, line: 888, column: 12)
!4634 = distinct !DILexicalBlock(scope: !4630, file: !547, line: 888, column: 7)
!4635 = !DILocation(line: 889, column: 8, scope: !4633)
!4636 = !DILocation(line: 890, column: 11, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4638, file: !547, line: 890, column: 9)
!4638 = distinct !DILexicalBlock(scope: !4632, file: !547, line: 889, column: 18)
!4639 = !DILocation(line: 890, column: 9, scope: !4638)
!4640 = !DILocation(line: 892, column: 16, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4637, file: !547, line: 892, column: 16)
!4642 = !DILocation(line: 892, column: 16, scope: !4637)
!4643 = !DILocation(line: 895, column: 15, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4632, file: !547, line: 895, column: 15)
!4645 = !DILocation(line: 895, column: 15, scope: !4632)
!4646 = !DILocation(line: 900, column: 9, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4630, file: !547, line: 900, column: 7)
!4648 = !DILocation(line: 900, column: 7, scope: !4630)
!4649 = distinct !{!4649, !4627, !4650}
!4650 = !DILocation(line: 903, column: 2, scope: !4615)
!4651 = !DILocation(line: 906, column: 1, scope: !4615)
!4652 = distinct !DISubprogram(name: "is_fmt_spec", scope: !547, file: !547, line: 873, type: !4653, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !534, retainedNodes: !4655)
!4653 = !DISubroutineType(types: !4654)
!4654 = !{!422, !107}
!4655 = !{!4656}
!4656 = !DILocalVariable(name: "c", arg: 1, scope: !4652, file: !547, line: 873, type: !107)
!4657 = !DILocation(line: 0, scope: !4652)
!4658 = !DILocation(line: 875, column: 19, scope: !4652)
!4659 = !DILocation(line: 875, column: 2, scope: !4652)
!4660 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !547, file: !547, line: 908, type: !4661, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !534, retainedNodes: !4667)
!4661 = !DISubroutineType(types: !4662)
!4662 = !{!108, !104, !439, !4663, !104, !113, !3124, !439}
!4663 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4202, line: 308, baseType: !4664)
!4664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4665, size: 32)
!4665 = !DISubroutineType(types: !4666)
!4666 = !{!108, !13, !439, !104}
!4667 = !{!4668, !4669, !4670, !4671, !4672, !4673, !4674, !4675, !4676, !4677, !4678, !4679, !4680, !4681, !4682, !4683, !4685, !4686, !4687, !4688, !4689, !4695, !4698, !4699, !4700, !4702, !4705, !4706, !4707, !4708, !4709, !4710, !4711, !4712, !4713, !4714, !4715, !4716, !4718, !4721, !4722, !4723, !4724, !4725, !4726, !4728, !4731, !4732, !4733}
!4668 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4660, file: !547, line: 908, type: !104)
!4669 = !DILocalVariable(name: "in_len", arg: 2, scope: !4660, file: !547, line: 909, type: !439)
!4670 = !DILocalVariable(name: "cb", arg: 3, scope: !4660, file: !547, line: 910, type: !4663)
!4671 = !DILocalVariable(name: "ctx", arg: 4, scope: !4660, file: !547, line: 911, type: !104)
!4672 = !DILocalVariable(name: "flags", arg: 5, scope: !4660, file: !547, line: 912, type: !113)
!4673 = !DILocalVariable(name: "strl", arg: 6, scope: !4660, file: !547, line: 913, type: !3124)
!4674 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4660, file: !547, line: 914, type: !439)
!4675 = !DILocalVariable(name: "buf", scope: !4660, file: !547, line: 918, type: !209)
!4676 = !DILocalVariable(name: "buf32", scope: !4660, file: !547, line: 919, type: !1214)
!4677 = !DILocalVariable(name: "args_size", scope: !4660, file: !547, line: 920, type: !32)
!4678 = !DILocalVariable(name: "ros_nbr", scope: !4660, file: !547, line: 920, type: !32)
!4679 = !DILocalVariable(name: "rws_nbr", scope: !4660, file: !547, line: 920, type: !32)
!4680 = !DILocalVariable(name: "fmt_present", scope: !4660, file: !547, line: 921, type: !422)
!4681 = !DILocalVariable(name: "rw_cpy", scope: !4660, file: !547, line: 922, type: !422)
!4682 = !DILocalVariable(name: "ro_cpy", scope: !4660, file: !547, line: 923, type: !422)
!4683 = !DILocalVariable(name: "in_desc", scope: !4660, file: !547, line: 924, type: !4684)
!4684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4205, size: 32)
!4685 = !DILocalVariable(name: "out_len", scope: !4660, file: !547, line: 960, type: !108)
!4686 = !DILocalVariable(name: "fmt", scope: !4660, file: !547, line: 965, type: !105)
!4687 = !DILocalVariable(name: "str_pos", scope: !4660, file: !547, line: 966, type: !209)
!4688 = !DILocalVariable(name: "strl_cnt", scope: !4660, file: !547, line: 967, type: !439)
!4689 = !DILocalVariable(name: "i", scope: !4690, file: !547, line: 973, type: !108)
!4690 = distinct !DILexicalBlock(scope: !4691, file: !547, line: 973, column: 4)
!4691 = distinct !DILexicalBlock(scope: !4692, file: !547, line: 972, column: 15)
!4692 = distinct !DILexicalBlock(scope: !4693, file: !547, line: 972, column: 7)
!4693 = distinct !DILexicalBlock(scope: !4694, file: !547, line: 970, column: 18)
!4694 = distinct !DILexicalBlock(scope: !4660, file: !547, line: 970, column: 6)
!4695 = !DILocalVariable(name: "str", scope: !4696, file: !547, line: 974, type: !105)
!4696 = distinct !DILexicalBlock(scope: !4697, file: !547, line: 973, column: 38)
!4697 = distinct !DILexicalBlock(scope: !4690, file: !547, line: 973, column: 4)
!4698 = !DILocalVariable(name: "len", scope: !4696, file: !547, line: 975, type: !108)
!4699 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4693, file: !547, line: 990, type: !422)
!4700 = !DILocalVariable(name: "i", scope: !4701, file: !547, line: 995, type: !108)
!4701 = distinct !DILexicalBlock(scope: !4693, file: !547, line: 995, column: 3)
!4702 = !DILocalVariable(name: "arg_idx", scope: !4703, file: !547, line: 996, type: !164)
!4703 = distinct !DILexicalBlock(scope: !4704, file: !547, line: 995, column: 37)
!4704 = distinct !DILexicalBlock(scope: !4701, file: !547, line: 995, column: 3)
!4705 = !DILocalVariable(name: "arg_pos", scope: !4703, file: !547, line: 997, type: !164)
!4706 = !DILocalVariable(name: "str", scope: !4703, file: !547, line: 998, type: !105)
!4707 = !DILocalVariable(name: "is_ro", scope: !4703, file: !547, line: 999, type: !422)
!4708 = !DILocalVariable(name: "len", scope: !4703, file: !547, line: 1000, type: !108)
!4709 = !DILocalVariable(name: "out_desc", scope: !4660, file: !547, line: 1038, type: !4205)
!4710 = !DILocalVariable(name: "cpy_str_pos", scope: !4660, file: !547, line: 1040, type: !4187)
!4711 = !DILocalVariable(name: "keep_str_pos", scope: !4660, file: !547, line: 1042, type: !4187)
!4712 = !DILocalVariable(name: "scpy_cnt", scope: !4660, file: !547, line: 1043, type: !164)
!4713 = !DILocalVariable(name: "keep_cnt", scope: !4660, file: !547, line: 1044, type: !164)
!4714 = !DILocalVariable(name: "dst", scope: !4660, file: !547, line: 1045, type: !209)
!4715 = !DILocalVariable(name: "rv", scope: !4660, file: !547, line: 1046, type: !108)
!4716 = !DILocalVariable(name: "i", scope: !4717, file: !547, line: 1074, type: !108)
!4717 = distinct !DILexicalBlock(scope: !4660, file: !547, line: 1074, column: 2)
!4718 = !DILocalVariable(name: "arg_idx", scope: !4719, file: !547, line: 1075, type: !164)
!4719 = distinct !DILexicalBlock(scope: !4720, file: !547, line: 1074, column: 36)
!4720 = distinct !DILexicalBlock(scope: !4717, file: !547, line: 1074, column: 2)
!4721 = !DILocalVariable(name: "arg_pos", scope: !4719, file: !547, line: 1076, type: !164)
!4722 = !DILocalVariable(name: "str", scope: !4719, file: !547, line: 1077, type: !105)
!4723 = !DILocalVariable(name: "is_ro", scope: !4719, file: !547, line: 1078, type: !422)
!4724 = !DILocalVariable(name: "in_desc_backup", scope: !4660, file: !547, line: 1114, type: !4205)
!4725 = !DILocalVariable(name: "strs_len", scope: !4660, file: !547, line: 1134, type: !439)
!4726 = !DILocalVariable(name: "i", scope: !4727, file: !547, line: 1143, type: !108)
!4727 = distinct !DILexicalBlock(scope: !4660, file: !547, line: 1143, column: 2)
!4728 = !DILocalVariable(name: "loc", scope: !4729, file: !547, line: 1144, type: !164)
!4729 = distinct !DILexicalBlock(scope: !4730, file: !547, line: 1143, column: 37)
!4730 = distinct !DILexicalBlock(scope: !4727, file: !547, line: 1143, column: 2)
!4731 = !DILocalVariable(name: "str", scope: !4729, file: !547, line: 1145, type: !105)
!4732 = !DILocalVariable(name: "str_len", scope: !4729, file: !547, line: 1146, type: !168)
!4733 = !DILabel(scope: !4734, name: "calculate_string_length", file: !547, line: 1021)
!4734 = distinct !DILexicalBlock(scope: !4735, file: !547, line: 1020, column: 56)
!4735 = distinct !DILexicalBlock(scope: !4736, file: !547, line: 1020, column: 15)
!4736 = distinct !DILexicalBlock(scope: !4703, file: !547, line: 1014, column: 8)
!4737 = !DILocation(line: 0, scope: !4660)
!4738 = !DILocation(line: 919, column: 20, scope: !4660)
!4739 = !DILocation(line: 921, column: 27, scope: !4660)
!4740 = !DILocation(line: 921, column: 21, scope: !4660)
!4741 = !DILocation(line: 926, column: 18, scope: !4660)
!4742 = !DILocation(line: 926, column: 11, scope: !4660)
!4743 = !DILocation(line: 926, column: 34, scope: !4660)
!4744 = !DILocation(line: 931, column: 21, scope: !4660)
!4745 = !DILocation(line: 931, column: 12, scope: !4660)
!4746 = !DILocation(line: 932, column: 11, scope: !4660)
!4747 = !DILocation(line: 932, column: 19, scope: !4660)
!4748 = !DILocation(line: 938, column: 21, scope: !4660)
!4749 = !DILocation(line: 938, column: 12, scope: !4660)
!4750 = !DILocation(line: 939, column: 19, scope: !4660)
!4751 = !DILocation(line: 939, column: 23, scope: !4660)
!4752 = !DILocation(line: 946, column: 14, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4660, file: !547, line: 946, column: 6)
!4754 = !DILocation(line: 947, column: 7, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4756, file: !547, line: 947, column: 7)
!4756 = distinct !DILexicalBlock(scope: !4753, file: !547, line: 946, column: 26)
!4757 = !DILocation(line: 947, column: 7, scope: !4756)
!4758 = !DILocation(line: 948, column: 4, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4755, file: !547, line: 947, column: 11)
!4760 = !DILocation(line: 949, column: 3, scope: !4759)
!4761 = !DILocation(line: 958, column: 23, scope: !4660)
!4762 = !DILocation(line: 958, column: 14, scope: !4660)
!4763 = !DILocation(line: 958, column: 27, scope: !4660)
!4764 = !DILocation(line: 965, column: 41, scope: !4660)
!4765 = !DILocation(line: 965, column: 20, scope: !4660)
!4766 = !DILocation(line: 966, column: 22, scope: !4660)
!4767 = !DILocation(line: 970, column: 9, scope: !4694)
!4768 = !DILocation(line: 970, column: 6, scope: !4660)
!4769 = !DILocation(line: 972, column: 7, scope: !4693)
!4770 = !DILocation(line: 0, scope: !4690)
!4771 = !DILocation(line: 973, column: 4, scope: !4690)
!4772 = !DILocation(line: 974, column: 46, scope: !4696)
!4773 = !DILocation(line: 974, column: 40, scope: !4696)
!4774 = !DILocation(line: 974, column: 23, scope: !4696)
!4775 = !DILocation(line: 0, scope: !4696)
!4776 = !DILocation(line: 975, column: 15, scope: !4696)
!4777 = !DILocation(line: 978, column: 14, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4696, file: !547, line: 978, column: 9)
!4779 = !DILocation(line: 979, column: 25, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4778, file: !547, line: 978, column: 38)
!4781 = !DILocation(line: 979, column: 19, scope: !4780)
!4782 = !DILocation(line: 979, column: 6, scope: !4780)
!4783 = !DILocation(line: 979, column: 23, scope: !4780)
!4784 = !DILocation(line: 980, column: 5, scope: !4780)
!4785 = !DILocation(line: 981, column: 13, scope: !4696)
!4786 = !DILocation(line: 982, column: 12, scope: !4696)
!4787 = !DILocation(line: 973, column: 34, scope: !4697)
!4788 = !DILocation(line: 973, column: 22, scope: !4697)
!4789 = distinct !{!4789, !4771, !4790}
!4790 = !DILocation(line: 983, column: 4, scope: !4690)
!4791 = !DILocation(line: 985, column: 16, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4793, file: !547, line: 985, column: 8)
!4793 = distinct !DILexicalBlock(scope: !4692, file: !547, line: 984, column: 10)
!4794 = !DILocation(line: 967, column: 9, scope: !4660)
!4795 = !DILocation(line: 971, column: 11, scope: !4693)
!4796 = !DILocation(line: 0, scope: !4693)
!4797 = !DILocation(line: 0, scope: !4701)
!4798 = !DILocation(line: 995, column: 21, scope: !4704)
!4799 = !DILocation(line: 995, column: 3, scope: !4701)
!4800 = !DILocation(line: 990, column: 34, scope: !4693)
!4801 = !DILocation(line: 990, column: 26, scope: !4693)
!4802 = !DILocation(line: 996, column: 30, scope: !4703)
!4803 = !DILocation(line: 0, scope: !4703)
!4804 = !DILocation(line: 997, column: 30, scope: !4703)
!4805 = !DILocation(line: 997, column: 22, scope: !4703)
!4806 = !DILocation(line: 998, column: 39, scope: !4703)
!4807 = !DILocation(line: 998, column: 22, scope: !4703)
!4808 = !DILocation(line: 999, column: 17, scope: !4703)
!4809 = !DILocation(line: 1002, column: 20, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4703, file: !547, line: 1002, column: 8)
!4811 = !DILocation(line: 996, column: 22, scope: !4703)
!4812 = !DILocation(line: 1002, column: 35, scope: !4810)
!4813 = !DILocation(line: 1002, column: 23, scope: !4810)
!4814 = !DILocation(line: 1002, column: 8, scope: !4703)
!4815 = !DILocation(line: 1003, column: 5, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4817, file: !547, line: 1003, column: 5)
!4817 = distinct !DILexicalBlock(scope: !4818, file: !547, line: 1003, column: 5)
!4818 = distinct !DILexicalBlock(scope: !4819, file: !547, line: 1003, column: 5)
!4819 = distinct !DILexicalBlock(scope: !4820, file: !547, line: 1003, column: 5)
!4820 = distinct !DILexicalBlock(scope: !4810, file: !547, line: 1002, column: 45)
!4821 = !DILocation(line: 1010, column: 13, scope: !4820)
!4822 = !DILocation(line: 1011, column: 5, scope: !4820)
!4823 = !DILocation(line: 1014, column: 8, scope: !4703)
!4824 = !DILocation(line: 1015, column: 9, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4736, file: !547, line: 1014, column: 15)
!4826 = !DILocation(line: 1018, column: 14, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4828, file: !547, line: 1017, column: 12)
!4828 = distinct !DILexicalBlock(scope: !4825, file: !547, line: 1015, column: 9)
!4829 = !DILocation(line: 1020, column: 4, scope: !4825)
!4830 = !DILocation(line: 1020, column: 15, scope: !4736)
!4831 = !DILocation(line: 1021, column: 1, scope: !4734)
!4832 = !DILocation(line: 1022, column: 11, scope: !4734)
!4833 = !DILocation(line: 1025, column: 14, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4734, file: !547, line: 1025, column: 9)
!4835 = !DILocation(line: 1026, column: 25, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4834, file: !547, line: 1025, column: 38)
!4837 = !DILocation(line: 1026, column: 19, scope: !4836)
!4838 = !DILocation(line: 1026, column: 6, scope: !4836)
!4839 = !DILocation(line: 1026, column: 23, scope: !4836)
!4840 = !DILocation(line: 1027, column: 5, scope: !4836)
!4841 = !DILocation(line: 1031, column: 21, scope: !4734)
!4842 = !DILocation(line: 1031, column: 13, scope: !4734)
!4843 = !DILocation(line: 1032, column: 4, scope: !4734)
!4844 = !DILocation(line: 995, column: 33, scope: !4704)
!4845 = distinct !{!4845, !4799, !4846}
!4846 = !DILocation(line: 1033, column: 3, scope: !4701)
!4847 = !DILocation(line: 1040, column: 10, scope: !4660)
!4848 = !DILocation(line: 1042, column: 10, scope: !4660)
!4849 = !DILocation(line: 1052, column: 6, scope: !4660)
!4850 = !DILocation(line: 1055, column: 9, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4852, file: !547, line: 1052, column: 14)
!4852 = distinct !DILexicalBlock(scope: !4660, file: !547, line: 1052, column: 6)
!4853 = !DILocation(line: 1056, column: 2, scope: !4851)
!4854 = !DILocation(line: 1056, column: 21, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4852, file: !547, line: 1056, column: 13)
!4856 = !DILocation(line: 1066, column: 3, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4858, file: !547, line: 1065, column: 11)
!4858 = distinct !DILexicalBlock(scope: !4660, file: !547, line: 1065, column: 6)
!4859 = !DILocation(line: 1067, column: 2, scope: !4857)
!4860 = !DILocation(line: 1068, column: 10, scope: !4660)
!4861 = !DILocation(line: 0, scope: !4717)
!4862 = !DILocation(line: 1074, column: 20, scope: !4720)
!4863 = !DILocation(line: 1074, column: 2, scope: !4717)
!4864 = !DILocation(line: 1110, column: 24, scope: !4660)
!4865 = !DILocation(line: 1053, column: 12, scope: !4851)
!4866 = !DILocation(line: 1054, column: 12, scope: !4851)
!4867 = !DILocation(line: 1108, column: 30, scope: !4660)
!4868 = !DILocation(line: 1108, column: 40, scope: !4660)
!4869 = !DILocation(line: 1108, column: 38, scope: !4660)
!4870 = !DILocation(line: 1109, column: 31, scope: !4660)
!4871 = !DILocation(line: 1109, column: 24, scope: !4660)
!4872 = !DILocation(line: 1110, column: 31, scope: !4660)
!4873 = !DILocation(line: 1114, column: 31, scope: !4660)
!4874 = !DILocation(line: 1114, column: 48, scope: !4660)
!4875 = !DILocation(line: 1115, column: 13, scope: !4660)
!4876 = !DILocation(line: 1118, column: 7, scope: !4660)
!4877 = !DILocation(line: 1119, column: 9, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4660, file: !547, line: 1119, column: 6)
!4879 = !DILocation(line: 1119, column: 6, scope: !4660)
!4880 = !DILocation(line: 1075, column: 29, scope: !4719)
!4881 = !DILocation(line: 1075, column: 21, scope: !4719)
!4882 = !DILocation(line: 0, scope: !4719)
!4883 = !DILocation(line: 1076, column: 29, scope: !4719)
!4884 = !DILocation(line: 1076, column: 21, scope: !4719)
!4885 = !DILocation(line: 1077, column: 38, scope: !4719)
!4886 = !DILocation(line: 1077, column: 21, scope: !4719)
!4887 = !DILocation(line: 1078, column: 16, scope: !4719)
!4888 = !DILocation(line: 1080, column: 19, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4719, file: !547, line: 1080, column: 7)
!4890 = !DILocation(line: 1080, column: 34, scope: !4889)
!4891 = !DILocation(line: 1080, column: 22, scope: !4889)
!4892 = !DILocation(line: 1080, column: 7, scope: !4719)
!4893 = !DILocation(line: 1084, column: 7, scope: !4719)
!4894 = !DILocation(line: 1085, column: 8, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4896, file: !547, line: 1084, column: 14)
!4896 = distinct !DILexicalBlock(scope: !4719, file: !547, line: 1084, column: 7)
!4897 = !DILocation(line: 1087, column: 25, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4899, file: !547, line: 1085, column: 49)
!4899 = distinct !DILexicalBlock(scope: !4895, file: !547, line: 1085, column: 8)
!4900 = !DILocation(line: 1088, column: 4, scope: !4898)
!4901 = !DILocation(line: 1088, column: 15, scope: !4899)
!4902 = !DILocation(line: 1090, column: 26, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4904, file: !547, line: 1088, column: 61)
!4904 = distinct !DILexicalBlock(scope: !4899, file: !547, line: 1088, column: 15)
!4905 = !DILocation(line: 1091, column: 4, scope: !4903)
!4906 = !DILocation(line: 1095, column: 8, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4896, file: !547, line: 1094, column: 10)
!4908 = !DILocation(line: 1097, column: 25, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4910, file: !547, line: 1095, column: 49)
!4910 = distinct !DILexicalBlock(scope: !4907, file: !547, line: 1095, column: 8)
!4911 = !DILocation(line: 1098, column: 4, scope: !4909)
!4912 = !DILocation(line: 1100, column: 26, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4910, file: !547, line: 1098, column: 11)
!4914 = !DILocation(line: 1100, column: 5, scope: !4913)
!4915 = !DILocation(line: 1100, column: 30, scope: !4913)
!4916 = !DILocation(line: 1101, column: 26, scope: !4913)
!4917 = !DILocation(line: 0, scope: !4896)
!4918 = !DILocation(line: 1074, column: 32, scope: !4720)
!4919 = distinct !{!4919, !4863, !4920}
!4920 = !DILocation(line: 1104, column: 2, scope: !4717)
!4921 = !DILocation(line: 1124, column: 13, scope: !4660)
!4922 = !DILocation(line: 1127, column: 10, scope: !4660)
!4923 = !DILocation(line: 1127, column: 7, scope: !4660)
!4924 = !DILocation(line: 1128, column: 9, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4660, file: !547, line: 1128, column: 6)
!4926 = !DILocation(line: 1128, column: 6, scope: !4660)
!4927 = !DILocation(line: 1134, column: 27, scope: !4660)
!4928 = !DILocation(line: 1136, column: 7, scope: !4660)
!4929 = !DILocation(line: 1137, column: 9, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4660, file: !547, line: 1137, column: 6)
!4931 = !DILocation(line: 1137, column: 6, scope: !4660)
!4932 = !DILocation(line: 1131, column: 10, scope: !4660)
!4933 = !DILocation(line: 1140, column: 10, scope: !4660)
!4934 = !DILocation(line: 0, scope: !4727)
!4935 = !DILocation(line: 1143, column: 20, scope: !4730)
!4936 = !DILocation(line: 1143, column: 2, scope: !4727)
!4937 = !DILocation(line: 1144, column: 3, scope: !4729)
!4938 = !DILocation(line: 1144, column: 17, scope: !4729)
!4939 = !DILocation(line: 0, scope: !4729)
!4940 = !DILocation(line: 1144, column: 11, scope: !4729)
!4941 = !DILocation(line: 1145, column: 38, scope: !4729)
!4942 = !DILocation(line: 1145, column: 21, scope: !4729)
!4943 = !DILocation(line: 1146, column: 22, scope: !4729)
!4944 = !DILocation(line: 1146, column: 29, scope: !4729)
!4945 = !DILocation(line: 1148, column: 8, scope: !4729)
!4946 = !DILocation(line: 1149, column: 10, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4729, file: !547, line: 1149, column: 7)
!4948 = !DILocation(line: 1149, column: 7, scope: !4729)
!4949 = !DILocation(line: 1154, column: 8, scope: !4729)
!4950 = !DILocation(line: 1155, column: 10, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4729, file: !547, line: 1155, column: 7)
!4952 = !DILocation(line: 1155, column: 7, scope: !4729)
!4953 = !DILocation(line: 1159, column: 2, scope: !4730)
!4954 = !DILocation(line: 1152, column: 11, scope: !4729)
!4955 = !DILocation(line: 1158, column: 11, scope: !4729)
!4956 = !DILocation(line: 1143, column: 33, scope: !4730)
!4957 = distinct !{!4957, !4936, !4958}
!4958 = !DILocation(line: 1159, column: 2, scope: !4727)
!4959 = !DILocation(line: 1162, column: 8, scope: !4660)
!4960 = !DILocation(line: 1164, column: 2, scope: !4660)
!4961 = !DILocation(line: 1165, column: 1, scope: !4660)
!4962 = distinct !DISubprogram(name: "get_package_len", scope: !547, file: !547, line: 196, type: !4963, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !534, retainedNodes: !4965)
!4963 = !DISubroutineType(types: !4964)
!4964 = !{!439, !104}
!4965 = !{!4966, !4967, !4968, !4969, !4970, !4971, !4972}
!4966 = !DILocalVariable(name: "packaged", arg: 1, scope: !4962, file: !547, line: 196, type: !104)
!4967 = !DILocalVariable(name: "buf", scope: !4962, file: !547, line: 200, type: !209)
!4968 = !DILocalVariable(name: "start", scope: !4962, file: !547, line: 201, type: !209)
!4969 = !DILocalVariable(name: "args_size", scope: !4962, file: !547, line: 202, type: !32)
!4970 = !DILocalVariable(name: "s_nbr", scope: !4962, file: !547, line: 202, type: !32)
!4971 = !DILocalVariable(name: "ros_nbr", scope: !4962, file: !547, line: 202, type: !32)
!4972 = !DILocalVariable(name: "i", scope: !4973, file: !547, line: 215, type: !108)
!4973 = distinct !DILexicalBlock(scope: !4962, file: !547, line: 215, column: 2)
!4974 = !DILocation(line: 0, scope: !4962)
!4975 = !DILocation(line: 204, column: 14, scope: !4962)
!4976 = !DILocation(line: 204, column: 21, scope: !4962)
!4977 = !DILocation(line: 205, column: 14, scope: !4962)
!4978 = !DILocation(line: 206, column: 14, scope: !4962)
!4979 = !DILocation(line: 209, column: 6, scope: !4962)
!4980 = !DILocation(line: 212, column: 6, scope: !4962)
!4981 = !DILocation(line: 0, scope: !4973)
!4982 = !DILocation(line: 215, column: 20, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4973, file: !547, line: 215, column: 2)
!4984 = !DILocation(line: 215, column: 2, scope: !4973)
!4985 = !DILocation(line: 220, column: 33, scope: !4962)
!4986 = !DILocation(line: 220, column: 2, scope: !4962)
!4987 = !DILocation(line: 216, column: 6, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4983, file: !547, line: 215, column: 34)
!4989 = !DILocation(line: 217, column: 10, scope: !4988)
!4990 = !DILocation(line: 217, column: 36, scope: !4988)
!4991 = !DILocation(line: 217, column: 7, scope: !4988)
!4992 = !DILocation(line: 215, column: 30, scope: !4983)
!4993 = distinct !{!4993, !4984, !4994}
!4994 = !DILocation(line: 218, column: 2, scope: !4973)
!4995 = distinct !DISubprogram(name: "append_string", scope: !547, file: !547, line: 223, type: !4996, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !534, retainedNodes: !4998)
!4996 = !DISubroutineType(types: !4997)
!4997 = !{!108, !4663, !104, !105, !168}
!4998 = !{!4999, !5000, !5001, !5002}
!4999 = !DILocalVariable(name: "cb", arg: 1, scope: !4995, file: !547, line: 223, type: !4663)
!5000 = !DILocalVariable(name: "ctx", arg: 2, scope: !4995, file: !547, line: 223, type: !104)
!5001 = !DILocalVariable(name: "str", arg: 3, scope: !4995, file: !547, line: 223, type: !105)
!5002 = !DILocalVariable(name: "strl", arg: 4, scope: !4995, file: !547, line: 223, type: !168)
!5003 = !DILocation(line: 0, scope: !4995)
!5004 = !DILocation(line: 225, column: 9, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4995, file: !547, line: 225, column: 6)
!5006 = !DILocation(line: 225, column: 6, scope: !4995)
!5007 = !DILocation(line: 226, column: 14, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !5005, file: !547, line: 225, column: 18)
!5009 = !DILocation(line: 226, column: 12, scope: !5008)
!5010 = !DILocation(line: 226, column: 3, scope: !5008)
!5011 = !DILocation(line: 229, column: 14, scope: !4995)
!5012 = !DILocation(line: 229, column: 9, scope: !4995)
!5013 = !DILocation(line: 229, column: 27, scope: !4995)
!5014 = !DILocation(line: 229, column: 39, scope: !4995)
!5015 = !DILocation(line: 230, column: 17, scope: !4995)
!5016 = !DILocation(line: 230, column: 9, scope: !4995)
!5017 = !DILocation(line: 230, column: 2, scope: !4995)
!5018 = !DILocation(line: 231, column: 1, scope: !4995)
!5019 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !559, file: !559, line: 45, type: !561, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !555, retainedNodes: !5020)
!5020 = !{!5021}
!5021 = !DILocalVariable(name: "c", arg: 1, scope: !5019, file: !559, line: 45, type: !108)
!5022 = !DILocation(line: 0, scope: !5019)
!5023 = !DILocation(line: 50, column: 2, scope: !5019)
!5024 = distinct !DISubprogram(name: "__printk_hook_install", scope: !559, file: !559, line: 63, type: !5025, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !555, retainedNodes: !5027)
!5025 = !DISubroutineType(types: !5026)
!5026 = !{null, !560}
!5027 = !{!5028}
!5028 = !DILocalVariable(name: "fn", arg: 1, scope: !5024, file: !559, line: 63, type: !560)
!5029 = !DILocation(line: 0, scope: !5024)
!5030 = !DILocation(line: 65, column: 12, scope: !5024)
!5031 = !DILocation(line: 66, column: 1, scope: !5024)
!5032 = distinct !DISubprogram(name: "__printk_get_hook", scope: !559, file: !559, line: 76, type: !5033, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !555, retainedNodes: !437)
!5033 = !DISubroutineType(types: !5034)
!5034 = !{!104}
!5035 = !DILocation(line: 78, column: 9, scope: !5032)
!5036 = !DILocation(line: 78, column: 2, scope: !5032)
!5037 = distinct !DISubprogram(name: "vprintk", scope: !559, file: !559, line: 113, type: !5038, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !555, retainedNodes: !5046)
!5038 = !DISubroutineType(types: !5039)
!5039 = !{null, !105, !5040}
!5040 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4170, line: 99, baseType: !5041)
!5041 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4170, line: 40, baseType: !5042)
!5042 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !559, baseType: !5043)
!5043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5044)
!5044 = !{!5045}
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5043, file: !559, line: 79, baseType: !104, size: 32)
!5046 = !{!5047, !5048, !5049}
!5047 = !DILocalVariable(name: "fmt", arg: 1, scope: !5037, file: !559, line: 113, type: !105)
!5048 = !DILocalVariable(name: "ap", arg: 2, scope: !5037, file: !559, line: 113, type: !5040)
!5049 = !DILocalVariable(name: "ctx", scope: !5050, file: !559, line: 121, type: !5052)
!5050 = distinct !DILexicalBlock(scope: !5051, file: !559, line: 120, column: 27)
!5051 = distinct !DILexicalBlock(scope: !5037, file: !559, line: 120, column: 6)
!5052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !559, line: 81, size: 32, elements: !5053)
!5053 = !{!5054, !5055}
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !5052, file: !559, line: 85, baseType: !32, size: 32)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5052, file: !559, line: 86, baseType: !5056, offset: 32)
!5056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, elements: !5057)
!5057 = !{!5058}
!5058 = !DISubrange(count: 0)
!5059 = !DILocation(line: 0, scope: !5037)
!5060 = !DILocation(line: 148, column: 3, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5051, file: !559, line: 138, column: 9)
!5062 = !DILocation(line: 155, column: 1, scope: !5037)
!5063 = distinct !DISubprogram(name: "char_out", scope: !559, file: !559, line: 107, type: !5064, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !555, retainedNodes: !5066)
!5064 = !DISubroutineType(types: !5065)
!5065 = !{!108, !108, !104}
!5066 = !{!5067, !5068}
!5067 = !DILocalVariable(name: "c", arg: 1, scope: !5063, file: !559, line: 107, type: !108)
!5068 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !5063, file: !559, line: 107, type: !104)
!5069 = !DILocation(line: 0, scope: !5063)
!5070 = !DILocation(line: 110, column: 9, scope: !5063)
!5071 = !DILocation(line: 110, column: 2, scope: !5063)
!5072 = distinct !DISubprogram(name: "cbvprintf", scope: !4202, file: !4202, line: 739, type: !5073, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !555, retainedNodes: !5075)
!5073 = !DISubroutineType(types: !5074)
!5074 = !{!108, !4531, !104, !105, !5040}
!5075 = !{!5076, !5077, !5078, !5079}
!5076 = !DILocalVariable(name: "out", arg: 1, scope: !5072, file: !4202, line: 739, type: !4531)
!5077 = !DILocalVariable(name: "ctx", arg: 2, scope: !5072, file: !4202, line: 739, type: !104)
!5078 = !DILocalVariable(name: "format", arg: 3, scope: !5072, file: !4202, line: 739, type: !105)
!5079 = !DILocalVariable(name: "ap", arg: 4, scope: !5072, file: !4202, line: 739, type: !5040)
!5080 = !DILocation(line: 0, scope: !5072)
!5081 = !DILocation(line: 741, column: 9, scope: !5072)
!5082 = !DILocation(line: 741, column: 2, scope: !5072)
!5083 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !559, file: !559, line: 157, type: !5084, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !555, retainedNodes: !5086)
!5084 = !DISubroutineType(types: !5085)
!5085 = !{null, !443, !439}
!5086 = !{!5087, !5088, !5089}
!5087 = !DILocalVariable(name: "c", arg: 1, scope: !5083, file: !559, line: 157, type: !443)
!5088 = !DILocalVariable(name: "n", arg: 2, scope: !5083, file: !559, line: 157, type: !439)
!5089 = !DILocalVariable(name: "i", scope: !5083, file: !559, line: 159, type: !439)
!5090 = !DILocation(line: 0, scope: !5083)
!5091 = !DILocation(line: 164, column: 16, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5093, file: !559, line: 164, column: 2)
!5093 = distinct !DILexicalBlock(scope: !5083, file: !559, line: 164, column: 2)
!5094 = !DILocation(line: 164, column: 2, scope: !5093)
!5095 = !DILocation(line: 165, column: 3, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5092, file: !559, line: 164, column: 26)
!5097 = !DILocation(line: 165, column: 13, scope: !5096)
!5098 = !DILocation(line: 164, column: 22, scope: !5092)
!5099 = distinct !{!5099, !5094, !5100}
!5100 = !DILocation(line: 166, column: 2, scope: !5093)
!5101 = !DILocation(line: 171, column: 1, scope: !5083)
!5102 = distinct !DISubprogram(name: "printk", scope: !559, file: !559, line: 203, type: !5103, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !555, retainedNodes: !5105)
!5103 = !DISubroutineType(types: !5104)
!5104 = !{null, !105, null}
!5105 = !{!5106, !5107}
!5106 = !DILocalVariable(name: "fmt", arg: 1, scope: !5102, file: !559, line: 203, type: !105)
!5107 = !DILocalVariable(name: "ap", scope: !5102, file: !559, line: 205, type: !5040)
!5108 = !DILocation(line: 0, scope: !5102)
!5109 = !DILocation(line: 205, column: 2, scope: !5102)
!5110 = !DILocation(line: 205, column: 10, scope: !5102)
!5111 = !DILocation(line: 207, column: 2, scope: !5102)
!5112 = !DILocation(line: 209, column: 2, scope: !5102)
!5113 = !DILocation(line: 211, column: 2, scope: !5102)
!5114 = !DILocation(line: 212, column: 1, scope: !5102)
!5115 = distinct !DISubprogram(name: "snprintk", scope: !559, file: !559, line: 239, type: !5116, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !555, retainedNodes: !5118)
!5116 = !DISubroutineType(types: !5117)
!5117 = !{!108, !443, !439, !105, null}
!5118 = !{!5119, !5120, !5121, !5122, !5123}
!5119 = !DILocalVariable(name: "str", arg: 1, scope: !5115, file: !559, line: 239, type: !443)
!5120 = !DILocalVariable(name: "size", arg: 2, scope: !5115, file: !559, line: 239, type: !439)
!5121 = !DILocalVariable(name: "fmt", arg: 3, scope: !5115, file: !559, line: 239, type: !105)
!5122 = !DILocalVariable(name: "ap", scope: !5115, file: !559, line: 241, type: !5040)
!5123 = !DILocalVariable(name: "ret", scope: !5115, file: !559, line: 242, type: !108)
!5124 = !DILocation(line: 0, scope: !5115)
!5125 = !DILocation(line: 241, column: 2, scope: !5115)
!5126 = !DILocation(line: 241, column: 10, scope: !5115)
!5127 = !DILocation(line: 244, column: 2, scope: !5115)
!5128 = !DILocation(line: 245, column: 8, scope: !5115)
!5129 = !DILocation(line: 246, column: 2, scope: !5115)
!5130 = !DILocation(line: 249, column: 1, scope: !5115)
!5131 = !DILocation(line: 248, column: 2, scope: !5115)
!5132 = distinct !DISubprogram(name: "vsnprintk", scope: !559, file: !559, line: 251, type: !5133, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !555, retainedNodes: !5135)
!5133 = !DISubroutineType(types: !5134)
!5134 = !{!108, !443, !439, !105, !5040}
!5135 = !{!5136, !5137, !5138, !5139, !5140}
!5136 = !DILocalVariable(name: "str", arg: 1, scope: !5132, file: !559, line: 251, type: !443)
!5137 = !DILocalVariable(name: "size", arg: 2, scope: !5132, file: !559, line: 251, type: !439)
!5138 = !DILocalVariable(name: "fmt", arg: 3, scope: !5132, file: !559, line: 251, type: !105)
!5139 = !DILocalVariable(name: "ap", arg: 4, scope: !5132, file: !559, line: 251, type: !5040)
!5140 = !DILocalVariable(name: "ctx", scope: !5132, file: !559, line: 253, type: !5141)
!5141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !559, line: 217, size: 96, elements: !5142)
!5142 = !{!5143, !5144, !5145}
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5141, file: !559, line: 218, baseType: !443, size: 32)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5141, file: !559, line: 219, baseType: !108, size: 32, offset: 32)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5141, file: !559, line: 220, baseType: !108, size: 32, offset: 64)
!5146 = !DILocation(line: 0, scope: !5132)
!5147 = !DILocation(line: 253, column: 2, scope: !5132)
!5148 = !DILocation(line: 253, column: 21, scope: !5132)
!5149 = !DILocation(line: 253, column: 27, scope: !5132)
!5150 = !DILocation(line: 255, column: 2, scope: !5132)
!5151 = !DILocation(line: 257, column: 10, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5132, file: !559, line: 257, column: 6)
!5153 = !DILocation(line: 257, column: 22, scope: !5152)
!5154 = !DILocation(line: 257, column: 16, scope: !5152)
!5155 = !DILocation(line: 257, column: 6, scope: !5132)
!5156 = !DILocation(line: 258, column: 3, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5152, file: !559, line: 257, column: 27)
!5158 = !DILocation(line: 258, column: 18, scope: !5157)
!5159 = !DILocation(line: 259, column: 2, scope: !5157)
!5160 = !DILocation(line: 262, column: 1, scope: !5132)
!5161 = !DILocation(line: 261, column: 2, scope: !5132)
!5162 = distinct !DISubprogram(name: "str_out", scope: !559, file: !559, line: 223, type: !5163, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !555, retainedNodes: !5166)
!5163 = !DISubroutineType(types: !5164)
!5164 = !{!108, !108, !5165}
!5165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5141, size: 32)
!5166 = !{!5167, !5168}
!5167 = !DILocalVariable(name: "c", arg: 1, scope: !5162, file: !559, line: 223, type: !108)
!5168 = !DILocalVariable(name: "ctx", arg: 2, scope: !5162, file: !559, line: 223, type: !5165)
!5169 = !DILocation(line: 0, scope: !5162)
!5170 = !DILocation(line: 225, column: 11, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5162, file: !559, line: 225, column: 6)
!5172 = !DILocation(line: 225, column: 15, scope: !5171)
!5173 = !DILocation(line: 0, scope: !5171)
!5174 = !DILocation(line: 225, column: 23, scope: !5171)
!5175 = !DILocation(line: 225, column: 45, scope: !5171)
!5176 = !DILocation(line: 225, column: 37, scope: !5171)
!5177 = !DILocation(line: 225, column: 6, scope: !5162)
!5178 = !DILocation(line: 226, column: 8, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5171, file: !559, line: 225, column: 50)
!5180 = !DILocation(line: 226, column: 13, scope: !5179)
!5181 = !DILocation(line: 227, column: 3, scope: !5179)
!5182 = !DILocation(line: 230, column: 29, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5162, file: !559, line: 230, column: 6)
!5184 = !DILocation(line: 230, column: 17, scope: !5183)
!5185 = !DILocation(line: 230, column: 6, scope: !5162)
!5186 = !DILocation(line: 231, column: 22, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5183, file: !559, line: 230, column: 34)
!5188 = !DILocation(line: 231, column: 3, scope: !5187)
!5189 = !DILocation(line: 231, column: 26, scope: !5187)
!5190 = !DILocation(line: 232, column: 2, scope: !5187)
!5191 = !DILocation(line: 233, column: 28, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5183, file: !559, line: 232, column: 9)
!5193 = !DILocation(line: 233, column: 22, scope: !5192)
!5194 = !DILocation(line: 233, column: 3, scope: !5192)
!5195 = !DILocation(line: 233, column: 26, scope: !5192)
!5196 = !DILocation(line: 237, column: 1, scope: !5162)
!5197 = distinct !DISubprogram(name: "z_thread_entry", scope: !5198, file: !5198, line: 30, type: !5199, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2854, retainedNodes: !5206)
!5198 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5199 = !DISubroutineType(types: !5200)
!5200 = !{null, !5201, !104, !104, !104}
!5201 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !5202, line: 46, baseType: !5203)
!5202 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5204, size: 32)
!5204 = !DISubroutineType(types: !5205)
!5205 = !{null, !104, !104, !104}
!5206 = !{!5207, !5208, !5209, !5210}
!5207 = !DILocalVariable(name: "entry", arg: 1, scope: !5197, file: !5198, line: 30, type: !5201)
!5208 = !DILocalVariable(name: "p1", arg: 2, scope: !5197, file: !5198, line: 31, type: !104)
!5209 = !DILocalVariable(name: "p2", arg: 3, scope: !5197, file: !5198, line: 31, type: !104)
!5210 = !DILocalVariable(name: "p3", arg: 4, scope: !5197, file: !5198, line: 31, type: !104)
!5211 = !DILocation(line: 0, scope: !5197)
!5212 = !DILocation(line: 36, column: 2, scope: !5197)
!5213 = !DILocation(line: 38, column: 17, scope: !5197)
!5214 = !DILocation(line: 38, column: 2, scope: !5197)
!5215 = !DILocation(line: 45, column: 2, scope: !5197)
!5216 = distinct !DISubprogram(name: "k_current_get", scope: !359, file: !359, line: 530, type: !5217, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2854, retainedNodes: !437)
!5217 = !DISubroutineType(types: !5218)
!5218 = !{!5219}
!5219 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !649, line: 347, baseType: !5220)
!5220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5221, size: 32)
!5221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !649, line: 245, size: 1024, elements: !5222)
!5222 = !{!5223, !5281, !5293, !5294, !5295, !5296, !5302, !5315}
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5221, file: !649, line: 247, baseType: !5224, size: 384)
!5224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !649, line: 57, size: 384, elements: !5225)
!5225 = !{!5226, !5250, !5257, !5258, !5259, !5268, !5269, !5270}
!5226 = !DIDerivedType(tag: DW_TAG_member, scope: !5224, file: !649, line: 60, baseType: !5227, size: 64)
!5227 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5224, file: !649, line: 60, size: 64, elements: !5228)
!5228 = !{!5229, !5244}
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5227, file: !649, line: 61, baseType: !5230, size: 64)
!5230 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !5231)
!5231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !5232)
!5232 = !{!5233, !5239}
!5233 = !DIDerivedType(tag: DW_TAG_member, scope: !5231, file: !367, line: 38, baseType: !5234, size: 32)
!5234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5231, file: !367, line: 38, size: 32, elements: !5235)
!5235 = !{!5236, !5238}
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5234, file: !367, line: 39, baseType: !5237, size: 32)
!5237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5231, size: 32)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5234, file: !367, line: 40, baseType: !5237, size: 32)
!5239 = !DIDerivedType(tag: DW_TAG_member, scope: !5231, file: !367, line: 42, baseType: !5240, size: 32, offset: 32)
!5240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5231, file: !367, line: 42, size: 32, elements: !5241)
!5241 = !{!5242, !5243}
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5240, file: !367, line: 43, baseType: !5237, size: 32)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5240, file: !367, line: 44, baseType: !5237, size: 32)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5227, file: !649, line: 62, baseType: !5245, size: 64)
!5245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !674, line: 49, size: 64, elements: !5246)
!5246 = !{!5247}
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5245, file: !674, line: 50, baseType: !5248, size: 64)
!5248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5249, size: 64, elements: !679)
!5249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5245, size: 32)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5224, file: !649, line: 68, baseType: !5251, size: 32, offset: 64)
!5251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5252, size: 32)
!5252 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !5253)
!5253 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !5254)
!5254 = !{!5255}
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5253, file: !363, line: 232, baseType: !5256, size: 64)
!5256 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !5231)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5224, file: !649, line: 71, baseType: !164, size: 8, offset: 96)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5224, file: !649, line: 74, baseType: !164, size: 8, offset: 104)
!5259 = !DIDerivedType(tag: DW_TAG_member, scope: !5224, file: !649, line: 90, baseType: !5260, size: 16, offset: 112)
!5260 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5224, file: !649, line: 90, size: 16, elements: !5261)
!5261 = !{!5262, !5267}
!5262 = !DIDerivedType(tag: DW_TAG_member, scope: !5260, file: !649, line: 91, baseType: !5263, size: 16)
!5263 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5260, file: !649, line: 91, size: 16, elements: !5264)
!5264 = !{!5265, !5266}
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5263, file: !649, line: 96, baseType: !697, size: 8)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5263, file: !649, line: 97, baseType: !164, size: 8, offset: 8)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5260, file: !649, line: 100, baseType: !168, size: 16)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5224, file: !649, line: 107, baseType: !113, size: 32, offset: 128)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5224, file: !649, line: 127, baseType: !104, size: 32, offset: 160)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5224, file: !649, line: 131, baseType: !5271, size: 192, offset: 192)
!5271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !5272)
!5272 = !{!5273, !5274, !5280}
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5271, file: !363, line: 245, baseType: !5230, size: 64)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5271, file: !363, line: 246, baseType: !5275, size: 32, offset: 64)
!5275 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !5276)
!5276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5277, size: 32)
!5277 = !DISubroutineType(types: !5278)
!5278 = !{null, !5279}
!5279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5271, size: 32)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5271, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5221, file: !649, line: 250, baseType: !5282, size: 288, offset: 384)
!5282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !716, line: 25, size: 288, elements: !5283)
!5283 = !{!5284, !5285, !5286, !5287, !5288, !5289, !5290, !5291, !5292}
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5282, file: !716, line: 26, baseType: !113, size: 32)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5282, file: !716, line: 27, baseType: !113, size: 32, offset: 32)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5282, file: !716, line: 28, baseType: !113, size: 32, offset: 64)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5282, file: !716, line: 29, baseType: !113, size: 32, offset: 96)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5282, file: !716, line: 30, baseType: !113, size: 32, offset: 128)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5282, file: !716, line: 31, baseType: !113, size: 32, offset: 160)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5282, file: !716, line: 32, baseType: !113, size: 32, offset: 192)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5282, file: !716, line: 33, baseType: !113, size: 32, offset: 224)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5282, file: !716, line: 34, baseType: !113, size: 32, offset: 256)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5221, file: !649, line: 253, baseType: !104, size: 32, offset: 672)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5221, file: !649, line: 256, baseType: !5252, size: 64, offset: 704)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5221, file: !649, line: 294, baseType: !108, size: 32, offset: 768)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5221, file: !649, line: 300, baseType: !5297, size: 96, offset: 800)
!5297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !649, line: 149, size: 96, elements: !5298)
!5298 = !{!5299, !5300, !5301}
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5297, file: !649, line: 153, baseType: !22, size: 32)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5297, file: !649, line: 162, baseType: !439, size: 32, offset: 32)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5297, file: !649, line: 168, baseType: !439, size: 32, offset: 64)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5221, file: !649, line: 325, baseType: !5303, size: 32, offset: 896)
!5303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5304, size: 32)
!5304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !5305)
!5305 = !{!5306, !5312, !5313}
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5304, file: !359, line: 5074, baseType: !5307, size: 96)
!5307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !742, line: 56, size: 96, elements: !5308)
!5308 = !{!5309, !5310, !5311}
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5307, file: !742, line: 57, baseType: !745, size: 32)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5307, file: !742, line: 58, baseType: !104, size: 32, offset: 32)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5307, file: !742, line: 59, baseType: !439, size: 32, offset: 64)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5304, file: !359, line: 5075, baseType: !5252, size: 64, offset: 96)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5304, file: !359, line: 5076, baseType: !5314, offset: 160)
!5314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5221, file: !649, line: 343, baseType: !5316, size: 64, offset: 928)
!5316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !716, line: 60, size: 64, elements: !5317)
!5317 = !{!5318, !5319}
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5316, file: !716, line: 63, baseType: !113, size: 32)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5316, file: !716, line: 66, baseType: !113, size: 32, offset: 32)
!5320 = !DILocation(line: 535, column: 9, scope: !5216)
!5321 = !DILocation(line: 535, column: 2, scope: !5216)
!5322 = distinct !DISubprogram(name: "k_thread_abort", scope: !3831, file: !3831, line: 188, type: !5323, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2854, retainedNodes: !5325)
!5323 = !DISubroutineType(types: !5324)
!5324 = !{null, !5219}
!5325 = !{!5326}
!5326 = !DILocalVariable(name: "thread", arg: 1, scope: !5322, file: !3831, line: 188, type: !5219)
!5327 = !DILocation(line: 0, scope: !5322)
!5328 = !DILocation(line: 197, column: 2, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5322, file: !3831, line: 197, column: 2)
!5330 = !{i64 2154164287}
!5331 = !DILocation(line: 198, column: 2, scope: !5322)
!5332 = !DILocation(line: 199, column: 1, scope: !5322)
!5333 = distinct !DISubprogram(name: "z_current_get", scope: !3831, file: !3831, line: 173, type: !5217, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2854, retainedNodes: !437)
!5334 = !DILocation(line: 180, column: 2, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5333, file: !3831, line: 180, column: 2)
!5336 = !{i64 2154164219}
!5337 = !DILocation(line: 181, column: 9, scope: !5333)
!5338 = !DILocation(line: 181, column: 2, scope: !5333)
!5339 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2860, file: !2860, line: 1338, type: !5340, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !5348)
!5340 = !DISubroutineType(types: !5341)
!5341 = !{!108, !4531, !104, !105, !5342, !113}
!5342 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4170, line: 99, baseType: !5343)
!5343 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4170, line: 40, baseType: !5344)
!5344 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2860, baseType: !5345)
!5345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5346)
!5346 = !{!5347}
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5345, file: !2860, baseType: !104, size: 32)
!5348 = !{!5349, !5350, !5351, !5352, !5353, !5354, !5358, !5359, !5360, !5362, !5367, !5410, !5413, !5416, !5417, !5418, !5419, !5420, !5421, !5422, !5425, !5426, !5427, !5431, !5434, !5436, !5439, !5440, !5441, !5446, !5452, !5455, !5459, !5465, !5469, !5472, !5474, !5477}
!5349 = !DILocalVariable(name: "out", arg: 1, scope: !5339, file: !2860, line: 1338, type: !4531)
!5350 = !DILocalVariable(name: "ctx", arg: 2, scope: !5339, file: !2860, line: 1338, type: !104)
!5351 = !DILocalVariable(name: "fp", arg: 3, scope: !5339, file: !2860, line: 1338, type: !105)
!5352 = !DILocalVariable(name: "ap", arg: 4, scope: !5339, file: !2860, line: 1339, type: !5342)
!5353 = !DILocalVariable(name: "flags", arg: 5, scope: !5339, file: !2860, line: 1339, type: !113)
!5354 = !DILocalVariable(name: "buf", scope: !5339, file: !2860, line: 1341, type: !5355)
!5355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 176, elements: !5356)
!5356 = !{!5357}
!5357 = !DISubrange(count: 22)
!5358 = !DILocalVariable(name: "count", scope: !5339, file: !2860, line: 1342, type: !439)
!5359 = !DILocalVariable(name: "sint", scope: !5339, file: !2860, line: 1343, type: !2879)
!5360 = !DILocalVariable(name: "tagged_ap", scope: !5339, file: !2860, line: 1345, type: !5361)
!5361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !422)
!5362 = !DILocalVariable(name: "rc", scope: !5363, file: !2860, line: 1377, type: !108)
!5363 = distinct !DILexicalBlock(scope: !5364, file: !2860, line: 1377, column: 4)
!5364 = distinct !DILexicalBlock(scope: !5365, file: !2860, line: 1376, column: 19)
!5365 = distinct !DILexicalBlock(scope: !5366, file: !2860, line: 1376, column: 7)
!5366 = distinct !DILexicalBlock(scope: !5339, file: !2860, line: 1375, column: 19)
!5367 = !DILocalVariable(name: "state", scope: !5366, file: !2860, line: 1395, type: !5368)
!5368 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5339, file: !2860, line: 1392, size: 192, elements: !5369)
!5369 = !{!5370, !5378}
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5368, file: !2860, line: 1393, baseType: !5371, size: 64)
!5371 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2860, line: 166, size: 64, elements: !5372)
!5372 = !{!5373, !5374, !5375, !5376, !5377}
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5371, file: !2860, line: 168, baseType: !2879, size: 64)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5371, file: !2860, line: 171, baseType: !2882, size: 64)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5371, file: !2860, line: 174, baseType: !540, size: 64)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5371, file: !2860, line: 177, baseType: !538, size: 64)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5371, file: !2860, line: 180, baseType: !104, size: 32)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5368, file: !2860, line: 1394, baseType: !5379, size: 96, offset: 64)
!5379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2860, line: 189, size: 96, elements: !5380)
!5380 = !{!5381, !5382, !5383, !5384, !5385, !5386, !5387, !5388, !5389, !5390, !5391, !5392, !5393, !5394, !5395, !5396, !5397, !5398, !5399, !5400, !5405}
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5379, file: !2860, line: 191, baseType: !422, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5379, file: !2860, line: 194, baseType: !422, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5379, file: !2860, line: 197, baseType: !422, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5379, file: !2860, line: 200, baseType: !422, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5379, file: !2860, line: 203, baseType: !422, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5379, file: !2860, line: 206, baseType: !422, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5379, file: !2860, line: 209, baseType: !422, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5379, file: !2860, line: 212, baseType: !422, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5379, file: !2860, line: 219, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5379, file: !2860, line: 222, baseType: !422, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5379, file: !2860, line: 229, baseType: !422, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5379, file: !2860, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5379, file: !2860, line: 238, baseType: !422, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5379, file: !2860, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5379, file: !2860, line: 244, baseType: !422, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5379, file: !2860, line: 247, baseType: !422, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5379, file: !2860, line: 252, baseType: !422, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5379, file: !2860, line: 257, baseType: !422, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5379, file: !2860, line: 260, baseType: !165, size: 8, offset: 24)
!5400 = !DIDerivedType(tag: DW_TAG_member, scope: !5379, file: !2860, line: 262, baseType: !5401, size: 32, offset: 32)
!5401 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5379, file: !2860, line: 262, size: 32, elements: !5402)
!5402 = !{!5403, !5404}
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5401, file: !2860, line: 267, baseType: !108, size: 32)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5401, file: !2860, line: 289, baseType: !108, size: 32)
!5405 = !DIDerivedType(tag: DW_TAG_member, scope: !5379, file: !2860, line: 292, baseType: !5406, size: 32, offset: 64)
!5406 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5379, file: !2860, line: 292, size: 32, elements: !5407)
!5407 = !{!5408, !5409}
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5406, file: !2860, line: 297, baseType: !108, size: 32)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5406, file: !2860, line: 306, baseType: !108, size: 32)
!5410 = !DILocalVariable(name: "conv", scope: !5366, file: !2860, line: 1400, type: !5411)
!5411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5412)
!5412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5379, size: 32)
!5413 = !DILocalVariable(name: "value", scope: !5366, file: !2860, line: 1401, type: !5414)
!5414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5415)
!5415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5371, size: 32)
!5416 = !DILocalVariable(name: "sp", scope: !5366, file: !2860, line: 1402, type: !105)
!5417 = !DILocalVariable(name: "width", scope: !5366, file: !2860, line: 1403, type: !108)
!5418 = !DILocalVariable(name: "precision", scope: !5366, file: !2860, line: 1404, type: !108)
!5419 = !DILocalVariable(name: "bps", scope: !5366, file: !2860, line: 1405, type: !105)
!5420 = !DILocalVariable(name: "bpe", scope: !5366, file: !2860, line: 1406, type: !105)
!5421 = !DILocalVariable(name: "sign", scope: !5366, file: !2860, line: 1407, type: !107)
!5422 = !DILocalVariable(name: "arg", scope: !5423, file: !2860, line: 1432, type: !108)
!5423 = distinct !DILexicalBlock(scope: !5424, file: !2860, line: 1431, column: 24)
!5424 = distinct !DILexicalBlock(scope: !5366, file: !2860, line: 1431, column: 7)
!5425 = !DILocalVariable(name: "specifier_cat", scope: !5366, file: !2860, line: 1468, type: !2859)
!5426 = !DILocalVariable(name: "length_mod", scope: !5366, file: !2860, line: 1470, type: !2867)
!5427 = !DILocalVariable(name: "rc", scope: !5428, file: !2860, line: 1575, type: !108)
!5428 = distinct !DILexicalBlock(scope: !5429, file: !2860, line: 1575, column: 4)
!5429 = distinct !DILexicalBlock(scope: !5430, file: !2860, line: 1574, column: 43)
!5430 = distinct !DILexicalBlock(scope: !5366, file: !2860, line: 1574, column: 7)
!5431 = !DILocalVariable(name: "rc", scope: !5432, file: !2860, line: 1584, type: !108)
!5432 = distinct !DILexicalBlock(scope: !5433, file: !2860, line: 1584, column: 4)
!5433 = distinct !DILexicalBlock(scope: !5366, file: !2860, line: 1582, column: 28)
!5434 = !DILocalVariable(name: "len", scope: !5435, file: !2860, line: 1589, type: !439)
!5435 = distinct !DILexicalBlock(scope: !5433, file: !2860, line: 1586, column: 13)
!5436 = !DILocalVariable(name: "len", scope: !5437, file: !2860, line: 1641, type: !439)
!5437 = distinct !DILexicalBlock(scope: !5438, file: !2860, line: 1640, column: 24)
!5438 = distinct !DILexicalBlock(scope: !5433, file: !2860, line: 1640, column: 8)
!5439 = !DILocalVariable(name: "nj_len", scope: !5366, file: !2860, line: 1722, type: !439)
!5440 = !DILocalVariable(name: "pad_len", scope: !5366, file: !2860, line: 1723, type: !108)
!5441 = !DILocalVariable(name: "pad", scope: !5442, file: !2860, line: 1751, type: !107)
!5442 = distinct !DILexicalBlock(scope: !5443, file: !2860, line: 1750, column: 26)
!5443 = distinct !DILexicalBlock(scope: !5444, file: !2860, line: 1750, column: 8)
!5444 = distinct !DILexicalBlock(scope: !5445, file: !2860, line: 1747, column: 18)
!5445 = distinct !DILexicalBlock(scope: !5366, file: !2860, line: 1747, column: 7)
!5446 = !DILocalVariable(name: "rc", scope: !5447, file: !2860, line: 1758, type: !108)
!5447 = distinct !DILexicalBlock(scope: !5448, file: !2860, line: 1758, column: 7)
!5448 = distinct !DILexicalBlock(scope: !5449, file: !2860, line: 1757, column: 21)
!5449 = distinct !DILexicalBlock(scope: !5450, file: !2860, line: 1757, column: 10)
!5450 = distinct !DILexicalBlock(scope: !5451, file: !2860, line: 1756, column: 26)
!5451 = distinct !DILexicalBlock(scope: !5442, file: !2860, line: 1756, column: 9)
!5452 = !DILocalVariable(name: "rc", scope: !5453, file: !2860, line: 1765, type: !108)
!5453 = distinct !DILexicalBlock(scope: !5454, file: !2860, line: 1765, column: 6)
!5454 = distinct !DILexicalBlock(scope: !5442, file: !2860, line: 1764, column: 25)
!5455 = !DILocalVariable(name: "rc", scope: !5456, file: !2860, line: 1774, type: !108)
!5456 = distinct !DILexicalBlock(scope: !5457, file: !2860, line: 1774, column: 4)
!5457 = distinct !DILexicalBlock(scope: !5458, file: !2860, line: 1773, column: 18)
!5458 = distinct !DILexicalBlock(scope: !5366, file: !2860, line: 1773, column: 7)
!5459 = !DILocalVariable(name: "rc", scope: !5460, file: !2860, line: 1819, type: !108)
!5460 = distinct !DILexicalBlock(scope: !5461, file: !2860, line: 1819, column: 5)
!5461 = distinct !DILexicalBlock(scope: !5462, file: !2860, line: 1818, column: 44)
!5462 = distinct !DILexicalBlock(scope: !5463, file: !2860, line: 1818, column: 8)
!5463 = distinct !DILexicalBlock(scope: !5464, file: !2860, line: 1817, column: 10)
!5464 = distinct !DILexicalBlock(scope: !5366, file: !2860, line: 1777, column: 7)
!5465 = !DILocalVariable(name: "rc", scope: !5466, file: !2860, line: 1823, type: !108)
!5466 = distinct !DILexicalBlock(scope: !5467, file: !2860, line: 1823, column: 5)
!5467 = distinct !DILexicalBlock(scope: !5468, file: !2860, line: 1822, column: 26)
!5468 = distinct !DILexicalBlock(scope: !5463, file: !2860, line: 1822, column: 8)
!5469 = !DILocalVariable(name: "rc", scope: !5470, file: !2860, line: 1828, type: !108)
!5470 = distinct !DILexicalBlock(scope: !5471, file: !2860, line: 1828, column: 5)
!5471 = distinct !DILexicalBlock(scope: !5463, file: !2860, line: 1827, column: 26)
!5472 = !DILocalVariable(name: "rc", scope: !5473, file: !2860, line: 1831, type: !108)
!5473 = distinct !DILexicalBlock(scope: !5463, file: !2860, line: 1831, column: 4)
!5474 = !DILocalVariable(name: "rc", scope: !5475, file: !2860, line: 1836, type: !108)
!5475 = distinct !DILexicalBlock(scope: !5476, file: !2860, line: 1836, column: 4)
!5476 = distinct !DILexicalBlock(scope: !5366, file: !2860, line: 1835, column: 21)
!5477 = !DILabel(scope: !5433, name: "prec_int_pad0", file: !2860, line: 1634)
!5478 = !DILocation(line: 0, scope: !5339)
!5479 = !DILocation(line: 1341, column: 2, scope: !5339)
!5480 = !DILocation(line: 1341, column: 7, scope: !5339)
!5481 = !DILocation(line: 1375, column: 2, scope: !5339)
!5482 = !DILocation(line: 1342, column: 9, scope: !5339)
!5483 = !DILocation(line: 1375, column: 9, scope: !5339)
!5484 = !DILocation(line: 1377, column: 4, scope: !5363)
!5485 = !DILocation(line: 0, scope: !5363)
!5486 = !DILocation(line: 1377, column: 4, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5363, file: !2860, line: 1377, column: 4)
!5488 = distinct !{!5488, !5481, !5489}
!5489 = !DILocation(line: 1839, column: 2, scope: !5339)
!5490 = !DILocation(line: 1392, column: 3, scope: !5366)
!5491 = !DILocation(line: 1395, column: 5, scope: !5366)
!5492 = !DILocation(line: 0, scope: !5366)
!5493 = !DILocation(line: 1409, column: 8, scope: !5366)
!5494 = !DILocation(line: 1414, column: 13, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5366, file: !2860, line: 1414, column: 7)
!5496 = !DILocation(line: 1414, column: 7, scope: !5366)
!5497 = !DILocation(line: 1415, column: 12, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5495, file: !2860, line: 1414, column: 25)
!5499 = !DILocation(line: 1417, column: 14, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5498, file: !2860, line: 1417, column: 8)
!5501 = !DILocation(line: 1417, column: 8, scope: !5498)
!5502 = !DILocation(line: 1418, column: 21, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5500, file: !2860, line: 1417, column: 19)
!5504 = !DILocation(line: 1419, column: 13, scope: !5503)
!5505 = !DILocation(line: 1420, column: 4, scope: !5503)
!5506 = !DILocation(line: 1421, column: 20, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5495, file: !2860, line: 1421, column: 14)
!5508 = !DILocation(line: 1421, column: 14, scope: !5495)
!5509 = !DILocation(line: 1431, column: 13, scope: !5424)
!5510 = !DILocation(line: 1431, column: 7, scope: !5366)
!5511 = !DILocation(line: 1432, column: 14, scope: !5423)
!5512 = !DILocation(line: 0, scope: !5423)
!5513 = !DILocation(line: 1434, column: 12, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5423, file: !2860, line: 1434, column: 8)
!5515 = !DILocation(line: 1434, column: 8, scope: !5423)
!5516 = !DILocation(line: 1435, column: 24, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5514, file: !2860, line: 1434, column: 17)
!5518 = !DILocation(line: 1436, column: 4, scope: !5517)
!5519 = !DILocation(line: 1439, column: 20, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5424, file: !2860, line: 1439, column: 14)
!5521 = !DILocation(line: 1439, column: 14, scope: !5424)
!5522 = !DILocation(line: 1469, column: 37, scope: !5366)
!5523 = !DILocation(line: 1448, column: 20, scope: !5366)
!5524 = !DILocation(line: 1449, column: 22, scope: !5366)
!5525 = !DILocation(line: 1471, column: 34, scope: !5366)
!5526 = !DILocation(line: 1478, column: 7, scope: !5366)
!5527 = !DILocation(line: 1479, column: 4, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5529, file: !2860, line: 1478, column: 40)
!5529 = distinct !DILexicalBlock(scope: !5366, file: !2860, line: 1478, column: 7)
!5530 = !DILocation(line: 1484, column: 19, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5528, file: !2860, line: 1479, column: 24)
!5532 = !DILocation(line: 1484, column: 17, scope: !5531)
!5533 = !DILocation(line: 1485, column: 5, scope: !5531)
!5534 = !DILocation(line: 1492, column: 20, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5536, file: !2860, line: 1491, column: 12)
!5536 = distinct !DILexicalBlock(scope: !5531, file: !2860, line: 1487, column: 9)
!5537 = !DILocation(line: 1492, column: 18, scope: !5535)
!5538 = !DILocation(line: 1494, column: 5, scope: !5531)
!5539 = !DILocation(line: 1497, column: 23, scope: !5531)
!5540 = !DILocation(line: 1496, column: 17, scope: !5531)
!5541 = !DILocation(line: 1498, column: 5, scope: !5531)
!5542 = !DILocation(line: 1501, column: 23, scope: !5531)
!5543 = !DILocation(line: 1500, column: 17, scope: !5531)
!5544 = !DILocation(line: 1502, column: 5, scope: !5531)
!5545 = !DILocation(line: 1513, column: 23, scope: !5531)
!5546 = !DILocation(line: 1513, column: 6, scope: !5531)
!5547 = !DILocation(line: 1512, column: 17, scope: !5531)
!5548 = !DILocation(line: 1514, column: 5, scope: !5531)
!5549 = !DILocation(line: 0, scope: !5531)
!5550 = !DILocation(line: 1516, column: 8, scope: !5528)
!5551 = !DILocation(line: 1517, column: 19, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5553, file: !2860, line: 1516, column: 33)
!5553 = distinct !DILexicalBlock(scope: !5528, file: !2860, line: 1516, column: 8)
!5554 = !DILocation(line: 1517, column: 17, scope: !5552)
!5555 = !DILocation(line: 1518, column: 4, scope: !5552)
!5556 = !DILocation(line: 1519, column: 19, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5558, file: !2860, line: 1518, column: 39)
!5558 = distinct !DILexicalBlock(scope: !5553, file: !2860, line: 1518, column: 15)
!5559 = !DILocation(line: 1519, column: 17, scope: !5557)
!5560 = !DILocation(line: 1520, column: 4, scope: !5557)
!5561 = !DILocation(line: 1522, column: 4, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5563, file: !2860, line: 1521, column: 47)
!5563 = distinct !DILexicalBlock(scope: !5529, file: !2860, line: 1521, column: 14)
!5564 = !DILocation(line: 1527, column: 19, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5562, file: !2860, line: 1522, column: 24)
!5566 = !DILocation(line: 1527, column: 17, scope: !5565)
!5567 = !DILocation(line: 1528, column: 5, scope: !5565)
!5568 = !DILocation(line: 0, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5565, file: !2860, line: 1530, column: 9)
!5570 = !DILocation(line: 1540, column: 23, scope: !5565)
!5571 = !DILocation(line: 1539, column: 17, scope: !5565)
!5572 = !DILocation(line: 1542, column: 5, scope: !5565)
!5573 = !DILocation(line: 1545, column: 23, scope: !5565)
!5574 = !DILocation(line: 1544, column: 17, scope: !5565)
!5575 = !DILocation(line: 1547, column: 5, scope: !5565)
!5576 = !DILocation(line: 1551, column: 23, scope: !5565)
!5577 = !DILocation(line: 1551, column: 6, scope: !5565)
!5578 = !DILocation(line: 1550, column: 17, scope: !5565)
!5579 = !DILocation(line: 1552, column: 5, scope: !5565)
!5580 = !DILocation(line: 0, scope: !5565)
!5581 = !DILocation(line: 1554, column: 8, scope: !5562)
!5582 = !DILocation(line: 1555, column: 19, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5584, file: !2860, line: 1554, column: 33)
!5584 = distinct !DILexicalBlock(scope: !5562, file: !2860, line: 1554, column: 8)
!5585 = !DILocation(line: 1555, column: 17, scope: !5583)
!5586 = !DILocation(line: 1556, column: 4, scope: !5583)
!5587 = !DILocation(line: 1557, column: 19, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5589, file: !2860, line: 1556, column: 39)
!5589 = distinct !DILexicalBlock(scope: !5584, file: !2860, line: 1556, column: 15)
!5590 = !DILocation(line: 1557, column: 17, scope: !5588)
!5591 = !DILocation(line: 1558, column: 4, scope: !5588)
!5592 = !DILocation(line: 0, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5594, file: !2860, line: 1560, column: 8)
!5594 = distinct !DILexicalBlock(scope: !5595, file: !2860, line: 1559, column: 45)
!5595 = distinct !DILexicalBlock(scope: !5563, file: !2860, line: 1559, column: 14)
!5596 = !DILocation(line: 1566, column: 17, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5598, file: !2860, line: 1565, column: 46)
!5598 = distinct !DILexicalBlock(scope: !5595, file: !2860, line: 1565, column: 14)
!5599 = !DILocation(line: 1566, column: 15, scope: !5597)
!5600 = !DILocation(line: 1567, column: 3, scope: !5597)
!5601 = !DILocation(line: 1574, column: 21, scope: !5430)
!5602 = !DILocation(line: 1575, column: 4, scope: !5428)
!5603 = !DILocation(line: 0, scope: !5428)
!5604 = !DILocation(line: 1575, column: 4, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5428, file: !2860, line: 1575, column: 4)
!5606 = !DILocation(line: 1582, column: 17, scope: !5366)
!5607 = !DILocation(line: 1582, column: 3, scope: !5366)
!5608 = !DILocation(line: 1584, column: 4, scope: !5432)
!5609 = !DILocation(line: 0, scope: !5432)
!5610 = !DILocation(line: 1584, column: 4, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5432, file: !2860, line: 1584, column: 4)
!5612 = !DILocation(line: 1587, column: 31, scope: !5435)
!5613 = !DILocation(line: 1591, column: 18, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5435, file: !2860, line: 1591, column: 8)
!5615 = !DILocation(line: 1591, column: 8, scope: !5435)
!5616 = !DILocation(line: 1592, column: 11, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5614, file: !2860, line: 1591, column: 24)
!5618 = !DILocation(line: 0, scope: !5435)
!5619 = !DILocation(line: 1593, column: 4, scope: !5617)
!5620 = !DILocation(line: 1594, column: 11, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5614, file: !2860, line: 1593, column: 11)
!5622 = !DILocation(line: 1604, column: 51, scope: !5433)
!5623 = !DILocation(line: 1604, column: 13, scope: !5433)
!5624 = !DILocation(line: 1604, column: 11, scope: !5433)
!5625 = !DILocation(line: 1606, column: 4, scope: !5433)
!5626 = !DILocation(line: 1609, column: 14, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5433, file: !2860, line: 1609, column: 8)
!5628 = !DILocation(line: 1609, column: 8, scope: !5433)
!5629 = !DILocation(line: 1619, column: 18, scope: !5433)
!5630 = !DILocation(line: 1620, column: 13, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5433, file: !2860, line: 1620, column: 8)
!5632 = !DILocation(line: 1620, column: 8, scope: !5433)
!5633 = !DILocation(line: 1622, column: 36, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5631, file: !2860, line: 1620, column: 18)
!5635 = !DILocation(line: 1622, column: 17, scope: !5634)
!5636 = !DILocation(line: 1623, column: 4, scope: !5634)
!5637 = !DILocation(line: 1632, column: 29, scope: !5433)
!5638 = !DILocation(line: 1632, column: 10, scope: !5433)
!5639 = !DILocation(line: 1632, column: 4, scope: !5433)
!5640 = !DILocation(line: 1407, column: 8, scope: !5366)
!5641 = !DILocation(line: 0, scope: !5433)
!5642 = !DILocation(line: 1634, column: 3, scope: !5433)
!5643 = !DILocation(line: 1640, column: 18, scope: !5438)
!5644 = !DILocation(line: 1640, column: 8, scope: !5433)
!5645 = !DILocation(line: 1729, column: 13, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5366, file: !2860, line: 1729, column: 7)
!5647 = !DILocation(line: 1641, column: 22, scope: !5437)
!5648 = !DILocation(line: 0, scope: !5437)
!5649 = !DILocation(line: 1646, column: 21, scope: !5437)
!5650 = !DILocation(line: 1649, column: 13, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5437, file: !2860, line: 1649, column: 9)
!5652 = !DILocation(line: 1649, column: 9, scope: !5437)
!5653 = !DILocation(line: 1650, column: 35, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5651, file: !2860, line: 1649, column: 34)
!5655 = !DILocation(line: 1650, column: 23, scope: !5654)
!5656 = !DILocation(line: 1651, column: 5, scope: !5654)
!5657 = !DILocation(line: 1660, column: 15, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5433, file: !2860, line: 1660, column: 8)
!5659 = !DILocation(line: 1660, column: 19, scope: !5658)
!5660 = !DILocation(line: 1660, column: 8, scope: !5433)
!5661 = !DILocation(line: 1661, column: 23, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5658, file: !2860, line: 1660, column: 28)
!5663 = !DILocation(line: 1661, column: 11, scope: !5662)
!5664 = !DILocation(line: 1665, column: 22, scope: !5662)
!5665 = !DILocation(line: 1666, column: 21, scope: !5662)
!5666 = !DILocation(line: 1668, column: 5, scope: !5662)
!5667 = !DILocation(line: 1677, column: 30, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5669, file: !2860, line: 1676, column: 49)
!5669 = distinct !DILexicalBlock(scope: !5433, file: !2860, line: 1676, column: 8)
!5670 = !DILocation(line: 1677, column: 5, scope: !5668)
!5671 = !DILocation(line: 1680, column: 4, scope: !5433)
!5672 = !DILocation(line: 0, scope: !5614)
!5673 = !DILocation(line: 1597, column: 14, scope: !5435)
!5674 = !DILocation(line: 1699, column: 11, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5366, file: !2860, line: 1699, column: 7)
!5676 = !DILocation(line: 1699, column: 7, scope: !5366)
!5677 = !DILocation(line: 1725, column: 7, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5366, file: !2860, line: 1725, column: 7)
!5679 = !DILocation(line: 1725, column: 12, scope: !5678)
!5680 = !DILocation(line: 1747, column: 13, scope: !5445)
!5681 = !DILocation(line: 1747, column: 7, scope: !5366)
!5682 = !DILocation(line: 1722, column: 24, scope: !5366)
!5683 = !DILocation(line: 1725, column: 7, scope: !5366)
!5684 = !DILocation(line: 1729, column: 7, scope: !5366)
!5685 = !DILocation(line: 1736, column: 13, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5366, file: !2860, line: 1736, column: 7)
!5687 = !DILocation(line: 1735, column: 19, scope: !5366)
!5688 = !DILocation(line: 1736, column: 7, scope: !5366)
!5689 = !DILocation(line: 1748, column: 10, scope: !5444)
!5690 = !DILocation(line: 1750, column: 15, scope: !5443)
!5691 = !DILocation(line: 1750, column: 8, scope: !5444)
!5692 = !DILocation(line: 0, scope: !5442)
!5693 = !DILocation(line: 1756, column: 15, scope: !5451)
!5694 = !DILocation(line: 1756, column: 9, scope: !5442)
!5695 = !DILocation(line: 1758, column: 7, scope: !5447)
!5696 = !DILocation(line: 0, scope: !5447)
!5697 = !DILocation(line: 1758, column: 7, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5447, file: !2860, line: 1758, column: 7)
!5699 = !DILocation(line: 1764, column: 5, scope: !5442)
!5700 = !DILocation(line: 0, scope: !5444)
!5701 = !DILocation(line: 1764, column: 20, scope: !5442)
!5702 = !DILocation(line: 1764, column: 17, scope: !5442)
!5703 = !DILocation(line: 1765, column: 6, scope: !5453)
!5704 = !DILocation(line: 0, scope: !5453)
!5705 = !DILocation(line: 1765, column: 6, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5453, file: !2860, line: 1765, column: 6)
!5707 = distinct !{!5707, !5699, !5708}
!5708 = !DILocation(line: 1766, column: 5, scope: !5442)
!5709 = !DILocation(line: 1773, column: 12, scope: !5458)
!5710 = !DILocation(line: 1773, column: 7, scope: !5366)
!5711 = !DILocation(line: 1773, column: 7, scope: !5458)
!5712 = !DILocation(line: 1774, column: 4, scope: !5456)
!5713 = !DILocation(line: 0, scope: !5456)
!5714 = !DILocation(line: 1774, column: 4, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5456, file: !2860, line: 1774, column: 4)
!5716 = !DILocation(line: 1818, column: 8, scope: !5462)
!5717 = !DILocation(line: 1818, column: 27, scope: !5462)
!5718 = !DILocation(line: 1818, column: 25, scope: !5462)
!5719 = !DILocation(line: 1818, column: 8, scope: !5463)
!5720 = !DILocation(line: 1819, column: 5, scope: !5460)
!5721 = !DILocation(line: 0, scope: !5460)
!5722 = !DILocation(line: 1819, column: 5, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5460, file: !2860, line: 1819, column: 5)
!5724 = !DILocation(line: 1822, column: 14, scope: !5468)
!5725 = !DILocation(line: 1822, column: 8, scope: !5463)
!5726 = !DILocation(line: 1823, column: 5, scope: !5466)
!5727 = !DILocation(line: 0, scope: !5466)
!5728 = !DILocation(line: 1823, column: 5, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5466, file: !2860, line: 1823, column: 5)
!5730 = !DILocation(line: 1826, column: 20, scope: !5463)
!5731 = !DILocation(line: 1827, column: 4, scope: !5463)
!5732 = !DILocation(line: 0, scope: !5463)
!5733 = !DILocation(line: 1827, column: 21, scope: !5463)
!5734 = !DILocation(line: 1827, column: 18, scope: !5463)
!5735 = !DILocation(line: 1828, column: 5, scope: !5470)
!5736 = !DILocation(line: 0, scope: !5470)
!5737 = !DILocation(line: 1828, column: 5, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5470, file: !2860, line: 1828, column: 5)
!5739 = distinct !{!5739, !5731, !5740}
!5740 = !DILocation(line: 1829, column: 4, scope: !5463)
!5741 = !DILocation(line: 1831, column: 4, scope: !5473)
!5742 = !DILocation(line: 0, scope: !5473)
!5743 = !DILocation(line: 1831, column: 4, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5473, file: !2860, line: 1831, column: 4)
!5745 = !DILocation(line: 1835, column: 16, scope: !5366)
!5746 = !DILocation(line: 1835, column: 3, scope: !5366)
!5747 = !DILocation(line: 1836, column: 4, scope: !5475)
!5748 = !DILocation(line: 0, scope: !5475)
!5749 = !DILocation(line: 1836, column: 4, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5475, file: !2860, line: 1836, column: 4)
!5751 = !DILocation(line: 1837, column: 4, scope: !5476)
!5752 = distinct !{!5752, !5746, !5753}
!5753 = !DILocation(line: 1838, column: 3, scope: !5366)
!5754 = !DILocation(line: 1844, column: 1, scope: !5339)
!5755 = distinct !DISubprogram(name: "extract_conversion", scope: !2860, file: !2860, line: 642, type: !5756, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !5758)
!5756 = !DISubroutineType(types: !5757)
!5757 = !{!105, !5412, !105}
!5758 = !{!5759, !5760}
!5759 = !DILocalVariable(name: "conv", arg: 1, scope: !5755, file: !2860, line: 642, type: !5412)
!5760 = !DILocalVariable(name: "sp", arg: 2, scope: !5755, file: !2860, line: 643, type: !105)
!5761 = !DILocation(line: 0, scope: !5755)
!5762 = !DILocation(line: 645, column: 10, scope: !5755)
!5763 = !DILocation(line: 653, column: 2, scope: !5755)
!5764 = !DILocation(line: 654, column: 6, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5755, file: !2860, line: 654, column: 6)
!5766 = !DILocation(line: 654, column: 10, scope: !5765)
!5767 = !DILocation(line: 654, column: 6, scope: !5755)
!5768 = !DILocation(line: 655, column: 24, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5765, file: !2860, line: 654, column: 18)
!5770 = !DILocation(line: 655, column: 19, scope: !5769)
!5771 = !DILocation(line: 656, column: 3, scope: !5769)
!5772 = !DILocation(line: 659, column: 7, scope: !5755)
!5773 = !DILocation(line: 660, column: 7, scope: !5755)
!5774 = !DILocation(line: 661, column: 7, scope: !5755)
!5775 = !DILocation(line: 662, column: 7, scope: !5755)
!5776 = !DILocation(line: 663, column: 7, scope: !5755)
!5777 = !DILocation(line: 665, column: 2, scope: !5755)
!5778 = !DILocation(line: 666, column: 1, scope: !5755)
!5779 = distinct !DISubprogram(name: "outs", scope: !2860, file: !2860, line: 1319, type: !5780, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !5782)
!5780 = !DISubroutineType(types: !5781)
!5781 = !{!108, !4531, !104, !105, !105}
!5782 = !{!5783, !5784, !5785, !5786, !5787, !5788}
!5783 = !DILocalVariable(name: "out", arg: 1, scope: !5779, file: !2860, line: 1319, type: !4531)
!5784 = !DILocalVariable(name: "ctx", arg: 2, scope: !5779, file: !2860, line: 1320, type: !104)
!5785 = !DILocalVariable(name: "sp", arg: 3, scope: !5779, file: !2860, line: 1321, type: !105)
!5786 = !DILocalVariable(name: "ep", arg: 4, scope: !5779, file: !2860, line: 1322, type: !105)
!5787 = !DILocalVariable(name: "count", scope: !5779, file: !2860, line: 1324, type: !439)
!5788 = !DILocalVariable(name: "rc", scope: !5789, file: !2860, line: 1327, type: !108)
!5789 = distinct !DILexicalBlock(scope: !5779, file: !2860, line: 1326, column: 45)
!5790 = !DILocation(line: 0, scope: !5779)
!5791 = !DILocation(line: 1326, column: 2, scope: !5779)
!5792 = !DILocation(line: 1324, column: 9, scope: !5779)
!5793 = !DILocation(line: 1326, column: 13, scope: !5779)
!5794 = !DILocation(line: 1326, column: 19, scope: !5779)
!5795 = !DILocation(line: 1327, column: 21, scope: !5789)
!5796 = !DILocation(line: 1326, column: 36, scope: !5779)
!5797 = !DILocation(line: 1326, column: 39, scope: !5779)
!5798 = !DILocation(line: 1327, column: 24, scope: !5789)
!5799 = !DILocation(line: 1327, column: 16, scope: !5789)
!5800 = !DILocation(line: 1327, column: 12, scope: !5789)
!5801 = !DILocation(line: 0, scope: !5789)
!5802 = !DILocation(line: 1329, column: 10, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5789, file: !2860, line: 1329, column: 7)
!5804 = !DILocation(line: 1329, column: 7, scope: !5789)
!5805 = distinct !{!5805, !5791, !5806}
!5806 = !DILocation(line: 1333, column: 2, scope: !5779)
!5807 = !DILocation(line: 1336, column: 1, scope: !5779)
!5808 = distinct !DISubprogram(name: "encode_uint", scope: !2860, file: !2860, line: 788, type: !5809, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !5811)
!5809 = !DISubroutineType(types: !5810)
!5810 = !{!443, !2882, !5412, !443, !105}
!5811 = !{!5812, !5813, !5814, !5815, !5816, !5817, !5819, !5820}
!5812 = !DILocalVariable(name: "value", arg: 1, scope: !5808, file: !2860, line: 788, type: !2882)
!5813 = !DILocalVariable(name: "conv", arg: 2, scope: !5808, file: !2860, line: 789, type: !5412)
!5814 = !DILocalVariable(name: "bps", arg: 3, scope: !5808, file: !2860, line: 790, type: !443)
!5815 = !DILocalVariable(name: "bpe", arg: 4, scope: !5808, file: !2860, line: 791, type: !105)
!5816 = !DILocalVariable(name: "upcase", scope: !5808, file: !2860, line: 793, type: !422)
!5817 = !DILocalVariable(name: "radix", scope: !5808, file: !2860, line: 794, type: !5818)
!5818 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5819 = !DILocalVariable(name: "bp", scope: !5808, file: !2860, line: 795, type: !443)
!5820 = !DILocalVariable(name: "lsv", scope: !5821, file: !2860, line: 798, type: !32)
!5821 = distinct !DILexicalBlock(scope: !5808, file: !2860, line: 797, column: 5)
!5822 = !DILocation(line: 0, scope: !5808)
!5823 = !DILocation(line: 793, column: 35, scope: !5808)
!5824 = !DILocation(line: 793, column: 24, scope: !5808)
!5825 = !DILocation(line: 793, column: 16, scope: !5808)
!5826 = !DILocation(line: 794, column: 29, scope: !5808)
!5827 = !DILocation(line: 795, column: 24, scope: !5808)
!5828 = !DILocation(line: 795, column: 17, scope: !5808)
!5829 = !DILocation(line: 797, column: 2, scope: !5808)
!5830 = !DILocation(line: 802, column: 9, scope: !5821)
!5831 = !DILocation(line: 798, column: 22, scope: !5821)
!5832 = !DILocation(line: 0, scope: !5821)
!5833 = !DILocation(line: 800, column: 16, scope: !5821)
!5834 = !DILocation(line: 800, column: 11, scope: !5821)
!5835 = !DILocation(line: 800, column: 4, scope: !5821)
!5836 = !DILocation(line: 800, column: 9, scope: !5821)
!5837 = !DILocation(line: 803, column: 18, scope: !5808)
!5838 = !DILocation(line: 803, column: 24, scope: !5808)
!5839 = !DILocation(line: 803, column: 2, scope: !5821)
!5840 = distinct !{!5840, !5829, !5841}
!5841 = !DILocation(line: 803, column: 37, scope: !5808)
!5842 = !DILocation(line: 808, column: 12, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5808, file: !2860, line: 808, column: 6)
!5844 = !DILocation(line: 808, column: 6, scope: !5808)
!5845 = !DILocation(line: 809, column: 7, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5843, file: !2860, line: 808, column: 23)
!5847 = !DILocation(line: 813, column: 3, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5849, file: !2860, line: 811, column: 27)
!5849 = distinct !DILexicalBlock(scope: !5850, file: !2860, line: 811, column: 14)
!5850 = distinct !DILexicalBlock(scope: !5846, file: !2860, line: 809, column: 7)
!5851 = !DILocation(line: 0, scope: !5850)
!5852 = !DILocation(line: 818, column: 2, scope: !5808)
!5853 = distinct !DISubprogram(name: "store_count", scope: !2860, file: !2860, line: 1280, type: !5854, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !5858)
!5854 = !DISubroutineType(types: !5855)
!5855 = !{null, !5856, !104, !108}
!5856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5857, size: 32)
!5857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5379)
!5858 = !{!5859, !5860, !5861}
!5859 = !DILocalVariable(name: "conv", arg: 1, scope: !5853, file: !2860, line: 1280, type: !5856)
!5860 = !DILocalVariable(name: "dp", arg: 2, scope: !5853, file: !2860, line: 1281, type: !104)
!5861 = !DILocalVariable(name: "count", arg: 3, scope: !5853, file: !2860, line: 1282, type: !108)
!5862 = !DILocation(line: 0, scope: !5853)
!5863 = !DILocation(line: 1284, column: 38, scope: !5853)
!5864 = !DILocation(line: 1284, column: 2, scope: !5853)
!5865 = !DILocation(line: 1286, column: 4, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5853, file: !2860, line: 1284, column: 50)
!5867 = !DILocation(line: 1286, column: 14, scope: !5866)
!5868 = !DILocation(line: 1287, column: 3, scope: !5866)
!5869 = !DILocation(line: 1289, column: 24, scope: !5866)
!5870 = !DILocation(line: 1289, column: 22, scope: !5866)
!5871 = !DILocation(line: 1290, column: 3, scope: !5866)
!5872 = !DILocation(line: 1292, column: 18, scope: !5866)
!5873 = !DILocation(line: 1292, column: 4, scope: !5866)
!5874 = !DILocation(line: 1292, column: 16, scope: !5866)
!5875 = !DILocation(line: 1293, column: 3, scope: !5866)
!5876 = !DILocation(line: 1295, column: 4, scope: !5866)
!5877 = !DILocation(line: 1295, column: 15, scope: !5866)
!5878 = !DILocation(line: 1296, column: 3, scope: !5866)
!5879 = !DILocation(line: 1298, column: 22, scope: !5866)
!5880 = !DILocation(line: 1298, column: 4, scope: !5866)
!5881 = !DILocation(line: 1298, column: 20, scope: !5866)
!5882 = !DILocation(line: 1299, column: 3, scope: !5866)
!5883 = !DILocation(line: 1301, column: 21, scope: !5866)
!5884 = !DILocation(line: 1301, column: 4, scope: !5866)
!5885 = !DILocation(line: 1301, column: 19, scope: !5866)
!5886 = !DILocation(line: 1302, column: 3, scope: !5866)
!5887 = !DILocation(line: 1304, column: 4, scope: !5866)
!5888 = !DILocation(line: 1304, column: 17, scope: !5866)
!5889 = !DILocation(line: 1305, column: 3, scope: !5866)
!5890 = !DILocation(line: 1307, column: 4, scope: !5866)
!5891 = !DILocation(line: 1307, column: 20, scope: !5866)
!5892 = !DILocation(line: 1308, column: 3, scope: !5866)
!5893 = !DILocation(line: 1316, column: 1, scope: !5853)
!5894 = distinct !DISubprogram(name: "isupper", scope: !5895, file: !5895, line: 16, type: !561, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !5896)
!5895 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5896 = !{!5897}
!5897 = !DILocalVariable(name: "a", arg: 1, scope: !5894, file: !5895, line: 16, type: !108)
!5898 = !DILocation(line: 0, scope: !5894)
!5899 = !DILocation(line: 18, column: 29, scope: !5894)
!5900 = !DILocation(line: 18, column: 45, scope: !5894)
!5901 = !DILocation(line: 18, column: 2, scope: !5894)
!5902 = distinct !DISubprogram(name: "conversion_radix", scope: !2860, file: !2860, line: 761, type: !5903, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !5905)
!5903 = !DISubroutineType(types: !5904)
!5904 = !{!439, !107}
!5905 = !{!5906}
!5906 = !DILocalVariable(name: "specifier", arg: 1, scope: !5902, file: !2860, line: 761, type: !107)
!5907 = !DILocation(line: 0, scope: !5902)
!5908 = !DILocation(line: 763, column: 2, scope: !5902)
!5909 = !DILocation(line: 770, column: 3, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5902, file: !2860, line: 763, column: 21)
!5911 = !DILocation(line: 774, column: 3, scope: !5910)
!5912 = !DILocation(line: 0, scope: !5910)
!5913 = !DILocation(line: 776, column: 1, scope: !5902)
!5914 = distinct !DISubprogram(name: "extract_flags", scope: !2860, file: !2860, line: 339, type: !5756, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !5915)
!5915 = !{!5916, !5917, !5918}
!5916 = !DILocalVariable(name: "conv", arg: 1, scope: !5914, file: !2860, line: 339, type: !5412)
!5917 = !DILocalVariable(name: "sp", arg: 2, scope: !5914, file: !2860, line: 340, type: !105)
!5918 = !DILocalVariable(name: "loop", scope: !5914, file: !2860, line: 342, type: !422)
!5919 = !DILocation(line: 0, scope: !5914)
!5920 = !DILocation(line: 344, column: 2, scope: !5914)
!5921 = !DILocation(line: 345, column: 11, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5914, file: !2860, line: 344, column: 5)
!5923 = !DILocation(line: 345, column: 3, scope: !5922)
!5924 = !DILocation(line: 351, column: 4, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5922, file: !2860, line: 345, column: 16)
!5926 = !DILocation(line: 354, column: 4, scope: !5925)
!5927 = !DILocation(line: 357, column: 4, scope: !5925)
!5928 = !DILocation(line: 360, column: 4, scope: !5925)
!5929 = !DILocation(line: 0, scope: !5925)
!5930 = !DILocation(line: 370, column: 12, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5914, file: !2860, line: 370, column: 6)
!5932 = !DILocation(line: 370, column: 22, scope: !5931)
!5933 = !DILocation(line: 371, column: 19, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5931, file: !2860, line: 370, column: 42)
!5935 = !DILocation(line: 372, column: 2, scope: !5934)
!5936 = !DILocation(line: 376, column: 2, scope: !5914)
!5937 = distinct !DISubprogram(name: "extract_width", scope: !2860, file: !2860, line: 388, type: !5756, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !5938)
!5938 = !{!5939, !5940, !5941, !5942}
!5939 = !DILocalVariable(name: "conv", arg: 1, scope: !5937, file: !2860, line: 388, type: !5412)
!5940 = !DILocalVariable(name: "sp", arg: 2, scope: !5937, file: !2860, line: 389, type: !105)
!5941 = !DILocalVariable(name: "wp", scope: !5937, file: !2860, line: 398, type: !105)
!5942 = !DILocalVariable(name: "width", scope: !5937, file: !2860, line: 399, type: !439)
!5943 = !DILocation(line: 0, scope: !5937)
!5944 = !DILocation(line: 391, column: 8, scope: !5937)
!5945 = !DILocation(line: 391, column: 22, scope: !5937)
!5946 = !DILocation(line: 393, column: 6, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5937, file: !2860, line: 393, column: 6)
!5948 = !DILocation(line: 393, column: 10, scope: !5947)
!5949 = !DILocation(line: 393, column: 6, scope: !5937)
!5950 = !DILocation(line: 394, column: 20, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5947, file: !2860, line: 393, column: 18)
!5952 = !DILocation(line: 395, column: 10, scope: !5951)
!5953 = !DILocation(line: 395, column: 3, scope: !5951)
!5954 = !DILocation(line: 399, column: 17, scope: !5937)
!5955 = !DILocation(line: 401, column: 6, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5937, file: !2860, line: 401, column: 6)
!5957 = !DILocation(line: 401, column: 9, scope: !5956)
!5958 = !DILocation(line: 401, column: 6, scope: !5937)
!5959 = !DILocation(line: 402, column: 23, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5956, file: !2860, line: 401, column: 16)
!5961 = !DILocation(line: 403, column: 9, scope: !5960)
!5962 = !DILocation(line: 403, column: 21, scope: !5960)
!5963 = !DILocation(line: 405, column: 11, scope: !5960)
!5964 = !DILocation(line: 404, column: 21, scope: !5960)
!5965 = !DILocation(line: 406, column: 2, scope: !5960)
!5966 = !DILocation(line: 409, column: 1, scope: !5937)
!5967 = distinct !DISubprogram(name: "extract_prec", scope: !2860, file: !2860, line: 420, type: !5756, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !5968)
!5968 = !{!5969, !5970, !5971}
!5969 = !DILocalVariable(name: "conv", arg: 1, scope: !5967, file: !2860, line: 420, type: !5412)
!5970 = !DILocalVariable(name: "sp", arg: 2, scope: !5967, file: !2860, line: 421, type: !105)
!5971 = !DILocalVariable(name: "prec", scope: !5967, file: !2860, line: 435, type: !439)
!5972 = !DILocation(line: 0, scope: !5967)
!5973 = !DILocation(line: 423, column: 24, scope: !5967)
!5974 = !DILocation(line: 423, column: 28, scope: !5967)
!5975 = !DILocation(line: 423, column: 8, scope: !5967)
!5976 = !DILocation(line: 423, column: 21, scope: !5967)
!5977 = !DILocation(line: 425, column: 6, scope: !5967)
!5978 = !DILocation(line: 428, column: 2, scope: !5967)
!5979 = !DILocation(line: 430, column: 6, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5967, file: !2860, line: 430, column: 6)
!5981 = !DILocation(line: 430, column: 10, scope: !5980)
!5982 = !DILocation(line: 430, column: 6, scope: !5967)
!5983 = !DILocation(line: 431, column: 19, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5980, file: !2860, line: 430, column: 18)
!5985 = !DILocation(line: 432, column: 10, scope: !5984)
!5986 = !DILocation(line: 432, column: 3, scope: !5984)
!5987 = !DILocation(line: 435, column: 16, scope: !5967)
!5988 = !DILocation(line: 437, column: 8, scope: !5967)
!5989 = !DILocation(line: 437, column: 19, scope: !5967)
!5990 = !DILocation(line: 439, column: 10, scope: !5967)
!5991 = !DILocation(line: 438, column: 20, scope: !5967)
!5992 = !DILocation(line: 441, column: 9, scope: !5967)
!5993 = !DILocation(line: 442, column: 1, scope: !5967)
!5994 = distinct !DISubprogram(name: "extract_length", scope: !2860, file: !2860, line: 453, type: !5756, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !5995)
!5995 = !{!5996, !5997}
!5996 = !DILocalVariable(name: "conv", arg: 1, scope: !5994, file: !2860, line: 453, type: !5412)
!5997 = !DILocalVariable(name: "sp", arg: 2, scope: !5994, file: !2860, line: 454, type: !105)
!5998 = !DILocation(line: 0, scope: !5994)
!5999 = !DILocation(line: 456, column: 10, scope: !5994)
!6000 = !DILocation(line: 456, column: 2, scope: !5994)
!6001 = !DILocation(line: 458, column: 8, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !6003, file: !2860, line: 458, column: 7)
!6003 = distinct !DILexicalBlock(scope: !5994, file: !2860, line: 456, column: 15)
!6004 = !DILocation(line: 458, column: 7, scope: !6002)
!6005 = !DILocation(line: 458, column: 13, scope: !6002)
!6006 = !DILocation(line: 0, scope: !6002)
!6007 = !DILocation(line: 458, column: 7, scope: !6003)
!6008 = !DILocation(line: 459, column: 21, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !6002, file: !2860, line: 458, column: 21)
!6010 = !DILocation(line: 460, column: 4, scope: !6009)
!6011 = !DILocation(line: 461, column: 3, scope: !6009)
!6012 = !DILocation(line: 462, column: 21, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6002, file: !2860, line: 461, column: 10)
!6014 = !DILocation(line: 466, column: 8, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !6003, file: !2860, line: 466, column: 7)
!6016 = !DILocation(line: 466, column: 7, scope: !6015)
!6017 = !DILocation(line: 466, column: 13, scope: !6015)
!6018 = !DILocation(line: 0, scope: !6015)
!6019 = !DILocation(line: 466, column: 7, scope: !6003)
!6020 = !DILocation(line: 467, column: 21, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !6015, file: !2860, line: 466, column: 21)
!6022 = !DILocation(line: 468, column: 4, scope: !6021)
!6023 = !DILocation(line: 469, column: 3, scope: !6021)
!6024 = !DILocation(line: 470, column: 21, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6015, file: !2860, line: 469, column: 10)
!6026 = !DILocation(line: 474, column: 9, scope: !6003)
!6027 = !DILocation(line: 474, column: 20, scope: !6003)
!6028 = !DILocation(line: 475, column: 3, scope: !6003)
!6029 = !DILocation(line: 476, column: 3, scope: !6003)
!6030 = !DILocation(line: 478, column: 9, scope: !6003)
!6031 = !DILocation(line: 478, column: 20, scope: !6003)
!6032 = !DILocation(line: 479, column: 3, scope: !6003)
!6033 = !DILocation(line: 480, column: 3, scope: !6003)
!6034 = !DILocation(line: 482, column: 9, scope: !6003)
!6035 = !DILocation(line: 482, column: 20, scope: !6003)
!6036 = !DILocation(line: 483, column: 3, scope: !6003)
!6037 = !DILocation(line: 484, column: 3, scope: !6003)
!6038 = !DILocation(line: 486, column: 9, scope: !6003)
!6039 = !DILocation(line: 486, column: 20, scope: !6003)
!6040 = !DILocation(line: 487, column: 3, scope: !6003)
!6041 = !DILocation(line: 492, column: 21, scope: !6003)
!6042 = !DILocation(line: 493, column: 3, scope: !6003)
!6043 = !DILocation(line: 495, column: 9, scope: !6003)
!6044 = !DILocation(line: 495, column: 20, scope: !6003)
!6045 = !DILocation(line: 496, column: 3, scope: !6003)
!6046 = !DILocation(line: 498, column: 2, scope: !5994)
!6047 = distinct !DISubprogram(name: "extract_specifier", scope: !2860, file: !2860, line: 513, type: !5756, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !6048)
!6048 = !{!6049, !6050, !6051, !6052}
!6049 = !DILocalVariable(name: "conv", arg: 1, scope: !6047, file: !2860, line: 513, type: !5412)
!6050 = !DILocalVariable(name: "sp", arg: 2, scope: !6047, file: !2860, line: 514, type: !105)
!6051 = !DILocalVariable(name: "unsupported", scope: !6047, file: !2860, line: 516, type: !422)
!6052 = !DILabel(scope: !6053, name: "int_conv", file: !2860, line: 526)
!6053 = distinct !DILexicalBlock(scope: !6047, file: !2860, line: 520, column: 27)
!6054 = !DILocation(line: 0, scope: !6047)
!6055 = !DILocation(line: 518, column: 20, scope: !6047)
!6056 = !DILocation(line: 518, column: 8, scope: !6047)
!6057 = !DILocation(line: 518, column: 18, scope: !6047)
!6058 = !DILocation(line: 520, column: 2, scope: !6047)
!6059 = !DILocation(line: 525, column: 3, scope: !6053)
!6060 = !DILocation(line: 0, scope: !6053)
!6061 = !DILocation(line: 526, column: 1, scope: !6053)
!6062 = !DILocation(line: 528, column: 24, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6053, file: !2860, line: 528, column: 7)
!6064 = !DILocation(line: 528, column: 7, scope: !6053)
!6065 = !DILocation(line: 535, column: 23, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6053, file: !2860, line: 535, column: 7)
!6067 = !DILocation(line: 535, column: 7, scope: !6053)
!6068 = !DILocation(line: 536, column: 36, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6066, file: !2860, line: 535, column: 31)
!6070 = !DILocation(line: 537, column: 3, scope: !6069)
!6071 = !DILocation(line: 570, column: 9, scope: !6053)
!6072 = !DILocation(line: 570, column: 23, scope: !6053)
!6073 = !DILocation(line: 575, column: 4, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !6075, file: !2860, line: 573, column: 48)
!6075 = distinct !DILexicalBlock(scope: !6053, file: !2860, line: 573, column: 7)
!6076 = !DILocation(line: 603, column: 9, scope: !6053)
!6077 = !DILocation(line: 603, column: 23, scope: !6053)
!6078 = !DILocation(line: 605, column: 24, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6053, file: !2860, line: 605, column: 7)
!6080 = !DILocation(line: 605, column: 7, scope: !6053)
!6081 = !DILocation(line: 612, column: 9, scope: !6053)
!6082 = !DILocation(line: 612, column: 23, scope: !6053)
!6083 = !DILocation(line: 619, column: 24, scope: !6084)
!6084 = distinct !DILexicalBlock(scope: !6053, file: !2860, line: 619, column: 7)
!6085 = !DILocation(line: 619, column: 7, scope: !6053)
!6086 = !DILocation(line: 625, column: 9, scope: !6053)
!6087 = !DILocation(line: 625, column: 17, scope: !6053)
!6088 = !DILocation(line: 626, column: 3, scope: !6053)
!6089 = !DILocation(line: 629, column: 20, scope: !6047)
!6090 = !DILocation(line: 629, column: 8, scope: !6047)
!6091 = !DILocation(line: 518, column: 23, scope: !6047)
!6092 = !DILocation(line: 631, column: 2, scope: !6047)
!6093 = distinct !DISubprogram(name: "extract_decimal", scope: !2860, file: !2860, line: 318, type: !6094, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !6096)
!6094 = !DISubroutineType(types: !6095)
!6095 = !{!439, !541}
!6096 = !{!6097, !6098, !6099}
!6097 = !DILocalVariable(name: "str", arg: 1, scope: !6093, file: !2860, line: 318, type: !541)
!6098 = !DILocalVariable(name: "sp", scope: !6093, file: !2860, line: 320, type: !105)
!6099 = !DILocalVariable(name: "val", scope: !6093, file: !2860, line: 321, type: !439)
!6100 = !DILocation(line: 0, scope: !6093)
!6101 = !DILocation(line: 320, column: 19, scope: !6093)
!6102 = !DILocation(line: 323, column: 37, scope: !6093)
!6103 = !DILocation(line: 323, column: 17, scope: !6093)
!6104 = !DILocation(line: 323, column: 9, scope: !6093)
!6105 = !DILocation(line: 323, column: 2, scope: !6093)
!6106 = !DILocation(line: 324, column: 13, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6093, file: !2860, line: 323, column: 43)
!6108 = !DILocation(line: 324, column: 24, scope: !6107)
!6109 = !DILocation(line: 324, column: 19, scope: !6107)
!6110 = !DILocation(line: 324, column: 27, scope: !6107)
!6111 = distinct !{!6111, !6105, !6112}
!6112 = !DILocation(line: 325, column: 2, scope: !6093)
!6113 = !DILocation(line: 326, column: 7, scope: !6093)
!6114 = !DILocation(line: 327, column: 2, scope: !6093)
!6115 = distinct !DISubprogram(name: "isdigit", scope: !5895, file: !5895, line: 43, type: !561, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !6116)
!6116 = !{!6117}
!6117 = !DILocalVariable(name: "a", arg: 1, scope: !6115, file: !5895, line: 43, type: !108)
!6118 = !DILocation(line: 0, scope: !6115)
!6119 = !DILocation(line: 45, column: 29, scope: !6115)
!6120 = !DILocation(line: 45, column: 45, scope: !6115)
!6121 = !DILocation(line: 45, column: 2, scope: !6115)
!6122 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6123, file: !6123, line: 9, type: !3435, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !437)
!6123 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!6124 = !DILocation(line: 11, column: 1, scope: !6122)
!6125 = !{i64 2147564889, i64 2147564932, i64 2147564972}
!6126 = !DILocation(line: 12, column: 1, scope: !6122)
!6127 = !{i64 2147569116, i64 2147569159, i64 2147569199}
!6128 = !DILocation(line: 13, column: 1, scope: !6122)
!6129 = !{i64 2147569325, i64 2147569368, i64 2147569408}
!6130 = !DILocation(line: 14, column: 1, scope: !6122)
!6131 = !{i64 2147569494, i64 2147569537, i64 2147569577}
!6132 = !DILocation(line: 15, column: 1, scope: !6122)
!6133 = !{i64 2147569657, i64 2147569700, i64 2147569740}
!6134 = !DILocation(line: 16, column: 1, scope: !6122)
!6135 = !{i64 2147569841, i64 2147569884, i64 2147569924}
!6136 = !DILocation(line: 17, column: 1, scope: !6122)
!6137 = !{i64 2147570020, i64 2147570063, i64 2147570103}
!6138 = !DILocation(line: 18, column: 1, scope: !6122)
!6139 = !{i64 2147570262, i64 2147570305, i64 2147570345}
!6140 = !DILocation(line: 19, column: 1, scope: !6122)
!6141 = !{i64 2147570497, i64 2147570540, i64 2147570580}
!6142 = !DILocation(line: 20, column: 1, scope: !6122)
!6143 = !{i64 2147570683, i64 2147570726, i64 2147570766}
!6144 = !DILocation(line: 21, column: 1, scope: !6122)
!6145 = !{i64 2147570899, i64 2147570942, i64 2147570982}
!6146 = !DILocation(line: 22, column: 1, scope: !6122)
!6147 = !{i64 2147571102, i64 2147571145, i64 2147571185}
!6148 = !DILocation(line: 23, column: 1, scope: !6122)
!6149 = !{i64 2147571305, i64 2147571348, i64 2147571388}
!6150 = !DILocation(line: 24, column: 1, scope: !6122)
!6151 = !{i64 2147571480, i64 2147571523, i64 2147571563}
!6152 = !DILocation(line: 25, column: 1, scope: !6122)
!6153 = !{i64 2147571688, i64 2147571731, i64 2147571771}
!6154 = !DILocation(line: 26, column: 1, scope: !6122)
!6155 = !{i64 2147571892, i64 2147571935, i64 2147571975}
!6156 = !DILocation(line: 27, column: 1, scope: !6122)
!6157 = !{i64 2147572085, i64 2147572128, i64 2147572168}
!6158 = !DILocation(line: 28, column: 1, scope: !6122)
!6159 = !{i64 2147572287, i64 2147572330, i64 2147572370}
!6160 = !DILocation(line: 29, column: 1, scope: !6122)
!6161 = !{i64 2147572486, i64 2147572529, i64 2147572569}
!6162 = !DILocation(line: 30, column: 1, scope: !6122)
!6163 = !{i64 2147572713, i64 2147572756, i64 2147572796}
!6164 = !DILocation(line: 31, column: 1, scope: !6122)
!6165 = !{i64 2147572915, i64 2147572958, i64 2147572998}
!6166 = !DILocation(line: 32, column: 1, scope: !6122)
!6167 = !{i64 2147573130, i64 2147573173, i64 2147573213}
!6168 = !DILocation(line: 33, column: 1, scope: !6122)
!6169 = !{i64 2147573302, i64 2147573345, i64 2147573385}
!6170 = !DILocation(line: 34, column: 1, scope: !6122)
!6171 = !{i64 2147573504, i64 2147573547, i64 2147573587}
!6172 = !DILocation(line: 35, column: 1, scope: !6122)
!6173 = !{i64 2147573730, i64 2147573773, i64 2147573813}
!6174 = !DILocation(line: 36, column: 1, scope: !6122)
!6175 = !{i64 2147573929, i64 2147573972, i64 2147574012}
!6176 = !DILocation(line: 37, column: 1, scope: !6122)
!6177 = !{i64 2147574104, i64 2147574147, i64 2147574187}
!6178 = !DILocation(line: 38, column: 1, scope: !6122)
!6179 = !{i64 2147574357, i64 2147574400, i64 2147574440}
!6180 = !DILocation(line: 39, column: 1, scope: !6122)
!6181 = !{i64 2147574598, i64 2147574641, i64 2147574681}
!6182 = !DILocation(line: 40, column: 1, scope: !6122)
!6183 = !{i64 2147574833, i64 2147574876, i64 2147574916}
!6184 = !DILocation(line: 41, column: 1, scope: !6122)
!6185 = !{i64 2147575065, i64 2147575108, i64 2147575148}
!6186 = !DILocation(line: 42, column: 1, scope: !6122)
!6187 = !{i64 2147575312, i64 2147575355, i64 2147575395}
!6188 = !DILocation(line: 43, column: 1, scope: !6122)
!6189 = !{i64 2147575538, i64 2147575581, i64 2147575621}
!6190 = !DILocation(line: 44, column: 1, scope: !6122)
!6191 = !{i64 2147575764, i64 2147575807, i64 2147575847}
!6192 = !DILocation(line: 45, column: 1, scope: !6122)
!6193 = !{i64 2147576023, i64 2147576066, i64 2147576106}
!6194 = !DILocation(line: 46, column: 1, scope: !6122)
!6195 = !{i64 2147576249, i64 2147576292, i64 2147576332}
!6196 = !DILocation(line: 47, column: 1, scope: !6122)
!6197 = !{i64 2147576484, i64 2147576527, i64 2147576567}
!6198 = !DILocation(line: 48, column: 1, scope: !6122)
!6199 = !{i64 2147576722, i64 2147576765, i64 2147576805}
!6200 = !DILocation(line: 49, column: 1, scope: !6122)
!6201 = !{i64 2147576996, i64 2147577039, i64 2147577079}
!6202 = !DILocation(line: 50, column: 1, scope: !6122)
!6203 = !{i64 2147577234, i64 2147577277, i64 2147577317}
!6204 = !DILocation(line: 51, column: 1, scope: !6122)
!6205 = !{i64 2147577487, i64 2147577530, i64 2147577570}
!6206 = !DILocation(line: 52, column: 1, scope: !6122)
!6207 = !{i64 2147577731, i64 2147577774, i64 2147577814}
!6208 = !DILocation(line: 53, column: 1, scope: !6122)
!6209 = !{i64 2147582042, i64 2147582085, i64 2147582125}
!6210 = !DILocation(line: 54, column: 1, scope: !6122)
!6211 = !{i64 2147582283, i64 2147582326, i64 2147582366}
!6212 = !DILocation(line: 55, column: 1, scope: !6122)
!6213 = !{i64 2147582530, i64 2147582573, i64 2147582613}
!6214 = !DILocation(line: 56, column: 1, scope: !6122)
!6215 = !{i64 2147582765, i64 2147582808, i64 2147582848}
!6216 = !DILocation(line: 57, column: 1, scope: !6122)
!6217 = !{i64 2147583000, i64 2147583043, i64 2147583083}
!6218 = !DILocation(line: 58, column: 1, scope: !6122)
!6219 = !{i64 2147583235, i64 2147583278, i64 2147583318}
!6220 = !DILocation(line: 59, column: 1, scope: !6122)
!6221 = !{i64 2147583473, i64 2147583516, i64 2147583556}
!6222 = !DILocation(line: 60, column: 1, scope: !6122)
!6223 = !{i64 2147583714, i64 2147583757, i64 2147583797}
!6224 = !DILocation(line: 61, column: 1, scope: !6122)
!6225 = !{i64 2147583994, i64 2147584037, i64 2147584077}
!6226 = !DILocation(line: 62, column: 1, scope: !6122)
!6227 = !{i64 2147584253, i64 2147584296, i64 2147584336}
!6228 = !DILocation(line: 63, column: 1, scope: !6122)
!6229 = !{i64 2147584491, i64 2147584534, i64 2147584574}
!6230 = !DILocation(line: 64, column: 1, scope: !6122)
!6231 = !{i64 2147584720, i64 2147584763, i64 2147584803}
!6232 = !DILocation(line: 65, column: 1, scope: !6122)
!6233 = !{i64 2147584970, i64 2147585013, i64 2147585053}
!6234 = !DILocation(line: 66, column: 1, scope: !6122)
!6235 = !{i64 2147585199, i64 2147585242, i64 2147585282}
!6236 = !DILocation(line: 67, column: 1, scope: !6122)
!6237 = !{i64 2147585407, i64 2147585450, i64 2147585490}
!6238 = !DILocation(line: 68, column: 1, scope: !6122)
!6239 = !{i64 2147585618, i64 2147585661, i64 2147585701}
!6240 = !DILocation(line: 69, column: 1, scope: !6122)
!6241 = !{i64 2147585853, i64 2147585896, i64 2147585936}
!6242 = !DILocation(line: 70, column: 1, scope: !6122)
!6243 = !{i64 2147586082, i64 2147586125, i64 2147586165}
!6244 = !DILocation(line: 71, column: 1, scope: !6122)
!6245 = !{i64 2147586299, i64 2147586342, i64 2147586382}
!6246 = !DILocation(line: 72, column: 1, scope: !6122)
!6247 = !{i64 2147586528, i64 2147586571, i64 2147586611}
!6248 = !DILocation(line: 73, column: 1, scope: !6122)
!6249 = !{i64 2147586766, i64 2147586809, i64 2147586849}
!6250 = !DILocation(line: 74, column: 1, scope: !6122)
!6251 = !{i64 2147586998, i64 2147587041, i64 2147587081}
!6252 = !DILocation(line: 75, column: 1, scope: !6122)
!6253 = !{i64 2147587224, i64 2147587267, i64 2147587307}
!6254 = !DILocation(line: 76, column: 1, scope: !6122)
!6255 = !{i64 2147587441, i64 2147587484, i64 2147587524}
!6256 = !DILocation(line: 77, column: 1, scope: !6122)
!6257 = !{i64 2147587673, i64 2147587716, i64 2147587756}
!6258 = !DILocation(line: 78, column: 1, scope: !6122)
!6259 = !{i64 2147587899, i64 2147587942, i64 2147587982}
!6260 = !DILocation(line: 79, column: 1, scope: !6122)
!6261 = !{i64 2147588113, i64 2147588156, i64 2147588196}
!6262 = !DILocation(line: 80, column: 1, scope: !6122)
!6263 = !{i64 2147588333, i64 2147588376, i64 2147588416}
!6264 = !DILocation(line: 81, column: 1, scope: !6122)
!6265 = !{i64 2147588565, i64 2147588608, i64 2147588648}
!6266 = !DILocation(line: 82, column: 1, scope: !6122)
!6267 = !{i64 2147588773, i64 2147588816, i64 2147588856}
!6268 = !DILocation(line: 83, column: 1, scope: !6122)
!6269 = !{i64 2147588978, i64 2147589021, i64 2147589061}
!6270 = !DILocation(line: 84, column: 1, scope: !6122)
!6271 = !{i64 2147589195, i64 2147589238, i64 2147589278}
!6272 = !DILocation(line: 85, column: 1, scope: !6122)
!6273 = !{i64 2147589409, i64 2147589452, i64 2147589492}
!6274 = !DILocation(line: 86, column: 1, scope: !6122)
!6275 = !{i64 2147589635, i64 2147589678, i64 2147589718}
!6276 = !DILocation(line: 87, column: 1, scope: !6122)
!6277 = !{i64 2147589855, i64 2147589898, i64 2147589938}
!6278 = !DILocation(line: 88, column: 1, scope: !6122)
!6279 = !{i64 2147594121, i64 2147594164, i64 2147594204}
!6280 = !DILocation(line: 89, column: 1, scope: !6122)
!6281 = !{i64 2147594353, i64 2147594396, i64 2147594436}
!6282 = !DILocation(line: 90, column: 1, scope: !6122)
!6283 = !{i64 2147594588, i64 2147594631, i64 2147594671}
!6284 = !DILocation(line: 91, column: 1, scope: !6122)
!6285 = !{i64 2147594838, i64 2147594881, i64 2147594921}
!6286 = !DILocation(line: 92, column: 1, scope: !6122)
!6287 = !{i64 2147595088, i64 2147595131, i64 2147595171}
!6288 = !DILocation(line: 93, column: 1, scope: !6122)
!6289 = !{i64 2147595326, i64 2147595369, i64 2147595409}
!6290 = !DILocation(line: 94, column: 1, scope: !6122)
!6291 = !{i64 2147595537, i64 2147595580, i64 2147595620}
!6292 = !DILocation(line: 95, column: 1, scope: !6122)
!6293 = !{i64 2147595754, i64 2147595797, i64 2147595837}
!6294 = !DILocation(line: 96, column: 1, scope: !6122)
!6295 = !{i64 2147595950, i64 2147595993, i64 2147596033}
!6296 = !DILocation(line: 97, column: 1, scope: !6122)
!6297 = !{i64 2147596152, i64 2147596195, i64 2147596235}
!6298 = !DILocation(line: 98, column: 1, scope: !6122)
!6299 = !{i64 2147596345, i64 2147596388, i64 2147596428}
!6300 = !DILocation(line: 99, column: 1, scope: !6122)
!6301 = !{i64 2147596553, i64 2147596596, i64 2147596636}
!6302 = !DILocation(line: 100, column: 1, scope: !6122)
!6303 = !{i64 2147596749, i64 2147596792, i64 2147596832}
!6304 = !DILocation(line: 101, column: 1, scope: !6122)
!6305 = !{i64 2147596951, i64 2147596994, i64 2147597034}
!6306 = !DILocation(line: 102, column: 1, scope: !6122)
!6307 = !{i64 2147597162, i64 2147597205, i64 2147597245}
!6308 = !DILocation(line: 103, column: 1, scope: !6122)
!6309 = !{i64 2147597361, i64 2147597404, i64 2147597444}
!6310 = !DILocation(line: 104, column: 1, scope: !6122)
!6311 = !{i64 2147597536, i64 2147597579, i64 2147597619}
!6312 = !DILocation(line: 105, column: 1, scope: !6122)
!6313 = !{i64 2147597720, i64 2147597763, i64 2147597803}
!6314 = !DILocation(line: 106, column: 1, scope: !6122)
!6315 = !{i64 2147597922, i64 2147597965, i64 2147598005}
!6316 = !DILocation(line: 107, column: 1, scope: !6122)
!6317 = !{i64 2147598121, i64 2147598164, i64 2147598204}
!6318 = !DILocation(line: 108, column: 1, scope: !6122)
!6319 = !{i64 2147598326, i64 2147598369, i64 2147598409}
!6320 = !DILocation(line: 109, column: 1, scope: !6122)
!6321 = !{i64 2147598519, i64 2147598562, i64 2147598602}
!6322 = !DILocation(line: 110, column: 1, scope: !6122)
!6323 = !{i64 2147598685, i64 2147598728, i64 2147598768}
!6324 = !DILocation(line: 111, column: 1, scope: !6122)
!6325 = !{i64 2147598869, i64 2147598912, i64 2147598952}
!6326 = !DILocation(line: 112, column: 1, scope: !6122)
!6327 = !{i64 2147599059, i64 2147599102, i64 2147599142}
!6328 = !DILocation(line: 113, column: 1, scope: !6122)
!6329 = !{i64 2147599243, i64 2147599286, i64 2147599326}
!6330 = !DILocation(line: 114, column: 1, scope: !6122)
!6331 = !{i64 2147599457, i64 2147599500, i64 2147599540}
!6332 = !DILocation(line: 115, column: 1, scope: !6122)
!6333 = !{i64 2147599668, i64 2147599711, i64 2147599751}
!6334 = !DILocation(line: 116, column: 1, scope: !6122)
!6335 = !{i64 2147599891, i64 2147599934, i64 2147599974}
!6336 = !DILocation(line: 117, column: 1, scope: !6122)
!6337 = !{i64 2147600075, i64 2147600118, i64 2147600158}
!6338 = !DILocation(line: 118, column: 1, scope: !6122)
!6339 = !{i64 2147600289, i64 2147600332, i64 2147600372}
!6340 = !DILocation(line: 119, column: 1, scope: !6122)
!6341 = !{i64 2147600455, i64 2147600498, i64 2147600538}
!6342 = !DILocation(line: 120, column: 1, scope: !6122)
!6343 = !{i64 2147600636, i64 2147600679, i64 2147600719}
!6344 = !DILocation(line: 121, column: 1, scope: !6122)
!6345 = !{i64 2147600829, i64 2147600872, i64 2147600912}
!6346 = !DILocation(line: 122, column: 1, scope: !6122)
!6347 = !{i64 2147601055, i64 2147601098, i64 2147601138}
!6348 = !DILocation(line: 123, column: 1, scope: !6122)
!6349 = !{i64 2147601269, i64 2147601312, i64 2147601352}
!6350 = !DILocation(line: 124, column: 1, scope: !6122)
!6351 = !{i64 2147601495, i64 2147601538, i64 2147601578}
!6352 = !DILocation(line: 125, column: 1, scope: !6122)
!6353 = !{i64 2147601712, i64 2147601755, i64 2147601795}
!6354 = !DILocation(line: 126, column: 1, scope: !6122)
!6355 = !{i64 2147601989, i64 2147602032, i64 2147602072}
!6356 = !DILocation(line: 127, column: 1, scope: !6122)
!6357 = !{i64 2147602215, i64 2147602258, i64 2147602298}
!6358 = !DILocation(line: 128, column: 1, scope: !6122)
!6359 = !{i64 2147602423, i64 2147602466, i64 2147602506}
!6360 = !DILocation(line: 129, column: 1, scope: !6122)
!6361 = !{i64 2147602619, i64 2147602662, i64 2147602702}
!6362 = !DILocation(line: 130, column: 1, scope: !6122)
!6363 = !{i64 2147602884, i64 2147602927, i64 2147602967}
!6364 = !DILocation(line: 131, column: 1, scope: !6122)
!6365 = !{i64 2147603098, i64 2147603141, i64 2147603181}
!6366 = !DILocation(line: 132, column: 1, scope: !6122)
!6367 = !{i64 2147607334, i64 2147607377, i64 2147607417}
!6368 = !DILocation(line: 133, column: 1, scope: !6122)
!6369 = !{i64 2147607588, i64 2147607631, i64 2147607671}
!6370 = !DILocation(line: 134, column: 1, scope: !6122)
!6371 = !{i64 2147607787, i64 2147607830, i64 2147607870}
!6372 = !DILocation(line: 135, column: 1, scope: !6122)
!6373 = !{i64 2147608029, i64 2147608072, i64 2147608112}
!6374 = !DILocation(line: 136, column: 1, scope: !6122)
!6375 = !{i64 2147608192, i64 2147608235, i64 2147608275}
!6376 = !DILocation(line: 137, column: 1, scope: !6122)
!6377 = !{i64 2147608379, i64 2147608422, i64 2147608462}
!6378 = !DILocation(line: 138, column: 1, scope: !6122)
!6379 = !{i64 2147608587, i64 2147608630, i64 2147608670}
!6380 = !DILocation(line: 139, column: 1, scope: !6122)
!6381 = !{i64 2147608783, i64 2147608826, i64 2147608866}
!6382 = !DILocation(line: 140, column: 1, scope: !6122)
!6383 = !{i64 2147608976, i64 2147609019, i64 2147609059}
!6384 = !DILocation(line: 141, column: 1, scope: !6122)
!6385 = !{i64 2147609158, i64 2147609201, i64 2147609241}
!6386 = !DILocation(line: 142, column: 1, scope: !6122)
!6387 = !{i64 2147609372, i64 2147609415, i64 2147609455}
!6388 = !DILocation(line: 143, column: 1, scope: !6122)
!6389 = !{i64 2147609583, i64 2147609626, i64 2147609666}
!6390 = !DILocation(line: 144, column: 1, scope: !6122)
!6391 = !{i64 2147609803, i64 2147609846, i64 2147609886}
!6392 = !DILocation(line: 145, column: 1, scope: !6122)
!6393 = !{i64 2147610010, i64 2147610053, i64 2147610093}
!6394 = !DILocation(line: 146, column: 1, scope: !6122)
!6395 = !{i64 2147610283, i64 2147610326, i64 2147610366}
!6396 = !DILocation(line: 147, column: 1, scope: !6122)
!6397 = !{i64 2147610531, i64 2147610574, i64 2147610614}
!6398 = !DILocation(line: 148, column: 1, scope: !6122)
!6399 = !{i64 2147610730, i64 2147610773, i64 2147610813}
!6400 = !DILocation(line: 149, column: 1, scope: !6122)
!6401 = !{i64 2147610965, i64 2147611008, i64 2147611048}
!6402 = !DILocation(line: 150, column: 1, scope: !6122)
!6403 = !{i64 2147611215, i64 2147611258, i64 2147611298}
!6404 = !DILocation(line: 151, column: 1, scope: !6122)
!6405 = !{i64 2147611417, i64 2147611460, i64 2147611500}
!6406 = !DILocation(line: 152, column: 1, scope: !6122)
!6407 = !{i64 2147611640, i64 2147611683, i64 2147611723}
!6408 = !DILocation(line: 153, column: 1, scope: !6122)
!6409 = !{i64 2147611854, i64 2147611897, i64 2147611937}
!6410 = !DILocation(line: 154, column: 1, scope: !6122)
!6411 = !{i64 2147612098, i64 2147612141, i64 2147612181}
!6412 = !DILocation(line: 155, column: 1, scope: !6122)
!6413 = !{i64 2147612327, i64 2147612370, i64 2147612410}
!6414 = !DILocation(line: 156, column: 1, scope: !6122)
!6415 = !{i64 2147612556, i64 2147612599, i64 2147612639}
!6416 = !DILocation(line: 157, column: 1, scope: !6122)
!6417 = !{i64 2147612764, i64 2147612807, i64 2147612847}
!6418 = !DILocation(line: 158, column: 1, scope: !6122)
!6419 = !{i64 2147613002, i64 2147613045, i64 2147613085}
!6420 = !DILocation(line: 159, column: 1, scope: !6122)
!6421 = !{i64 2147613228, i64 2147613271, i64 2147613311}
!6422 = !DILocation(line: 160, column: 1, scope: !6122)
!6423 = !{i64 2147613487, i64 2147613530, i64 2147613570}
!6424 = !DILocation(line: 161, column: 1, scope: !6122)
!6425 = !{i64 2147613707, i64 2147613750, i64 2147613790}
!6426 = !DILocation(line: 162, column: 1, scope: !6122)
!6427 = !{i64 2147613939, i64 2147613982, i64 2147614022}
!6428 = !DILocation(line: 163, column: 1, scope: !6122)
!6429 = !{i64 2147614180, i64 2147614223, i64 2147614263}
!6430 = !DILocation(line: 164, column: 1, scope: !6122)
!6431 = !{i64 2147614421, i64 2147614464, i64 2147614504}
!6432 = !DILocation(line: 165, column: 1, scope: !6122)
!6433 = !{i64 2147614644, i64 2147614687, i64 2147614727}
!6434 = !DILocation(line: 166, column: 1, scope: !6122)
!6435 = !{i64 2147614861, i64 2147614904, i64 2147614944}
!6436 = !DILocation(line: 167, column: 1, scope: !6122)
!6437 = !{i64 2147615102, i64 2147615145, i64 2147615185}
!6438 = !DILocation(line: 168, column: 1, scope: !6122)
!6439 = !{i64 2147615289, i64 2147615332, i64 2147615372}
!6440 = !DILocation(line: 169, column: 1, scope: !6122)
!6441 = !{i64 2147615476, i64 2147615519, i64 2147615559}
!6442 = !DILocation(line: 170, column: 1, scope: !6122)
!6443 = !{i64 2147615639, i64 2147615682, i64 2147615722}
!6444 = !DILocation(line: 171, column: 1, scope: !6122)
!6445 = !{i64 2147615844, i64 2147615887, i64 2147615927}
!6446 = !DILocation(line: 172, column: 1, scope: !6122)
!6447 = !{i64 2147620098, i64 2147620141, i64 2147620181}
!6448 = !DILocation(line: 173, column: 1, scope: !6122)
!6449 = !{i64 2147620357, i64 2147620400, i64 2147620440}
!6450 = !DILocation(line: 174, column: 1, scope: !6122)
!6451 = !{i64 2147620580, i64 2147620623, i64 2147620663}
!6452 = !DILocation(line: 175, column: 1, scope: !6122)
!6453 = !{i64 2147620809, i64 2147620852, i64 2147620892}
!6454 = !DILocation(line: 176, column: 1, scope: !6122)
!6455 = !{i64 2147621023, i64 2147621066, i64 2147621106}
!6456 = !DILocation(line: 177, column: 1, scope: !6122)
!6457 = !{i64 2147621225, i64 2147621268, i64 2147621308}
!6458 = !DILocation(line: 178, column: 1, scope: !6122)
!6459 = !{i64 2147621421, i64 2147621464, i64 2147621504}
!6460 = !DILocation(line: 179, column: 1, scope: !6122)
!6461 = !{i64 2147621633, i64 2147621676, i64 2147621716}
!6462 = !DILocation(line: 180, column: 1, scope: !6122)
!6463 = !{i64 2147621854, i64 2147621897, i64 2147621937}
!6464 = !DILocation(line: 181, column: 1, scope: !6122)
!6465 = !{i64 2147622068, i64 2147622111, i64 2147622151}
!6466 = !DILocation(line: 182, column: 1, scope: !6122)
!6467 = !{i64 2147622258, i64 2147622301, i64 2147622341}
!6468 = !DILocation(line: 183, column: 1, scope: !6122)
!6469 = !{i64 2147622457, i64 2147622500, i64 2147622540}
!6470 = !DILocation(line: 184, column: 1, scope: !6122)
!6471 = !{i64 2147622662, i64 2147622705, i64 2147622745}
!6472 = !DILocation(line: 185, column: 1, scope: !6122)
!6473 = !{i64 2147622882, i64 2147622925, i64 2147622965}
!6474 = !DILocation(line: 186, column: 1, scope: !6122)
!6475 = !{i64 2147623083, i64 2147623126, i64 2147623166}
!6476 = !DILocation(line: 187, column: 1, scope: !6122)
!6477 = !{i64 2147623282, i64 2147623325, i64 2147623365}
!6478 = !DILocation(line: 188, column: 1, scope: !6122)
!6479 = !{i64 2147623487, i64 2147623530, i64 2147623570}
!6480 = !DILocation(line: 189, column: 1, scope: !6122)
!6481 = !{i64 2147623656, i64 2147623699, i64 2147623739}
!6482 = !DILocation(line: 190, column: 1, scope: !6122)
!6483 = !{i64 2147623840, i64 2147623883, i64 2147623923}
!6484 = !DILocation(line: 191, column: 1, scope: !6122)
!6485 = !{i64 2147624024, i64 2147624067, i64 2147624107}
!6486 = !DILocation(line: 192, column: 1, scope: !6122)
!6487 = !{i64 2147624211, i64 2147624254, i64 2147624294}
!6488 = !DILocation(line: 193, column: 1, scope: !6122)
!6489 = !{i64 2147624395, i64 2147624438, i64 2147624478}
!6490 = !DILocation(line: 194, column: 1, scope: !6122)
!6491 = !{i64 2147624633, i64 2147624676, i64 2147624716}
!6492 = !DILocation(line: 195, column: 1, scope: !6122)
!6493 = !{i64 2147624863, i64 2147624906, i64 2147624946}
!6494 = !DILocation(line: 196, column: 1, scope: !6122)
!6495 = !{i64 2147625092, i64 2147625135, i64 2147625175}
!6496 = !DILocation(line: 197, column: 1, scope: !6122)
!6497 = !{i64 2147625279, i64 2147625322, i64 2147625362}
!6498 = !DILocation(line: 198, column: 1, scope: !6122)
!6499 = !{i64 2147625475, i64 2147625518, i64 2147625558}
!6500 = !DILocation(line: 199, column: 1, scope: !6122)
!6501 = !{i64 2147625683, i64 2147625726, i64 2147625766}
!6502 = !DILocation(line: 200, column: 1, scope: !6122)
!6503 = !{i64 2147625895, i64 2147625938, i64 2147625978}
!6504 = !DILocation(line: 201, column: 1, scope: !6122)
!6505 = !{i64 2147626094, i64 2147626137, i64 2147626177}
!6506 = !DILocation(line: 202, column: 1, scope: !6122)
!6507 = !{i64 2147626332, i64 2147626375, i64 2147626415}
!6508 = !DILocation(line: 203, column: 1, scope: !6122)
!6509 = !{i64 2147626528, i64 2147626571, i64 2147626611}
!6510 = !DILocation(line: 204, column: 1, scope: !6122)
!6511 = !{i64 2147626730, i64 2147626773, i64 2147626813}
!6512 = !DILocation(line: 205, column: 1, scope: !6122)
!6513 = !{i64 2147626923, i64 2147626966, i64 2147627006}
!6514 = !DILocation(line: 206, column: 1, scope: !6122)
!6515 = !{i64 2147627157, i64 2147627200, i64 2147627240}
!6516 = !DILocation(line: 207, column: 1, scope: !6122)
!6517 = !{i64 2147627320, i64 2147627363, i64 2147627403}
!6518 = !DILocation(line: 208, column: 1, scope: !6122)
!6519 = !{i64 2147627559, i64 2147627602, i64 2147627642}
!6520 = !DILocation(line: 209, column: 1, scope: !6122)
!6521 = !{i64 2147627798, i64 2147627841, i64 2147627881}
!6522 = !DILocation(line: 210, column: 1, scope: !6122)
!6523 = !{i64 2147628034, i64 2147628077, i64 2147628117}
!6524 = !DILocation(line: 211, column: 1, scope: !6122)
!6525 = !{i64 2147628264, i64 2147628307, i64 2147628347}
!6526 = !DILocation(line: 212, column: 1, scope: !6122)
!6527 = !{i64 2147628451, i64 2147628494, i64 2147628534}
!6528 = !DILocation(line: 213, column: 1, scope: !6122)
!6529 = !{i64 2147628650, i64 2147628693, i64 2147628733}
!6530 = !DILocation(line: 214, column: 1, scope: !6122)
!6531 = !{i64 2147628921, i64 2147628964, i64 2147629004}
!6532 = !DILocation(line: 215, column: 1, scope: !6122)
!6533 = !{i64 2147629096, i64 2147629139, i64 2147629179}
!6534 = !DILocation(line: 216, column: 1, scope: !6122)
!6535 = !{i64 2147633391, i64 2147633434, i64 2147633474}
!6536 = !DILocation(line: 217, column: 1, scope: !6122)
!6537 = !{i64 2147633599, i64 2147633642, i64 2147633682}
!6538 = !DILocation(line: 218, column: 1, scope: !6122)
!6539 = !{i64 2147633817, i64 2147633860, i64 2147633900}
!6540 = !DILocation(line: 219, column: 1, scope: !6122)
!6541 = !{i64 2147634007, i64 2147634050, i64 2147634090}
!6542 = !DILocation(line: 220, column: 1, scope: !6122)
!6543 = !{i64 2147634239, i64 2147634282, i64 2147634322}
!6544 = !DILocation(line: 221, column: 1, scope: !6122)
!6545 = !{i64 2147634459, i64 2147634502, i64 2147634542}
!6546 = !DILocation(line: 222, column: 1, scope: !6122)
!6547 = !{i64 2147634655, i64 2147634698, i64 2147634738}
!6548 = !DILocation(line: 223, column: 1, scope: !6122)
!6549 = !{i64 2147634861, i64 2147634904, i64 2147634944}
!6550 = !DILocation(line: 224, column: 1, scope: !6122)
!6551 = !{i64 2147635066, i64 2147635109, i64 2147635149}
!6552 = !DILocation(line: 225, column: 1, scope: !6122)
!6553 = !{i64 2147635292, i64 2147635335, i64 2147635375}
!6554 = !DILocation(line: 226, column: 1, scope: !6122)
!6555 = !{i64 2147635500, i64 2147635543, i64 2147635583}
!6556 = !DILocation(line: 227, column: 1, scope: !6122)
!6557 = !{i64 2147635696, i64 2147635739, i64 2147635779}
!6558 = !DILocation(line: 228, column: 1, scope: !6122)
!6559 = !{i64 2147635928, i64 2147635971, i64 2147636011}
!6560 = !DILocation(line: 229, column: 1, scope: !6122)
!6561 = !{i64 2147636112, i64 2147636155, i64 2147636195}
!6562 = !DILocation(line: 230, column: 1, scope: !6122)
!6563 = !{i64 2147636321, i64 2147636364, i64 2147636404}
!6564 = !DILocation(line: 231, column: 1, scope: !6122)
!6565 = !{i64 2147636529, i64 2147636572, i64 2147636612}
!6566 = !DILocation(line: 232, column: 1, scope: !6122)
!6567 = !{i64 2147636725, i64 2147636768, i64 2147636808}
!6568 = !DILocation(line: 233, column: 1, scope: !6122)
!6569 = !{i64 2147636909, i64 2147636952, i64 2147636992}
!6570 = !DILocation(line: 234, column: 1, scope: !6122)
!6571 = !{i64 2147637135, i64 2147637178, i64 2147637218}
!6572 = !DILocation(line: 235, column: 1, scope: !6122)
!6573 = !{i64 2147637361, i64 2147637404, i64 2147637444}
!6574 = !DILocation(line: 236, column: 1, scope: !6122)
!6575 = !{i64 2147637587, i64 2147637630, i64 2147637670}
!6576 = !DILocation(line: 237, column: 1, scope: !6122)
!6577 = !{i64 2147637813, i64 2147637856, i64 2147637896}
!6578 = !DILocation(line: 238, column: 1, scope: !6122)
!6579 = !{i64 2147638039, i64 2147638082, i64 2147638122}
!6580 = !DILocation(line: 239, column: 1, scope: !6122)
!6581 = !{i64 2147638271, i64 2147638314, i64 2147638354}
!6582 = !DILocation(line: 240, column: 1, scope: !6122)
!6583 = !{i64 2147638509, i64 2147638552, i64 2147638592}
!6584 = !DILocation(line: 241, column: 1, scope: !6122)
!6585 = !{i64 2147638729, i64 2147638772, i64 2147638812}
!6586 = !DILocation(line: 242, column: 1, scope: !6122)
!6587 = !{i64 2147638973, i64 2147639016, i64 2147639056}
!6588 = !DILocation(line: 243, column: 1, scope: !6122)
!6589 = !{i64 2147639214, i64 2147639257, i64 2147639297}
!6590 = !DILocation(line: 244, column: 1, scope: !6122)
!6591 = !{i64 2147639449, i64 2147639492, i64 2147639532}
!6592 = !DILocation(line: 245, column: 1, scope: !6122)
!6593 = !{i64 2147639681, i64 2147639724, i64 2147639764}
!6594 = !DILocation(line: 246, column: 1, scope: !6122)
!6595 = !{i64 2147639883, i64 2147639926, i64 2147639966}
!6596 = !DILocation(line: 247, column: 1, scope: !6122)
!6597 = !{i64 2147640133, i64 2147640176, i64 2147640216}
!6598 = !DILocation(line: 248, column: 1, scope: !6122)
!6599 = !{i64 2147640371, i64 2147640414, i64 2147640454}
!6600 = !DILocation(line: 249, column: 1, scope: !6122)
!6601 = !{i64 2147640579, i64 2147640622, i64 2147640662}
!6602 = !DILocation(line: 250, column: 1, scope: !6122)
!6603 = !{i64 2147640775, i64 2147640818, i64 2147640858}
!6604 = !DILocation(line: 251, column: 1, scope: !6122)
!6605 = !{i64 2147640959, i64 2147641002, i64 2147641042}
!6606 = !DILocation(line: 252, column: 1, scope: !6122)
!6607 = !{i64 2147641176, i64 2147641219, i64 2147641259}
!6608 = !DILocation(line: 253, column: 1, scope: !6122)
!6609 = !{i64 2147641381, i64 2147641424, i64 2147641464}
!6610 = !DILocation(line: 254, column: 1, scope: !6122)
!6611 = !{i64 2147641616, i64 2147641659, i64 2147641699}
!6612 = !DILocation(line: 255, column: 1, scope: !6122)
!6613 = !{i64 2147641839, i64 2147641882, i64 2147641922}
!6614 = !DILocation(line: 256, column: 1, scope: !6122)
!6615 = !{i64 2147646124, i64 2147646167, i64 2147646207}
!6616 = !DILocation(line: 257, column: 1, scope: !6122)
!6617 = !{i64 2147646362, i64 2147646405, i64 2147646445}
!6618 = !DILocation(line: 258, column: 1, scope: !6122)
!6619 = !{i64 2147646600, i64 2147646643, i64 2147646683}
!6620 = !DILocation(line: 259, column: 1, scope: !6122)
!6621 = !{i64 2147646817, i64 2147646860, i64 2147646900}
!6622 = !DILocation(line: 260, column: 1, scope: !6122)
!6623 = !{i64 2147647022, i64 2147647065, i64 2147647105}
!6624 = !DILocation(line: 261, column: 1, scope: !6122)
!6625 = !{i64 2147647215, i64 2147647258, i64 2147647298}
!6626 = !DILocation(line: 262, column: 1, scope: !6122)
!6627 = !{i64 2147647468, i64 2147647511, i64 2147647551}
!6628 = !DILocation(line: 263, column: 1, scope: !6122)
!6629 = !{i64 2147647676, i64 2147647719, i64 2147647759}
!6630 = !DILocation(line: 264, column: 1, scope: !6122)
!6631 = !{i64 2147647872, i64 2147647915, i64 2147647955}
!6632 = !DILocation(line: 265, column: 1, scope: !6122)
!6633 = !{i64 2147648086, i64 2147648129, i64 2147648169}
!6634 = !DILocation(line: 266, column: 1, scope: !6122)
!6635 = !{i64 2147648294, i64 2147648337, i64 2147648377}
!6636 = !DILocation(line: 267, column: 1, scope: !6122)
!6637 = !{i64 2147648484, i64 2147648527, i64 2147648567}
!6638 = !DILocation(line: 268, column: 1, scope: !6122)
!6639 = !{i64 2147648698, i64 2147648741, i64 2147648781}
!6640 = !DILocation(line: 269, column: 1, scope: !6122)
!6641 = !{i64 2147648960, i64 2147649003, i64 2147649043}
!6642 = !DILocation(line: 270, column: 1, scope: !6122)
!6643 = !{i64 2147649171, i64 2147649214, i64 2147649254}
!6644 = !DILocation(line: 271, column: 1, scope: !6122)
!6645 = !{i64 2147649415, i64 2147649458, i64 2147649498}
!6646 = !DILocation(line: 272, column: 1, scope: !6122)
!6647 = !{i64 2147649626, i64 2147649669, i64 2147649709}
!6648 = !DILocation(line: 273, column: 1, scope: !6122)
!6649 = !{i64 2147649855, i64 2147649898, i64 2147649938}
!6650 = !DILocation(line: 274, column: 1, scope: !6122)
!6651 = !{i64 2147650120, i64 2147650163, i64 2147650203}
!6652 = !DILocation(line: 275, column: 1, scope: !6122)
!6653 = !{i64 2147650325, i64 2147650368, i64 2147650408}
!6654 = !DILocation(line: 276, column: 1, scope: !6122)
!6655 = !{i64 2147650521, i64 2147650564, i64 2147650604}
!6656 = !DILocation(line: 277, column: 1, scope: !6122)
!6657 = !{i64 2147650744, i64 2147650787, i64 2147650827}
!6658 = !DILocation(line: 278, column: 1, scope: !6122)
!6659 = !{i64 2147650907, i64 2147650950, i64 2147650990}
!6660 = !DILocation(line: 279, column: 1, scope: !6122)
!6661 = !{i64 2147651112, i64 2147651155, i64 2147651195}
!6662 = !DILocation(line: 280, column: 1, scope: !6122)
!6663 = !{i64 2147651332, i64 2147651375, i64 2147651415}
!6664 = !DILocation(line: 281, column: 1, scope: !6122)
!6665 = !{i64 2147651546, i64 2147651589, i64 2147651629}
!6666 = !DILocation(line: 282, column: 1, scope: !6122)
!6667 = !{i64 2147651790, i64 2147651833, i64 2147651873}
!6668 = !DILocation(line: 283, column: 1, scope: !6122)
!6669 = !{i64 2147652022, i64 2147652065, i64 2147652105}
!6670 = !DILocation(line: 284, column: 1, scope: !6122)
!6671 = !{i64 2147652236, i64 2147652279, i64 2147652319}
!6672 = !DILocation(line: 285, column: 1, scope: !6122)
!6673 = !{i64 2147652447, i64 2147652490, i64 2147652530}
!6674 = !DILocation(line: 286, column: 1, scope: !6122)
!6675 = !{i64 2147652640, i64 2147652683, i64 2147652723}
!6676 = !DILocation(line: 287, column: 1, scope: !6122)
!6677 = !{i64 2147652839, i64 2147652882, i64 2147652922}
!6678 = !DILocation(line: 288, column: 1, scope: !6122)
!6679 = !{i64 2147653011, i64 2147653054, i64 2147653094}
!6680 = !DILocation(line: 289, column: 1, scope: !6122)
!6681 = !{i64 2147653204, i64 2147653247, i64 2147653287}
!6682 = !DILocation(line: 290, column: 1, scope: !6122)
!6683 = !{i64 2147653400, i64 2147653443, i64 2147653483}
!6684 = !DILocation(line: 291, column: 1, scope: !6122)
!6685 = !{i64 2147653563, i64 2147653606, i64 2147653646}
!6686 = !DILocation(line: 292, column: 1, scope: !6122)
!6687 = !{i64 2147653765, i64 2147653808, i64 2147653848}
!6688 = !DILocation(line: 293, column: 1, scope: !6122)
!6689 = !{i64 2147653970, i64 2147654013, i64 2147654053}
!6690 = !DILocation(line: 294, column: 1, scope: !6122)
!6691 = !{i64 2147654178, i64 2147654221, i64 2147654261}
!6692 = !DILocation(line: 295, column: 1, scope: !6122)
!6693 = !{i64 2147654371, i64 2147654414, i64 2147654454}
!6694 = !DILocation(line: 296, column: 1, scope: !6122)
!6695 = !{i64 2147654558, i64 2147654601, i64 2147654641}
!6696 = !DILocation(line: 297, column: 1, scope: !6122)
!6697 = !{i64 2147654785, i64 2147654828, i64 2147654868}
!6698 = !DILocation(line: 298, column: 1, scope: !6122)
!6699 = !{i64 2147659012, i64 2147659055, i64 2147659095}
!6700 = !DILocation(line: 299, column: 1, scope: !6122)
!6701 = !{i64 2147659226, i64 2147659269, i64 2147659309}
!6702 = !DILocation(line: 300, column: 1, scope: !6122)
!6703 = !{i64 2147659452, i64 2147659495, i64 2147659535}
!6704 = !DILocation(line: 301, column: 1, scope: !6122)
!6705 = !{i64 2147659660, i64 2147659703, i64 2147659743}
!6706 = !DILocation(line: 302, column: 1, scope: !6122)
!6707 = !{i64 2147659856, i64 2147659899, i64 2147659939}
!6708 = !DILocation(line: 303, column: 1, scope: !6122)
!6709 = !{i64 2147660073, i64 2147660116, i64 2147660156}
!6710 = !DILocation(line: 304, column: 1, scope: !6122)
!6711 = !{i64 2147660365, i64 2147660408, i64 2147660448}
!6712 = !DILocation(line: 305, column: 1, scope: !6122)
!6713 = !{i64 2147660597, i64 2147660640, i64 2147660680}
!6714 = !DILocation(line: 306, column: 1, scope: !6122)
!6715 = !{i64 2147660814, i64 2147660857, i64 2147660897}
!6716 = !DILocation(line: 307, column: 1, scope: !6122)
!6717 = !{i64 2147661021, i64 2147661064, i64 2147661104}
!6718 = !DILocation(line: 308, column: 1, scope: !6122)
!6719 = !{i64 2147661222, i64 2147661265, i64 2147661305}
!6720 = !DILocation(line: 309, column: 1, scope: !6122)
!6721 = !{i64 2147661454, i64 2147661497, i64 2147661537}
!6722 = !DILocation(line: 310, column: 1, scope: !6122)
!6723 = !{i64 2147661662, i64 2147661705, i64 2147661745}
!6724 = !DILocation(line: 311, column: 1, scope: !6122)
!6725 = !{i64 2147661852, i64 2147661895, i64 2147661935}
!6726 = !DILocation(line: 312, column: 1, scope: !6122)
!6727 = !{i64 2147662078, i64 2147662121, i64 2147662161}
!6728 = !DILocation(line: 313, column: 1, scope: !6122)
!6729 = !{i64 2147662267, i64 2147662310, i64 2147662350}
!6730 = !DILocation(line: 314, column: 1, scope: !6122)
!6731 = !{i64 2147662538, i64 2147662581, i64 2147662621}
!6732 = !DILocation(line: 315, column: 1, scope: !6122)
!6733 = !{i64 2147662758, i64 2147662801, i64 2147662841}
!6734 = !DILocation(line: 316, column: 1, scope: !6122)
!6735 = !{i64 2147663011, i64 2147663054, i64 2147663094}
!6736 = !DILocation(line: 317, column: 1, scope: !6122)
!6737 = !{i64 2147663219, i64 2147663262, i64 2147663302}
!6738 = !DILocation(line: 318, column: 1, scope: !6122)
!6739 = !{i64 2147663451, i64 2147663494, i64 2147663534}
!6740 = !DILocation(line: 319, column: 1, scope: !6122)
!6741 = !{i64 2147663662, i64 2147663705, i64 2147663745}
!6742 = !DILocation(line: 320, column: 1, scope: !6122)
!6743 = !{i64 2147663852, i64 2147663895, i64 2147663935}
!6744 = !DILocation(line: 321, column: 1, scope: !6122)
!6745 = !{i64 2147664066, i64 2147664109, i64 2147664149}
!6746 = !DILocation(line: 322, column: 1, scope: !6122)
!6747 = !{i64 2147664265, i64 2147664308, i64 2147664348}
!6748 = !DILocation(line: 323, column: 1, scope: !6122)
!6749 = !{i64 2147664452, i64 2147664495, i64 2147664535}
!6750 = !DILocation(line: 324, column: 1, scope: !6122)
!6751 = !{i64 2147664660, i64 2147664703, i64 2147664743}
!6752 = !DILocation(line: 325, column: 1, scope: !6122)
!6753 = !{i64 2147664889, i64 2147664932, i64 2147664972}
!6754 = !DILocation(line: 326, column: 1, scope: !6122)
!6755 = !{i64 2147665091, i64 2147665134, i64 2147665174}
!6756 = !DILocation(line: 327, column: 1, scope: !6122)
!6757 = !{i64 2147665290, i64 2147665333, i64 2147665373}
!6758 = !DILocation(line: 328, column: 1, scope: !6122)
!6759 = !{i64 2147665507, i64 2147665550, i64 2147665590}
!6760 = !DILocation(line: 330, column: 1, scope: !6122)
!6761 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !582, file: !582, line: 30, type: !588, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !565, retainedNodes: !6762)
!6762 = !{!6763, !6764}
!6763 = !DILocalVariable(name: "arg", arg: 1, scope: !6761, file: !582, line: 30, type: !590)
!6764 = !DILocalVariable(name: "key", scope: !6761, file: !582, line: 32, type: !113)
!6765 = !DILocation(line: 0, scope: !6761)
!6766 = !DILocation(line: 37, column: 2, scope: !6761)
!6767 = !DILocation(line: 38, column: 2, scope: !6761)
!6768 = !DILocation(line: 55, column: 2, scope: !6769, inlinedAt: !6773)
!6769 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4109, file: !4109, line: 42, type: !4110, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !565, retainedNodes: !6770)
!6770 = !{!6771, !6772}
!6771 = !DILocalVariable(name: "key", scope: !6769, file: !4109, line: 44, type: !32)
!6772 = !DILocalVariable(name: "tmp", scope: !6769, file: !4109, line: 53, type: !32)
!6773 = distinct !DILocation(line: 40, column: 8, scope: !6761)
!6774 = !{i64 1951259}
!6775 = !DILocation(line: 0, scope: !6769, inlinedAt: !6773)
!6776 = !DILocalVariable(name: "key", arg: 1, scope: !6777, file: !4109, line: 84, type: !32)
!6777 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4109, file: !4109, line: 84, type: !4122, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !565, retainedNodes: !6778)
!6778 = !{!6776}
!6779 = !DILocation(line: 0, scope: !6777, inlinedAt: !6780)
!6780 = distinct !DILocation(line: 47, column: 2, scope: !6761)
!6781 = !DILocation(line: 95, column: 2, scope: !6777, inlinedAt: !6780)
!6782 = !{i64 1952076}
!6783 = !DILocation(line: 51, column: 18, scope: !6761)
!6784 = !DILocation(line: 53, column: 2, scope: !6761)
!6785 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6786, file: !6786, line: 1609, type: !3435, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !565, retainedNodes: !437)
!6786 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6787 = !DILocation(line: 1611, column: 3, scope: !6785)
!6788 = !DILocation(line: 1612, column: 1, scope: !6785)
!6789 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6786, file: !6786, line: 1629, type: !3435, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !565, retainedNodes: !437)
!6790 = !DILocation(line: 1631, column: 3, scope: !6789)
!6791 = !DILocation(line: 1632, column: 1, scope: !6789)
!6792 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !611, file: !611, line: 26, type: !617, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !608, retainedNodes: !6793)
!6793 = !{!6794}
!6794 = !DILocalVariable(name: "dev", arg: 1, scope: !6792, file: !611, line: 26, type: !619)
!6795 = !DILocation(line: 0, scope: !6792)
!6796 = !DILocation(line: 68, column: 2, scope: !6792)
!6797 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6798, file: !6798, line: 14, type: !5103, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2892, retainedNodes: !6799)
!6798 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6799 = !{!6800, !6801}
!6800 = !DILocalVariable(name: "fmt", arg: 1, scope: !6797, file: !6798, line: 14, type: !105)
!6801 = !DILocalVariable(name: "ap", scope: !6797, file: !6798, line: 16, type: !6802)
!6802 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4170, line: 99, baseType: !6803)
!6803 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4170, line: 40, baseType: !6804)
!6804 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6798, baseType: !6805)
!6805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6806)
!6806 = !{!6807}
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6805, file: !6798, line: 16, baseType: !104, size: 32)
!6808 = !DILocation(line: 0, scope: !6797)
!6809 = !DILocation(line: 16, column: 2, scope: !6797)
!6810 = !DILocation(line: 16, column: 10, scope: !6797)
!6811 = !DILocation(line: 18, column: 2, scope: !6797)
!6812 = !DILocation(line: 19, column: 2, scope: !6797)
!6813 = !DILocation(line: 20, column: 2, scope: !6797)
!6814 = !DILocation(line: 21, column: 1, scope: !6797)
!6815 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6798, file: !6798, line: 23, type: !6816, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2892, retainedNodes: !6818)
!6816 = !DISubroutineType(types: !6817)
!6817 = !{null, !105, !6802}
!6818 = !{!6819, !6820}
!6819 = !DILocalVariable(name: "fmt", arg: 1, scope: !6815, file: !6798, line: 23, type: !105)
!6820 = !DILocalVariable(name: "ap", arg: 2, scope: !6815, file: !6798, line: 23, type: !6802)
!6821 = !DILocation(line: 0, scope: !6815)
!6822 = !DILocation(line: 25, column: 2, scope: !6815)
!6823 = !DILocation(line: 26, column: 1, scope: !6815)
!6824 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6798, file: !6798, line: 52, type: !6825, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2892, retainedNodes: !6827)
!6825 = !DISubroutineType(types: !6826)
!6826 = !{null, !108, !13, !439}
!6827 = !{!6828, !6829, !6830, !6831}
!6828 = !DILocalVariable(name: "level", arg: 1, scope: !6824, file: !6798, line: 52, type: !108)
!6829 = !DILocalVariable(name: "data", arg: 2, scope: !6824, file: !6798, line: 52, type: !13)
!6830 = !DILocalVariable(name: "size", arg: 3, scope: !6824, file: !6798, line: 52, type: !439)
!6831 = !DILocalVariable(name: "data_buffer", scope: !6824, file: !6798, line: 54, type: !105)
!6832 = !DILocation(line: 0, scope: !6824)
!6833 = !DILocation(line: 55, column: 14, scope: !6824)
!6834 = !DILocation(line: 55, column: 2, scope: !6824)
!6835 = !DILocation(line: 56, column: 3, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6824, file: !6798, line: 55, column: 20)
!6837 = !DILocation(line: 57, column: 3, scope: !6836)
!6838 = !DILocation(line: 59, column: 7, scope: !6836)
!6839 = distinct !{!6839, !6834, !6840}
!6840 = !DILocation(line: 65, column: 2, scope: !6824)
!6841 = !DILocation(line: 66, column: 1, scope: !6824)
!6842 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3721, file: !3721, line: 175, type: !3722, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2892, retainedNodes: !6843)
!6843 = !{!6844}
!6844 = !DILocalVariable(name: "level", arg: 1, scope: !6842, file: !3721, line: 175, type: !108)
!6845 = !DILocation(line: 0, scope: !6842)
!6846 = !DILocation(line: 177, column: 2, scope: !6842)
!6847 = !DILocation(line: 189, column: 1, scope: !6842)
!6848 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6798, file: !6798, line: 28, type: !6849, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2892, retainedNodes: !6851)
!6849 = !DISubroutineType(types: !6850)
!6850 = !{null, !105, !439}
!6851 = !{!6852, !6853, !6854, !6856, !6858}
!6852 = !DILocalVariable(name: "data", arg: 1, scope: !6848, file: !6798, line: 28, type: !105)
!6853 = !DILocalVariable(name: "length", arg: 2, scope: !6848, file: !6798, line: 28, type: !439)
!6854 = !DILocalVariable(name: "i", scope: !6855, file: !6798, line: 30, type: !439)
!6855 = distinct !DILexicalBlock(scope: !6848, file: !6798, line: 30, column: 2)
!6856 = !DILocalVariable(name: "i", scope: !6857, file: !6798, line: 40, type: !439)
!6857 = distinct !DILexicalBlock(scope: !6848, file: !6798, line: 40, column: 2)
!6858 = !DILocalVariable(name: "c", scope: !6859, file: !6798, line: 42, type: !165)
!6859 = distinct !DILexicalBlock(scope: !6860, file: !6798, line: 41, column: 19)
!6860 = distinct !DILexicalBlock(scope: !6861, file: !6798, line: 41, column: 7)
!6861 = distinct !DILexicalBlock(scope: !6862, file: !6798, line: 40, column: 54)
!6862 = distinct !DILexicalBlock(scope: !6857, file: !6798, line: 40, column: 2)
!6863 = !DILocation(line: 0, scope: !6848)
!6864 = !DILocation(line: 0, scope: !6855)
!6865 = !DILocation(line: 30, column: 2, scope: !6855)
!6866 = !DILocation(line: 38, column: 2, scope: !6848)
!6867 = !DILocation(line: 0, scope: !6857)
!6868 = !DILocation(line: 40, column: 2, scope: !6857)
!6869 = !DILocation(line: 31, column: 9, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6871, file: !6798, line: 31, column: 7)
!6871 = distinct !DILexicalBlock(scope: !6872, file: !6798, line: 30, column: 54)
!6872 = distinct !DILexicalBlock(scope: !6855, file: !6798, line: 30, column: 2)
!6873 = !DILocation(line: 31, column: 7, scope: !6871)
!6874 = !DILocation(line: 32, column: 35, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6870, file: !6798, line: 31, column: 19)
!6876 = !DILocation(line: 32, column: 20, scope: !6875)
!6877 = !DILocation(line: 32, column: 4, scope: !6875)
!6878 = !DILocation(line: 33, column: 3, scope: !6875)
!6879 = !DILocation(line: 34, column: 4, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6870, file: !6798, line: 33, column: 10)
!6881 = !DILocation(line: 30, column: 50, scope: !6872)
!6882 = !DILocation(line: 30, column: 24, scope: !6872)
!6883 = distinct !{!6883, !6865, !6884}
!6884 = !DILocation(line: 36, column: 2, scope: !6855)
!6885 = !DILocation(line: 49, column: 2, scope: !6848)
!6886 = !DILocation(line: 50, column: 1, scope: !6848)
!6887 = !DILocation(line: 41, column: 9, scope: !6860)
!6888 = !DILocation(line: 41, column: 7, scope: !6861)
!6889 = !DILocation(line: 42, column: 22, scope: !6859)
!6890 = !DILocation(line: 0, scope: !6859)
!6891 = !DILocation(line: 44, column: 25, scope: !6859)
!6892 = !DILocation(line: 44, column: 17, scope: !6859)
!6893 = !DILocation(line: 44, column: 33, scope: !6859)
!6894 = !DILocation(line: 44, column: 4, scope: !6859)
!6895 = !DILocation(line: 45, column: 3, scope: !6859)
!6896 = !DILocation(line: 46, column: 4, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6860, file: !6798, line: 45, column: 10)
!6898 = !DILocation(line: 40, column: 50, scope: !6862)
!6899 = !DILocation(line: 40, column: 24, scope: !6862)
!6900 = distinct !{!6900, !6868, !6901}
!6901 = !DILocation(line: 48, column: 2, scope: !6857)
!6902 = distinct !DISubprogram(name: "isprint", scope: !5895, file: !5895, line: 37, type: !561, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2892, retainedNodes: !6903)
!6903 = !{!6904}
!6904 = !DILocalVariable(name: "c", arg: 1, scope: !6902, file: !5895, line: 37, type: !108)
!6905 = !DILocation(line: 0, scope: !6902)
!6906 = !DILocation(line: 39, column: 38, scope: !6902)
!6907 = !DILocation(line: 39, column: 2, scope: !6902)
!6908 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6909, file: !6909, line: 57, type: !6910, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !6956)
!6909 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6910 = !DISubroutineType(types: !6911)
!6911 = !{null, !32, !6912}
!6912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6913, size: 32)
!6913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6914)
!6914 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3015, line: 141, baseType: !6915)
!6915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3015, line: 97, size: 256, elements: !6916)
!6916 = !{!6917}
!6917 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6915, file: !3015, line: 107, baseType: !6918, size: 256)
!6918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3015, line: 98, size: 256, elements: !6919)
!6919 = !{!6920, !6925, !6930, !6935, !6940, !6945, !6950, !6955}
!6920 = !DIDerivedType(tag: DW_TAG_member, scope: !6918, file: !3015, line: 99, baseType: !6921, size: 32)
!6921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6918, file: !3015, line: 99, size: 32, elements: !6922)
!6922 = !{!6923, !6924}
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6921, file: !3015, line: 99, baseType: !113, size: 32)
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6921, file: !3015, line: 99, baseType: !113, size: 32)
!6925 = !DIDerivedType(tag: DW_TAG_member, scope: !6918, file: !3015, line: 100, baseType: !6926, size: 32, offset: 32)
!6926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6918, file: !3015, line: 100, size: 32, elements: !6927)
!6927 = !{!6928, !6929}
!6928 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6926, file: !3015, line: 100, baseType: !113, size: 32)
!6929 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6926, file: !3015, line: 100, baseType: !113, size: 32)
!6930 = !DIDerivedType(tag: DW_TAG_member, scope: !6918, file: !3015, line: 101, baseType: !6931, size: 32, offset: 64)
!6931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6918, file: !3015, line: 101, size: 32, elements: !6932)
!6932 = !{!6933, !6934}
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6931, file: !3015, line: 101, baseType: !113, size: 32)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6931, file: !3015, line: 101, baseType: !113, size: 32)
!6935 = !DIDerivedType(tag: DW_TAG_member, scope: !6918, file: !3015, line: 102, baseType: !6936, size: 32, offset: 96)
!6936 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6918, file: !3015, line: 102, size: 32, elements: !6937)
!6937 = !{!6938, !6939}
!6938 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6936, file: !3015, line: 102, baseType: !113, size: 32)
!6939 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6936, file: !3015, line: 102, baseType: !113, size: 32)
!6940 = !DIDerivedType(tag: DW_TAG_member, scope: !6918, file: !3015, line: 103, baseType: !6941, size: 32, offset: 128)
!6941 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6918, file: !3015, line: 103, size: 32, elements: !6942)
!6942 = !{!6943, !6944}
!6943 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6941, file: !3015, line: 103, baseType: !113, size: 32)
!6944 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6941, file: !3015, line: 103, baseType: !113, size: 32)
!6945 = !DIDerivedType(tag: DW_TAG_member, scope: !6918, file: !3015, line: 104, baseType: !6946, size: 32, offset: 160)
!6946 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6918, file: !3015, line: 104, size: 32, elements: !6947)
!6947 = !{!6948, !6949}
!6948 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6946, file: !3015, line: 104, baseType: !113, size: 32)
!6949 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6946, file: !3015, line: 104, baseType: !113, size: 32)
!6950 = !DIDerivedType(tag: DW_TAG_member, scope: !6918, file: !3015, line: 105, baseType: !6951, size: 32, offset: 192)
!6951 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6918, file: !3015, line: 105, size: 32, elements: !6952)
!6952 = !{!6953, !6954}
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6951, file: !3015, line: 105, baseType: !113, size: 32)
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6951, file: !3015, line: 105, baseType: !113, size: 32)
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6918, file: !3015, line: 106, baseType: !113, size: 32, offset: 224)
!6956 = !{!6957, !6958}
!6957 = !DILocalVariable(name: "reason", arg: 1, scope: !6908, file: !6909, line: 57, type: !32)
!6958 = !DILocalVariable(name: "esf", arg: 2, scope: !6908, file: !6909, line: 57, type: !6912)
!6959 = !DILocation(line: 0, scope: !6908)
!6960 = !DILocation(line: 60, column: 10, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6908, file: !6909, line: 60, column: 6)
!6962 = !DILocation(line: 60, column: 6, scope: !6908)
!6963 = !DILocation(line: 61, column: 3, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6961, file: !6909, line: 60, column: 19)
!6965 = !DILocation(line: 62, column: 2, scope: !6964)
!6966 = !DILocation(line: 63, column: 2, scope: !6908)
!6967 = !DILocation(line: 64, column: 1, scope: !6908)
!6968 = distinct !DISubprogram(name: "esf_dump", scope: !6909, file: !6909, line: 20, type: !6969, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !6971)
!6969 = !DISubroutineType(types: !6970)
!6970 = !{null, !6912}
!6971 = !{!6972}
!6972 = !DILocalVariable(name: "esf", arg: 1, scope: !6968, file: !6909, line: 20, type: !6912)
!6973 = !DILocation(line: 0, scope: !6968)
!6974 = !DILocation(line: 22, column: 2, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6976, file: !6909, line: 22, column: 2)
!6976 = distinct !DILexicalBlock(scope: !6977, file: !6909, line: 22, column: 2)
!6977 = distinct !DILexicalBlock(scope: !6978, file: !6909, line: 22, column: 2)
!6978 = distinct !DILexicalBlock(scope: !6968, file: !6909, line: 22, column: 2)
!6979 = !DILocation(line: 24, column: 2, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6981, file: !6909, line: 24, column: 2)
!6981 = distinct !DILexicalBlock(scope: !6982, file: !6909, line: 24, column: 2)
!6982 = distinct !DILexicalBlock(scope: !6983, file: !6909, line: 24, column: 2)
!6983 = distinct !DILexicalBlock(scope: !6968, file: !6909, line: 24, column: 2)
!6984 = !DILocation(line: 26, column: 2, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6986, file: !6909, line: 26, column: 2)
!6986 = distinct !DILexicalBlock(scope: !6987, file: !6909, line: 26, column: 2)
!6987 = distinct !DILexicalBlock(scope: !6988, file: !6909, line: 26, column: 2)
!6988 = distinct !DILexicalBlock(scope: !6968, file: !6909, line: 26, column: 2)
!6989 = !DILocation(line: 53, column: 2, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6991, file: !6909, line: 53, column: 2)
!6991 = distinct !DILexicalBlock(scope: !6992, file: !6909, line: 53, column: 2)
!6992 = distinct !DILexicalBlock(scope: !6993, file: !6909, line: 53, column: 2)
!6993 = distinct !DILexicalBlock(scope: !6968, file: !6909, line: 53, column: 2)
!6994 = !DILocation(line: 55, column: 1, scope: !6968)
!6995 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6909, file: !6909, line: 82, type: !6996, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !7011)
!6996 = !DISubroutineType(types: !6997)
!6997 = !{null, !6912, !6998}
!6998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6999, size: 32)
!6999 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !716, line: 37, baseType: !7000)
!7000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !716, line: 25, size: 288, elements: !7001)
!7001 = !{!7002, !7003, !7004, !7005, !7006, !7007, !7008, !7009, !7010}
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7000, file: !716, line: 26, baseType: !113, size: 32)
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7000, file: !716, line: 27, baseType: !113, size: 32, offset: 32)
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7000, file: !716, line: 28, baseType: !113, size: 32, offset: 64)
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7000, file: !716, line: 29, baseType: !113, size: 32, offset: 96)
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7000, file: !716, line: 30, baseType: !113, size: 32, offset: 128)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7000, file: !716, line: 31, baseType: !113, size: 32, offset: 160)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7000, file: !716, line: 32, baseType: !113, size: 32, offset: 192)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7000, file: !716, line: 33, baseType: !113, size: 32, offset: 224)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7000, file: !716, line: 34, baseType: !113, size: 32, offset: 256)
!7011 = !{!7012, !7013, !7014}
!7012 = !DILocalVariable(name: "esf", arg: 1, scope: !6995, file: !6909, line: 82, type: !6912)
!7013 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6995, file: !6909, line: 82, type: !6998)
!7014 = !DILocalVariable(name: "reason", scope: !6995, file: !6909, line: 88, type: !32)
!7015 = !DILocation(line: 0, scope: !6995)
!7016 = !DILocation(line: 88, column: 35, scope: !6995)
!7017 = !DILocation(line: 108, column: 2, scope: !6995)
!7018 = !DILocation(line: 131, column: 1, scope: !6995)
!7019 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6909, file: !6909, line: 133, type: !7020, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !7022)
!7020 = !DISubroutineType(types: !7021)
!7021 = !{null, !104}
!7022 = !{!7023, !7024, !7025}
!7023 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7019, file: !6909, line: 133, type: !104)
!7024 = !DILocalVariable(name: "ssf_contents", scope: !7019, file: !6909, line: 135, type: !1214)
!7025 = !DILocalVariable(name: "oops_esf", scope: !7019, file: !6909, line: 136, type: !6914)
!7026 = !DILocation(line: 0, scope: !7019)
!7027 = !DILocation(line: 136, column: 2, scope: !7019)
!7028 = !DILocation(line: 136, column: 15, scope: !7019)
!7029 = !DILocation(line: 139, column: 22, scope: !7019)
!7030 = !DILocation(line: 139, column: 17, scope: !7019)
!7031 = !DILocation(line: 139, column: 20, scope: !7019)
!7032 = !DILocation(line: 141, column: 2, scope: !7019)
!7033 = !DILocation(line: 142, column: 2, scope: !7019)
!7034 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7035, file: !7035, line: 40, type: !4122, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2906, retainedNodes: !7036)
!7035 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7036 = !{!7037}
!7037 = !DILocalVariable(name: "irq", arg: 1, scope: !7034, file: !7035, line: 40, type: !32)
!7038 = !DILocation(line: 0, scope: !7034)
!7039 = !DILocation(line: 42, column: 2, scope: !7034)
!7040 = !DILocation(line: 43, column: 1, scope: !7034)
!7041 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !792, file: !792, line: 1684, type: !7042, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2906, retainedNodes: !7044)
!7042 = !DISubroutineType(types: !7043)
!7043 = !{null, !1151}
!7044 = !{!7045}
!7045 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7041, file: !792, line: 1684, type: !1151)
!7046 = !DILocation(line: 0, scope: !7041)
!7047 = !DILocation(line: 1686, column: 23, scope: !7048)
!7048 = distinct !DILexicalBlock(scope: !7041, file: !792, line: 1686, column: 7)
!7049 = !DILocation(line: 1686, column: 7, scope: !7041)
!7050 = !DILocation(line: 1688, column: 5, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7048, file: !792, line: 1687, column: 3)
!7052 = !{i64 2150458689}
!7053 = !DILocation(line: 1689, column: 81, scope: !7051)
!7054 = !DILocation(line: 1689, column: 60, scope: !7051)
!7055 = !DILocation(line: 1689, column: 34, scope: !7051)
!7056 = !DILocation(line: 1689, column: 5, scope: !7051)
!7057 = !DILocation(line: 1689, column: 43, scope: !7051)
!7058 = !DILocation(line: 1690, column: 5, scope: !7051)
!7059 = !{i64 2150458803}
!7060 = !DILocation(line: 1691, column: 3, scope: !7051)
!7061 = !DILocation(line: 1692, column: 1, scope: !7041)
!7062 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7035, file: !7035, line: 45, type: !4122, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2906, retainedNodes: !7063)
!7063 = !{!7064}
!7064 = !DILocalVariable(name: "irq", arg: 1, scope: !7062, file: !7035, line: 45, type: !32)
!7065 = !DILocation(line: 0, scope: !7062)
!7066 = !DILocation(line: 47, column: 2, scope: !7062)
!7067 = !DILocation(line: 48, column: 1, scope: !7062)
!7068 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !792, file: !792, line: 1722, type: !7042, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2906, retainedNodes: !7069)
!7069 = !{!7070}
!7070 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7068, file: !792, line: 1722, type: !1151)
!7071 = !DILocation(line: 0, scope: !7068)
!7072 = !DILocation(line: 1724, column: 23, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7068, file: !792, line: 1724, column: 7)
!7074 = !DILocation(line: 1724, column: 7, scope: !7068)
!7075 = !DILocation(line: 1726, column: 81, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7073, file: !792, line: 1725, column: 3)
!7077 = !DILocation(line: 1726, column: 60, scope: !7076)
!7078 = !DILocation(line: 1726, column: 34, scope: !7076)
!7079 = !DILocation(line: 1726, column: 5, scope: !7076)
!7080 = !DILocation(line: 1726, column: 43, scope: !7076)
!7081 = !DILocation(line: 271, column: 3, scope: !7082, inlinedAt: !7084)
!7082 = distinct !DISubprogram(name: "__DSB", scope: !7083, file: !7083, line: 269, type: !3435, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2906, retainedNodes: !437)
!7083 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7084 = distinct !DILocation(line: 1727, column: 5, scope: !7076)
!7085 = !{i64 2913072}
!7086 = !DILocation(line: 260, column: 3, scope: !7087, inlinedAt: !7088)
!7087 = distinct !DISubprogram(name: "__ISB", scope: !7083, file: !7083, line: 258, type: !3435, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2906, retainedNodes: !437)
!7088 = distinct !DILocation(line: 1728, column: 5, scope: !7076)
!7089 = !{i64 2912789}
!7090 = !DILocation(line: 1729, column: 3, scope: !7076)
!7091 = !DILocation(line: 1730, column: 1, scope: !7068)
!7092 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7035, file: !7035, line: 50, type: !7093, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2906, retainedNodes: !7095)
!7093 = !DISubroutineType(types: !7094)
!7094 = !{!108, !32}
!7095 = !{!7096}
!7096 = !DILocalVariable(name: "irq", arg: 1, scope: !7092, file: !7035, line: 50, type: !32)
!7097 = !DILocation(line: 0, scope: !7092)
!7098 = !DILocation(line: 52, column: 20, scope: !7092)
!7099 = !DILocation(line: 52, column: 9, scope: !7092)
!7100 = !DILocation(line: 52, column: 41, scope: !7092)
!7101 = !DILocation(line: 52, column: 39, scope: !7092)
!7102 = !DILocation(line: 52, column: 2, scope: !7092)
!7103 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7035, file: !7035, line: 64, type: !7104, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2906, retainedNodes: !7106)
!7104 = !DISubroutineType(types: !7105)
!7105 = !{null, !32, !32, !113}
!7106 = !{!7107, !7108, !7109}
!7107 = !DILocalVariable(name: "irq", arg: 1, scope: !7103, file: !7035, line: 64, type: !32)
!7108 = !DILocalVariable(name: "prio", arg: 2, scope: !7103, file: !7035, line: 64, type: !32)
!7109 = !DILocalVariable(name: "flags", arg: 3, scope: !7103, file: !7035, line: 64, type: !113)
!7110 = !DILocation(line: 0, scope: !7103)
!7111 = !DILocation(line: 83, column: 8, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7113, file: !7035, line: 82, column: 9)
!7113 = distinct !DILexicalBlock(scope: !7103, file: !7035, line: 76, column: 6)
!7114 = !DILocation(line: 95, column: 2, scope: !7103)
!7115 = !DILocation(line: 96, column: 1, scope: !7103)
!7116 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !792, file: !792, line: 1814, type: !7117, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2906, retainedNodes: !7119)
!7117 = !DISubroutineType(types: !7118)
!7118 = !{null, !1151, !113}
!7119 = !{!7120, !7121}
!7120 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7116, file: !792, line: 1814, type: !1151)
!7121 = !DILocalVariable(name: "priority", arg: 2, scope: !7116, file: !792, line: 1814, type: !113)
!7122 = !DILocation(line: 0, scope: !7116)
!7123 = !DILocation(line: 0, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7116, file: !792, line: 1816, column: 7)
!7125 = !DILocation(line: 1816, column: 7, scope: !7116)
!7126 = !DILocation(line: 1824, column: 1, scope: !7116)
!7127 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7035, file: !7035, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2906, retainedNodes: !7128)
!7128 = !{!7129}
!7129 = !DILocalVariable(name: "unused", arg: 1, scope: !7127, file: !7035, line: 155, type: !13)
!7130 = !DILocation(line: 0, scope: !7127)
!7131 = !DILocation(line: 159, column: 2, scope: !7127)
!7132 = !DILocation(line: 160, column: 1, scope: !7127)
!7133 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7134, file: !7134, line: 87, type: !3435, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2952, retainedNodes: !437)
!7134 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7135 = !DILocation(line: 89, column: 2, scope: !7133)
!7136 = !DILocation(line: 90, column: 2, scope: !7133)
!7137 = !DILocation(line: 91, column: 1, scope: !7133)
!7138 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7134, file: !7134, line: 23, type: !3435, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!7139 = !DISubprogram(name: "z_arm_int_exit", scope: !7140, file: !7140, line: 153, type: !3435, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!7140 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7141 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7142, file: !7142, line: 256, type: !3435, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2954, retainedNodes: !437)
!7142 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7143 = !DILocation(line: 258, column: 2, scope: !7141)
!7144 = !DILocation(line: 260, column: 2, scope: !7141)
!7145 = !DILocation(line: 262, column: 2, scope: !7141)
!7146 = !DILocation(line: 263, column: 2, scope: !7141)
!7147 = !DILocation(line: 267, column: 2, scope: !7141)
!7148 = !DILocation(line: 268, column: 2, scope: !7141)
!7149 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7142, file: !7142, line: 53, type: !3435, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2954, retainedNodes: !437)
!7150 = !DILocation(line: 55, column: 12, scope: !7149)
!7151 = !DILocation(line: 271, column: 3, scope: !7152, inlinedAt: !7153)
!7152 = distinct !DISubprogram(name: "__DSB", scope: !7083, file: !7083, line: 269, type: !3435, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2954, retainedNodes: !437)
!7153 = distinct !DILocation(line: 56, column: 2, scope: !7149)
!7154 = !{i64 2911743}
!7155 = !DILocation(line: 260, column: 3, scope: !7156, inlinedAt: !7157)
!7156 = distinct !DISubprogram(name: "__ISB", scope: !7083, file: !7083, line: 258, type: !3435, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2954, retainedNodes: !437)
!7157 = distinct !DILocation(line: 57, column: 2, scope: !7149)
!7158 = !{i64 2911460}
!7159 = !DILocation(line: 58, column: 1, scope: !7149)
!7160 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7142, file: !7142, line: 96, type: !3435, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2954, retainedNodes: !437)
!7161 = !DILocation(line: 103, column: 13, scope: !7160)
!7162 = !DILocation(line: 975, column: 3, scope: !7163, inlinedAt: !7168)
!7163 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7083, file: !7083, line: 971, type: !7164, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2954, retainedNodes: !7166)
!7164 = !DISubroutineType(types: !7165)
!7165 = !{!113}
!7166 = !{!7167}
!7167 = !DILocalVariable(name: "result", scope: !7163, file: !7083, line: 973, type: !113)
!7168 = distinct !DILocation(line: 189, column: 16, scope: !7160)
!7169 = !{i64 2932573}
!7170 = !DILocation(line: 0, scope: !7163, inlinedAt: !7168)
!7171 = !DILocation(line: 189, column: 32, scope: !7160)
!7172 = !DILocalVariable(name: "control", arg: 1, scope: !7173, file: !7083, line: 1001, type: !113)
!7173 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7083, file: !7083, line: 1001, type: !7174, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2954, retainedNodes: !7176)
!7174 = !DISubroutineType(types: !7175)
!7175 = !{null, !113}
!7176 = !{!7172}
!7177 = !DILocation(line: 0, scope: !7173, inlinedAt: !7178)
!7178 = distinct !DILocation(line: 189, column: 2, scope: !7160)
!7179 = !DILocation(line: 1003, column: 3, scope: !7173, inlinedAt: !7178)
!7180 = !{i64 2933293}
!7181 = !DILocation(line: 260, column: 3, scope: !7156, inlinedAt: !7182)
!7182 = distinct !DILocation(line: 1004, column: 3, scope: !7173, inlinedAt: !7178)
!7183 = !DILocation(line: 191, column: 1, scope: !7160)
!7184 = distinct !DISubprogram(name: "arch_swap", scope: !7185, file: !7185, line: 33, type: !7093, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !7186)
!7185 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7186 = !{!7187}
!7187 = !DILocalVariable(name: "key", arg: 1, scope: !7184, file: !7185, line: 33, type: !32)
!7188 = !DILocation(line: 0, scope: !7184)
!7189 = !DILocation(line: 36, column: 2, scope: !7184)
!7190 = !DILocation(line: 36, column: 17, scope: !7184)
!7191 = !DILocation(line: 36, column: 25, scope: !7184)
!7192 = !DILocation(line: 37, column: 37, scope: !7184)
!7193 = !DILocation(line: 37, column: 17, scope: !7184)
!7194 = !DILocation(line: 37, column: 35, scope: !7184)
!7195 = !DILocation(line: 41, column: 12, scope: !7184)
!7196 = !DILocalVariable(name: "key", arg: 1, scope: !7197, file: !4109, line: 84, type: !32)
!7197 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4109, file: !4109, line: 84, type: !4122, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !7198)
!7198 = !{!7196}
!7199 = !DILocation(line: 0, scope: !7197, inlinedAt: !7200)
!7200 = distinct !DILocation(line: 44, column: 2, scope: !7184)
!7201 = !DILocation(line: 95, column: 2, scope: !7197, inlinedAt: !7200)
!7202 = !{i64 2054103}
!7203 = !DILocation(line: 53, column: 9, scope: !7184)
!7204 = !DILocation(line: 53, column: 24, scope: !7184)
!7205 = !DILocation(line: 53, column: 2, scope: !7184)
!7206 = distinct !DISubprogram(name: "arch_new_thread", scope: !7207, file: !7207, line: 56, type: !7208, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3010, retainedNodes: !7315)
!7207 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7208 = !DISubroutineType(types: !7209)
!7209 = !{null, !7210, !7310, !443, !5201, !104, !104, !104}
!7210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7211, size: 32)
!7211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !649, line: 245, size: 1024, elements: !7212)
!7212 = !{!7213, !7271, !7283, !7284, !7285, !7286, !7292, !7305}
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7211, file: !649, line: 247, baseType: !7214, size: 384)
!7214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !649, line: 57, size: 384, elements: !7215)
!7215 = !{!7216, !7240, !7247, !7248, !7249, !7258, !7259, !7260}
!7216 = !DIDerivedType(tag: DW_TAG_member, scope: !7214, file: !649, line: 60, baseType: !7217, size: 64)
!7217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7214, file: !649, line: 60, size: 64, elements: !7218)
!7218 = !{!7219, !7234}
!7219 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7217, file: !649, line: 61, baseType: !7220, size: 64)
!7220 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !7221)
!7221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !7222)
!7222 = !{!7223, !7229}
!7223 = !DIDerivedType(tag: DW_TAG_member, scope: !7221, file: !367, line: 38, baseType: !7224, size: 32)
!7224 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7221, file: !367, line: 38, size: 32, elements: !7225)
!7225 = !{!7226, !7228}
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7224, file: !367, line: 39, baseType: !7227, size: 32)
!7227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7221, size: 32)
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7224, file: !367, line: 40, baseType: !7227, size: 32)
!7229 = !DIDerivedType(tag: DW_TAG_member, scope: !7221, file: !367, line: 42, baseType: !7230, size: 32, offset: 32)
!7230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7221, file: !367, line: 42, size: 32, elements: !7231)
!7231 = !{!7232, !7233}
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7230, file: !367, line: 43, baseType: !7227, size: 32)
!7233 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7230, file: !367, line: 44, baseType: !7227, size: 32)
!7234 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7217, file: !649, line: 62, baseType: !7235, size: 64)
!7235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !674, line: 49, size: 64, elements: !7236)
!7236 = !{!7237}
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7235, file: !674, line: 50, baseType: !7238, size: 64)
!7238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7239, size: 64, elements: !679)
!7239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7235, size: 32)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7214, file: !649, line: 68, baseType: !7241, size: 32, offset: 64)
!7241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7242, size: 32)
!7242 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !7243)
!7243 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !7244)
!7244 = !{!7245}
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7243, file: !363, line: 232, baseType: !7246, size: 64)
!7246 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !7221)
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7214, file: !649, line: 71, baseType: !164, size: 8, offset: 96)
!7248 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7214, file: !649, line: 74, baseType: !164, size: 8, offset: 104)
!7249 = !DIDerivedType(tag: DW_TAG_member, scope: !7214, file: !649, line: 90, baseType: !7250, size: 16, offset: 112)
!7250 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7214, file: !649, line: 90, size: 16, elements: !7251)
!7251 = !{!7252, !7257}
!7252 = !DIDerivedType(tag: DW_TAG_member, scope: !7250, file: !649, line: 91, baseType: !7253, size: 16)
!7253 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7250, file: !649, line: 91, size: 16, elements: !7254)
!7254 = !{!7255, !7256}
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7253, file: !649, line: 96, baseType: !697, size: 8)
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7253, file: !649, line: 97, baseType: !164, size: 8, offset: 8)
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7250, file: !649, line: 100, baseType: !168, size: 16)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7214, file: !649, line: 107, baseType: !113, size: 32, offset: 128)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7214, file: !649, line: 127, baseType: !104, size: 32, offset: 160)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7214, file: !649, line: 131, baseType: !7261, size: 192, offset: 192)
!7261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !7262)
!7262 = !{!7263, !7264, !7270}
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7261, file: !363, line: 245, baseType: !7220, size: 64)
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7261, file: !363, line: 246, baseType: !7265, size: 32, offset: 64)
!7265 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !7266)
!7266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7267, size: 32)
!7267 = !DISubroutineType(types: !7268)
!7268 = !{null, !7269}
!7269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7261, size: 32)
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7261, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!7271 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7211, file: !649, line: 250, baseType: !7272, size: 288, offset: 384)
!7272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !716, line: 25, size: 288, elements: !7273)
!7273 = !{!7274, !7275, !7276, !7277, !7278, !7279, !7280, !7281, !7282}
!7274 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7272, file: !716, line: 26, baseType: !113, size: 32)
!7275 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7272, file: !716, line: 27, baseType: !113, size: 32, offset: 32)
!7276 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7272, file: !716, line: 28, baseType: !113, size: 32, offset: 64)
!7277 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7272, file: !716, line: 29, baseType: !113, size: 32, offset: 96)
!7278 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7272, file: !716, line: 30, baseType: !113, size: 32, offset: 128)
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7272, file: !716, line: 31, baseType: !113, size: 32, offset: 160)
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7272, file: !716, line: 32, baseType: !113, size: 32, offset: 192)
!7281 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7272, file: !716, line: 33, baseType: !113, size: 32, offset: 224)
!7282 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7272, file: !716, line: 34, baseType: !113, size: 32, offset: 256)
!7283 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7211, file: !649, line: 253, baseType: !104, size: 32, offset: 672)
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7211, file: !649, line: 256, baseType: !7242, size: 64, offset: 704)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7211, file: !649, line: 294, baseType: !108, size: 32, offset: 768)
!7286 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7211, file: !649, line: 300, baseType: !7287, size: 96, offset: 800)
!7287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !649, line: 149, size: 96, elements: !7288)
!7288 = !{!7289, !7290, !7291}
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7287, file: !649, line: 153, baseType: !22, size: 32)
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7287, file: !649, line: 162, baseType: !439, size: 32, offset: 32)
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7287, file: !649, line: 168, baseType: !439, size: 32, offset: 64)
!7292 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7211, file: !649, line: 325, baseType: !7293, size: 32, offset: 896)
!7293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7294, size: 32)
!7294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !7295)
!7295 = !{!7296, !7302, !7303}
!7296 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7294, file: !359, line: 5074, baseType: !7297, size: 96)
!7297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !742, line: 56, size: 96, elements: !7298)
!7298 = !{!7299, !7300, !7301}
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7297, file: !742, line: 57, baseType: !745, size: 32)
!7300 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7297, file: !742, line: 58, baseType: !104, size: 32, offset: 32)
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7297, file: !742, line: 59, baseType: !439, size: 32, offset: 64)
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7294, file: !359, line: 5075, baseType: !7242, size: 64, offset: 96)
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7294, file: !359, line: 5076, baseType: !7304, offset: 160)
!7304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!7305 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7211, file: !649, line: 343, baseType: !7306, size: 64, offset: 928)
!7306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !716, line: 60, size: 64, elements: !7307)
!7307 = !{!7308, !7309}
!7308 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7306, file: !716, line: 63, baseType: !113, size: 32)
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7306, file: !716, line: 66, baseType: !113, size: 32, offset: 32)
!7310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7311, size: 32)
!7311 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5202, line: 44, baseType: !7312)
!7312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2398, line: 47, size: 8, elements: !7313)
!7313 = !{!7314}
!7314 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7312, file: !2398, line: 48, baseType: !107, size: 8)
!7315 = !{!7316, !7317, !7318, !7319, !7320, !7321, !7322, !7323}
!7316 = !DILocalVariable(name: "thread", arg: 1, scope: !7206, file: !7207, line: 56, type: !7210)
!7317 = !DILocalVariable(name: "stack", arg: 2, scope: !7206, file: !7207, line: 56, type: !7310)
!7318 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7206, file: !7207, line: 57, type: !443)
!7319 = !DILocalVariable(name: "entry", arg: 4, scope: !7206, file: !7207, line: 57, type: !5201)
!7320 = !DILocalVariable(name: "p1", arg: 5, scope: !7206, file: !7207, line: 58, type: !104)
!7321 = !DILocalVariable(name: "p2", arg: 6, scope: !7206, file: !7207, line: 58, type: !104)
!7322 = !DILocalVariable(name: "p3", arg: 7, scope: !7206, file: !7207, line: 58, type: !104)
!7323 = !DILocalVariable(name: "iframe", scope: !7206, file: !7207, line: 60, type: !3013)
!7324 = !DILocation(line: 0, scope: !7206)
!7325 = !DILocation(line: 85, column: 11, scope: !7206)
!7326 = !DILocation(line: 93, column: 10, scope: !7206)
!7327 = !DILocation(line: 98, column: 13, scope: !7206)
!7328 = !DILocation(line: 100, column: 15, scope: !7206)
!7329 = !DILocation(line: 100, column: 10, scope: !7206)
!7330 = !DILocation(line: 100, column: 13, scope: !7206)
!7331 = !DILocation(line: 101, column: 15, scope: !7206)
!7332 = !DILocation(line: 101, column: 10, scope: !7206)
!7333 = !DILocation(line: 101, column: 13, scope: !7206)
!7334 = !DILocation(line: 102, column: 15, scope: !7206)
!7335 = !DILocation(line: 102, column: 10, scope: !7206)
!7336 = !DILocation(line: 102, column: 13, scope: !7206)
!7337 = !DILocation(line: 103, column: 15, scope: !7206)
!7338 = !DILocation(line: 103, column: 10, scope: !7206)
!7339 = !DILocation(line: 103, column: 13, scope: !7206)
!7340 = !DILocation(line: 106, column: 10, scope: !7206)
!7341 = !DILocation(line: 106, column: 15, scope: !7206)
!7342 = !DILocation(line: 122, column: 29, scope: !7206)
!7343 = !DILocation(line: 122, column: 23, scope: !7206)
!7344 = !DILocation(line: 122, column: 27, scope: !7206)
!7345 = !DILocation(line: 123, column: 15, scope: !7206)
!7346 = !DILocation(line: 123, column: 23, scope: !7206)
!7347 = !DILocation(line: 143, column: 1, scope: !7206)
!7348 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7207, file: !7207, line: 385, type: !7349, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3010, retainedNodes: !7352)
!7349 = !DISubroutineType(types: !7350)
!7350 = !{!113, !7351, !7351}
!7351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!7352 = !{!7353, !7354, !7355, !7358}
!7353 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7348, file: !7207, line: 385, type: !7351)
!7354 = !DILocalVariable(name: "psp", arg: 2, scope: !7348, file: !7207, line: 385, type: !7351)
!7355 = !DILocalVariable(name: "thread", scope: !7348, file: !7207, line: 388, type: !7356)
!7356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7357, size: 32)
!7357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7211)
!7358 = !DILocalVariable(name: "guard_len", scope: !7348, file: !7207, line: 405, type: !113)
!7359 = !DILocation(line: 0, scope: !7348)
!7360 = !DILocation(line: 388, column: 34, scope: !7348)
!7361 = !DILocation(line: 390, column: 13, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7348, file: !7207, line: 390, column: 6)
!7363 = !DILocation(line: 390, column: 6, scope: !7348)
!7364 = !DILocation(line: 438, column: 6, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7348, file: !7207, line: 438, column: 6)
!7366 = !DILocation(line: 438, column: 6, scope: !7348)
!7367 = !DILocation(line: 442, column: 3, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7365, file: !7207, line: 440, column: 22)
!7369 = !DILocation(line: 455, column: 1, scope: !7348)
!7370 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7207, file: !7207, line: 530, type: !7371, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3010, retainedNodes: !7373)
!7371 = !DISubroutineType(types: !7372)
!7372 = !{null, !7210, !443, !5201}
!7373 = !{!7374, !7375, !7376}
!7374 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7370, file: !7207, line: 530, type: !7210)
!7375 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7370, file: !7207, line: 530, type: !443)
!7376 = !DILocalVariable(name: "_main", arg: 3, scope: !7370, file: !7207, line: 531, type: !5201)
!7377 = !DILocation(line: 0, scope: !7370)
!7378 = !DILocation(line: 535, column: 11, scope: !7370)
!7379 = !DILocation(line: 560, column: 2, scope: !7370)
!7380 = !DILocation(line: 576, column: 2, scope: !7370)
!7381 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7382 = !DILocation(line: 603, column: 2, scope: !7370)
!7383 = distinct !DISubprogram(name: "z_arm_fault", scope: !7384, file: !7384, line: 1036, type: !7385, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3053, retainedNodes: !7400)
!7384 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7385 = !DISubroutineType(types: !7386)
!7386 = !{null, !113, !113, !113, !7387}
!7387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7388, size: 32)
!7388 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !716, line: 37, baseType: !7389)
!7389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !716, line: 25, size: 288, elements: !7390)
!7390 = !{!7391, !7392, !7393, !7394, !7395, !7396, !7397, !7398, !7399}
!7391 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7389, file: !716, line: 26, baseType: !113, size: 32)
!7392 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7389, file: !716, line: 27, baseType: !113, size: 32, offset: 32)
!7393 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7389, file: !716, line: 28, baseType: !113, size: 32, offset: 64)
!7394 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7389, file: !716, line: 29, baseType: !113, size: 32, offset: 96)
!7395 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7389, file: !716, line: 30, baseType: !113, size: 32, offset: 128)
!7396 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7389, file: !716, line: 31, baseType: !113, size: 32, offset: 160)
!7397 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7389, file: !716, line: 32, baseType: !113, size: 32, offset: 192)
!7398 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7389, file: !716, line: 33, baseType: !113, size: 32, offset: 224)
!7399 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7389, file: !716, line: 34, baseType: !113, size: 32, offset: 256)
!7400 = !{!7401, !7402, !7403, !7404, !7405, !7406, !7407, !7408, !7409, !7410}
!7401 = !DILocalVariable(name: "msp", arg: 1, scope: !7383, file: !7384, line: 1036, type: !113)
!7402 = !DILocalVariable(name: "psp", arg: 2, scope: !7383, file: !7384, line: 1036, type: !113)
!7403 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7383, file: !7384, line: 1036, type: !113)
!7404 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7383, file: !7384, line: 1037, type: !7387)
!7405 = !DILocalVariable(name: "reason", scope: !7383, file: !7384, line: 1039, type: !113)
!7406 = !DILocalVariable(name: "fault", scope: !7383, file: !7384, line: 1040, type: !108)
!7407 = !DILocalVariable(name: "recoverable", scope: !7383, file: !7384, line: 1041, type: !422)
!7408 = !DILocalVariable(name: "nested_exc", scope: !7383, file: !7384, line: 1041, type: !422)
!7409 = !DILocalVariable(name: "esf", scope: !7383, file: !7384, line: 1042, type: !3081)
!7410 = !DILocalVariable(name: "esf_copy", scope: !7383, file: !7384, line: 1047, type: !3082)
!7411 = !DILocation(line: 0, scope: !7383)
!7412 = !DILocation(line: 1040, column: 19, scope: !7383)
!7413 = !DILocation(line: 1040, column: 24, scope: !7383)
!7414 = !DILocation(line: 1041, column: 2, scope: !7383)
!7415 = !DILocation(line: 1047, column: 2, scope: !7383)
!7416 = !DILocation(line: 1047, column: 15, scope: !7383)
!7417 = !DILocalVariable(name: "key", arg: 1, scope: !7418, file: !4109, line: 84, type: !32)
!7418 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4109, file: !4109, line: 84, type: !4122, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3053, retainedNodes: !7419)
!7419 = !{!7417}
!7420 = !DILocation(line: 0, scope: !7418, inlinedAt: !7421)
!7421 = distinct !DILocation(line: 1050, column: 2, scope: !7383)
!7422 = !DILocation(line: 95, column: 2, scope: !7418, inlinedAt: !7421)
!7423 = !{i64 2087347}
!7424 = !DILocation(line: 1055, column: 9, scope: !7383)
!7425 = !DILocation(line: 1063, column: 11, scope: !7383)
!7426 = !DILocation(line: 1064, column: 6, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7383, file: !7384, line: 1064, column: 6)
!7428 = !{i8 0, i8 2}
!7429 = !DILocation(line: 1064, column: 6, scope: !7383)
!7430 = !DILocation(line: 1070, column: 20, scope: !7383)
!7431 = !DILocation(line: 1070, column: 2, scope: !7383)
!7432 = !DILocation(line: 1089, column: 6, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7383, file: !7384, line: 1089, column: 6)
!7434 = !DILocation(line: 0, scope: !7433)
!7435 = !DILocation(line: 1089, column: 6, scope: !7383)
!7436 = !DILocation(line: 1090, column: 28, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7438, file: !7384, line: 1090, column: 7)
!7438 = distinct !DILexicalBlock(scope: !7433, file: !7384, line: 1089, column: 18)
!7439 = !DILocation(line: 1090, column: 44, scope: !7437)
!7440 = !DILocation(line: 1090, column: 7, scope: !7438)
!7441 = !DILocation(line: 1091, column: 24, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7437, file: !7384, line: 1090, column: 50)
!7443 = !DILocation(line: 1092, column: 3, scope: !7442)
!7444 = !DILocation(line: 1094, column: 23, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7433, file: !7384, line: 1093, column: 9)
!7446 = !DILocation(line: 1097, column: 2, scope: !7383)
!7447 = !DILocation(line: 1098, column: 1, scope: !7383)
!7448 = distinct !DISubprogram(name: "get_esf", scope: !7384, file: !7384, line: 894, type: !7449, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3053, retainedNodes: !7452)
!7449 = !DISubroutineType(types: !7450)
!7450 = !{!3081, !113, !113, !113, !7451}
!7451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!7452 = !{!7453, !7454, !7455, !7456, !7457, !7458}
!7453 = !DILocalVariable(name: "msp", arg: 1, scope: !7448, file: !7384, line: 894, type: !113)
!7454 = !DILocalVariable(name: "psp", arg: 2, scope: !7448, file: !7384, line: 894, type: !113)
!7455 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7448, file: !7384, line: 894, type: !113)
!7456 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7448, file: !7384, line: 895, type: !7451)
!7457 = !DILocalVariable(name: "alternative_state_exc", scope: !7448, file: !7384, line: 897, type: !422)
!7458 = !DILocalVariable(name: "ptr_esf", scope: !7448, file: !7384, line: 898, type: !3081)
!7459 = !DILocation(line: 0, scope: !7448)
!7460 = !DILocation(line: 900, column: 14, scope: !7448)
!7461 = !DILocation(line: 902, column: 49, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7448, file: !7384, line: 902, column: 6)
!7463 = !DILocation(line: 902, column: 6, scope: !7448)
!7464 = !DILocation(line: 983, column: 44, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7448, file: !7384, line: 983, column: 6)
!7466 = !DILocation(line: 985, column: 3, scope: !7467)
!7467 = distinct !DILexicalBlock(scope: !7468, file: !7384, line: 985, column: 3)
!7468 = distinct !DILexicalBlock(scope: !7469, file: !7384, line: 985, column: 3)
!7469 = distinct !DILexicalBlock(scope: !7470, file: !7384, line: 985, column: 3)
!7470 = distinct !DILexicalBlock(scope: !7471, file: !7384, line: 985, column: 3)
!7471 = distinct !DILexicalBlock(scope: !7465, file: !7384, line: 984, column: 47)
!7472 = !DILocation(line: 986, column: 3, scope: !7471)
!7473 = !DILocation(line: 983, column: 18, scope: !7465)
!7474 = !DILocation(line: 991, column: 7, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7476, file: !7384, line: 990, column: 30)
!7476 = distinct !DILexicalBlock(scope: !7448, file: !7384, line: 990, column: 6)
!7477 = !DILocation(line: 998, column: 16, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7479, file: !7384, line: 995, column: 10)
!7479 = distinct !DILexicalBlock(scope: !7475, file: !7384, line: 991, column: 7)
!7480 = !DILocation(line: 1002, column: 2, scope: !7448)
!7481 = !DILocation(line: 1003, column: 1, scope: !7448)
!7482 = distinct !DISubprogram(name: "fault_handle", scope: !7384, file: !7384, line: 786, type: !7483, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3053, retainedNodes: !7485)
!7483 = !DISubroutineType(types: !7484)
!7484 = !{!113, !3081, !108, !7451}
!7485 = !{!7486, !7487, !7488, !7489}
!7486 = !DILocalVariable(name: "esf", arg: 1, scope: !7482, file: !7384, line: 786, type: !3081)
!7487 = !DILocalVariable(name: "fault", arg: 2, scope: !7482, file: !7384, line: 786, type: !108)
!7488 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7482, file: !7384, line: 786, type: !7451)
!7489 = !DILocalVariable(name: "reason", scope: !7482, file: !7384, line: 788, type: !113)
!7490 = !DILocation(line: 0, scope: !7482)
!7491 = !DILocation(line: 790, column: 15, scope: !7482)
!7492 = !DILocation(line: 792, column: 2, scope: !7482)
!7493 = !DILocation(line: 794, column: 12, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7482, file: !7384, line: 792, column: 17)
!7495 = !DILocation(line: 795, column: 3, scope: !7494)
!7496 = !DILocation(line: 800, column: 12, scope: !7494)
!7497 = !DILocation(line: 801, column: 3, scope: !7494)
!7498 = !DILocation(line: 803, column: 12, scope: !7494)
!7499 = !DILocation(line: 804, column: 3, scope: !7494)
!7500 = !DILocation(line: 806, column: 12, scope: !7494)
!7501 = !DILocation(line: 807, column: 3, scope: !7494)
!7502 = !DILocation(line: 814, column: 3, scope: !7494)
!7503 = !DILocation(line: 815, column: 3, scope: !7494)
!7504 = !DILocation(line: 820, column: 3, scope: !7494)
!7505 = !DILocation(line: 821, column: 3, scope: !7494)
!7506 = !DILocation(line: 829, column: 2, scope: !7482)
!7507 = distinct !DISubprogram(name: "hard_fault", scope: !7384, file: !7384, line: 709, type: !7508, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3053, retainedNodes: !7510)
!7508 = !DISubroutineType(types: !7509)
!7509 = !{!113, !3081, !7451}
!7510 = !{!7511, !7512, !7513}
!7511 = !DILocalVariable(name: "esf", arg: 1, scope: !7507, file: !7384, line: 709, type: !3081)
!7512 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7507, file: !7384, line: 709, type: !7451)
!7513 = !DILocalVariable(name: "reason", scope: !7507, file: !7384, line: 711, type: !113)
!7514 = !DILocation(line: 0, scope: !7507)
!7515 = !DILocation(line: 713, column: 2, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7517, file: !7384, line: 713, column: 2)
!7517 = distinct !DILexicalBlock(scope: !7518, file: !7384, line: 713, column: 2)
!7518 = distinct !DILexicalBlock(scope: !7519, file: !7384, line: 713, column: 2)
!7519 = distinct !DILexicalBlock(scope: !7507, file: !7384, line: 713, column: 2)
!7520 = !DILocation(line: 732, column: 15, scope: !7507)
!7521 = !DILocation(line: 734, column: 12, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7507, file: !7384, line: 734, column: 6)
!7523 = !DILocation(line: 734, column: 17, scope: !7522)
!7524 = !DILocation(line: 734, column: 41, scope: !7522)
!7525 = !DILocation(line: 734, column: 6, scope: !7507)
!7526 = !DILocation(line: 735, column: 3, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7528, file: !7384, line: 735, column: 3)
!7528 = distinct !DILexicalBlock(scope: !7529, file: !7384, line: 735, column: 3)
!7529 = distinct !DILexicalBlock(scope: !7530, file: !7384, line: 735, column: 3)
!7530 = distinct !DILexicalBlock(scope: !7531, file: !7384, line: 735, column: 3)
!7531 = distinct !DILexicalBlock(scope: !7522, file: !7384, line: 734, column: 47)
!7532 = !DILocation(line: 736, column: 2, scope: !7531)
!7533 = !DILocation(line: 736, column: 19, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7522, file: !7384, line: 736, column: 13)
!7535 = !DILocation(line: 736, column: 49, scope: !7534)
!7536 = !DILocation(line: 736, column: 13, scope: !7522)
!7537 = !DILocation(line: 737, column: 3, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7539, file: !7384, line: 737, column: 3)
!7539 = distinct !DILexicalBlock(scope: !7540, file: !7384, line: 737, column: 3)
!7540 = distinct !DILexicalBlock(scope: !7541, file: !7384, line: 737, column: 3)
!7541 = distinct !DILexicalBlock(scope: !7542, file: !7384, line: 737, column: 3)
!7542 = distinct !DILexicalBlock(scope: !7534, file: !7384, line: 736, column: 55)
!7543 = !DILocation(line: 738, column: 2, scope: !7542)
!7544 = !DILocation(line: 738, column: 19, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7534, file: !7384, line: 738, column: 13)
!7546 = !DILocation(line: 738, column: 24, scope: !7545)
!7547 = !DILocation(line: 738, column: 47, scope: !7545)
!7548 = !DILocation(line: 738, column: 13, scope: !7534)
!7549 = !DILocation(line: 739, column: 3, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7551, file: !7384, line: 739, column: 3)
!7551 = distinct !DILexicalBlock(scope: !7552, file: !7384, line: 739, column: 3)
!7552 = distinct !DILexicalBlock(scope: !7553, file: !7384, line: 739, column: 3)
!7553 = distinct !DILexicalBlock(scope: !7554, file: !7384, line: 739, column: 3)
!7554 = distinct !DILexicalBlock(scope: !7545, file: !7384, line: 738, column: 53)
!7555 = !DILocation(line: 740, column: 7, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7554, file: !7384, line: 740, column: 7)
!7557 = !DILocation(line: 740, column: 7, scope: !7554)
!7558 = !DILocation(line: 741, column: 4, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7560, file: !7384, line: 741, column: 4)
!7560 = distinct !DILexicalBlock(scope: !7561, file: !7384, line: 741, column: 4)
!7561 = distinct !DILexicalBlock(scope: !7562, file: !7384, line: 741, column: 4)
!7562 = distinct !DILexicalBlock(scope: !7563, file: !7384, line: 741, column: 4)
!7563 = distinct !DILexicalBlock(scope: !7556, file: !7384, line: 740, column: 38)
!7564 = !DILocation(line: 742, column: 24, scope: !7563)
!7565 = !DILocation(line: 743, column: 3, scope: !7563)
!7566 = !DILocation(line: 743, column: 20, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7556, file: !7384, line: 743, column: 14)
!7568 = !DILocation(line: 743, column: 25, scope: !7567)
!7569 = !DILocation(line: 743, column: 52, scope: !7567)
!7570 = !DILocation(line: 743, column: 14, scope: !7556)
!7571 = !DILocation(line: 744, column: 13, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7567, file: !7384, line: 743, column: 58)
!7573 = !DILocation(line: 745, column: 3, scope: !7572)
!7574 = !DILocation(line: 745, column: 20, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7567, file: !7384, line: 745, column: 14)
!7576 = !DILocation(line: 745, column: 25, scope: !7575)
!7577 = !DILocation(line: 745, column: 52, scope: !7575)
!7578 = !DILocation(line: 745, column: 14, scope: !7567)
!7579 = !DILocation(line: 746, column: 13, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7575, file: !7384, line: 745, column: 58)
!7581 = !DILocation(line: 747, column: 3, scope: !7580)
!7582 = !DILocation(line: 747, column: 20, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7575, file: !7384, line: 747, column: 14)
!7584 = !DILocation(line: 747, column: 52, scope: !7583)
!7585 = !DILocation(line: 747, column: 14, scope: !7575)
!7586 = !DILocation(line: 748, column: 13, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7583, file: !7384, line: 747, column: 58)
!7588 = !DILocation(line: 753, column: 3, scope: !7587)
!7589 = !DILocation(line: 766, column: 2, scope: !7507)
!7590 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7384, file: !7384, line: 229, type: !7483, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3053, retainedNodes: !7591)
!7591 = !{!7592, !7593, !7594, !7595, !7596, !7597, !7600}
!7592 = !DILocalVariable(name: "esf", arg: 1, scope: !7590, file: !7384, line: 229, type: !3081)
!7593 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7590, file: !7384, line: 229, type: !108)
!7594 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7590, file: !7384, line: 230, type: !7451)
!7595 = !DILocalVariable(name: "reason", scope: !7590, file: !7384, line: 232, type: !113)
!7596 = !DILocalVariable(name: "mmfar", scope: !7590, file: !7384, line: 233, type: !113)
!7597 = !DILocalVariable(name: "temp", scope: !7598, file: !7384, line: 254, type: !113)
!7598 = distinct !DILexicalBlock(scope: !7599, file: !7384, line: 244, column: 48)
!7599 = distinct !DILexicalBlock(scope: !7590, file: !7384, line: 244, column: 6)
!7600 = !DILocalVariable(name: "min_stack_ptr", scope: !7601, file: !7384, line: 309, type: !113)
!7601 = distinct !DILexicalBlock(scope: !7602, file: !7384, line: 308, column: 43)
!7602 = distinct !DILexicalBlock(scope: !7603, file: !7384, line: 308, column: 7)
!7603 = distinct !DILexicalBlock(scope: !7604, file: !7384, line: 289, column: 40)
!7604 = distinct !DILexicalBlock(scope: !7590, file: !7384, line: 288, column: 6)
!7605 = !DILocation(line: 0, scope: !7590)
!7606 = !DILocation(line: 235, column: 2, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7608, file: !7384, line: 235, column: 2)
!7608 = distinct !DILexicalBlock(scope: !7609, file: !7384, line: 235, column: 2)
!7609 = distinct !DILexicalBlock(scope: !7610, file: !7384, line: 235, column: 2)
!7610 = distinct !DILexicalBlock(scope: !7590, file: !7384, line: 235, column: 2)
!7611 = !DILocation(line: 237, column: 12, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7590, file: !7384, line: 237, column: 6)
!7613 = !DILocation(line: 237, column: 17, scope: !7612)
!7614 = !DILocation(line: 237, column: 41, scope: !7612)
!7615 = !DILocation(line: 237, column: 6, scope: !7590)
!7616 = !DILocation(line: 238, column: 3, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7618, file: !7384, line: 238, column: 3)
!7618 = distinct !DILexicalBlock(scope: !7619, file: !7384, line: 238, column: 3)
!7619 = distinct !DILexicalBlock(scope: !7620, file: !7384, line: 238, column: 3)
!7620 = distinct !DILexicalBlock(scope: !7621, file: !7384, line: 238, column: 3)
!7621 = distinct !DILexicalBlock(scope: !7612, file: !7384, line: 237, column: 47)
!7622 = !DILocation(line: 240, column: 2, scope: !7621)
!7623 = !DILocation(line: 241, column: 12, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7590, file: !7384, line: 241, column: 6)
!7625 = !DILocation(line: 241, column: 17, scope: !7624)
!7626 = !DILocation(line: 241, column: 43, scope: !7624)
!7627 = !DILocation(line: 241, column: 6, scope: !7590)
!7628 = !DILocation(line: 242, column: 3, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7630, file: !7384, line: 242, column: 3)
!7630 = distinct !DILexicalBlock(scope: !7631, file: !7384, line: 242, column: 3)
!7631 = distinct !DILexicalBlock(scope: !7632, file: !7384, line: 242, column: 3)
!7632 = distinct !DILexicalBlock(scope: !7633, file: !7384, line: 242, column: 3)
!7633 = distinct !DILexicalBlock(scope: !7624, file: !7384, line: 241, column: 49)
!7634 = !DILocation(line: 243, column: 2, scope: !7633)
!7635 = !DILocation(line: 244, column: 12, scope: !7599)
!7636 = !DILocation(line: 244, column: 17, scope: !7599)
!7637 = !DILocation(line: 244, column: 42, scope: !7599)
!7638 = !DILocation(line: 244, column: 6, scope: !7590)
!7639 = !DILocation(line: 245, column: 3, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7641, file: !7384, line: 245, column: 3)
!7641 = distinct !DILexicalBlock(scope: !7642, file: !7384, line: 245, column: 3)
!7642 = distinct !DILexicalBlock(scope: !7643, file: !7384, line: 245, column: 3)
!7643 = distinct !DILexicalBlock(scope: !7598, file: !7384, line: 245, column: 3)
!7644 = !DILocation(line: 254, column: 24, scope: !7598)
!7645 = !DILocation(line: 0, scope: !7598)
!7646 = !DILocation(line: 256, column: 13, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7598, file: !7384, line: 256, column: 7)
!7648 = !DILocation(line: 256, column: 18, scope: !7647)
!7649 = !DILocation(line: 256, column: 44, scope: !7647)
!7650 = !DILocation(line: 256, column: 7, scope: !7598)
!7651 = !DILocation(line: 258, column: 4, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7653, file: !7384, line: 258, column: 4)
!7653 = distinct !DILexicalBlock(scope: !7654, file: !7384, line: 258, column: 4)
!7654 = distinct !DILexicalBlock(scope: !7655, file: !7384, line: 258, column: 4)
!7655 = distinct !DILexicalBlock(scope: !7656, file: !7384, line: 258, column: 4)
!7656 = distinct !DILexicalBlock(scope: !7647, file: !7384, line: 256, column: 50)
!7657 = !DILocation(line: 259, column: 24, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7656, file: !7384, line: 259, column: 8)
!7659 = !DILocation(line: 259, column: 8, scope: !7656)
!7660 = !DILocation(line: 261, column: 15, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7658, file: !7384, line: 259, column: 30)
!7662 = !DILocation(line: 262, column: 4, scope: !7661)
!7663 = !DILocation(line: 265, column: 12, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7590, file: !7384, line: 265, column: 6)
!7665 = !DILocation(line: 265, column: 17, scope: !7664)
!7666 = !DILocation(line: 265, column: 42, scope: !7664)
!7667 = !DILocation(line: 265, column: 6, scope: !7590)
!7668 = !DILocation(line: 266, column: 3, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7670, file: !7384, line: 266, column: 3)
!7670 = distinct !DILexicalBlock(scope: !7671, file: !7384, line: 266, column: 3)
!7671 = distinct !DILexicalBlock(scope: !7672, file: !7384, line: 266, column: 3)
!7672 = distinct !DILexicalBlock(scope: !7673, file: !7384, line: 266, column: 3)
!7673 = distinct !DILexicalBlock(scope: !7664, file: !7384, line: 265, column: 48)
!7674 = !DILocation(line: 267, column: 2, scope: !7673)
!7675 = !DILocation(line: 269, column: 12, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7590, file: !7384, line: 269, column: 6)
!7677 = !DILocation(line: 269, column: 17, scope: !7676)
!7678 = !DILocation(line: 269, column: 41, scope: !7676)
!7679 = !DILocation(line: 269, column: 6, scope: !7590)
!7680 = !DILocation(line: 270, column: 3, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7682, file: !7384, line: 270, column: 3)
!7682 = distinct !DILexicalBlock(scope: !7683, file: !7384, line: 270, column: 3)
!7683 = distinct !DILexicalBlock(scope: !7684, file: !7384, line: 270, column: 3)
!7684 = distinct !DILexicalBlock(scope: !7685, file: !7384, line: 270, column: 3)
!7685 = distinct !DILexicalBlock(scope: !7676, file: !7384, line: 269, column: 47)
!7686 = !DILocation(line: 272, column: 2, scope: !7685)
!7687 = !DILocation(line: 288, column: 12, scope: !7604)
!7688 = !DILocation(line: 288, column: 17, scope: !7604)
!7689 = !DILocation(line: 288, column: 41, scope: !7604)
!7690 = !DILocation(line: 289, column: 9, scope: !7604)
!7691 = !DILocation(line: 289, column: 14, scope: !7604)
!7692 = !DILocation(line: 288, column: 6, scope: !7590)
!7693 = !DILocation(line: 308, column: 12, scope: !7602)
!7694 = !DILocation(line: 308, column: 17, scope: !7602)
!7695 = !DILocation(line: 308, column: 7, scope: !7603)
!7696 = !DILocation(line: 310, column: 6, scope: !7601)
!7697 = !DILocation(line: 309, column: 29, scope: !7601)
!7698 = !DILocation(line: 0, scope: !7601)
!7699 = !DILocation(line: 312, column: 8, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7601, file: !7384, line: 312, column: 8)
!7701 = !DILocation(line: 312, column: 8, scope: !7601)
!7702 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7703, file: !7083, line: 1099, type: !113)
!7703 = distinct !DISubprogram(name: "__set_PSP", scope: !7083, file: !7083, line: 1099, type: !7174, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3053, retainedNodes: !7704)
!7704 = !{!7702}
!7705 = !DILocation(line: 0, scope: !7703, inlinedAt: !7706)
!7706 = distinct !DILocation(line: 338, column: 5, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !7700, file: !7384, line: 312, column: 23)
!7708 = !DILocation(line: 1101, column: 3, scope: !7703, inlinedAt: !7706)
!7709 = !{i64 2962712}
!7710 = !DILocation(line: 341, column: 4, scope: !7707)
!7711 = !DILocation(line: 360, column: 12, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7590, file: !7384, line: 360, column: 6)
!7713 = !DILocation(line: 360, column: 17, scope: !7712)
!7714 = !DILocation(line: 360, column: 41, scope: !7712)
!7715 = !DILocation(line: 360, column: 6, scope: !7590)
!7716 = !DILocation(line: 361, column: 14, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7712, file: !7384, line: 360, column: 47)
!7718 = !DILocation(line: 362, column: 2, scope: !7717)
!7719 = !DILocation(line: 366, column: 12, scope: !7590)
!7720 = !DILocation(line: 369, column: 15, scope: !7590)
!7721 = !DILocation(line: 371, column: 2, scope: !7590)
!7722 = distinct !DISubprogram(name: "bus_fault", scope: !7384, file: !7384, line: 383, type: !7723, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3053, retainedNodes: !7725)
!7723 = !DISubroutineType(types: !7724)
!7724 = !{!108, !3081, !108, !7451}
!7725 = !{!7726, !7727, !7728, !7729, !7730}
!7726 = !DILocalVariable(name: "esf", arg: 1, scope: !7722, file: !7384, line: 383, type: !3081)
!7727 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7722, file: !7384, line: 383, type: !108)
!7728 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7722, file: !7384, line: 383, type: !7451)
!7729 = !DILocalVariable(name: "reason", scope: !7722, file: !7384, line: 385, type: !113)
!7730 = !DILocalVariable(name: "bfar", scope: !7731, file: !7384, line: 405, type: !113)
!7731 = distinct !DILexicalBlock(scope: !7732, file: !7384, line: 395, column: 42)
!7732 = distinct !DILexicalBlock(scope: !7722, file: !7384, line: 395, column: 6)
!7733 = !DILocation(line: 0, scope: !7722)
!7734 = !DILocation(line: 387, column: 2, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7736, file: !7384, line: 387, column: 2)
!7736 = distinct !DILexicalBlock(scope: !7737, file: !7384, line: 387, column: 2)
!7737 = distinct !DILexicalBlock(scope: !7738, file: !7384, line: 387, column: 2)
!7738 = distinct !DILexicalBlock(scope: !7722, file: !7384, line: 387, column: 2)
!7739 = !DILocation(line: 389, column: 11, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7722, file: !7384, line: 389, column: 6)
!7741 = !DILocation(line: 389, column: 16, scope: !7740)
!7742 = !DILocation(line: 389, column: 6, scope: !7722)
!7743 = !DILocation(line: 390, column: 3, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7745, file: !7384, line: 390, column: 3)
!7745 = distinct !DILexicalBlock(scope: !7746, file: !7384, line: 390, column: 3)
!7746 = distinct !DILexicalBlock(scope: !7747, file: !7384, line: 390, column: 3)
!7747 = distinct !DILexicalBlock(scope: !7748, file: !7384, line: 390, column: 3)
!7748 = distinct !DILexicalBlock(scope: !7740, file: !7384, line: 389, column: 39)
!7749 = !DILocation(line: 391, column: 2, scope: !7748)
!7750 = !DILocation(line: 392, column: 11, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7722, file: !7384, line: 392, column: 6)
!7752 = !DILocation(line: 392, column: 16, scope: !7751)
!7753 = !DILocation(line: 392, column: 6, scope: !7722)
!7754 = !DILocation(line: 393, column: 3, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7756, file: !7384, line: 393, column: 3)
!7756 = distinct !DILexicalBlock(scope: !7757, file: !7384, line: 393, column: 3)
!7757 = distinct !DILexicalBlock(scope: !7758, file: !7384, line: 393, column: 3)
!7758 = distinct !DILexicalBlock(scope: !7759, file: !7384, line: 393, column: 3)
!7759 = distinct !DILexicalBlock(scope: !7751, file: !7384, line: 392, column: 41)
!7760 = !DILocation(line: 394, column: 2, scope: !7759)
!7761 = !DILocation(line: 395, column: 11, scope: !7732)
!7762 = !DILocation(line: 395, column: 16, scope: !7732)
!7763 = !DILocation(line: 395, column: 6, scope: !7722)
!7764 = !DILocation(line: 396, column: 3, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7766, file: !7384, line: 396, column: 3)
!7766 = distinct !DILexicalBlock(scope: !7767, file: !7384, line: 396, column: 3)
!7767 = distinct !DILexicalBlock(scope: !7768, file: !7384, line: 396, column: 3)
!7768 = distinct !DILexicalBlock(scope: !7731, file: !7384, line: 396, column: 3)
!7769 = !DILocation(line: 405, column: 3, scope: !7731)
!7770 = !DILocation(line: 0, scope: !7731)
!7771 = !DILocation(line: 407, column: 13, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7731, file: !7384, line: 407, column: 7)
!7773 = !DILocation(line: 407, column: 18, scope: !7772)
!7774 = !DILocation(line: 407, column: 44, scope: !7772)
!7775 = !DILocation(line: 407, column: 7, scope: !7731)
!7776 = !DILocation(line: 408, column: 4, scope: !7777)
!7777 = distinct !DILexicalBlock(scope: !7778, file: !7384, line: 408, column: 4)
!7778 = distinct !DILexicalBlock(scope: !7779, file: !7384, line: 408, column: 4)
!7779 = distinct !DILexicalBlock(scope: !7780, file: !7384, line: 408, column: 4)
!7780 = distinct !DILexicalBlock(scope: !7781, file: !7384, line: 408, column: 4)
!7781 = distinct !DILexicalBlock(scope: !7772, file: !7384, line: 407, column: 50)
!7782 = !DILocation(line: 409, column: 24, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7781, file: !7384, line: 409, column: 8)
!7784 = !DILocation(line: 409, column: 8, scope: !7781)
!7785 = !DILocation(line: 411, column: 15, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7783, file: !7384, line: 409, column: 30)
!7787 = !DILocation(line: 412, column: 4, scope: !7786)
!7788 = !DILocation(line: 415, column: 11, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7722, file: !7384, line: 415, column: 6)
!7790 = !DILocation(line: 415, column: 16, scope: !7789)
!7791 = !DILocation(line: 415, column: 6, scope: !7722)
!7792 = !DILocation(line: 416, column: 3, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7794, file: !7384, line: 416, column: 3)
!7794 = distinct !DILexicalBlock(scope: !7795, file: !7384, line: 416, column: 3)
!7795 = distinct !DILexicalBlock(scope: !7796, file: !7384, line: 416, column: 3)
!7796 = distinct !DILexicalBlock(scope: !7797, file: !7384, line: 416, column: 3)
!7797 = distinct !DILexicalBlock(scope: !7789, file: !7384, line: 415, column: 44)
!7798 = !DILocation(line: 417, column: 2, scope: !7797)
!7799 = !DILocation(line: 418, column: 12, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7722, file: !7384, line: 418, column: 6)
!7801 = !DILocation(line: 418, column: 17, scope: !7800)
!7802 = !DILocation(line: 418, column: 41, scope: !7800)
!7803 = !DILocation(line: 418, column: 6, scope: !7722)
!7804 = !DILocation(line: 423, column: 18, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7800, file: !7384, line: 423, column: 13)
!7806 = !DILocation(line: 423, column: 23, scope: !7805)
!7807 = !DILocation(line: 423, column: 13, scope: !7800)
!7808 = !DILocation(line: 0, scope: !7800)
!7809 = !DILocation(line: 524, column: 12, scope: !7722)
!7810 = !DILocation(line: 526, column: 15, scope: !7722)
!7811 = !DILocation(line: 528, column: 2, scope: !7722)
!7812 = distinct !DISubprogram(name: "usage_fault", scope: !7384, file: !7384, line: 539, type: !7813, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3053, retainedNodes: !7817)
!7813 = !DISubroutineType(types: !7814)
!7814 = !{!113, !7815}
!7815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7816, size: 32)
!7816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3082)
!7817 = !{!7818, !7819}
!7818 = !DILocalVariable(name: "esf", arg: 1, scope: !7812, file: !7384, line: 539, type: !7815)
!7819 = !DILocalVariable(name: "reason", scope: !7812, file: !7384, line: 541, type: !113)
!7820 = !DILocation(line: 0, scope: !7812)
!7821 = !DILocation(line: 543, column: 2, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7823, file: !7384, line: 543, column: 2)
!7823 = distinct !DILexicalBlock(scope: !7824, file: !7384, line: 543, column: 2)
!7824 = distinct !DILexicalBlock(scope: !7825, file: !7384, line: 543, column: 2)
!7825 = distinct !DILexicalBlock(scope: !7812, file: !7384, line: 543, column: 2)
!7826 = !DILocation(line: 546, column: 12, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7812, file: !7384, line: 546, column: 6)
!7828 = !DILocation(line: 546, column: 17, scope: !7827)
!7829 = !DILocation(line: 546, column: 43, scope: !7827)
!7830 = !DILocation(line: 546, column: 6, scope: !7812)
!7831 = !DILocation(line: 547, column: 3, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7833, file: !7384, line: 547, column: 3)
!7833 = distinct !DILexicalBlock(scope: !7834, file: !7384, line: 547, column: 3)
!7834 = distinct !DILexicalBlock(scope: !7835, file: !7384, line: 547, column: 3)
!7835 = distinct !DILexicalBlock(scope: !7836, file: !7384, line: 547, column: 3)
!7836 = distinct !DILexicalBlock(scope: !7827, file: !7384, line: 546, column: 49)
!7837 = !DILocation(line: 548, column: 2, scope: !7836)
!7838 = !DILocation(line: 549, column: 12, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7812, file: !7384, line: 549, column: 6)
!7840 = !DILocation(line: 549, column: 17, scope: !7839)
!7841 = !DILocation(line: 549, column: 43, scope: !7839)
!7842 = !DILocation(line: 549, column: 6, scope: !7812)
!7843 = !DILocation(line: 550, column: 3, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7845, file: !7384, line: 550, column: 3)
!7845 = distinct !DILexicalBlock(scope: !7846, file: !7384, line: 550, column: 3)
!7846 = distinct !DILexicalBlock(scope: !7847, file: !7384, line: 550, column: 3)
!7847 = distinct !DILexicalBlock(scope: !7848, file: !7384, line: 550, column: 3)
!7848 = distinct !DILexicalBlock(scope: !7839, file: !7384, line: 549, column: 49)
!7849 = !DILocation(line: 551, column: 2, scope: !7848)
!7850 = !DILocation(line: 567, column: 12, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7812, file: !7384, line: 567, column: 6)
!7852 = !DILocation(line: 567, column: 17, scope: !7851)
!7853 = !DILocation(line: 567, column: 38, scope: !7851)
!7854 = !DILocation(line: 567, column: 6, scope: !7812)
!7855 = !DILocation(line: 568, column: 3, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7857, file: !7384, line: 568, column: 3)
!7857 = distinct !DILexicalBlock(scope: !7858, file: !7384, line: 568, column: 3)
!7858 = distinct !DILexicalBlock(scope: !7859, file: !7384, line: 568, column: 3)
!7859 = distinct !DILexicalBlock(scope: !7860, file: !7384, line: 568, column: 3)
!7860 = distinct !DILexicalBlock(scope: !7851, file: !7384, line: 567, column: 44)
!7861 = !DILocation(line: 569, column: 2, scope: !7860)
!7862 = !DILocation(line: 570, column: 12, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7812, file: !7384, line: 570, column: 6)
!7864 = !DILocation(line: 570, column: 17, scope: !7863)
!7865 = !DILocation(line: 570, column: 39, scope: !7863)
!7866 = !DILocation(line: 570, column: 6, scope: !7812)
!7867 = !DILocation(line: 571, column: 3, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7869, file: !7384, line: 571, column: 3)
!7869 = distinct !DILexicalBlock(scope: !7870, file: !7384, line: 571, column: 3)
!7870 = distinct !DILexicalBlock(scope: !7871, file: !7384, line: 571, column: 3)
!7871 = distinct !DILexicalBlock(scope: !7872, file: !7384, line: 571, column: 3)
!7872 = distinct !DILexicalBlock(scope: !7863, file: !7384, line: 570, column: 45)
!7873 = !DILocation(line: 572, column: 2, scope: !7872)
!7874 = !DILocation(line: 573, column: 12, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7812, file: !7384, line: 573, column: 6)
!7876 = !DILocation(line: 573, column: 17, scope: !7875)
!7877 = !DILocation(line: 573, column: 42, scope: !7875)
!7878 = !DILocation(line: 573, column: 6, scope: !7812)
!7879 = !DILocation(line: 574, column: 3, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7881, file: !7384, line: 574, column: 3)
!7881 = distinct !DILexicalBlock(scope: !7882, file: !7384, line: 574, column: 3)
!7882 = distinct !DILexicalBlock(scope: !7883, file: !7384, line: 574, column: 3)
!7883 = distinct !DILexicalBlock(scope: !7884, file: !7384, line: 574, column: 3)
!7884 = distinct !DILexicalBlock(scope: !7875, file: !7384, line: 573, column: 48)
!7885 = !DILocation(line: 575, column: 2, scope: !7884)
!7886 = !DILocation(line: 576, column: 12, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7812, file: !7384, line: 576, column: 6)
!7888 = !DILocation(line: 576, column: 17, scope: !7887)
!7889 = !DILocation(line: 576, column: 44, scope: !7887)
!7890 = !DILocation(line: 576, column: 6, scope: !7812)
!7891 = !DILocation(line: 577, column: 3, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7893, file: !7384, line: 577, column: 3)
!7893 = distinct !DILexicalBlock(scope: !7894, file: !7384, line: 577, column: 3)
!7894 = distinct !DILexicalBlock(scope: !7895, file: !7384, line: 577, column: 3)
!7895 = distinct !DILexicalBlock(scope: !7896, file: !7384, line: 577, column: 3)
!7896 = distinct !DILexicalBlock(scope: !7887, file: !7384, line: 576, column: 50)
!7897 = !DILocation(line: 578, column: 2, scope: !7896)
!7898 = !DILocation(line: 581, column: 12, scope: !7812)
!7899 = !DILocation(line: 583, column: 2, scope: !7812)
!7900 = distinct !DISubprogram(name: "debug_monitor", scope: !7384, file: !7384, line: 632, type: !7901, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3053, retainedNodes: !7903)
!7901 = !DISubroutineType(types: !7902)
!7902 = !{null, !3081, !7451}
!7903 = !{!7904, !7905}
!7904 = !DILocalVariable(name: "esf", arg: 1, scope: !7900, file: !7384, line: 632, type: !3081)
!7905 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7900, file: !7384, line: 632, type: !7451)
!7906 = !DILocation(line: 0, scope: !7900)
!7907 = !DILocation(line: 634, column: 15, scope: !7900)
!7908 = !DILocation(line: 636, column: 2, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7910, file: !7384, line: 636, column: 2)
!7910 = distinct !DILexicalBlock(scope: !7911, file: !7384, line: 636, column: 2)
!7911 = distinct !DILexicalBlock(scope: !7912, file: !7384, line: 636, column: 2)
!7912 = distinct !DILexicalBlock(scope: !7900, file: !7384, line: 636, column: 2)
!7913 = !DILocation(line: 652, column: 1, scope: !7900)
!7914 = distinct !DISubprogram(name: "reserved_exception", scope: !7384, file: !7384, line: 776, type: !7915, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3053, retainedNodes: !7917)
!7915 = !DISubroutineType(types: !7916)
!7916 = !{null, !7815, !108}
!7917 = !{!7918, !7919}
!7918 = !DILocalVariable(name: "esf", arg: 1, scope: !7914, file: !7384, line: 776, type: !7815)
!7919 = !DILocalVariable(name: "fault", arg: 2, scope: !7914, file: !7384, line: 776, type: !108)
!7920 = !DILocation(line: 0, scope: !7914)
!7921 = !DILocation(line: 780, column: 2, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7923, file: !7384, line: 780, column: 2)
!7923 = distinct !DILexicalBlock(scope: !7924, file: !7384, line: 780, column: 2)
!7924 = distinct !DILexicalBlock(scope: !7925, file: !7384, line: 780, column: 2)
!7925 = distinct !DILexicalBlock(scope: !7914, file: !7384, line: 780, column: 2)
!7926 = !DILocation(line: 783, column: 1, scope: !7914)
!7927 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7384, file: !7384, line: 658, type: !7928, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3053, retainedNodes: !7930)
!7928 = !DISubroutineType(types: !7929)
!7929 = !{!422, !3081}
!7930 = !{!7931, !7932, !7933}
!7931 = !DILocalVariable(name: "esf", arg: 1, scope: !7927, file: !7384, line: 658, type: !3081)
!7932 = !DILocalVariable(name: "ret_addr", scope: !7927, file: !7384, line: 660, type: !3124)
!7933 = !DILocalVariable(name: "fault_insn", scope: !7927, file: !7384, line: 686, type: !168)
!7934 = !DILocation(line: 0, scope: !7927)
!7935 = !DILocation(line: 660, column: 46, scope: !7927)
!7936 = !DILocation(line: 660, column: 23, scope: !7927)
!7937 = !DILocation(line: 682, column: 11, scope: !7927)
!7938 = !DILocation(line: 271, column: 3, scope: !7939, inlinedAt: !7940)
!7939 = distinct !DISubprogram(name: "__DSB", scope: !7083, file: !7083, line: 269, type: !3435, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3053, retainedNodes: !437)
!7940 = distinct !DILocation(line: 683, column: 2, scope: !7927)
!7941 = !{i64 2938847}
!7942 = !DILocation(line: 260, column: 3, scope: !7943, inlinedAt: !7944)
!7943 = distinct !DISubprogram(name: "__ISB", scope: !7083, file: !7083, line: 258, type: !3435, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3053, retainedNodes: !437)
!7944 = distinct !DILocation(line: 684, column: 2, scope: !7927)
!7945 = !{i64 2938564}
!7946 = !DILocation(line: 686, column: 35, scope: !7927)
!7947 = !DILocation(line: 686, column: 24, scope: !7927)
!7948 = !DILocation(line: 688, column: 11, scope: !7927)
!7949 = !DILocation(line: 271, column: 3, scope: !7939, inlinedAt: !7950)
!7950 = distinct !DILocation(line: 689, column: 2, scope: !7927)
!7951 = !DILocation(line: 260, column: 3, scope: !7943, inlinedAt: !7952)
!7952 = distinct !DILocation(line: 690, column: 2, scope: !7927)
!7953 = !DILocation(line: 693, column: 45, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7927, file: !7384, line: 693, column: 6)
!7955 = !DILocation(line: 699, column: 1, scope: !7927)
!7956 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7384, file: !7384, line: 1107, type: !3435, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3053, retainedNodes: !437)
!7957 = !DILocation(line: 1111, column: 11, scope: !7956)
!7958 = !DILocation(line: 1136, column: 1, scope: !7956)
!7959 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7960, file: !7960, line: 26, type: !3435, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !7961)
!7960 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7961 = !{!7962}
!7962 = !DILocalVariable(name: "irq", scope: !7959, file: !7960, line: 28, type: !108)
!7963 = !DILocation(line: 0, scope: !7959)
!7964 = !DILocation(line: 30, column: 2, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7959, file: !7960, line: 30, column: 2)
!7966 = !DILocation(line: 31, column: 3, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7968, file: !7960, line: 30, column: 39)
!7968 = distinct !DILexicalBlock(scope: !7965, file: !7960, line: 30, column: 2)
!7969 = !DILocation(line: 30, column: 35, scope: !7968)
!7970 = !DILocation(line: 30, column: 13, scope: !7968)
!7971 = distinct !{!7971, !7964, !7972}
!7972 = !DILocation(line: 32, column: 2, scope: !7965)
!7973 = !DILocation(line: 33, column: 1, scope: !7959)
!7974 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !792, file: !792, line: 1814, type: !7117, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !7975)
!7975 = !{!7976, !7977}
!7976 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7974, file: !792, line: 1814, type: !1151)
!7977 = !DILocalVariable(name: "priority", arg: 2, scope: !7974, file: !792, line: 1814, type: !113)
!7978 = !DILocation(line: 0, scope: !7974)
!7979 = !DILocation(line: 1816, column: 7, scope: !7974)
!7980 = !DILocation(line: 0, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7974, file: !792, line: 1816, column: 7)
!7982 = !DILocation(line: 1824, column: 1, scope: !7974)
!7983 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7984, file: !7984, line: 27, type: !7985, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3170, retainedNodes: !8088)
!7984 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7985 = !DISubroutineType(types: !7986)
!7986 = !{null, !7987}
!7987 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !649, line: 347, baseType: !7988)
!7988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7989, size: 32)
!7989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !649, line: 245, size: 1024, elements: !7990)
!7990 = !{!7991, !8049, !8061, !8062, !8063, !8064, !8070, !8083}
!7991 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7989, file: !649, line: 247, baseType: !7992, size: 384)
!7992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !649, line: 57, size: 384, elements: !7993)
!7993 = !{!7994, !8018, !8025, !8026, !8027, !8036, !8037, !8038}
!7994 = !DIDerivedType(tag: DW_TAG_member, scope: !7992, file: !649, line: 60, baseType: !7995, size: 64)
!7995 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7992, file: !649, line: 60, size: 64, elements: !7996)
!7996 = !{!7997, !8012}
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7995, file: !649, line: 61, baseType: !7998, size: 64)
!7998 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !7999)
!7999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !8000)
!8000 = !{!8001, !8007}
!8001 = !DIDerivedType(tag: DW_TAG_member, scope: !7999, file: !367, line: 38, baseType: !8002, size: 32)
!8002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7999, file: !367, line: 38, size: 32, elements: !8003)
!8003 = !{!8004, !8006}
!8004 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8002, file: !367, line: 39, baseType: !8005, size: 32)
!8005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7999, size: 32)
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8002, file: !367, line: 40, baseType: !8005, size: 32)
!8007 = !DIDerivedType(tag: DW_TAG_member, scope: !7999, file: !367, line: 42, baseType: !8008, size: 32, offset: 32)
!8008 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7999, file: !367, line: 42, size: 32, elements: !8009)
!8009 = !{!8010, !8011}
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8008, file: !367, line: 43, baseType: !8005, size: 32)
!8011 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8008, file: !367, line: 44, baseType: !8005, size: 32)
!8012 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7995, file: !649, line: 62, baseType: !8013, size: 64)
!8013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !674, line: 49, size: 64, elements: !8014)
!8014 = !{!8015}
!8015 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8013, file: !674, line: 50, baseType: !8016, size: 64)
!8016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8017, size: 64, elements: !679)
!8017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8013, size: 32)
!8018 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7992, file: !649, line: 68, baseType: !8019, size: 32, offset: 64)
!8019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8020, size: 32)
!8020 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !8021)
!8021 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !8022)
!8022 = !{!8023}
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8021, file: !363, line: 232, baseType: !8024, size: 64)
!8024 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !7999)
!8025 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7992, file: !649, line: 71, baseType: !164, size: 8, offset: 96)
!8026 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7992, file: !649, line: 74, baseType: !164, size: 8, offset: 104)
!8027 = !DIDerivedType(tag: DW_TAG_member, scope: !7992, file: !649, line: 90, baseType: !8028, size: 16, offset: 112)
!8028 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7992, file: !649, line: 90, size: 16, elements: !8029)
!8029 = !{!8030, !8035}
!8030 = !DIDerivedType(tag: DW_TAG_member, scope: !8028, file: !649, line: 91, baseType: !8031, size: 16)
!8031 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8028, file: !649, line: 91, size: 16, elements: !8032)
!8032 = !{!8033, !8034}
!8033 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8031, file: !649, line: 96, baseType: !697, size: 8)
!8034 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8031, file: !649, line: 97, baseType: !164, size: 8, offset: 8)
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8028, file: !649, line: 100, baseType: !168, size: 16)
!8036 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7992, file: !649, line: 107, baseType: !113, size: 32, offset: 128)
!8037 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7992, file: !649, line: 127, baseType: !104, size: 32, offset: 160)
!8038 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7992, file: !649, line: 131, baseType: !8039, size: 192, offset: 192)
!8039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !8040)
!8040 = !{!8041, !8042, !8048}
!8041 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8039, file: !363, line: 245, baseType: !7998, size: 64)
!8042 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8039, file: !363, line: 246, baseType: !8043, size: 32, offset: 64)
!8043 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !8044)
!8044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8045, size: 32)
!8045 = !DISubroutineType(types: !8046)
!8046 = !{null, !8047}
!8047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8039, size: 32)
!8048 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8039, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!8049 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7989, file: !649, line: 250, baseType: !8050, size: 288, offset: 384)
!8050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !716, line: 25, size: 288, elements: !8051)
!8051 = !{!8052, !8053, !8054, !8055, !8056, !8057, !8058, !8059, !8060}
!8052 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8050, file: !716, line: 26, baseType: !113, size: 32)
!8053 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8050, file: !716, line: 27, baseType: !113, size: 32, offset: 32)
!8054 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8050, file: !716, line: 28, baseType: !113, size: 32, offset: 64)
!8055 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8050, file: !716, line: 29, baseType: !113, size: 32, offset: 96)
!8056 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8050, file: !716, line: 30, baseType: !113, size: 32, offset: 128)
!8057 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8050, file: !716, line: 31, baseType: !113, size: 32, offset: 160)
!8058 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8050, file: !716, line: 32, baseType: !113, size: 32, offset: 192)
!8059 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8050, file: !716, line: 33, baseType: !113, size: 32, offset: 224)
!8060 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8050, file: !716, line: 34, baseType: !113, size: 32, offset: 256)
!8061 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7989, file: !649, line: 253, baseType: !104, size: 32, offset: 672)
!8062 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7989, file: !649, line: 256, baseType: !8020, size: 64, offset: 704)
!8063 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7989, file: !649, line: 294, baseType: !108, size: 32, offset: 768)
!8064 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7989, file: !649, line: 300, baseType: !8065, size: 96, offset: 800)
!8065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !649, line: 149, size: 96, elements: !8066)
!8066 = !{!8067, !8068, !8069}
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8065, file: !649, line: 153, baseType: !22, size: 32)
!8068 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8065, file: !649, line: 162, baseType: !439, size: 32, offset: 32)
!8069 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8065, file: !649, line: 168, baseType: !439, size: 32, offset: 64)
!8070 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7989, file: !649, line: 325, baseType: !8071, size: 32, offset: 896)
!8071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8072, size: 32)
!8072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !8073)
!8073 = !{!8074, !8080, !8081}
!8074 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8072, file: !359, line: 5074, baseType: !8075, size: 96)
!8075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !742, line: 56, size: 96, elements: !8076)
!8076 = !{!8077, !8078, !8079}
!8077 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8075, file: !742, line: 57, baseType: !745, size: 32)
!8078 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8075, file: !742, line: 58, baseType: !104, size: 32, offset: 32)
!8079 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8075, file: !742, line: 59, baseType: !439, size: 32, offset: 64)
!8080 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8072, file: !359, line: 5075, baseType: !8020, size: 64, offset: 96)
!8081 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8072, file: !359, line: 5076, baseType: !8082, offset: 160)
!8082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!8083 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7989, file: !649, line: 343, baseType: !8084, size: 64, offset: 928)
!8084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !716, line: 60, size: 64, elements: !8085)
!8085 = !{!8086, !8087}
!8086 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8084, file: !716, line: 63, baseType: !113, size: 32)
!8087 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8084, file: !716, line: 66, baseType: !113, size: 32, offset: 32)
!8088 = !{!8089}
!8089 = !DILocalVariable(name: "thread", arg: 1, scope: !7983, file: !7984, line: 27, type: !7987)
!8090 = !DILocation(line: 0, scope: !7983)
!8091 = !DILocation(line: 29, column: 6, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !7983, file: !7984, line: 29, column: 6)
!8093 = !DILocation(line: 29, column: 15, scope: !8092)
!8094 = !DILocation(line: 29, column: 6, scope: !7983)
!8095 = !DILocation(line: 1031, column: 3, scope: !8096, inlinedAt: !8099)
!8096 = distinct !DISubprogram(name: "__get_IPSR", scope: !7083, file: !7083, line: 1027, type: !7164, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3170, retainedNodes: !8097)
!8097 = !{!8098}
!8098 = !DILocalVariable(name: "result", scope: !8096, file: !7083, line: 1029, type: !113)
!8099 = distinct !DILocation(line: 48, column: 10, scope: !8100, inlinedAt: !8104)
!8100 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8101, file: !8101, line: 46, type: !8102, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3170, retainedNodes: !437)
!8101 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8102 = !DISubroutineType(types: !8103)
!8103 = !{!422}
!8104 = distinct !DILocation(line: 30, column: 7, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8106, file: !7984, line: 30, column: 7)
!8106 = distinct !DILexicalBlock(scope: !8092, file: !7984, line: 29, column: 26)
!8107 = !{i64 2927695}
!8108 = !DILocation(line: 0, scope: !8096, inlinedAt: !8099)
!8109 = !DILocation(line: 48, column: 9, scope: !8100, inlinedAt: !8104)
!8110 = !DILocation(line: 30, column: 7, scope: !8106)
!8111 = !DILocation(line: 42, column: 14, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8105, file: !7984, line: 30, column: 25)
!8113 = !DILocation(line: 48, column: 15, scope: !8112)
!8114 = !DILocation(line: 49, column: 3, scope: !8112)
!8115 = !DILocation(line: 52, column: 2, scope: !7983)
!8116 = !DILocation(line: 53, column: 1, scope: !7983)
!8117 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !644, file: !644, line: 127, type: !3435, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !637, retainedNodes: !437)
!8118 = !DILocation(line: 134, column: 2, scope: !8117)
!8119 = !DILocation(line: 156, column: 1, scope: !8117)
!8120 = !DILocation(line: 0, scope: !643)
!8121 = !DILocation(line: 289, column: 36, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !643, file: !644, line: 285, column: 2)
!8123 = !DILocation(line: 289, column: 42, scope: !8122)
!8124 = !DILocation(line: 300, column: 36, scope: !643)
!8125 = !DILocation(line: 301, column: 35, scope: !643)
!8126 = !DILocation(line: 302, column: 37, scope: !643)
!8127 = !DILocation(line: 311, column: 2, scope: !643)
!8128 = !DILocation(line: 316, column: 1, scope: !643)
!8129 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !820, file: !820, line: 180, type: !3435, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !787, retainedNodes: !437)
!8130 = !DILocation(line: 188, column: 12, scope: !8129)
!8131 = !DILocation(line: 271, column: 3, scope: !8132, inlinedAt: !8133)
!8132 = distinct !DISubprogram(name: "__DSB", scope: !7083, file: !7083, line: 269, type: !3435, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !787, retainedNodes: !437)
!8133 = distinct !DILocation(line: 192, column: 2, scope: !8129)
!8134 = !{i64 3101769}
!8135 = !DILocation(line: 260, column: 3, scope: !8136, inlinedAt: !8137)
!8136 = distinct !DISubprogram(name: "__ISB", scope: !7083, file: !7083, line: 258, type: !3435, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !787, retainedNodes: !437)
!8137 = distinct !DILocation(line: 193, column: 2, scope: !8129)
!8138 = !{i64 3101486}
!8139 = !DILocation(line: 194, column: 1, scope: !8129)
!8140 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !820, file: !820, line: 199, type: !3435, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !787, retainedNodes: !437)
!8141 = !DILocation(line: 282, column: 3, scope: !8142, inlinedAt: !8143)
!8142 = distinct !DISubprogram(name: "__DMB", scope: !7083, file: !7083, line: 280, type: !3435, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !787, retainedNodes: !437)
!8143 = distinct !DILocation(line: 202, column: 2, scope: !8140)
!8144 = !{i64 3102045}
!8145 = !DILocation(line: 205, column: 12, scope: !8140)
!8146 = !DILocation(line: 206, column: 1, scope: !8140)
!8147 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !820, file: !820, line: 275, type: !8148, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !787, retainedNodes: !8161)
!8148 = !DISubroutineType(types: !8149)
!8149 = !{null, !8150, !2175, !7351, !7351}
!8150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8151, size: 32)
!8151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8152)
!8152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !764, line: 52, size: 96, elements: !8153)
!8153 = !{!8154, !8155, !8156}
!8154 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8152, file: !764, line: 53, baseType: !22, size: 32)
!8155 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8152, file: !764, line: 54, baseType: !439, size: 32, offset: 32)
!8156 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8152, file: !764, line: 55, baseType: !8157, size: 32, offset: 64)
!8157 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !770, line: 151, baseType: !8158)
!8158 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !770, line: 149, size: 32, elements: !8159)
!8159 = !{!8160}
!8160 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8158, file: !770, line: 150, baseType: !113, size: 32)
!8161 = !{!8162, !8163, !8164, !8165}
!8162 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8147, file: !820, line: 276, type: !8150)
!8163 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8147, file: !820, line: 276, type: !2175)
!8164 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8147, file: !820, line: 277, type: !7351)
!8165 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8147, file: !820, line: 277, type: !7351)
!8166 = !DILocation(line: 0, scope: !8147)
!8167 = !DILocation(line: 279, column: 6, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8147, file: !820, line: 279, column: 6)
!8169 = !DILocation(line: 285, column: 1, scope: !8147)
!8170 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8171, file: !8171, line: 220, type: !8172, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !787, retainedNodes: !8174)
!8171 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8172 = !DISubroutineType(types: !8173)
!8173 = !{!108, !8150, !2175, !7351, !7351}
!8174 = !{!8175, !8176, !8177, !8178, !8179}
!8175 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8170, file: !8171, line: 221, type: !8150)
!8176 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8170, file: !8171, line: 221, type: !2175)
!8177 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8170, file: !8171, line: 222, type: !7351)
!8178 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8170, file: !8171, line: 223, type: !7351)
!8179 = !DILocalVariable(name: "mpu_reg_index", scope: !8170, file: !8171, line: 225, type: !108)
!8180 = !DILocation(line: 0, scope: !8170)
!8181 = !DILocation(line: 225, column: 22, scope: !8170)
!8182 = !DILocation(line: 233, column: 18, scope: !8170)
!8183 = !DILocation(line: 236, column: 23, scope: !8170)
!8184 = !DILocation(line: 236, column: 21, scope: !8170)
!8185 = !DILocation(line: 238, column: 2, scope: !8170)
!8186 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !820, file: !820, line: 105, type: !8187, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !787, retainedNodes: !8189)
!8187 = !DISubroutineType(types: !8188)
!8188 = !{!108, !8150, !164, !164, !422}
!8189 = !{!8190, !8191, !8192, !8193, !8194, !8195}
!8190 = !DILocalVariable(name: "regions", arg: 1, scope: !8186, file: !820, line: 106, type: !8150)
!8191 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8186, file: !820, line: 106, type: !164)
!8192 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !8186, file: !820, line: 106, type: !164)
!8193 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !8186, file: !820, line: 107, type: !422)
!8194 = !DILocalVariable(name: "i", scope: !8186, file: !820, line: 109, type: !108)
!8195 = !DILocalVariable(name: "reg_index", scope: !8186, file: !820, line: 110, type: !108)
!8196 = !DILocation(line: 0, scope: !8186)
!8197 = !DILocation(line: 110, column: 18, scope: !8186)
!8198 = !DILocation(line: 112, column: 16, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8200, file: !820, line: 112, column: 2)
!8200 = distinct !DILexicalBlock(scope: !8186, file: !820, line: 112, column: 2)
!8201 = !DILocation(line: 112, column: 2, scope: !8200)
!8202 = !DILocation(line: 113, column: 7, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8204, file: !820, line: 113, column: 7)
!8204 = distinct !DILexicalBlock(scope: !8199, file: !820, line: 112, column: 36)
!8205 = !DILocation(line: 113, column: 18, scope: !8203)
!8206 = !DILocation(line: 113, column: 23, scope: !8203)
!8207 = !DILocation(line: 113, column: 7, scope: !8204)
!8208 = !DILocation(line: 118, column: 23, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8204, file: !820, line: 118, column: 7)
!8210 = !DILocation(line: 119, column: 7, scope: !8209)
!8211 = !DILocation(line: 118, column: 7, scope: !8204)
!8212 = !DILocation(line: 120, column: 4, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8214, file: !820, line: 120, column: 4)
!8214 = distinct !DILexicalBlock(scope: !8215, file: !820, line: 120, column: 4)
!8215 = distinct !DILexicalBlock(scope: !8216, file: !820, line: 120, column: 4)
!8216 = distinct !DILexicalBlock(scope: !8217, file: !820, line: 120, column: 4)
!8217 = distinct !DILexicalBlock(scope: !8209, file: !820, line: 119, column: 45)
!8218 = !DILocation(line: 121, column: 4, scope: !8217)
!8219 = !DILocation(line: 124, column: 36, scope: !8204)
!8220 = !DILocation(line: 124, column: 15, scope: !8204)
!8221 = !DILocation(line: 126, column: 17, scope: !8222)
!8222 = distinct !DILexicalBlock(scope: !8204, file: !820, line: 126, column: 7)
!8223 = !DILocation(line: 126, column: 7, scope: !8204)
!8224 = !DILocation(line: 131, column: 12, scope: !8204)
!8225 = !DILocation(line: 132, column: 2, scope: !8204)
!8226 = !DILocation(line: 112, column: 32, scope: !8199)
!8227 = distinct !{!8227, !8201, !8228}
!8228 = !DILocation(line: 132, column: 2, scope: !8200)
!8229 = !DILocation(line: 135, column: 1, scope: !8186)
!8230 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8171, file: !8171, line: 63, type: !8231, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !787, retainedNodes: !8233)
!8231 = !DISubroutineType(types: !8232)
!8232 = !{!108, !8150}
!8233 = !{!8234, !8235}
!8234 = !DILocalVariable(name: "part", arg: 1, scope: !8230, file: !8171, line: 63, type: !8150)
!8235 = !DILocalVariable(name: "partition_is_valid", scope: !8230, file: !8171, line: 70, type: !108)
!8236 = !DILocation(line: 0, scope: !8230)
!8237 = !DILocation(line: 71, column: 11, scope: !8230)
!8238 = !DILocation(line: 71, column: 37, scope: !8230)
!8239 = !{i32 0, i32 33}
!8240 = !DILocation(line: 72, column: 3, scope: !8230)
!8241 = !DILocation(line: 71, column: 30, scope: !8230)
!8242 = !DILocation(line: 75, column: 11, scope: !8230)
!8243 = !DILocation(line: 75, column: 17, scope: !8230)
!8244 = !DILocation(line: 75, column: 38, scope: !8230)
!8245 = !DILocation(line: 77, column: 2, scope: !8230)
!8246 = distinct !DISubprogram(name: "mpu_configure_region", scope: !820, file: !820, line: 79, type: !8247, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !787, retainedNodes: !8249)
!8247 = !DISubroutineType(types: !8248)
!8248 = !{!108, !2175, !8150}
!8249 = !{!8250, !8251, !8252}
!8250 = !DILocalVariable(name: "index", arg: 1, scope: !8246, file: !820, line: 79, type: !2175)
!8251 = !DILocalVariable(name: "new_region", arg: 2, scope: !8246, file: !820, line: 80, type: !8150)
!8252 = !DILocalVariable(name: "region_conf", scope: !8246, file: !820, line: 82, type: !809)
!8253 = !DILocation(line: 0, scope: !8246)
!8254 = !DILocation(line: 82, column: 2, scope: !8246)
!8255 = !DILocation(line: 82, column: 24, scope: !8246)
!8256 = !DILocation(line: 87, column: 33, scope: !8246)
!8257 = !DILocation(line: 87, column: 14, scope: !8246)
!8258 = !DILocation(line: 87, column: 19, scope: !8246)
!8259 = !DILocation(line: 91, column: 55, scope: !8246)
!8260 = !DILocation(line: 92, column: 16, scope: !8246)
!8261 = !DILocation(line: 92, column: 53, scope: !8246)
!8262 = !DILocation(line: 91, column: 2, scope: !8246)
!8263 = !DILocation(line: 95, column: 9, scope: !8246)
!8264 = !DILocation(line: 97, column: 1, scope: !8246)
!8265 = !DILocation(line: 95, column: 2, scope: !8246)
!8266 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8171, file: !8171, line: 113, type: !8267, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !787, retainedNodes: !8272)
!8267 = !DISubroutineType(types: !8268)
!8268 = !{null, !8269, !8270, !113, !113}
!8269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 32)
!8270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8271, size: 32)
!8271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8157)
!8272 = !{!8273, !8274, !8275, !8276}
!8273 = !DILocalVariable(name: "p_attr", arg: 1, scope: !8266, file: !8171, line: 114, type: !8269)
!8274 = !DILocalVariable(name: "attr", arg: 2, scope: !8266, file: !8171, line: 115, type: !8270)
!8275 = !DILocalVariable(name: "base", arg: 3, scope: !8266, file: !8171, line: 115, type: !113)
!8276 = !DILocalVariable(name: "size", arg: 4, scope: !8266, file: !8171, line: 115, type: !113)
!8277 = !DILocation(line: 0, scope: !8266)
!8278 = !DILocation(line: 127, column: 23, scope: !8266)
!8279 = !DILocation(line: 127, column: 35, scope: !8266)
!8280 = !DILocation(line: 127, column: 33, scope: !8266)
!8281 = !DILocation(line: 127, column: 10, scope: !8266)
!8282 = !DILocation(line: 127, column: 15, scope: !8266)
!8283 = !DILocation(line: 129, column: 1, scope: !8266)
!8284 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !820, file: !820, line: 57, type: !8285, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !787, retainedNodes: !8287)
!8285 = !DISubroutineType(types: !8286)
!8286 = !{!108, !2175, !807}
!8287 = !{!8288, !8289}
!8288 = !DILocalVariable(name: "index", arg: 1, scope: !8284, file: !820, line: 57, type: !2175)
!8289 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8284, file: !820, line: 58, type: !807)
!8290 = !DILocation(line: 0, scope: !8284)
!8291 = !DILocation(line: 61, column: 6, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8284, file: !820, line: 61, column: 6)
!8293 = !DILocation(line: 61, column: 12, scope: !8292)
!8294 = !DILocation(line: 61, column: 6, scope: !8284)
!8295 = !DILocation(line: 64, column: 3, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8297, file: !820, line: 64, column: 3)
!8297 = distinct !DILexicalBlock(scope: !8298, file: !820, line: 64, column: 3)
!8298 = distinct !DILexicalBlock(scope: !8299, file: !820, line: 64, column: 3)
!8299 = distinct !DILexicalBlock(scope: !8300, file: !820, line: 64, column: 3)
!8300 = distinct !DILexicalBlock(scope: !8292, file: !820, line: 61, column: 40)
!8301 = !DILocation(line: 65, column: 3, scope: !8300)
!8302 = !DILocation(line: 71, column: 2, scope: !8284)
!8303 = !DILocation(line: 73, column: 2, scope: !8284)
!8304 = !DILocation(line: 74, column: 1, scope: !8284)
!8305 = distinct !DISubprogram(name: "region_init", scope: !8171, file: !8171, line: 29, type: !8306, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !787, retainedNodes: !8308)
!8306 = !DISubroutineType(types: !8307)
!8307 = !{null, !7351, !807}
!8308 = !{!8309, !8310}
!8309 = !DILocalVariable(name: "index", arg: 1, scope: !8305, file: !8171, line: 29, type: !7351)
!8310 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8305, file: !8171, line: 30, type: !807)
!8311 = !DILocation(line: 0, scope: !8305)
!8312 = !DILocation(line: 33, column: 2, scope: !8305)
!8313 = !DILocation(line: 47, column: 28, scope: !8305)
!8314 = !DILocation(line: 47, column: 33, scope: !8305)
!8315 = !DILocation(line: 48, column: 26, scope: !8305)
!8316 = !DILocation(line: 47, column: 12, scope: !8305)
!8317 = !DILocation(line: 49, column: 32, scope: !8305)
!8318 = !DILocation(line: 49, column: 37, scope: !8305)
!8319 = !DILocation(line: 49, column: 12, scope: !8305)
!8320 = !DILocation(line: 53, column: 1, scope: !8305)
!8321 = distinct !DISubprogram(name: "set_region_number", scope: !8322, file: !8322, line: 32, type: !7174, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !787, retainedNodes: !8323)
!8322 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8323 = !{!8324}
!8324 = !DILocalVariable(name: "index", arg: 1, scope: !8321, file: !8322, line: 32, type: !113)
!8325 = !DILocation(line: 0, scope: !8321)
!8326 = !DILocation(line: 34, column: 11, scope: !8321)
!8327 = !DILocation(line: 35, column: 1, scope: !8321)
!8328 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8171, file: !8171, line: 88, type: !8329, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !787, retainedNodes: !8331)
!8329 = !DISubroutineType(types: !8330)
!8330 = !{!113, !113}
!8331 = !{!8332}
!8332 = !DILocalVariable(name: "size", arg: 1, scope: !8328, file: !8171, line: 88, type: !113)
!8333 = !DILocation(line: 0, scope: !8328)
!8334 = !DILocation(line: 91, column: 11, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8328, file: !8171, line: 91, column: 6)
!8336 = !DILocation(line: 91, column: 6, scope: !8328)
!8337 = !DILocation(line: 100, column: 11, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8328, file: !8171, line: 100, column: 6)
!8339 = !DILocation(line: 100, column: 6, scope: !8328)
!8340 = !DILocation(line: 104, column: 35, scope: !8328)
!8341 = !DILocation(line: 104, column: 16, scope: !8328)
!8342 = !DILocation(line: 104, column: 50, scope: !8328)
!8343 = !DILocation(line: 104, column: 72, scope: !8328)
!8344 = !DILocation(line: 104, column: 2, scope: !8328)
!8345 = !DILocation(line: 106, column: 1, scope: !8328)
!8346 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !820, file: !820, line: 307, type: !8347, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !787, retainedNodes: !8349)
!8347 = !DISubroutineType(types: !8348)
!8348 = !{null, !8150, !164}
!8349 = !{!8350, !8351}
!8350 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8346, file: !820, line: 308, type: !8150)
!8351 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8346, file: !820, line: 308, type: !164)
!8352 = !DILocation(line: 0, scope: !8346)
!8353 = !DILocation(line: 310, column: 6, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8346, file: !820, line: 310, column: 6)
!8355 = !DILocation(line: 316, column: 1, scope: !8346)
!8356 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8171, file: !8171, line: 249, type: !8357, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !787, retainedNodes: !8359)
!8357 = !DISubroutineType(types: !8358)
!8358 = !{!108, !8150, !164}
!8359 = !{!8360, !8361, !8362, !8363}
!8360 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8356, file: !8171, line: 250, type: !8150)
!8361 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8356, file: !8171, line: 250, type: !164)
!8362 = !DILocalVariable(name: "mpu_reg_index", scope: !8356, file: !8171, line: 252, type: !108)
!8363 = !DILocalVariable(name: "i", scope: !8364, file: !8171, line: 264, type: !108)
!8364 = distinct !DILexicalBlock(scope: !8365, file: !8171, line: 264, column: 3)
!8365 = distinct !DILexicalBlock(scope: !8366, file: !8171, line: 261, column: 32)
!8366 = distinct !DILexicalBlock(scope: !8356, file: !8171, line: 261, column: 6)
!8367 = !DILocation(line: 0, scope: !8356)
!8368 = !DILocation(line: 252, column: 22, scope: !8356)
!8369 = !DILocation(line: 258, column: 18, scope: !8356)
!8370 = !DILocation(line: 261, column: 20, scope: !8366)
!8371 = !DILocation(line: 261, column: 6, scope: !8356)
!8372 = !DILocation(line: 0, scope: !8364)
!8373 = !DILocation(line: 265, column: 4, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8375, file: !8171, line: 264, column: 59)
!8375 = distinct !DILexicalBlock(scope: !8364, file: !8171, line: 264, column: 3)
!8376 = !DILocation(line: 264, column: 55, scope: !8375)
!8377 = !DILocation(line: 264, column: 33, scope: !8375)
!8378 = !DILocation(line: 264, column: 3, scope: !8364)
!8379 = distinct !{!8379, !8378, !8380}
!8380 = !DILocation(line: 266, column: 3, scope: !8364)
!8381 = !DILocation(line: 269, column: 2, scope: !8356)
!8382 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !8383, file: !8383, line: 218, type: !7174, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !787, retainedNodes: !8384)
!8383 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8384 = !{!8385}
!8385 = !DILocalVariable(name: "rnr", arg: 1, scope: !8382, file: !8383, line: 218, type: !113)
!8386 = !DILocation(line: 0, scope: !8382)
!8387 = !DILocation(line: 220, column: 12, scope: !8382)
!8388 = !DILocation(line: 221, column: 13, scope: !8382)
!8389 = !DILocation(line: 222, column: 1, scope: !8382)
!8390 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !820, file: !820, line: 326, type: !8391, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !787, retainedNodes: !8393)
!8391 = !DISubroutineType(types: !8392)
!8392 = !{!108}
!8393 = !{!8394}
!8394 = !DILocalVariable(name: "r_index", scope: !8390, file: !820, line: 328, type: !113)
!8395 = !DILocation(line: 330, column: 17, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8390, file: !820, line: 330, column: 6)
!8397 = !DILocation(line: 330, column: 29, scope: !8396)
!8398 = !DILocation(line: 330, column: 6, scope: !8390)
!8399 = !DILocation(line: 347, column: 2, scope: !8390)
!8400 = !DILocation(line: 0, scope: !8390)
!8401 = !DILocation(line: 364, column: 29, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8403, file: !820, line: 364, column: 2)
!8403 = distinct !DILexicalBlock(scope: !8390, file: !820, line: 364, column: 2)
!8404 = !DILocation(line: 364, column: 2, scope: !8403)
!8405 = !DILocation(line: 365, column: 25, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8402, file: !820, line: 364, column: 66)
!8407 = !DILocation(line: 365, column: 3, scope: !8406)
!8408 = !DILocation(line: 364, column: 62, scope: !8402)
!8409 = distinct !{!8409, !8404, !8410}
!8410 = !DILocation(line: 366, column: 2, scope: !8403)
!8411 = !DILocation(line: 369, column: 23, scope: !8390)
!8412 = !DILocation(line: 369, column: 21, scope: !8390)
!8413 = !DILocation(line: 372, column: 2, scope: !8390)
!8414 = !DILocation(line: 443, column: 2, scope: !8390)
!8415 = !DILocation(line: 444, column: 1, scope: !8390)
!8416 = distinct !DISubprogram(name: "strcpy", scope: !8417, file: !8417, line: 20, type: !8418, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !8422)
!8417 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8418 = !DISubroutineType(types: !8419)
!8419 = !{!443, !8420, !8421}
!8420 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !443)
!8421 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !105)
!8422 = !{!8423, !8424, !8425}
!8423 = !DILocalVariable(name: "d", arg: 1, scope: !8416, file: !8417, line: 20, type: !8420)
!8424 = !DILocalVariable(name: "s", arg: 2, scope: !8416, file: !8417, line: 20, type: !8421)
!8425 = !DILocalVariable(name: "dest", scope: !8416, file: !8417, line: 22, type: !443)
!8426 = !DILocation(line: 0, scope: !8416)
!8427 = !DILocation(line: 24, column: 9, scope: !8416)
!8428 = !DILocation(line: 24, column: 12, scope: !8416)
!8429 = !DILocation(line: 24, column: 2, scope: !8416)
!8430 = !DILocation(line: 25, column: 6, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8416, file: !8417, line: 24, column: 21)
!8432 = !DILocation(line: 26, column: 4, scope: !8431)
!8433 = !DILocation(line: 27, column: 4, scope: !8431)
!8434 = distinct !{!8434, !8429, !8435}
!8435 = !DILocation(line: 28, column: 2, scope: !8416)
!8436 = !DILocation(line: 30, column: 5, scope: !8416)
!8437 = !DILocation(line: 32, column: 2, scope: !8416)
!8438 = distinct !DISubprogram(name: "strncpy", scope: !8417, file: !8417, line: 42, type: !8439, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !8441)
!8439 = !DISubroutineType(types: !8440)
!8440 = !{!443, !8420, !8421, !439}
!8441 = !{!8442, !8443, !8444, !8445}
!8442 = !DILocalVariable(name: "d", arg: 1, scope: !8438, file: !8417, line: 42, type: !8420)
!8443 = !DILocalVariable(name: "s", arg: 2, scope: !8438, file: !8417, line: 42, type: !8421)
!8444 = !DILocalVariable(name: "n", arg: 3, scope: !8438, file: !8417, line: 42, type: !439)
!8445 = !DILocalVariable(name: "dest", scope: !8438, file: !8417, line: 44, type: !443)
!8446 = !DILocation(line: 0, scope: !8438)
!8447 = !DILocation(line: 46, column: 12, scope: !8438)
!8448 = !DILocation(line: 46, column: 17, scope: !8438)
!8449 = !DILocation(line: 46, column: 20, scope: !8438)
!8450 = !DILocation(line: 46, column: 23, scope: !8438)
!8451 = !DILocation(line: 46, column: 2, scope: !8438)
!8452 = !DILocation(line: 47, column: 6, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8438, file: !8417, line: 46, column: 32)
!8454 = !DILocation(line: 48, column: 4, scope: !8453)
!8455 = !DILocation(line: 49, column: 4, scope: !8453)
!8456 = !DILocation(line: 50, column: 4, scope: !8453)
!8457 = distinct !{!8457, !8451, !8458}
!8458 = !DILocation(line: 51, column: 2, scope: !8438)
!8459 = !DILocation(line: 54, column: 6, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8438, file: !8417, line: 53, column: 16)
!8461 = !DILocation(line: 55, column: 4, scope: !8460)
!8462 = !DILocation(line: 56, column: 4, scope: !8460)
!8463 = !DILocation(line: 53, column: 11, scope: !8438)
!8464 = !DILocation(line: 53, column: 2, scope: !8438)
!8465 = distinct !{!8465, !8464, !8466}
!8466 = !DILocation(line: 57, column: 2, scope: !8438)
!8467 = !DILocation(line: 59, column: 2, scope: !8438)
!8468 = distinct !DISubprogram(name: "strchr", scope: !8417, file: !8417, line: 69, type: !8469, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !8471)
!8469 = !DISubroutineType(types: !8470)
!8470 = !{!443, !105, !108}
!8471 = !{!8472, !8473, !8474}
!8472 = !DILocalVariable(name: "s", arg: 1, scope: !8468, file: !8417, line: 69, type: !105)
!8473 = !DILocalVariable(name: "c", arg: 2, scope: !8468, file: !8417, line: 69, type: !108)
!8474 = !DILocalVariable(name: "tmp", scope: !8468, file: !8417, line: 71, type: !107)
!8475 = !DILocation(line: 0, scope: !8468)
!8476 = !DILocation(line: 73, column: 2, scope: !8468)
!8477 = !DILocation(line: 73, column: 10, scope: !8468)
!8478 = !DILocation(line: 73, column: 13, scope: !8468)
!8479 = !DILocation(line: 73, column: 21, scope: !8468)
!8480 = !DILocation(line: 74, column: 4, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8468, file: !8417, line: 73, column: 38)
!8482 = distinct !{!8482, !8476, !8483}
!8483 = !DILocation(line: 75, column: 2, scope: !8468)
!8484 = !DILocation(line: 77, column: 9, scope: !8468)
!8485 = !DILocation(line: 77, column: 2, scope: !8468)
!8486 = distinct !DISubprogram(name: "strrchr", scope: !8417, file: !8417, line: 87, type: !8469, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !8487)
!8487 = !{!8488, !8489, !8490}
!8488 = !DILocalVariable(name: "s", arg: 1, scope: !8486, file: !8417, line: 87, type: !105)
!8489 = !DILocalVariable(name: "c", arg: 2, scope: !8486, file: !8417, line: 87, type: !108)
!8490 = !DILocalVariable(name: "match", scope: !8486, file: !8417, line: 89, type: !443)
!8491 = !DILocation(line: 0, scope: !8486)
!8492 = !DILocation(line: 91, column: 2, scope: !8486)
!8493 = !DILocation(line: 92, column: 7, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8495, file: !8417, line: 92, column: 7)
!8495 = distinct !DILexicalBlock(scope: !8486, file: !8417, line: 91, column: 5)
!8496 = !DILocation(line: 92, column: 10, scope: !8494)
!8497 = !DILocation(line: 92, column: 7, scope: !8495)
!8498 = !DILocation(line: 95, column: 13, scope: !8486)
!8499 = !DILocation(line: 95, column: 2, scope: !8495)
!8500 = distinct !{!8500, !8492, !8501}
!8501 = !DILocation(line: 95, column: 15, scope: !8486)
!8502 = !DILocation(line: 97, column: 2, scope: !8486)
!8503 = distinct !DISubprogram(name: "strlen", scope: !8417, file: !8417, line: 107, type: !8504, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !8506)
!8504 = !DISubroutineType(types: !8505)
!8505 = !{!439, !105}
!8506 = !{!8507, !8508}
!8507 = !DILocalVariable(name: "s", arg: 1, scope: !8503, file: !8417, line: 107, type: !105)
!8508 = !DILocalVariable(name: "n", scope: !8503, file: !8417, line: 109, type: !439)
!8509 = !DILocation(line: 0, scope: !8503)
!8510 = !DILocation(line: 111, column: 9, scope: !8503)
!8511 = !DILocation(line: 111, column: 12, scope: !8503)
!8512 = !DILocation(line: 111, column: 2, scope: !8503)
!8513 = !DILocation(line: 112, column: 4, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8503, file: !8417, line: 111, column: 21)
!8515 = !DILocation(line: 113, column: 4, scope: !8514)
!8516 = distinct !{!8516, !8512, !8517}
!8517 = !DILocation(line: 114, column: 2, scope: !8503)
!8518 = !DILocation(line: 116, column: 2, scope: !8503)
!8519 = distinct !DISubprogram(name: "strnlen", scope: !8417, file: !8417, line: 126, type: !8520, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !8522)
!8520 = !DISubroutineType(types: !8521)
!8521 = !{!439, !105, !439}
!8522 = !{!8523, !8524, !8525}
!8523 = !DILocalVariable(name: "s", arg: 1, scope: !8519, file: !8417, line: 126, type: !105)
!8524 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8519, file: !8417, line: 126, type: !439)
!8525 = !DILocalVariable(name: "n", scope: !8519, file: !8417, line: 128, type: !439)
!8526 = !DILocation(line: 0, scope: !8519)
!8527 = !DILocation(line: 130, column: 9, scope: !8519)
!8528 = !DILocation(line: 130, column: 12, scope: !8519)
!8529 = !DILocation(line: 130, column: 20, scope: !8519)
!8530 = !DILocation(line: 130, column: 2, scope: !8519)
!8531 = !DILocation(line: 131, column: 4, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8519, file: !8417, line: 130, column: 35)
!8533 = !DILocation(line: 132, column: 4, scope: !8532)
!8534 = distinct !{!8534, !8530, !8535}
!8535 = !DILocation(line: 133, column: 2, scope: !8519)
!8536 = !DILocation(line: 135, column: 2, scope: !8519)
!8537 = distinct !DISubprogram(name: "strcmp", scope: !8417, file: !8417, line: 145, type: !8538, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !8540)
!8538 = !DISubroutineType(types: !8539)
!8539 = !{!108, !105, !105}
!8540 = !{!8541, !8542}
!8541 = !DILocalVariable(name: "s1", arg: 1, scope: !8537, file: !8417, line: 145, type: !105)
!8542 = !DILocalVariable(name: "s2", arg: 2, scope: !8537, file: !8417, line: 145, type: !105)
!8543 = !DILocation(line: 0, scope: !8537)
!8544 = !DILocation(line: 147, column: 10, scope: !8537)
!8545 = !DILocation(line: 147, column: 17, scope: !8537)
!8546 = !DILocation(line: 147, column: 14, scope: !8537)
!8547 = !DILocation(line: 147, column: 22, scope: !8537)
!8548 = !DILocation(line: 148, column: 5, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8537, file: !8417, line: 147, column: 40)
!8550 = !DILocation(line: 149, column: 5, scope: !8549)
!8551 = distinct !{!8551, !8552, !8553}
!8552 = !DILocation(line: 147, column: 2, scope: !8537)
!8553 = !DILocation(line: 150, column: 2, scope: !8537)
!8554 = !DILocation(line: 152, column: 9, scope: !8537)
!8555 = !DILocation(line: 152, column: 15, scope: !8537)
!8556 = !DILocation(line: 152, column: 13, scope: !8537)
!8557 = !DILocation(line: 152, column: 2, scope: !8537)
!8558 = distinct !DISubprogram(name: "strncmp", scope: !8417, file: !8417, line: 162, type: !8559, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !8561)
!8559 = !DISubroutineType(types: !8560)
!8560 = !{!108, !105, !105, !439}
!8561 = !{!8562, !8563, !8564}
!8562 = !DILocalVariable(name: "s1", arg: 1, scope: !8558, file: !8417, line: 162, type: !105)
!8563 = !DILocalVariable(name: "s2", arg: 2, scope: !8558, file: !8417, line: 162, type: !105)
!8564 = !DILocalVariable(name: "n", arg: 3, scope: !8558, file: !8417, line: 162, type: !439)
!8565 = !DILocation(line: 0, scope: !8558)
!8566 = !DILocation(line: 164, column: 17, scope: !8558)
!8567 = !DILocation(line: 164, column: 21, scope: !8558)
!8568 = !DILocation(line: 164, column: 28, scope: !8558)
!8569 = !DILocation(line: 164, column: 25, scope: !8558)
!8570 = !DILocation(line: 164, column: 33, scope: !8558)
!8571 = !DILocation(line: 165, column: 5, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8558, file: !8417, line: 164, column: 51)
!8573 = !DILocation(line: 166, column: 5, scope: !8572)
!8574 = !DILocation(line: 167, column: 4, scope: !8572)
!8575 = distinct !{!8575, !8576, !8577}
!8576 = !DILocation(line: 164, column: 2, scope: !8558)
!8577 = !DILocation(line: 168, column: 2, scope: !8558)
!8578 = !DILocation(line: 170, column: 25, scope: !8558)
!8579 = !DILocation(line: 170, column: 31, scope: !8558)
!8580 = !DILocation(line: 170, column: 29, scope: !8558)
!8581 = !DILocation(line: 170, column: 9, scope: !8558)
!8582 = !DILocation(line: 170, column: 2, scope: !8558)
!8583 = distinct !DISubprogram(name: "strtok_r", scope: !8417, file: !8417, line: 180, type: !8584, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !8586)
!8584 = !DISubroutineType(types: !8585)
!8585 = !{!443, !443, !105, !545}
!8586 = !{!8587, !8588, !8589, !8590, !8591}
!8587 = !DILocalVariable(name: "str", arg: 1, scope: !8583, file: !8417, line: 180, type: !443)
!8588 = !DILocalVariable(name: "sep", arg: 2, scope: !8583, file: !8417, line: 180, type: !105)
!8589 = !DILocalVariable(name: "state", arg: 3, scope: !8583, file: !8417, line: 180, type: !545)
!8590 = !DILocalVariable(name: "start", scope: !8583, file: !8417, line: 182, type: !443)
!8591 = !DILocalVariable(name: "end", scope: !8583, file: !8417, line: 182, type: !443)
!8592 = !DILocation(line: 0, scope: !8583)
!8593 = !DILocation(line: 184, column: 10, scope: !8583)
!8594 = !DILocation(line: 184, column: 22, scope: !8583)
!8595 = !DILocation(line: 187, column: 9, scope: !8583)
!8596 = !DILocation(line: 187, column: 16, scope: !8583)
!8597 = !DILocation(line: 187, column: 19, scope: !8583)
!8598 = !DILocation(line: 187, column: 2, scope: !8583)
!8599 = !DILocation(line: 188, column: 8, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8583, file: !8417, line: 187, column: 40)
!8601 = distinct !{!8601, !8598, !8602}
!8602 = !DILocation(line: 189, column: 2, scope: !8583)
!8603 = !DILocation(line: 198, column: 9, scope: !8583)
!8604 = !DILocation(line: 198, column: 18, scope: !8583)
!8605 = !DILocation(line: 198, column: 17, scope: !8583)
!8606 = !DILocation(line: 198, column: 2, scope: !8583)
!8607 = !DILocation(line: 199, column: 6, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8583, file: !8417, line: 198, column: 37)
!8609 = !DILocation(line: 198, column: 14, scope: !8583)
!8610 = distinct !{!8610, !8606, !8611}
!8611 = !DILocation(line: 200, column: 2, scope: !8583)
!8612 = !DILocation(line: 203, column: 8, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8614, file: !8417, line: 202, column: 20)
!8614 = distinct !DILexicalBlock(scope: !8583, file: !8417, line: 202, column: 6)
!8615 = !DILocation(line: 204, column: 16, scope: !8613)
!8616 = !DILocation(line: 205, column: 2, scope: !8613)
!8617 = !DILocation(line: 210, column: 1, scope: !8583)
!8618 = distinct !DISubprogram(name: "strcat", scope: !8417, file: !8417, line: 212, type: !8418, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !8619)
!8619 = !{!8620, !8621}
!8620 = !DILocalVariable(name: "dest", arg: 1, scope: !8618, file: !8417, line: 212, type: !8420)
!8621 = !DILocalVariable(name: "src", arg: 2, scope: !8618, file: !8417, line: 212, type: !8421)
!8622 = !DILocation(line: 0, scope: !8618)
!8623 = !DILocation(line: 214, column: 16, scope: !8618)
!8624 = !DILocation(line: 214, column: 14, scope: !8618)
!8625 = !DILocation(line: 214, column: 2, scope: !8618)
!8626 = !DILocation(line: 215, column: 2, scope: !8618)
!8627 = distinct !DISubprogram(name: "strncat", scope: !8417, file: !8417, line: 218, type: !8439, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !8628)
!8628 = !{!8629, !8630, !8631, !8632, !8633}
!8629 = !DILocalVariable(name: "dest", arg: 1, scope: !8627, file: !8417, line: 218, type: !8420)
!8630 = !DILocalVariable(name: "src", arg: 2, scope: !8627, file: !8417, line: 218, type: !8421)
!8631 = !DILocalVariable(name: "n", arg: 3, scope: !8627, file: !8417, line: 219, type: !439)
!8632 = !DILocalVariable(name: "orig_dest", scope: !8627, file: !8417, line: 221, type: !443)
!8633 = !DILocalVariable(name: "len", scope: !8627, file: !8417, line: 222, type: !439)
!8634 = !DILocation(line: 0, scope: !8627)
!8635 = !DILocation(line: 222, column: 15, scope: !8627)
!8636 = !DILocation(line: 224, column: 7, scope: !8627)
!8637 = !DILocation(line: 225, column: 14, scope: !8627)
!8638 = !DILocation(line: 225, column: 19, scope: !8627)
!8639 = !DILocation(line: 225, column: 11, scope: !8627)
!8640 = !DILocation(line: 225, column: 23, scope: !8627)
!8641 = !DILocation(line: 225, column: 28, scope: !8627)
!8642 = !DILocation(line: 225, column: 2, scope: !8627)
!8643 = !DILocation(line: 226, column: 17, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8627, file: !8417, line: 225, column: 38)
!8645 = !DILocation(line: 226, column: 8, scope: !8644)
!8646 = !DILocation(line: 226, column: 11, scope: !8644)
!8647 = distinct !{!8647, !8642, !8648}
!8648 = !DILocation(line: 227, column: 2, scope: !8627)
!8649 = !DILocation(line: 228, column: 8, scope: !8627)
!8650 = !DILocation(line: 230, column: 2, scope: !8627)
!8651 = distinct !DISubprogram(name: "memcmp", scope: !8417, file: !8417, line: 239, type: !8652, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !8654)
!8652 = !DISubroutineType(types: !8653)
!8653 = !{!108, !13, !13, !439}
!8654 = !{!8655, !8656, !8657, !8658, !8659}
!8655 = !DILocalVariable(name: "m1", arg: 1, scope: !8651, file: !8417, line: 239, type: !13)
!8656 = !DILocalVariable(name: "m2", arg: 2, scope: !8651, file: !8417, line: 239, type: !13)
!8657 = !DILocalVariable(name: "n", arg: 3, scope: !8651, file: !8417, line: 239, type: !439)
!8658 = !DILocalVariable(name: "c1", scope: !8651, file: !8417, line: 241, type: !105)
!8659 = !DILocalVariable(name: "c2", scope: !8651, file: !8417, line: 242, type: !105)
!8660 = !DILocation(line: 0, scope: !8651)
!8661 = !DILocation(line: 244, column: 7, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8651, file: !8417, line: 244, column: 6)
!8663 = !DILocation(line: 244, column: 6, scope: !8651)
!8664 = !DILocation(line: 248, column: 10, scope: !8651)
!8665 = !DILocation(line: 248, column: 14, scope: !8651)
!8666 = !DILocation(line: 248, column: 19, scope: !8651)
!8667 = !DILocation(line: 248, column: 2, scope: !8651)
!8668 = !DILocation(line: 248, column: 23, scope: !8651)
!8669 = !DILocation(line: 248, column: 30, scope: !8651)
!8670 = !DILocation(line: 248, column: 27, scope: !8651)
!8671 = !DILocation(line: 249, column: 5, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8651, file: !8417, line: 248, column: 36)
!8673 = !DILocation(line: 250, column: 5, scope: !8672)
!8674 = distinct !{!8674, !8667, !8675}
!8675 = !DILocation(line: 251, column: 2, scope: !8651)
!8676 = !DILocation(line: 253, column: 9, scope: !8651)
!8677 = !DILocation(line: 253, column: 15, scope: !8651)
!8678 = !DILocation(line: 253, column: 13, scope: !8651)
!8679 = !DILocation(line: 253, column: 2, scope: !8651)
!8680 = !DILocation(line: 254, column: 1, scope: !8651)
!8681 = distinct !DISubprogram(name: "memmove", scope: !8417, file: !8417, line: 263, type: !8682, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !8684)
!8682 = !DISubroutineType(types: !8683)
!8683 = !{!104, !104, !13, !439}
!8684 = !{!8685, !8686, !8687, !8688, !8689}
!8685 = !DILocalVariable(name: "d", arg: 1, scope: !8681, file: !8417, line: 263, type: !104)
!8686 = !DILocalVariable(name: "s", arg: 2, scope: !8681, file: !8417, line: 263, type: !13)
!8687 = !DILocalVariable(name: "n", arg: 3, scope: !8681, file: !8417, line: 263, type: !439)
!8688 = !DILocalVariable(name: "dest", scope: !8681, file: !8417, line: 265, type: !443)
!8689 = !DILocalVariable(name: "src", scope: !8681, file: !8417, line: 266, type: !105)
!8690 = !DILocation(line: 0, scope: !8681)
!8691 = !DILocation(line: 268, column: 21, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8681, file: !8417, line: 268, column: 6)
!8693 = !DILocation(line: 268, column: 28, scope: !8692)
!8694 = !DILocation(line: 268, column: 6, scope: !8681)
!8695 = !DILocation(line: 280, column: 12, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8692, file: !8417, line: 278, column: 9)
!8697 = !DILocation(line: 280, column: 3, scope: !8696)
!8698 = !DILocation(line: 275, column: 5, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8700, file: !8417, line: 274, column: 17)
!8700 = distinct !DILexicalBlock(scope: !8692, file: !8417, line: 268, column: 33)
!8701 = !DILocation(line: 276, column: 14, scope: !8699)
!8702 = !DILocation(line: 276, column: 4, scope: !8699)
!8703 = !DILocation(line: 276, column: 12, scope: !8699)
!8704 = !DILocation(line: 274, column: 12, scope: !8700)
!8705 = !DILocation(line: 274, column: 3, scope: !8700)
!8706 = distinct !{!8706, !8705, !8707}
!8707 = !DILocation(line: 277, column: 3, scope: !8700)
!8708 = !DILocation(line: 281, column: 12, scope: !8709)
!8709 = distinct !DILexicalBlock(scope: !8696, file: !8417, line: 280, column: 17)
!8710 = !DILocation(line: 281, column: 10, scope: !8709)
!8711 = !DILocation(line: 282, column: 8, scope: !8709)
!8712 = !DILocation(line: 283, column: 7, scope: !8709)
!8713 = !DILocation(line: 284, column: 5, scope: !8709)
!8714 = distinct !{!8714, !8697, !8715}
!8715 = !DILocation(line: 285, column: 3, scope: !8696)
!8716 = !DILocation(line: 288, column: 2, scope: !8681)
!8717 = distinct !DISubprogram(name: "memcpy", scope: !8417, file: !8417, line: 298, type: !8718, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !8722)
!8718 = !DISubroutineType(types: !8719)
!8719 = !{!104, !8720, !8721, !439}
!8720 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !104)
!8721 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8722 = !{!8723, !8724, !8725, !8726, !8727}
!8723 = !DILocalVariable(name: "d", arg: 1, scope: !8717, file: !8417, line: 298, type: !8720)
!8724 = !DILocalVariable(name: "s", arg: 2, scope: !8717, file: !8417, line: 298, type: !8721)
!8725 = !DILocalVariable(name: "n", arg: 3, scope: !8717, file: !8417, line: 298, type: !439)
!8726 = !DILocalVariable(name: "d_byte", scope: !8717, file: !8417, line: 302, type: !1319)
!8727 = !DILocalVariable(name: "s_byte", scope: !8717, file: !8417, line: 303, type: !3201)
!8728 = !DILocation(line: 0, scope: !8717)
!8729 = !DILocation(line: 337, column: 11, scope: !8717)
!8730 = !DILocation(line: 337, column: 2, scope: !8717)
!8731 = !DILocation(line: 338, column: 25, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8717, file: !8417, line: 337, column: 16)
!8733 = !DILocation(line: 338, column: 17, scope: !8732)
!8734 = !DILocation(line: 338, column: 11, scope: !8732)
!8735 = !DILocation(line: 338, column: 15, scope: !8732)
!8736 = !DILocation(line: 339, column: 4, scope: !8732)
!8737 = distinct !{!8737, !8730, !8738}
!8738 = !DILocation(line: 340, column: 2, scope: !8717)
!8739 = !DILocation(line: 342, column: 2, scope: !8717)
!8740 = distinct !DISubprogram(name: "memset", scope: !8417, file: !8417, line: 352, type: !8741, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !8743)
!8741 = !DISubroutineType(types: !8742)
!8742 = !{!104, !104, !108, !439}
!8743 = !{!8744, !8745, !8746, !8747, !8748}
!8744 = !DILocalVariable(name: "buf", arg: 1, scope: !8740, file: !8417, line: 352, type: !104)
!8745 = !DILocalVariable(name: "c", arg: 2, scope: !8740, file: !8417, line: 352, type: !108)
!8746 = !DILocalVariable(name: "n", arg: 3, scope: !8740, file: !8417, line: 352, type: !439)
!8747 = !DILocalVariable(name: "d_byte", scope: !8740, file: !8417, line: 356, type: !1319)
!8748 = !DILocalVariable(name: "c_byte", scope: !8740, file: !8417, line: 357, type: !165)
!8749 = !DILocation(line: 0, scope: !8740)
!8750 = !DILocation(line: 357, column: 25, scope: !8740)
!8751 = !DILocation(line: 389, column: 11, scope: !8740)
!8752 = !DILocation(line: 389, column: 2, scope: !8740)
!8753 = !DILocation(line: 390, column: 11, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8740, file: !8417, line: 389, column: 16)
!8755 = !DILocation(line: 390, column: 15, scope: !8754)
!8756 = !DILocation(line: 391, column: 4, scope: !8754)
!8757 = distinct !{!8757, !8752, !8758}
!8758 = !DILocation(line: 392, column: 2, scope: !8740)
!8759 = !DILocation(line: 394, column: 2, scope: !8740)
!8760 = distinct !DISubprogram(name: "memchr", scope: !8417, file: !8417, line: 404, type: !8761, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !8763)
!8761 = !DISubroutineType(types: !8762)
!8762 = !{!104, !13, !108, !439}
!8763 = !{!8764, !8765, !8766, !8767}
!8764 = !DILocalVariable(name: "s", arg: 1, scope: !8760, file: !8417, line: 404, type: !13)
!8765 = !DILocalVariable(name: "c", arg: 2, scope: !8760, file: !8417, line: 404, type: !108)
!8766 = !DILocalVariable(name: "n", arg: 3, scope: !8760, file: !8417, line: 404, type: !439)
!8767 = !DILocalVariable(name: "p", scope: !8768, file: !8417, line: 407, type: !3201)
!8768 = distinct !DILexicalBlock(scope: !8769, file: !8417, line: 406, column: 14)
!8769 = distinct !DILexicalBlock(scope: !8760, file: !8417, line: 406, column: 6)
!8770 = !DILocation(line: 0, scope: !8760)
!8771 = !DILocation(line: 406, column: 8, scope: !8769)
!8772 = !DILocation(line: 406, column: 6, scope: !8760)
!8773 = !DILocation(line: 409, column: 3, scope: !8768)
!8774 = !DILocation(line: 0, scope: !8768)
!8775 = !DILocation(line: 410, column: 8, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8777, file: !8417, line: 410, column: 8)
!8777 = distinct !DILexicalBlock(scope: !8768, file: !8417, line: 409, column: 6)
!8778 = !DILocation(line: 410, column: 13, scope: !8776)
!8779 = !DILocation(line: 410, column: 8, scope: !8777)
!8780 = distinct !{!8780, !8773, !8781}
!8781 = !DILocation(line: 414, column: 20, scope: !8768)
!8782 = !DILocation(line: 417, column: 2, scope: !8760)
!8783 = !DILocation(line: 418, column: 1, scope: !8760)
!8784 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !830, file: !830, line: 23, type: !5025, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !8785)
!8785 = !{!8786}
!8786 = !DILocalVariable(name: "hook", arg: 1, scope: !8784, file: !830, line: 23, type: !560)
!8787 = !DILocation(line: 0, scope: !8784)
!8788 = !DILocation(line: 25, column: 15, scope: !8784)
!8789 = !DILocation(line: 26, column: 1, scope: !8784)
!8790 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !830, file: !830, line: 14, type: !561, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !8791)
!8791 = !{!8792}
!8792 = !DILocalVariable(name: "c", arg: 1, scope: !8790, file: !830, line: 14, type: !108)
!8793 = !DILocation(line: 0, scope: !8790)
!8794 = !DILocation(line: 18, column: 2, scope: !8790)
!8795 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !830, file: !830, line: 28, type: !8796, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !8798)
!8796 = !DISubroutineType(types: !8797)
!8797 = !{!108, !108, !826}
!8798 = !{!8799, !8800}
!8799 = !DILocalVariable(name: "c", arg: 1, scope: !8795, file: !830, line: 28, type: !108)
!8800 = !DILocalVariable(name: "stream", arg: 2, scope: !8795, file: !830, line: 28, type: !826)
!8801 = !DILocation(line: 0, scope: !8795)
!8802 = !DILocation(line: 30, column: 27, scope: !8795)
!8803 = !DILocation(line: 30, column: 50, scope: !8795)
!8804 = !DILocation(line: 30, column: 9, scope: !8795)
!8805 = !DILocation(line: 30, column: 2, scope: !8795)
!8806 = distinct !DISubprogram(name: "fputc", scope: !830, file: !830, line: 41, type: !8796, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !8807)
!8807 = !{!8808, !8809}
!8808 = !DILocalVariable(name: "c", arg: 1, scope: !8806, file: !830, line: 41, type: !108)
!8809 = !DILocalVariable(name: "stream", arg: 2, scope: !8806, file: !830, line: 41, type: !826)
!8810 = !DILocation(line: 0, scope: !8806)
!8811 = !DILocation(line: 43, column: 9, scope: !8806)
!8812 = !DILocation(line: 43, column: 2, scope: !8806)
!8813 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8814, file: !8814, line: 72, type: !8796, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !8815)
!8814 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!8815 = !{!8816, !8817}
!8816 = !DILocalVariable(name: "c", arg: 1, scope: !8813, file: !8814, line: 72, type: !108)
!8817 = !DILocalVariable(name: "stream", arg: 2, scope: !8813, file: !8814, line: 72, type: !826)
!8818 = !DILocation(line: 0, scope: !8813)
!8819 = !DILocation(line: 81, column: 2, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8813, file: !8814, line: 81, column: 2)
!8821 = !{i64 2154229836}
!8822 = !DILocation(line: 82, column: 9, scope: !8813)
!8823 = !DILocation(line: 82, column: 2, scope: !8813)
!8824 = distinct !DISubprogram(name: "fputs", scope: !830, file: !830, line: 46, type: !8825, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !8828)
!8825 = !DISubroutineType(types: !8826)
!8826 = !{!108, !8421, !8827}
!8827 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !826)
!8828 = !{!8829, !8830, !8831, !8832}
!8829 = !DILocalVariable(name: "s", arg: 1, scope: !8824, file: !830, line: 46, type: !8421)
!8830 = !DILocalVariable(name: "stream", arg: 2, scope: !8824, file: !830, line: 46, type: !8827)
!8831 = !DILocalVariable(name: "len", scope: !8824, file: !830, line: 48, type: !108)
!8832 = !DILocalVariable(name: "ret", scope: !8824, file: !830, line: 49, type: !108)
!8833 = !DILocation(line: 0, scope: !8824)
!8834 = !DILocation(line: 48, column: 12, scope: !8824)
!8835 = !DILocation(line: 51, column: 8, scope: !8824)
!8836 = !DILocation(line: 53, column: 13, scope: !8824)
!8837 = !DILocation(line: 53, column: 9, scope: !8824)
!8838 = !DILocation(line: 53, column: 2, scope: !8824)
!8839 = distinct !DISubprogram(name: "fwrite", scope: !830, file: !830, line: 99, type: !8840, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !8842)
!8840 = !DISubroutineType(types: !8841)
!8841 = !{!439, !8721, !439, !439, !8827}
!8842 = !{!8843, !8844, !8845, !8846}
!8843 = !DILocalVariable(name: "ptr", arg: 1, scope: !8839, file: !830, line: 99, type: !8721)
!8844 = !DILocalVariable(name: "size", arg: 2, scope: !8839, file: !830, line: 99, type: !439)
!8845 = !DILocalVariable(name: "nitems", arg: 3, scope: !8839, file: !830, line: 99, type: !439)
!8846 = !DILocalVariable(name: "stream", arg: 4, scope: !8839, file: !830, line: 100, type: !8827)
!8847 = !DILocation(line: 0, scope: !8839)
!8848 = !DILocation(line: 102, column: 9, scope: !8839)
!8849 = !DILocation(line: 102, column: 2, scope: !8839)
!8850 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8814, file: !8814, line: 96, type: !8840, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !8851)
!8851 = !{!8852, !8853, !8854, !8855}
!8852 = !DILocalVariable(name: "ptr", arg: 1, scope: !8850, file: !8814, line: 96, type: !8721)
!8853 = !DILocalVariable(name: "size", arg: 2, scope: !8850, file: !8814, line: 96, type: !439)
!8854 = !DILocalVariable(name: "nitems", arg: 3, scope: !8850, file: !8814, line: 96, type: !439)
!8855 = !DILocalVariable(name: "stream", arg: 4, scope: !8850, file: !8814, line: 96, type: !8827)
!8856 = !DILocation(line: 0, scope: !8850)
!8857 = !DILocation(line: 107, column: 2, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8850, file: !8814, line: 107, column: 2)
!8859 = !{i64 2154229940}
!8860 = !DILocation(line: 108, column: 9, scope: !8850)
!8861 = !DILocation(line: 108, column: 2, scope: !8850)
!8862 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !830, file: !830, line: 56, type: !8840, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !8863)
!8863 = !{!8864, !8865, !8866, !8867, !8868, !8869, !8870, !8871}
!8864 = !DILocalVariable(name: "ptr", arg: 1, scope: !8862, file: !830, line: 56, type: !8721)
!8865 = !DILocalVariable(name: "size", arg: 2, scope: !8862, file: !830, line: 56, type: !439)
!8866 = !DILocalVariable(name: "nitems", arg: 3, scope: !8862, file: !830, line: 57, type: !439)
!8867 = !DILocalVariable(name: "stream", arg: 4, scope: !8862, file: !830, line: 57, type: !8827)
!8868 = !DILocalVariable(name: "i", scope: !8862, file: !830, line: 59, type: !439)
!8869 = !DILocalVariable(name: "j", scope: !8862, file: !830, line: 60, type: !439)
!8870 = !DILocalVariable(name: "p", scope: !8862, file: !830, line: 61, type: !3201)
!8871 = !DILabel(scope: !8862, name: "done", file: !830, line: 82)
!8872 = !DILocation(line: 0, scope: !8862)
!8873 = !DILocation(line: 63, column: 14, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8862, file: !830, line: 63, column: 6)
!8875 = !DILocation(line: 63, column: 24, scope: !8874)
!8876 = !DILocation(line: 72, column: 3, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8862, file: !830, line: 70, column: 5)
!8878 = !DILocation(line: 0, scope: !8877)
!8879 = !DILocation(line: 73, column: 8, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8881, file: !830, line: 73, column: 8)
!8881 = distinct !DILexicalBlock(scope: !8877, file: !830, line: 72, column: 6)
!8882 = !DILocation(line: 73, column: 29, scope: !8880)
!8883 = !DILocation(line: 73, column: 27, scope: !8880)
!8884 = !DILocation(line: 73, column: 21, scope: !8880)
!8885 = !DILocation(line: 73, column: 33, scope: !8880)
!8886 = !DILocation(line: 73, column: 8, scope: !8881)
!8887 = !DILocation(line: 76, column: 5, scope: !8881)
!8888 = !DILocation(line: 77, column: 14, scope: !8877)
!8889 = !DILocation(line: 77, column: 3, scope: !8881)
!8890 = distinct !{!8890, !8876, !8891}
!8891 = !DILocation(line: 77, column: 17, scope: !8877)
!8892 = !DILocation(line: 79, column: 4, scope: !8877)
!8893 = !DILocation(line: 80, column: 13, scope: !8862)
!8894 = !DILocation(line: 80, column: 2, scope: !8877)
!8895 = distinct !{!8895, !8896, !8897}
!8896 = !DILocation(line: 70, column: 2, scope: !8862)
!8897 = !DILocation(line: 80, column: 16, scope: !8862)
!8898 = !DILocation(line: 82, column: 1, scope: !8862)
!8899 = !DILocation(line: 83, column: 17, scope: !8862)
!8900 = !DILocation(line: 83, column: 2, scope: !8862)
!8901 = !DILocation(line: 84, column: 1, scope: !8862)
!8902 = distinct !DISubprogram(name: "puts", scope: !830, file: !830, line: 106, type: !8903, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !8905)
!8903 = !DISubroutineType(types: !8904)
!8904 = !{!108, !105}
!8905 = !{!8906}
!8906 = !DILocalVariable(name: "s", arg: 1, scope: !8902, file: !830, line: 106, type: !105)
!8907 = !DILocation(line: 0, scope: !8902)
!8908 = !DILocation(line: 108, column: 6, scope: !8909)
!8909 = distinct !DILexicalBlock(scope: !8902, file: !830, line: 108, column: 6)
!8910 = !DILocation(line: 108, column: 23, scope: !8909)
!8911 = !DILocation(line: 108, column: 6, scope: !8902)
!8912 = !DILocation(line: 112, column: 9, scope: !8902)
!8913 = !DILocation(line: 112, column: 29, scope: !8902)
!8914 = !DILocation(line: 112, column: 2, scope: !8902)
!8915 = !DILocation(line: 113, column: 1, scope: !8902)
!8916 = distinct !DISubprogram(name: "rtio_simple_submit", scope: !861, file: !861, line: 25, type: !8917, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !9006)
!8917 = !DISubroutineType(types: !8918)
!8918 = !{!108, !8919}
!8919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8920, size: 32)
!8920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !8921)
!8921 = !{!8922, !8987, !8988, !8995}
!8922 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !8920, file: !125, line: 228, baseType: !8923, size: 32)
!8923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8924, size: 32)
!8924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !8925)
!8925 = !{!8926}
!8926 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !8924, file: !125, line: 211, baseType: !8927, size: 32)
!8927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8928, size: 32)
!8928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8929)
!8929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !8930)
!8930 = !{!8931, !8933, !8986}
!8931 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !8929, file: !125, line: 177, baseType: !8932, size: 32)
!8932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8917, size: 32)
!8933 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !8929, file: !125, line: 182, baseType: !8934, size: 32, offset: 32)
!8934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8935, size: 32)
!8935 = !DISubroutineType(types: !8936)
!8936 = !{null, !8919, !8937, !108}
!8937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8938, size: 32)
!8938 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8939)
!8939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !8940)
!8940 = !{!8941, !8942, !8943, !8944, !8977, !8978}
!8941 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !8939, file: !125, line: 110, baseType: !164, size: 8)
!8942 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8939, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!8943 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8939, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!8944 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !8939, file: !125, line: 116, baseType: !8945, size: 32, offset: 32)
!8945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8946, size: 32)
!8946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8947)
!8947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !8948)
!8948 = !{!8949, !8958, !8976}
!8949 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !8947, file: !125, line: 308, baseType: !8950, size: 32)
!8950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8951, size: 32)
!8951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8952)
!8952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !8953)
!8953 = !{!8954}
!8954 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !8952, file: !125, line: 271, baseType: !8955, size: 32)
!8955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8956, size: 32)
!8956 = !DISubroutineType(types: !8957)
!8957 = !{null, !8937, !8919}
!8958 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !8947, file: !125, line: 311, baseType: !8959, size: 32, offset: 32)
!8959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8960, size: 32)
!8960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !8961)
!8961 = !{!8962, !8970}
!8962 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !8960, file: !125, line: 299, baseType: !8963, size: 160)
!8963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !8964)
!8964 = !{!8965, !8966, !8967, !8968, !8969}
!8965 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !8963, file: !151, line: 60, baseType: !24, size: 32)
!8966 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !8963, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!8967 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !8963, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!8968 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !8963, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!8969 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !8963, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!8970 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !8960, file: !125, line: 300, baseType: !8971, offset: 160)
!8971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8972, elements: !197)
!8972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !8973)
!8973 = !{!8974, !8975}
!8974 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !8972, file: !125, line: 289, baseType: !8937, size: 32)
!8975 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !8972, file: !125, line: 290, baseType: !8919, size: 32, offset: 32)
!8976 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8947, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!8977 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !8939, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!8978 = !DIDerivedType(tag: DW_TAG_member, scope: !8939, file: !125, line: 127, baseType: !8979, size: 64, offset: 96)
!8979 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8939, file: !125, line: 127, size: 64, elements: !8980)
!8980 = !{!8981}
!8981 = !DIDerivedType(tag: DW_TAG_member, scope: !8979, file: !125, line: 128, baseType: !8982, size: 64)
!8982 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8979, file: !125, line: 128, size: 64, elements: !8983)
!8983 = !{!8984, !8985}
!8984 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !8982, file: !125, line: 129, baseType: !113, size: 32)
!8985 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !8982, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!8986 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !8929, file: !125, line: 187, baseType: !8934, size: 32, offset: 64)
!8987 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !8920, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!8988 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !8920, file: !125, line: 254, baseType: !8989, size: 32, offset: 64)
!8989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8990, size: 32)
!8990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !8991)
!8991 = !{!8992, !8993}
!8992 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !8990, file: !125, line: 143, baseType: !8963, size: 160)
!8993 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !8990, file: !125, line: 144, baseType: !8994, offset: 160)
!8994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8939, elements: !197)
!8995 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !8920, file: !125, line: 257, baseType: !8996, size: 32, offset: 96)
!8996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8997, size: 32)
!8997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !8998)
!8998 = !{!8999, !9000}
!8999 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !8997, file: !125, line: 162, baseType: !8963, size: 160)
!9000 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !8997, file: !125, line: 163, baseType: !9001, offset: 160)
!9001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9002, elements: !197)
!9002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !9003)
!9003 = !{!9004, !9005}
!9004 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !9002, file: !125, line: 151, baseType: !220, size: 32)
!9005 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !9002, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!9006 = !{!9007, !9008, !9010, !9012}
!9007 = !DILocalVariable(name: "r", arg: 1, scope: !8916, file: !861, line: 25, type: !8919)
!9008 = !DILocalVariable(name: "sqe", scope: !8916, file: !861, line: 30, type: !9009)
!9009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8939, size: 32)
!9010 = !DILocalVariable(name: "idx", scope: !9011, file: !861, line: 30, type: !24)
!9011 = distinct !DILexicalBlock(scope: !8916, file: !861, line: 30, column: 25)
!9012 = !DILocalVariable(name: "has_consumable", scope: !9011, file: !861, line: 30, type: !422)
!9013 = !DILocation(line: 0, scope: !8916)
!9014 = !DILocation(line: 30, column: 25, scope: !9011)
!9015 = !DILocation(line: 0, scope: !9011)
!9016 = !DILocation(line: 30, column: 25, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9018, file: !861, line: 30, column: 25)
!9018 = distinct !DILexicalBlock(scope: !9011, file: !861, line: 30, column: 25)
!9019 = !DILocation(line: 33, column: 3, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !9021, file: !861, line: 32, column: 19)
!9021 = distinct !DILexicalBlock(scope: !8916, file: !861, line: 32, column: 6)
!9022 = !DILocation(line: 34, column: 2, scope: !9020)
!9023 = !DILocation(line: 36, column: 2, scope: !8916)
!9024 = distinct !DISubprogram(name: "atomic_get", scope: !3730, file: !3730, line: 159, type: !3731, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !9025)
!9025 = !{!9026}
!9026 = !DILocalVariable(name: "target", arg: 1, scope: !9024, file: !3730, line: 159, type: !3734)
!9027 = !DILocation(line: 0, scope: !9024)
!9028 = !DILocation(line: 161, column: 9, scope: !9024)
!9029 = !DILocation(line: 161, column: 2, scope: !9024)
!9030 = distinct !DISubprogram(name: "rtio_iodev_submit", scope: !125, file: !125, line: 457, type: !8956, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !9031)
!9031 = !{!9032, !9033}
!9032 = !DILocalVariable(name: "sqe", arg: 1, scope: !9030, file: !125, line: 457, type: !8937)
!9033 = !DILocalVariable(name: "r", arg: 2, scope: !9030, file: !125, line: 457, type: !8919)
!9034 = !DILocation(line: 0, scope: !9030)
!9035 = !DILocation(line: 459, column: 7, scope: !9030)
!9036 = !DILocation(line: 459, column: 14, scope: !9030)
!9037 = !DILocation(line: 459, column: 19, scope: !9030)
!9038 = !DILocation(line: 459, column: 2, scope: !9030)
!9039 = !DILocation(line: 460, column: 1, scope: !9030)
!9040 = distinct !DISubprogram(name: "rtio_simple_ok", scope: !861, file: !861, line: 42, type: !8935, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !9041)
!9041 = !{!9042, !9043, !9044, !9045}
!9042 = !DILocalVariable(name: "r", arg: 1, scope: !9040, file: !861, line: 42, type: !8919)
!9043 = !DILocalVariable(name: "sqe", arg: 2, scope: !9040, file: !861, line: 42, type: !8937)
!9044 = !DILocalVariable(name: "result", arg: 3, scope: !9040, file: !861, line: 42, type: !108)
!9045 = !DILocalVariable(name: "userdata", scope: !9040, file: !861, line: 44, type: !104)
!9046 = !DILocation(line: 0, scope: !9040)
!9047 = !DILocation(line: 44, column: 24, scope: !9040)
!9048 = !DILocation(line: 46, column: 2, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9050, file: !861, line: 46, column: 2)
!9050 = distinct !DILexicalBlock(scope: !9040, file: !861, line: 46, column: 2)
!9051 = !DILocation(line: 46, column: 2, scope: !9050)
!9052 = !DILocation(line: 46, column: 2, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9049, file: !861, line: 46, column: 2)
!9054 = !DILocation(line: 47, column: 2, scope: !9040)
!9055 = !DILocation(line: 48, column: 2, scope: !9040)
!9056 = !DILocation(line: 49, column: 1, scope: !9040)
!9057 = distinct !DISubprogram(name: "atomic_add", scope: !3730, file: !3730, line: 86, type: !3766, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !9058)
!9058 = !{!9059, !9060}
!9059 = !DILocalVariable(name: "target", arg: 1, scope: !9057, file: !3730, line: 86, type: !3768)
!9060 = !DILocalVariable(name: "value", arg: 2, scope: !9057, file: !3730, line: 86, type: !3733)
!9061 = !DILocation(line: 0, scope: !9057)
!9062 = !DILocation(line: 88, column: 9, scope: !9057)
!9063 = !DILocation(line: 88, column: 2, scope: !9057)
!9064 = distinct !DISubprogram(name: "rtio_cqe_submit", scope: !125, file: !125, line: 607, type: !9065, scopeLine: 608, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !9067)
!9065 = !DISubroutineType(types: !9066)
!9066 = !{null, !8919, !108, !104}
!9067 = !{!9068, !9069, !9070, !9071, !9073, !9075}
!9068 = !DILocalVariable(name: "r", arg: 1, scope: !9064, file: !125, line: 607, type: !8919)
!9069 = !DILocalVariable(name: "result", arg: 2, scope: !9064, file: !125, line: 607, type: !108)
!9070 = !DILocalVariable(name: "userdata", arg: 3, scope: !9064, file: !125, line: 607, type: !104)
!9071 = !DILocalVariable(name: "cqe", scope: !9064, file: !125, line: 609, type: !9072)
!9072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9002, size: 32)
!9073 = !DILocalVariable(name: "idx", scope: !9074, file: !125, line: 609, type: !24)
!9074 = distinct !DILexicalBlock(scope: !9064, file: !125, line: 609, column: 25)
!9075 = !DILocalVariable(name: "acq", scope: !9074, file: !125, line: 609, type: !422)
!9076 = !DILocation(line: 0, scope: !9064)
!9077 = !DILocation(line: 609, column: 25, scope: !9074)
!9078 = !DILocation(line: 0, scope: !9074)
!9079 = !DILocation(line: 612, column: 18, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9081, file: !125, line: 611, column: 19)
!9081 = distinct !DILexicalBlock(scope: !9064, file: !125, line: 611, column: 6)
!9082 = !DILocation(line: 612, column: 3, scope: !9080)
!9083 = !DILocation(line: 613, column: 2, scope: !9080)
!9084 = !DILocation(line: 609, column: 25, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9086, file: !125, line: 609, column: 25)
!9086 = distinct !DILexicalBlock(scope: !9074, file: !125, line: 609, column: 25)
!9087 = !DILocation(line: 614, column: 8, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9081, file: !125, line: 613, column: 9)
!9089 = !DILocation(line: 614, column: 15, scope: !9088)
!9090 = !DILocation(line: 615, column: 8, scope: !9088)
!9091 = !DILocation(line: 615, column: 17, scope: !9088)
!9092 = !DILocation(line: 616, column: 3, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9094, file: !125, line: 616, column: 3)
!9094 = distinct !DILexicalBlock(scope: !9088, file: !125, line: 616, column: 3)
!9095 = !DILocation(line: 616, column: 3, scope: !9094)
!9096 = !DILocation(line: 616, column: 3, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9093, file: !125, line: 616, column: 3)
!9098 = !DILocation(line: 629, column: 1, scope: !9064)
!9099 = distinct !DISubprogram(name: "atomic_inc", scope: !3730, file: !3730, line: 123, type: !9100, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !9102)
!9100 = !DISubroutineType(types: !9101)
!9101 = !{!3733, !3768}
!9102 = !{!9103}
!9103 = !DILocalVariable(name: "target", arg: 1, scope: !9099, file: !3730, line: 123, type: !3768)
!9104 = !DILocation(line: 0, scope: !9099)
!9105 = !DILocation(line: 125, column: 9, scope: !9099)
!9106 = !DILocation(line: 125, column: 2, scope: !9099)
!9107 = distinct !DISubprogram(name: "rtio_simple_err", scope: !861, file: !861, line: 54, type: !8935, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !858, retainedNodes: !9108)
!9108 = !{!9109, !9110, !9111, !9112, !9113, !9114, !9115, !9119, !9120, !9123}
!9109 = !DILocalVariable(name: "r", arg: 1, scope: !9107, file: !861, line: 54, type: !8919)
!9110 = !DILocalVariable(name: "sqe", arg: 2, scope: !9107, file: !861, line: 54, type: !8937)
!9111 = !DILocalVariable(name: "result", arg: 3, scope: !9107, file: !861, line: 54, type: !108)
!9112 = !DILocalVariable(name: "nsqe", scope: !9107, file: !861, line: 56, type: !9009)
!9113 = !DILocalVariable(name: "userdata", scope: !9107, file: !861, line: 57, type: !104)
!9114 = !DILocalVariable(name: "chained", scope: !9107, file: !861, line: 58, type: !422)
!9115 = !DILocalVariable(name: "idx", scope: !9116, file: !861, line: 65, type: !24)
!9116 = distinct !DILexicalBlock(scope: !9117, file: !861, line: 65, column: 10)
!9117 = distinct !DILexicalBlock(scope: !9118, file: !861, line: 63, column: 15)
!9118 = distinct !DILexicalBlock(scope: !9107, file: !861, line: 63, column: 6)
!9119 = !DILocalVariable(name: "has_consumable", scope: !9116, file: !861, line: 65, type: !422)
!9120 = !DILocalVariable(name: "idx", scope: !9121, file: !861, line: 70, type: !24)
!9121 = distinct !DILexicalBlock(scope: !9122, file: !861, line: 70, column: 11)
!9122 = distinct !DILexicalBlock(scope: !9117, file: !861, line: 66, column: 58)
!9123 = !DILocalVariable(name: "has_consumable", scope: !9121, file: !861, line: 70, type: !422)
!9124 = !DILocation(line: 0, scope: !9107)
!9125 = !DILocation(line: 57, column: 24, scope: !9107)
!9126 = !DILocation(line: 58, column: 22, scope: !9107)
!9127 = !DILocation(line: 58, column: 28, scope: !9107)
!9128 = !DILocation(line: 58, column: 17, scope: !9107)
!9129 = !DILocation(line: 60, column: 2, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9131, file: !861, line: 60, column: 2)
!9131 = distinct !DILexicalBlock(scope: !9107, file: !861, line: 60, column: 2)
!9132 = !DILocation(line: 60, column: 2, scope: !9131)
!9133 = !DILocation(line: 60, column: 2, scope: !9134)
!9134 = distinct !DILexicalBlock(scope: !9130, file: !861, line: 60, column: 2)
!9135 = !DILocation(line: 61, column: 34, scope: !9107)
!9136 = !DILocation(line: 61, column: 2, scope: !9107)
!9137 = !DILocation(line: 63, column: 6, scope: !9107)
!9138 = !DILocation(line: 65, column: 10, scope: !9116)
!9139 = !DILocation(line: 0, scope: !9116)
!9140 = !DILocation(line: 0, scope: !9117)
!9141 = !DILocation(line: 66, column: 32, scope: !9117)
!9142 = !DILocation(line: 66, column: 38, scope: !9117)
!9143 = !DILocation(line: 66, column: 23, scope: !9117)
!9144 = !DILocation(line: 66, column: 3, scope: !9117)
!9145 = !DILocation(line: 67, column: 21, scope: !9122)
!9146 = !DILocation(line: 68, column: 4, scope: !9147)
!9147 = distinct !DILexicalBlock(scope: !9148, file: !861, line: 68, column: 4)
!9148 = distinct !DILexicalBlock(scope: !9122, file: !861, line: 68, column: 4)
!9149 = !DILocation(line: 68, column: 4, scope: !9148)
!9150 = !DILocation(line: 68, column: 4, scope: !9151)
!9151 = distinct !DILexicalBlock(scope: !9147, file: !861, line: 68, column: 4)
!9152 = !DILocation(line: 69, column: 4, scope: !9122)
!9153 = !DILocation(line: 70, column: 11, scope: !9121)
!9154 = !DILocation(line: 0, scope: !9121)
!9155 = !DILocation(line: 74, column: 4, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9157, file: !861, line: 73, column: 21)
!9157 = distinct !DILexicalBlock(scope: !9117, file: !861, line: 73, column: 7)
!9158 = !DILocation(line: 75, column: 3, scope: !9156)
!9159 = !DILocation(line: 79, column: 3, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9118, file: !861, line: 77, column: 9)
!9161 = !DILocation(line: 81, column: 1, scope: !9107)
!9162 = distinct !DISubprogram(name: "rtio_concurrent_submit", scope: !978, file: !978, line: 119, type: !886, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !9163)
!9163 = !{!9164, !9165, !9166, !9167, !9168, !9173, !9177, !9178, !9181, !9182, !9184, !9187, !9188, !9190, !9191, !9194}
!9164 = !DILocalVariable(name: "r", arg: 1, scope: !9162, file: !978, line: 119, type: !888)
!9165 = !DILocalVariable(name: "exc", scope: !9162, file: !978, line: 124, type: !872)
!9166 = !DILocalVariable(name: "sqe", scope: !9162, file: !978, line: 126, type: !972)
!9167 = !DILocalVariable(name: "last_sqe", scope: !9162, file: !978, line: 127, type: !972)
!9168 = !DILocalVariable(name: "key", scope: !9162, file: !978, line: 128, type: !9169)
!9169 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !9170)
!9170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !9171)
!9171 = !{!9172}
!9172 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9170, file: !436, line: 33, baseType: !108, size: 32)
!9173 = !DILocalVariable(name: "idx", scope: !9174, file: !978, line: 137, type: !24)
!9174 = distinct !DILexicalBlock(scope: !9175, file: !978, line: 137, column: 9)
!9175 = distinct !DILexicalBlock(scope: !9176, file: !978, line: 136, column: 29)
!9176 = distinct !DILexicalBlock(scope: !9162, file: !978, line: 136, column: 6)
!9177 = !DILocalVariable(name: "has_consumable", scope: !9174, file: !978, line: 137, type: !422)
!9178 = !DILocalVariable(name: "idx", scope: !9179, file: !978, line: 140, type: !24)
!9179 = distinct !DILexicalBlock(scope: !9180, file: !978, line: 140, column: 9)
!9180 = distinct !DILexicalBlock(scope: !9176, file: !978, line: 138, column: 9)
!9181 = !DILocalVariable(name: "has_next", scope: !9179, file: !978, line: 140, type: !422)
!9182 = !DILocalVariable(name: "task_idx", scope: !9183, file: !978, line: 148, type: !168)
!9183 = distinct !DILexicalBlock(scope: !9162, file: !978, line: 144, column: 46)
!9184 = !DILocalVariable(name: "idx", scope: !9185, file: !978, line: 159, type: !24)
!9185 = distinct !DILexicalBlock(scope: !9186, file: !978, line: 159, column: 10)
!9186 = distinct !DILexicalBlock(scope: !9183, file: !978, line: 158, column: 58)
!9187 = !DILocalVariable(name: "has_next", scope: !9185, file: !978, line: 159, type: !422)
!9188 = !DILocalVariable(name: "idx", scope: !9189, file: !978, line: 167, type: !24)
!9189 = distinct !DILexicalBlock(scope: !9183, file: !978, line: 167, column: 9)
!9190 = !DILocalVariable(name: "has_next", scope: !9189, file: !978, line: 167, type: !422)
!9191 = !DILocalVariable(name: "idx", scope: !9192, file: !978, line: 181, type: !24)
!9192 = distinct !DILexicalBlock(scope: !9193, file: !978, line: 181, column: 9)
!9193 = distinct !DILexicalBlock(scope: !9162, file: !978, line: 179, column: 22)
!9194 = !DILocalVariable(name: "has_next", scope: !9192, file: !978, line: 181, type: !422)
!9195 = !DILocation(line: 0, scope: !9162)
!9196 = !DILocation(line: 122, column: 2, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9198, file: !978, line: 122, column: 2)
!9198 = distinct !DILexicalBlock(scope: !9199, file: !978, line: 122, column: 2)
!9199 = distinct !DILexicalBlock(scope: !9200, file: !978, line: 122, column: 2)
!9200 = distinct !DILexicalBlock(scope: !9162, file: !978, line: 122, column: 2)
!9201 = !DILocation(line: 125, column: 41, scope: !9162)
!9202 = !DILocalVariable(name: "l", arg: 1, scope: !9203, file: !436, line: 136, type: !9206)
!9203 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !9204, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !9207)
!9204 = !DISubroutineType(types: !9205)
!9205 = !{!9169, !9206}
!9206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 32)
!9207 = !{!9202, !9208}
!9208 = !DILocalVariable(name: "k", scope: !9203, file: !436, line: 139, type: !9169)
!9209 = !DILocation(line: 0, scope: !9203, inlinedAt: !9210)
!9210 = distinct !DILocation(line: 130, column: 8, scope: !9162)
!9211 = !DILocation(line: 55, column: 2, scope: !9212, inlinedAt: !9216)
!9212 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4109, file: !4109, line: 42, type: !4110, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !9213)
!9213 = !{!9214, !9215}
!9214 = !DILocalVariable(name: "key", scope: !9212, file: !4109, line: 44, type: !32)
!9215 = !DILocalVariable(name: "tmp", scope: !9212, file: !4109, line: 53, type: !32)
!9216 = distinct !DILocation(line: 145, column: 10, scope: !9203, inlinedAt: !9210)
!9217 = !{i64 1786430}
!9218 = !DILocation(line: 0, scope: !9212, inlinedAt: !9216)
!9219 = !DILocation(line: 136, column: 11, scope: !9176)
!9220 = !DILocation(line: 136, column: 20, scope: !9176)
!9221 = !DILocation(line: 0, scope: !9176)
!9222 = !DILocation(line: 136, column: 6, scope: !9162)
!9223 = !DILocation(line: 137, column: 9, scope: !9174)
!9224 = !DILocation(line: 0, scope: !9174)
!9225 = !DILocation(line: 140, column: 9, scope: !9179)
!9226 = !DILocation(line: 0, scope: !9179)
!9227 = !DILocation(line: 173, column: 7, scope: !9162)
!9228 = !DILocation(line: 173, column: 19, scope: !9162)
!9229 = !DILocation(line: 179, column: 2, scope: !9162)
!9230 = !DILocation(line: 144, column: 24, scope: !9162)
!9231 = !DILocation(line: 144, column: 2, scope: !9162)
!9232 = !DILocation(line: 145, column: 3, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9234, file: !978, line: 145, column: 3)
!9234 = distinct !DILexicalBlock(scope: !9235, file: !978, line: 145, column: 3)
!9235 = distinct !DILexicalBlock(scope: !9236, file: !978, line: 145, column: 3)
!9236 = distinct !DILexicalBlock(scope: !9183, file: !978, line: 145, column: 3)
!9237 = !DILocation(line: 148, column: 23, scope: !9183)
!9238 = !DILocation(line: 0, scope: !9183)
!9239 = !DILocation(line: 150, column: 3, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9241, file: !978, line: 150, column: 3)
!9241 = distinct !DILexicalBlock(scope: !9242, file: !978, line: 150, column: 3)
!9242 = distinct !DILexicalBlock(scope: !9243, file: !978, line: 150, column: 3)
!9243 = distinct !DILexicalBlock(scope: !9183, file: !978, line: 150, column: 3)
!9244 = !DILocation(line: 153, column: 8, scope: !9183)
!9245 = !DILocation(line: 153, column: 3, scope: !9183)
!9246 = !DILocation(line: 153, column: 27, scope: !9183)
!9247 = !DILocation(line: 154, column: 8, scope: !9183)
!9248 = !DILocation(line: 154, column: 3, scope: !9183)
!9249 = !DILocation(line: 154, column: 30, scope: !9183)
!9250 = !DILocation(line: 156, column: 3, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9252, file: !978, line: 156, column: 3)
!9252 = distinct !DILexicalBlock(scope: !9253, file: !978, line: 156, column: 3)
!9253 = distinct !DILexicalBlock(scope: !9254, file: !978, line: 156, column: 3)
!9254 = distinct !DILexicalBlock(scope: !9183, file: !978, line: 156, column: 3)
!9255 = !DILocation(line: 158, column: 22, scope: !9183)
!9256 = !DILocation(line: 158, column: 31, scope: !9183)
!9257 = !DILocation(line: 158, column: 37, scope: !9183)
!9258 = !DILocation(line: 158, column: 3, scope: !9183)
!9259 = !DILocation(line: 159, column: 10, scope: !9185)
!9260 = !DILocation(line: 0, scope: !9185)
!9261 = !DILocation(line: 162, column: 3, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9263, file: !978, line: 162, column: 3)
!9263 = distinct !DILexicalBlock(scope: !9264, file: !978, line: 162, column: 3)
!9264 = distinct !DILexicalBlock(scope: !9265, file: !978, line: 162, column: 3)
!9265 = distinct !DILexicalBlock(scope: !9183, file: !978, line: 162, column: 3)
!9266 = !DILocation(line: 167, column: 9, scope: !9189)
!9267 = !DILocation(line: 0, scope: !9189)
!9268 = !DILocation(line: 144, column: 21, scope: !9162)
!9269 = !DILocation(line: 179, column: 13, scope: !9162)
!9270 = !DILocation(line: 181, column: 9, scope: !9192)
!9271 = !DILocation(line: 0, scope: !9192)
!9272 = !DILocation(line: 185, column: 16, scope: !9162)
!9273 = !DILocation(line: 188, column: 2, scope: !9162)
!9274 = !DILocalVariable(name: "key", arg: 2, scope: !9275, file: !436, line: 190, type: !9169)
!9275 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !9276, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !9278)
!9276 = !DISubroutineType(types: !9277)
!9277 = !{null, !9206, !9169}
!9278 = !{!9279, !9274}
!9279 = !DILocalVariable(name: "l", arg: 1, scope: !9275, file: !436, line: 189, type: !9206)
!9280 = !DILocation(line: 0, scope: !9275, inlinedAt: !9281)
!9281 = distinct !DILocation(line: 190, column: 2, scope: !9162)
!9282 = !DILocalVariable(name: "key", arg: 1, scope: !9283, file: !4109, line: 84, type: !32)
!9283 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4109, file: !4109, line: 84, type: !4122, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !9284)
!9284 = !{!9282}
!9285 = !DILocation(line: 0, scope: !9283, inlinedAt: !9286)
!9286 = distinct !DILocation(line: 215, column: 2, scope: !9275, inlinedAt: !9281)
!9287 = !DILocation(line: 95, column: 2, scope: !9283, inlinedAt: !9286)
!9288 = !{i64 1787247}
!9289 = !DILocation(line: 192, column: 2, scope: !9162)
!9290 = distinct !DISubprogram(name: "atomic_get", scope: !3730, file: !3730, line: 159, type: !3731, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !9291)
!9291 = !{!9292}
!9292 = !DILocalVariable(name: "target", arg: 1, scope: !9290, file: !3730, line: 159, type: !3734)
!9293 = !DILocation(line: 0, scope: !9290)
!9294 = !DILocation(line: 161, column: 9, scope: !9290)
!9295 = !DILocation(line: 161, column: 2, scope: !9290)
!9296 = distinct !DISubprogram(name: "conex_task_free", scope: !978, file: !978, line: 39, type: !9297, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !9299)
!9297 = !DISubroutineType(types: !9298)
!9298 = !{!422, !872}
!9299 = !{!9300}
!9300 = !DILocalVariable(name: "exc", arg: 1, scope: !9296, file: !978, line: 39, type: !872)
!9301 = !DILocation(line: 0, scope: !9296)
!9302 = !DILocation(line: 41, column: 15, scope: !9296)
!9303 = !DILocation(line: 41, column: 10, scope: !9296)
!9304 = !DILocation(line: 41, column: 30, scope: !9296)
!9305 = !DILocation(line: 41, column: 25, scope: !9296)
!9306 = !DILocation(line: 41, column: 23, scope: !9296)
!9307 = !DILocation(line: 41, column: 48, scope: !9296)
!9308 = !DILocation(line: 41, column: 43, scope: !9296)
!9309 = !DILocation(line: 41, column: 40, scope: !9296)
!9310 = !DILocation(line: 41, column: 2, scope: !9296)
!9311 = distinct !DISubprogram(name: "conex_task_next", scope: !978, file: !978, line: 47, type: !9312, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !9314)
!9312 = !DISubroutineType(types: !9313)
!9313 = !{!168, !872}
!9314 = !{!9315, !9316}
!9315 = !DILocalVariable(name: "exc", arg: 1, scope: !9311, file: !978, line: 47, type: !872)
!9316 = !DILocalVariable(name: "task_id", scope: !9311, file: !978, line: 49, type: !168)
!9317 = !DILocation(line: 0, scope: !9311)
!9318 = !DILocation(line: 49, column: 26, scope: !9311)
!9319 = !DILocation(line: 51, column: 14, scope: !9311)
!9320 = !DILocation(line: 52, column: 2, scope: !9311)
!9321 = distinct !DISubprogram(name: "conex_resume", scope: !978, file: !978, line: 94, type: !9322, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !9324)
!9322 = !DISubroutineType(types: !9323)
!9323 = !{null, !888, !872}
!9324 = !{!9325, !9326, !9327}
!9325 = !DILocalVariable(name: "r", arg: 1, scope: !9321, file: !978, line: 94, type: !888)
!9326 = !DILocalVariable(name: "exc", arg: 2, scope: !9321, file: !978, line: 94, type: !872)
!9327 = !DILocalVariable(name: "task_id", scope: !9328, file: !978, line: 97, type: !168)
!9328 = distinct !DILexicalBlock(scope: !9321, file: !978, line: 97, column: 2)
!9329 = !DILocation(line: 0, scope: !9321)
!9330 = !DILocation(line: 97, column: 31, scope: !9328)
!9331 = !DILocation(line: 0, scope: !9328)
!9332 = !DILocation(line: 97, column: 56, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9328, file: !978, line: 97, column: 2)
!9334 = !DILocation(line: 97, column: 49, scope: !9333)
!9335 = !DILocation(line: 97, column: 2, scope: !9328)
!9336 = !DILocation(line: 104, column: 1, scope: !9321)
!9337 = !DILocation(line: 98, column: 12, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9339, file: !978, line: 98, column: 7)
!9339 = distinct !DILexicalBlock(scope: !9333, file: !978, line: 97, column: 76)
!9340 = !DILocation(line: 98, column: 39, scope: !9338)
!9341 = !DILocation(line: 98, column: 32, scope: !9338)
!9342 = !DILocation(line: 98, column: 7, scope: !9338)
!9343 = !DILocation(line: 98, column: 50, scope: !9338)
!9344 = !DILocation(line: 98, column: 7, scope: !9339)
!9345 = !DILocation(line: 99, column: 4, scope: !9346)
!9346 = distinct !DILexicalBlock(scope: !9347, file: !978, line: 99, column: 4)
!9347 = distinct !DILexicalBlock(scope: !9348, file: !978, line: 99, column: 4)
!9348 = distinct !DILexicalBlock(scope: !9349, file: !978, line: 99, column: 4)
!9349 = distinct !DILexicalBlock(scope: !9350, file: !978, line: 99, column: 4)
!9350 = distinct !DILexicalBlock(scope: !9338, file: !978, line: 98, column: 74)
!9351 = !DILocation(line: 100, column: 9, scope: !9350)
!9352 = !DILocation(line: 100, column: 4, scope: !9350)
!9353 = !DILocation(line: 100, column: 30, scope: !9350)
!9354 = !DILocation(line: 101, column: 27, scope: !9350)
!9355 = !DILocation(line: 101, column: 22, scope: !9350)
!9356 = !DILocation(line: 101, column: 4, scope: !9350)
!9357 = !DILocation(line: 102, column: 3, scope: !9350)
!9358 = !DILocation(line: 97, column: 72, scope: !9333)
!9359 = distinct !{!9359, !9335, !9360}
!9360 = !DILocation(line: 103, column: 2, scope: !9328)
!9361 = distinct !DISubprogram(name: "rtio_iodev_submit", scope: !125, file: !125, line: 457, type: !925, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !9362)
!9362 = !{!9363, !9364}
!9363 = !DILocalVariable(name: "sqe", arg: 1, scope: !9361, file: !125, line: 457, type: !927)
!9364 = !DILocalVariable(name: "r", arg: 2, scope: !9361, file: !125, line: 457, type: !888)
!9365 = !DILocation(line: 0, scope: !9361)
!9366 = !DILocation(line: 459, column: 7, scope: !9361)
!9367 = !DILocation(line: 459, column: 14, scope: !9361)
!9368 = !DILocation(line: 459, column: 19, scope: !9361)
!9369 = !DILocation(line: 459, column: 2, scope: !9361)
!9370 = !DILocation(line: 460, column: 1, scope: !9361)
!9371 = distinct !DISubprogram(name: "rtio_concurrent_ok", scope: !978, file: !978, line: 198, type: !963, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !9372)
!9372 = !{!9373, !9374, !9375, !9376, !9377, !9378, !9379, !9380, !9384}
!9373 = !DILocalVariable(name: "r", arg: 1, scope: !9371, file: !978, line: 198, type: !888)
!9374 = !DILocalVariable(name: "sqe", arg: 2, scope: !9371, file: !978, line: 198, type: !927)
!9375 = !DILocalVariable(name: "result", arg: 3, scope: !9371, file: !978, line: 198, type: !108)
!9376 = !DILocalVariable(name: "next_sqe", scope: !9371, file: !978, line: 200, type: !972)
!9377 = !DILocalVariable(name: "key", scope: !9371, file: !978, line: 201, type: !9169)
!9378 = !DILocalVariable(name: "exc", scope: !9371, file: !978, line: 202, type: !872)
!9379 = !DILocalVariable(name: "task_id", scope: !9371, file: !978, line: 216, type: !168)
!9380 = !DILocalVariable(name: "idx", scope: !9381, file: !978, line: 219, type: !24)
!9381 = distinct !DILexicalBlock(scope: !9382, file: !978, line: 219, column: 14)
!9382 = distinct !DILexicalBlock(scope: !9383, file: !978, line: 218, column: 37)
!9383 = distinct !DILexicalBlock(scope: !9371, file: !978, line: 218, column: 6)
!9384 = !DILocalVariable(name: "has_next", scope: !9381, file: !978, line: 219, type: !422)
!9385 = !DILocation(line: 0, scope: !9371)
!9386 = !DILocation(line: 202, column: 79, scope: !9371)
!9387 = !DILocation(line: 0, scope: !9203, inlinedAt: !9388)
!9388 = distinct !DILocation(line: 211, column: 8, scope: !9371)
!9389 = !DILocation(line: 55, column: 2, scope: !9212, inlinedAt: !9390)
!9390 = distinct !DILocation(line: 145, column: 10, scope: !9203, inlinedAt: !9388)
!9391 = !DILocation(line: 0, scope: !9212, inlinedAt: !9390)
!9392 = !DILocation(line: 213, column: 34, scope: !9371)
!9393 = !DILocation(line: 213, column: 2, scope: !9371)
!9394 = !DILocation(line: 216, column: 21, scope: !9371)
!9395 = !DILocation(line: 218, column: 11, scope: !9383)
!9396 = !DILocation(line: 218, column: 17, scope: !9383)
!9397 = !DILocation(line: 218, column: 6, scope: !9371)
!9398 = !DILocation(line: 219, column: 14, scope: !9381)
!9399 = !DILocation(line: 0, scope: !9381)
!9400 = !DILocation(line: 221, column: 3, scope: !9382)
!9401 = !DILocation(line: 223, column: 8, scope: !9382)
!9402 = !DILocation(line: 223, column: 3, scope: !9382)
!9403 = !DILocation(line: 223, column: 26, scope: !9382)
!9404 = !DILocation(line: 224, column: 2, scope: !9382)
!9405 = !DILocation(line: 225, column: 8, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9383, file: !978, line: 224, column: 9)
!9407 = !DILocation(line: 225, column: 3, scope: !9406)
!9408 = !DILocation(line: 225, column: 30, scope: !9406)
!9409 = !DILocation(line: 233, column: 2, scope: !9371)
!9410 = !DILocation(line: 0, scope: !9275, inlinedAt: !9411)
!9411 = distinct !DILocation(line: 235, column: 2, scope: !9371)
!9412 = !DILocation(line: 0, scope: !9283, inlinedAt: !9413)
!9413 = distinct !DILocation(line: 215, column: 2, scope: !9275, inlinedAt: !9411)
!9414 = !DILocation(line: 95, column: 2, scope: !9283, inlinedAt: !9413)
!9415 = !DILocation(line: 236, column: 1, scope: !9371)
!9416 = distinct !DISubprogram(name: "rtio_cqe_submit", scope: !125, file: !125, line: 607, type: !9417, scopeLine: 608, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !9419)
!9417 = !DISubroutineType(types: !9418)
!9418 = !{null, !888, !108, !104}
!9419 = !{!9420, !9421, !9422, !9423, !9425, !9427}
!9420 = !DILocalVariable(name: "r", arg: 1, scope: !9416, file: !125, line: 607, type: !888)
!9421 = !DILocalVariable(name: "result", arg: 2, scope: !9416, file: !125, line: 607, type: !108)
!9422 = !DILocalVariable(name: "userdata", arg: 3, scope: !9416, file: !125, line: 607, type: !104)
!9423 = !DILocalVariable(name: "cqe", scope: !9416, file: !125, line: 609, type: !9424)
!9424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 32)
!9425 = !DILocalVariable(name: "idx", scope: !9426, file: !125, line: 609, type: !24)
!9426 = distinct !DILexicalBlock(scope: !9416, file: !125, line: 609, column: 25)
!9427 = !DILocalVariable(name: "acq", scope: !9426, file: !125, line: 609, type: !422)
!9428 = !DILocation(line: 0, scope: !9416)
!9429 = !DILocation(line: 609, column: 25, scope: !9426)
!9430 = !DILocation(line: 0, scope: !9426)
!9431 = !DILocation(line: 612, column: 18, scope: !9432)
!9432 = distinct !DILexicalBlock(scope: !9433, file: !125, line: 611, column: 19)
!9433 = distinct !DILexicalBlock(scope: !9416, file: !125, line: 611, column: 6)
!9434 = !DILocation(line: 612, column: 3, scope: !9432)
!9435 = !DILocation(line: 613, column: 2, scope: !9432)
!9436 = !DILocation(line: 609, column: 25, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9438, file: !125, line: 609, column: 25)
!9438 = distinct !DILexicalBlock(scope: !9426, file: !125, line: 609, column: 25)
!9439 = !DILocation(line: 614, column: 8, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9433, file: !125, line: 613, column: 9)
!9441 = !DILocation(line: 614, column: 15, scope: !9440)
!9442 = !DILocation(line: 615, column: 8, scope: !9440)
!9443 = !DILocation(line: 615, column: 17, scope: !9440)
!9444 = !DILocation(line: 616, column: 3, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9446, file: !125, line: 616, column: 3)
!9446 = distinct !DILexicalBlock(scope: !9440, file: !125, line: 616, column: 3)
!9447 = !DILocation(line: 616, column: 3, scope: !9446)
!9448 = !DILocation(line: 616, column: 3, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9445, file: !125, line: 616, column: 3)
!9450 = !DILocation(line: 629, column: 1, scope: !9416)
!9451 = distinct !DISubprogram(name: "conex_task_id", scope: !978, file: !978, line: 55, type: !9452, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !9454)
!9452 = !DISubroutineType(types: !9453)
!9453 = !{!168, !872, !927}
!9454 = !{!9455, !9456, !9457}
!9455 = !DILocalVariable(name: "exc", arg: 1, scope: !9451, file: !978, line: 55, type: !872)
!9456 = !DILocalVariable(name: "sqe", arg: 2, scope: !9451, file: !978, line: 56, type: !927)
!9457 = !DILocalVariable(name: "task_id", scope: !9451, file: !978, line: 58, type: !168)
!9458 = !DILocation(line: 0, scope: !9451)
!9459 = !DILocation(line: 58, column: 26, scope: !9451)
!9460 = !DILocation(line: 60, column: 17, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9462, file: !978, line: 60, column: 2)
!9462 = distinct !DILexicalBlock(scope: !9451, file: !978, line: 60, column: 2)
!9463 = !DILocation(line: 60, column: 2, scope: !9462)
!9464 = !DILocation(line: 61, column: 12, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9466, file: !978, line: 61, column: 7)
!9466 = distinct !DILexicalBlock(scope: !9461, file: !978, line: 60, column: 44)
!9467 = !DILocation(line: 61, column: 29, scope: !9465)
!9468 = !DILocation(line: 61, column: 7, scope: !9465)
!9469 = !DILocation(line: 61, column: 47, scope: !9465)
!9470 = !DILocation(line: 61, column: 7, scope: !9466)
!9471 = !DILocation(line: 60, column: 40, scope: !9461)
!9472 = distinct !{!9472, !9463, !9473}
!9473 = !DILocation(line: 64, column: 2, scope: !9462)
!9474 = !DILocation(line: 65, column: 2, scope: !9451)
!9475 = distinct !DISubprogram(name: "conex_sweep_resume", scope: !978, file: !978, line: 106, type: !9322, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !9476)
!9476 = !{!9477, !9478}
!9477 = !DILocalVariable(name: "r", arg: 1, scope: !9475, file: !978, line: 106, type: !888)
!9478 = !DILocalVariable(name: "exc", arg: 2, scope: !9475, file: !978, line: 106, type: !872)
!9479 = !DILocation(line: 0, scope: !9475)
!9480 = !DILocation(line: 108, column: 2, scope: !9475)
!9481 = !DILocation(line: 109, column: 2, scope: !9475)
!9482 = !DILocation(line: 110, column: 1, scope: !9475)
!9483 = distinct !DISubprogram(name: "conex_sweep", scope: !978, file: !978, line: 80, type: !9322, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !9484)
!9484 = !{!9485, !9486, !9487}
!9485 = !DILocalVariable(name: "r", arg: 1, scope: !9483, file: !978, line: 80, type: !888)
!9486 = !DILocalVariable(name: "exc", arg: 2, scope: !9483, file: !978, line: 80, type: !872)
!9487 = !DILocalVariable(name: "task_id", scope: !9488, file: !978, line: 83, type: !168)
!9488 = distinct !DILexicalBlock(scope: !9483, file: !978, line: 83, column: 2)
!9489 = !DILocation(line: 0, scope: !9483)
!9490 = !DILocation(line: 83, column: 31, scope: !9488)
!9491 = !DILocation(line: 0, scope: !9488)
!9492 = !DILocation(line: 84, column: 12, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9494, file: !978, line: 84, column: 7)
!9494 = distinct !DILexicalBlock(scope: !9495, file: !978, line: 83, column: 76)
!9495 = distinct !DILexicalBlock(scope: !9488, file: !978, line: 83, column: 2)
!9496 = !DILocation(line: 83, column: 56, scope: !9495)
!9497 = !DILocation(line: 83, column: 49, scope: !9495)
!9498 = !DILocation(line: 83, column: 2, scope: !9488)
!9499 = !DILocation(line: 84, column: 39, scope: !9493)
!9500 = !DILocation(line: 84, column: 32, scope: !9493)
!9501 = !DILocation(line: 84, column: 7, scope: !9493)
!9502 = !DILocation(line: 84, column: 50, scope: !9493)
!9503 = !DILocation(line: 84, column: 7, scope: !9494)
!9504 = !DILocation(line: 85, column: 4, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9506, file: !978, line: 85, column: 4)
!9506 = distinct !DILexicalBlock(scope: !9507, file: !978, line: 85, column: 4)
!9507 = distinct !DILexicalBlock(scope: !9508, file: !978, line: 85, column: 4)
!9508 = distinct !DILexicalBlock(scope: !9509, file: !978, line: 85, column: 4)
!9509 = distinct !DILexicalBlock(scope: !9493, file: !978, line: 84, column: 73)
!9510 = !DILocation(line: 86, column: 4, scope: !9509)
!9511 = !DILocation(line: 87, column: 17, scope: !9509)
!9512 = !DILocation(line: 83, column: 72, scope: !9495)
!9513 = distinct !{!9513, !9498, !9514}
!9514 = !DILocation(line: 91, column: 2, scope: !9488)
!9515 = !DILocation(line: 92, column: 1, scope: !9483)
!9516 = distinct !DISubprogram(name: "conex_sweep_task", scope: !978, file: !978, line: 68, type: !9322, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !9517)
!9517 = !{!9518, !9519, !9520, !9521, !9523, !9524, !9527}
!9518 = !DILocalVariable(name: "r", arg: 1, scope: !9516, file: !978, line: 68, type: !888)
!9519 = !DILocalVariable(name: "exc", arg: 2, scope: !9516, file: !978, line: 68, type: !872)
!9520 = !DILocalVariable(name: "sqe", scope: !9516, file: !978, line: 70, type: !972)
!9521 = !DILocalVariable(name: "idx", scope: !9522, file: !978, line: 70, type: !24)
!9522 = distinct !DILexicalBlock(scope: !9516, file: !978, line: 70, column: 25)
!9523 = !DILocalVariable(name: "has_consumable", scope: !9522, file: !978, line: 70, type: !422)
!9524 = !DILocalVariable(name: "idx", scope: !9525, file: !978, line: 74, type: !24)
!9525 = distinct !DILexicalBlock(scope: !9526, file: !978, line: 74, column: 9)
!9526 = distinct !DILexicalBlock(scope: !9516, file: !978, line: 72, column: 55)
!9527 = !DILocalVariable(name: "has_consumable", scope: !9525, file: !978, line: 74, type: !422)
!9528 = !DILocation(line: 0, scope: !9516)
!9529 = !DILocation(line: 70, column: 25, scope: !9522)
!9530 = !DILocation(line: 0, scope: !9522)
!9531 = !DILocation(line: 72, column: 29, scope: !9516)
!9532 = !DILocation(line: 72, column: 35, scope: !9516)
!9533 = !DILocation(line: 72, column: 21, scope: !9516)
!9534 = !DILocation(line: 72, column: 2, scope: !9516)
!9535 = !DILocation(line: 73, column: 3, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9537, file: !978, line: 73, column: 3)
!9537 = distinct !DILexicalBlock(scope: !9526, file: !978, line: 73, column: 3)
!9538 = !DILocation(line: 73, column: 3, scope: !9537)
!9539 = !DILocation(line: 73, column: 3, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9536, file: !978, line: 73, column: 3)
!9541 = !DILocation(line: 74, column: 9, scope: !9525)
!9542 = !DILocation(line: 0, scope: !9525)
!9543 = !DILocation(line: 77, column: 2, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9545, file: !978, line: 77, column: 2)
!9545 = distinct !DILexicalBlock(scope: !9516, file: !978, line: 77, column: 2)
!9546 = !DILocation(line: 77, column: 2, scope: !9545)
!9547 = !DILocation(line: 77, column: 2, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9544, file: !978, line: 77, column: 2)
!9549 = !DILocation(line: 78, column: 1, scope: !9516)
!9550 = distinct !DISubprogram(name: "atomic_add", scope: !3730, file: !3730, line: 86, type: !3766, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !9551)
!9551 = !{!9552, !9553}
!9552 = !DILocalVariable(name: "target", arg: 1, scope: !9550, file: !3730, line: 86, type: !3768)
!9553 = !DILocalVariable(name: "value", arg: 2, scope: !9550, file: !3730, line: 86, type: !3733)
!9554 = !DILocation(line: 0, scope: !9550)
!9555 = !DILocation(line: 88, column: 9, scope: !9550)
!9556 = !DILocation(line: 88, column: 2, scope: !9550)
!9557 = distinct !DISubprogram(name: "atomic_inc", scope: !3730, file: !3730, line: 123, type: !9100, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !9558)
!9558 = !{!9559}
!9559 = !DILocalVariable(name: "target", arg: 1, scope: !9557, file: !3730, line: 123, type: !3768)
!9560 = !DILocation(line: 0, scope: !9557)
!9561 = !DILocation(line: 125, column: 9, scope: !9557)
!9562 = !DILocation(line: 125, column: 2, scope: !9557)
!9563 = distinct !DISubprogram(name: "rtio_concurrent_err", scope: !978, file: !978, line: 241, type: !963, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !9564)
!9564 = !{!9565, !9566, !9567, !9568, !9569, !9570, !9571, !9572, !9576, !9577, !9580}
!9565 = !DILocalVariable(name: "r", arg: 1, scope: !9563, file: !978, line: 241, type: !888)
!9566 = !DILocalVariable(name: "sqe", arg: 2, scope: !9563, file: !978, line: 241, type: !927)
!9567 = !DILocalVariable(name: "result", arg: 3, scope: !9563, file: !978, line: 241, type: !108)
!9568 = !DILocalVariable(name: "nsqe", scope: !9563, file: !978, line: 243, type: !972)
!9569 = !DILocalVariable(name: "key", scope: !9563, file: !978, line: 244, type: !9169)
!9570 = !DILocalVariable(name: "exc", scope: !9563, file: !978, line: 245, type: !872)
!9571 = !DILocalVariable(name: "task_id", scope: !9563, file: !978, line: 260, type: !168)
!9572 = !DILocalVariable(name: "idx", scope: !9573, file: !978, line: 265, type: !24)
!9573 = distinct !DILexicalBlock(scope: !9574, file: !978, line: 265, column: 10)
!9574 = distinct !DILexicalBlock(scope: !9575, file: !978, line: 264, column: 37)
!9575 = distinct !DILexicalBlock(scope: !9563, file: !978, line: 264, column: 6)
!9576 = !DILocalVariable(name: "has_next", scope: !9573, file: !978, line: 265, type: !422)
!9577 = !DILocalVariable(name: "idx", scope: !9578, file: !978, line: 268, type: !24)
!9578 = distinct !DILexicalBlock(scope: !9579, file: !978, line: 268, column: 11)
!9579 = distinct !DILexicalBlock(scope: !9574, file: !978, line: 266, column: 58)
!9580 = !DILocalVariable(name: "has_next", scope: !9578, file: !978, line: 268, type: !422)
!9581 = !DILocation(line: 0, scope: !9563)
!9582 = !DILocation(line: 245, column: 79, scope: !9563)
!9583 = !DILocation(line: 0, scope: !9203, inlinedAt: !9584)
!9584 = distinct !DILocation(line: 255, column: 8, scope: !9563)
!9585 = !DILocation(line: 55, column: 2, scope: !9212, inlinedAt: !9586)
!9586 = distinct !DILocation(line: 145, column: 10, scope: !9203, inlinedAt: !9584)
!9587 = !DILocation(line: 0, scope: !9212, inlinedAt: !9586)
!9588 = !DILocation(line: 257, column: 34, scope: !9563)
!9589 = !DILocation(line: 257, column: 2, scope: !9563)
!9590 = !DILocation(line: 260, column: 21, scope: !9563)
!9591 = !DILocation(line: 264, column: 11, scope: !9575)
!9592 = !DILocation(line: 264, column: 17, scope: !9575)
!9593 = !DILocation(line: 264, column: 6, scope: !9563)
!9594 = !DILocation(line: 265, column: 10, scope: !9573)
!9595 = !DILocation(line: 0, scope: !9573)
!9596 = !DILocation(line: 266, column: 23, scope: !9574)
!9597 = !DILocation(line: 266, column: 3, scope: !9574)
!9598 = !DILocation(line: 266, column: 32, scope: !9574)
!9599 = !DILocation(line: 266, column: 38, scope: !9574)
!9600 = !DILocation(line: 267, column: 41, scope: !9579)
!9601 = !DILocation(line: 267, column: 4, scope: !9579)
!9602 = !DILocation(line: 268, column: 11, scope: !9578)
!9603 = !DILocation(line: 0, scope: !9578)
!9604 = !DILocation(line: 273, column: 7, scope: !9563)
!9605 = !DILocation(line: 273, column: 2, scope: !9563)
!9606 = !DILocation(line: 273, column: 28, scope: !9563)
!9607 = !DILocation(line: 275, column: 2, scope: !9563)
!9608 = !DILocation(line: 0, scope: !9275, inlinedAt: !9609)
!9609 = distinct !DILocation(line: 277, column: 2, scope: !9563)
!9610 = !DILocation(line: 0, scope: !9283, inlinedAt: !9611)
!9611 = distinct !DILocation(line: 215, column: 2, scope: !9275, inlinedAt: !9609)
!9612 = !DILocation(line: 95, column: 2, scope: !9283, inlinedAt: !9611)
!9613 = !DILocation(line: 278, column: 1, scope: !9563)
!9614 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !1069, file: !1069, line: 368, type: !1119, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9615)
!9615 = !{!9616}
!9616 = !DILocalVariable(name: "dev", arg: 1, scope: !9614, file: !1069, line: 368, type: !1095)
!9617 = !DILocation(line: 0, scope: !9614)
!9618 = !DILocation(line: 370, column: 2, scope: !9614)
!9619 = !DILocation(line: 371, column: 1, scope: !9614)
!9620 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !1069, file: !1069, line: 243, type: !9621, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9623)
!9621 = !DISubroutineType(types: !9622)
!9622 = !{null, !108, !108, !1095}
!9623 = !{!9624, !9625, !9626, !9627, !9629}
!9624 = !DILocalVariable(name: "min", arg: 1, scope: !9620, file: !1069, line: 243, type: !108)
!9625 = !DILocalVariable(name: "max", arg: 2, scope: !9620, file: !1069, line: 243, type: !108)
!9626 = !DILocalVariable(name: "dev", arg: 3, scope: !9620, file: !1069, line: 243, type: !1095)
!9627 = !DILocalVariable(name: "data", scope: !9620, file: !1069, line: 245, type: !9628)
!9628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 32)
!9629 = !DILocalVariable(name: "line", scope: !9620, file: !1069, line: 246, type: !108)
!9630 = !DILocation(line: 0, scope: !9620)
!9631 = !DILocation(line: 245, column: 38, scope: !9620)
!9632 = !DILocation(line: 249, column: 24, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9634, file: !1069, line: 249, column: 2)
!9634 = distinct !DILexicalBlock(scope: !9620, file: !1069, line: 249, column: 2)
!9635 = !DILocation(line: 249, column: 2, scope: !9634)
!9636 = !DILocation(line: 251, column: 7, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9638, file: !1069, line: 251, column: 7)
!9638 = distinct !DILexicalBlock(scope: !9633, file: !1069, line: 249, column: 39)
!9639 = !DILocation(line: 251, column: 7, scope: !9638)
!9640 = !DILocation(line: 253, column: 4, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9637, file: !1069, line: 251, column: 36)
!9642 = !DILocation(line: 256, column: 24, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9641, file: !1069, line: 256, column: 8)
!9644 = !DILocation(line: 256, column: 9, scope: !9643)
!9645 = !DILocation(line: 256, column: 8, scope: !9641)
!9646 = !DILocation(line: 260, column: 43, scope: !9641)
!9647 = !DILocation(line: 260, column: 4, scope: !9641)
!9648 = !DILocation(line: 261, column: 3, scope: !9641)
!9649 = !DILocation(line: 249, column: 35, scope: !9633)
!9650 = distinct !{!9650, !9635, !9651}
!9651 = !DILocation(line: 262, column: 2, scope: !9634)
!9652 = !DILocation(line: 263, column: 1, scope: !9620)
!9653 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !1069, file: !1069, line: 158, type: !561, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9654)
!9654 = !{!9655}
!9655 = !DILocalVariable(name: "line", arg: 1, scope: !9653, file: !1069, line: 158, type: !108)
!9656 = !DILocation(line: 0, scope: !9653)
!9657 = !DILocation(line: 170, column: 38, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9659, file: !1069, line: 160, column: 17)
!9659 = distinct !DILexicalBlock(scope: !9653, file: !1069, line: 160, column: 6)
!9660 = !DILocation(line: 170, column: 10, scope: !9658)
!9661 = !DILocation(line: 176, column: 1, scope: !9653)
!9662 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !1069, file: !1069, line: 183, type: !9663, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9665)
!9663 = !DISubroutineType(types: !9664)
!9664 = !{null, !108}
!9665 = !{!9666}
!9666 = !DILocalVariable(name: "line", arg: 1, scope: !9662, file: !1069, line: 183, type: !108)
!9667 = !DILocation(line: 0, scope: !9662)
!9668 = !DILocation(line: 195, column: 28, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9670, file: !1069, line: 185, column: 17)
!9670 = distinct !DILexicalBlock(scope: !9662, file: !1069, line: 185, column: 6)
!9671 = !DILocation(line: 195, column: 3, scope: !9669)
!9672 = !DILocation(line: 200, column: 1, scope: !9662)
!9673 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9674, file: !9674, line: 910, type: !7174, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9675)
!9674 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9675 = !{!9676}
!9676 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9673, file: !9674, line: 910, type: !113)
!9677 = !DILocation(line: 0, scope: !9673)
!9678 = !DILocation(line: 912, column: 3, scope: !9673)
!9679 = !DILocation(line: 913, column: 1, scope: !9673)
!9680 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9674, file: !9674, line: 834, type: !8329, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9681)
!9681 = !{!9682}
!9682 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9680, file: !9674, line: 834, type: !113)
!9683 = !DILocation(line: 0, scope: !9680)
!9684 = !DILocation(line: 836, column: 11, scope: !9680)
!9685 = !DILocation(line: 836, column: 40, scope: !9680)
!9686 = !DILocation(line: 836, column: 3, scope: !9680)
!9687 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !1069, file: !1069, line: 304, type: !1119, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9688)
!9688 = !{!9689}
!9689 = !DILocalVariable(name: "dev", arg: 1, scope: !9687, file: !1069, line: 304, type: !1095)
!9690 = !DILocation(line: 0, scope: !9687)
!9691 = !DILocation(line: 306, column: 2, scope: !9687)
!9692 = !DILocation(line: 307, column: 1, scope: !9687)
!9693 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !1069, file: !1069, line: 299, type: !1119, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9694)
!9694 = !{!9695}
!9695 = !DILocalVariable(name: "dev", arg: 1, scope: !9693, file: !1069, line: 299, type: !1095)
!9696 = !DILocation(line: 0, scope: !9693)
!9697 = !DILocation(line: 301, column: 2, scope: !9693)
!9698 = !DILocation(line: 302, column: 1, scope: !9693)
!9699 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !1069, file: !1069, line: 294, type: !1119, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9700)
!9700 = !{!9701}
!9701 = !DILocalVariable(name: "dev", arg: 1, scope: !9699, file: !1069, line: 294, type: !1095)
!9702 = !DILocation(line: 0, scope: !9699)
!9703 = !DILocation(line: 296, column: 2, scope: !9699)
!9704 = !DILocation(line: 297, column: 1, scope: !9699)
!9705 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !1069, file: !1069, line: 397, type: !1119, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9706)
!9706 = !{!9707}
!9707 = !DILocalVariable(name: "dev", arg: 1, scope: !9705, file: !1069, line: 397, type: !1095)
!9708 = !DILocation(line: 0, scope: !9705)
!9709 = !DILocation(line: 399, column: 2, scope: !9705)
!9710 = !DILocation(line: 400, column: 1, scope: !9705)
!9711 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !1069, file: !1069, line: 392, type: !1119, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9712)
!9712 = !{!9713}
!9713 = !DILocalVariable(name: "dev", arg: 1, scope: !9711, file: !1069, line: 392, type: !1095)
!9714 = !DILocation(line: 0, scope: !9711)
!9715 = !DILocation(line: 394, column: 2, scope: !9711)
!9716 = !DILocation(line: 395, column: 1, scope: !9711)
!9717 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !1069, file: !1069, line: 289, type: !1119, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9718)
!9718 = !{!9719}
!9719 = !DILocalVariable(name: "dev", arg: 1, scope: !9717, file: !1069, line: 289, type: !1095)
!9720 = !DILocation(line: 0, scope: !9717)
!9721 = !DILocation(line: 291, column: 2, scope: !9717)
!9722 = !DILocation(line: 292, column: 1, scope: !9717)
!9723 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !1069, file: !1069, line: 387, type: !1119, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9724)
!9724 = !{!9725}
!9725 = !DILocalVariable(name: "dev", arg: 1, scope: !9723, file: !1069, line: 387, type: !1095)
!9726 = !DILocation(line: 0, scope: !9723)
!9727 = !DILocation(line: 389, column: 2, scope: !9723)
!9728 = !DILocation(line: 390, column: 1, scope: !9723)
!9729 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !1069, file: !1069, line: 382, type: !1119, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9730)
!9730 = !{!9731}
!9731 = !DILocalVariable(name: "dev", arg: 1, scope: !9729, file: !1069, line: 382, type: !1095)
!9732 = !DILocation(line: 0, scope: !9729)
!9733 = !DILocation(line: 384, column: 2, scope: !9729)
!9734 = !DILocation(line: 385, column: 1, scope: !9729)
!9735 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !1069, file: !1069, line: 373, type: !1119, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9736)
!9736 = !{!9737}
!9737 = !DILocalVariable(name: "dev", arg: 1, scope: !9735, file: !1069, line: 373, type: !1095)
!9738 = !DILocation(line: 0, scope: !9735)
!9739 = !DILocation(line: 375, column: 2, scope: !9735)
!9740 = !DILocation(line: 376, column: 1, scope: !9735)
!9741 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !1069, file: !1069, line: 284, type: !1119, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9742)
!9742 = !{!9743}
!9743 = !DILocalVariable(name: "dev", arg: 1, scope: !9741, file: !1069, line: 284, type: !1095)
!9744 = !DILocation(line: 0, scope: !9741)
!9745 = !DILocation(line: 286, column: 2, scope: !9741)
!9746 = !DILocation(line: 287, column: 1, scope: !9741)
!9747 = distinct !DISubprogram(name: "stm32_exti_init", scope: !1069, file: !1069, line: 416, type: !1093, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9748)
!9748 = !{!9749}
!9749 = !DILocalVariable(name: "dev", arg: 1, scope: !9747, file: !1069, line: 416, type: !1095)
!9750 = !DILocation(line: 0, scope: !9747)
!9751 = !DILocation(line: 418, column: 2, scope: !9747)
!9752 = !DILocation(line: 420, column: 2, scope: !9747)
!9753 = !DILocation(line: 0, scope: !1118)
!9754 = !DILocation(line: 493, column: 2, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !1118, file: !1069, line: 493, column: 2)
!9756 = !DILocation(line: 497, column: 2, scope: !9757)
!9757 = distinct !DILexicalBlock(scope: !1118, file: !1069, line: 497, column: 2)
!9758 = !DILocation(line: 507, column: 2, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !1118, file: !1069, line: 507, column: 2)
!9760 = !DILocation(line: 512, column: 2, scope: !9761)
!9761 = distinct !DILexicalBlock(scope: !1118, file: !1069, line: 512, column: 2)
!9762 = !DILocation(line: 516, column: 2, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !1118, file: !1069, line: 516, column: 2)
!9764 = !DILocation(line: 523, column: 2, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !1118, file: !1069, line: 523, column: 2)
!9766 = !DILocation(line: 527, column: 2, scope: !9767)
!9767 = distinct !DILexicalBlock(scope: !1118, file: !1069, line: 527, column: 2)
!9768 = !DILocation(line: 581, column: 2, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !1118, file: !1069, line: 581, column: 2)
!9770 = !DILocation(line: 586, column: 2, scope: !9771)
!9771 = distinct !DILexicalBlock(scope: !1118, file: !1069, line: 586, column: 2)
!9772 = !DILocation(line: 591, column: 2, scope: !9773)
!9773 = distinct !DILexicalBlock(scope: !1118, file: !1069, line: 591, column: 2)
!9774 = !DILocation(line: 595, column: 2, scope: !9775)
!9775 = distinct !DILexicalBlock(scope: !1118, file: !1069, line: 595, column: 2)
!9776 = !DILocation(line: 607, column: 1, scope: !1118)
!9777 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !1069, file: !1069, line: 112, type: !9663, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9778)
!9778 = !{!9779, !9780}
!9779 = !DILocalVariable(name: "line", arg: 1, scope: !9777, file: !1069, line: 112, type: !108)
!9780 = !DILocalVariable(name: "irqnum", scope: !9777, file: !1069, line: 114, type: !108)
!9781 = !DILocation(line: 0, scope: !9777)
!9782 = !DILocation(line: 121, column: 11, scope: !9777)
!9783 = !DILocation(line: 130, column: 26, scope: !9777)
!9784 = !DILocation(line: 130, column: 2, scope: !9777)
!9785 = !DILocation(line: 134, column: 2, scope: !9777)
!9786 = !DILocation(line: 135, column: 1, scope: !9777)
!9787 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9674, file: !9674, line: 268, type: !7174, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9788)
!9788 = !{!9789}
!9789 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9787, file: !9674, line: 268, type: !113)
!9790 = !DILocation(line: 0, scope: !9787)
!9791 = !DILocation(line: 270, column: 3, scope: !9787)
!9792 = !DILocation(line: 271, column: 1, scope: !9787)
!9793 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !1069, file: !1069, line: 137, type: !9663, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9794)
!9794 = !{!9795}
!9795 = !DILocalVariable(name: "line", arg: 1, scope: !9793, file: !1069, line: 137, type: !108)
!9796 = !DILocation(line: 0, scope: !9793)
!9797 = !DILocation(line: 141, column: 11, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9793, file: !1069, line: 141, column: 6)
!9799 = !DILocation(line: 141, column: 6, scope: !9793)
!9800 = !DILocation(line: 145, column: 28, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9798, file: !1069, line: 141, column: 17)
!9802 = !DILocation(line: 145, column: 3, scope: !9801)
!9803 = !DILocation(line: 147, column: 2, scope: !9801)
!9804 = !DILocation(line: 151, column: 1, scope: !9793)
!9805 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9674, file: !9674, line: 309, type: !7174, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9806)
!9806 = !{!9807}
!9807 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9805, file: !9674, line: 309, type: !113)
!9808 = !DILocation(line: 0, scope: !9805)
!9809 = !DILocation(line: 311, column: 3, scope: !9805)
!9810 = !DILocation(line: 312, column: 1, scope: !9805)
!9811 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !1069, file: !1069, line: 202, type: !9812, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9814)
!9812 = !DISubroutineType(types: !9813)
!9813 = !{null, !108, !108}
!9814 = !{!9815, !9816}
!9815 = !DILocalVariable(name: "line", arg: 1, scope: !9811, file: !1069, line: 202, type: !108)
!9816 = !DILocalVariable(name: "trigger", arg: 2, scope: !9811, file: !1069, line: 202, type: !108)
!9817 = !DILocation(line: 0, scope: !9811)
!9818 = !DILocation(line: 211, column: 2, scope: !9811)
!9819 = !DILocation(line: 213, column: 36, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9811, file: !1069, line: 211, column: 19)
!9821 = !DILocation(line: 213, column: 3, scope: !9820)
!9822 = !DILocation(line: 214, column: 3, scope: !9820)
!9823 = !DILocation(line: 215, column: 3, scope: !9820)
!9824 = !DILocation(line: 217, column: 35, scope: !9820)
!9825 = !DILocation(line: 217, column: 3, scope: !9820)
!9826 = !DILocation(line: 218, column: 3, scope: !9820)
!9827 = !DILocation(line: 219, column: 3, scope: !9820)
!9828 = !DILocation(line: 221, column: 36, scope: !9820)
!9829 = !DILocation(line: 221, column: 3, scope: !9820)
!9830 = !DILocation(line: 222, column: 3, scope: !9820)
!9831 = !DILocation(line: 223, column: 3, scope: !9820)
!9832 = !DILocation(line: 225, column: 35, scope: !9820)
!9833 = !DILocation(line: 225, column: 3, scope: !9820)
!9834 = !DILocation(line: 226, column: 3, scope: !9820)
!9835 = !DILocation(line: 227, column: 3, scope: !9820)
!9836 = !DILocation(line: 232, column: 1, scope: !9811)
!9837 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9674, file: !9674, line: 573, type: !7174, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9838)
!9838 = !{!9839}
!9839 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9837, file: !9674, line: 573, type: !113)
!9840 = !DILocation(line: 0, scope: !9837)
!9841 = !DILocation(line: 575, column: 3, scope: !9837)
!9842 = !DILocation(line: 577, column: 1, scope: !9837)
!9843 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9674, file: !9674, line: 703, type: !7174, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9844)
!9844 = !{!9845}
!9845 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9843, file: !9674, line: 703, type: !113)
!9846 = !DILocation(line: 0, scope: !9843)
!9847 = !DILocation(line: 705, column: 3, scope: !9843)
!9848 = !DILocation(line: 706, column: 1, scope: !9843)
!9849 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9674, file: !9674, line: 529, type: !7174, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9850)
!9850 = !{!9851}
!9851 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9849, file: !9674, line: 529, type: !113)
!9852 = !DILocation(line: 0, scope: !9849)
!9853 = !DILocation(line: 531, column: 3, scope: !9849)
!9854 = !DILocation(line: 533, column: 1, scope: !9849)
!9855 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9674, file: !9674, line: 661, type: !7174, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9856)
!9856 = !{!9857}
!9857 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9855, file: !9674, line: 661, type: !113)
!9858 = !DILocation(line: 0, scope: !9855)
!9859 = !DILocation(line: 663, column: 3, scope: !9855)
!9860 = !DILocation(line: 664, column: 1, scope: !9855)
!9861 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !1069, file: !1069, line: 433, type: !9862, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9864)
!9862 = !DISubroutineType(types: !9863)
!9863 = !{!108, !108, !1106, !104}
!9864 = !{!9865, !9866, !9867, !9868, !9870}
!9865 = !DILocalVariable(name: "line", arg: 1, scope: !9861, file: !1069, line: 433, type: !108)
!9866 = !DILocalVariable(name: "cb", arg: 2, scope: !9861, file: !1069, line: 433, type: !1106)
!9867 = !DILocalVariable(name: "arg", arg: 3, scope: !9861, file: !1069, line: 433, type: !104)
!9868 = !DILocalVariable(name: "dev", scope: !9861, file: !1069, line: 435, type: !9869)
!9869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1095)
!9870 = !DILocalVariable(name: "data", scope: !9861, file: !1069, line: 436, type: !9628)
!9871 = !DILocation(line: 0, scope: !9861)
!9872 = !DILocation(line: 438, column: 21, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !9861, file: !1069, line: 438, column: 6)
!9874 = !DILocation(line: 438, column: 6, scope: !9873)
!9875 = !DILocation(line: 438, column: 6, scope: !9861)
!9876 = !DILocation(line: 442, column: 20, scope: !9861)
!9877 = !DILocation(line: 443, column: 17, scope: !9861)
!9878 = !DILocation(line: 443, column: 22, scope: !9861)
!9879 = !DILocation(line: 445, column: 2, scope: !9861)
!9880 = !DILocation(line: 446, column: 1, scope: !9861)
!9881 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !1069, file: !1069, line: 448, type: !9663, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9882)
!9882 = !{!9883, !9884, !9885}
!9883 = !DILocalVariable(name: "line", arg: 1, scope: !9881, file: !1069, line: 448, type: !108)
!9884 = !DILocalVariable(name: "dev", scope: !9881, file: !1069, line: 450, type: !9869)
!9885 = !DILocalVariable(name: "data", scope: !9881, file: !1069, line: 451, type: !9628)
!9886 = !DILocation(line: 0, scope: !9881)
!9887 = !DILocation(line: 453, column: 17, scope: !9881)
!9888 = !DILocation(line: 453, column: 20, scope: !9881)
!9889 = !DILocation(line: 454, column: 17, scope: !9881)
!9890 = !DILocation(line: 454, column: 22, scope: !9881)
!9891 = !DILocation(line: 455, column: 1, scope: !9881)
!9892 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1218, file: !1218, line: 183, type: !1256, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !9893)
!9893 = !{!9894, !9895, !9896, !9897, !9898}
!9894 = !DILocalVariable(name: "dev", arg: 1, scope: !9892, file: !1218, line: 183, type: !1247)
!9895 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9892, file: !1218, line: 184, type: !1258)
!9896 = !DILocalVariable(name: "pclken", scope: !9892, file: !1218, line: 186, type: !1208)
!9897 = !DILocalVariable(name: "reg", scope: !9892, file: !1218, line: 187, type: !1799)
!9898 = !DILocalVariable(name: "reg_val", scope: !9892, file: !1218, line: 188, type: !113)
!9899 = !DILocation(line: 0, scope: !9892)
!9900 = !DILocation(line: 192, column: 6, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9892, file: !1218, line: 192, column: 6)
!9902 = !DILocation(line: 192, column: 6, scope: !9892)
!9903 = !DILocation(line: 197, column: 52, scope: !9892)
!9904 = !DILocation(line: 197, column: 8, scope: !9892)
!9905 = !DILocation(line: 198, column: 12, scope: !9892)
!9906 = !DILocation(line: 199, column: 21, scope: !9892)
!9907 = !DILocation(line: 199, column: 10, scope: !9892)
!9908 = !DILocation(line: 200, column: 7, scope: !9892)
!9909 = !DILocation(line: 202, column: 2, scope: !9892)
!9910 = !DILocation(line: 203, column: 1, scope: !9892)
!9911 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1218, file: !1218, line: 205, type: !1256, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !9912)
!9912 = !{!9913, !9914, !9915, !9916, !9917}
!9913 = !DILocalVariable(name: "dev", arg: 1, scope: !9911, file: !1218, line: 205, type: !1247)
!9914 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9911, file: !1218, line: 206, type: !1258)
!9915 = !DILocalVariable(name: "pclken", scope: !9911, file: !1218, line: 208, type: !1208)
!9916 = !DILocalVariable(name: "reg", scope: !9911, file: !1218, line: 209, type: !1799)
!9917 = !DILocalVariable(name: "reg_val", scope: !9911, file: !1218, line: 210, type: !113)
!9918 = !DILocation(line: 0, scope: !9911)
!9919 = !DILocation(line: 214, column: 6, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9911, file: !1218, line: 214, column: 6)
!9921 = !DILocation(line: 214, column: 6, scope: !9911)
!9922 = !DILocation(line: 219, column: 52, scope: !9911)
!9923 = !DILocation(line: 219, column: 8, scope: !9911)
!9924 = !DILocation(line: 220, column: 12, scope: !9911)
!9925 = !DILocation(line: 221, column: 22, scope: !9911)
!9926 = !DILocation(line: 221, column: 13, scope: !9911)
!9927 = !DILocation(line: 221, column: 10, scope: !9911)
!9928 = !DILocation(line: 222, column: 7, scope: !9911)
!9929 = !DILocation(line: 224, column: 2, scope: !9911)
!9930 = !DILocation(line: 225, column: 1, scope: !9911)
!9931 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1218, file: !1218, line: 262, type: !1272, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !9932)
!9932 = !{!9933, !9934, !9935, !9936, !9937, !9938, !9939, !9940}
!9933 = !DILocalVariable(name: "clock", arg: 1, scope: !9931, file: !1218, line: 262, type: !1247)
!9934 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9931, file: !1218, line: 263, type: !1258)
!9935 = !DILocalVariable(name: "rate", arg: 3, scope: !9931, file: !1218, line: 264, type: !1214)
!9936 = !DILocalVariable(name: "pclken", scope: !9931, file: !1218, line: 266, type: !1208)
!9937 = !DILocalVariable(name: "ahb_clock", scope: !9931, file: !1218, line: 273, type: !113)
!9938 = !DILocalVariable(name: "apb1_clock", scope: !9931, file: !1218, line: 274, type: !113)
!9939 = !DILocalVariable(name: "apb2_clock", scope: !9931, file: !1218, line: 276, type: !113)
!9940 = !DILocalVariable(name: "ahb3_clock", scope: !9931, file: !1218, line: 286, type: !113)
!9941 = !DILocation(line: 0, scope: !9931)
!9942 = !DILocation(line: 273, column: 23, scope: !9931)
!9943 = !DILocation(line: 299, column: 18, scope: !9931)
!9944 = !DILocation(line: 299, column: 2, scope: !9931)
!9945 = !DILocation(line: 274, column: 24, scope: !9931)
!9946 = !DILocation(line: 319, column: 3, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9931, file: !1218, line: 299, column: 23)
!9948 = !DILocation(line: 276, column: 24, scope: !9931)
!9949 = !DILocation(line: 323, column: 3, scope: !9947)
!9950 = !DILocation(line: 346, column: 33, scope: !9947)
!9951 = !DILocation(line: 346, column: 11, scope: !9947)
!9952 = !DILocation(line: 350, column: 3, scope: !9947)
!9953 = !DILocation(line: 354, column: 33, scope: !9947)
!9954 = !DILocation(line: 354, column: 11, scope: !9947)
!9955 = !DILocation(line: 358, column: 3, scope: !9947)
!9956 = !DILocation(line: 374, column: 3, scope: !9947)
!9957 = !DILocation(line: 379, column: 3, scope: !9947)
!9958 = !DILocation(line: 0, scope: !9947)
!9959 = !DILocation(line: 396, column: 1, scope: !9931)
!9960 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1218, file: !1218, line: 227, type: !1288, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !9961)
!9961 = !{!9962, !9963, !9964, !9965, !9966, !9967, !9968, !9969}
!9962 = !DILocalVariable(name: "dev", arg: 1, scope: !9960, file: !1218, line: 227, type: !1247)
!9963 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9960, file: !1218, line: 228, type: !1258)
!9964 = !DILocalVariable(name: "data", arg: 3, scope: !9960, file: !1218, line: 229, type: !104)
!9965 = !DILocalVariable(name: "pclken", scope: !9960, file: !1218, line: 233, type: !1208)
!9966 = !DILocalVariable(name: "reg", scope: !9960, file: !1218, line: 234, type: !1799)
!9967 = !DILocalVariable(name: "reg_val", scope: !9960, file: !1218, line: 235, type: !113)
!9968 = !DILocalVariable(name: "dt_val", scope: !9960, file: !1218, line: 235, type: !113)
!9969 = !DILocalVariable(name: "err", scope: !9960, file: !1218, line: 236, type: !108)
!9970 = !DILocation(line: 0, scope: !9960)
!9971 = !DILocation(line: 241, column: 30, scope: !9960)
!9972 = !DILocation(line: 241, column: 8, scope: !9960)
!9973 = !DILocation(line: 242, column: 10, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9960, file: !1218, line: 242, column: 6)
!9975 = !DILocation(line: 242, column: 6, scope: !9960)
!9976 = !DILocation(line: 247, column: 11, scope: !9960)
!9977 = !DILocation(line: 248, column: 6, scope: !9960)
!9978 = !DILocation(line: 247, column: 44, scope: !9960)
!9979 = !DILocation(line: 250, column: 6, scope: !9960)
!9980 = !DILocation(line: 249, column: 52, scope: !9960)
!9981 = !DILocation(line: 249, column: 8, scope: !9960)
!9982 = !DILocation(line: 251, column: 12, scope: !9960)
!9983 = !DILocation(line: 252, column: 10, scope: !9960)
!9984 = !DILocation(line: 253, column: 7, scope: !9960)
!9985 = !DILocation(line: 255, column: 2, scope: !9960)
!9986 = !DILocation(line: 260, column: 1, scope: !9960)
!9987 = distinct !DISubprogram(name: "enabled_clock", scope: !1218, file: !1218, line: 100, type: !9988, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !9990)
!9988 = !DISubroutineType(types: !9989)
!9989 = !{!108, !113}
!9990 = !{!9991, !9992}
!9991 = !DILocalVariable(name: "src_clk", arg: 1, scope: !9987, file: !1218, line: 100, type: !113)
!9992 = !DILocalVariable(name: "r", scope: !9987, file: !1218, line: 102, type: !108)
!9993 = !DILocation(line: 0, scope: !9987)
!9994 = !DILocation(line: 104, column: 2, scope: !9987)
!9995 = !DILocation(line: 180, column: 2, scope: !9987)
!9996 = !DILocation(line: 181, column: 1, scope: !9987)
!9997 = distinct !DISubprogram(name: "get_bus_clock", scope: !1218, file: !1218, line: 79, type: !9998, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !10000)
!9998 = !DISubroutineType(types: !9999)
!9999 = !{!113, !113, !113}
!10000 = !{!10001, !10002}
!10001 = !DILocalVariable(name: "clock", arg: 1, scope: !9997, file: !1218, line: 79, type: !113)
!10002 = !DILocalVariable(name: "prescaler", arg: 2, scope: !9997, file: !1218, line: 79, type: !113)
!10003 = !DILocation(line: 0, scope: !9997)
!10004 = !DILocation(line: 81, column: 15, scope: !9997)
!10005 = !DILocation(line: 81, column: 2, scope: !9997)
!10006 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1218, file: !1218, line: 68, type: !10007, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !10009)
!10007 = !DISubroutineType(types: !10008)
!10008 = !{!113, !113, !108, !108, !108}
!10009 = !{!10010, !10011, !10012, !10013}
!10010 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !10006, file: !1218, line: 68, type: !113)
!10011 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !10006, file: !1218, line: 69, type: !108)
!10012 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !10006, file: !1218, line: 70, type: !108)
!10013 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !10006, file: !1218, line: 71, type: !108)
!10014 = !DILocation(line: 0, scope: !10006)
!10015 = !DILocation(line: 75, column: 22, scope: !10006)
!10016 = !DILocation(line: 76, column: 13, scope: !10006)
!10017 = !DILocation(line: 75, column: 34, scope: !10006)
!10018 = !DILocation(line: 75, column: 2, scope: !10006)
!10019 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1218, file: !1218, line: 641, type: !1245, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !10020)
!10020 = !{!10021, !10022, !10023}
!10021 = !DILocalVariable(name: "dev", arg: 1, scope: !10019, file: !1218, line: 641, type: !1247)
!10022 = !DILocalVariable(name: "old_flash_freq", scope: !10019, file: !1218, line: 664, type: !113)
!10023 = !DILocalVariable(name: "new_flash_freq", scope: !10019, file: !1218, line: 665, type: !113)
!10024 = !DILocation(line: 0, scope: !10019)
!10025 = !DILocation(line: 646, column: 2, scope: !10019)
!10026 = !DILocation(line: 667, column: 19, scope: !10019)
!10027 = !DILocation(line: 674, column: 21, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10019, file: !1218, line: 674, column: 6)
!10029 = !DILocation(line: 674, column: 6, scope: !10019)
!10030 = !DILocation(line: 675, column: 3, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !10028, file: !1218, line: 674, column: 59)
!10032 = !DILocation(line: 676, column: 2, scope: !10031)
!10033 = !DILocation(line: 680, column: 2, scope: !10019)
!10034 = !DILocation(line: 683, column: 2, scope: !10019)
!10035 = !DILocation(line: 690, column: 3, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !10037, file: !1218, line: 689, column: 9)
!10037 = distinct !DILexicalBlock(scope: !10019, file: !1218, line: 685, column: 6)
!10038 = !DILocation(line: 695, column: 2, scope: !10019)
!10039 = !DILocation(line: 696, column: 2, scope: !10019)
!10040 = !DILocation(line: 696, column: 9, scope: !10019)
!10041 = !DILocation(line: 696, column: 34, scope: !10019)
!10042 = distinct !{!10042, !10039, !10043}
!10043 = !DILocation(line: 697, column: 2, scope: !10019)
!10044 = !DILocation(line: 720, column: 21, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10019, file: !1218, line: 720, column: 6)
!10046 = !DILocation(line: 720, column: 6, scope: !10019)
!10047 = !DILocation(line: 721, column: 3, scope: !10048)
!10048 = distinct !DILexicalBlock(scope: !10045, file: !1218, line: 720, column: 60)
!10049 = !DILocation(line: 722, column: 2, scope: !10048)
!10050 = !DILocation(line: 725, column: 18, scope: !10019)
!10051 = !DILocation(line: 728, column: 2, scope: !10019)
!10052 = !DILocation(line: 730, column: 2, scope: !10019)
!10053 = !DILocation(line: 745, column: 2, scope: !10019)
!10054 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10055, file: !10055, line: 3275, type: !7164, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !437)
!10055 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10056 = !DILocation(line: 3277, column: 21, scope: !10054)
!10057 = !DILocation(line: 3277, column: 3, scope: !10054)
!10058 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1218, file: !1218, line: 507, type: !3435, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !437)
!10059 = !DILocation(line: 516, column: 4, scope: !10060)
!10060 = distinct !DILexicalBlock(scope: !10061, file: !1218, line: 515, column: 10)
!10061 = distinct !DILexicalBlock(scope: !10062, file: !1218, line: 513, column: 7)
!10062 = distinct !DILexicalBlock(scope: !10063, file: !1218, line: 510, column: 37)
!10063 = distinct !DILexicalBlock(scope: !10058, file: !1218, line: 510, column: 6)
!10064 = !DILocation(line: 526, column: 3, scope: !10062)
!10065 = !DILocation(line: 527, column: 3, scope: !10062)
!10066 = !DILocation(line: 527, column: 10, scope: !10062)
!10067 = !DILocation(line: 527, column: 31, scope: !10062)
!10068 = distinct !{!10068, !10065, !10069}
!10069 = !DILocation(line: 529, column: 3, scope: !10062)
!10070 = !DILocation(line: 583, column: 3, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10072, file: !1218, line: 577, column: 37)
!10072 = distinct !DILexicalBlock(scope: !10058, file: !1218, line: 577, column: 6)
!10073 = !DILocation(line: 584, column: 3, scope: !10071)
!10074 = !DILocation(line: 584, column: 10, scope: !10071)
!10075 = !DILocation(line: 584, column: 31, scope: !10071)
!10076 = distinct !{!10076, !10073, !10077}
!10077 = !DILocation(line: 585, column: 3, scope: !10071)
!10078 = !DILocation(line: 627, column: 1, scope: !10058)
!10079 = distinct !DISubprogram(name: "set_up_plls", scope: !1218, file: !1218, line: 448, type: !3435, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !437)
!10080 = !DILocation(line: 460, column: 6, scope: !10081)
!10081 = distinct !DILexicalBlock(scope: !10079, file: !1218, line: 460, column: 6)
!10082 = !DILocation(line: 460, column: 31, scope: !10081)
!10083 = !DILocation(line: 460, column: 6, scope: !10079)
!10084 = !DILocation(line: 461, column: 3, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10081, file: !1218, line: 460, column: 67)
!10086 = !DILocation(line: 462, column: 3, scope: !10085)
!10087 = !DILocation(line: 463, column: 2, scope: !10085)
!10088 = !DILocation(line: 464, column: 2, scope: !10079)
!10089 = !DILocation(line: 488, column: 2, scope: !10079)
!10090 = !DILocation(line: 492, column: 2, scope: !10079)
!10091 = !DILocation(line: 496, column: 2, scope: !10079)
!10092 = !DILocation(line: 499, column: 2, scope: !10079)
!10093 = !DILocation(line: 500, column: 2, scope: !10079)
!10094 = !DILocation(line: 500, column: 9, scope: !10079)
!10095 = !DILocation(line: 500, column: 30, scope: !10079)
!10096 = distinct !{!10096, !10093, !10097}
!10097 = !DILocation(line: 502, column: 2, scope: !10079)
!10098 = !DILocation(line: 505, column: 1, scope: !10079)
!10099 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10055, file: !10055, line: 3224, type: !7174, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !10100)
!10100 = !{!10101}
!10101 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10099, file: !10055, line: 3224, type: !113)
!10102 = !DILocation(line: 0, scope: !10099)
!10103 = !DILocation(line: 3226, column: 3, scope: !10099)
!10104 = !DILocation(line: 3227, column: 1, scope: !10099)
!10105 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10055, file: !10055, line: 3188, type: !7174, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !10106)
!10106 = !{!10107}
!10107 = !DILocalVariable(name: "Source", arg: 1, scope: !10105, file: !10055, line: 3188, type: !113)
!10108 = !DILocation(line: 0, scope: !10105)
!10109 = !DILocation(line: 3190, column: 3, scope: !10105)
!10110 = !DILocation(line: 3191, column: 1, scope: !10105)
!10111 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10055, file: !10055, line: 3204, type: !7164, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !437)
!10112 = !DILocation(line: 3206, column: 21, scope: !10111)
!10113 = !DILocation(line: 3206, column: 3, scope: !10111)
!10114 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10055, file: !10055, line: 3240, type: !7174, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !10115)
!10115 = !{!10116}
!10116 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10114, file: !10055, line: 3240, type: !113)
!10117 = !DILocation(line: 0, scope: !10114)
!10118 = !DILocation(line: 3242, column: 3, scope: !10114)
!10119 = !DILocation(line: 3243, column: 1, scope: !10114)
!10120 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10055, file: !10055, line: 3256, type: !7174, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !10121)
!10121 = !{!10122}
!10122 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10120, file: !10055, line: 3256, type: !113)
!10123 = !DILocation(line: 0, scope: !10120)
!10124 = !DILocation(line: 3258, column: 3, scope: !10120)
!10125 = !DILocation(line: 3259, column: 1, scope: !10120)
!10126 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1218, file: !1218, line: 409, type: !3435, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !437)
!10127 = !DILocation(line: 412, column: 6, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10126, file: !1218, line: 412, column: 6)
!10129 = !DILocation(line: 412, column: 27, scope: !10128)
!10130 = !DILocation(line: 412, column: 6, scope: !10126)
!10131 = !DILocation(line: 414, column: 3, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !10128, file: !1218, line: 412, column: 33)
!10133 = !DILocation(line: 415, column: 3, scope: !10132)
!10134 = !DILocation(line: 415, column: 10, scope: !10132)
!10135 = !DILocation(line: 415, column: 31, scope: !10132)
!10136 = distinct !{!10136, !10133, !10137}
!10137 = !DILocation(line: 417, column: 3, scope: !10132)
!10138 = !DILocation(line: 421, column: 2, scope: !10126)
!10139 = !DILocation(line: 422, column: 2, scope: !10126)
!10140 = !DILocation(line: 422, column: 9, scope: !10126)
!10141 = !DILocation(line: 422, column: 34, scope: !10126)
!10142 = distinct !{!10142, !10139, !10143}
!10143 = !DILocation(line: 423, column: 2, scope: !10126)
!10144 = !DILocation(line: 424, column: 1, scope: !10126)
!10145 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10055, file: !10055, line: 4195, type: !3435, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !437)
!10146 = !DILocation(line: 4197, column: 3, scope: !10145)
!10147 = !DILocation(line: 4198, column: 1, scope: !10145)
!10148 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10055, file: !10055, line: 4184, type: !3435, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !437)
!10149 = !DILocation(line: 4186, column: 3, scope: !10148)
!10150 = !DILocation(line: 4187, column: 1, scope: !10148)
!10151 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10055, file: !10055, line: 4205, type: !7164, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !437)
!10152 = !DILocation(line: 4207, column: 11, scope: !10151)
!10153 = !DILocation(line: 4207, column: 44, scope: !10151)
!10154 = !DILocation(line: 4207, column: 3, scope: !10151)
!10155 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10055, file: !10055, line: 3007, type: !7164, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !437)
!10156 = !DILocation(line: 3009, column: 11, scope: !10155)
!10157 = !DILocation(line: 3009, column: 44, scope: !10155)
!10158 = !DILocation(line: 3009, column: 3, scope: !10155)
!10159 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10055, file: !10055, line: 2987, type: !3435, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !437)
!10160 = !DILocation(line: 2989, column: 3, scope: !10159)
!10161 = !DILocation(line: 2990, column: 1, scope: !10159)
!10162 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10055, file: !10055, line: 2939, type: !3435, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !437)
!10163 = !DILocation(line: 2941, column: 3, scope: !10162)
!10164 = !DILocation(line: 2942, column: 1, scope: !10162)
!10165 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10055, file: !10055, line: 2949, type: !3435, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !437)
!10166 = !DILocation(line: 2951, column: 3, scope: !10165)
!10167 = !DILocation(line: 2952, column: 1, scope: !10165)
!10168 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10055, file: !10055, line: 2969, type: !7164, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !437)
!10169 = !DILocation(line: 2971, column: 11, scope: !10168)
!10170 = !DILocation(line: 2971, column: 44, scope: !10168)
!10171 = !DILocation(line: 2971, column: 3, scope: !10168)
!10172 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !10055, file: !10055, line: 3143, type: !3435, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !437)
!10173 = !DILocation(line: 3145, column: 3, scope: !10172)
!10174 = !DILocation(line: 3146, column: 1, scope: !10172)
!10175 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !10055, file: !10055, line: 3163, type: !7164, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1154, retainedNodes: !437)
!10176 = !DILocation(line: 3165, column: 11, scope: !10175)
!10177 = !DILocation(line: 3165, column: 46, scope: !10175)
!10178 = !DILocation(line: 3165, column: 3, scope: !10175)
!10179 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10180, file: !10180, line: 40, type: !7164, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !437)
!10180 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10181 = !DILocation(line: 45, column: 3, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10183, file: !10180, line: 44, column: 44)
!10183 = distinct !DILexicalBlock(scope: !10184, file: !10180, line: 44, column: 13)
!10184 = distinct !DILexicalBlock(scope: !10179, file: !10180, line: 42, column: 6)
!10185 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10180, file: !10180, line: 56, type: !3435, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !437)
!10186 = !DILocation(line: 58, column: 2, scope: !10185)
!10187 = !DILocation(line: 62, column: 1, scope: !10185)
!10188 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10055, file: !10055, line: 4304, type: !10189, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !10191)
!10189 = !DISubroutineType(types: !10190)
!10190 = !{null, !113, !113, !113, !113}
!10191 = !{!10192, !10193, !10194, !10195}
!10192 = !DILocalVariable(name: "Source", arg: 1, scope: !10188, file: !10055, line: 4304, type: !113)
!10193 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10188, file: !10055, line: 4304, type: !113)
!10194 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10188, file: !10055, line: 4304, type: !113)
!10195 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10188, file: !10055, line: 4304, type: !113)
!10196 = !DILocation(line: 0, scope: !10188)
!10197 = !DILocation(line: 4306, column: 3, scope: !10188)
!10198 = !DILocation(line: 4308, column: 3, scope: !10188)
!10199 = !DILocation(line: 4312, column: 1, scope: !10188)
!10200 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10180, file: !10180, line: 69, type: !3435, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !437)
!10201 = !DILocation(line: 72, column: 2, scope: !10200)
!10202 = !DILocation(line: 73, column: 1, scope: !10200)
!10203 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10204, file: !10204, line: 1185, type: !7174, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !10205)
!10204 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10205 = !{!10206, !10207}
!10206 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10203, file: !10204, line: 1185, type: !113)
!10207 = !DILocalVariable(name: "tmpreg", scope: !10203, file: !10204, line: 1187, type: !574)
!10208 = !DILocation(line: 0, scope: !10203)
!10209 = !DILocation(line: 1187, column: 3, scope: !10203)
!10210 = !DILocation(line: 1187, column: 17, scope: !10203)
!10211 = !DILocation(line: 1188, column: 3, scope: !10203)
!10212 = !DILocation(line: 1190, column: 12, scope: !10203)
!10213 = !DILocation(line: 1190, column: 10, scope: !10203)
!10214 = !DILocation(line: 1191, column: 9, scope: !10203)
!10215 = !DILocation(line: 1192, column: 1, scope: !10203)
!10216 = distinct !DISubprogram(name: "uart_console_init", scope: !1349, file: !1349, line: 588, type: !1326, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !10217)
!10217 = !{!10218}
!10218 = !DILocalVariable(name: "arg", arg: 1, scope: !10216, file: !1349, line: 588, type: !1304)
!10219 = !DILocation(line: 0, scope: !10216)
!10220 = !DILocation(line: 593, column: 7, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !10216, file: !1349, line: 593, column: 6)
!10222 = !DILocation(line: 593, column: 6, scope: !10216)
!10223 = !DILocation(line: 597, column: 2, scope: !10216)
!10224 = !DILocation(line: 599, column: 2, scope: !10216)
!10225 = !DILocation(line: 600, column: 1, scope: !10216)
!10226 = distinct !DISubprogram(name: "device_is_ready", scope: !10227, file: !10227, line: 47, type: !10228, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !10230)
!10227 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!10228 = !DISubroutineType(types: !10229)
!10229 = !{!422, !1304}
!10230 = !{!10231}
!10231 = !DILocalVariable(name: "dev", arg: 1, scope: !10226, file: !10227, line: 47, type: !1304)
!10232 = !DILocation(line: 0, scope: !10226)
!10233 = !DILocation(line: 55, column: 2, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10226, file: !10227, line: 55, column: 2)
!10235 = !{i64 2154383162}
!10236 = !DILocation(line: 56, column: 9, scope: !10226)
!10237 = !DILocation(line: 56, column: 2, scope: !10226)
!10238 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1349, file: !1349, line: 573, type: !3435, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !437)
!10239 = !DILocation(line: 576, column: 2, scope: !10238)
!10240 = !DILocation(line: 579, column: 2, scope: !10238)
!10241 = !DILocation(line: 581, column: 1, scope: !10238)
!10242 = distinct !DISubprogram(name: "console_out", scope: !1349, file: !1349, line: 77, type: !561, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !10243)
!10243 = !{!10244}
!10244 = !DILocalVariable(name: "c", arg: 1, scope: !10242, file: !1349, line: 77, type: !108)
!10245 = !DILocation(line: 0, scope: !10242)
!10246 = !DILocation(line: 89, column: 11, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10242, file: !1349, line: 89, column: 6)
!10248 = !DILocation(line: 89, column: 6, scope: !10242)
!10249 = !DILocation(line: 90, column: 3, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10247, file: !1349, line: 89, column: 17)
!10251 = !DILocation(line: 91, column: 2, scope: !10250)
!10252 = !DILocation(line: 92, column: 34, scope: !10242)
!10253 = !DILocation(line: 92, column: 2, scope: !10242)
!10254 = !DILocation(line: 94, column: 2, scope: !10242)
!10255 = distinct !DISubprogram(name: "uart_poll_out", scope: !10256, file: !10256, line: 95, type: !1322, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !10257)
!10256 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sensor_batch_processing")
!10257 = !{!10258, !10259}
!10258 = !DILocalVariable(name: "dev", arg: 1, scope: !10255, file: !10256, line: 95, type: !1304)
!10259 = !DILocalVariable(name: "out_char", arg: 2, scope: !10255, file: !10256, line: 95, type: !165)
!10260 = !DILocation(line: 0, scope: !10255)
!10261 = !DILocation(line: 105, column: 2, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10255, file: !10256, line: 105, column: 2)
!10263 = !{i64 2154466553}
!10264 = !DILocation(line: 106, column: 2, scope: !10255)
!10265 = !DILocation(line: 107, column: 1, scope: !10255)
!10266 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1298, file: !1298, line: 574, type: !1322, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !10267)
!10267 = !{!10268, !10269, !10270}
!10268 = !DILocalVariable(name: "dev", arg: 1, scope: !10266, file: !1298, line: 574, type: !1304)
!10269 = !DILocalVariable(name: "out_char", arg: 2, scope: !10266, file: !1298, line: 575, type: !165)
!10270 = !DILocalVariable(name: "api", scope: !10266, file: !1298, line: 577, type: !1295)
!10271 = !DILocation(line: 0, scope: !10266)
!10272 = !DILocation(line: 578, column: 40, scope: !10266)
!10273 = !DILocation(line: 580, column: 7, scope: !10266)
!10274 = !DILocation(line: 580, column: 2, scope: !10266)
!10275 = !DILocation(line: 581, column: 1, scope: !10266)
!10276 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !10228, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !10277)
!10277 = !{!10278}
!10278 = !DILocalVariable(name: "dev", arg: 1, scope: !10276, file: !411, line: 730, type: !1304)
!10279 = !DILocation(line: 0, scope: !10276)
!10280 = !DILocation(line: 732, column: 9, scope: !10276)
!10281 = !DILocation(line: 732, column: 2, scope: !10276)
!10282 = distinct !DISubprogram(name: "uart_register_input", scope: !1349, file: !1349, line: 560, type: !10283, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !10328)
!10283 = !DISubroutineType(types: !10284)
!10284 = !{null, !10285, !10285, !10325}
!10285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10286, size: 32)
!10286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !359, line: 2208, size: 128, elements: !10287)
!10287 = !{!10288}
!10288 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10286, file: !359, line: 2209, baseType: !10289, size: 128)
!10289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !359, line: 1709, size: 128, elements: !10290)
!10290 = !{!10291, !10304, !10306}
!10291 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10289, file: !359, line: 1710, baseType: !10292, size: 64)
!10292 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10293, line: 46, baseType: !10294)
!10293 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10293, line: 41, size: 64, elements: !10295)
!10295 = !{!10296, !10303}
!10296 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10294, file: !10293, line: 42, baseType: !10297, size: 32)
!10297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10298, size: 32)
!10298 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10293, line: 39, baseType: !10299)
!10299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10293, line: 35, size: 32, elements: !10300)
!10300 = !{!10301}
!10301 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10299, file: !10293, line: 36, baseType: !10302, size: 32)
!10302 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10293, line: 32, baseType: !113)
!10303 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10294, file: !10293, line: 43, baseType: !10297, size: 32, offset: 32)
!10304 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10289, file: !359, line: 1711, baseType: !10305, offset: 64)
!10305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!10306 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10289, file: !359, line: 1712, baseType: !10307, size: 64, offset: 64)
!10307 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !10308)
!10308 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !10309)
!10309 = !{!10310}
!10310 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10308, file: !363, line: 232, baseType: !10311, size: 64)
!10311 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !10312)
!10312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !10313)
!10313 = !{!10314, !10320}
!10314 = !DIDerivedType(tag: DW_TAG_member, scope: !10312, file: !367, line: 38, baseType: !10315, size: 32)
!10315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10312, file: !367, line: 38, size: 32, elements: !10316)
!10316 = !{!10317, !10319}
!10317 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10315, file: !367, line: 39, baseType: !10318, size: 32)
!10318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10312, size: 32)
!10319 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10315, file: !367, line: 40, baseType: !10318, size: 32)
!10320 = !DIDerivedType(tag: DW_TAG_member, scope: !10312, file: !367, line: 42, baseType: !10321, size: 32, offset: 32)
!10321 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10312, file: !367, line: 42, size: 32, elements: !10322)
!10322 = !{!10323, !10324}
!10323 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10321, file: !367, line: 43, baseType: !10318, size: 32)
!10324 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10321, file: !367, line: 44, baseType: !10318, size: 32)
!10325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10326, size: 32)
!10326 = !DISubroutineType(types: !10327)
!10327 = !{!164, !443, !164}
!10328 = !{!10329, !10330, !10331}
!10329 = !DILocalVariable(name: "avail", arg: 1, scope: !10282, file: !1349, line: 560, type: !10285)
!10330 = !DILocalVariable(name: "lines", arg: 2, scope: !10282, file: !1349, line: 560, type: !10285)
!10331 = !DILocalVariable(name: "completion", arg: 3, scope: !10282, file: !1349, line: 561, type: !10325)
!10332 = !DILocation(line: 0, scope: !10282)
!10333 = !DILocation(line: 566, column: 1, scope: !10282)
!10334 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1527, file: !1527, line: 523, type: !1385, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10335)
!10335 = !{!10336, !10337, !10338, !10339, !10340}
!10336 = !DILocalVariable(name: "dev", arg: 1, scope: !10334, file: !1527, line: 523, type: !1387)
!10337 = !DILocalVariable(name: "pin", arg: 2, scope: !10334, file: !1527, line: 524, type: !1402)
!10338 = !DILocalVariable(name: "flags", arg: 3, scope: !10334, file: !1527, line: 524, type: !1403)
!10339 = !DILocalVariable(name: "err", scope: !10334, file: !1527, line: 526, type: !108)
!10340 = !DILocalVariable(name: "pincfg", scope: !10334, file: !1527, line: 527, type: !108)
!10341 = !DILocation(line: 0, scope: !10334)
!10342 = !DILocation(line: 527, column: 2, scope: !10334)
!10343 = !DILocation(line: 532, column: 8, scope: !10334)
!10344 = !DILocation(line: 533, column: 10, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10334, file: !1527, line: 533, column: 6)
!10346 = !DILocation(line: 533, column: 6, scope: !10334)
!10347 = !DILocation(line: 543, column: 13, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10334, file: !1527, line: 543, column: 6)
!10349 = !DILocation(line: 543, column: 28, scope: !10348)
!10350 = !DILocation(line: 543, column: 6, scope: !10334)
!10351 = !DILocation(line: 544, column: 14, scope: !10352)
!10352 = distinct !DILexicalBlock(scope: !10353, file: !1527, line: 544, column: 7)
!10353 = distinct !DILexicalBlock(scope: !10348, file: !1527, line: 543, column: 34)
!10354 = !DILocation(line: 544, column: 39, scope: !10352)
!10355 = !DILocation(line: 544, column: 7, scope: !10353)
!10356 = !DILocation(line: 545, column: 38, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !10352, file: !1527, line: 544, column: 45)
!10358 = !DILocation(line: 545, column: 4, scope: !10357)
!10359 = !DILocation(line: 546, column: 3, scope: !10357)
!10360 = !DILocation(line: 546, column: 21, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10352, file: !1527, line: 546, column: 14)
!10362 = !DILocation(line: 546, column: 45, scope: !10361)
!10363 = !DILocation(line: 546, column: 14, scope: !10352)
!10364 = !DILocation(line: 547, column: 40, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10361, file: !1527, line: 546, column: 51)
!10366 = !DILocation(line: 547, column: 4, scope: !10365)
!10367 = !DILocation(line: 548, column: 3, scope: !10365)
!10368 = !DILocation(line: 551, column: 32, scope: !10334)
!10369 = !DILocation(line: 551, column: 37, scope: !10334)
!10370 = !DILocation(line: 551, column: 2, scope: !10334)
!10371 = !DILocation(line: 554, column: 6, scope: !10334)
!10372 = !DILocation(line: 562, column: 1, scope: !10334)
!10373 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1527, file: !1527, line: 410, type: !10374, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10376)
!10374 = !DISubroutineType(types: !10375)
!10375 = !{!108, !1387, !1214}
!10376 = !{!10377, !10378, !10379, !10381}
!10377 = !DILocalVariable(name: "dev", arg: 1, scope: !10373, file: !1527, line: 410, type: !1387)
!10378 = !DILocalVariable(name: "value", arg: 2, scope: !10373, file: !1527, line: 410, type: !1214)
!10379 = !DILocalVariable(name: "cfg", scope: !10373, file: !1527, line: 412, type: !10380)
!10380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 32)
!10381 = !DILocalVariable(name: "gpio", scope: !10373, file: !1527, line: 413, type: !1460)
!10382 = !DILocation(line: 0, scope: !10373)
!10383 = !DILocation(line: 412, column: 45, scope: !10373)
!10384 = !DILocation(line: 413, column: 44, scope: !10373)
!10385 = !DILocation(line: 415, column: 11, scope: !10373)
!10386 = !DILocation(line: 415, column: 9, scope: !10373)
!10387 = !DILocation(line: 417, column: 2, scope: !10373)
!10388 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1527, file: !1527, line: 420, type: !1412, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10389)
!10389 = !{!10390, !10391, !10392, !10393, !10394, !10395}
!10390 = !DILocalVariable(name: "dev", arg: 1, scope: !10388, file: !1527, line: 420, type: !1387)
!10391 = !DILocalVariable(name: "mask", arg: 2, scope: !10388, file: !1527, line: 421, type: !1414)
!10392 = !DILocalVariable(name: "value", arg: 3, scope: !10388, file: !1527, line: 422, type: !1409)
!10393 = !DILocalVariable(name: "cfg", scope: !10388, file: !1527, line: 424, type: !10380)
!10394 = !DILocalVariable(name: "gpio", scope: !10388, file: !1527, line: 425, type: !1460)
!10395 = !DILocalVariable(name: "port_value", scope: !10388, file: !1527, line: 426, type: !113)
!10396 = !DILocation(line: 0, scope: !10388)
!10397 = !DILocation(line: 424, column: 45, scope: !10388)
!10398 = !DILocation(line: 425, column: 44, scope: !10388)
!10399 = !DILocation(line: 430, column: 15, scope: !10388)
!10400 = !DILocation(line: 431, column: 46, scope: !10388)
!10401 = !DILocation(line: 431, column: 44, scope: !10388)
!10402 = !DILocation(line: 431, column: 61, scope: !10388)
!10403 = !DILocation(line: 431, column: 53, scope: !10388)
!10404 = !DILocation(line: 431, column: 2, scope: !10388)
!10405 = !DILocation(line: 435, column: 2, scope: !10388)
!10406 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1527, file: !1527, line: 438, type: !1417, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10407)
!10407 = !{!10408, !10409, !10410, !10411}
!10408 = !DILocalVariable(name: "dev", arg: 1, scope: !10406, file: !1527, line: 438, type: !1387)
!10409 = !DILocalVariable(name: "pins", arg: 2, scope: !10406, file: !1527, line: 439, type: !1414)
!10410 = !DILocalVariable(name: "cfg", scope: !10406, file: !1527, line: 441, type: !10380)
!10411 = !DILocalVariable(name: "gpio", scope: !10406, file: !1527, line: 442, type: !1460)
!10412 = !DILocation(line: 0, scope: !10406)
!10413 = !DILocation(line: 441, column: 45, scope: !10406)
!10414 = !DILocation(line: 442, column: 44, scope: !10406)
!10415 = !DILocation(line: 448, column: 2, scope: !10406)
!10416 = !DILocation(line: 450, column: 2, scope: !10406)
!10417 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1527, file: !1527, line: 453, type: !1417, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10418)
!10418 = !{!10419, !10420, !10421, !10422}
!10419 = !DILocalVariable(name: "dev", arg: 1, scope: !10417, file: !1527, line: 453, type: !1387)
!10420 = !DILocalVariable(name: "pins", arg: 2, scope: !10417, file: !1527, line: 454, type: !1414)
!10421 = !DILocalVariable(name: "cfg", scope: !10417, file: !1527, line: 456, type: !10380)
!10422 = !DILocalVariable(name: "gpio", scope: !10417, file: !1527, line: 457, type: !1460)
!10423 = !DILocation(line: 0, scope: !10417)
!10424 = !DILocation(line: 456, column: 45, scope: !10417)
!10425 = !DILocation(line: 457, column: 44, scope: !10417)
!10426 = !DILocation(line: 467, column: 2, scope: !10417)
!10427 = !DILocation(line: 470, column: 2, scope: !10417)
!10428 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1527, file: !1527, line: 473, type: !1417, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10429)
!10429 = !{!10430, !10431, !10432, !10433}
!10430 = !DILocalVariable(name: "dev", arg: 1, scope: !10428, file: !1527, line: 473, type: !1387)
!10431 = !DILocalVariable(name: "pins", arg: 2, scope: !10428, file: !1527, line: 474, type: !1414)
!10432 = !DILocalVariable(name: "cfg", scope: !10428, file: !1527, line: 476, type: !10380)
!10433 = !DILocalVariable(name: "gpio", scope: !10428, file: !1527, line: 477, type: !1460)
!10434 = !DILocation(line: 0, scope: !10428)
!10435 = !DILocation(line: 476, column: 45, scope: !10428)
!10436 = !DILocation(line: 477, column: 44, scope: !10428)
!10437 = !DILocation(line: 484, column: 2, scope: !10428)
!10438 = !DILocation(line: 487, column: 2, scope: !10428)
!10439 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1527, file: !1527, line: 594, type: !1423, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10440)
!10440 = !{!10441, !10442, !10443, !10444, !10445, !10446, !10448, !10449, !10450}
!10441 = !DILocalVariable(name: "dev", arg: 1, scope: !10439, file: !1527, line: 594, type: !1387)
!10442 = !DILocalVariable(name: "pin", arg: 2, scope: !10439, file: !1527, line: 595, type: !1402)
!10443 = !DILocalVariable(name: "mode", arg: 3, scope: !10439, file: !1527, line: 596, type: !1361)
!10444 = !DILocalVariable(name: "trig", arg: 4, scope: !10439, file: !1527, line: 597, type: !1367)
!10445 = !DILocalVariable(name: "cfg", scope: !10439, file: !1527, line: 599, type: !10380)
!10446 = !DILocalVariable(name: "data", scope: !10439, file: !1527, line: 600, type: !10447)
!10447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 32)
!10448 = !DILocalVariable(name: "edge", scope: !10439, file: !1527, line: 601, type: !108)
!10449 = !DILocalVariable(name: "err", scope: !10439, file: !1527, line: 602, type: !108)
!10450 = !DILabel(scope: !10439, name: "exit", file: !1527, line: 643)
!10451 = !DILocation(line: 0, scope: !10439)
!10452 = !DILocation(line: 599, column: 45, scope: !10439)
!10453 = !DILocation(line: 604, column: 6, scope: !10439)
!10454 = !DILocation(line: 605, column: 34, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10456, file: !1527, line: 605, column: 7)
!10456 = distinct !DILexicalBlock(scope: !10457, file: !1527, line: 604, column: 38)
!10457 = distinct !DILexicalBlock(scope: !10439, file: !1527, line: 604, column: 6)
!10458 = !DILocation(line: 605, column: 7, scope: !10455)
!10459 = !DILocation(line: 605, column: 47, scope: !10455)
!10460 = !DILocation(line: 605, column: 39, scope: !10455)
!10461 = !DILocation(line: 605, column: 7, scope: !10456)
!10462 = !DILocation(line: 606, column: 4, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10455, file: !1527, line: 605, column: 53)
!10464 = !DILocation(line: 607, column: 4, scope: !10463)
!10465 = !DILocation(line: 608, column: 4, scope: !10463)
!10466 = !DILocation(line: 609, column: 3, scope: !10463)
!10467 = !DILocation(line: 600, column: 38, scope: !10439)
!10468 = !DILocation(line: 620, column: 30, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10439, file: !1527, line: 620, column: 6)
!10470 = !DILocation(line: 620, column: 6, scope: !10469)
!10471 = !DILocation(line: 620, column: 57, scope: !10469)
!10472 = !DILocation(line: 620, column: 6, scope: !10439)
!10473 = !DILocation(line: 625, column: 29, scope: !10439)
!10474 = !DILocation(line: 625, column: 2, scope: !10439)
!10475 = !DILocation(line: 627, column: 2, scope: !10439)
!10476 = !DILocation(line: 630, column: 3, scope: !10477)
!10477 = distinct !DILexicalBlock(scope: !10439, file: !1527, line: 627, column: 16)
!10478 = !DILocation(line: 633, column: 3, scope: !10477)
!10479 = !DILocation(line: 636, column: 3, scope: !10477)
!10480 = !DILocation(line: 639, column: 2, scope: !10439)
!10481 = !DILocation(line: 641, column: 2, scope: !10439)
!10482 = !DILocation(line: 643, column: 1, scope: !10439)
!10483 = !DILocation(line: 644, column: 2, scope: !10439)
!10484 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1527, file: !1527, line: 647, type: !1427, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10485)
!10485 = !{!10486, !10487, !10488, !10489}
!10486 = !DILocalVariable(name: "dev", arg: 1, scope: !10484, file: !1527, line: 647, type: !1387)
!10487 = !DILocalVariable(name: "callback", arg: 2, scope: !10484, file: !1527, line: 648, type: !1429)
!10488 = !DILocalVariable(name: "set", arg: 3, scope: !10484, file: !1527, line: 649, type: !422)
!10489 = !DILocalVariable(name: "data", scope: !10484, file: !1527, line: 651, type: !10447)
!10490 = !DILocation(line: 0, scope: !10484)
!10491 = !DILocation(line: 651, column: 38, scope: !10484)
!10492 = !DILocation(line: 653, column: 37, scope: !10484)
!10493 = !DILocation(line: 653, column: 9, scope: !10484)
!10494 = !DILocation(line: 653, column: 2, scope: !10484)
!10495 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10496, file: !10496, line: 38, type: !10497, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10500)
!10496 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10497 = !DISubroutineType(types: !10498)
!10498 = !{!108, !10499, !1429, !422}
!10499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 32)
!10500 = !{!10501, !10502, !10503}
!10501 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10495, file: !10496, line: 38, type: !10499)
!10502 = !DILocalVariable(name: "callback", arg: 2, scope: !10495, file: !10496, line: 39, type: !1429)
!10503 = !DILocalVariable(name: "set", arg: 3, scope: !10495, file: !10496, line: 40, type: !422)
!10504 = !DILocation(line: 0, scope: !10495)
!10505 = !DILocation(line: 45, column: 7, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10495, file: !10496, line: 45, column: 6)
!10507 = !DILocation(line: 45, column: 6, scope: !10495)
!10508 = !DILocation(line: 46, column: 56, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10510, file: !10496, line: 46, column: 7)
!10510 = distinct !DILexicalBlock(scope: !10506, file: !10496, line: 45, column: 38)
!10511 = !DILocation(line: 46, column: 8, scope: !10509)
!10512 = !DILocation(line: 46, column: 7, scope: !10510)
!10513 = !DILocation(line: 51, column: 13, scope: !10506)
!10514 = !DILocation(line: 56, column: 43, scope: !10515)
!10515 = distinct !DILexicalBlock(scope: !10516, file: !10496, line: 55, column: 11)
!10516 = distinct !DILexicalBlock(scope: !10495, file: !10496, line: 55, column: 6)
!10517 = !DILocation(line: 56, column: 3, scope: !10515)
!10518 = !DILocation(line: 57, column: 2, scope: !10515)
!10519 = !DILocation(line: 60, column: 1, scope: !10495)
!10520 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1434, file: !1434, line: 261, type: !10521, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10523)
!10521 = !DISubroutineType(types: !10522)
!10522 = !{!422, !10499}
!10523 = !{!10524}
!10524 = !DILocalVariable(name: "list", arg: 1, scope: !10520, file: !1434, line: 261, type: !10499)
!10525 = !DILocation(line: 0, scope: !10520)
!10526 = !DILocation(line: 261, column: 1, scope: !10520)
!10527 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1434, file: !1434, line: 417, type: !10528, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10530)
!10528 = !DISubroutineType(types: !10529)
!10529 = !{!422, !10499, !1603}
!10530 = !{!10531, !10532, !10533, !10534}
!10531 = !DILocalVariable(name: "list", arg: 1, scope: !10527, file: !1434, line: 417, type: !10499)
!10532 = !DILocalVariable(name: "node", arg: 2, scope: !10527, file: !1434, line: 417, type: !1603)
!10533 = !DILocalVariable(name: "prev", scope: !10527, file: !1434, line: 417, type: !1603)
!10534 = !DILocalVariable(name: "test", scope: !10527, file: !1434, line: 417, type: !1603)
!10535 = !DILocation(line: 0, scope: !10527)
!10536 = !DILocation(line: 417, column: 1, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10527, file: !1434, line: 417, column: 1)
!10538 = !DILocation(line: 417, column: 1, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10537, file: !1434, line: 417, column: 1)
!10540 = !DILocation(line: 417, column: 1, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10542, file: !1434, line: 417, column: 1)
!10542 = distinct !DILexicalBlock(scope: !10539, file: !1434, line: 417, column: 1)
!10543 = !DILocation(line: 417, column: 1, scope: !10542)
!10544 = distinct !{!10544, !10536, !10536}
!10545 = !DILocation(line: 417, column: 1, scope: !10546)
!10546 = distinct !DILexicalBlock(scope: !10541, file: !1434, line: 417, column: 1)
!10547 = !DILocation(line: 417, column: 1, scope: !10527)
!10548 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1434, file: !1434, line: 298, type: !10549, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10551)
!10549 = !DISubroutineType(types: !10550)
!10550 = !{null, !10499, !1603}
!10551 = !{!10552, !10553}
!10552 = !DILocalVariable(name: "list", arg: 1, scope: !10548, file: !1434, line: 298, type: !10499)
!10553 = !DILocalVariable(name: "node", arg: 2, scope: !10548, file: !1434, line: 298, type: !1603)
!10554 = !DILocation(line: 0, scope: !10548)
!10555 = !DILocation(line: 298, column: 1, scope: !10548)
!10556 = !DILocation(line: 298, column: 1, scope: !10557)
!10557 = distinct !DILexicalBlock(scope: !10548, file: !1434, line: 298, column: 1)
!10558 = !DILocation(line: 298, column: 1, scope: !10559)
!10559 = distinct !DILexicalBlock(scope: !10557, file: !1434, line: 298, column: 1)
!10560 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1434, file: !1434, line: 231, type: !10561, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10563)
!10561 = !DISubroutineType(types: !10562)
!10562 = !{!1603, !10499}
!10563 = !{!10564}
!10564 = !DILocalVariable(name: "list", arg: 1, scope: !10560, file: !1434, line: 231, type: !10499)
!10565 = !DILocation(line: 0, scope: !10560)
!10566 = !DILocation(line: 233, column: 15, scope: !10560)
!10567 = !DILocation(line: 233, column: 2, scope: !10560)
!10568 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1434, file: !1434, line: 209, type: !10569, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10571)
!10569 = !DISubroutineType(types: !10570)
!10570 = !{null, !1603, !1603}
!10571 = !{!10572, !10573}
!10572 = !DILocalVariable(name: "parent", arg: 1, scope: !10568, file: !1434, line: 209, type: !1603)
!10573 = !DILocalVariable(name: "child", arg: 2, scope: !10568, file: !1434, line: 209, type: !1603)
!10574 = !DILocation(line: 0, scope: !10568)
!10575 = !DILocation(line: 211, column: 10, scope: !10568)
!10576 = !DILocation(line: 211, column: 15, scope: !10568)
!10577 = !DILocation(line: 212, column: 1, scope: !10568)
!10578 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1434, file: !1434, line: 214, type: !10549, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10579)
!10579 = !{!10580, !10581}
!10580 = !DILocalVariable(name: "list", arg: 1, scope: !10578, file: !1434, line: 214, type: !10499)
!10581 = !DILocalVariable(name: "node", arg: 2, scope: !10578, file: !1434, line: 214, type: !1603)
!10582 = !DILocation(line: 0, scope: !10578)
!10583 = !DILocation(line: 216, column: 8, scope: !10578)
!10584 = !DILocation(line: 216, column: 13, scope: !10578)
!10585 = !DILocation(line: 217, column: 1, scope: !10578)
!10586 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1434, file: !1434, line: 243, type: !10561, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10587)
!10587 = !{!10588}
!10588 = !DILocalVariable(name: "list", arg: 1, scope: !10586, file: !1434, line: 243, type: !10499)
!10589 = !DILocation(line: 0, scope: !10586)
!10590 = !DILocation(line: 245, column: 15, scope: !10586)
!10591 = !DILocation(line: 245, column: 2, scope: !10586)
!10592 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1434, file: !1434, line: 219, type: !10549, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10593)
!10593 = !{!10594, !10595}
!10594 = !DILocalVariable(name: "list", arg: 1, scope: !10592, file: !1434, line: 219, type: !10499)
!10595 = !DILocalVariable(name: "node", arg: 2, scope: !10592, file: !1434, line: 219, type: !1603)
!10596 = !DILocation(line: 0, scope: !10592)
!10597 = !DILocation(line: 221, column: 8, scope: !10592)
!10598 = !DILocation(line: 221, column: 13, scope: !10592)
!10599 = !DILocation(line: 222, column: 1, scope: !10592)
!10600 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1434, file: !1434, line: 401, type: !10601, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10603)
!10601 = !DISubroutineType(types: !10602)
!10602 = !{null, !10499, !1603, !1603}
!10603 = !{!10604, !10605, !10606}
!10604 = !DILocalVariable(name: "list", arg: 1, scope: !10600, file: !1434, line: 401, type: !10499)
!10605 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10600, file: !1434, line: 401, type: !1603)
!10606 = !DILocalVariable(name: "node", arg: 3, scope: !10600, file: !1434, line: 401, type: !1603)
!10607 = !DILocation(line: 0, scope: !10600)
!10608 = !DILocation(line: 401, column: 1, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10600, file: !1434, line: 401, column: 1)
!10610 = !DILocation(line: 0, scope: !10609)
!10611 = !DILocation(line: 401, column: 1, scope: !10600)
!10612 = !DILocation(line: 401, column: 1, scope: !10613)
!10613 = distinct !DILexicalBlock(scope: !10609, file: !1434, line: 401, column: 1)
!10614 = !DILocation(line: 401, column: 1, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10613, file: !1434, line: 401, column: 1)
!10616 = !DILocation(line: 401, column: 1, scope: !10617)
!10617 = distinct !DILexicalBlock(scope: !10615, file: !1434, line: 401, column: 1)
!10618 = !DILocation(line: 401, column: 1, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10609, file: !1434, line: 401, column: 1)
!10620 = !DILocation(line: 401, column: 1, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10619, file: !1434, line: 401, column: 1)
!10622 = !DILocation(line: 401, column: 1, scope: !10623)
!10623 = distinct !DILexicalBlock(scope: !10621, file: !1434, line: 401, column: 1)
!10624 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1434, file: !1434, line: 285, type: !10625, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10627)
!10625 = !DISubroutineType(types: !10626)
!10626 = !{!1603, !1603}
!10627 = !{!10628}
!10628 = !DILocalVariable(name: "node", arg: 1, scope: !10624, file: !1434, line: 285, type: !1603)
!10629 = !DILocation(line: 0, scope: !10624)
!10630 = !DILocation(line: 285, column: 1, scope: !10624)
!10631 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1434, file: !1434, line: 274, type: !10625, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10632)
!10632 = !{!10633}
!10633 = !DILocalVariable(name: "node", arg: 1, scope: !10631, file: !1434, line: 274, type: !1603)
!10634 = !DILocation(line: 0, scope: !10631)
!10635 = !DILocation(line: 274, column: 1, scope: !10631)
!10636 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1434, file: !1434, line: 204, type: !10625, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10637)
!10637 = !{!10638}
!10638 = !DILocalVariable(name: "node", arg: 1, scope: !10636, file: !1434, line: 204, type: !1603)
!10639 = !DILocation(line: 0, scope: !10636)
!10640 = !DILocation(line: 206, column: 15, scope: !10636)
!10641 = !DILocation(line: 206, column: 2, scope: !10636)
!10642 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1527, file: !1527, line: 342, type: !561, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10643)
!10643 = !{!10644, !10645, !10646}
!10644 = !DILocalVariable(name: "pin", arg: 1, scope: !10642, file: !1527, line: 342, type: !108)
!10645 = !DILocalVariable(name: "line", scope: !10642, file: !1527, line: 344, type: !113)
!10646 = !DILocalVariable(name: "port", scope: !10642, file: !1527, line: 345, type: !108)
!10647 = !DILocation(line: 0, scope: !10642)
!10648 = !DILocation(line: 344, column: 18, scope: !10642)
!10649 = !{i32 983040, i32 0}
!10650 = !DILocation(line: 356, column: 9, scope: !10642)
!10651 = !DILocation(line: 370, column: 2, scope: !10642)
!10652 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1527, file: !1527, line: 37, type: !1109, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10653)
!10653 = !{!10654, !10655, !10656}
!10654 = !DILocalVariable(name: "line", arg: 1, scope: !10652, file: !1527, line: 37, type: !108)
!10655 = !DILocalVariable(name: "arg", arg: 2, scope: !10652, file: !1527, line: 37, type: !104)
!10656 = !DILocalVariable(name: "data", scope: !10652, file: !1527, line: 39, type: !10447)
!10657 = !DILocation(line: 0, scope: !10652)
!10658 = !DILocation(line: 41, column: 29, scope: !10652)
!10659 = !DILocation(line: 41, column: 39, scope: !10652)
!10660 = !DILocation(line: 41, column: 44, scope: !10652)
!10661 = !DILocation(line: 41, column: 2, scope: !10652)
!10662 = !DILocation(line: 42, column: 1, scope: !10652)
!10663 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1527, file: !1527, line: 376, type: !10664, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10666)
!10664 = !DISubroutineType(types: !10665)
!10665 = !{!108, !108, !108}
!10666 = !{!10667, !10668, !10669, !10671, !10672}
!10667 = !DILocalVariable(name: "port", arg: 1, scope: !10663, file: !1527, line: 376, type: !108)
!10668 = !DILocalVariable(name: "pin", arg: 2, scope: !10663, file: !1527, line: 376, type: !108)
!10669 = !DILocalVariable(name: "clk", scope: !10663, file: !1527, line: 386, type: !10670)
!10670 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1387)
!10671 = !DILocalVariable(name: "pclken", scope: !10663, file: !1527, line: 387, type: !1646)
!10672 = !DILocalVariable(name: "ret", scope: !10663, file: !1527, line: 396, type: !108)
!10673 = !DILocation(line: 0, scope: !10663)
!10674 = !DILocation(line: 387, column: 2, scope: !10663)
!10675 = !DILocation(line: 387, column: 22, scope: !10663)
!10676 = !DILocation(line: 399, column: 8, scope: !10663)
!10677 = !DILocation(line: 400, column: 10, scope: !10678)
!10678 = distinct !DILexicalBlock(scope: !10663, file: !1527, line: 400, column: 6)
!10679 = !DILocation(line: 400, column: 6, scope: !10663)
!10680 = !DILocation(line: 405, column: 2, scope: !10663)
!10681 = !DILocation(line: 407, column: 2, scope: !10663)
!10682 = !DILocation(line: 408, column: 1, scope: !10663)
!10683 = distinct !DISubprogram(name: "clock_control_on", scope: !1163, file: !1163, line: 123, type: !1492, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10684)
!10684 = !{!10685, !10686, !10687}
!10685 = !DILocalVariable(name: "dev", arg: 1, scope: !10683, file: !1163, line: 123, type: !1387)
!10686 = !DILocalVariable(name: "sys", arg: 2, scope: !10683, file: !1163, line: 124, type: !1258)
!10687 = !DILocalVariable(name: "api", scope: !10683, file: !1163, line: 126, type: !1485)
!10688 = !DILocation(line: 0, scope: !10683)
!10689 = !DILocation(line: 127, column: 49, scope: !10683)
!10690 = !DILocation(line: 129, column: 14, scope: !10683)
!10691 = !DILocation(line: 129, column: 9, scope: !10683)
!10692 = !DILocation(line: 129, column: 2, scope: !10683)
!10693 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1527, file: !1527, line: 311, type: !9812, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10694)
!10694 = !{!10695, !10696, !10697}
!10695 = !DILocalVariable(name: "port", arg: 1, scope: !10693, file: !1527, line: 311, type: !108)
!10696 = !DILocalVariable(name: "pin", arg: 2, scope: !10693, file: !1527, line: 311, type: !108)
!10697 = !DILocalVariable(name: "line", scope: !10693, file: !1527, line: 313, type: !113)
!10698 = !DILocation(line: 0, scope: !10693)
!10699 = !DILocation(line: 313, column: 18, scope: !10693)
!10700 = !DILocation(line: 337, column: 2, scope: !10693)
!10701 = !DILocation(line: 340, column: 1, scope: !10693)
!10702 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1527, file: !1527, line: 295, type: !10703, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10705)
!10703 = !DISubroutineType(types: !10704)
!10704 = !{!113, !108}
!10705 = !{!10706}
!10706 = !DILocalVariable(name: "pin", arg: 1, scope: !10702, file: !1527, line: 295, type: !108)
!10707 = !DILocation(line: 0, scope: !10702)
!10708 = !DILocation(line: 307, column: 46, scope: !10702)
!10709 = !DILocation(line: 307, column: 27, scope: !10702)
!10710 = !DILocation(line: 307, column: 32, scope: !10702)
!10711 = !DILocation(line: 307, column: 14, scope: !10702)
!10712 = !DILocation(line: 307, column: 39, scope: !10702)
!10713 = !DILocation(line: 307, column: 2, scope: !10702)
!10714 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6786, file: !6786, line: 671, type: !10715, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10717)
!10715 = !DISubroutineType(types: !10716)
!10716 = !{null, !113, !113}
!10717 = !{!10718, !10719}
!10718 = !DILocalVariable(name: "Port", arg: 1, scope: !10714, file: !6786, line: 671, type: !113)
!10719 = !DILocalVariable(name: "Line", arg: 2, scope: !10714, file: !6786, line: 671, type: !113)
!10720 = !DILocation(line: 0, scope: !10714)
!10721 = !DILocation(line: 673, column: 3, scope: !10714)
!10722 = !DILocalVariable(name: "value", arg: 1, scope: !10723, file: !7083, line: 373, type: !113)
!10723 = distinct !DISubprogram(name: "__RBIT", scope: !7083, file: !7083, line: 373, type: !8329, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10724)
!10724 = !{!10722, !10725}
!10725 = !DILocalVariable(name: "result", scope: !10723, file: !7083, line: 375, type: !113)
!10726 = !DILocation(line: 0, scope: !10723, inlinedAt: !10727)
!10727 = distinct !DILocation(line: 673, column: 3, scope: !10714)
!10728 = !DILocation(line: 380, column: 4, scope: !10723, inlinedAt: !10727)
!10729 = !{i64 2934995}
!10730 = !DILocalVariable(name: "value", arg: 1, scope: !10731, file: !7083, line: 403, type: !113)
!10731 = distinct !DISubprogram(name: "__CLZ", scope: !7083, file: !7083, line: 403, type: !10732, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10734)
!10732 = !DISubroutineType(types: !10733)
!10733 = !{!164, !113}
!10734 = !{!10730}
!10735 = !DILocation(line: 0, scope: !10731, inlinedAt: !10736)
!10736 = distinct !DILocation(line: 673, column: 3, scope: !10714)
!10737 = !DILocation(line: 414, column: 7, scope: !10731, inlinedAt: !10736)
!10738 = !DILocation(line: 674, column: 1, scope: !10714)
!10739 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10496, file: !10496, line: 69, type: !10740, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10742)
!10740 = !DISubroutineType(types: !10741)
!10741 = !{null, !10499, !1387, !113}
!10742 = !{!10743, !10744, !10745, !10746, !10747}
!10743 = !DILocalVariable(name: "list", arg: 1, scope: !10739, file: !10496, line: 69, type: !10499)
!10744 = !DILocalVariable(name: "port", arg: 2, scope: !10739, file: !10496, line: 70, type: !1387)
!10745 = !DILocalVariable(name: "pins", arg: 3, scope: !10739, file: !10496, line: 71, type: !113)
!10746 = !DILocalVariable(name: "cb", scope: !10739, file: !10496, line: 73, type: !1429)
!10747 = !DILocalVariable(name: "tmp", scope: !10739, file: !10496, line: 73, type: !1429)
!10748 = !DILocation(line: 0, scope: !10739)
!10749 = !DILocation(line: 75, column: 2, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !10739, file: !10496, line: 75, column: 2)
!10751 = !DILocation(line: 0, scope: !10750)
!10752 = !DILocation(line: 76, column: 11, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10754, file: !10496, line: 76, column: 7)
!10754 = distinct !DILexicalBlock(scope: !10755, file: !10496, line: 75, column: 57)
!10755 = distinct !DILexicalBlock(scope: !10750, file: !10496, line: 75, column: 2)
!10756 = !DILocation(line: 76, column: 20, scope: !10753)
!10757 = !DILocation(line: 76, column: 7, scope: !10754)
!10758 = !DILocation(line: 78, column: 8, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10753, file: !10496, line: 76, column: 28)
!10760 = !DILocation(line: 78, column: 4, scope: !10759)
!10761 = !DILocation(line: 79, column: 3, scope: !10759)
!10762 = !DILocation(line: 75, column: 2, scope: !10755)
!10763 = !DILocation(line: 81, column: 1, scope: !10739)
!10764 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6786, file: !6786, line: 710, type: !8329, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10765)
!10765 = !{!10766}
!10766 = !DILocalVariable(name: "Line", arg: 1, scope: !10764, file: !6786, line: 710, type: !113)
!10767 = !DILocation(line: 0, scope: !10764)
!10768 = !DILocation(line: 712, column: 21, scope: !10764)
!10769 = !DILocation(line: 0, scope: !10723, inlinedAt: !10770)
!10770 = distinct !DILocation(line: 712, column: 76, scope: !10764)
!10771 = !DILocation(line: 380, column: 4, scope: !10723, inlinedAt: !10770)
!10772 = !DILocation(line: 0, scope: !10731, inlinedAt: !10773)
!10773 = distinct !DILocation(line: 712, column: 76, scope: !10764)
!10774 = !DILocation(line: 414, column: 7, scope: !10731, inlinedAt: !10773)
!10775 = !DILocation(line: 712, column: 73, scope: !10764)
!10776 = !DILocation(line: 712, column: 3, scope: !10764)
!10777 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10778, file: !10778, line: 910, type: !10779, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10781)
!10778 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10779 = !DISubroutineType(types: !10780)
!10780 = !{null, !1460, !113}
!10781 = !{!10782, !10783}
!10782 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10777, file: !10778, line: 910, type: !1460)
!10783 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10777, file: !10778, line: 910, type: !113)
!10784 = !DILocation(line: 0, scope: !10777)
!10785 = !DILocation(line: 912, column: 3, scope: !10777)
!10786 = !DILocation(line: 913, column: 1, scope: !10777)
!10787 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10778, file: !10778, line: 823, type: !10788, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10790)
!10788 = !DISubroutineType(types: !10789)
!10789 = !{!113, !1460}
!10790 = !{!10791}
!10791 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10787, file: !10778, line: 823, type: !1460)
!10792 = !DILocation(line: 0, scope: !10787)
!10793 = !DILocation(line: 825, column: 21, scope: !10787)
!10794 = !DILocation(line: 825, column: 3, scope: !10787)
!10795 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10778, file: !10778, line: 812, type: !10779, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10796)
!10796 = !{!10797, !10798}
!10797 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10795, file: !10778, line: 812, type: !1460)
!10798 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10795, file: !10778, line: 812, type: !113)
!10799 = !DILocation(line: 0, scope: !10795)
!10800 = !DILocation(line: 814, column: 3, scope: !10795)
!10801 = !DILocation(line: 815, column: 1, scope: !10795)
!10802 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10778, file: !10778, line: 771, type: !10788, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10803)
!10803 = !{!10804}
!10804 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10802, file: !10778, line: 771, type: !1460)
!10805 = !DILocation(line: 0, scope: !10802)
!10806 = !DILocation(line: 773, column: 21, scope: !10802)
!10807 = !DILocation(line: 773, column: 3, scope: !10802)
!10808 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1527, file: !1527, line: 47, type: !10809, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10811)
!10809 = !DISubroutineType(types: !10810)
!10810 = !{!108, !1403, !542}
!10811 = !{!10812, !10813}
!10812 = !DILocalVariable(name: "flags", arg: 1, scope: !10808, file: !1527, line: 47, type: !1403)
!10813 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10808, file: !1527, line: 47, type: !542)
!10814 = !DILocation(line: 0, scope: !10808)
!10815 = !DILocation(line: 50, column: 13, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10808, file: !1527, line: 50, column: 6)
!10817 = !DILocation(line: 50, column: 28, scope: !10816)
!10818 = !DILocation(line: 50, column: 6, scope: !10808)
!10819 = !DILocation(line: 53, column: 11, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10816, file: !1527, line: 50, column: 34)
!10821 = !DILocation(line: 55, column: 14, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !10820, file: !1527, line: 55, column: 7)
!10823 = !DILocation(line: 55, column: 35, scope: !10822)
!10824 = !DILocation(line: 55, column: 7, scope: !10820)
!10825 = !DILocation(line: 56, column: 14, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !10827, file: !1527, line: 56, column: 8)
!10827 = distinct !DILexicalBlock(scope: !10822, file: !1527, line: 55, column: 41)
!10828 = !DILocation(line: 56, column: 8, scope: !10827)
!10829 = !DILocation(line: 0, scope: !10822)
!10830 = !DILocation(line: 66, column: 14, scope: !10831)
!10831 = distinct !DILexicalBlock(scope: !10820, file: !1527, line: 66, column: 7)
!10832 = !DILocation(line: 66, column: 30, scope: !10831)
!10833 = !DILocation(line: 66, column: 7, scope: !10820)
!10834 = !DILocation(line: 67, column: 12, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10831, file: !1527, line: 66, column: 36)
!10836 = !DILocation(line: 68, column: 3, scope: !10835)
!10837 = !DILocation(line: 68, column: 21, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10831, file: !1527, line: 68, column: 14)
!10839 = !DILocation(line: 68, column: 39, scope: !10838)
!10840 = !DILocation(line: 68, column: 14, scope: !10831)
!10841 = !DILocation(line: 69, column: 12, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10838, file: !1527, line: 68, column: 45)
!10843 = !DILocation(line: 70, column: 3, scope: !10842)
!10844 = !DILocation(line: 72, column: 21, scope: !10845)
!10845 = distinct !DILexicalBlock(scope: !10816, file: !1527, line: 72, column: 14)
!10846 = !DILocation(line: 72, column: 35, scope: !10845)
!10847 = !DILocation(line: 72, column: 14, scope: !10816)
!10848 = !DILocation(line: 77, column: 14, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10850, file: !1527, line: 77, column: 7)
!10850 = distinct !DILexicalBlock(scope: !10845, file: !1527, line: 72, column: 41)
!10851 = !DILocation(line: 77, column: 30, scope: !10849)
!10852 = !DILocation(line: 77, column: 7, scope: !10850)
!10853 = !DILocation(line: 0, scope: !10816)
!10854 = !DILocation(line: 90, column: 1, scope: !10808)
!10855 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1527, file: !1527, line: 157, type: !10856, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10858)
!10856 = !DISubroutineType(types: !10857)
!10857 = !{null, !1387, !108, !108, !108}
!10858 = !{!10859, !10860, !10861, !10862, !10863, !10864, !10865, !10866, !10867, !10868, !10869}
!10859 = !DILocalVariable(name: "dev", arg: 1, scope: !10855, file: !1527, line: 157, type: !1387)
!10860 = !DILocalVariable(name: "pin", arg: 2, scope: !10855, file: !1527, line: 157, type: !108)
!10861 = !DILocalVariable(name: "conf", arg: 3, scope: !10855, file: !1527, line: 158, type: !108)
!10862 = !DILocalVariable(name: "func", arg: 4, scope: !10855, file: !1527, line: 158, type: !108)
!10863 = !DILocalVariable(name: "cfg", scope: !10855, file: !1527, line: 160, type: !10380)
!10864 = !DILocalVariable(name: "gpio", scope: !10855, file: !1527, line: 161, type: !1460)
!10865 = !DILocalVariable(name: "pin_ll", scope: !10855, file: !1527, line: 163, type: !108)
!10866 = !DILocalVariable(name: "mode", scope: !10855, file: !1527, line: 227, type: !32)
!10867 = !DILocalVariable(name: "otype", scope: !10855, file: !1527, line: 227, type: !32)
!10868 = !DILocalVariable(name: "ospeed", scope: !10855, file: !1527, line: 227, type: !32)
!10869 = !DILocalVariable(name: "pupd", scope: !10855, file: !1527, line: 227, type: !32)
!10870 = !DILocation(line: 0, scope: !10855)
!10871 = !DILocation(line: 160, column: 45, scope: !10855)
!10872 = !DILocation(line: 161, column: 44, scope: !10855)
!10873 = !DILocation(line: 163, column: 15, scope: !10855)
!10874 = !DILocation(line: 229, column: 14, scope: !10855)
!10875 = !DILocation(line: 246, column: 47, scope: !10855)
!10876 = !DILocation(line: 246, column: 2, scope: !10855)
!10877 = !DILocation(line: 248, column: 43, scope: !10855)
!10878 = !DILocation(line: 248, column: 2, scope: !10855)
!10879 = !DILocation(line: 250, column: 40, scope: !10855)
!10880 = !DILocation(line: 250, column: 2, scope: !10855)
!10881 = !DILocation(line: 252, column: 11, scope: !10882)
!10882 = distinct !DILexicalBlock(scope: !10855, file: !1527, line: 252, column: 6)
!10883 = !DILocation(line: 252, column: 6, scope: !10855)
!10884 = !DILocation(line: 253, column: 11, scope: !10885)
!10885 = distinct !DILexicalBlock(scope: !10886, file: !1527, line: 253, column: 7)
!10886 = distinct !DILexicalBlock(scope: !10882, file: !1527, line: 252, column: 36)
!10887 = !DILocation(line: 253, column: 7, scope: !10886)
!10888 = !DILocation(line: 254, column: 4, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10885, file: !1527, line: 253, column: 16)
!10890 = !DILocation(line: 255, column: 3, scope: !10889)
!10891 = !DILocation(line: 256, column: 4, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10885, file: !1527, line: 255, column: 10)
!10893 = !DILocation(line: 260, column: 40, scope: !10855)
!10894 = !DILocation(line: 260, column: 2, scope: !10855)
!10895 = !DILocation(line: 265, column: 1, scope: !10855)
!10896 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1527, file: !1527, line: 137, type: !10703, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10897)
!10897 = !{!10898, !10899}
!10898 = !DILocalVariable(name: "pin", arg: 1, scope: !10896, file: !1527, line: 137, type: !108)
!10899 = !DILocalVariable(name: "pinval", scope: !10896, file: !1527, line: 139, type: !113)
!10900 = !DILocation(line: 0, scope: !10896)
!10901 = !DILocation(line: 149, column: 13, scope: !10896)
!10902 = !DILocation(line: 151, column: 2, scope: !10896)
!10903 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10778, file: !10778, line: 342, type: !10904, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10906)
!10904 = !DISubroutineType(types: !10905)
!10905 = !{null, !1460, !113, !113}
!10906 = !{!10907, !10908, !10909}
!10907 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10903, file: !10778, line: 342, type: !1460)
!10908 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10903, file: !10778, line: 342, type: !113)
!10909 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10903, file: !10778, line: 342, type: !113)
!10910 = !DILocation(line: 0, scope: !10903)
!10911 = !DILocation(line: 344, column: 3, scope: !10903)
!10912 = !DILocation(line: 345, column: 1, scope: !10903)
!10913 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10778, file: !10778, line: 413, type: !10904, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10914)
!10914 = !{!10915, !10916, !10917}
!10915 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10913, file: !10778, line: 413, type: !1460)
!10916 = !DILocalVariable(name: "Pin", arg: 2, scope: !10913, file: !10778, line: 413, type: !113)
!10917 = !DILocalVariable(name: "Speed", arg: 3, scope: !10913, file: !10778, line: 413, type: !113)
!10918 = !DILocation(line: 0, scope: !10913)
!10919 = !DILocation(line: 415, column: 3, scope: !10913)
!10920 = !DILocation(line: 0, scope: !10723, inlinedAt: !10921)
!10921 = distinct !DILocation(line: 415, column: 3, scope: !10913)
!10922 = !DILocation(line: 380, column: 4, scope: !10723, inlinedAt: !10921)
!10923 = !DILocation(line: 0, scope: !10731, inlinedAt: !10924)
!10924 = distinct !DILocation(line: 415, column: 3, scope: !10913)
!10925 = !DILocation(line: 414, column: 7, scope: !10731, inlinedAt: !10924)
!10926 = !DILocation(line: 0, scope: !10723, inlinedAt: !10927)
!10927 = distinct !DILocation(line: 415, column: 3, scope: !10913)
!10928 = !DILocation(line: 0, scope: !10731, inlinedAt: !10929)
!10929 = distinct !DILocation(line: 415, column: 3, scope: !10913)
!10930 = !DILocation(line: 417, column: 1, scope: !10913)
!10931 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10778, file: !10778, line: 484, type: !10904, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10932)
!10932 = !{!10933, !10934, !10935}
!10933 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10931, file: !10778, line: 484, type: !1460)
!10934 = !DILocalVariable(name: "Pin", arg: 2, scope: !10931, file: !10778, line: 484, type: !113)
!10935 = !DILocalVariable(name: "Pull", arg: 3, scope: !10931, file: !10778, line: 484, type: !113)
!10936 = !DILocation(line: 0, scope: !10931)
!10937 = !DILocation(line: 486, column: 3, scope: !10931)
!10938 = !DILocation(line: 0, scope: !10723, inlinedAt: !10939)
!10939 = distinct !DILocation(line: 486, column: 3, scope: !10931)
!10940 = !DILocation(line: 380, column: 4, scope: !10723, inlinedAt: !10939)
!10941 = !DILocation(line: 0, scope: !10731, inlinedAt: !10942)
!10942 = distinct !DILocation(line: 486, column: 3, scope: !10931)
!10943 = !DILocation(line: 414, column: 7, scope: !10731, inlinedAt: !10942)
!10944 = !DILocation(line: 0, scope: !10723, inlinedAt: !10945)
!10945 = distinct !DILocation(line: 486, column: 3, scope: !10931)
!10946 = !DILocation(line: 0, scope: !10731, inlinedAt: !10947)
!10947 = distinct !DILocation(line: 486, column: 3, scope: !10931)
!10948 = !DILocation(line: 487, column: 1, scope: !10931)
!10949 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10778, file: !10778, line: 556, type: !10904, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10950)
!10950 = !{!10951, !10952, !10953}
!10951 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10949, file: !10778, line: 556, type: !1460)
!10952 = !DILocalVariable(name: "Pin", arg: 2, scope: !10949, file: !10778, line: 556, type: !113)
!10953 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10949, file: !10778, line: 556, type: !113)
!10954 = !DILocation(line: 0, scope: !10949)
!10955 = !DILocation(line: 558, column: 3, scope: !10949)
!10956 = !DILocation(line: 0, scope: !10723, inlinedAt: !10957)
!10957 = distinct !DILocation(line: 558, column: 3, scope: !10949)
!10958 = !DILocation(line: 380, column: 4, scope: !10723, inlinedAt: !10957)
!10959 = !DILocation(line: 0, scope: !10731, inlinedAt: !10960)
!10960 = distinct !DILocation(line: 558, column: 3, scope: !10949)
!10961 = !DILocation(line: 414, column: 7, scope: !10731, inlinedAt: !10960)
!10962 = !DILocation(line: 0, scope: !10723, inlinedAt: !10963)
!10963 = distinct !DILocation(line: 558, column: 3, scope: !10949)
!10964 = !DILocation(line: 0, scope: !10731, inlinedAt: !10965)
!10965 = distinct !DILocation(line: 558, column: 3, scope: !10949)
!10966 = !DILocation(line: 560, column: 1, scope: !10949)
!10967 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10778, file: !10778, line: 633, type: !10904, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10968)
!10968 = !{!10969, !10970, !10971}
!10969 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10967, file: !10778, line: 633, type: !1460)
!10970 = !DILocalVariable(name: "Pin", arg: 2, scope: !10967, file: !10778, line: 633, type: !113)
!10971 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10967, file: !10778, line: 633, type: !113)
!10972 = !DILocation(line: 0, scope: !10967)
!10973 = !DILocation(line: 635, column: 3, scope: !10967)
!10974 = !DILocation(line: 0, scope: !10723, inlinedAt: !10975)
!10975 = distinct !DILocation(line: 635, column: 3, scope: !10967)
!10976 = !DILocation(line: 380, column: 4, scope: !10723, inlinedAt: !10975)
!10977 = !DILocation(line: 0, scope: !10731, inlinedAt: !10978)
!10978 = distinct !DILocation(line: 635, column: 3, scope: !10967)
!10979 = !DILocation(line: 414, column: 7, scope: !10731, inlinedAt: !10978)
!10980 = !DILocation(line: 0, scope: !10723, inlinedAt: !10981)
!10981 = distinct !DILocation(line: 635, column: 3, scope: !10967)
!10982 = !DILocation(line: 0, scope: !10731, inlinedAt: !10983)
!10983 = distinct !DILocation(line: 635, column: 3, scope: !10967)
!10984 = !DILocation(line: 637, column: 1, scope: !10967)
!10985 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10778, file: !10778, line: 273, type: !10904, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !10986)
!10986 = !{!10987, !10988, !10989}
!10987 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10985, file: !10778, line: 273, type: !1460)
!10988 = !DILocalVariable(name: "Pin", arg: 2, scope: !10985, file: !10778, line: 273, type: !113)
!10989 = !DILocalVariable(name: "Mode", arg: 3, scope: !10985, file: !10778, line: 273, type: !113)
!10990 = !DILocation(line: 0, scope: !10985)
!10991 = !DILocation(line: 275, column: 3, scope: !10985)
!10992 = !DILocation(line: 0, scope: !10723, inlinedAt: !10993)
!10993 = distinct !DILocation(line: 275, column: 3, scope: !10985)
!10994 = !DILocation(line: 380, column: 4, scope: !10723, inlinedAt: !10993)
!10995 = !DILocation(line: 0, scope: !10731, inlinedAt: !10996)
!10996 = distinct !DILocation(line: 275, column: 3, scope: !10985)
!10997 = !DILocation(line: 414, column: 7, scope: !10731, inlinedAt: !10996)
!10998 = !DILocation(line: 0, scope: !10723, inlinedAt: !10999)
!10999 = distinct !DILocation(line: 275, column: 3, scope: !10985)
!11000 = !DILocation(line: 0, scope: !10731, inlinedAt: !11001)
!11001 = distinct !DILocation(line: 275, column: 3, scope: !10985)
!11002 = !DILocation(line: 276, column: 1, scope: !10985)
!11003 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1527, file: !1527, line: 698, type: !1540, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !11004)
!11004 = !{!11005, !11006, !11007}
!11005 = !DILocalVariable(name: "dev", arg: 1, scope: !11003, file: !1527, line: 698, type: !1387)
!11006 = !DILocalVariable(name: "data", scope: !11003, file: !1527, line: 700, type: !10447)
!11007 = !DILocalVariable(name: "ret", scope: !11003, file: !1527, line: 701, type: !108)
!11008 = !DILocation(line: 0, scope: !11003)
!11009 = !DILocation(line: 700, column: 38, scope: !11003)
!11010 = !DILocation(line: 703, column: 8, scope: !11003)
!11011 = !DILocation(line: 703, column: 12, scope: !11003)
!11012 = !DILocation(line: 705, column: 7, scope: !11013)
!11013 = distinct !DILexicalBlock(scope: !11003, file: !1527, line: 705, column: 6)
!11014 = !DILocation(line: 705, column: 6, scope: !11003)
!11015 = !DILocation(line: 722, column: 8, scope: !11003)
!11016 = !DILocation(line: 723, column: 10, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !11003, file: !1527, line: 723, column: 6)
!11018 = !DILocation(line: 723, column: 6, scope: !11003)
!11019 = !DILocation(line: 731, column: 1, scope: !11003)
!11020 = distinct !DISubprogram(name: "device_is_ready", scope: !10227, file: !10227, line: 47, type: !11021, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !11023)
!11021 = !DISubroutineType(types: !11022)
!11022 = !{!422, !1387}
!11023 = !{!11024}
!11024 = !DILocalVariable(name: "dev", arg: 1, scope: !11020, file: !10227, line: 47, type: !1387)
!11025 = !DILocation(line: 0, scope: !11020)
!11026 = !DILocation(line: 55, column: 2, scope: !11027)
!11027 = distinct !DILexicalBlock(scope: !11020, file: !10227, line: 55, column: 2)
!11028 = !{i64 2154374369}
!11029 = !DILocation(line: 56, column: 9, scope: !11020)
!11030 = !DILocation(line: 56, column: 2, scope: !11020)
!11031 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1527, file: !1527, line: 270, type: !11032, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !11034)
!11032 = !DISubroutineType(types: !11033)
!11033 = !{!108, !1387, !422}
!11034 = !{!11035, !11036, !11037, !11038, !11039}
!11035 = !DILocalVariable(name: "dev", arg: 1, scope: !11031, file: !1527, line: 270, type: !1387)
!11036 = !DILocalVariable(name: "on", arg: 2, scope: !11031, file: !1527, line: 270, type: !422)
!11037 = !DILocalVariable(name: "cfg", scope: !11031, file: !1527, line: 272, type: !10380)
!11038 = !DILocalVariable(name: "ret", scope: !11031, file: !1527, line: 273, type: !108)
!11039 = !DILocalVariable(name: "clk", scope: !11031, file: !1527, line: 278, type: !10670)
!11040 = !DILocation(line: 0, scope: !11031)
!11041 = !DILocation(line: 272, column: 45, scope: !11031)
!11042 = !DILocation(line: 282, column: 38, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11044, file: !1527, line: 280, column: 10)
!11044 = distinct !DILexicalBlock(scope: !11031, file: !1527, line: 280, column: 6)
!11045 = !DILocation(line: 282, column: 6, scope: !11043)
!11046 = !DILocation(line: 281, column: 9, scope: !11043)
!11047 = !DILocation(line: 293, column: 1, scope: !11031)
!11048 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !11021, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !11049)
!11049 = !{!11050}
!11050 = !DILocalVariable(name: "dev", arg: 1, scope: !11048, file: !411, line: 730, type: !1387)
!11051 = !DILocation(line: 0, scope: !11048)
!11052 = !DILocation(line: 732, column: 9, scope: !11048)
!11053 = !DILocation(line: 732, column: 2, scope: !11048)
!11054 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1527, file: !1527, line: 496, type: !11055, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1358, retainedNodes: !11057)
!11055 = !DISubroutineType(types: !11056)
!11056 = !{!108, !1387, !108, !108, !108}
!11057 = !{!11058, !11059, !11060, !11061, !11062, !11063}
!11058 = !DILocalVariable(name: "dev", arg: 1, scope: !11054, file: !1527, line: 496, type: !1387)
!11059 = !DILocalVariable(name: "pin", arg: 2, scope: !11054, file: !1527, line: 496, type: !108)
!11060 = !DILocalVariable(name: "conf", arg: 3, scope: !11054, file: !1527, line: 496, type: !108)
!11061 = !DILocalVariable(name: "func", arg: 4, scope: !11054, file: !1527, line: 496, type: !108)
!11062 = !DILocalVariable(name: "ret", scope: !11054, file: !1527, line: 498, type: !108)
!11063 = !DILocalVariable(name: "gpio_out", scope: !11064, file: !1527, line: 508, type: !113)
!11064 = distinct !DILexicalBlock(scope: !11065, file: !1527, line: 507, column: 27)
!11065 = distinct !DILexicalBlock(scope: !11054, file: !1527, line: 507, column: 6)
!11066 = !DILocation(line: 0, scope: !11054)
!11067 = !DILocation(line: 505, column: 2, scope: !11054)
!11068 = !DILocation(line: 507, column: 11, scope: !11065)
!11069 = !DILocation(line: 507, column: 6, scope: !11054)
!11070 = !DILocation(line: 508, column: 28, scope: !11064)
!11071 = !DILocation(line: 0, scope: !11064)
!11072 = !DILocation(line: 510, column: 16, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11064, file: !1527, line: 510, column: 7)
!11074 = !DILocation(line: 0, scope: !11073)
!11075 = !DILocation(line: 510, column: 7, scope: !11064)
!11076 = !DILocation(line: 511, column: 4, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !11073, file: !1527, line: 510, column: 32)
!11078 = !DILocation(line: 512, column: 3, scope: !11077)
!11079 = !DILocation(line: 513, column: 4, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11081, file: !1527, line: 512, column: 39)
!11081 = distinct !DILexicalBlock(scope: !11073, file: !1527, line: 512, column: 14)
!11082 = !DILocation(line: 514, column: 3, scope: !11080)
!11083 = !DILocation(line: 518, column: 1, scope: !11054)
!11084 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1803, file: !1803, line: 526, type: !1706, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11085)
!11085 = !{!11086, !11087, !11088}
!11086 = !DILocalVariable(name: "dev", arg: 1, scope: !11084, file: !1803, line: 526, type: !1708)
!11087 = !DILocalVariable(name: "c", arg: 2, scope: !11084, file: !1803, line: 526, type: !1319)
!11088 = !DILocalVariable(name: "config", scope: !11084, file: !1803, line: 528, type: !11089)
!11089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 32)
!11090 = !DILocation(line: 0, scope: !11084)
!11091 = !DILocation(line: 528, column: 48, scope: !11084)
!11092 = !DILocation(line: 531, column: 40, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11084, file: !1803, line: 531, column: 6)
!11094 = !DILocation(line: 531, column: 6, scope: !11093)
!11095 = !DILocation(line: 531, column: 6, scope: !11084)
!11096 = !DILocation(line: 532, column: 34, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11093, file: !1803, line: 531, column: 48)
!11098 = !DILocation(line: 532, column: 3, scope: !11097)
!11099 = !DILocation(line: 533, column: 2, scope: !11097)
!11100 = !DILocation(line: 539, column: 42, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11084, file: !1803, line: 539, column: 6)
!11102 = !DILocation(line: 539, column: 7, scope: !11101)
!11103 = !DILocation(line: 539, column: 6, scope: !11084)
!11104 = !DILocation(line: 543, column: 52, scope: !11084)
!11105 = !DILocation(line: 543, column: 22, scope: !11084)
!11106 = !DILocation(line: 543, column: 5, scope: !11084)
!11107 = !DILocation(line: 545, column: 2, scope: !11084)
!11108 = !DILocation(line: 546, column: 1, scope: !11084)
!11109 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1803, file: !1803, line: 548, type: !1725, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11110)
!11110 = !{!11111, !11112, !11113, !11114}
!11111 = !DILocalVariable(name: "dev", arg: 1, scope: !11109, file: !1803, line: 548, type: !1708)
!11112 = !DILocalVariable(name: "c", arg: 2, scope: !11109, file: !1803, line: 549, type: !165)
!11113 = !DILocalVariable(name: "config", scope: !11109, file: !1803, line: 551, type: !11089)
!11114 = !DILocalVariable(name: "key", scope: !11109, file: !1803, line: 555, type: !32)
!11115 = !DILocation(line: 0, scope: !11109)
!11116 = !DILocation(line: 551, column: 48, scope: !11109)
!11117 = !DILocation(line: 562, column: 2, scope: !11109)
!11118 = !DILocation(line: 563, column: 41, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11120, file: !1803, line: 563, column: 7)
!11120 = distinct !DILexicalBlock(scope: !11109, file: !1803, line: 562, column: 12)
!11121 = !DILocation(line: 563, column: 7, scope: !11119)
!11122 = !DILocation(line: 563, column: 7, scope: !11120)
!11123 = !DILocation(line: 55, column: 2, scope: !11124, inlinedAt: !11128)
!11124 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4109, file: !4109, line: 42, type: !4110, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11125)
!11125 = !{!11126, !11127}
!11126 = !DILocalVariable(name: "key", scope: !11124, file: !4109, line: 44, type: !32)
!11127 = !DILocalVariable(name: "tmp", scope: !11124, file: !4109, line: 53, type: !32)
!11128 = distinct !DILocation(line: 564, column: 10, scope: !11129)
!11129 = distinct !DILexicalBlock(scope: !11119, file: !1803, line: 563, column: 49)
!11130 = !{i64 2103704}
!11131 = !DILocation(line: 0, scope: !11124, inlinedAt: !11128)
!11132 = !DILocation(line: 565, column: 42, scope: !11133)
!11133 = distinct !DILexicalBlock(scope: !11129, file: !1803, line: 565, column: 8)
!11134 = !DILocation(line: 565, column: 8, scope: !11133)
!11135 = !DILocation(line: 565, column: 8, scope: !11129)
!11136 = !DILocalVariable(name: "key", arg: 1, scope: !11137, file: !4109, line: 84, type: !32)
!11137 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4109, file: !4109, line: 84, type: !4122, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11138)
!11138 = !{!11136}
!11139 = !DILocation(line: 0, scope: !11137, inlinedAt: !11140)
!11140 = distinct !DILocation(line: 568, column: 4, scope: !11129)
!11141 = !DILocation(line: 95, column: 2, scope: !11137, inlinedAt: !11140)
!11142 = !{i64 2104521}
!11143 = !DILocation(line: 569, column: 3, scope: !11129)
!11144 = distinct !{!11144, !11117, !11145}
!11145 = !DILocation(line: 570, column: 2, scope: !11109)
!11146 = !DILocation(line: 592, column: 33, scope: !11109)
!11147 = !DILocation(line: 592, column: 2, scope: !11109)
!11148 = !DILocation(line: 0, scope: !11137, inlinedAt: !11149)
!11149 = distinct !DILocation(line: 593, column: 2, scope: !11109)
!11150 = !DILocation(line: 95, column: 2, scope: !11137, inlinedAt: !11149)
!11151 = !DILocation(line: 594, column: 1, scope: !11109)
!11152 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1803, file: !1803, line: 596, type: !1729, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11153)
!11153 = !{!11154, !11155, !11156}
!11154 = !DILocalVariable(name: "dev", arg: 1, scope: !11152, file: !1803, line: 596, type: !1708)
!11155 = !DILocalVariable(name: "config", scope: !11152, file: !1803, line: 598, type: !11089)
!11156 = !DILocalVariable(name: "err", scope: !11152, file: !1803, line: 599, type: !113)
!11157 = !DILocation(line: 0, scope: !11152)
!11158 = !DILocation(line: 598, column: 48, scope: !11152)
!11159 = !DILocation(line: 606, column: 40, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11152, file: !1803, line: 606, column: 6)
!11161 = !DILocation(line: 606, column: 6, scope: !11160)
!11162 = !DILocation(line: 606, column: 6, scope: !11152)
!11163 = !DILocation(line: 610, column: 39, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !11152, file: !1803, line: 610, column: 6)
!11165 = !DILocation(line: 610, column: 6, scope: !11164)
!11166 = !DILocation(line: 610, column: 6, scope: !11152)
!11167 = !DILocation(line: 614, column: 39, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11152, file: !1803, line: 614, column: 6)
!11169 = !DILocation(line: 614, column: 6, scope: !11168)
!11170 = !DILocation(line: 614, column: 6, scope: !11152)
!11171 = !DILocation(line: 619, column: 40, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11152, file: !1803, line: 619, column: 6)
!11173 = !DILocation(line: 619, column: 6, scope: !11172)
!11174 = !DILocation(line: 619, column: 6, scope: !11152)
!11175 = !DILocation(line: 623, column: 10, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11152, file: !1803, line: 623, column: 6)
!11177 = !DILocation(line: 623, column: 6, scope: !11152)
!11178 = !DILocation(line: 624, column: 34, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11176, file: !1803, line: 623, column: 24)
!11180 = !DILocation(line: 624, column: 3, scope: !11179)
!11181 = !DILocation(line: 625, column: 2, scope: !11179)
!11182 = !DILocation(line: 632, column: 10, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11152, file: !1803, line: 632, column: 6)
!11184 = !DILocation(line: 632, column: 6, scope: !11152)
!11185 = !DILocation(line: 633, column: 34, scope: !11186)
!11186 = distinct !DILexicalBlock(scope: !11183, file: !1803, line: 632, column: 32)
!11187 = !DILocation(line: 633, column: 3, scope: !11186)
!11188 = !DILocation(line: 634, column: 2, scope: !11186)
!11189 = !DILocation(line: 636, column: 10, scope: !11190)
!11190 = distinct !DILexicalBlock(scope: !11152, file: !1803, line: 636, column: 6)
!11191 = !DILocation(line: 636, column: 6, scope: !11152)
!11192 = !DILocation(line: 637, column: 33, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !11190, file: !1803, line: 636, column: 31)
!11194 = !DILocation(line: 637, column: 3, scope: !11193)
!11195 = !DILocation(line: 638, column: 2, scope: !11193)
!11196 = !DILocation(line: 640, column: 10, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11152, file: !1803, line: 640, column: 6)
!11198 = !DILocation(line: 640, column: 6, scope: !11152)
!11199 = !DILocation(line: 641, column: 33, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11197, file: !1803, line: 640, column: 32)
!11201 = !DILocation(line: 641, column: 3, scope: !11200)
!11202 = !DILocation(line: 642, column: 2, scope: !11200)
!11203 = !DILocation(line: 646, column: 32, scope: !11152)
!11204 = !DILocation(line: 646, column: 2, scope: !11152)
!11205 = !DILocation(line: 648, column: 2, scope: !11152)
!11206 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1803, file: !1803, line: 419, type: !1733, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11207)
!11207 = !{!11208, !11209, !11210, !11211, !11213, !11214, !11215, !11216}
!11208 = !DILocalVariable(name: "dev", arg: 1, scope: !11206, file: !1803, line: 419, type: !1708)
!11209 = !DILocalVariable(name: "cfg", arg: 2, scope: !11206, file: !1803, line: 420, type: !1735)
!11210 = !DILocalVariable(name: "config", scope: !11206, file: !1803, line: 422, type: !11089)
!11211 = !DILocalVariable(name: "data", scope: !11206, file: !1803, line: 423, type: !11212)
!11212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 32)
!11213 = !DILocalVariable(name: "parity", scope: !11206, file: !1803, line: 424, type: !7351)
!11214 = !DILocalVariable(name: "stopbits", scope: !11206, file: !1803, line: 425, type: !7351)
!11215 = !DILocalVariable(name: "databits", scope: !11206, file: !1803, line: 426, type: !7351)
!11216 = !DILocalVariable(name: "flowctrl", scope: !11206, file: !1803, line: 428, type: !7351)
!11217 = !DILocation(line: 0, scope: !11206)
!11218 = !DILocation(line: 422, column: 48, scope: !11206)
!11219 = !DILocation(line: 423, column: 38, scope: !11206)
!11220 = !DILocation(line: 424, column: 56, scope: !11206)
!11221 = !DILocation(line: 424, column: 51, scope: !11206)
!11222 = !DILocation(line: 424, column: 26, scope: !11206)
!11223 = !DILocation(line: 425, column: 60, scope: !11206)
!11224 = !DILocation(line: 425, column: 55, scope: !11206)
!11225 = !DILocation(line: 425, column: 28, scope: !11206)
!11226 = !DILocation(line: 426, column: 60, scope: !11206)
!11227 = !DILocation(line: 426, column: 55, scope: !11206)
!11228 = !DILocation(line: 426, column: 28, scope: !11206)
!11229 = !DILocation(line: 428, column: 58, scope: !11206)
!11230 = !DILocation(line: 428, column: 53, scope: !11206)
!11231 = !DILocation(line: 428, column: 28, scope: !11206)
!11232 = !DILocation(line: 431, column: 44, scope: !11233)
!11233 = distinct !DILexicalBlock(scope: !11206, file: !1803, line: 431, column: 6)
!11234 = !DILocation(line: 438, column: 22, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11206, file: !1803, line: 437, column: 6)
!11236 = !DILocation(line: 437, column: 6, scope: !11206)
!11237 = !DILocation(line: 448, column: 6, scope: !11206)
!11238 = !DILocation(line: 465, column: 47, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11206, file: !1803, line: 465, column: 6)
!11240 = !DILocation(line: 475, column: 21, scope: !11241)
!11241 = distinct !DILexicalBlock(scope: !11206, file: !1803, line: 475, column: 6)
!11242 = !DILocation(line: 475, column: 6, scope: !11206)
!11243 = !DILocation(line: 476, column: 8, scope: !11244)
!11244 = distinct !DILexicalBlock(scope: !11245, file: !1803, line: 476, column: 7)
!11245 = distinct !DILexicalBlock(scope: !11241, file: !1803, line: 475, column: 49)
!11246 = !DILocation(line: 477, column: 34, scope: !11244)
!11247 = !DILocation(line: 476, column: 7, scope: !11245)
!11248 = !DILocation(line: 482, column: 27, scope: !11206)
!11249 = !DILocation(line: 482, column: 2, scope: !11206)
!11250 = !DILocation(line: 484, column: 16, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11206, file: !1803, line: 484, column: 6)
!11252 = !DILocation(line: 484, column: 13, scope: !11251)
!11253 = !DILocation(line: 484, column: 6, scope: !11206)
!11254 = !DILocation(line: 485, column: 3, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !11251, file: !1803, line: 484, column: 44)
!11256 = !DILocation(line: 486, column: 2, scope: !11255)
!11257 = !DILocation(line: 488, column: 18, scope: !11258)
!11258 = distinct !DILexicalBlock(scope: !11206, file: !1803, line: 488, column: 6)
!11259 = !DILocation(line: 488, column: 15, scope: !11258)
!11260 = !DILocation(line: 488, column: 6, scope: !11206)
!11261 = !DILocation(line: 489, column: 3, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11258, file: !1803, line: 488, column: 48)
!11263 = !DILocation(line: 490, column: 2, scope: !11262)
!11264 = !DILocation(line: 492, column: 18, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !11206, file: !1803, line: 492, column: 6)
!11266 = !DILocation(line: 492, column: 15, scope: !11265)
!11267 = !DILocation(line: 492, column: 6, scope: !11206)
!11268 = !DILocation(line: 493, column: 3, scope: !11269)
!11269 = distinct !DILexicalBlock(scope: !11265, file: !1803, line: 492, column: 48)
!11270 = !DILocation(line: 494, column: 2, scope: !11269)
!11271 = !DILocation(line: 496, column: 18, scope: !11272)
!11272 = distinct !DILexicalBlock(scope: !11206, file: !1803, line: 496, column: 6)
!11273 = !DILocation(line: 496, column: 15, scope: !11272)
!11274 = !DILocation(line: 496, column: 6, scope: !11206)
!11275 = !DILocation(line: 497, column: 3, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !11272, file: !1803, line: 496, column: 46)
!11277 = !DILocation(line: 498, column: 2, scope: !11276)
!11278 = !DILocation(line: 500, column: 11, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11206, file: !1803, line: 500, column: 6)
!11280 = !DILocation(line: 500, column: 29, scope: !11279)
!11281 = !DILocation(line: 500, column: 20, scope: !11279)
!11282 = !DILocation(line: 500, column: 6, scope: !11206)
!11283 = !DILocation(line: 501, column: 3, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11279, file: !1803, line: 500, column: 40)
!11285 = !DILocation(line: 502, column: 26, scope: !11284)
!11286 = !DILocation(line: 502, column: 19, scope: !11284)
!11287 = !DILocation(line: 503, column: 2, scope: !11284)
!11288 = !DILocation(line: 505, column: 26, scope: !11206)
!11289 = !DILocation(line: 505, column: 2, scope: !11206)
!11290 = !DILocation(line: 506, column: 2, scope: !11206)
!11291 = !DILocation(line: 507, column: 1, scope: !11206)
!11292 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1803, file: !1803, line: 509, type: !1746, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11293)
!11293 = !{!11294, !11295, !11296}
!11294 = !DILocalVariable(name: "dev", arg: 1, scope: !11292, file: !1803, line: 509, type: !1708)
!11295 = !DILocalVariable(name: "cfg", arg: 2, scope: !11292, file: !1803, line: 510, type: !1748)
!11296 = !DILocalVariable(name: "data", scope: !11292, file: !1803, line: 512, type: !11212)
!11297 = !DILocation(line: 0, scope: !11292)
!11298 = !DILocation(line: 512, column: 38, scope: !11292)
!11299 = !DILocation(line: 514, column: 24, scope: !11292)
!11300 = !DILocation(line: 514, column: 7, scope: !11292)
!11301 = !DILocation(line: 514, column: 16, scope: !11292)
!11302 = !DILocation(line: 515, column: 41, scope: !11292)
!11303 = !{i32 0, i32 1537}
!11304 = !DILocation(line: 515, column: 16, scope: !11292)
!11305 = !DILocation(line: 515, column: 7, scope: !11292)
!11306 = !DILocation(line: 515, column: 14, scope: !11292)
!11307 = !DILocation(line: 517, column: 3, scope: !11292)
!11308 = !{i32 0, i32 12289}
!11309 = !DILocation(line: 516, column: 19, scope: !11292)
!11310 = !DILocation(line: 516, column: 7, scope: !11292)
!11311 = !DILocation(line: 516, column: 17, scope: !11292)
!11312 = !DILocation(line: 519, column: 3, scope: !11292)
!11313 = !DILocation(line: 519, column: 33, scope: !11292)
!11314 = !DILocation(line: 518, column: 19, scope: !11292)
!11315 = !DILocation(line: 518, column: 7, scope: !11292)
!11316 = !DILocation(line: 518, column: 17, scope: !11292)
!11317 = !DILocation(line: 521, column: 3, scope: !11292)
!11318 = !{i32 0, i32 769}
!11319 = !DILocation(line: 520, column: 19, scope: !11292)
!11320 = !DILocation(line: 520, column: 7, scope: !11292)
!11321 = !DILocation(line: 520, column: 17, scope: !11292)
!11322 = !DILocation(line: 522, column: 2, scope: !11292)
!11323 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1803, file: !1803, line: 205, type: !11324, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11326)
!11324 = !DISubroutineType(types: !11325)
!11325 = !{!113, !1708}
!11326 = !{!11327, !11328}
!11327 = !DILocalVariable(name: "dev", arg: 1, scope: !11323, file: !1803, line: 205, type: !1708)
!11328 = !DILocalVariable(name: "config", scope: !11323, file: !1803, line: 207, type: !11089)
!11329 = !DILocation(line: 0, scope: !11323)
!11330 = !DILocation(line: 207, column: 48, scope: !11323)
!11331 = !DILocation(line: 209, column: 36, scope: !11323)
!11332 = !DILocation(line: 209, column: 9, scope: !11323)
!11333 = !DILocation(line: 209, column: 2, scope: !11323)
!11334 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1803, file: !1803, line: 270, type: !11335, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11337)
!11335 = !DISubroutineType(types: !11336)
!11336 = !{!1674, !113}
!11337 = !{!11338}
!11338 = !DILocalVariable(name: "parity", arg: 1, scope: !11334, file: !1803, line: 270, type: !113)
!11339 = !DILocation(line: 0, scope: !11334)
!11340 = !DILocation(line: 272, column: 2, scope: !11334)
!11341 = !DILocation(line: 281, column: 1, scope: !11334)
!11342 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1803, file: !1803, line: 220, type: !11324, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11343)
!11343 = !{!11344, !11345}
!11344 = !DILocalVariable(name: "dev", arg: 1, scope: !11342, file: !1803, line: 220, type: !1708)
!11345 = !DILocalVariable(name: "config", scope: !11342, file: !1803, line: 222, type: !11089)
!11346 = !DILocation(line: 0, scope: !11342)
!11347 = !DILocation(line: 222, column: 48, scope: !11342)
!11348 = !DILocation(line: 224, column: 44, scope: !11342)
!11349 = !DILocation(line: 224, column: 9, scope: !11342)
!11350 = !DILocation(line: 224, column: 2, scope: !11342)
!11351 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1803, file: !1803, line: 304, type: !11352, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11354)
!11352 = !DISubroutineType(types: !11353)
!11353 = !{!1688, !113}
!11354 = !{!11355}
!11355 = !DILocalVariable(name: "sb", arg: 1, scope: !11351, file: !1803, line: 304, type: !113)
!11356 = !DILocation(line: 0, scope: !11351)
!11357 = !DILocation(line: 306, column: 2, scope: !11351)
!11358 = !DILocation(line: 0, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11351, file: !1803, line: 306, column: 14)
!11360 = !DILocation(line: 323, column: 1, scope: !11351)
!11361 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1803, file: !1803, line: 235, type: !11324, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11362)
!11362 = !{!11363, !11364}
!11363 = !DILocalVariable(name: "dev", arg: 1, scope: !11361, file: !1803, line: 235, type: !1708)
!11364 = !DILocalVariable(name: "config", scope: !11361, file: !1803, line: 237, type: !11089)
!11365 = !DILocation(line: 0, scope: !11361)
!11366 = !DILocation(line: 237, column: 48, scope: !11361)
!11367 = !DILocation(line: 239, column: 39, scope: !11361)
!11368 = !DILocation(line: 239, column: 9, scope: !11361)
!11369 = !DILocation(line: 239, column: 2, scope: !11361)
!11370 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1803, file: !1803, line: 355, type: !11371, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11373)
!11371 = !DISubroutineType(types: !11372)
!11372 = !{!1681, !113, !113}
!11373 = !{!11374, !11375}
!11374 = !DILocalVariable(name: "db", arg: 1, scope: !11370, file: !1803, line: 355, type: !113)
!11375 = !DILocalVariable(name: "p", arg: 2, scope: !11370, file: !1803, line: 356, type: !113)
!11376 = !DILocation(line: 0, scope: !11370)
!11377 = !DILocation(line: 358, column: 2, scope: !11370)
!11378 = !DILocation(line: 384, column: 1, scope: !11370)
!11379 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1803, file: !1803, line: 250, type: !11324, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11380)
!11380 = !{!11381, !11382}
!11381 = !DILocalVariable(name: "dev", arg: 1, scope: !11379, file: !1803, line: 250, type: !1708)
!11382 = !DILocalVariable(name: "config", scope: !11379, file: !1803, line: 252, type: !11089)
!11383 = !DILocation(line: 0, scope: !11379)
!11384 = !DILocation(line: 252, column: 48, scope: !11379)
!11385 = !DILocation(line: 254, column: 40, scope: !11379)
!11386 = !DILocation(line: 254, column: 9, scope: !11379)
!11387 = !DILocation(line: 254, column: 2, scope: !11379)
!11388 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1803, file: !1803, line: 409, type: !11389, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11391)
!11389 = !DISubroutineType(types: !11390)
!11390 = !{!1694, !113}
!11391 = !{!11392}
!11392 = !DILocalVariable(name: "fc", arg: 1, scope: !11388, file: !1803, line: 409, type: !113)
!11393 = !DILocation(line: 0, scope: !11388)
!11394 = !DILocation(line: 411, column: 9, scope: !11395)
!11395 = distinct !DILexicalBlock(scope: !11388, file: !1803, line: 411, column: 6)
!11396 = !DILocation(line: 416, column: 1, scope: !11388)
!11397 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !11398, file: !11398, line: 967, type: !11399, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11401)
!11398 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11399 = !DISubroutineType(types: !11400)
!11400 = !{!113, !1749}
!11401 = !{!11402}
!11402 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11397, file: !11398, line: 967, type: !1749)
!11403 = !DILocation(line: 0, scope: !11397)
!11404 = !DILocation(line: 969, column: 21, scope: !11397)
!11405 = !DILocation(line: 969, column: 3, scope: !11397)
!11406 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !11398, file: !11398, line: 601, type: !11399, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11407)
!11407 = !{!11408}
!11408 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11406, file: !11398, line: 601, type: !1749)
!11409 = !DILocation(line: 0, scope: !11406)
!11410 = !DILocation(line: 603, column: 21, scope: !11406)
!11411 = !DILocation(line: 603, column: 3, scope: !11406)
!11412 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !11398, file: !11398, line: 820, type: !11399, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11413)
!11413 = !{!11414}
!11414 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11412, file: !11398, line: 820, type: !1749)
!11415 = !DILocation(line: 0, scope: !11412)
!11416 = !DILocation(line: 822, column: 21, scope: !11412)
!11417 = !DILocation(line: 822, column: 3, scope: !11412)
!11418 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !11398, file: !11398, line: 547, type: !11399, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11419)
!11419 = !{!11420}
!11420 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11418, file: !11398, line: 547, type: !1749)
!11421 = !DILocation(line: 0, scope: !11418)
!11422 = !DILocation(line: 549, column: 21, scope: !11418)
!11423 = !DILocation(line: 549, column: 3, scope: !11418)
!11424 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1803, file: !1803, line: 257, type: !11425, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11427)
!11425 = !DISubroutineType(types: !11426)
!11426 = !{!113, !1674}
!11427 = !{!11428}
!11428 = !DILocalVariable(name: "parity", arg: 1, scope: !11424, file: !1803, line: 257, type: !1674)
!11429 = !DILocation(line: 0, scope: !11424)
!11430 = !DILocation(line: 259, column: 2, scope: !11424)
!11431 = !DILocation(line: 268, column: 1, scope: !11424)
!11432 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1803, file: !1803, line: 283, type: !11433, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11435)
!11433 = !DISubroutineType(types: !11434)
!11434 = !{!113, !1688}
!11435 = !{!11436}
!11436 = !DILocalVariable(name: "sb", arg: 1, scope: !11432, file: !1803, line: 283, type: !1688)
!11437 = !DILocation(line: 0, scope: !11432)
!11438 = !DILocation(line: 285, column: 2, scope: !11432)
!11439 = !DILocation(line: 0, scope: !11440)
!11440 = distinct !DILexicalBlock(scope: !11432, file: !1803, line: 285, column: 14)
!11441 = !DILocation(line: 302, column: 1, scope: !11432)
!11442 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1803, file: !1803, line: 325, type: !11443, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11445)
!11443 = !DISubroutineType(types: !11444)
!11444 = !{!113, !1681, !1674}
!11445 = !{!11446, !11447}
!11446 = !DILocalVariable(name: "db", arg: 1, scope: !11442, file: !1803, line: 325, type: !1681)
!11447 = !DILocalVariable(name: "p", arg: 2, scope: !11442, file: !1803, line: 326, type: !1674)
!11448 = !DILocation(line: 0, scope: !11442)
!11449 = !DILocation(line: 328, column: 2, scope: !11442)
!11450 = !DILocation(line: 353, column: 1, scope: !11442)
!11451 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1803, file: !1803, line: 393, type: !11452, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11454)
!11452 = !DISubroutineType(types: !11453)
!11453 = !{!113, !1694}
!11454 = !{!11455}
!11455 = !DILocalVariable(name: "fc", arg: 1, scope: !11451, file: !1803, line: 393, type: !1694)
!11456 = !DILocation(line: 0, scope: !11451)
!11457 = !DILocation(line: 395, column: 9, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11451, file: !1803, line: 395, column: 6)
!11459 = !DILocation(line: 400, column: 1, scope: !11451)
!11460 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !11398, file: !11398, line: 424, type: !11461, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11463)
!11461 = !DISubroutineType(types: !11462)
!11462 = !{null, !1749}
!11463 = !{!11464}
!11464 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11460, file: !11398, line: 424, type: !1749)
!11465 = !DILocation(line: 0, scope: !11460)
!11466 = !DILocation(line: 426, column: 3, scope: !11460)
!11467 = !DILocation(line: 427, column: 1, scope: !11460)
!11468 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1803, file: !1803, line: 197, type: !11469, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11471)
!11469 = !DISubroutineType(types: !11470)
!11470 = !{null, !1708, !113}
!11471 = !{!11472, !11473, !11474}
!11472 = !DILocalVariable(name: "dev", arg: 1, scope: !11468, file: !1803, line: 197, type: !1708)
!11473 = !DILocalVariable(name: "parity", arg: 2, scope: !11468, file: !1803, line: 198, type: !113)
!11474 = !DILocalVariable(name: "config", scope: !11468, file: !1803, line: 200, type: !11089)
!11475 = !DILocation(line: 0, scope: !11468)
!11476 = !DILocation(line: 200, column: 48, scope: !11468)
!11477 = !DILocation(line: 202, column: 29, scope: !11468)
!11478 = !DILocation(line: 202, column: 2, scope: !11468)
!11479 = !DILocation(line: 203, column: 1, scope: !11468)
!11480 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1803, file: !1803, line: 212, type: !11469, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11481)
!11481 = !{!11482, !11483, !11484}
!11482 = !DILocalVariable(name: "dev", arg: 1, scope: !11480, file: !1803, line: 212, type: !1708)
!11483 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11480, file: !1803, line: 213, type: !113)
!11484 = !DILocalVariable(name: "config", scope: !11480, file: !1803, line: 215, type: !11089)
!11485 = !DILocation(line: 0, scope: !11480)
!11486 = !DILocation(line: 215, column: 48, scope: !11480)
!11487 = !DILocation(line: 217, column: 37, scope: !11480)
!11488 = !DILocation(line: 217, column: 2, scope: !11480)
!11489 = !DILocation(line: 218, column: 1, scope: !11480)
!11490 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1803, file: !1803, line: 227, type: !11469, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11491)
!11491 = !{!11492, !11493, !11494}
!11492 = !DILocalVariable(name: "dev", arg: 1, scope: !11490, file: !1803, line: 227, type: !1708)
!11493 = !DILocalVariable(name: "databits", arg: 2, scope: !11490, file: !1803, line: 228, type: !113)
!11494 = !DILocalVariable(name: "config", scope: !11490, file: !1803, line: 230, type: !11089)
!11495 = !DILocation(line: 0, scope: !11490)
!11496 = !DILocation(line: 230, column: 48, scope: !11490)
!11497 = !DILocation(line: 232, column: 32, scope: !11490)
!11498 = !DILocation(line: 232, column: 2, scope: !11490)
!11499 = !DILocation(line: 233, column: 1, scope: !11490)
!11500 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1803, file: !1803, line: 242, type: !11469, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11501)
!11501 = !{!11502, !11503, !11504}
!11502 = !DILocalVariable(name: "dev", arg: 1, scope: !11500, file: !1803, line: 242, type: !1708)
!11503 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11500, file: !1803, line: 243, type: !113)
!11504 = !DILocalVariable(name: "config", scope: !11500, file: !1803, line: 245, type: !11089)
!11505 = !DILocation(line: 0, scope: !11500)
!11506 = !DILocation(line: 245, column: 48, scope: !11500)
!11507 = !DILocation(line: 247, column: 33, scope: !11500)
!11508 = !DILocation(line: 247, column: 2, scope: !11500)
!11509 = !DILocation(line: 248, column: 1, scope: !11500)
!11510 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1803, file: !1803, line: 107, type: !11469, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11511)
!11511 = !{!11512, !11513, !11514, !11515, !11516}
!11512 = !DILocalVariable(name: "dev", arg: 1, scope: !11510, file: !1803, line: 107, type: !1708)
!11513 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11510, file: !1803, line: 107, type: !113)
!11514 = !DILocalVariable(name: "config", scope: !11510, file: !1803, line: 109, type: !11089)
!11515 = !DILocalVariable(name: "data", scope: !11510, file: !1803, line: 110, type: !11212)
!11516 = !DILocalVariable(name: "clock_rate", scope: !11510, file: !1803, line: 112, type: !113)
!11517 = !DILocation(line: 0, scope: !11510)
!11518 = !DILocation(line: 109, column: 48, scope: !11510)
!11519 = !DILocation(line: 110, column: 38, scope: !11510)
!11520 = !DILocation(line: 112, column: 2, scope: !11510)
!11521 = !DILocation(line: 123, column: 36, scope: !11522)
!11522 = distinct !DILexicalBlock(scope: !11523, file: !1803, line: 123, column: 7)
!11523 = distinct !DILexicalBlock(scope: !11524, file: !1803, line: 122, column: 9)
!11524 = distinct !DILexicalBlock(scope: !11510, file: !1803, line: 115, column: 6)
!11525 = !DILocation(line: 124, column: 42, scope: !11522)
!11526 = !DILocation(line: 123, column: 7, scope: !11522)
!11527 = !DILocation(line: 125, column: 22, scope: !11522)
!11528 = !DILocation(line: 123, column: 7, scope: !11523)
!11529 = !DILocation(line: 126, column: 4, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11531, file: !1803, line: 126, column: 4)
!11531 = distinct !DILexicalBlock(scope: !11532, file: !1803, line: 126, column: 4)
!11532 = distinct !DILexicalBlock(scope: !11533, file: !1803, line: 126, column: 4)
!11533 = distinct !DILexicalBlock(scope: !11534, file: !1803, line: 126, column: 4)
!11534 = distinct !DILexicalBlock(scope: !11522, file: !1803, line: 125, column: 27)
!11535 = !DILocation(line: 127, column: 4, scope: !11534)
!11536 = !DILocation(line: 176, column: 36, scope: !11510)
!11537 = !DILocation(line: 176, column: 3, scope: !11510)
!11538 = !DILocation(line: 179, column: 32, scope: !11510)
!11539 = !DILocation(line: 180, column: 10, scope: !11510)
!11540 = !DILocation(line: 179, column: 3, scope: !11510)
!11541 = !DILocation(line: 195, column: 1, scope: !11510)
!11542 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !11398, file: !11398, line: 410, type: !11461, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11543)
!11543 = !{!11544}
!11544 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11542, file: !11398, line: 410, type: !1749)
!11545 = !DILocation(line: 0, scope: !11542)
!11546 = !DILocation(line: 412, column: 3, scope: !11542)
!11547 = !DILocation(line: 413, column: 1, scope: !11542)
!11548 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !1163, file: !1163, line: 216, type: !1782, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11549)
!11549 = !{!11550, !11551, !11552, !11553}
!11550 = !DILocalVariable(name: "dev", arg: 1, scope: !11548, file: !1163, line: 216, type: !1708)
!11551 = !DILocalVariable(name: "sys", arg: 2, scope: !11548, file: !1163, line: 217, type: !1258)
!11552 = !DILocalVariable(name: "rate", arg: 3, scope: !11548, file: !1163, line: 218, type: !1214)
!11553 = !DILocalVariable(name: "api", scope: !11548, file: !1163, line: 220, type: !1760)
!11554 = !DILocation(line: 0, scope: !11548)
!11555 = !DILocation(line: 221, column: 49, scope: !11548)
!11556 = !DILocation(line: 223, column: 11, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11548, file: !1163, line: 223, column: 6)
!11558 = !DILocation(line: 223, column: 20, scope: !11557)
!11559 = !DILocation(line: 223, column: 6, scope: !11548)
!11560 = !DILocation(line: 227, column: 9, scope: !11548)
!11561 = !DILocation(line: 227, column: 2, scope: !11548)
!11562 = !DILocation(line: 228, column: 1, scope: !11548)
!11563 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3721, file: !3721, line: 175, type: !3722, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11564)
!11564 = !{!11565}
!11565 = !DILocalVariable(name: "level", arg: 1, scope: !11563, file: !3721, line: 175, type: !108)
!11566 = !DILocation(line: 0, scope: !11563)
!11567 = !DILocation(line: 177, column: 2, scope: !11563)
!11568 = !DILocation(line: 189, column: 1, scope: !11563)
!11569 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !11398, file: !11398, line: 615, type: !11570, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11572)
!11570 = !DISubroutineType(types: !11571)
!11571 = !{null, !1749, !113}
!11572 = !{!11573, !11574}
!11573 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11569, file: !11398, line: 615, type: !1749)
!11574 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11569, file: !11398, line: 615, type: !113)
!11575 = !DILocation(line: 0, scope: !11569)
!11576 = !DILocation(line: 617, column: 3, scope: !11569)
!11577 = !DILocation(line: 618, column: 1, scope: !11569)
!11578 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !11398, file: !11398, line: 1020, type: !11579, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11581)
!11579 = !DISubroutineType(types: !11580)
!11580 = !{null, !1749, !113, !113, !113}
!11581 = !{!11582, !11583, !11584, !11585}
!11582 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11578, file: !11398, line: 1020, type: !1749)
!11583 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11578, file: !11398, line: 1020, type: !113)
!11584 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11578, file: !11398, line: 1020, type: !113)
!11585 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11578, file: !11398, line: 1021, type: !113)
!11586 = !DILocation(line: 0, scope: !11578)
!11587 = !DILocation(line: 1029, column: 30, scope: !11588)
!11588 = distinct !DILexicalBlock(scope: !11589, file: !11398, line: 1028, column: 3)
!11589 = distinct !DILexicalBlock(scope: !11578, file: !11398, line: 1023, column: 7)
!11590 = !DILocation(line: 1029, column: 19, scope: !11588)
!11591 = !DILocation(line: 1029, column: 13, scope: !11588)
!11592 = !DILocation(line: 1029, column: 17, scope: !11588)
!11593 = !DILocation(line: 1031, column: 1, scope: !11578)
!11594 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !11398, file: !11398, line: 949, type: !11570, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11595)
!11595 = !{!11596, !11597}
!11596 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11594, file: !11398, line: 949, type: !1749)
!11597 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11594, file: !11398, line: 949, type: !113)
!11598 = !DILocation(line: 0, scope: !11594)
!11599 = !DILocation(line: 951, column: 3, scope: !11594)
!11600 = !DILocation(line: 952, column: 1, scope: !11594)
!11601 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !11398, file: !11398, line: 588, type: !11570, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11602)
!11602 = !{!11603, !11604}
!11603 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11601, file: !11398, line: 588, type: !1749)
!11604 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11601, file: !11398, line: 588, type: !113)
!11605 = !DILocation(line: 0, scope: !11601)
!11606 = !DILocation(line: 590, column: 3, scope: !11601)
!11607 = !DILocation(line: 591, column: 1, scope: !11601)
!11608 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !11398, file: !11398, line: 805, type: !11570, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11609)
!11609 = !{!11610, !11611}
!11610 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11608, file: !11398, line: 805, type: !1749)
!11611 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11608, file: !11398, line: 805, type: !113)
!11612 = !DILocation(line: 0, scope: !11608)
!11613 = !DILocation(line: 807, column: 3, scope: !11608)
!11614 = !DILocation(line: 808, column: 1, scope: !11608)
!11615 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !11398, file: !11398, line: 532, type: !11570, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11616)
!11616 = !{!11617, !11618}
!11617 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11615, file: !11398, line: 532, type: !1749)
!11618 = !DILocalVariable(name: "Parity", arg: 2, scope: !11615, file: !11398, line: 532, type: !113)
!11619 = !DILocation(line: 0, scope: !11615)
!11620 = !DILocation(line: 534, column: 3, scope: !11615)
!11621 = !DILocation(line: 535, column: 1, scope: !11615)
!11622 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !11398, file: !11398, line: 1770, type: !11399, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11623)
!11623 = !{!11624}
!11624 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11622, file: !11398, line: 1770, type: !1749)
!11625 = !DILocation(line: 0, scope: !11622)
!11626 = !DILocation(line: 1772, column: 11, scope: !11622)
!11627 = !DILocation(line: 1772, column: 46, scope: !11622)
!11628 = !DILocation(line: 1772, column: 3, scope: !11622)
!11629 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !11398, file: !11398, line: 1737, type: !11399, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11630)
!11630 = !{!11631}
!11631 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11629, file: !11398, line: 1737, type: !1749)
!11632 = !DILocation(line: 0, scope: !11629)
!11633 = !DILocation(line: 1739, column: 11, scope: !11629)
!11634 = !DILocation(line: 1739, column: 3, scope: !11629)
!11635 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !11398, file: !11398, line: 1748, type: !11399, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11636)
!11636 = !{!11637}
!11637 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11635, file: !11398, line: 1748, type: !1749)
!11638 = !DILocation(line: 0, scope: !11635)
!11639 = !DILocation(line: 1750, column: 11, scope: !11635)
!11640 = !DILocation(line: 1750, column: 45, scope: !11635)
!11641 = !DILocation(line: 1750, column: 3, scope: !11635)
!11642 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !11398, file: !11398, line: 1827, type: !11399, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11643)
!11643 = !{!11644}
!11644 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11642, file: !11398, line: 1827, type: !1749)
!11645 = !DILocation(line: 0, scope: !11642)
!11646 = !DILocation(line: 1829, column: 11, scope: !11642)
!11647 = !DILocation(line: 1829, column: 46, scope: !11642)
!11648 = !DILocation(line: 1829, column: 3, scope: !11642)
!11649 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !11398, file: !11398, line: 1992, type: !11461, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11650)
!11650 = !{!11651}
!11651 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11649, file: !11398, line: 1992, type: !1749)
!11652 = !DILocation(line: 0, scope: !11649)
!11653 = !DILocation(line: 1994, column: 3, scope: !11649)
!11654 = !DILocation(line: 1995, column: 1, scope: !11649)
!11655 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !11398, file: !11398, line: 1934, type: !11461, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11656)
!11656 = !{!11657, !11658}
!11657 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11655, file: !11398, line: 1934, type: !1749)
!11658 = !DILocalVariable(name: "tmpreg", scope: !11655, file: !11398, line: 1936, type: !574)
!11659 = !DILocation(line: 0, scope: !11655)
!11660 = !DILocation(line: 1936, column: 3, scope: !11655)
!11661 = !DILocation(line: 1936, column: 17, scope: !11655)
!11662 = !DILocation(line: 1937, column: 20, scope: !11655)
!11663 = !DILocation(line: 1937, column: 10, scope: !11655)
!11664 = !DILocation(line: 1938, column: 10, scope: !11655)
!11665 = !DILocation(line: 1939, column: 20, scope: !11655)
!11666 = !DILocation(line: 1939, column: 10, scope: !11655)
!11667 = !DILocation(line: 1940, column: 10, scope: !11655)
!11668 = !DILocation(line: 1941, column: 1, scope: !11655)
!11669 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !11398, file: !11398, line: 1877, type: !11461, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11670)
!11670 = !{!11671, !11672}
!11671 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11669, file: !11398, line: 1877, type: !1749)
!11672 = !DILocalVariable(name: "tmpreg", scope: !11669, file: !11398, line: 1879, type: !574)
!11673 = !DILocation(line: 0, scope: !11669)
!11674 = !DILocation(line: 1879, column: 3, scope: !11669)
!11675 = !DILocation(line: 1879, column: 17, scope: !11669)
!11676 = !DILocation(line: 1880, column: 20, scope: !11669)
!11677 = !DILocation(line: 1880, column: 10, scope: !11669)
!11678 = !DILocation(line: 1881, column: 10, scope: !11669)
!11679 = !DILocation(line: 1882, column: 20, scope: !11669)
!11680 = !DILocation(line: 1882, column: 10, scope: !11669)
!11681 = !DILocation(line: 1883, column: 10, scope: !11669)
!11682 = !DILocation(line: 1884, column: 1, scope: !11669)
!11683 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !11398, file: !11398, line: 1896, type: !11461, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11684)
!11684 = !{!11685, !11686}
!11685 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11683, file: !11398, line: 1896, type: !1749)
!11686 = !DILocalVariable(name: "tmpreg", scope: !11683, file: !11398, line: 1898, type: !574)
!11687 = !DILocation(line: 0, scope: !11683)
!11688 = !DILocation(line: 1898, column: 3, scope: !11683)
!11689 = !DILocation(line: 1898, column: 17, scope: !11683)
!11690 = !DILocation(line: 1899, column: 20, scope: !11683)
!11691 = !DILocation(line: 1899, column: 10, scope: !11683)
!11692 = !DILocation(line: 1900, column: 10, scope: !11683)
!11693 = !DILocation(line: 1901, column: 20, scope: !11683)
!11694 = !DILocation(line: 1901, column: 10, scope: !11683)
!11695 = !DILocation(line: 1902, column: 10, scope: !11683)
!11696 = !DILocation(line: 1903, column: 1, scope: !11683)
!11697 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !11398, file: !11398, line: 1915, type: !11461, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11698)
!11698 = !{!11699, !11700}
!11699 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11697, file: !11398, line: 1915, type: !1749)
!11700 = !DILocalVariable(name: "tmpreg", scope: !11697, file: !11398, line: 1917, type: !574)
!11701 = !DILocation(line: 0, scope: !11697)
!11702 = !DILocation(line: 1917, column: 3, scope: !11697)
!11703 = !DILocation(line: 1917, column: 17, scope: !11697)
!11704 = !DILocation(line: 1918, column: 20, scope: !11697)
!11705 = !DILocation(line: 1918, column: 10, scope: !11697)
!11706 = !DILocation(line: 1919, column: 10, scope: !11697)
!11707 = !DILocation(line: 1920, column: 20, scope: !11697)
!11708 = !DILocation(line: 1920, column: 10, scope: !11697)
!11709 = !DILocation(line: 1921, column: 10, scope: !11697)
!11710 = !DILocation(line: 1922, column: 1, scope: !11697)
!11711 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !11398, file: !11398, line: 1814, type: !11399, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11712)
!11712 = !{!11713}
!11713 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11711, file: !11398, line: 1814, type: !1749)
!11714 = !DILocation(line: 0, scope: !11711)
!11715 = !DILocation(line: 1816, column: 11, scope: !11711)
!11716 = !DILocation(line: 1816, column: 46, scope: !11711)
!11717 = !DILocation(line: 1816, column: 3, scope: !11711)
!11718 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !11398, file: !11398, line: 2426, type: !11719, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11721)
!11719 = !DISubroutineType(types: !11720)
!11720 = !{null, !1749, !164}
!11721 = !{!11722, !11723}
!11722 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11718, file: !11398, line: 2426, type: !1749)
!11723 = !DILocalVariable(name: "Value", arg: 2, scope: !11718, file: !11398, line: 2426, type: !164)
!11724 = !DILocation(line: 0, scope: !11718)
!11725 = !DILocation(line: 2428, column: 16, scope: !11718)
!11726 = !DILocation(line: 2428, column: 11, scope: !11718)
!11727 = !DILocation(line: 2428, column: 14, scope: !11718)
!11728 = !DILocation(line: 2429, column: 1, scope: !11718)
!11729 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !11398, file: !11398, line: 1792, type: !11399, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11730)
!11730 = !{!11731}
!11731 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11729, file: !11398, line: 1792, type: !1749)
!11732 = !DILocation(line: 0, scope: !11729)
!11733 = !DILocation(line: 1794, column: 11, scope: !11729)
!11734 = !DILocation(line: 1794, column: 47, scope: !11729)
!11735 = !DILocation(line: 1794, column: 3, scope: !11729)
!11736 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !11398, file: !11398, line: 2403, type: !11737, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11739)
!11737 = !DISubroutineType(types: !11738)
!11738 = !{!164, !1749}
!11739 = !{!11740}
!11740 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11736, file: !11398, line: 2403, type: !1749)
!11741 = !DILocation(line: 0, scope: !11736)
!11742 = !DILocation(line: 2405, column: 20, scope: !11736)
!11743 = !DILocation(line: 2405, column: 10, scope: !11736)
!11744 = !DILocation(line: 2405, column: 3, scope: !11736)
!11745 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1803, file: !1803, line: 1583, type: !1729, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11746)
!11746 = !{!11747, !11748, !11749, !11750, !11751, !11752}
!11747 = !DILocalVariable(name: "dev", arg: 1, scope: !11745, file: !1803, line: 1583, type: !1708)
!11748 = !DILocalVariable(name: "config", scope: !11745, file: !1803, line: 1585, type: !11089)
!11749 = !DILocalVariable(name: "data", scope: !11745, file: !1803, line: 1586, type: !11212)
!11750 = !DILocalVariable(name: "ll_parity", scope: !11745, file: !1803, line: 1587, type: !113)
!11751 = !DILocalVariable(name: "ll_datawidth", scope: !11745, file: !1803, line: 1588, type: !113)
!11752 = !DILocalVariable(name: "err", scope: !11745, file: !1803, line: 1589, type: !108)
!11753 = !DILocation(line: 0, scope: !11745)
!11754 = !DILocation(line: 1585, column: 48, scope: !11745)
!11755 = !DILocation(line: 1586, column: 38, scope: !11745)
!11756 = !DILocation(line: 1591, column: 2, scope: !11745)
!11757 = !DILocation(line: 1593, column: 29, scope: !11758)
!11758 = distinct !DILexicalBlock(scope: !11745, file: !1803, line: 1593, column: 6)
!11759 = !DILocation(line: 1593, column: 7, scope: !11758)
!11760 = !DILocation(line: 1593, column: 6, scope: !11745)
!11761 = !DILocation(line: 1594, column: 3, scope: !11762)
!11762 = distinct !DILexicalBlock(scope: !11763, file: !1803, line: 1594, column: 3)
!11763 = distinct !DILexicalBlock(scope: !11764, file: !1803, line: 1594, column: 3)
!11764 = distinct !DILexicalBlock(scope: !11765, file: !1803, line: 1594, column: 3)
!11765 = distinct !DILexicalBlock(scope: !11766, file: !1803, line: 1594, column: 3)
!11766 = distinct !DILexicalBlock(scope: !11758, file: !1803, line: 1593, column: 37)
!11767 = !DILocation(line: 1595, column: 3, scope: !11766)
!11768 = !DILocation(line: 1599, column: 31, scope: !11745)
!11769 = !DILocation(line: 1599, column: 71, scope: !11745)
!11770 = !DILocation(line: 1599, column: 8, scope: !11745)
!11771 = !DILocation(line: 1600, column: 10, scope: !11772)
!11772 = distinct !DILexicalBlock(scope: !11745, file: !1803, line: 1600, column: 6)
!11773 = !DILocation(line: 1600, column: 6, scope: !11745)
!11774 = !DILocation(line: 1601, column: 3, scope: !11775)
!11775 = distinct !DILexicalBlock(scope: !11776, file: !1803, line: 1601, column: 3)
!11776 = distinct !DILexicalBlock(scope: !11777, file: !1803, line: 1601, column: 3)
!11777 = distinct !DILexicalBlock(scope: !11778, file: !1803, line: 1601, column: 3)
!11778 = distinct !DILexicalBlock(scope: !11779, file: !1803, line: 1601, column: 3)
!11779 = distinct !DILexicalBlock(scope: !11772, file: !1803, line: 1600, column: 16)
!11780 = !DILocation(line: 1602, column: 3, scope: !11779)
!11781 = !DILocation(line: 1616, column: 36, scope: !11745)
!11782 = !DILocation(line: 1616, column: 8, scope: !11745)
!11783 = !DILocation(line: 1617, column: 10, scope: !11784)
!11784 = distinct !DILexicalBlock(scope: !11745, file: !1803, line: 1617, column: 6)
!11785 = !DILocation(line: 1617, column: 6, scope: !11745)
!11786 = !DILocation(line: 1621, column: 27, scope: !11745)
!11787 = !DILocation(line: 1621, column: 2, scope: !11745)
!11788 = !DILocation(line: 1624, column: 40, scope: !11745)
!11789 = !DILocation(line: 1624, column: 2, scope: !11745)
!11790 = !DILocation(line: 1630, column: 14, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11745, file: !1803, line: 1630, column: 6)
!11792 = !DILocation(line: 1630, column: 6, scope: !11745)
!11793 = !DILocation(line: 1640, column: 4, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11795, file: !1803, line: 1640, column: 4)
!11795 = distinct !DILexicalBlock(scope: !11796, file: !1803, line: 1640, column: 4)
!11796 = distinct !DILexicalBlock(scope: !11797, file: !1803, line: 1640, column: 4)
!11797 = distinct !DILexicalBlock(scope: !11798, file: !1803, line: 1640, column: 4)
!11798 = distinct !DILexicalBlock(scope: !11799, file: !1803, line: 1639, column: 28)
!11799 = distinct !DILexicalBlock(scope: !11800, file: !1803, line: 1639, column: 7)
!11800 = distinct !DILexicalBlock(scope: !11801, file: !1803, line: 1638, column: 9)
!11801 = distinct !DILexicalBlock(scope: !11791, file: !1803, line: 1634, column: 13)
!11802 = !DILocation(line: 0, scope: !11791)
!11803 = !DILocation(line: 1649, column: 35, scope: !11745)
!11804 = !DILocation(line: 1649, column: 2, scope: !11745)
!11805 = !DILocation(line: 1654, column: 14, scope: !11806)
!11806 = distinct !DILexicalBlock(scope: !11745, file: !1803, line: 1654, column: 6)
!11807 = !DILocation(line: 1654, column: 6, scope: !11745)
!11808 = !DILocation(line: 1655, column: 3, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11806, file: !1803, line: 1654, column: 31)
!11810 = !DILocation(line: 1656, column: 2, scope: !11809)
!11811 = !DILocation(line: 1659, column: 37, scope: !11745)
!11812 = !DILocation(line: 1659, column: 2, scope: !11745)
!11813 = !DILocation(line: 1662, column: 14, scope: !11814)
!11814 = distinct !DILexicalBlock(scope: !11745, file: !1803, line: 1662, column: 6)
!11815 = !DILocation(line: 1662, column: 6, scope: !11745)
!11816 = !DILocation(line: 1663, column: 37, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11814, file: !1803, line: 1662, column: 27)
!11818 = !DILocation(line: 1663, column: 3, scope: !11817)
!11819 = !DILocation(line: 1664, column: 2, scope: !11817)
!11820 = !DILocation(line: 1684, column: 26, scope: !11745)
!11821 = !DILocation(line: 1684, column: 2, scope: !11745)
!11822 = !DILocation(line: 1722, column: 2, scope: !11745)
!11823 = !DILocation(line: 1724, column: 1, scope: !11745)
!11824 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1803, file: !1803, line: 651, type: !11825, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11827)
!11825 = !DISubroutineType(types: !11826)
!11826 = !{null, !1708}
!11827 = !{!11828, !11829, !11830}
!11828 = !DILocalVariable(name: "dev", arg: 1, scope: !11824, file: !1803, line: 651, type: !1708)
!11829 = !DILocalVariable(name: "data", scope: !11824, file: !1803, line: 653, type: !11212)
!11830 = !DILocalVariable(name: "clk", scope: !11824, file: !1803, line: 654, type: !11831)
!11831 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1708)
!11832 = !DILocation(line: 0, scope: !11824)
!11833 = !DILocation(line: 653, column: 38, scope: !11824)
!11834 = !DILocation(line: 656, column: 8, scope: !11824)
!11835 = !DILocation(line: 656, column: 14, scope: !11824)
!11836 = !DILocation(line: 657, column: 1, scope: !11824)
!11837 = distinct !DISubprogram(name: "device_is_ready", scope: !10227, file: !10227, line: 47, type: !11838, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11840)
!11838 = !DISubroutineType(types: !11839)
!11839 = !{!422, !1708}
!11840 = !{!11841}
!11841 = !DILocalVariable(name: "dev", arg: 1, scope: !11837, file: !10227, line: 47, type: !1708)
!11842 = !DILocation(line: 0, scope: !11837)
!11843 = !DILocation(line: 55, column: 2, scope: !11844)
!11844 = distinct !DILexicalBlock(scope: !11837, file: !10227, line: 55, column: 2)
!11845 = !{i64 2154465532}
!11846 = !DILocation(line: 56, column: 9, scope: !11837)
!11847 = !DILocation(line: 56, column: 2, scope: !11837)
!11848 = distinct !DISubprogram(name: "clock_control_on", scope: !1163, file: !1163, line: 123, type: !1767, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11849)
!11849 = !{!11850, !11851, !11852}
!11850 = !DILocalVariable(name: "dev", arg: 1, scope: !11848, file: !1163, line: 123, type: !1708)
!11851 = !DILocalVariable(name: "sys", arg: 2, scope: !11848, file: !1163, line: 124, type: !1258)
!11852 = !DILocalVariable(name: "api", scope: !11848, file: !1163, line: 126, type: !1760)
!11853 = !DILocation(line: 0, scope: !11848)
!11854 = !DILocation(line: 127, column: 49, scope: !11848)
!11855 = !DILocation(line: 129, column: 14, scope: !11848)
!11856 = !DILocation(line: 129, column: 9, scope: !11848)
!11857 = !DILocation(line: 129, column: 2, scope: !11848)
!11858 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1857, file: !1857, line: 342, type: !11859, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11861)
!11859 = !DISubroutineType(types: !11860)
!11860 = !{!108, !1854, !164}
!11861 = !{!11862, !11863, !11864, !11865}
!11862 = !DILocalVariable(name: "config", arg: 1, scope: !11858, file: !1857, line: 342, type: !1854)
!11863 = !DILocalVariable(name: "id", arg: 2, scope: !11858, file: !1857, line: 343, type: !164)
!11864 = !DILocalVariable(name: "ret", scope: !11858, file: !1857, line: 345, type: !108)
!11865 = !DILocalVariable(name: "state", scope: !11858, file: !1857, line: 346, type: !1860)
!11866 = !DILocation(line: 0, scope: !11858)
!11867 = !DILocation(line: 346, column: 2, scope: !11858)
!11868 = !DILocation(line: 348, column: 8, scope: !11858)
!11869 = !DILocation(line: 349, column: 10, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11858, file: !1857, line: 349, column: 6)
!11871 = !DILocation(line: 349, column: 6, scope: !11858)
!11872 = !DILocation(line: 353, column: 44, scope: !11858)
!11873 = !DILocation(line: 353, column: 9, scope: !11858)
!11874 = !DILocation(line: 353, column: 2, scope: !11858)
!11875 = !DILocation(line: 354, column: 1, scope: !11858)
!11876 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !11398, file: !11398, line: 497, type: !11570, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11877)
!11877 = !{!11878, !11879, !11880}
!11878 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11876, file: !11398, line: 497, type: !1749)
!11879 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11876, file: !11398, line: 497, type: !113)
!11880 = !DILocalVariable(name: "val", scope: !11881, file: !11398, line: 499, type: !113)
!11881 = distinct !DILexicalBlock(scope: !11876, file: !11398, line: 499, column: 3)
!11882 = !DILocation(line: 0, scope: !11876)
!11883 = !DILocation(line: 499, column: 3, scope: !11881)
!11884 = !DILocalVariable(name: "addr", arg: 1, scope: !11885, file: !7083, line: 476, type: !1799)
!11885 = distinct !DISubprogram(name: "__LDREXW", scope: !7083, file: !7083, line: 476, type: !11886, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11888)
!11886 = !DISubroutineType(types: !11887)
!11887 = !{!113, !1799}
!11888 = !{!11884, !11889}
!11889 = !DILocalVariable(name: "result", scope: !11885, file: !7083, line: 478, type: !113)
!11890 = !DILocation(line: 0, scope: !11885, inlinedAt: !11891)
!11891 = distinct !DILocation(line: 499, column: 3, scope: !11892)
!11892 = distinct !DILexicalBlock(scope: !11881, file: !11398, line: 499, column: 3)
!11893 = !DILocation(line: 480, column: 4, scope: !11885, inlinedAt: !11891)
!11894 = !{i64 2962602}
!11895 = !DILocation(line: 499, column: 3, scope: !11892)
!11896 = !DILocation(line: 0, scope: !11881)
!11897 = !DILocalVariable(name: "value", arg: 1, scope: !11898, file: !7083, line: 527, type: !113)
!11898 = distinct !DISubprogram(name: "__STREXW", scope: !7083, file: !7083, line: 527, type: !11899, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11901)
!11899 = !DISubroutineType(types: !11900)
!11900 = !{!113, !113, !1799}
!11901 = !{!11897, !11902, !11903}
!11902 = !DILocalVariable(name: "addr", arg: 2, scope: !11898, file: !7083, line: 527, type: !1799)
!11903 = !DILocalVariable(name: "result", scope: !11898, file: !7083, line: 529, type: !113)
!11904 = !DILocation(line: 0, scope: !11898, inlinedAt: !11905)
!11905 = distinct !DILocation(line: 499, column: 3, scope: !11881)
!11906 = !DILocation(line: 531, column: 4, scope: !11898, inlinedAt: !11905)
!11907 = !{i64 2964038}
!11908 = distinct !{!11908, !11883, !11883}
!11909 = !DILocation(line: 500, column: 1, scope: !11876)
!11910 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !11398, file: !11398, line: 850, type: !11579, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11911)
!11911 = !{!11912, !11913, !11914, !11915}
!11912 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11910, file: !11398, line: 850, type: !1749)
!11913 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11910, file: !11398, line: 850, type: !113)
!11914 = !DILocalVariable(name: "Parity", arg: 3, scope: !11910, file: !11398, line: 850, type: !113)
!11915 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11910, file: !11398, line: 851, type: !113)
!11916 = !DILocation(line: 0, scope: !11910)
!11917 = !DILocation(line: 853, column: 3, scope: !11910)
!11918 = !DILocation(line: 854, column: 3, scope: !11910)
!11919 = !DILocation(line: 855, column: 1, scope: !11910)
!11920 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !11398, file: !11398, line: 1337, type: !11461, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11921)
!11921 = !{!11922}
!11922 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11920, file: !11398, line: 1337, type: !1749)
!11923 = !DILocation(line: 0, scope: !11920)
!11924 = !DILocation(line: 1339, column: 3, scope: !11920)
!11925 = !DILocation(line: 1340, column: 1, scope: !11920)
!11926 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1857, file: !1857, line: 316, type: !11927, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11929)
!11927 = !DISubroutineType(types: !11928)
!11928 = !{!108, !1854, !1860}
!11929 = !{!11930, !11931, !11932}
!11930 = !DILocalVariable(name: "config", arg: 1, scope: !11926, file: !1857, line: 317, type: !1854)
!11931 = !DILocalVariable(name: "state", arg: 2, scope: !11926, file: !1857, line: 318, type: !1860)
!11932 = !DILocalVariable(name: "reg", scope: !11926, file: !1857, line: 320, type: !22)
!11933 = !DILocation(line: 0, scope: !11926)
!11934 = !DILocation(line: 329, column: 39, scope: !11926)
!11935 = !DILocation(line: 329, column: 52, scope: !11926)
!11936 = !DILocation(line: 329, column: 9, scope: !11926)
!11937 = !DILocation(line: 329, column: 2, scope: !11926)
!11938 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !11838, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1664, retainedNodes: !11939)
!11939 = !{!11940}
!11940 = !DILocalVariable(name: "dev", arg: 1, scope: !11938, file: !411, line: 730, type: !1708)
!11941 = !DILocation(line: 0, scope: !11938)
!11942 = !DILocation(line: 732, column: 9, scope: !11938)
!11943 = !DILocation(line: 732, column: 2, scope: !11938)
!11944 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !2004, file: !2004, line: 270, type: !2010, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1926, retainedNodes: !11945)
!11945 = !{!11946}
!11946 = !DILocalVariable(name: "dev", arg: 1, scope: !11944, file: !2004, line: 270, type: !2012)
!11947 = !DILocation(line: 0, scope: !11944)
!11948 = !DILocation(line: 274, column: 2, scope: !11944)
!11949 = !DILocation(line: 275, column: 12, scope: !11944)
!11950 = !DILocation(line: 276, column: 15, scope: !11944)
!11951 = !DILocation(line: 277, column: 16, scope: !11944)
!11952 = !DILocation(line: 278, column: 15, scope: !11944)
!11953 = !DILocation(line: 279, column: 16, scope: !11944)
!11954 = !DILocation(line: 282, column: 2, scope: !11944)
!11955 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !792, file: !792, line: 1814, type: !7117, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1926, retainedNodes: !11956)
!11956 = !{!11957, !11958}
!11957 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11955, file: !792, line: 1814, type: !1151)
!11958 = !DILocalVariable(name: "priority", arg: 2, scope: !11955, file: !792, line: 1814, type: !113)
!11959 = !DILocation(line: 0, scope: !11955)
!11960 = !DILocation(line: 1822, column: 46, scope: !11961)
!11961 = distinct !DILexicalBlock(scope: !11962, file: !792, line: 1821, column: 3)
!11962 = distinct !DILexicalBlock(scope: !11955, file: !792, line: 1816, column: 7)
!11963 = !DILocation(line: 1824, column: 1, scope: !11955)
!11964 = distinct !DISubprogram(name: "sys_clock_isr", scope: !2004, file: !2004, line: 118, type: !7020, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1926, retainedNodes: !11965)
!11965 = !{!11966, !11967}
!11966 = !DILocalVariable(name: "arg", arg: 1, scope: !11964, file: !2004, line: 118, type: !104)
!11967 = !DILocalVariable(name: "dticks", scope: !11964, file: !2004, line: 121, type: !113)
!11968 = !DILocation(line: 0, scope: !11964)
!11969 = !DILocation(line: 124, column: 2, scope: !11964)
!11970 = !DILocation(line: 129, column: 17, scope: !11964)
!11971 = !DILocation(line: 129, column: 14, scope: !11964)
!11972 = !DILocation(line: 130, column: 15, scope: !11964)
!11973 = !DILocation(line: 145, column: 27, scope: !11974)
!11974 = distinct !DILexicalBlock(scope: !11975, file: !2004, line: 132, column: 16)
!11975 = distinct !DILexicalBlock(scope: !11964, file: !2004, line: 132, column: 6)
!11976 = !DILocation(line: 145, column: 25, scope: !11974)
!11977 = !DILocation(line: 145, column: 45, scope: !11974)
!11978 = !DILocation(line: 146, column: 30, scope: !11974)
!11979 = !DILocation(line: 146, column: 20, scope: !11974)
!11980 = !DILocation(line: 147, column: 3, scope: !11974)
!11981 = !DILocation(line: 151, column: 2, scope: !11964)
!11982 = !DILocation(line: 152, column: 1, scope: !11964)
!11983 = distinct !DISubprogram(name: "elapsed", scope: !2004, file: !2004, line: 85, type: !7164, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1926, retainedNodes: !11984)
!11984 = !{!11985, !11986, !11987}
!11985 = !DILocalVariable(name: "val1", scope: !11983, file: !2004, line: 87, type: !113)
!11986 = !DILocalVariable(name: "ctrl", scope: !11983, file: !2004, line: 88, type: !113)
!11987 = !DILocalVariable(name: "val2", scope: !11983, file: !2004, line: 89, type: !113)
!11988 = !DILocation(line: 87, column: 27, scope: !11983)
!11989 = !DILocation(line: 0, scope: !11983)
!11990 = !DILocation(line: 88, column: 27, scope: !11983)
!11991 = !DILocation(line: 89, column: 27, scope: !11983)
!11992 = !DILocation(line: 105, column: 12, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11983, file: !2004, line: 105, column: 6)
!11994 = !DILocation(line: 106, column: 6, scope: !11993)
!11995 = !DILocation(line: 107, column: 16, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11993, file: !2004, line: 106, column: 24)
!11997 = !DILocation(line: 111, column: 18, scope: !11996)
!11998 = !DILocation(line: 112, column: 2, scope: !11996)
!11999 = !DILocation(line: 114, column: 20, scope: !11983)
!12000 = !DILocation(line: 114, column: 30, scope: !11983)
!12001 = !DILocation(line: 114, column: 28, scope: !11983)
!12002 = !DILocation(line: 114, column: 2, scope: !11983)
!12003 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !2004, file: !2004, line: 154, type: !12004, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1926, retainedNodes: !12006)
!12004 = !DISubroutineType(types: !12005)
!12005 = !{null, !220, !422}
!12006 = !{!12007, !12008, !12009, !12010, !12011, !12012, !12013, !12018, !12019}
!12007 = !DILocalVariable(name: "ticks", arg: 1, scope: !12003, file: !2004, line: 154, type: !220)
!12008 = !DILocalVariable(name: "idle", arg: 2, scope: !12003, file: !2004, line: 154, type: !422)
!12009 = !DILocalVariable(name: "delay", scope: !12003, file: !2004, line: 169, type: !113)
!12010 = !DILocalVariable(name: "val1", scope: !12003, file: !2004, line: 170, type: !113)
!12011 = !DILocalVariable(name: "val2", scope: !12003, file: !2004, line: 170, type: !113)
!12012 = !DILocalVariable(name: "last_load_", scope: !12003, file: !2004, line: 171, type: !113)
!12013 = !DILocalVariable(name: "key", scope: !12003, file: !2004, line: 176, type: !12014)
!12014 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !12015)
!12015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !12016)
!12016 = !{!12017}
!12017 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12015, file: !436, line: 33, baseType: !108, size: 32)
!12018 = !DILocalVariable(name: "pending", scope: !12003, file: !2004, line: 178, type: !113)
!12019 = !DILocalVariable(name: "unannounced", scope: !12003, file: !2004, line: 185, type: !113)
!12020 = !DILocation(line: 0, scope: !12003)
!12021 = !DILocation(line: 162, column: 49, scope: !12022)
!12022 = distinct !DILexicalBlock(scope: !12003, file: !2004, line: 162, column: 6)
!12023 = !DILocation(line: 163, column: 17, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !12022, file: !2004, line: 162, column: 78)
!12025 = !DILocation(line: 164, column: 13, scope: !12024)
!12026 = !DILocation(line: 165, column: 3, scope: !12024)
!12027 = !DILocation(line: 171, column: 24, scope: !12003)
!12028 = !DILocation(line: 173, column: 10, scope: !12003)
!12029 = !DILocation(line: 174, column: 10, scope: !12003)
!12030 = !DILocalVariable(name: "l", arg: 1, scope: !12031, file: !436, line: 136, type: !12034)
!12031 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !12032, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1926, retainedNodes: !12035)
!12032 = !DISubroutineType(types: !12033)
!12033 = !{!12014, !12034}
!12034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 32)
!12035 = !{!12030, !12036}
!12036 = !DILocalVariable(name: "k", scope: !12031, file: !436, line: 139, type: !12014)
!12037 = !DILocation(line: 0, scope: !12031, inlinedAt: !12038)
!12038 = distinct !DILocation(line: 176, column: 25, scope: !12003)
!12039 = !DILocation(line: 55, column: 2, scope: !12040, inlinedAt: !12044)
!12040 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4109, file: !4109, line: 42, type: !4110, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1926, retainedNodes: !12041)
!12041 = !{!12042, !12043}
!12042 = !DILocalVariable(name: "key", scope: !12040, file: !4109, line: 44, type: !32)
!12043 = !DILocalVariable(name: "tmp", scope: !12040, file: !4109, line: 53, type: !32)
!12044 = distinct !DILocation(line: 145, column: 10, scope: !12031, inlinedAt: !12038)
!12045 = !{i64 2041485}
!12046 = !DILocation(line: 0, scope: !12040, inlinedAt: !12044)
!12047 = !DILocation(line: 178, column: 21, scope: !12003)
!12048 = !DILocation(line: 180, column: 18, scope: !12003)
!12049 = !DILocation(line: 182, column: 14, scope: !12003)
!12050 = !DILocation(line: 183, column: 15, scope: !12003)
!12051 = !DILocation(line: 185, column: 39, scope: !12003)
!12052 = !DILocation(line: 185, column: 37, scope: !12003)
!12053 = !DILocation(line: 187, column: 27, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !12003, file: !2004, line: 187, column: 6)
!12055 = !DILocation(line: 187, column: 6, scope: !12003)
!12056 = !DILocation(line: 202, column: 27, scope: !12057)
!12057 = distinct !DILexicalBlock(scope: !12054, file: !2004, line: 195, column: 9)
!12058 = !DILocation(line: 202, column: 48, scope: !12057)
!12059 = !DILocation(line: 203, column: 9, scope: !12057)
!12060 = !DILocation(line: 204, column: 11, scope: !12057)
!12061 = !DILocation(line: 205, column: 13, scope: !12062)
!12062 = distinct !DILexicalBlock(scope: !12057, file: !2004, line: 205, column: 7)
!12063 = !DILocation(line: 205, column: 7, scope: !12057)
!12064 = !DILocation(line: 0, scope: !12054)
!12065 = !DILocation(line: 212, column: 18, scope: !12003)
!12066 = !DILocation(line: 214, column: 28, scope: !12003)
!12067 = !DILocation(line: 214, column: 16, scope: !12003)
!12068 = !DILocation(line: 215, column: 15, scope: !12003)
!12069 = !DILocation(line: 227, column: 11, scope: !12070)
!12070 = distinct !DILexicalBlock(scope: !12003, file: !2004, line: 227, column: 6)
!12071 = !DILocation(line: 227, column: 6, scope: !12003)
!12072 = !DILocation(line: 228, column: 15, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12070, file: !2004, line: 227, column: 19)
!12074 = !DILocation(line: 228, column: 38, scope: !12073)
!12075 = !DILocation(line: 228, column: 24, scope: !12073)
!12076 = !DILocation(line: 229, column: 2, scope: !12073)
!12077 = !DILocation(line: 230, column: 24, scope: !12078)
!12078 = distinct !DILexicalBlock(scope: !12070, file: !2004, line: 229, column: 9)
!12079 = !DILocation(line: 230, column: 15, scope: !12078)
!12080 = !DILocation(line: 0, scope: !12070)
!12081 = !DILocalVariable(name: "key", arg: 2, scope: !12082, file: !436, line: 190, type: !12014)
!12082 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !12083, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1926, retainedNodes: !12085)
!12083 = !DISubroutineType(types: !12084)
!12084 = !{null, !12034, !12014}
!12085 = !{!12086, !12081}
!12086 = !DILocalVariable(name: "l", arg: 1, scope: !12082, file: !436, line: 189, type: !12034)
!12087 = !DILocation(line: 0, scope: !12082, inlinedAt: !12088)
!12088 = distinct !DILocation(line: 232, column: 2, scope: !12003)
!12089 = !DILocalVariable(name: "key", arg: 1, scope: !12090, file: !4109, line: 84, type: !32)
!12090 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4109, file: !4109, line: 84, type: !4122, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1926, retainedNodes: !12091)
!12091 = !{!12089}
!12092 = !DILocation(line: 0, scope: !12090, inlinedAt: !12093)
!12093 = distinct !DILocation(line: 215, column: 2, scope: !12082, inlinedAt: !12088)
!12094 = !DILocation(line: 95, column: 2, scope: !12090, inlinedAt: !12093)
!12095 = !{i64 2042302}
!12096 = !DILocation(line: 234, column: 1, scope: !12003)
!12097 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !2004, file: !2004, line: 236, type: !7164, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1926, retainedNodes: !12098)
!12098 = !{!12099, !12100}
!12099 = !DILocalVariable(name: "key", scope: !12097, file: !2004, line: 242, type: !12014)
!12100 = !DILocalVariable(name: "cyc", scope: !12097, file: !2004, line: 243, type: !113)
!12101 = !DILocation(line: 0, scope: !12031, inlinedAt: !12102)
!12102 = distinct !DILocation(line: 242, column: 25, scope: !12097)
!12103 = !DILocation(line: 55, column: 2, scope: !12040, inlinedAt: !12104)
!12104 = distinct !DILocation(line: 145, column: 10, scope: !12031, inlinedAt: !12102)
!12105 = !DILocation(line: 0, scope: !12040, inlinedAt: !12104)
!12106 = !DILocation(line: 0, scope: !12097)
!12107 = !DILocation(line: 243, column: 17, scope: !12097)
!12108 = !DILocation(line: 243, column: 29, scope: !12097)
!12109 = !DILocation(line: 243, column: 27, scope: !12097)
!12110 = !DILocation(line: 243, column: 43, scope: !12097)
!12111 = !DILocation(line: 243, column: 41, scope: !12097)
!12112 = !DILocation(line: 0, scope: !12082, inlinedAt: !12113)
!12113 = distinct !DILocation(line: 245, column: 2, scope: !12097)
!12114 = !DILocation(line: 0, scope: !12090, inlinedAt: !12115)
!12115 = distinct !DILocation(line: 215, column: 2, scope: !12082, inlinedAt: !12113)
!12116 = !DILocation(line: 95, column: 2, scope: !12090, inlinedAt: !12115)
!12117 = !DILocation(line: 246, column: 13, scope: !12097)
!12118 = !DILocation(line: 246, column: 2, scope: !12097)
!12119 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !2004, file: !2004, line: 249, type: !7164, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1926, retainedNodes: !12120)
!12120 = !{!12121, !12122}
!12121 = !DILocalVariable(name: "key", scope: !12119, file: !2004, line: 251, type: !12014)
!12122 = !DILocalVariable(name: "ret", scope: !12119, file: !2004, line: 252, type: !113)
!12123 = !DILocation(line: 0, scope: !12031, inlinedAt: !12124)
!12124 = distinct !DILocation(line: 251, column: 25, scope: !12119)
!12125 = !DILocation(line: 55, column: 2, scope: !12040, inlinedAt: !12126)
!12126 = distinct !DILocation(line: 145, column: 10, scope: !12031, inlinedAt: !12124)
!12127 = !DILocation(line: 0, scope: !12040, inlinedAt: !12126)
!12128 = !DILocation(line: 0, scope: !12119)
!12129 = !DILocation(line: 252, column: 17, scope: !12119)
!12130 = !DILocation(line: 252, column: 29, scope: !12119)
!12131 = !DILocation(line: 252, column: 27, scope: !12119)
!12132 = !DILocation(line: 0, scope: !12082, inlinedAt: !12133)
!12133 = distinct !DILocation(line: 254, column: 2, scope: !12119)
!12134 = !DILocation(line: 0, scope: !12090, inlinedAt: !12135)
!12135 = distinct !DILocation(line: 215, column: 2, scope: !12082, inlinedAt: !12133)
!12136 = !DILocation(line: 95, column: 2, scope: !12090, inlinedAt: !12135)
!12137 = !DILocation(line: 255, column: 2, scope: !12119)
!12138 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !2004, file: !2004, line: 258, type: !3435, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1926, retainedNodes: !437)
!12139 = !DILocation(line: 260, column: 6, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !12138, file: !2004, line: 260, column: 6)
!12141 = !DILocation(line: 260, column: 16, scope: !12140)
!12142 = !DILocation(line: 260, column: 6, scope: !12138)
!12143 = !DILocation(line: 261, column: 17, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !12140, file: !2004, line: 260, column: 34)
!12145 = !DILocation(line: 262, column: 2, scope: !12144)
!12146 = !DILocation(line: 263, column: 1, scope: !12138)
!12147 = distinct !DISubprogram(name: "sys_clock_disable", scope: !2004, file: !2004, line: 265, type: !3435, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1926, retainedNodes: !437)
!12148 = !DILocation(line: 267, column: 16, scope: !12147)
!12149 = !DILocation(line: 268, column: 1, scope: !12147)
!12150 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12151, file: !12151, line: 9, type: !12152, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3242, retainedNodes: !12175)
!12151 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12152 = !DISubroutineType(types: !12153)
!12153 = !{!108, !12154, !164, !12174}
!12154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12155, size: 32)
!12155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12156)
!12156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1857, line: 60, size: 64, elements: !12157)
!12157 = !{!12158, !12173}
!12158 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12156, file: !1857, line: 69, baseType: !12159, size: 32)
!12159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12160, size: 32)
!12160 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12161)
!12161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1857, line: 50, size: 64, elements: !12162)
!12162 = !{!12163, !12171, !12172}
!12163 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12161, file: !1857, line: 52, baseType: !12164, size: 32)
!12164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12165, size: 32)
!12165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12166)
!12166 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1868, line: 37, baseType: !12167)
!12167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1868, line: 32, size: 64, elements: !12168)
!12168 = !{!12169, !12170}
!12169 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12167, file: !1868, line: 34, baseType: !113, size: 32)
!12170 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12167, file: !1868, line: 36, baseType: !113, size: 32, offset: 32)
!12171 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12161, file: !1857, line: 54, baseType: !164, size: 8, offset: 32)
!12172 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12161, file: !1857, line: 56, baseType: !164, size: 8, offset: 40)
!12173 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12156, file: !1857, line: 71, baseType: !164, size: 8, offset: 32)
!12174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12159, size: 32)
!12175 = !{!12176, !12177, !12178}
!12176 = !DILocalVariable(name: "config", arg: 1, scope: !12150, file: !12151, line: 9, type: !12154)
!12177 = !DILocalVariable(name: "id", arg: 2, scope: !12150, file: !12151, line: 9, type: !164)
!12178 = !DILocalVariable(name: "state", arg: 3, scope: !12150, file: !12151, line: 10, type: !12174)
!12179 = !DILocation(line: 0, scope: !12150)
!12180 = !DILocation(line: 12, column: 20, scope: !12150)
!12181 = !DILocation(line: 13, column: 27, scope: !12150)
!12182 = !DILocation(line: 13, column: 42, scope: !12150)
!12183 = !DILocation(line: 13, column: 19, scope: !12150)
!12184 = !DILocation(line: 13, column: 16, scope: !12150)
!12185 = !DILocation(line: 13, column: 2, scope: !12150)
!12186 = distinct !{!12186, !12185, !12187}
!12187 = !DILocation(line: 19, column: 2, scope: !12150)
!12188 = !DILocation(line: 14, column: 23, scope: !12189)
!12189 = distinct !DILexicalBlock(scope: !12190, file: !12151, line: 14, column: 7)
!12190 = distinct !DILexicalBlock(scope: !12150, file: !12151, line: 13, column: 54)
!12191 = !DILocation(line: 14, column: 10, scope: !12189)
!12192 = !DILocation(line: 18, column: 11, scope: !12190)
!12193 = !DILocation(line: 14, column: 7, scope: !12190)
!12194 = !DILocation(line: 22, column: 1, scope: !12150)
!12195 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2121, file: !2121, line: 193, type: !12196, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !12205)
!12196 = !DISubroutineType(types: !12197)
!12197 = !{!108, !12198, !164, !22}
!12198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12199, size: 32)
!12199 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12200)
!12200 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1868, line: 37, baseType: !12201)
!12201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1868, line: 32, size: 64, elements: !12202)
!12202 = !{!12203, !12204}
!12203 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12201, file: !1868, line: 34, baseType: !113, size: 32)
!12204 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12201, file: !1868, line: 36, baseType: !113, size: 32, offset: 32)
!12205 = !{!12206, !12207, !12208, !12209, !12210, !12211, !12212, !12213, !12215}
!12206 = !DILocalVariable(name: "pins", arg: 1, scope: !12195, file: !2121, line: 193, type: !12198)
!12207 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12195, file: !2121, line: 193, type: !164)
!12208 = !DILocalVariable(name: "reg", arg: 3, scope: !12195, file: !2121, line: 194, type: !22)
!12209 = !DILocalVariable(name: "pin", scope: !12195, file: !2121, line: 196, type: !113)
!12210 = !DILocalVariable(name: "mux", scope: !12195, file: !2121, line: 196, type: !113)
!12211 = !DILocalVariable(name: "pin_cgf", scope: !12195, file: !2121, line: 197, type: !113)
!12212 = !DILocalVariable(name: "ret", scope: !12195, file: !2121, line: 198, type: !108)
!12213 = !DILocalVariable(name: "i", scope: !12214, file: !2121, line: 209, type: !164)
!12214 = distinct !DILexicalBlock(scope: !12195, file: !2121, line: 209, column: 2)
!12215 = !DILocalVariable(name: "gpio_out", scope: !12216, file: !2121, line: 239, type: !113)
!12216 = distinct !DILexicalBlock(scope: !12217, file: !2121, line: 238, column: 55)
!12217 = distinct !DILexicalBlock(scope: !12218, file: !2121, line: 238, column: 14)
!12218 = distinct !DILexicalBlock(scope: !12219, file: !2121, line: 236, column: 14)
!12219 = distinct !DILexicalBlock(scope: !12220, file: !2121, line: 234, column: 7)
!12220 = distinct !DILexicalBlock(scope: !12221, file: !2121, line: 209, column: 41)
!12221 = distinct !DILexicalBlock(scope: !12214, file: !2121, line: 209, column: 2)
!12222 = !DILocation(line: 0, scope: !12195)
!12223 = !DILocation(line: 0, scope: !12214)
!12224 = !DILocation(line: 209, column: 25, scope: !12221)
!12225 = !DILocation(line: 209, column: 2, scope: !12214)
!12226 = distinct !{!12226, !12225, !12227}
!12227 = !DILocation(line: 259, column: 2, scope: !12214)
!12228 = !DILocation(line: 210, column: 17, scope: !12220)
!12229 = !DILocation(line: 234, column: 7, scope: !12219)
!12230 = !DILocation(line: 234, column: 33, scope: !12219)
!12231 = !DILocation(line: 234, column: 7, scope: !12220)
!12232 = !DILocation(line: 235, column: 22, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12219, file: !2121, line: 234, column: 49)
!12234 = !DILocation(line: 235, column: 29, scope: !12233)
!12235 = !DILocation(line: 236, column: 3, scope: !12233)
!12236 = !DILocation(line: 236, column: 14, scope: !12219)
!12237 = !DILocation(line: 239, column: 32, scope: !12216)
!12238 = !DILocation(line: 0, scope: !12216)
!12239 = !DILocation(line: 241, column: 8, scope: !12216)
!12240 = !DILocation(line: 246, column: 3, scope: !12216)
!12241 = !DILocation(line: 252, column: 9, scope: !12220)
!12242 = !DILocation(line: 255, column: 9, scope: !12220)
!12243 = !DILocation(line: 256, column: 11, scope: !12244)
!12244 = distinct !DILexicalBlock(scope: !12220, file: !2121, line: 256, column: 7)
!12245 = !DILocation(line: 209, column: 37, scope: !12221)
!12246 = !DILocation(line: 256, column: 7, scope: !12220)
!12247 = !DILocation(line: 262, column: 1, scope: !12195)
!12248 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !2121, file: !2121, line: 176, type: !12249, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !12251)
!12249 = !DISubroutineType(types: !12250)
!12250 = !{!108, !113, !113, !113}
!12251 = !{!12252, !12253, !12254, !12255}
!12252 = !DILocalVariable(name: "pin", arg: 1, scope: !12248, file: !2121, line: 176, type: !113)
!12253 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12248, file: !2121, line: 176, type: !113)
!12254 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12248, file: !2121, line: 176, type: !113)
!12255 = !DILocalVariable(name: "port_device", scope: !12248, file: !2121, line: 178, type: !2051)
!12256 = !DILocation(line: 0, scope: !12248)
!12257 = !DILocation(line: 180, column: 22, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12248, file: !2121, line: 180, column: 6)
!12259 = !DILocation(line: 180, column: 6, scope: !12248)
!12260 = !DILocation(line: 180, column: 6, scope: !12258)
!12261 = !DILocation(line: 184, column: 16, scope: !12248)
!12262 = !DILocation(line: 186, column: 19, scope: !12263)
!12263 = distinct !DILexicalBlock(scope: !12248, file: !2121, line: 186, column: 6)
!12264 = !DILocation(line: 186, column: 28, scope: !12263)
!12265 = !DILocation(line: 186, column: 33, scope: !12263)
!12266 = !DILocation(line: 186, column: 6, scope: !12248)
!12267 = !DILocation(line: 190, column: 43, scope: !12248)
!12268 = !DILocation(line: 190, column: 9, scope: !12248)
!12269 = !DILocation(line: 190, column: 2, scope: !12248)
!12270 = !DILocation(line: 191, column: 1, scope: !12248)
!12271 = distinct !DISubprogram(name: "device_is_ready", scope: !10227, file: !10227, line: 47, type: !12272, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !12274)
!12272 = !DISubroutineType(types: !12273)
!12273 = !{!422, !2051}
!12274 = !{!12275}
!12275 = !DILocalVariable(name: "dev", arg: 1, scope: !12271, file: !10227, line: 47, type: !2051)
!12276 = !DILocation(line: 0, scope: !12271)
!12277 = !DILocation(line: 55, column: 2, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !12271, file: !10227, line: 55, column: 2)
!12279 = !{i64 2149279555}
!12280 = !DILocation(line: 56, column: 9, scope: !12271)
!12281 = !DILocation(line: 56, column: 2, scope: !12271)
!12282 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !12272, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !12283)
!12283 = !{!12284}
!12284 = !DILocalVariable(name: "dev", arg: 1, scope: !12282, file: !411, line: 730, type: !2051)
!12285 = !DILocation(line: 0, scope: !12282)
!12286 = !DILocation(line: 732, column: 9, scope: !12282)
!12287 = !DILocation(line: 732, column: 2, scope: !12282)
!12288 = distinct !DISubprogram(name: "SystemInit", scope: !2171, file: !2171, line: 167, type: !3435, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2129, retainedNodes: !437)
!12289 = !DILocation(line: 182, column: 1, scope: !12288)
!12290 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2171, file: !2171, line: 220, type: !3435, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2129, retainedNodes: !12291)
!12291 = !{!12292, !12293, !12294, !12295, !12296}
!12292 = !DILocalVariable(name: "tmp", scope: !12290, file: !2171, line: 222, type: !113)
!12293 = !DILocalVariable(name: "pllvco", scope: !12290, file: !2171, line: 222, type: !113)
!12294 = !DILocalVariable(name: "pllp", scope: !12290, file: !2171, line: 222, type: !113)
!12295 = !DILocalVariable(name: "pllsource", scope: !12290, file: !2171, line: 222, type: !113)
!12296 = !DILocalVariable(name: "pllm", scope: !12290, file: !2171, line: 222, type: !113)
!12297 = !DILocation(line: 0, scope: !12290)
!12298 = !DILocation(line: 225, column: 14, scope: !12290)
!12299 = !DILocation(line: 225, column: 19, scope: !12290)
!12300 = !DILocation(line: 227, column: 3, scope: !12290)
!12301 = !DILocation(line: 240, column: 25, scope: !12302)
!12302 = distinct !DILexicalBlock(scope: !12290, file: !2171, line: 228, column: 3)
!12303 = !DILocation(line: 241, column: 19, scope: !12302)
!12304 = !DILocation(line: 241, column: 27, scope: !12302)
!12305 = !DILocation(line: 0, scope: !12306)
!12306 = distinct !DILexicalBlock(scope: !12302, file: !2171, line: 243, column: 11)
!12307 = !DILocation(line: 254, column: 22, scope: !12302)
!12308 = !DILocation(line: 254, column: 62, scope: !12302)
!12309 = !DILocation(line: 255, column: 31, scope: !12302)
!12310 = !DILocation(line: 256, column: 7, scope: !12302)
!12311 = !DILocation(line: 0, scope: !12302)
!12312 = !DILocation(line: 263, column: 30, scope: !12290)
!12313 = !DILocation(line: 263, column: 52, scope: !12290)
!12314 = !DILocation(line: 263, column: 9, scope: !12290)
!12315 = !DILocation(line: 265, column: 19, scope: !12290)
!12316 = !DILocation(line: 266, column: 1, scope: !12290)
!12317 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12318, file: !12318, line: 200, type: !12319, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3244, retainedNodes: !437)
!12318 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12319 = !DISubroutineType(types: !12320)
!12320 = !{!12321}
!12321 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3248, line: 44, baseType: !3247)
!12322 = !DILocation(line: 202, column: 3, scope: !12317)
!12323 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12318, file: !12318, line: 219, type: !12324, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3244, retainedNodes: !12348)
!12324 = !DISubroutineType(types: !12325)
!12325 = !{!12321, !12326}
!12326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12327, size: 32)
!12327 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12328, line: 70, baseType: !12329)
!12328 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12329 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12328, line: 49, size: 384, elements: !12330)
!12330 = !{!12331, !12332, !12333, !12334, !12335, !12336, !12337}
!12331 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12329, file: !12328, line: 51, baseType: !113, size: 32)
!12332 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12329, file: !12328, line: 54, baseType: !113, size: 32, offset: 32)
!12333 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12329, file: !12328, line: 57, baseType: !113, size: 32, offset: 64)
!12334 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12329, file: !12328, line: 60, baseType: !113, size: 32, offset: 96)
!12335 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12329, file: !12328, line: 63, baseType: !113, size: 32, offset: 128)
!12336 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12329, file: !12328, line: 66, baseType: !113, size: 32, offset: 160)
!12337 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12329, file: !12328, line: 69, baseType: !12338, size: 192, offset: 192)
!12338 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12339, line: 73, baseType: !12340)
!12339 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12340 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12339, line: 45, size: 192, elements: !12341)
!12341 = !{!12342, !12343, !12344, !12345, !12346, !12347}
!12342 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12340, file: !12339, line: 47, baseType: !113, size: 32)
!12343 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12340, file: !12339, line: 50, baseType: !113, size: 32, offset: 32)
!12344 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12340, file: !12339, line: 53, baseType: !113, size: 32, offset: 64)
!12345 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12340, file: !12339, line: 56, baseType: !113, size: 32, offset: 96)
!12346 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12340, file: !12339, line: 60, baseType: !113, size: 32, offset: 128)
!12347 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12340, file: !12339, line: 63, baseType: !113, size: 32, offset: 160)
!12348 = !{!12349, !12350, !12351, !12352, !12356}
!12349 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12323, file: !12318, line: 219, type: !12326)
!12350 = !DILocalVariable(name: "tickstart", scope: !12323, file: !12318, line: 221, type: !113)
!12351 = !DILocalVariable(name: "pll_config", scope: !12323, file: !12318, line: 221, type: !113)
!12352 = !DILocalVariable(name: "pwrclkchanged", scope: !12353, file: !12318, line: 391, type: !12355)
!12353 = distinct !DILexicalBlock(scope: !12354, file: !12318, line: 390, column: 3)
!12354 = distinct !DILexicalBlock(scope: !12323, file: !12318, line: 389, column: 6)
!12355 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !1158, line: 188, baseType: !3254)
!12356 = !DILocalVariable(name: "tmpreg", scope: !12357, file: !12318, line: 400, type: !574)
!12357 = distinct !DILexicalBlock(scope: !12358, file: !12318, line: 400, column: 7)
!12358 = distinct !DILexicalBlock(scope: !12359, file: !12318, line: 399, column: 5)
!12359 = distinct !DILexicalBlock(scope: !12353, file: !12318, line: 398, column: 8)
!12360 = !DILocation(line: 0, scope: !12323)
!12361 = !DILocation(line: 224, column: 24, scope: !12362)
!12362 = distinct !DILexicalBlock(scope: !12323, file: !12318, line: 224, column: 6)
!12363 = !DILocation(line: 224, column: 6, scope: !12323)
!12364 = !DILocation(line: 232, column: 27, scope: !12365)
!12365 = distinct !DILexicalBlock(scope: !12323, file: !12318, line: 232, column: 6)
!12366 = !DILocation(line: 232, column: 43, scope: !12365)
!12367 = !DILocation(line: 232, column: 69, scope: !12365)
!12368 = !DILocation(line: 232, column: 6, scope: !12323)
!12369 = !DILocation(line: 237, column: 9, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12371, file: !12318, line: 237, column: 8)
!12371 = distinct !DILexicalBlock(scope: !12365, file: !12318, line: 233, column: 3)
!12372 = !DILocation(line: 237, column: 39, scope: !12370)
!12373 = !DILocation(line: 237, column: 60, scope: !12370)
!12374 = !DILocation(line: 238, column: 9, scope: !12370)
!12375 = !DILocation(line: 238, column: 39, scope: !12370)
!12376 = !DILocation(line: 238, column: 60, scope: !12370)
!12377 = !DILocation(line: 238, column: 70, scope: !12370)
!12378 = !DILocation(line: 238, column: 78, scope: !12370)
!12379 = !DILocation(line: 238, column: 100, scope: !12370)
!12380 = !DILocation(line: 237, column: 8, scope: !12371)
!12381 = !DILocation(line: 240, column: 11, scope: !12382)
!12382 = distinct !DILexicalBlock(scope: !12383, file: !12318, line: 240, column: 10)
!12383 = distinct !DILexicalBlock(scope: !12370, file: !12318, line: 239, column: 5)
!12384 = !DILocation(line: 240, column: 57, scope: !12382)
!12385 = !DILocation(line: 240, column: 80, scope: !12382)
!12386 = !DILocation(line: 240, column: 89, scope: !12382)
!12387 = !DILocation(line: 240, column: 10, scope: !12383)
!12388 = !DILocation(line: 248, column: 7, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12390, file: !12318, line: 248, column: 7)
!12390 = distinct !DILexicalBlock(scope: !12391, file: !12318, line: 248, column: 7)
!12391 = distinct !DILexicalBlock(scope: !12370, file: !12318, line: 246, column: 5)
!12392 = !DILocation(line: 248, column: 7, scope: !12390)
!12393 = !DILocation(line: 248, column: 7, scope: !12394)
!12394 = distinct !DILexicalBlock(scope: !12389, file: !12318, line: 248, column: 7)
!12395 = !DILocation(line: 248, column: 7, scope: !12396)
!12396 = distinct !DILexicalBlock(scope: !12397, file: !12318, line: 248, column: 7)
!12397 = distinct !DILexicalBlock(scope: !12389, file: !12318, line: 248, column: 7)
!12398 = !DILocation(line: 248, column: 7, scope: !12399)
!12399 = distinct !DILexicalBlock(scope: !12397, file: !12318, line: 248, column: 7)
!12400 = !DILocation(line: 0, scope: !12389)
!12401 = !DILocation(line: 251, column: 30, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !12391, file: !12318, line: 251, column: 10)
!12403 = !DILocation(line: 251, column: 40, scope: !12402)
!12404 = !DILocation(line: 0, scope: !12402)
!12405 = !DILocation(line: 251, column: 10, scope: !12391)
!12406 = !DILocation(line: 257, column: 15, scope: !12407)
!12407 = distinct !DILexicalBlock(scope: !12402, file: !12318, line: 252, column: 7)
!12408 = !DILocation(line: 257, column: 51, scope: !12407)
!12409 = !DILocation(line: 257, column: 9, scope: !12407)
!12410 = !DILocation(line: 259, column: 15, scope: !12411)
!12411 = distinct !DILexicalBlock(scope: !12412, file: !12318, line: 259, column: 14)
!12412 = distinct !DILexicalBlock(scope: !12407, file: !12318, line: 258, column: 9)
!12413 = !DILocation(line: 259, column: 29, scope: !12411)
!12414 = !DILocation(line: 259, column: 43, scope: !12411)
!12415 = !DILocation(line: 259, column: 14, scope: !12412)
!12416 = distinct !{!12416, !12409, !12417}
!12417 = !DILocation(line: 263, column: 9, scope: !12407)
!12418 = !DILocation(line: 271, column: 15, scope: !12419)
!12419 = distinct !DILexicalBlock(scope: !12402, file: !12318, line: 266, column: 7)
!12420 = !DILocation(line: 271, column: 9, scope: !12419)
!12421 = !DILocation(line: 273, column: 15, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12423, file: !12318, line: 273, column: 14)
!12423 = distinct !DILexicalBlock(scope: !12419, file: !12318, line: 272, column: 9)
!12424 = !DILocation(line: 273, column: 29, scope: !12422)
!12425 = !DILocation(line: 273, column: 43, scope: !12422)
!12426 = !DILocation(line: 273, column: 14, scope: !12423)
!12427 = distinct !{!12427, !12420, !12428}
!12428 = !DILocation(line: 277, column: 9, scope: !12419)
!12429 = !DILocation(line: 282, column: 27, scope: !12430)
!12430 = distinct !DILexicalBlock(scope: !12323, file: !12318, line: 282, column: 6)
!12431 = !DILocation(line: 282, column: 43, scope: !12430)
!12432 = !DILocation(line: 282, column: 69, scope: !12430)
!12433 = !DILocation(line: 282, column: 6, scope: !12323)
!12434 = !DILocation(line: 289, column: 9, scope: !12435)
!12435 = distinct !DILexicalBlock(scope: !12436, file: !12318, line: 289, column: 8)
!12436 = distinct !DILexicalBlock(scope: !12430, file: !12318, line: 283, column: 3)
!12437 = !DILocation(line: 289, column: 39, scope: !12435)
!12438 = !DILocation(line: 289, column: 60, scope: !12435)
!12439 = !DILocation(line: 290, column: 9, scope: !12435)
!12440 = !DILocation(line: 290, column: 39, scope: !12435)
!12441 = !DILocation(line: 290, column: 60, scope: !12435)
!12442 = !DILocation(line: 290, column: 70, scope: !12435)
!12443 = !DILocation(line: 290, column: 78, scope: !12435)
!12444 = !DILocation(line: 290, column: 100, scope: !12435)
!12445 = !DILocation(line: 289, column: 8, scope: !12436)
!12446 = !DILocation(line: 293, column: 11, scope: !12447)
!12447 = distinct !DILexicalBlock(scope: !12448, file: !12318, line: 293, column: 10)
!12448 = distinct !DILexicalBlock(scope: !12435, file: !12318, line: 291, column: 5)
!12449 = !DILocation(line: 293, column: 57, scope: !12447)
!12450 = !DILocation(line: 293, column: 80, scope: !12447)
!12451 = !DILocation(line: 293, column: 89, scope: !12447)
!12452 = !DILocation(line: 293, column: 10, scope: !12448)
!12453 = !DILocation(line: 307, column: 30, scope: !12454)
!12454 = distinct !DILexicalBlock(scope: !12455, file: !12318, line: 307, column: 10)
!12455 = distinct !DILexicalBlock(scope: !12435, file: !12318, line: 305, column: 5)
!12456 = !DILocation(line: 307, column: 39, scope: !12454)
!12457 = !DILocation(line: 307, column: 10, scope: !12455)
!12458 = !DILocation(line: 310, column: 9, scope: !12459)
!12459 = distinct !DILexicalBlock(scope: !12454, file: !12318, line: 308, column: 7)
!12460 = !DILocation(line: 313, column: 21, scope: !12459)
!12461 = !DILocation(line: 316, column: 9, scope: !12459)
!12462 = !DILocation(line: 316, column: 15, scope: !12459)
!12463 = !DILocation(line: 316, column: 51, scope: !12459)
!12464 = !DILocation(line: 318, column: 15, scope: !12465)
!12465 = distinct !DILexicalBlock(scope: !12466, file: !12318, line: 318, column: 14)
!12466 = distinct !DILexicalBlock(scope: !12459, file: !12318, line: 317, column: 9)
!12467 = !DILocation(line: 318, column: 29, scope: !12465)
!12468 = !DILocation(line: 318, column: 43, scope: !12465)
!12469 = !DILocation(line: 318, column: 14, scope: !12466)
!12470 = distinct !{!12470, !12461, !12471}
!12471 = !DILocation(line: 322, column: 9, scope: !12459)
!12472 = !DILocation(line: 330, column: 9, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12454, file: !12318, line: 328, column: 7)
!12474 = !DILocation(line: 333, column: 21, scope: !12473)
!12475 = !DILocation(line: 336, column: 9, scope: !12473)
!12476 = !DILocation(line: 336, column: 15, scope: !12473)
!12477 = !DILocation(line: 338, column: 15, scope: !12478)
!12478 = distinct !DILexicalBlock(scope: !12479, file: !12318, line: 338, column: 14)
!12479 = distinct !DILexicalBlock(scope: !12473, file: !12318, line: 337, column: 9)
!12480 = !DILocation(line: 338, column: 29, scope: !12478)
!12481 = !DILocation(line: 338, column: 43, scope: !12478)
!12482 = !DILocation(line: 338, column: 14, scope: !12479)
!12483 = distinct !{!12483, !12475, !12484}
!12484 = !DILocation(line: 342, column: 9, scope: !12473)
!12485 = !DILocation(line: 0, scope: !12435)
!12486 = !DILocation(line: 347, column: 27, scope: !12487)
!12487 = distinct !DILexicalBlock(scope: !12323, file: !12318, line: 347, column: 6)
!12488 = !DILocation(line: 347, column: 43, scope: !12487)
!12489 = !DILocation(line: 347, column: 69, scope: !12487)
!12490 = !DILocation(line: 347, column: 6, scope: !12323)
!12491 = !DILocation(line: 353, column: 28, scope: !12492)
!12492 = distinct !DILexicalBlock(scope: !12493, file: !12318, line: 353, column: 8)
!12493 = distinct !DILexicalBlock(scope: !12487, file: !12318, line: 348, column: 3)
!12494 = !DILocation(line: 353, column: 37, scope: !12492)
!12495 = !DILocation(line: 353, column: 8, scope: !12493)
!12496 = !DILocation(line: 356, column: 7, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !12492, file: !12318, line: 354, column: 5)
!12498 = !DILocation(line: 359, column: 19, scope: !12497)
!12499 = !DILocation(line: 362, column: 7, scope: !12497)
!12500 = !DILocation(line: 362, column: 13, scope: !12497)
!12501 = !DILocation(line: 362, column: 49, scope: !12497)
!12502 = !DILocation(line: 364, column: 13, scope: !12503)
!12503 = distinct !DILexicalBlock(scope: !12504, file: !12318, line: 364, column: 12)
!12504 = distinct !DILexicalBlock(scope: !12497, file: !12318, line: 363, column: 7)
!12505 = !DILocation(line: 364, column: 27, scope: !12503)
!12506 = !DILocation(line: 364, column: 41, scope: !12503)
!12507 = !DILocation(line: 364, column: 12, scope: !12504)
!12508 = distinct !{!12508, !12499, !12509}
!12509 = !DILocation(line: 368, column: 7, scope: !12497)
!12510 = !DILocation(line: 373, column: 7, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12492, file: !12318, line: 371, column: 5)
!12512 = !DILocation(line: 376, column: 19, scope: !12511)
!12513 = !DILocation(line: 379, column: 7, scope: !12511)
!12514 = !DILocation(line: 379, column: 13, scope: !12511)
!12515 = !DILocation(line: 381, column: 13, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12517, file: !12318, line: 381, column: 12)
!12517 = distinct !DILexicalBlock(scope: !12511, file: !12318, line: 380, column: 7)
!12518 = !DILocation(line: 381, column: 27, scope: !12516)
!12519 = !DILocation(line: 381, column: 41, scope: !12516)
!12520 = !DILocation(line: 381, column: 12, scope: !12517)
!12521 = distinct !{!12521, !12513, !12522}
!12522 = !DILocation(line: 385, column: 7, scope: !12511)
!12523 = !DILocation(line: 389, column: 27, scope: !12354)
!12524 = !DILocation(line: 389, column: 43, scope: !12354)
!12525 = !DILocation(line: 389, column: 69, scope: !12354)
!12526 = !DILocation(line: 389, column: 6, scope: !12323)
!12527 = !DILocation(line: 0, scope: !12353)
!12528 = !DILocation(line: 398, column: 8, scope: !12359)
!12529 = !DILocation(line: 398, column: 8, scope: !12353)
!12530 = !DILocation(line: 400, column: 7, scope: !12357)
!12531 = !DILocation(line: 400, column: 7, scope: !12358)
!12532 = !DILocation(line: 402, column: 5, scope: !12358)
!12533 = !DILocation(line: 404, column: 8, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12353, file: !12318, line: 404, column: 8)
!12535 = !DILocation(line: 404, column: 8, scope: !12353)
!12536 = !DILocation(line: 407, column: 7, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12534, file: !12318, line: 405, column: 5)
!12538 = !DILocation(line: 410, column: 19, scope: !12537)
!12539 = !DILocation(line: 412, column: 7, scope: !12537)
!12540 = !DILocation(line: 412, column: 13, scope: !12537)
!12541 = !DILocation(line: 414, column: 13, scope: !12542)
!12542 = distinct !DILexicalBlock(scope: !12543, file: !12318, line: 414, column: 12)
!12543 = distinct !DILexicalBlock(scope: !12537, file: !12318, line: 413, column: 7)
!12544 = !DILocation(line: 414, column: 27, scope: !12542)
!12545 = !DILocation(line: 414, column: 40, scope: !12542)
!12546 = !DILocation(line: 414, column: 12, scope: !12543)
!12547 = distinct !{!12547, !12539, !12548}
!12548 = !DILocation(line: 418, column: 7, scope: !12537)
!12549 = !DILocation(line: 422, column: 5, scope: !12550)
!12550 = distinct !DILexicalBlock(scope: !12551, file: !12318, line: 422, column: 5)
!12551 = distinct !DILexicalBlock(scope: !12353, file: !12318, line: 422, column: 5)
!12552 = !DILocation(line: 422, column: 5, scope: !12551)
!12553 = !DILocation(line: 422, column: 5, scope: !12554)
!12554 = distinct !DILexicalBlock(scope: !12550, file: !12318, line: 422, column: 5)
!12555 = !DILocation(line: 422, column: 5, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12557, file: !12318, line: 422, column: 5)
!12557 = distinct !DILexicalBlock(scope: !12550, file: !12318, line: 422, column: 5)
!12558 = !DILocation(line: 422, column: 5, scope: !12559)
!12559 = distinct !DILexicalBlock(scope: !12557, file: !12318, line: 422, column: 5)
!12560 = !DILocation(line: 0, scope: !12550)
!12561 = !DILocation(line: 424, column: 28, scope: !12562)
!12562 = distinct !DILexicalBlock(scope: !12353, file: !12318, line: 424, column: 8)
!12563 = !DILocation(line: 424, column: 38, scope: !12562)
!12564 = !DILocation(line: 0, scope: !12562)
!12565 = !DILocation(line: 424, column: 8, scope: !12353)
!12566 = !DILocation(line: 430, column: 13, scope: !12567)
!12567 = distinct !DILexicalBlock(scope: !12562, file: !12318, line: 425, column: 5)
!12568 = !DILocation(line: 430, column: 49, scope: !12567)
!12569 = !DILocation(line: 430, column: 7, scope: !12567)
!12570 = !DILocation(line: 432, column: 13, scope: !12571)
!12571 = distinct !DILexicalBlock(scope: !12572, file: !12318, line: 432, column: 12)
!12572 = distinct !DILexicalBlock(scope: !12567, file: !12318, line: 431, column: 7)
!12573 = !DILocation(line: 432, column: 27, scope: !12571)
!12574 = !DILocation(line: 432, column: 41, scope: !12571)
!12575 = !DILocation(line: 432, column: 12, scope: !12572)
!12576 = distinct !{!12576, !12569, !12577}
!12577 = !DILocation(line: 436, column: 7, scope: !12567)
!12578 = !DILocation(line: 444, column: 13, scope: !12579)
!12579 = distinct !DILexicalBlock(scope: !12562, file: !12318, line: 439, column: 5)
!12580 = !DILocation(line: 444, column: 7, scope: !12579)
!12581 = !DILocation(line: 446, column: 13, scope: !12582)
!12582 = distinct !DILexicalBlock(scope: !12583, file: !12318, line: 446, column: 12)
!12583 = distinct !DILexicalBlock(scope: !12579, file: !12318, line: 445, column: 7)
!12584 = !DILocation(line: 446, column: 27, scope: !12582)
!12585 = !DILocation(line: 446, column: 41, scope: !12582)
!12586 = !DILocation(line: 446, column: 12, scope: !12583)
!12587 = distinct !{!12587, !12580, !12588}
!12588 = !DILocation(line: 450, column: 7, scope: !12579)
!12589 = !DILocation(line: 454, column: 8, scope: !12353)
!12590 = !DILocation(line: 456, column: 7, scope: !12591)
!12591 = distinct !DILexicalBlock(scope: !12592, file: !12318, line: 455, column: 5)
!12592 = distinct !DILexicalBlock(scope: !12353, file: !12318, line: 454, column: 8)
!12593 = !DILocation(line: 457, column: 5, scope: !12591)
!12594 = !DILocation(line: 462, column: 31, scope: !12595)
!12595 = distinct !DILexicalBlock(scope: !12323, file: !12318, line: 462, column: 7)
!12596 = !DILocation(line: 462, column: 41, scope: !12595)
!12597 = !DILocation(line: 462, column: 7, scope: !12323)
!12598 = !DILocation(line: 465, column: 8, scope: !12599)
!12599 = distinct !DILexicalBlock(scope: !12600, file: !12318, line: 465, column: 8)
!12600 = distinct !DILexicalBlock(scope: !12595, file: !12318, line: 463, column: 3)
!12601 = !DILocation(line: 465, column: 38, scope: !12599)
!12602 = !DILocation(line: 465, column: 8, scope: !12600)
!12603 = !DILocation(line: 467, column: 44, scope: !12604)
!12604 = distinct !DILexicalBlock(scope: !12605, file: !12318, line: 467, column: 10)
!12605 = distinct !DILexicalBlock(scope: !12599, file: !12318, line: 466, column: 5)
!12606 = !DILocation(line: 0, scope: !12604)
!12607 = !DILocation(line: 467, column: 10, scope: !12605)
!12608 = !DILocation(line: 483, column: 15, scope: !12609)
!12609 = distinct !DILexicalBlock(scope: !12604, file: !12318, line: 468, column: 7)
!12610 = !DILocation(line: 483, column: 9, scope: !12609)
!12611 = !DILocation(line: 485, column: 15, scope: !12612)
!12612 = distinct !DILexicalBlock(scope: !12613, file: !12318, line: 485, column: 14)
!12613 = distinct !DILexicalBlock(scope: !12609, file: !12318, line: 484, column: 9)
!12614 = !DILocation(line: 485, column: 29, scope: !12612)
!12615 = !DILocation(line: 485, column: 43, scope: !12612)
!12616 = !DILocation(line: 485, column: 14, scope: !12613)
!12617 = distinct !{!12617, !12610, !12618}
!12618 = !DILocation(line: 489, column: 9, scope: !12609)
!12619 = !DILocation(line: 492, column: 9, scope: !12609)
!12620 = !DILocation(line: 498, column: 9, scope: !12609)
!12621 = !DILocation(line: 501, column: 21, scope: !12609)
!12622 = !DILocation(line: 504, column: 9, scope: !12609)
!12623 = !DILocation(line: 504, column: 15, scope: !12609)
!12624 = !DILocation(line: 504, column: 51, scope: !12609)
!12625 = !DILocation(line: 506, column: 15, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12627, file: !12318, line: 506, column: 14)
!12627 = distinct !DILexicalBlock(scope: !12609, file: !12318, line: 505, column: 9)
!12628 = !DILocation(line: 506, column: 29, scope: !12626)
!12629 = !DILocation(line: 506, column: 43, scope: !12626)
!12630 = !DILocation(line: 506, column: 14, scope: !12627)
!12631 = distinct !{!12631, !12622, !12632}
!12632 = !DILocation(line: 510, column: 9, scope: !12609)
!12633 = !DILocation(line: 521, column: 15, scope: !12634)
!12634 = distinct !DILexicalBlock(scope: !12604, file: !12318, line: 513, column: 7)
!12635 = !DILocation(line: 521, column: 9, scope: !12634)
!12636 = !DILocation(line: 523, column: 15, scope: !12637)
!12637 = distinct !DILexicalBlock(scope: !12638, file: !12318, line: 523, column: 14)
!12638 = distinct !DILexicalBlock(scope: !12634, file: !12318, line: 522, column: 9)
!12639 = !DILocation(line: 523, column: 29, scope: !12637)
!12640 = !DILocation(line: 523, column: 43, scope: !12637)
!12641 = !DILocation(line: 523, column: 14, scope: !12638)
!12642 = distinct !{!12642, !12635, !12643}
!12643 = !DILocation(line: 527, column: 9, scope: !12634)
!12644 = !DILocation(line: 533, column: 44, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12646, file: !12318, line: 533, column: 10)
!12646 = distinct !DILexicalBlock(scope: !12599, file: !12318, line: 531, column: 5)
!12647 = !DILocation(line: 533, column: 10, scope: !12646)
!12648 = !DILocation(line: 540, column: 27, scope: !12649)
!12649 = distinct !DILexicalBlock(scope: !12645, file: !12318, line: 538, column: 7)
!12650 = !DILocation(line: 551, column: 14, scope: !12651)
!12651 = distinct !DILexicalBlock(scope: !12649, file: !12318, line: 550, column: 13)
!12652 = !DILocation(line: 551, column: 81, scope: !12651)
!12653 = !DILocation(line: 551, column: 55, scope: !12651)
!12654 = !DILocation(line: 551, column: 92, scope: !12651)
!12655 = !DILocation(line: 552, column: 14, scope: !12651)
!12656 = !DILocation(line: 552, column: 80, scope: !12651)
!12657 = !DILocation(line: 552, column: 53, scope: !12651)
!12658 = !DILocation(line: 552, column: 111, scope: !12651)
!12659 = !DILocation(line: 553, column: 14, scope: !12651)
!12660 = !DILocation(line: 553, column: 80, scope: !12651)
!12661 = !DILocation(line: 553, column: 86, scope: !12651)
!12662 = !DILocation(line: 553, column: 53, scope: !12651)
!12663 = !DILocation(line: 553, column: 111, scope: !12651)
!12664 = !DILocation(line: 554, column: 14, scope: !12651)
!12665 = !DILocation(line: 554, column: 82, scope: !12651)
!12666 = !DILocation(line: 554, column: 101, scope: !12651)
!12667 = !DILocation(line: 554, column: 53, scope: !12651)
!12668 = !DILocation(line: 554, column: 126, scope: !12651)
!12669 = !DILocation(line: 555, column: 14, scope: !12651)
!12670 = !DILocation(line: 555, column: 80, scope: !12651)
!12671 = !DILocation(line: 555, column: 85, scope: !12651)
!12672 = !DILocation(line: 555, column: 53, scope: !12651)
!12673 = !DILocation(line: 550, column: 13, scope: !12649)
!12674 = !DILocation(line: 563, column: 3, scope: !12323)
!12675 = !DILocation(line: 564, column: 1, scope: !12323)
!12676 = !DISubprogram(name: "HAL_GetTick", scope: !12677, file: !12677, line: 234, type: !7164, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!12677 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12678 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12318, file: !12318, line: 591, type: !12679, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3244, retainedNodes: !12690)
!12679 = !DISubroutineType(types: !12680)
!12680 = !{!12321, !12681, !113}
!12681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12682, size: 32)
!12682 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12328, line: 92, baseType: !12683)
!12683 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12328, line: 75, size: 160, elements: !12684)
!12684 = !{!12685, !12686, !12687, !12688, !12689}
!12685 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12683, file: !12328, line: 77, baseType: !113, size: 32)
!12686 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12683, file: !12328, line: 80, baseType: !113, size: 32, offset: 32)
!12687 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12683, file: !12328, line: 83, baseType: !113, size: 32, offset: 64)
!12688 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12683, file: !12328, line: 86, baseType: !113, size: 32, offset: 96)
!12689 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12683, file: !12328, line: 89, baseType: !113, size: 32, offset: 128)
!12690 = !{!12691, !12692, !12693}
!12691 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12678, file: !12318, line: 591, type: !12681)
!12692 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12678, file: !12318, line: 591, type: !113)
!12693 = !DILocalVariable(name: "tickstart", scope: !12678, file: !12318, line: 593, type: !113)
!12694 = !DILocation(line: 0, scope: !12678)
!12695 = !DILocation(line: 596, column: 24, scope: !12696)
!12696 = distinct !DILexicalBlock(scope: !12678, file: !12318, line: 596, column: 6)
!12697 = !DILocation(line: 596, column: 6, scope: !12678)
!12698 = !DILocation(line: 610, column: 17, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12678, file: !12318, line: 610, column: 6)
!12700 = !DILocation(line: 610, column: 15, scope: !12699)
!12701 = !DILocation(line: 610, column: 6, scope: !12678)
!12702 = !DILocation(line: 613, column: 5, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12699, file: !12318, line: 611, column: 3)
!12704 = !DILocation(line: 617, column: 8, scope: !12705)
!12705 = distinct !DILexicalBlock(scope: !12703, file: !12318, line: 617, column: 8)
!12706 = !DILocation(line: 617, column: 34, scope: !12705)
!12707 = !DILocation(line: 617, column: 8, scope: !12703)
!12708 = !DILocation(line: 624, column: 27, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12678, file: !12318, line: 624, column: 6)
!12710 = !DILocation(line: 624, column: 38, scope: !12709)
!12711 = !DILocation(line: 624, column: 60, scope: !12709)
!12712 = !DILocation(line: 624, column: 6, scope: !12678)
!12713 = !DILocation(line: 628, column: 40, scope: !12714)
!12714 = distinct !DILexicalBlock(scope: !12715, file: !12318, line: 628, column: 8)
!12715 = distinct !DILexicalBlock(scope: !12709, file: !12318, line: 625, column: 3)
!12716 = !DILocation(line: 628, column: 63, scope: !12714)
!12717 = !DILocation(line: 628, column: 8, scope: !12715)
!12718 = !DILocation(line: 630, column: 7, scope: !12719)
!12719 = distinct !DILexicalBlock(scope: !12714, file: !12318, line: 629, column: 5)
!12720 = !DILocation(line: 633, column: 29, scope: !12721)
!12721 = distinct !DILexicalBlock(scope: !12715, file: !12318, line: 633, column: 8)
!12722 = !DILocation(line: 631, column: 5, scope: !12719)
!12723 = !DILocation(line: 633, column: 40, scope: !12721)
!12724 = !DILocation(line: 633, column: 63, scope: !12721)
!12725 = !DILocation(line: 633, column: 8, scope: !12715)
!12726 = !DILocation(line: 635, column: 7, scope: !12727)
!12727 = distinct !DILexicalBlock(scope: !12721, file: !12318, line: 634, column: 5)
!12728 = !DILocation(line: 636, column: 5, scope: !12727)
!12729 = !DILocation(line: 639, column: 5, scope: !12715)
!12730 = !DILocation(line: 643, column: 27, scope: !12731)
!12731 = distinct !DILexicalBlock(scope: !12678, file: !12318, line: 643, column: 6)
!12732 = !DILocation(line: 640, column: 3, scope: !12715)
!12733 = !DILocation(line: 643, column: 38, scope: !12731)
!12734 = !DILocation(line: 643, column: 62, scope: !12731)
!12735 = !DILocation(line: 643, column: 6, scope: !12678)
!12736 = !DILocation(line: 648, column: 27, scope: !12737)
!12737 = distinct !DILexicalBlock(scope: !12738, file: !12318, line: 648, column: 8)
!12738 = distinct !DILexicalBlock(scope: !12731, file: !12318, line: 644, column: 3)
!12739 = !DILocation(line: 648, column: 8, scope: !12738)
!12740 = !DILocation(line: 651, column: 10, scope: !12741)
!12741 = distinct !DILexicalBlock(scope: !12742, file: !12318, line: 651, column: 10)
!12742 = distinct !DILexicalBlock(scope: !12737, file: !12318, line: 649, column: 5)
!12743 = !DILocation(line: 651, column: 46, scope: !12741)
!12744 = !DILocation(line: 651, column: 10, scope: !12742)
!12745 = !DILocation(line: 661, column: 10, scope: !12746)
!12746 = distinct !DILexicalBlock(scope: !12747, file: !12318, line: 661, column: 10)
!12747 = distinct !DILexicalBlock(scope: !12748, file: !12318, line: 659, column: 5)
!12748 = distinct !DILexicalBlock(scope: !12737, file: !12318, line: 657, column: 13)
!12749 = !DILocation(line: 661, column: 46, scope: !12746)
!12750 = !DILocation(line: 661, column: 10, scope: !12747)
!12751 = !DILocation(line: 670, column: 10, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12753, file: !12318, line: 670, column: 10)
!12753 = distinct !DILexicalBlock(scope: !12748, file: !12318, line: 668, column: 5)
!12754 = !DILocation(line: 670, column: 46, scope: !12752)
!12755 = !DILocation(line: 670, column: 10, scope: !12753)
!12756 = !DILocation(line: 676, column: 5, scope: !12738)
!12757 = !DILocation(line: 679, column: 17, scope: !12738)
!12758 = !DILocation(line: 681, column: 5, scope: !12738)
!12759 = !DILocation(line: 681, column: 12, scope: !12738)
!12760 = !DILocation(line: 681, column: 65, scope: !12738)
!12761 = !DILocation(line: 681, column: 78, scope: !12738)
!12762 = !DILocation(line: 681, column: 42, scope: !12738)
!12763 = !DILocation(line: 683, column: 12, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12765, file: !12318, line: 683, column: 11)
!12765 = distinct !DILexicalBlock(scope: !12738, file: !12318, line: 682, column: 5)
!12766 = !DILocation(line: 683, column: 26, scope: !12764)
!12767 = !DILocation(line: 683, column: 39, scope: !12764)
!12768 = !DILocation(line: 683, column: 11, scope: !12765)
!12769 = distinct !{!12769, !12758, !12770}
!12770 = !DILocation(line: 687, column: 5, scope: !12738)
!12771 = !DILocation(line: 691, column: 17, scope: !12772)
!12772 = distinct !DILexicalBlock(scope: !12678, file: !12318, line: 691, column: 6)
!12773 = !DILocation(line: 691, column: 15, scope: !12772)
!12774 = !DILocation(line: 691, column: 6, scope: !12678)
!12775 = !DILocation(line: 694, column: 5, scope: !12776)
!12776 = distinct !DILexicalBlock(scope: !12772, file: !12318, line: 692, column: 3)
!12777 = !DILocation(line: 698, column: 8, scope: !12778)
!12778 = distinct !DILexicalBlock(scope: !12776, file: !12318, line: 698, column: 8)
!12779 = !DILocation(line: 698, column: 34, scope: !12778)
!12780 = !DILocation(line: 698, column: 8, scope: !12776)
!12781 = !DILocation(line: 705, column: 27, scope: !12782)
!12782 = distinct !DILexicalBlock(scope: !12678, file: !12318, line: 705, column: 6)
!12783 = !DILocation(line: 705, column: 38, scope: !12782)
!12784 = !DILocation(line: 705, column: 61, scope: !12782)
!12785 = !DILocation(line: 705, column: 6, scope: !12678)
!12786 = !DILocation(line: 708, column: 5, scope: !12787)
!12787 = distinct !DILexicalBlock(scope: !12782, file: !12318, line: 706, column: 3)
!12788 = !DILocation(line: 712, column: 27, scope: !12789)
!12789 = distinct !DILexicalBlock(scope: !12678, file: !12318, line: 712, column: 6)
!12790 = !DILocation(line: 709, column: 3, scope: !12787)
!12791 = !DILocation(line: 712, column: 38, scope: !12789)
!12792 = !DILocation(line: 712, column: 61, scope: !12789)
!12793 = !DILocation(line: 712, column: 6, scope: !12678)
!12794 = !DILocation(line: 715, column: 5, scope: !12795)
!12795 = distinct !DILexicalBlock(scope: !12789, file: !12318, line: 713, column: 3)
!12796 = !DILocation(line: 716, column: 3, scope: !12795)
!12797 = !DILocation(line: 719, column: 21, scope: !12678)
!12798 = !DILocation(line: 719, column: 70, scope: !12678)
!12799 = !DILocation(line: 719, column: 91, scope: !12678)
!12800 = !DILocation(line: 719, column: 50, scope: !12678)
!12801 = !DILocation(line: 719, column: 47, scope: !12678)
!12802 = !DILocation(line: 719, column: 19, scope: !12678)
!12803 = !DILocation(line: 722, column: 17, scope: !12678)
!12804 = !DILocation(line: 722, column: 3, scope: !12678)
!12805 = !DILocation(line: 724, column: 3, scope: !12678)
!12806 = !DILocation(line: 725, column: 1, scope: !12678)
!12807 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12318, file: !12318, line: 885, type: !7164, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3244, retainedNodes: !12808)
!12808 = !{!12809, !12810, !12811, !12812}
!12809 = !DILocalVariable(name: "pllm", scope: !12807, file: !12318, line: 887, type: !113)
!12810 = !DILocalVariable(name: "pllvco", scope: !12807, file: !12318, line: 887, type: !113)
!12811 = !DILocalVariable(name: "pllp", scope: !12807, file: !12318, line: 887, type: !113)
!12812 = !DILocalVariable(name: "sysclockfreq", scope: !12807, file: !12318, line: 888, type: !113)
!12813 = !DILocation(line: 0, scope: !12807)
!12814 = !DILocation(line: 891, column: 16, scope: !12807)
!12815 = !DILocation(line: 891, column: 21, scope: !12807)
!12816 = !DILocation(line: 891, column: 3, scope: !12807)
!12817 = !DILocation(line: 907, column: 19, scope: !12818)
!12818 = distinct !DILexicalBlock(scope: !12819, file: !12318, line: 904, column: 5)
!12819 = distinct !DILexicalBlock(scope: !12807, file: !12318, line: 892, column: 3)
!12820 = !DILocation(line: 907, column: 27, scope: !12818)
!12821 = !DILocation(line: 908, column: 10, scope: !12822)
!12822 = distinct !DILexicalBlock(scope: !12818, file: !12318, line: 908, column: 10)
!12823 = !DILocation(line: 0, scope: !12822)
!12824 = !DILocation(line: 918, column: 23, scope: !12818)
!12825 = !DILocation(line: 918, column: 82, scope: !12818)
!12826 = !DILocation(line: 920, column: 28, scope: !12818)
!12827 = !DILocation(line: 921, column: 7, scope: !12818)
!12828 = !DILocation(line: 0, scope: !12819)
!12829 = !DILocation(line: 929, column: 3, scope: !12807)
!12830 = !DISubprogram(name: "HAL_InitTick", scope: !12677, file: !12677, line: 223, type: !12831, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!12831 = !DISubroutineType(types: !12832)
!12832 = !{!12321, !113}
!12833 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12318, file: !12318, line: 775, type: !12834, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3244, retainedNodes: !12836)
!12834 = !DISubroutineType(types: !12835)
!12835 = !{null, !113, !113, !113}
!12836 = !{!12837, !12838, !12839, !12840, !12850, !12854}
!12837 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12833, file: !12318, line: 775, type: !113)
!12838 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12833, file: !12318, line: 775, type: !113)
!12839 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12833, file: !12318, line: 775, type: !113)
!12840 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12833, file: !12318, line: 777, type: !12841)
!12841 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12842, line: 62, baseType: !12843)
!12842 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12843 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12842, line: 46, size: 160, elements: !12844)
!12844 = !{!12845, !12846, !12847, !12848, !12849}
!12845 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12843, file: !12842, line: 48, baseType: !113, size: 32)
!12846 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12843, file: !12842, line: 51, baseType: !113, size: 32, offset: 32)
!12847 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12843, file: !12842, line: 54, baseType: !113, size: 32, offset: 64)
!12848 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12843, file: !12842, line: 57, baseType: !113, size: 32, offset: 96)
!12849 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12843, file: !12842, line: 60, baseType: !113, size: 32, offset: 128)
!12850 = !DILocalVariable(name: "tmpreg", scope: !12851, file: !12318, line: 787, type: !574)
!12851 = distinct !DILexicalBlock(scope: !12852, file: !12318, line: 787, column: 5)
!12852 = distinct !DILexicalBlock(scope: !12853, file: !12318, line: 783, column: 3)
!12853 = distinct !DILexicalBlock(scope: !12833, file: !12318, line: 782, column: 6)
!12854 = !DILocalVariable(name: "tmpreg", scope: !12855, file: !12318, line: 811, type: !574)
!12855 = distinct !DILexicalBlock(scope: !12856, file: !12318, line: 811, column: 5)
!12856 = distinct !DILexicalBlock(scope: !12853, file: !12318, line: 807, column: 3)
!12857 = !DILocation(line: 0, scope: !12833)
!12858 = !DILocation(line: 777, column: 3, scope: !12833)
!12859 = !DILocation(line: 777, column: 20, scope: !12833)
!12860 = !DILocation(line: 782, column: 15, scope: !12853)
!12861 = !DILocation(line: 782, column: 6, scope: !12833)
!12862 = !DILocation(line: 787, column: 5, scope: !12851)
!12863 = !DILocation(line: 787, column: 5, scope: !12852)
!12864 = !DILocation(line: 790, column: 21, scope: !12852)
!12865 = !DILocation(line: 790, column: 25, scope: !12852)
!12866 = !DILocation(line: 791, column: 21, scope: !12852)
!12867 = !DILocation(line: 791, column: 26, scope: !12852)
!12868 = !DILocation(line: 792, column: 21, scope: !12852)
!12869 = !DILocation(line: 792, column: 27, scope: !12852)
!12870 = !DILocation(line: 793, column: 21, scope: !12852)
!12871 = !DILocation(line: 793, column: 26, scope: !12852)
!12872 = !DILocation(line: 794, column: 21, scope: !12852)
!12873 = !DILocation(line: 794, column: 31, scope: !12852)
!12874 = !DILocation(line: 795, column: 5, scope: !12852)
!12875 = !DILocation(line: 798, column: 5, scope: !12852)
!12876 = !DILocation(line: 804, column: 3, scope: !12852)
!12877 = !DILocation(line: 811, column: 5, scope: !12855)
!12878 = !DILocation(line: 811, column: 5, scope: !12856)
!12879 = !DILocation(line: 814, column: 21, scope: !12856)
!12880 = !DILocation(line: 814, column: 25, scope: !12856)
!12881 = !DILocation(line: 815, column: 21, scope: !12856)
!12882 = !DILocation(line: 815, column: 26, scope: !12856)
!12883 = !DILocation(line: 816, column: 21, scope: !12856)
!12884 = !DILocation(line: 816, column: 27, scope: !12856)
!12885 = !DILocation(line: 817, column: 21, scope: !12856)
!12886 = !DILocation(line: 817, column: 26, scope: !12856)
!12887 = !DILocation(line: 818, column: 21, scope: !12856)
!12888 = !DILocation(line: 818, column: 31, scope: !12856)
!12889 = !DILocation(line: 819, column: 5, scope: !12856)
!12890 = !DILocation(line: 822, column: 5, scope: !12856)
!12891 = !DILocation(line: 0, scope: !12853)
!12892 = !DILocation(line: 830, column: 1, scope: !12833)
!12893 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12842, file: !12842, line: 224, type: !12894, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!12894 = !DISubroutineType(types: !12895)
!12895 = !{null, !3317, !12896}
!12896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12841, size: 32)
!12897 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12318, file: !12318, line: 841, type: !3435, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3244, retainedNodes: !437)
!12898 = !DILocation(line: 843, column: 38, scope: !12897)
!12899 = !DILocation(line: 844, column: 1, scope: !12897)
!12900 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12318, file: !12318, line: 850, type: !3435, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3244, retainedNodes: !437)
!12901 = !DILocation(line: 852, column: 38, scope: !12900)
!12902 = !DILocation(line: 853, column: 1, scope: !12900)
!12903 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12318, file: !12318, line: 941, type: !7164, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3244, retainedNodes: !437)
!12904 = !DILocation(line: 943, column: 10, scope: !12903)
!12905 = !DILocation(line: 943, column: 3, scope: !12903)
!12906 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12318, file: !12318, line: 952, type: !7164, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3244, retainedNodes: !437)
!12907 = !DILocation(line: 955, column: 11, scope: !12906)
!12908 = !DILocation(line: 955, column: 56, scope: !12906)
!12909 = !DILocation(line: 955, column: 78, scope: !12906)
!12910 = !DILocation(line: 955, column: 36, scope: !12906)
!12911 = !DILocation(line: 955, column: 33, scope: !12906)
!12912 = !DILocation(line: 955, column: 3, scope: !12906)
!12913 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12318, file: !12318, line: 964, type: !7164, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3244, retainedNodes: !437)
!12914 = !DILocation(line: 967, column: 11, scope: !12913)
!12915 = !DILocation(line: 967, column: 55, scope: !12913)
!12916 = !DILocation(line: 967, column: 77, scope: !12913)
!12917 = !DILocation(line: 967, column: 35, scope: !12913)
!12918 = !DILocation(line: 967, column: 32, scope: !12913)
!12919 = !DILocation(line: 967, column: 3, scope: !12913)
!12920 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12318, file: !12318, line: 977, type: !12921, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3244, retainedNodes: !12923)
!12921 = !DISubroutineType(types: !12922)
!12922 = !{null, !12326}
!12923 = !{!12924}
!12924 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12920, file: !12318, line: 977, type: !12326)
!12925 = !DILocation(line: 0, scope: !12920)
!12926 = !DILocation(line: 980, column: 22, scope: !12920)
!12927 = !DILocation(line: 980, column: 37, scope: !12920)
!12928 = !DILocation(line: 983, column: 12, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12920, file: !12318, line: 983, column: 6)
!12930 = !DILocation(line: 983, column: 15, scope: !12929)
!12931 = !DILocation(line: 983, column: 31, scope: !12929)
!12932 = !DILocation(line: 983, column: 6, scope: !12920)
!12933 = !DILocation(line: 985, column: 24, scope: !12934)
!12934 = distinct !DILexicalBlock(scope: !12929, file: !12318, line: 984, column: 3)
!12935 = !DILocation(line: 985, column: 33, scope: !12934)
!12936 = !DILocation(line: 986, column: 3, scope: !12934)
!12937 = !DILocation(line: 987, column: 17, scope: !12938)
!12938 = distinct !DILexicalBlock(scope: !12929, file: !12318, line: 987, column: 11)
!12939 = !DILocation(line: 987, column: 20, scope: !12938)
!12940 = !DILocation(line: 987, column: 35, scope: !12938)
!12941 = !DILocation(line: 0, scope: !12938)
!12942 = !DILocation(line: 987, column: 11, scope: !12929)
!12943 = !DILocation(line: 989, column: 33, scope: !12944)
!12944 = distinct !DILexicalBlock(scope: !12938, file: !12318, line: 988, column: 3)
!12945 = !DILocation(line: 990, column: 3, scope: !12944)
!12946 = !DILocation(line: 993, column: 33, scope: !12947)
!12947 = distinct !DILexicalBlock(scope: !12938, file: !12318, line: 992, column: 3)
!12948 = !DILocation(line: 997, column: 12, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12920, file: !12318, line: 997, column: 6)
!12950 = !DILocation(line: 997, column: 15, scope: !12949)
!12951 = !DILocation(line: 1003, column: 24, scope: !12952)
!12952 = distinct !DILexicalBlock(scope: !12949, file: !12318, line: 1002, column: 3)
!12953 = !DILocation(line: 1003, column: 33, scope: !12952)
!12954 = !DILocation(line: 1006, column: 61, scope: !12920)
!12955 = !DILocation(line: 1006, column: 81, scope: !12920)
!12956 = !DILocation(line: 1006, column: 22, scope: !12920)
!12957 = !DILocation(line: 1006, column: 42, scope: !12920)
!12958 = !DILocation(line: 1009, column: 12, scope: !12959)
!12959 = distinct !DILexicalBlock(scope: !12920, file: !12318, line: 1009, column: 6)
!12960 = !DILocation(line: 1009, column: 17, scope: !12959)
!12961 = !DILocation(line: 1009, column: 35, scope: !12959)
!12962 = !DILocation(line: 1009, column: 6, scope: !12920)
!12963 = !DILocation(line: 1011, column: 24, scope: !12964)
!12964 = distinct !DILexicalBlock(scope: !12959, file: !12318, line: 1010, column: 3)
!12965 = !DILocation(line: 1011, column: 33, scope: !12964)
!12966 = !DILocation(line: 1012, column: 3, scope: !12964)
!12967 = !DILocation(line: 1013, column: 17, scope: !12968)
!12968 = distinct !DILexicalBlock(scope: !12959, file: !12318, line: 1013, column: 11)
!12969 = !DILocation(line: 1013, column: 22, scope: !12968)
!12970 = !DILocation(line: 1013, column: 39, scope: !12968)
!12971 = !DILocation(line: 0, scope: !12968)
!12972 = !DILocation(line: 1013, column: 11, scope: !12959)
!12973 = !DILocation(line: 1015, column: 33, scope: !12974)
!12974 = distinct !DILexicalBlock(scope: !12968, file: !12318, line: 1014, column: 3)
!12975 = !DILocation(line: 1016, column: 3, scope: !12974)
!12976 = !DILocation(line: 1019, column: 33, scope: !12977)
!12977 = distinct !DILexicalBlock(scope: !12968, file: !12318, line: 1018, column: 3)
!12978 = !DILocation(line: 1023, column: 12, scope: !12979)
!12979 = distinct !DILexicalBlock(scope: !12920, file: !12318, line: 1023, column: 6)
!12980 = !DILocation(line: 1023, column: 16, scope: !12979)
!12981 = !DILocation(line: 1029, column: 24, scope: !12982)
!12982 = distinct !DILexicalBlock(scope: !12979, file: !12318, line: 1028, column: 3)
!12983 = !DILocation(line: 1029, column: 33, scope: !12982)
!12984 = !DILocation(line: 1033, column: 12, scope: !12985)
!12985 = distinct !DILexicalBlock(scope: !12920, file: !12318, line: 1033, column: 6)
!12986 = !DILocation(line: 1033, column: 15, scope: !12985)
!12987 = !DILocation(line: 1033, column: 30, scope: !12985)
!12988 = !DILocation(line: 1033, column: 6, scope: !12920)
!12989 = !DILocation(line: 1039, column: 28, scope: !12990)
!12990 = distinct !DILexicalBlock(scope: !12985, file: !12318, line: 1038, column: 3)
!12991 = !DILocation(line: 1039, column: 37, scope: !12990)
!12992 = !DILocation(line: 1041, column: 54, scope: !12920)
!12993 = !DILocation(line: 1041, column: 62, scope: !12920)
!12994 = !DILocation(line: 1041, column: 26, scope: !12920)
!12995 = !DILocation(line: 1041, column: 36, scope: !12920)
!12996 = !DILocation(line: 1042, column: 49, scope: !12920)
!12997 = !DILocation(line: 1042, column: 57, scope: !12920)
!12998 = !DILocation(line: 1042, column: 26, scope: !12920)
!12999 = !DILocation(line: 1042, column: 31, scope: !12920)
!13000 = !DILocation(line: 1043, column: 50, scope: !12920)
!13001 = !DILocation(line: 1043, column: 78, scope: !12920)
!13002 = !DILocation(line: 1043, column: 26, scope: !12920)
!13003 = !DILocation(line: 1043, column: 31, scope: !12920)
!13004 = !DILocation(line: 1044, column: 52, scope: !12920)
!13005 = !DILocation(line: 1044, column: 102, scope: !12920)
!13006 = !DILocation(line: 1044, column: 109, scope: !12920)
!13007 = !DILocation(line: 1044, column: 26, scope: !12920)
!13008 = !DILocation(line: 1044, column: 31, scope: !12920)
!13009 = !DILocation(line: 1045, column: 50, scope: !12920)
!13010 = !DILocation(line: 1045, column: 78, scope: !12920)
!13011 = !DILocation(line: 1045, column: 26, scope: !12920)
!13012 = !DILocation(line: 1045, column: 31, scope: !12920)
!13013 = !DILocation(line: 1046, column: 1, scope: !12920)
!13014 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12318, file: !12318, line: 1056, type: !13015, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3244, retainedNodes: !13017)
!13015 = !DISubroutineType(types: !13016)
!13016 = !{null, !12681, !1214}
!13017 = !{!13018, !13019}
!13018 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !13014, file: !12318, line: 1056, type: !12681)
!13019 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !13014, file: !12318, line: 1056, type: !1214)
!13020 = !DILocation(line: 0, scope: !13014)
!13021 = !DILocation(line: 1059, column: 22, scope: !13014)
!13022 = !DILocation(line: 1059, column: 32, scope: !13014)
!13023 = !DILocation(line: 1062, column: 53, scope: !13014)
!13024 = !DILocation(line: 1062, column: 58, scope: !13014)
!13025 = !DILocation(line: 1062, column: 22, scope: !13014)
!13026 = !DILocation(line: 1062, column: 35, scope: !13014)
!13027 = !DILocation(line: 1065, column: 54, scope: !13014)
!13028 = !DILocation(line: 1065, column: 59, scope: !13014)
!13029 = !DILocation(line: 1065, column: 22, scope: !13014)
!13030 = !DILocation(line: 1065, column: 36, scope: !13014)
!13031 = !DILocation(line: 1068, column: 55, scope: !13014)
!13032 = !DILocation(line: 1068, column: 60, scope: !13014)
!13033 = !DILocation(line: 1068, column: 22, scope: !13014)
!13034 = !DILocation(line: 1068, column: 37, scope: !13014)
!13035 = !DILocation(line: 1071, column: 56, scope: !13014)
!13036 = !DILocation(line: 1071, column: 79, scope: !13014)
!13037 = !DILocation(line: 1071, column: 22, scope: !13014)
!13038 = !DILocation(line: 1071, column: 37, scope: !13014)
!13039 = !DILocation(line: 1074, column: 34, scope: !13014)
!13040 = !DILocation(line: 1074, column: 38, scope: !13014)
!13041 = !DILocation(line: 1074, column: 14, scope: !13014)
!13042 = !DILocation(line: 1075, column: 1, scope: !13014)
!13043 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12318, file: !12318, line: 1082, type: !3435, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3244, retainedNodes: !437)
!13044 = !DILocation(line: 1085, column: 6, scope: !13045)
!13045 = distinct !DILexicalBlock(scope: !13043, file: !12318, line: 1085, column: 6)
!13046 = !DILocation(line: 1085, column: 6, scope: !13043)
!13047 = !DILocation(line: 1088, column: 5, scope: !13048)
!13048 = distinct !DILexicalBlock(scope: !13045, file: !12318, line: 1086, column: 3)
!13049 = !DILocation(line: 1091, column: 5, scope: !13048)
!13050 = !DILocation(line: 1092, column: 3, scope: !13048)
!13051 = !DILocation(line: 1093, column: 1, scope: !13043)
!13052 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12318, file: !12318, line: 1099, type: !3435, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3244, retainedNodes: !437)
!13053 = !DILocation(line: 1104, column: 1, scope: !13052)
!13054 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !13055, file: !13055, line: 257, type: !7174, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !13056)
!13055 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13056 = !{!13057}
!13057 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13054, file: !13055, line: 257, type: !113)
!13058 = !DILocation(line: 0, scope: !13054)
!13059 = !DILocation(line: 260, column: 3, scope: !13054)
!13060 = !DILocation(line: 261, column: 1, scope: !13054)
!13061 = distinct !DISubprogram(name: "LL_InitTick", scope: !13062, file: !13062, line: 260, type: !10715, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !13063)
!13062 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13063 = !{!13064, !13065}
!13064 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13061, file: !13062, line: 260, type: !113)
!13065 = !DILocalVariable(name: "Ticks", arg: 2, scope: !13061, file: !13062, line: 260, type: !113)
!13066 = !DILocation(line: 0, scope: !13061)
!13067 = !DILocation(line: 263, column: 46, scope: !13061)
!13068 = !DILocation(line: 263, column: 55, scope: !13061)
!13069 = !DILocation(line: 263, column: 18, scope: !13061)
!13070 = !DILocation(line: 264, column: 18, scope: !13061)
!13071 = !DILocation(line: 265, column: 18, scope: !13061)
!13072 = !DILocation(line: 267, column: 1, scope: !13061)
!13073 = distinct !DISubprogram(name: "LL_mDelay", scope: !13055, file: !13055, line: 273, type: !7174, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !13074)
!13074 = !{!13075, !13076}
!13075 = !DILocalVariable(name: "Delay", arg: 1, scope: !13073, file: !13055, line: 273, type: !113)
!13076 = !DILocalVariable(name: "tmp", scope: !13073, file: !13055, line: 275, type: !574)
!13077 = !DILocation(line: 0, scope: !13073)
!13078 = !DILocation(line: 275, column: 3, scope: !13073)
!13079 = !DILocation(line: 275, column: 18, scope: !13073)
!13080 = !DILocation(line: 275, column: 33, scope: !13073)
!13081 = !DILocation(line: 277, column: 10, scope: !13073)
!13082 = !DILocation(line: 280, column: 12, scope: !13083)
!13083 = distinct !DILexicalBlock(scope: !13073, file: !13055, line: 280, column: 6)
!13084 = !DILocation(line: 285, column: 3, scope: !13073)
!13085 = !DILocation(line: 287, column: 18, scope: !13086)
!13086 = distinct !DILexicalBlock(scope: !13087, file: !13055, line: 287, column: 8)
!13087 = distinct !DILexicalBlock(scope: !13073, file: !13055, line: 286, column: 3)
!13088 = !DILocation(line: 292, column: 1, scope: !13073)
!13089 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !13055, file: !13055, line: 323, type: !7174, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !13090)
!13090 = !{!13091}
!13091 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13089, file: !13055, line: 323, type: !113)
!13092 = !DILocation(line: 0, scope: !13089)
!13093 = !DILocation(line: 326, column: 19, scope: !13089)
!13094 = !DILocation(line: 327, column: 1, scope: !13089)
!13095 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !13055, file: !13055, line: 338, type: !13096, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !13099)
!13096 = !DISubroutineType(types: !13097)
!13097 = !{!13098, !113}
!13098 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !1158, line: 201, baseType: !1157)
!13099 = !{!13100, !13101, !13102, !13103, !13104}
!13100 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !13095, file: !13055, line: 338, type: !113)
!13101 = !DILocalVariable(name: "timeout", scope: !13095, file: !13055, line: 340, type: !113)
!13102 = !DILocalVariable(name: "getlatency", scope: !13095, file: !13055, line: 341, type: !113)
!13103 = !DILocalVariable(name: "latency", scope: !13095, file: !13055, line: 342, type: !113)
!13104 = !DILocalVariable(name: "status", scope: !13095, file: !13055, line: 343, type: !13098)
!13105 = !DILocation(line: 0, scope: !13095)
!13106 = !DILocation(line: 347, column: 21, scope: !13107)
!13107 = distinct !DILexicalBlock(scope: !13095, file: !13055, line: 347, column: 6)
!13108 = !DILocation(line: 347, column: 6, scope: !13095)
!13109 = !DILocation(line: 353, column: 8, scope: !13110)
!13110 = distinct !DILexicalBlock(scope: !13111, file: !13055, line: 353, column: 8)
!13111 = distinct !DILexicalBlock(scope: !13107, file: !13055, line: 352, column: 3)
!13112 = !DILocation(line: 387, column: 8, scope: !13113)
!13113 = distinct !DILexicalBlock(scope: !13111, file: !13055, line: 387, column: 8)
!13114 = !DILocation(line: 387, column: 40, scope: !13113)
!13115 = !DILocation(line: 387, column: 8, scope: !13111)
!13116 = !DILocation(line: 407, column: 26, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13118, file: !13055, line: 407, column: 10)
!13118 = distinct !DILexicalBlock(scope: !13113, file: !13055, line: 388, column: 5)
!13119 = !DILocation(line: 407, column: 55, scope: !13117)
!13120 = !DILocation(line: 413, column: 28, scope: !13121)
!13121 = distinct !DILexicalBlock(scope: !13122, file: !13055, line: 413, column: 12)
!13122 = distinct !DILexicalBlock(scope: !13117, file: !13055, line: 412, column: 7)
!13123 = !DILocation(line: 413, column: 57, scope: !13121)
!13124 = !DILocation(line: 420, column: 8, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !13111, file: !13055, line: 420, column: 8)
!13126 = !DILocation(line: 420, column: 40, scope: !13125)
!13127 = !DILocation(line: 420, column: 8, scope: !13111)
!13128 = !DILocation(line: 429, column: 26, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13130, file: !13055, line: 429, column: 10)
!13130 = distinct !DILexicalBlock(scope: !13125, file: !13055, line: 421, column: 5)
!13131 = !DILocation(line: 429, column: 55, scope: !13129)
!13132 = !DILocation(line: 435, column: 28, scope: !13133)
!13133 = distinct !DILexicalBlock(scope: !13134, file: !13055, line: 435, column: 12)
!13134 = distinct !DILexicalBlock(scope: !13129, file: !13055, line: 434, column: 7)
!13135 = !DILocation(line: 435, column: 57, scope: !13133)
!13136 = !DILocation(line: 0, scope: !13111)
!13137 = !DILocation(line: 444, column: 5, scope: !13111)
!13138 = !DILocation(line: 448, column: 5, scope: !13111)
!13139 = !DILocation(line: 451, column: 18, scope: !13140)
!13140 = distinct !DILexicalBlock(scope: !13111, file: !13055, line: 449, column: 5)
!13141 = !DILocation(line: 452, column: 12, scope: !13140)
!13142 = !DILocation(line: 453, column: 26, scope: !13111)
!13143 = !DILocation(line: 453, column: 38, scope: !13111)
!13144 = !DILocation(line: 453, column: 5, scope: !13140)
!13145 = distinct !{!13145, !13138, !13146}
!13146 = !DILocation(line: 453, column: 54, scope: !13111)
!13147 = !DILocation(line: 0, scope: !13107)
!13148 = !DILocation(line: 464, column: 3, scope: !13095)
!13149 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !13150, file: !13150, line: 519, type: !7164, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !437)
!13150 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13151 = !DILocation(line: 521, column: 21, scope: !13149)
!13152 = !DILocation(line: 521, column: 3, scope: !13149)
!13153 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6786, file: !6786, line: 1543, type: !7174, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !13154)
!13154 = !{!13155}
!13155 = !DILocalVariable(name: "Latency", arg: 1, scope: !13153, file: !6786, line: 1543, type: !113)
!13156 = !DILocation(line: 0, scope: !13153)
!13157 = !DILocation(line: 1545, column: 3, scope: !13153)
!13158 = !DILocation(line: 1546, column: 1, scope: !13153)
!13159 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6786, file: !6786, line: 1569, type: !7164, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !437)
!13160 = !DILocation(line: 1571, column: 21, scope: !13159)
!13161 = !DILocation(line: 1571, column: 3, scope: !13159)
!13162 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !13055, file: !13055, line: 483, type: !13163, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !13179)
!13163 = !DISubroutineType(types: !13164)
!13164 = !{!13098, !13165, !13172}
!13165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13166, size: 32)
!13166 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !13062, line: 114, baseType: !13167)
!13167 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13062, line: 94, size: 96, elements: !13168)
!13168 = !{!13169, !13170, !13171}
!13169 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13167, file: !13062, line: 96, baseType: !113, size: 32)
!13170 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13167, file: !13062, line: 102, baseType: !113, size: 32, offset: 32)
!13171 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13167, file: !13062, line: 109, baseType: !113, size: 32, offset: 64)
!13172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13173, size: 32)
!13173 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !13062, line: 139, baseType: !13174)
!13174 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13062, line: 119, size: 96, elements: !13175)
!13175 = !{!13176, !13177, !13178}
!13176 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13174, file: !13062, line: 121, baseType: !113, size: 32)
!13177 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13174, file: !13062, line: 127, baseType: !113, size: 32, offset: 32)
!13178 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13174, file: !13062, line: 133, baseType: !113, size: 32, offset: 64)
!13179 = !{!13180, !13181, !13182, !13183}
!13180 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13162, file: !13055, line: 483, type: !13165)
!13181 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13162, file: !13055, line: 484, type: !13172)
!13182 = !DILocalVariable(name: "status", scope: !13162, file: !13055, line: 486, type: !13098)
!13183 = !DILocalVariable(name: "pllfreq", scope: !13162, file: !13055, line: 487, type: !113)
!13184 = !DILocation(line: 0, scope: !13162)
!13185 = !DILocation(line: 490, column: 6, scope: !13186)
!13186 = distinct !DILexicalBlock(scope: !13162, file: !13055, line: 490, column: 6)
!13187 = !DILocation(line: 490, column: 25, scope: !13186)
!13188 = !DILocation(line: 490, column: 6, scope: !13162)
!13189 = !DILocation(line: 493, column: 15, scope: !13190)
!13190 = distinct !DILexicalBlock(scope: !13186, file: !13055, line: 491, column: 3)
!13191 = !DILocation(line: 496, column: 8, scope: !13192)
!13192 = distinct !DILexicalBlock(scope: !13190, file: !13055, line: 496, column: 8)
!13193 = !DILocation(line: 496, column: 29, scope: !13192)
!13194 = !DILocation(line: 496, column: 8, scope: !13190)
!13195 = !DILocation(line: 498, column: 7, scope: !13196)
!13196 = distinct !DILexicalBlock(scope: !13192, file: !13055, line: 497, column: 5)
!13197 = !DILocation(line: 499, column: 7, scope: !13196)
!13198 = !DILocation(line: 499, column: 14, scope: !13196)
!13199 = !DILocation(line: 499, column: 35, scope: !13196)
!13200 = distinct !{!13200, !13197, !13201}
!13201 = !DILocation(line: 502, column: 7, scope: !13196)
!13202 = !DILocation(line: 506, column: 76, scope: !13190)
!13203 = !DILocation(line: 506, column: 103, scope: !13190)
!13204 = !DILocation(line: 507, column: 54, scope: !13190)
!13205 = !DILocation(line: 506, column: 5, scope: !13190)
!13206 = !DILocation(line: 510, column: 14, scope: !13190)
!13207 = !DILocation(line: 511, column: 3, scope: !13190)
!13208 = !DILocation(line: 0, scope: !13186)
!13209 = !DILocation(line: 518, column: 3, scope: !13162)
!13210 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !13055, file: !13055, line: 642, type: !13211, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !13213)
!13211 = !DISubroutineType(types: !13212)
!13212 = !{!13098}
!13213 = !{!13214}
!13214 = !DILocalVariable(name: "status", scope: !13210, file: !13055, line: 644, type: !13098)
!13215 = !DILocation(line: 0, scope: !13210)
!13216 = !DILocation(line: 647, column: 6, scope: !13217)
!13217 = distinct !DILexicalBlock(scope: !13210, file: !13055, line: 647, column: 6)
!13218 = !DILocation(line: 647, column: 27, scope: !13217)
!13219 = !DILocation(line: 663, column: 6, scope: !13220)
!13220 = distinct !DILexicalBlock(scope: !13210, file: !13055, line: 663, column: 6)
!13221 = !DILocation(line: 663, column: 30, scope: !13220)
!13222 = !DILocation(line: 663, column: 6, scope: !13210)
!13223 = !DILocation(line: 669, column: 3, scope: !13210)
!13224 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !13055, file: !13055, line: 611, type: !13225, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !13227)
!13225 = !DISubroutineType(types: !13226)
!13226 = !{!113, !113, !13165}
!13227 = !{!13228, !13229, !13230}
!13228 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13224, file: !13055, line: 611, type: !113)
!13229 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13224, file: !13055, line: 611, type: !13165)
!13230 = !DILocalVariable(name: "pllfreq", scope: !13224, file: !13055, line: 613, type: !113)
!13231 = !DILocation(line: 0, scope: !13224)
!13232 = !DILocation(line: 622, column: 56, scope: !13224)
!13233 = !DILocation(line: 622, column: 61, scope: !13224)
!13234 = !DILocation(line: 622, column: 32, scope: !13224)
!13235 = !DILocation(line: 626, column: 45, scope: !13224)
!13236 = !DILocation(line: 626, column: 50, scope: !13224)
!13237 = !DILocation(line: 626, column: 21, scope: !13224)
!13238 = !DILocation(line: 630, column: 47, scope: !13224)
!13239 = !DILocation(line: 630, column: 82, scope: !13224)
!13240 = !DILocation(line: 630, column: 21, scope: !13224)
!13241 = !DILocation(line: 633, column: 3, scope: !13224)
!13242 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10055, file: !10055, line: 3007, type: !7164, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !437)
!13243 = !DILocation(line: 3009, column: 11, scope: !13242)
!13244 = !DILocation(line: 3009, column: 44, scope: !13242)
!13245 = !DILocation(line: 3009, column: 3, scope: !13242)
!13246 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10055, file: !10055, line: 2987, type: !3435, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !437)
!13247 = !DILocation(line: 2989, column: 3, scope: !13246)
!13248 = !DILocation(line: 2990, column: 1, scope: !13246)
!13249 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10055, file: !10055, line: 4304, type: !10189, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !13250)
!13250 = !{!13251, !13252, !13253, !13254}
!13251 = !DILocalVariable(name: "Source", arg: 1, scope: !13249, file: !10055, line: 4304, type: !113)
!13252 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13249, file: !10055, line: 4304, type: !113)
!13253 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13249, file: !10055, line: 4304, type: !113)
!13254 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13249, file: !10055, line: 4304, type: !113)
!13255 = !DILocation(line: 0, scope: !13249)
!13256 = !DILocation(line: 4306, column: 3, scope: !13249)
!13257 = !DILocation(line: 4308, column: 3, scope: !13249)
!13258 = !DILocation(line: 4312, column: 1, scope: !13249)
!13259 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !13055, file: !13055, line: 681, type: !13260, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !13262)
!13260 = !DISubroutineType(types: !13261)
!13261 = !{!13098, !113, !13172}
!13262 = !{!13263, !13264, !13265, !13266}
!13263 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13259, file: !13055, line: 681, type: !113)
!13264 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13259, file: !13055, line: 681, type: !13172)
!13265 = !DILocalVariable(name: "status", scope: !13259, file: !13055, line: 683, type: !13098)
!13266 = !DILocalVariable(name: "hclk_frequency", scope: !13259, file: !13055, line: 684, type: !113)
!13267 = !DILocation(line: 0, scope: !13259)
!13268 = !DILocation(line: 691, column: 20, scope: !13259)
!13269 = !DILocation(line: 694, column: 6, scope: !13270)
!13270 = distinct !DILexicalBlock(scope: !13259, file: !13055, line: 694, column: 6)
!13271 = !DILocation(line: 694, column: 22, scope: !13270)
!13272 = !DILocation(line: 694, column: 6, scope: !13259)
!13273 = !DILocation(line: 697, column: 14, scope: !13274)
!13274 = distinct !DILexicalBlock(scope: !13270, file: !13055, line: 695, column: 3)
!13275 = !DILocation(line: 701, column: 13, scope: !13276)
!13276 = distinct !DILexicalBlock(scope: !13259, file: !13055, line: 701, column: 6)
!13277 = !DILocation(line: 701, column: 6, scope: !13259)
!13278 = !DILocation(line: 704, column: 5, scope: !13279)
!13279 = distinct !DILexicalBlock(scope: !13276, file: !13055, line: 702, column: 3)
!13280 = !DILocation(line: 705, column: 5, scope: !13279)
!13281 = !DILocation(line: 705, column: 12, scope: !13279)
!13282 = !DILocation(line: 705, column: 33, scope: !13279)
!13283 = distinct !{!13283, !13280, !13284}
!13284 = !DILocation(line: 708, column: 5, scope: !13279)
!13285 = !DILocation(line: 711, column: 49, scope: !13279)
!13286 = !DILocation(line: 711, column: 5, scope: !13279)
!13287 = !DILocation(line: 712, column: 5, scope: !13279)
!13288 = !DILocation(line: 713, column: 5, scope: !13279)
!13289 = !DILocation(line: 713, column: 12, scope: !13279)
!13290 = !DILocation(line: 713, column: 37, scope: !13279)
!13291 = distinct !{!13291, !13288, !13292}
!13292 = !DILocation(line: 716, column: 5, scope: !13279)
!13293 = !DILocation(line: 719, column: 50, scope: !13279)
!13294 = !DILocation(line: 719, column: 5, scope: !13279)
!13295 = !DILocation(line: 720, column: 50, scope: !13279)
!13296 = !DILocation(line: 720, column: 5, scope: !13279)
!13297 = !DILocation(line: 721, column: 3, scope: !13279)
!13298 = !DILocation(line: 724, column: 6, scope: !13299)
!13299 = distinct !DILexicalBlock(scope: !13259, file: !13055, line: 724, column: 6)
!13300 = !DILocation(line: 724, column: 22, scope: !13299)
!13301 = !DILocation(line: 724, column: 6, scope: !13259)
!13302 = !DILocation(line: 727, column: 14, scope: !13303)
!13303 = distinct !DILexicalBlock(scope: !13299, file: !13055, line: 725, column: 3)
!13304 = !DILocation(line: 728, column: 3, scope: !13303)
!13305 = !DILocation(line: 731, column: 13, scope: !13306)
!13306 = distinct !DILexicalBlock(scope: !13259, file: !13055, line: 731, column: 6)
!13307 = !DILocation(line: 731, column: 6, scope: !13259)
!13308 = !DILocation(line: 733, column: 5, scope: !13309)
!13309 = distinct !DILexicalBlock(scope: !13306, file: !13055, line: 732, column: 3)
!13310 = !DILocation(line: 734, column: 3, scope: !13309)
!13311 = !DILocation(line: 736, column: 3, scope: !13259)
!13312 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10055, file: !10055, line: 4184, type: !3435, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !437)
!13313 = !DILocation(line: 4186, column: 3, scope: !13312)
!13314 = !DILocation(line: 4187, column: 1, scope: !13312)
!13315 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10055, file: !10055, line: 4205, type: !7164, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !437)
!13316 = !DILocation(line: 4207, column: 11, scope: !13315)
!13317 = !DILocation(line: 4207, column: 44, scope: !13315)
!13318 = !DILocation(line: 4207, column: 3, scope: !13315)
!13319 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10055, file: !10055, line: 3224, type: !7174, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !13320)
!13320 = !{!13321}
!13321 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13319, file: !10055, line: 3224, type: !113)
!13322 = !DILocation(line: 0, scope: !13319)
!13323 = !DILocation(line: 3226, column: 3, scope: !13319)
!13324 = !DILocation(line: 3227, column: 1, scope: !13319)
!13325 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10055, file: !10055, line: 3188, type: !7174, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !13326)
!13326 = !{!13327}
!13327 = !DILocalVariable(name: "Source", arg: 1, scope: !13325, file: !10055, line: 3188, type: !113)
!13328 = !DILocation(line: 0, scope: !13325)
!13329 = !DILocation(line: 3190, column: 3, scope: !13325)
!13330 = !DILocation(line: 3191, column: 1, scope: !13325)
!13331 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10055, file: !10055, line: 3204, type: !7164, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !437)
!13332 = !DILocation(line: 3206, column: 21, scope: !13331)
!13333 = !DILocation(line: 3206, column: 3, scope: !13331)
!13334 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10055, file: !10055, line: 3240, type: !7174, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !13335)
!13335 = !{!13336}
!13336 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13334, file: !10055, line: 3240, type: !113)
!13337 = !DILocation(line: 0, scope: !13334)
!13338 = !DILocation(line: 3242, column: 3, scope: !13334)
!13339 = !DILocation(line: 3243, column: 1, scope: !13334)
!13340 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10055, file: !10055, line: 3256, type: !7174, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !13341)
!13341 = !{!13342}
!13342 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13340, file: !10055, line: 3256, type: !113)
!13343 = !DILocation(line: 0, scope: !13340)
!13344 = !DILocation(line: 3258, column: 3, scope: !13340)
!13345 = !DILocation(line: 3259, column: 1, scope: !13340)
!13346 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !10055, file: !10055, line: 5153, type: !7164, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !437)
!13347 = !DILocation(line: 5155, column: 11, scope: !13346)
!13348 = !DILocation(line: 5155, column: 47, scope: !13346)
!13349 = !DILocation(line: 5155, column: 3, scope: !13346)
!13350 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !13055, file: !13055, line: 540, type: !13351, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !13353)
!13351 = !DISubroutineType(types: !13352)
!13352 = !{!13098, !113, !113, !13165, !13172}
!13353 = !{!13354, !13355, !13356, !13357, !13358, !13359}
!13354 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13350, file: !13055, line: 540, type: !113)
!13355 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13350, file: !13055, line: 540, type: !113)
!13356 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13350, file: !13055, line: 541, type: !13165)
!13357 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13350, file: !13055, line: 541, type: !13172)
!13358 = !DILocalVariable(name: "status", scope: !13350, file: !13055, line: 543, type: !13098)
!13359 = !DILocalVariable(name: "pllfreq", scope: !13350, file: !13055, line: 544, type: !113)
!13360 = !DILocation(line: 0, scope: !13350)
!13361 = !DILocation(line: 551, column: 6, scope: !13362)
!13362 = distinct !DILexicalBlock(scope: !13350, file: !13055, line: 551, column: 6)
!13363 = !DILocation(line: 551, column: 25, scope: !13362)
!13364 = !DILocation(line: 551, column: 6, scope: !13350)
!13365 = !DILocation(line: 554, column: 15, scope: !13366)
!13366 = distinct !DILexicalBlock(scope: !13362, file: !13055, line: 552, column: 3)
!13367 = !DILocation(line: 557, column: 8, scope: !13368)
!13368 = distinct !DILexicalBlock(scope: !13366, file: !13055, line: 557, column: 8)
!13369 = !DILocation(line: 557, column: 29, scope: !13368)
!13370 = !DILocation(line: 557, column: 8, scope: !13366)
!13371 = !DILocation(line: 560, column: 20, scope: !13372)
!13372 = distinct !DILexicalBlock(scope: !13373, file: !13055, line: 560, column: 10)
!13373 = distinct !DILexicalBlock(scope: !13368, file: !13055, line: 558, column: 5)
!13374 = !DILocation(line: 560, column: 10, scope: !13373)
!13375 = !DILocation(line: 562, column: 9, scope: !13376)
!13376 = distinct !DILexicalBlock(scope: !13372, file: !13055, line: 561, column: 7)
!13377 = !DILocation(line: 563, column: 7, scope: !13376)
!13378 = !DILocation(line: 566, column: 9, scope: !13379)
!13379 = distinct !DILexicalBlock(scope: !13372, file: !13055, line: 565, column: 7)
!13380 = !DILocation(line: 570, column: 7, scope: !13373)
!13381 = !DILocation(line: 571, column: 7, scope: !13373)
!13382 = !DILocation(line: 571, column: 14, scope: !13373)
!13383 = !DILocation(line: 571, column: 35, scope: !13373)
!13384 = distinct !{!13384, !13381, !13385}
!13385 = !DILocation(line: 574, column: 7, scope: !13373)
!13386 = !DILocation(line: 578, column: 76, scope: !13366)
!13387 = !DILocation(line: 578, column: 103, scope: !13366)
!13388 = !DILocation(line: 579, column: 54, scope: !13366)
!13389 = !DILocation(line: 578, column: 5, scope: !13366)
!13390 = !DILocation(line: 582, column: 14, scope: !13366)
!13391 = !DILocation(line: 583, column: 3, scope: !13366)
!13392 = !DILocation(line: 0, scope: !13362)
!13393 = !DILocation(line: 590, column: 3, scope: !13350)
!13394 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10055, file: !10055, line: 2969, type: !7164, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !437)
!13395 = !DILocation(line: 2971, column: 11, scope: !13394)
!13396 = !DILocation(line: 2971, column: 44, scope: !13394)
!13397 = !DILocation(line: 2971, column: 3, scope: !13394)
!13398 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10055, file: !10055, line: 2929, type: !3435, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !437)
!13399 = !DILocation(line: 2931, column: 3, scope: !13398)
!13400 = !DILocation(line: 2932, column: 1, scope: !13398)
!13401 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10055, file: !10055, line: 2939, type: !3435, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !437)
!13402 = !DILocation(line: 2941, column: 3, scope: !13401)
!13403 = !DILocation(line: 2942, column: 1, scope: !13401)
!13404 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10055, file: !10055, line: 2949, type: !3435, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3330, retainedNodes: !437)
!13405 = !DILocation(line: 2951, column: 3, scope: !13404)
!13406 = !DILocation(line: 2952, column: 1, scope: !13404)
!13407 = distinct !DISubprogram(name: "z_device_state_init", scope: !13408, file: !13408, line: 23, type: !3435, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3395, retainedNodes: !13409)
!13408 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13409 = !{!13410}
!13410 = !DILocalVariable(name: "dev", scope: !13407, file: !13408, line: 25, type: !13411)
!13411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13412, size: 32)
!13412 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13413)
!13413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !13414)
!13414 = !{!13415, !13416, !13417, !13418, !13424, !13425}
!13415 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13413, file: !411, line: 380, baseType: !105, size: 32)
!13416 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13413, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!13417 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13413, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!13418 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13413, file: !411, line: 386, baseType: !13419, size: 32, offset: 96)
!13419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13420, size: 32)
!13420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !13421)
!13421 = !{!13422, !13423}
!13422 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13420, file: !411, line: 359, baseType: !164, size: 8)
!13423 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13420, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13424 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13413, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!13425 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13413, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!13426 = !DILocation(line: 0, scope: !13407)
!13427 = !DILocation(line: 31, column: 1, scope: !13407)
!13428 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13408, file: !13408, line: 33, type: !13429, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3395, retainedNodes: !13431)
!13429 = !DISubroutineType(types: !13430)
!13430 = !{!13411, !105}
!13431 = !{!13432, !13433}
!13432 = !DILocalVariable(name: "name", arg: 1, scope: !13428, file: !13408, line: 33, type: !105)
!13433 = !DILocalVariable(name: "dev", scope: !13428, file: !13408, line: 35, type: !13411)
!13434 = !DILocation(line: 0, scope: !13428)
!13435 = !DILocation(line: 40, column: 12, scope: !13436)
!13436 = distinct !DILexicalBlock(scope: !13428, file: !13408, line: 40, column: 6)
!13437 = !DILocation(line: 40, column: 21, scope: !13436)
!13438 = !DILocation(line: 40, column: 25, scope: !13436)
!13439 = !DILocation(line: 40, column: 33, scope: !13436)
!13440 = !DILocation(line: 40, column: 6, scope: !13428)
!13441 = !DILocation(line: 55, column: 2, scope: !13442)
!13442 = distinct !DILexicalBlock(scope: !13428, file: !13408, line: 55, column: 2)
!13443 = !DILocation(line: 50, column: 7, scope: !13444)
!13444 = distinct !DILexicalBlock(scope: !13445, file: !13408, line: 50, column: 7)
!13445 = distinct !DILexicalBlock(scope: !13446, file: !13408, line: 49, column: 57)
!13446 = distinct !DILexicalBlock(scope: !13447, file: !13408, line: 49, column: 2)
!13447 = distinct !DILexicalBlock(scope: !13428, file: !13408, line: 49, column: 2)
!13448 = !DILocation(line: 50, column: 30, scope: !13444)
!13449 = !DILocation(line: 50, column: 39, scope: !13444)
!13450 = !DILocation(line: 50, column: 44, scope: !13444)
!13451 = !DILocation(line: 50, column: 7, scope: !13445)
!13452 = !DILocation(line: 49, column: 53, scope: !13446)
!13453 = !DILocation(line: 49, column: 33, scope: !13446)
!13454 = !DILocation(line: 49, column: 2, scope: !13447)
!13455 = distinct !{!13455, !13454, !13456}
!13456 = !DILocation(line: 53, column: 2, scope: !13447)
!13457 = !DILocation(line: 56, column: 7, scope: !13458)
!13458 = distinct !DILexicalBlock(scope: !13459, file: !13408, line: 56, column: 7)
!13459 = distinct !DILexicalBlock(scope: !13460, file: !13408, line: 55, column: 57)
!13460 = distinct !DILexicalBlock(scope: !13442, file: !13408, line: 55, column: 2)
!13461 = !DILocation(line: 56, column: 30, scope: !13458)
!13462 = !DILocation(line: 56, column: 52, scope: !13458)
!13463 = !DILocation(line: 56, column: 34, scope: !13458)
!13464 = !DILocation(line: 56, column: 58, scope: !13458)
!13465 = !DILocation(line: 56, column: 7, scope: !13459)
!13466 = !DILocation(line: 55, column: 53, scope: !13460)
!13467 = !DILocation(line: 55, column: 33, scope: !13460)
!13468 = distinct !{!13468, !13441, !13469}
!13469 = !DILocation(line: 59, column: 2, scope: !13442)
!13470 = !DILocation(line: 62, column: 1, scope: !13428)
!13471 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13408, file: !13408, line: 93, type: !13472, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3395, retainedNodes: !13474)
!13472 = !DISubroutineType(types: !13473)
!13473 = !{!422, !13411}
!13474 = !{!13475}
!13475 = !DILocalVariable(name: "dev", arg: 1, scope: !13471, file: !13408, line: 93, type: !13411)
!13476 = !DILocation(line: 0, scope: !13471)
!13477 = !DILocation(line: 99, column: 10, scope: !13478)
!13478 = distinct !DILexicalBlock(scope: !13471, file: !13408, line: 99, column: 6)
!13479 = !DILocation(line: 99, column: 6, scope: !13471)
!13480 = !DILocation(line: 103, column: 14, scope: !13471)
!13481 = !DILocation(line: 103, column: 21, scope: !13471)
!13482 = !DILocation(line: 103, column: 33, scope: !13471)
!13483 = !DILocation(line: 103, column: 49, scope: !13471)
!13484 = !DILocation(line: 103, column: 58, scope: !13471)
!13485 = !DILocation(line: 104, column: 1, scope: !13471)
!13486 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13408, file: !13408, line: 87, type: !13487, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3395, retainedNodes: !13490)
!13487 = !DISubroutineType(types: !13488)
!13488 = !{!439, !13489}
!13489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13411, size: 32)
!13490 = !{!13491}
!13491 = !DILocalVariable(name: "devices", arg: 1, scope: !13486, file: !13408, line: 87, type: !13489)
!13492 = !DILocation(line: 0, scope: !13486)
!13493 = !DILocation(line: 89, column: 11, scope: !13486)
!13494 = !DILocation(line: 90, column: 2, scope: !13486)
!13495 = distinct !DISubprogram(name: "device_required_foreach", scope: !13408, file: !13408, line: 125, type: !13496, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3395, retainedNodes: !13502)
!13496 = !DISubroutineType(types: !13497)
!13497 = !{!108, !13411, !13498, !104}
!13498 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !411, line: 471, baseType: !13499)
!13499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13500, size: 32)
!13500 = !DISubroutineType(types: !13501)
!13501 = !{!108, !13411, !104}
!13502 = !{!13503, !13504, !13505, !13506, !13507}
!13503 = !DILocalVariable(name: "dev", arg: 1, scope: !13495, file: !13408, line: 125, type: !13411)
!13504 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13495, file: !13408, line: 126, type: !13498)
!13505 = !DILocalVariable(name: "context", arg: 3, scope: !13495, file: !13408, line: 127, type: !104)
!13506 = !DILocalVariable(name: "handle_count", scope: !13495, file: !13408, line: 129, type: !439)
!13507 = !DILocalVariable(name: "handles", scope: !13495, file: !13408, line: 130, type: !425)
!13508 = !DILocation(line: 0, scope: !13495)
!13509 = !DILocation(line: 129, column: 2, scope: !13495)
!13510 = !DILocation(line: 129, column: 9, scope: !13495)
!13511 = !DILocation(line: 130, column: 35, scope: !13495)
!13512 = !DILocation(line: 132, column: 33, scope: !13495)
!13513 = !DILocation(line: 132, column: 9, scope: !13495)
!13514 = !DILocation(line: 133, column: 1, scope: !13495)
!13515 = !DILocation(line: 132, column: 2, scope: !13495)
!13516 = distinct !DISubprogram(name: "device_required_handles_get", scope: !411, file: !411, line: 493, type: !13517, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3395, retainedNodes: !13519)
!13517 = !DISubroutineType(types: !13518)
!13518 = !{!425, !13411, !2887}
!13519 = !{!13520, !13521, !13522, !13523}
!13520 = !DILocalVariable(name: "dev", arg: 1, scope: !13516, file: !411, line: 493, type: !13411)
!13521 = !DILocalVariable(name: "count", arg: 2, scope: !13516, file: !411, line: 493, type: !2887)
!13522 = !DILocalVariable(name: "rv", scope: !13516, file: !411, line: 495, type: !425)
!13523 = !DILocalVariable(name: "i", scope: !13524, file: !411, line: 498, type: !439)
!13524 = distinct !DILexicalBlock(scope: !13525, file: !411, line: 497, column: 18)
!13525 = distinct !DILexicalBlock(scope: !13516, file: !411, line: 497, column: 6)
!13526 = !DILocation(line: 0, scope: !13516)
!13527 = !DILocation(line: 495, column: 35, scope: !13516)
!13528 = !DILocation(line: 497, column: 9, scope: !13525)
!13529 = !DILocation(line: 497, column: 6, scope: !13516)
!13530 = !DILocation(line: 0, scope: !13524)
!13531 = !DILocation(line: 500, column: 11, scope: !13524)
!13532 = !DILocation(line: 500, column: 40, scope: !13524)
!13533 = !DILocation(line: 502, column: 4, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13524, file: !411, line: 501, column: 40)
!13535 = distinct !{!13535, !13536, !13537}
!13536 = !DILocation(line: 500, column: 3, scope: !13524)
!13537 = !DILocation(line: 503, column: 3, scope: !13524)
!13538 = !DILocation(line: 504, column: 10, scope: !13524)
!13539 = !DILocation(line: 505, column: 2, scope: !13524)
!13540 = !DILocation(line: 507, column: 2, scope: !13516)
!13541 = distinct !DISubprogram(name: "device_visitor", scope: !13408, file: !13408, line: 106, type: !13542, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3395, retainedNodes: !13544)
!13542 = !DISubroutineType(types: !13543)
!13543 = !{!108, !425, !439, !13498, !104}
!13544 = !{!13545, !13546, !13547, !13548, !13549, !13551, !13554, !13555}
!13545 = !DILocalVariable(name: "handles", arg: 1, scope: !13541, file: !13408, line: 106, type: !425)
!13546 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13541, file: !13408, line: 107, type: !439)
!13547 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13541, file: !13408, line: 108, type: !13498)
!13548 = !DILocalVariable(name: "context", arg: 4, scope: !13541, file: !13408, line: 109, type: !104)
!13549 = !DILocalVariable(name: "i", scope: !13550, file: !13408, line: 112, type: !439)
!13550 = distinct !DILexicalBlock(scope: !13541, file: !13408, line: 112, column: 2)
!13551 = !DILocalVariable(name: "dh", scope: !13552, file: !13408, line: 113, type: !427)
!13552 = distinct !DILexicalBlock(scope: !13553, file: !13408, line: 112, column: 44)
!13553 = distinct !DILexicalBlock(scope: !13550, file: !13408, line: 112, column: 2)
!13554 = !DILocalVariable(name: "rdev", scope: !13552, file: !13408, line: 114, type: !13411)
!13555 = !DILocalVariable(name: "rc", scope: !13552, file: !13408, line: 115, type: !108)
!13556 = !DILocation(line: 0, scope: !13541)
!13557 = !DILocation(line: 0, scope: !13550)
!13558 = !DILocation(line: 112, column: 23, scope: !13553)
!13559 = !DILocation(line: 112, column: 2, scope: !13550)
!13560 = distinct !{!13560, !13559, !13561}
!13561 = !DILocation(line: 120, column: 2, scope: !13550)
!13562 = !DILocation(line: 113, column: 24, scope: !13552)
!13563 = !DILocation(line: 0, scope: !13552)
!13564 = !DILocation(line: 114, column: 31, scope: !13552)
!13565 = !DILocation(line: 115, column: 12, scope: !13552)
!13566 = !DILocation(line: 117, column: 10, scope: !13567)
!13567 = distinct !DILexicalBlock(scope: !13552, file: !13408, line: 117, column: 7)
!13568 = !DILocation(line: 112, column: 39, scope: !13553)
!13569 = !DILocation(line: 123, column: 1, scope: !13541)
!13570 = distinct !DISubprogram(name: "device_from_handle", scope: !411, file: !411, line: 439, type: !13571, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3395, retainedNodes: !13573)
!13571 = !DISubroutineType(types: !13572)
!13572 = !{!13411, !427}
!13573 = !{!13574, !13575, !13576}
!13574 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13570, file: !411, line: 439, type: !427)
!13575 = !DILocalVariable(name: "dev", scope: !13570, file: !411, line: 443, type: !13411)
!13576 = !DILocalVariable(name: "numdev", scope: !13570, file: !411, line: 444, type: !439)
!13577 = !DILocation(line: 0, scope: !13570)
!13578 = !DILocation(line: 446, column: 7, scope: !13579)
!13579 = distinct !DILexicalBlock(scope: !13570, file: !411, line: 446, column: 6)
!13580 = !DILocation(line: 446, column: 18, scope: !13579)
!13581 = !DILocation(line: 446, column: 23, scope: !13579)
!13582 = !DILocation(line: 450, column: 2, scope: !13570)
!13583 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13408, file: !13408, line: 135, type: !13496, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3395, retainedNodes: !13584)
!13584 = !{!13585, !13586, !13587, !13588, !13589}
!13585 = !DILocalVariable(name: "dev", arg: 1, scope: !13583, file: !13408, line: 135, type: !13411)
!13586 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13583, file: !13408, line: 136, type: !13498)
!13587 = !DILocalVariable(name: "context", arg: 3, scope: !13583, file: !13408, line: 137, type: !104)
!13588 = !DILocalVariable(name: "handle_count", scope: !13583, file: !13408, line: 139, type: !439)
!13589 = !DILocalVariable(name: "handles", scope: !13583, file: !13408, line: 140, type: !425)
!13590 = !DILocation(line: 0, scope: !13583)
!13591 = !DILocation(line: 139, column: 2, scope: !13583)
!13592 = !DILocation(line: 139, column: 9, scope: !13583)
!13593 = !DILocation(line: 140, column: 35, scope: !13583)
!13594 = !DILocation(line: 142, column: 33, scope: !13583)
!13595 = !DILocation(line: 142, column: 9, scope: !13583)
!13596 = !DILocation(line: 143, column: 1, scope: !13583)
!13597 = !DILocation(line: 142, column: 2, scope: !13583)
!13598 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !411, file: !411, line: 573, type: !13517, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3395, retainedNodes: !13599)
!13599 = !{!13600, !13601, !13602, !13603, !13604}
!13600 = !DILocalVariable(name: "dev", arg: 1, scope: !13598, file: !411, line: 573, type: !13411)
!13601 = !DILocalVariable(name: "count", arg: 2, scope: !13598, file: !411, line: 573, type: !2887)
!13602 = !DILocalVariable(name: "rv", scope: !13598, file: !411, line: 575, type: !425)
!13603 = !DILocalVariable(name: "region", scope: !13598, file: !411, line: 576, type: !439)
!13604 = !DILocalVariable(name: "i", scope: !13598, file: !411, line: 577, type: !439)
!13605 = !DILocation(line: 0, scope: !13598)
!13606 = !DILocation(line: 575, column: 35, scope: !13598)
!13607 = !DILocation(line: 579, column: 9, scope: !13608)
!13608 = distinct !DILexicalBlock(scope: !13598, file: !411, line: 579, column: 6)
!13609 = !DILocation(line: 579, column: 6, scope: !13598)
!13610 = !DILocation(line: 582, column: 8, scope: !13611)
!13611 = distinct !DILexicalBlock(scope: !13612, file: !411, line: 582, column: 8)
!13612 = distinct !DILexicalBlock(scope: !13613, file: !411, line: 581, column: 23)
!13613 = distinct !DILexicalBlock(scope: !13608, file: !411, line: 579, column: 18)
!13614 = !DILocation(line: 582, column: 12, scope: !13611)
!13615 = !DILocation(line: 585, column: 6, scope: !13612)
!13616 = !DILocation(line: 0, scope: !13613)
!13617 = !DILocation(line: 581, column: 17, scope: !13613)
!13618 = !DILocation(line: 581, column: 3, scope: !13613)
!13619 = !DILocation(line: 588, column: 10, scope: !13613)
!13620 = !DILocation(line: 588, column: 16, scope: !13613)
!13621 = !DILocation(line: 589, column: 4, scope: !13622)
!13622 = distinct !DILexicalBlock(scope: !13613, file: !411, line: 588, column: 39)
!13623 = !DILocation(line: 588, column: 3, scope: !13613)
!13624 = distinct !{!13624, !13623, !13625}
!13625 = !DILocation(line: 590, column: 3, scope: !13613)
!13626 = !DILocation(line: 591, column: 10, scope: !13613)
!13627 = !DILocation(line: 592, column: 2, scope: !13613)
!13628 = !DILocation(line: 575, column: 25, scope: !13598)
!13629 = !DILocation(line: 594, column: 2, scope: !13598)
!13630 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2183, file: !2183, line: 49, type: !13631, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !437)
!13631 = !DISubroutineType(types: !13632)
!13632 = !{!542}
!13633 = !DILocation(line: 51, column: 10, scope: !13630)
!13634 = !DILocation(line: 51, column: 20, scope: !13630)
!13635 = !DILocation(line: 51, column: 2, scope: !13630)
!13636 = distinct !DISubprogram(name: "coredump", scope: !3402, file: !3402, line: 209, type: !13637, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3398, retainedNodes: !13783)
!13637 = !DISubroutineType(types: !13638)
!13638 = !{null, !32, !13639, !13683}
!13639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13640, size: 32)
!13640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13641)
!13641 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3015, line: 141, baseType: !13642)
!13642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3015, line: 97, size: 256, elements: !13643)
!13643 = !{!13644}
!13644 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13642, file: !3015, line: 107, baseType: !13645, size: 256)
!13645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3015, line: 98, size: 256, elements: !13646)
!13646 = !{!13647, !13652, !13657, !13662, !13667, !13672, !13677, !13682}
!13647 = !DIDerivedType(tag: DW_TAG_member, scope: !13645, file: !3015, line: 99, baseType: !13648, size: 32)
!13648 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13645, file: !3015, line: 99, size: 32, elements: !13649)
!13649 = !{!13650, !13651}
!13650 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13648, file: !3015, line: 99, baseType: !113, size: 32)
!13651 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13648, file: !3015, line: 99, baseType: !113, size: 32)
!13652 = !DIDerivedType(tag: DW_TAG_member, scope: !13645, file: !3015, line: 100, baseType: !13653, size: 32, offset: 32)
!13653 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13645, file: !3015, line: 100, size: 32, elements: !13654)
!13654 = !{!13655, !13656}
!13655 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13653, file: !3015, line: 100, baseType: !113, size: 32)
!13656 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13653, file: !3015, line: 100, baseType: !113, size: 32)
!13657 = !DIDerivedType(tag: DW_TAG_member, scope: !13645, file: !3015, line: 101, baseType: !13658, size: 32, offset: 64)
!13658 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13645, file: !3015, line: 101, size: 32, elements: !13659)
!13659 = !{!13660, !13661}
!13660 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13658, file: !3015, line: 101, baseType: !113, size: 32)
!13661 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13658, file: !3015, line: 101, baseType: !113, size: 32)
!13662 = !DIDerivedType(tag: DW_TAG_member, scope: !13645, file: !3015, line: 102, baseType: !13663, size: 32, offset: 96)
!13663 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13645, file: !3015, line: 102, size: 32, elements: !13664)
!13664 = !{!13665, !13666}
!13665 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13663, file: !3015, line: 102, baseType: !113, size: 32)
!13666 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13663, file: !3015, line: 102, baseType: !113, size: 32)
!13667 = !DIDerivedType(tag: DW_TAG_member, scope: !13645, file: !3015, line: 103, baseType: !13668, size: 32, offset: 128)
!13668 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13645, file: !3015, line: 103, size: 32, elements: !13669)
!13669 = !{!13670, !13671}
!13670 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13668, file: !3015, line: 103, baseType: !113, size: 32)
!13671 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13668, file: !3015, line: 103, baseType: !113, size: 32)
!13672 = !DIDerivedType(tag: DW_TAG_member, scope: !13645, file: !3015, line: 104, baseType: !13673, size: 32, offset: 160)
!13673 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13645, file: !3015, line: 104, size: 32, elements: !13674)
!13674 = !{!13675, !13676}
!13675 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13673, file: !3015, line: 104, baseType: !113, size: 32)
!13676 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13673, file: !3015, line: 104, baseType: !113, size: 32)
!13677 = !DIDerivedType(tag: DW_TAG_member, scope: !13645, file: !3015, line: 105, baseType: !13678, size: 32, offset: 192)
!13678 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13645, file: !3015, line: 105, size: 32, elements: !13679)
!13679 = !{!13680, !13681}
!13680 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13678, file: !3015, line: 105, baseType: !113, size: 32)
!13681 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13678, file: !3015, line: 105, baseType: !113, size: 32)
!13682 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13645, file: !3015, line: 106, baseType: !113, size: 32, offset: 224)
!13683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13684, size: 32)
!13684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !649, line: 245, size: 1024, elements: !13685)
!13685 = !{!13686, !13744, !13756, !13757, !13758, !13759, !13765, !13778}
!13686 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13684, file: !649, line: 247, baseType: !13687, size: 384)
!13687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !649, line: 57, size: 384, elements: !13688)
!13688 = !{!13689, !13713, !13720, !13721, !13722, !13731, !13732, !13733}
!13689 = !DIDerivedType(tag: DW_TAG_member, scope: !13687, file: !649, line: 60, baseType: !13690, size: 64)
!13690 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13687, file: !649, line: 60, size: 64, elements: !13691)
!13691 = !{!13692, !13707}
!13692 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13690, file: !649, line: 61, baseType: !13693, size: 64)
!13693 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !13694)
!13694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !13695)
!13695 = !{!13696, !13702}
!13696 = !DIDerivedType(tag: DW_TAG_member, scope: !13694, file: !367, line: 38, baseType: !13697, size: 32)
!13697 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13694, file: !367, line: 38, size: 32, elements: !13698)
!13698 = !{!13699, !13701}
!13699 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13697, file: !367, line: 39, baseType: !13700, size: 32)
!13700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13694, size: 32)
!13701 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13697, file: !367, line: 40, baseType: !13700, size: 32)
!13702 = !DIDerivedType(tag: DW_TAG_member, scope: !13694, file: !367, line: 42, baseType: !13703, size: 32, offset: 32)
!13703 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13694, file: !367, line: 42, size: 32, elements: !13704)
!13704 = !{!13705, !13706}
!13705 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13703, file: !367, line: 43, baseType: !13700, size: 32)
!13706 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13703, file: !367, line: 44, baseType: !13700, size: 32)
!13707 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13690, file: !649, line: 62, baseType: !13708, size: 64)
!13708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !674, line: 49, size: 64, elements: !13709)
!13709 = !{!13710}
!13710 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13708, file: !674, line: 50, baseType: !13711, size: 64)
!13711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13712, size: 64, elements: !679)
!13712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13708, size: 32)
!13713 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13687, file: !649, line: 68, baseType: !13714, size: 32, offset: 64)
!13714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13715, size: 32)
!13715 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !13716)
!13716 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !13717)
!13717 = !{!13718}
!13718 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13716, file: !363, line: 232, baseType: !13719, size: 64)
!13719 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !13694)
!13720 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13687, file: !649, line: 71, baseType: !164, size: 8, offset: 96)
!13721 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13687, file: !649, line: 74, baseType: !164, size: 8, offset: 104)
!13722 = !DIDerivedType(tag: DW_TAG_member, scope: !13687, file: !649, line: 90, baseType: !13723, size: 16, offset: 112)
!13723 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13687, file: !649, line: 90, size: 16, elements: !13724)
!13724 = !{!13725, !13730}
!13725 = !DIDerivedType(tag: DW_TAG_member, scope: !13723, file: !649, line: 91, baseType: !13726, size: 16)
!13726 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13723, file: !649, line: 91, size: 16, elements: !13727)
!13727 = !{!13728, !13729}
!13728 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13726, file: !649, line: 96, baseType: !697, size: 8)
!13729 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13726, file: !649, line: 97, baseType: !164, size: 8, offset: 8)
!13730 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13723, file: !649, line: 100, baseType: !168, size: 16)
!13731 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13687, file: !649, line: 107, baseType: !113, size: 32, offset: 128)
!13732 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13687, file: !649, line: 127, baseType: !104, size: 32, offset: 160)
!13733 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13687, file: !649, line: 131, baseType: !13734, size: 192, offset: 192)
!13734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !13735)
!13735 = !{!13736, !13737, !13743}
!13736 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13734, file: !363, line: 245, baseType: !13693, size: 64)
!13737 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13734, file: !363, line: 246, baseType: !13738, size: 32, offset: 64)
!13738 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !13739)
!13739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13740, size: 32)
!13740 = !DISubroutineType(types: !13741)
!13741 = !{null, !13742}
!13742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13734, size: 32)
!13743 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13734, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!13744 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13684, file: !649, line: 250, baseType: !13745, size: 288, offset: 384)
!13745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !716, line: 25, size: 288, elements: !13746)
!13746 = !{!13747, !13748, !13749, !13750, !13751, !13752, !13753, !13754, !13755}
!13747 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13745, file: !716, line: 26, baseType: !113, size: 32)
!13748 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13745, file: !716, line: 27, baseType: !113, size: 32, offset: 32)
!13749 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13745, file: !716, line: 28, baseType: !113, size: 32, offset: 64)
!13750 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13745, file: !716, line: 29, baseType: !113, size: 32, offset: 96)
!13751 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13745, file: !716, line: 30, baseType: !113, size: 32, offset: 128)
!13752 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13745, file: !716, line: 31, baseType: !113, size: 32, offset: 160)
!13753 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13745, file: !716, line: 32, baseType: !113, size: 32, offset: 192)
!13754 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13745, file: !716, line: 33, baseType: !113, size: 32, offset: 224)
!13755 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13745, file: !716, line: 34, baseType: !113, size: 32, offset: 256)
!13756 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13684, file: !649, line: 253, baseType: !104, size: 32, offset: 672)
!13757 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13684, file: !649, line: 256, baseType: !13715, size: 64, offset: 704)
!13758 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13684, file: !649, line: 294, baseType: !108, size: 32, offset: 768)
!13759 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13684, file: !649, line: 300, baseType: !13760, size: 96, offset: 800)
!13760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !649, line: 149, size: 96, elements: !13761)
!13761 = !{!13762, !13763, !13764}
!13762 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13760, file: !649, line: 153, baseType: !22, size: 32)
!13763 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13760, file: !649, line: 162, baseType: !439, size: 32, offset: 32)
!13764 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13760, file: !649, line: 168, baseType: !439, size: 32, offset: 64)
!13765 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13684, file: !649, line: 325, baseType: !13766, size: 32, offset: 896)
!13766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13767, size: 32)
!13767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !13768)
!13768 = !{!13769, !13775, !13776}
!13769 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13767, file: !359, line: 5074, baseType: !13770, size: 96)
!13770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !742, line: 56, size: 96, elements: !13771)
!13771 = !{!13772, !13773, !13774}
!13772 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13770, file: !742, line: 57, baseType: !745, size: 32)
!13773 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13770, file: !742, line: 58, baseType: !104, size: 32, offset: 32)
!13774 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13770, file: !742, line: 59, baseType: !439, size: 32, offset: 64)
!13775 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13767, file: !359, line: 5075, baseType: !13715, size: 64, offset: 96)
!13776 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13767, file: !359, line: 5076, baseType: !13777, offset: 160)
!13777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!13778 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13684, file: !649, line: 343, baseType: !13779, size: 64, offset: 928)
!13779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !716, line: 60, size: 64, elements: !13780)
!13780 = !{!13781, !13782}
!13781 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13779, file: !716, line: 63, baseType: !113, size: 32)
!13782 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13779, file: !716, line: 66, baseType: !113, size: 32, offset: 32)
!13783 = !{!13784, !13785, !13786}
!13784 = !DILocalVariable(name: "reason", arg: 1, scope: !13636, file: !3402, line: 209, type: !32)
!13785 = !DILocalVariable(name: "esf", arg: 2, scope: !13636, file: !3402, line: 209, type: !13639)
!13786 = !DILocalVariable(name: "thread", arg: 3, scope: !13636, file: !3402, line: 210, type: !13683)
!13787 = !DILocation(line: 0, scope: !13636)
!13788 = !DILocation(line: 212, column: 1, scope: !13636)
!13789 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3402, file: !3402, line: 214, type: !13790, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3398, retainedNodes: !13792)
!13790 = !DISubroutineType(types: !13791)
!13791 = !{null, !22, !22}
!13792 = !{!13793, !13794}
!13793 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13789, file: !3402, line: 214, type: !22)
!13794 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13789, file: !3402, line: 214, type: !22)
!13795 = !DILocation(line: 0, scope: !13789)
!13796 = !DILocation(line: 216, column: 1, scope: !13789)
!13797 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3402, file: !3402, line: 218, type: !13798, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3398, retainedNodes: !13800)
!13798 = !DISubroutineType(types: !13799)
!13799 = !{null, !209, !439}
!13800 = !{!13801, !13802}
!13801 = !DILocalVariable(name: "buf", arg: 1, scope: !13797, file: !3402, line: 218, type: !209)
!13802 = !DILocalVariable(name: "buflen", arg: 2, scope: !13797, file: !3402, line: 218, type: !439)
!13803 = !DILocation(line: 0, scope: !13797)
!13804 = !DILocation(line: 220, column: 1, scope: !13797)
!13805 = distinct !DISubprogram(name: "coredump_query", scope: !3402, file: !3402, line: 222, type: !13806, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3398, retainedNodes: !13808)
!13806 = !DISubroutineType(types: !13807)
!13807 = !{!108, !3401, !104}
!13808 = !{!13809, !13810}
!13809 = !DILocalVariable(name: "query_id", arg: 1, scope: !13805, file: !3402, line: 222, type: !3401)
!13810 = !DILocalVariable(name: "arg", arg: 2, scope: !13805, file: !3402, line: 222, type: !104)
!13811 = !DILocation(line: 0, scope: !13805)
!13812 = !DILocation(line: 224, column: 2, scope: !13805)
!13813 = distinct !DISubprogram(name: "coredump_cmd", scope: !3402, file: !3402, line: 227, type: !13814, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3398, retainedNodes: !13816)
!13814 = !DISubroutineType(types: !13815)
!13815 = !{!108, !3408, !104}
!13816 = !{!13817, !13818}
!13817 = !DILocalVariable(name: "query_id", arg: 1, scope: !13813, file: !3402, line: 227, type: !3408)
!13818 = !DILocalVariable(name: "arg", arg: 2, scope: !13813, file: !3402, line: 227, type: !104)
!13819 = !DILocation(line: 0, scope: !13813)
!13820 = !DILocation(line: 229, column: 2, scope: !13813)
!13821 = distinct !DISubprogram(name: "arch_system_halt", scope: !13822, file: !13822, line: 23, type: !4122, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3398, retainedNodes: !13823)
!13822 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13823 = !{!13824}
!13824 = !DILocalVariable(name: "reason", arg: 1, scope: !13821, file: !13822, line: 23, type: !32)
!13825 = !DILocation(line: 0, scope: !13821)
!13826 = !DILocation(line: 55, column: 2, scope: !13827, inlinedAt: !13831)
!13827 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4109, file: !4109, line: 42, type: !4110, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3398, retainedNodes: !13828)
!13828 = !{!13829, !13830}
!13829 = !DILocalVariable(name: "key", scope: !13827, file: !4109, line: 44, type: !32)
!13830 = !DILocalVariable(name: "tmp", scope: !13827, file: !4109, line: 53, type: !32)
!13831 = distinct !DILocation(line: 31, column: 8, scope: !13821)
!13832 = !{i64 2056264}
!13833 = !DILocation(line: 0, scope: !13827, inlinedAt: !13831)
!13834 = !DILocation(line: 32, column: 2, scope: !13821)
!13835 = !DILocation(line: 32, column: 2, scope: !13836)
!13836 = distinct !DILexicalBlock(scope: !13837, file: !13822, line: 32, column: 2)
!13837 = distinct !DILexicalBlock(scope: !13821, file: !13822, line: 32, column: 2)
!13838 = distinct !{!13838, !13839, !13840}
!13839 = !DILocation(line: 32, column: 2, scope: !13837)
!13840 = !DILocation(line: 34, column: 2, scope: !13837)
!13841 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13822, file: !13822, line: 39, type: !13842, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3398, retainedNodes: !13844)
!13842 = !DISubroutineType(types: !13843)
!13843 = !{null, !32, !13639}
!13844 = !{!13845, !13846}
!13845 = !DILocalVariable(name: "reason", arg: 1, scope: !13841, file: !13822, line: 39, type: !32)
!13846 = !DILocalVariable(name: "esf", arg: 2, scope: !13841, file: !13822, line: 40, type: !13639)
!13847 = !DILocation(line: 0, scope: !13841)
!13848 = !DILocation(line: 45, column: 2, scope: !13849)
!13849 = distinct !DILexicalBlock(scope: !13850, file: !13822, line: 45, column: 2)
!13850 = distinct !DILexicalBlock(scope: !13851, file: !13822, line: 45, column: 2)
!13851 = distinct !DILexicalBlock(scope: !13852, file: !13822, line: 45, column: 2)
!13852 = distinct !DILexicalBlock(scope: !13841, file: !13822, line: 45, column: 2)
!13853 = !DILocation(line: 46, column: 2, scope: !13841)
!13854 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13822, file: !13822, line: 81, type: !4122, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3398, retainedNodes: !13855)
!13855 = !{!13856}
!13856 = !DILocalVariable(name: "reason", arg: 1, scope: !13854, file: !13822, line: 81, type: !32)
!13857 = !DILocation(line: 0, scope: !13854)
!13858 = !DILocation(line: 83, column: 2, scope: !13854)
!13859 = distinct !DISubprogram(name: "z_fatal_error", scope: !13822, file: !13822, line: 96, type: !13842, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3398, retainedNodes: !13860)
!13860 = !{!13861, !13862, !13863, !13864}
!13861 = !DILocalVariable(name: "reason", arg: 1, scope: !13859, file: !13822, line: 96, type: !32)
!13862 = !DILocalVariable(name: "esf", arg: 2, scope: !13859, file: !13822, line: 96, type: !13639)
!13863 = !DILocalVariable(name: "key", scope: !13859, file: !13822, line: 102, type: !32)
!13864 = !DILocalVariable(name: "thread", scope: !13859, file: !13822, line: 103, type: !13683)
!13865 = !DILocation(line: 0, scope: !13859)
!13866 = !DILocation(line: 55, column: 2, scope: !13827, inlinedAt: !13867)
!13867 = distinct !DILocation(line: 102, column: 21, scope: !13859)
!13868 = !DILocation(line: 0, scope: !13827, inlinedAt: !13867)
!13869 = !DILocation(line: 104, column: 4, scope: !13859)
!13870 = !DILocation(line: 109, column: 2, scope: !13871)
!13871 = distinct !DILexicalBlock(scope: !13872, file: !13822, line: 109, column: 2)
!13872 = distinct !DILexicalBlock(scope: !13873, file: !13822, line: 109, column: 2)
!13873 = distinct !DILexicalBlock(scope: !13874, file: !13822, line: 109, column: 2)
!13874 = distinct !DILexicalBlock(scope: !13859, file: !13822, line: 109, column: 2)
!13875 = !DILocation(line: 119, column: 11, scope: !13876)
!13876 = distinct !DILexicalBlock(scope: !13859, file: !13822, line: 119, column: 6)
!13877 = !DILocation(line: 119, column: 20, scope: !13876)
!13878 = !DILocalVariable(name: "esf", arg: 1, scope: !13879, file: !8101, line: 71, type: !13639)
!13879 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8101, file: !8101, line: 71, type: !13880, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3398, retainedNodes: !13882)
!13880 = !DISubroutineType(types: !13881)
!13881 = !{!422, !13639}
!13882 = !{!13878}
!13883 = !DILocation(line: 0, scope: !13879, inlinedAt: !13884)
!13884 = distinct !DILocation(line: 119, column: 23, scope: !13876)
!13885 = !DILocation(line: 73, column: 21, scope: !13879, inlinedAt: !13884)
!13886 = !DILocation(line: 73, column: 26, scope: !13879, inlinedAt: !13884)
!13887 = !DILocation(line: 73, column: 9, scope: !13879, inlinedAt: !13884)
!13888 = !DILocation(line: 119, column: 6, scope: !13859)
!13889 = !DILocation(line: 120, column: 3, scope: !13890)
!13890 = distinct !DILexicalBlock(scope: !13891, file: !13822, line: 120, column: 3)
!13891 = distinct !DILexicalBlock(scope: !13892, file: !13822, line: 120, column: 3)
!13892 = distinct !DILexicalBlock(scope: !13893, file: !13822, line: 120, column: 3)
!13893 = distinct !DILexicalBlock(scope: !13894, file: !13822, line: 120, column: 3)
!13894 = distinct !DILexicalBlock(scope: !13876, file: !13822, line: 119, column: 57)
!13895 = !DILocation(line: 121, column: 2, scope: !13894)
!13896 = !DILocation(line: 124, column: 2, scope: !13897)
!13897 = distinct !DILexicalBlock(scope: !13898, file: !13822, line: 124, column: 2)
!13898 = distinct !DILexicalBlock(scope: !13899, file: !13822, line: 124, column: 2)
!13899 = distinct !DILexicalBlock(scope: !13900, file: !13822, line: 124, column: 2)
!13900 = distinct !DILexicalBlock(scope: !13859, file: !13822, line: 124, column: 2)
!13901 = !DILocation(line: 131, column: 2, scope: !13859)
!13902 = !DILocation(line: 0, scope: !13879, inlinedAt: !13903)
!13903 = distinct !DILocation(line: 151, column: 24, scope: !13904)
!13904 = distinct !DILexicalBlock(scope: !13905, file: !13822, line: 151, column: 7)
!13905 = distinct !DILexicalBlock(scope: !13906, file: !13822, line: 146, column: 32)
!13906 = distinct !DILexicalBlock(scope: !13859, file: !13822, line: 146, column: 6)
!13907 = !DILocation(line: 151, column: 7, scope: !13905)
!13908 = !DILocation(line: 151, column: 21, scope: !13904)
!13909 = !DILocalVariable(name: "key", arg: 1, scope: !13910, file: !4109, line: 84, type: !32)
!13910 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4109, file: !4109, line: 84, type: !4122, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3398, retainedNodes: !13911)
!13911 = !{!13909}
!13912 = !DILocation(line: 0, scope: !13910, inlinedAt: !13913)
!13913 = distinct !DILocation(line: 186, column: 2, scope: !13859)
!13914 = !DILocation(line: 95, column: 2, scope: !13910, inlinedAt: !13913)
!13915 = !{i64 2057081}
!13916 = !DILocation(line: 189, column: 3, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13918, file: !13822, line: 188, column: 41)
!13918 = distinct !DILexicalBlock(scope: !13859, file: !13822, line: 188, column: 6)
!13919 = !DILocation(line: 191, column: 1, scope: !13859)
!13920 = distinct !DISubprogram(name: "k_current_get", scope: !359, file: !359, line: 530, type: !13921, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3398, retainedNodes: !437)
!13921 = !DISubroutineType(types: !13922)
!13922 = !{!13923}
!13923 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !649, line: 347, baseType: !13683)
!13924 = !DILocation(line: 535, column: 9, scope: !13920)
!13925 = !DILocation(line: 535, column: 2, scope: !13920)
!13926 = distinct !DISubprogram(name: "reason_to_str", scope: !13822, file: !13822, line: 62, type: !13927, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3398, retainedNodes: !13929)
!13927 = !DISubroutineType(types: !13928)
!13928 = !{!105, !32}
!13929 = !{!13930}
!13930 = !DILocalVariable(name: "reason", arg: 1, scope: !13926, file: !13822, line: 62, type: !32)
!13931 = !DILocation(line: 0, scope: !13926)
!13932 = !DILocation(line: 64, column: 2, scope: !13926)
!13933 = !DILocation(line: 0, scope: !13934)
!13934 = distinct !DILexicalBlock(scope: !13926, file: !13822, line: 64, column: 18)
!13935 = !DILocation(line: 78, column: 1, scope: !13926)
!13936 = distinct !DISubprogram(name: "thread_name_get", scope: !13822, file: !13822, line: 51, type: !13937, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3398, retainedNodes: !13939)
!13937 = !DISubroutineType(types: !13938)
!13938 = !{!105, !13683}
!13939 = !{!13940, !13941}
!13940 = !DILocalVariable(name: "thread", arg: 1, scope: !13936, file: !13822, line: 51, type: !13683)
!13941 = !DILocalVariable(name: "thread_name", scope: !13936, file: !13822, line: 53, type: !105)
!13942 = !DILocation(line: 0, scope: !13936)
!13943 = !DILocation(line: 53, column: 36, scope: !13936)
!13944 = !DILocation(line: 53, column: 28, scope: !13936)
!13945 = !DILocation(line: 53, column: 47, scope: !13936)
!13946 = !DILocation(line: 55, column: 19, scope: !13947)
!13947 = distinct !DILexicalBlock(scope: !13936, file: !13822, line: 55, column: 6)
!13948 = !DILocation(line: 55, column: 28, scope: !13947)
!13949 = !DILocation(line: 55, column: 32, scope: !13947)
!13950 = !DILocation(line: 55, column: 47, scope: !13947)
!13951 = !DILocation(line: 55, column: 6, scope: !13936)
!13952 = !DILocation(line: 57, column: 2, scope: !13953)
!13953 = distinct !DILexicalBlock(scope: !13947, file: !13822, line: 55, column: 57)
!13954 = !DILocation(line: 59, column: 2, scope: !13936)
!13955 = distinct !DISubprogram(name: "k_thread_abort", scope: !3831, file: !3831, line: 188, type: !13956, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3398, retainedNodes: !13958)
!13956 = !DISubroutineType(types: !13957)
!13957 = !{null, !13923}
!13958 = !{!13959}
!13959 = !DILocalVariable(name: "thread", arg: 1, scope: !13955, file: !3831, line: 188, type: !13923)
!13960 = !DILocation(line: 0, scope: !13955)
!13961 = !DILocation(line: 197, column: 2, scope: !13962)
!13962 = distinct !DILexicalBlock(scope: !13955, file: !3831, line: 197, column: 2)
!13963 = !{i64 2154167992}
!13964 = !DILocation(line: 198, column: 2, scope: !13955)
!13965 = !DILocation(line: 199, column: 1, scope: !13955)
!13966 = distinct !DISubprogram(name: "z_current_get", scope: !3831, file: !3831, line: 173, type: !13921, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3398, retainedNodes: !437)
!13967 = !DILocation(line: 180, column: 2, scope: !13968)
!13968 = distinct !DILexicalBlock(scope: !13966, file: !3831, line: 180, column: 2)
!13969 = !{i64 2154167924}
!13970 = !DILocation(line: 181, column: 9, scope: !13966)
!13971 = !DILocation(line: 181, column: 2, scope: !13966)
!13972 = distinct !DISubprogram(name: "z_early_memset", scope: !2191, file: !2191, line: 108, type: !13973, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !13975)
!13973 = !DISubroutineType(types: !13974)
!13974 = !{null, !104, !108, !439}
!13975 = !{!13976, !13977, !13978}
!13976 = !DILocalVariable(name: "dst", arg: 1, scope: !13972, file: !2191, line: 108, type: !104)
!13977 = !DILocalVariable(name: "c", arg: 2, scope: !13972, file: !2191, line: 108, type: !108)
!13978 = !DILocalVariable(name: "n", arg: 3, scope: !13972, file: !2191, line: 108, type: !439)
!13979 = !DILocation(line: 0, scope: !13972)
!13980 = !DILocation(line: 110, column: 9, scope: !13972)
!13981 = !DILocation(line: 111, column: 1, scope: !13972)
!13982 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2191, file: !2191, line: 121, type: !13983, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !13985)
!13983 = !DISubroutineType(types: !13984)
!13984 = !{null, !104, !13, !439}
!13985 = !{!13986, !13987, !13988}
!13986 = !DILocalVariable(name: "dst", arg: 1, scope: !13982, file: !2191, line: 121, type: !104)
!13987 = !DILocalVariable(name: "src", arg: 2, scope: !13982, file: !2191, line: 121, type: !13)
!13988 = !DILocalVariable(name: "n", arg: 3, scope: !13982, file: !2191, line: 121, type: !439)
!13989 = !DILocation(line: 0, scope: !13982)
!13990 = !DILocation(line: 123, column: 9, scope: !13982)
!13991 = !DILocation(line: 124, column: 1, scope: !13982)
!13992 = distinct !DISubprogram(name: "z_bss_zero", scope: !2191, file: !2191, line: 132, type: !3435, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !437)
!13993 = !DILocation(line: 143, column: 2, scope: !13992)
!13994 = !DILocation(line: 168, column: 1, scope: !13992)
!13995 = distinct !DISubprogram(name: "z_init_cpu", scope: !2191, file: !2191, line: 372, type: !9663, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !13996)
!13996 = !{!13997}
!13997 = !DILocalVariable(name: "id", arg: 1, scope: !13995, file: !2191, line: 372, type: !108)
!13998 = !DILocation(line: 0, scope: !13995)
!13999 = !DILocation(line: 374, column: 2, scope: !13995)
!14000 = !DILocation(line: 375, column: 34, scope: !13995)
!14001 = !DILocation(line: 375, column: 19, scope: !13995)
!14002 = !DILocation(line: 375, column: 31, scope: !13995)
!14003 = !DILocation(line: 376, column: 24, scope: !13995)
!14004 = !DILocation(line: 376, column: 19, scope: !13995)
!14005 = !DILocation(line: 376, column: 22, scope: !13995)
!14006 = !DILocation(line: 378, column: 26, scope: !13995)
!14007 = !DILocation(line: 378, column: 4, scope: !13995)
!14008 = !DILocation(line: 378, column: 50, scope: !13995)
!14009 = !DILocation(line: 377, column: 19, scope: !13995)
!14010 = !DILocation(line: 377, column: 29, scope: !13995)
!14011 = !DILocation(line: 384, column: 1, scope: !13995)
!14012 = distinct !DISubprogram(name: "init_idle_thread", scope: !2191, file: !2191, line: 343, type: !9663, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !14013)
!14013 = !{!14014, !14015, !14016, !14019}
!14014 = !DILocalVariable(name: "i", arg: 1, scope: !14012, file: !2191, line: 343, type: !108)
!14015 = !DILocalVariable(name: "thread", scope: !14012, file: !2191, line: 345, type: !2283)
!14016 = !DILocalVariable(name: "stack", scope: !14012, file: !2191, line: 346, type: !14017)
!14017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14018, size: 32)
!14018 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5202, line: 44, baseType: !2397)
!14019 = !DILocalVariable(name: "tname", scope: !14012, file: !2191, line: 358, type: !443)
!14020 = !DILocation(line: 0, scope: !14012)
!14021 = !DILocation(line: 345, column: 29, scope: !14012)
!14022 = !DILocation(line: 346, column: 28, scope: !14012)
!14023 = !DILocation(line: 362, column: 37, scope: !14012)
!14024 = !DILocation(line: 362, column: 36, scope: !14012)
!14025 = !DILocation(line: 361, column: 2, scope: !14012)
!14026 = !DILocation(line: 365, column: 2, scope: !14012)
!14027 = !DILocation(line: 370, column: 1, scope: !14012)
!14028 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2398, file: !2398, line: 331, type: !14029, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !14031)
!14029 = !DISubroutineType(types: !14030)
!14030 = !{!443, !14017}
!14031 = !{!14032}
!14032 = !DILocalVariable(name: "sym", arg: 1, scope: !14028, file: !2398, line: 331, type: !14017)
!14033 = !DILocation(line: 0, scope: !14028)
!14034 = !DILocation(line: 333, column: 21, scope: !14028)
!14035 = !DILocation(line: 333, column: 2, scope: !14028)
!14036 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14037, file: !14037, line: 155, type: !14038, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !14040)
!14037 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14038 = !DISubroutineType(types: !14039)
!14039 = !{null, !2283}
!14040 = !{!14041}
!14041 = !DILocalVariable(name: "thread", arg: 1, scope: !14036, file: !14037, line: 155, type: !2283)
!14042 = !DILocation(line: 0, scope: !14036)
!14043 = !DILocation(line: 157, column: 15, scope: !14036)
!14044 = !DILocation(line: 157, column: 28, scope: !14036)
!14045 = !DILocation(line: 158, column: 1, scope: !14036)
!14046 = distinct !DISubprogram(name: "z_cstart", scope: !2191, file: !2191, line: 501, type: !3435, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !14047)
!14047 = !{!14048}
!14048 = !DILocalVariable(name: "dummy_thread", scope: !14046, file: !2191, line: 518, type: !2284)
!14049 = !DILocation(line: 507, column: 2, scope: !14046)
!14050 = !DILocation(line: 43, column: 14, scope: !14051, inlinedAt: !14055)
!14051 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !14052, file: !14052, line: 40, type: !3435, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !14053)
!14052 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14053 = !{!14054}
!14054 = !DILocalVariable(name: "msp", scope: !14051, file: !14052, line: 42, type: !113)
!14055 = distinct !DILocation(line: 44, column: 2, scope: !14056, inlinedAt: !14058)
!14056 = distinct !DISubprogram(name: "arch_kernel_init", scope: !14057, file: !14057, line: 42, type: !3435, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !437)
!14057 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14058 = distinct !DILocation(line: 510, column: 2, scope: !14046)
!14059 = !DILocation(line: 43, column: 3, scope: !14051, inlinedAt: !14055)
!14060 = !DILocation(line: 43, column: 60, scope: !14051, inlinedAt: !14055)
!14061 = !DILocation(line: 0, scope: !14051, inlinedAt: !14055)
!14062 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !14063, file: !7083, line: 1153, type: !113)
!14063 = distinct !DISubprogram(name: "__set_MSP", scope: !7083, file: !7083, line: 1153, type: !7174, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !14064)
!14064 = !{!14062}
!14065 = !DILocation(line: 0, scope: !14063, inlinedAt: !14066)
!14066 = distinct !DILocation(line: 46, column: 2, scope: !14051, inlinedAt: !14055)
!14067 = !DILocation(line: 1155, column: 3, scope: !14063, inlinedAt: !14066)
!14068 = !{i64 2950344}
!14069 = !DILocation(line: 62, column: 11, scope: !14051, inlinedAt: !14055)
!14070 = !DILocation(line: 102, column: 2, scope: !14071, inlinedAt: !14072)
!14071 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8101, file: !8101, line: 97, type: !3435, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !437)
!14072 = distinct !DILocation(line: 45, column: 2, scope: !14056, inlinedAt: !14058)
!14073 = !DILocation(line: 108, column: 2, scope: !14071, inlinedAt: !14072)
!14074 = !DILocation(line: 112, column: 2, scope: !14071, inlinedAt: !14072)
!14075 = !DILocation(line: 113, column: 2, scope: !14071, inlinedAt: !14072)
!14076 = !DILocation(line: 114, column: 2, scope: !14071, inlinedAt: !14072)
!14077 = !DILocation(line: 116, column: 2, scope: !14071, inlinedAt: !14072)
!14078 = !DILocation(line: 123, column: 13, scope: !14071, inlinedAt: !14072)
!14079 = !DILocation(line: 46, column: 2, scope: !14056, inlinedAt: !14058)
!14080 = !DILocation(line: 47, column: 2, scope: !14056, inlinedAt: !14058)
!14081 = !DILocation(line: 174, column: 12, scope: !14082, inlinedAt: !14083)
!14082 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8101, file: !8101, line: 169, type: !3435, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !437)
!14083 = distinct !DILocation(line: 48, column: 2, scope: !14056, inlinedAt: !14058)
!14084 = !DILocation(line: 179, column: 12, scope: !14082, inlinedAt: !14083)
!14085 = !DILocation(line: 50, column: 2, scope: !14056, inlinedAt: !14058)
!14086 = !DILocation(line: 57, column: 2, scope: !14056, inlinedAt: !14058)
!14087 = !DILocation(line: 518, column: 2, scope: !14046)
!14088 = !DILocation(line: 518, column: 18, scope: !14046)
!14089 = !DILocation(line: 520, column: 2, scope: !14046)
!14090 = !DILocation(line: 523, column: 2, scope: !14046)
!14091 = !DILocation(line: 526, column: 2, scope: !14046)
!14092 = !DILocation(line: 527, column: 2, scope: !14046)
!14093 = !DILocation(line: 543, column: 24, scope: !14046)
!14094 = !DILocation(line: 543, column: 2, scope: !14046)
!14095 = !DILocation(line: 0, scope: !2422)
!14096 = !DILocation(line: 246, column: 15, scope: !2440)
!14097 = !DILocation(line: 246, column: 36, scope: !2439)
!14098 = !DILocation(line: 246, column: 2, scope: !2440)
!14099 = !DILocation(line: 247, column: 37, scope: !2438)
!14100 = !DILocation(line: 0, scope: !2438)
!14101 = !DILocation(line: 248, column: 19, scope: !2438)
!14102 = !DILocation(line: 248, column: 12, scope: !2438)
!14103 = !DILocation(line: 250, column: 11, scope: !14104)
!14104 = distinct !DILexicalBlock(scope: !2438, file: !2191, line: 250, column: 7)
!14105 = !DILocation(line: 250, column: 7, scope: !2438)
!14106 = !DILocation(line: 254, column: 11, scope: !14107)
!14107 = distinct !DILexicalBlock(scope: !14108, file: !2191, line: 254, column: 8)
!14108 = distinct !DILexicalBlock(scope: !14104, file: !2191, line: 250, column: 20)
!14109 = !DILocation(line: 254, column: 8, scope: !14108)
!14110 = !DILocation(line: 255, column: 9, scope: !14111)
!14111 = distinct !DILexicalBlock(scope: !14107, file: !2191, line: 254, column: 17)
!14112 = !DILocation(line: 258, column: 9, scope: !14111)
!14113 = !DILocation(line: 261, column: 28, scope: !14111)
!14114 = !DILocation(line: 261, column: 10, scope: !14111)
!14115 = !DILocation(line: 261, column: 17, scope: !14111)
!14116 = !DILocation(line: 261, column: 26, scope: !14111)
!14117 = !DILocation(line: 262, column: 4, scope: !14111)
!14118 = !DILocation(line: 263, column: 9, scope: !14108)
!14119 = !DILocation(line: 263, column: 16, scope: !14108)
!14120 = !DILocation(line: 263, column: 28, scope: !14108)
!14121 = !DILocation(line: 264, column: 3, scope: !14108)
!14122 = !DILocation(line: 246, column: 60, scope: !2439)
!14123 = distinct !{!14123, !14098, !14124}
!14124 = !DILocation(line: 265, column: 2, scope: !2440)
!14125 = !DILocation(line: 266, column: 1, scope: !2422)
!14126 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !792, file: !792, line: 1814, type: !7117, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !14127)
!14127 = !{!14128, !14129}
!14128 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14126, file: !792, line: 1814, type: !1151)
!14129 = !DILocalVariable(name: "priority", arg: 2, scope: !14126, file: !792, line: 1814, type: !113)
!14130 = !DILocation(line: 0, scope: !14126)
!14131 = !DILocation(line: 1822, column: 48, scope: !14132)
!14132 = distinct !DILexicalBlock(scope: !14133, file: !792, line: 1821, column: 3)
!14133 = distinct !DILexicalBlock(scope: !14126, file: !792, line: 1816, column: 7)
!14134 = !DILocation(line: 1822, column: 32, scope: !14132)
!14135 = !DILocation(line: 1822, column: 40, scope: !14132)
!14136 = !DILocation(line: 1822, column: 5, scope: !14132)
!14137 = !DILocation(line: 1822, column: 46, scope: !14132)
!14138 = !DILocation(line: 1824, column: 1, scope: !14126)
!14139 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !14057, file: !14057, line: 32, type: !3435, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!14140 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14141, file: !14141, line: 215, type: !14038, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !14142)
!14141 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14142 = !{!14143}
!14143 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14140, file: !14141, line: 215, type: !2283)
!14144 = !DILocation(line: 0, scope: !14140)
!14145 = !DILocation(line: 217, column: 21, scope: !14140)
!14146 = !DILocation(line: 217, column: 34, scope: !14140)
!14147 = !DILocation(line: 221, column: 21, scope: !14140)
!14148 = !DILocation(line: 221, column: 34, scope: !14140)
!14149 = !DILocation(line: 223, column: 27, scope: !14140)
!14150 = !DILocation(line: 223, column: 33, scope: !14140)
!14151 = !DILocation(line: 224, column: 27, scope: !14140)
!14152 = !DILocation(line: 224, column: 32, scope: !14140)
!14153 = !DILocation(line: 232, column: 16, scope: !14140)
!14154 = !DILocation(line: 232, column: 30, scope: !14140)
!14155 = !DILocation(line: 239, column: 24, scope: !14140)
!14156 = !DILocation(line: 240, column: 1, scope: !14140)
!14157 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2191, file: !2191, line: 399, type: !14158, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !14160)
!14158 = !DISubroutineType(types: !14159)
!14159 = !{!443}
!14160 = !{!14161}
!14161 = !DILocalVariable(name: "stack_ptr", scope: !14157, file: !2191, line: 401, type: !443)
!14162 = !DILocation(line: 404, column: 2, scope: !14157)
!14163 = !DILocation(line: 416, column: 24, scope: !14157)
!14164 = !DILocation(line: 418, column: 14, scope: !14157)
!14165 = !DILocation(line: 0, scope: !14157)
!14166 = !DILocation(line: 423, column: 2, scope: !14157)
!14167 = !DILocation(line: 424, column: 2, scope: !14157)
!14168 = !DILocation(line: 426, column: 2, scope: !14157)
!14169 = !DILocation(line: 428, column: 2, scope: !14157)
!14170 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2191, file: !2191, line: 432, type: !14171, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !14173)
!14171 = !DISubroutineType(types: !14172)
!14172 = !{null, !443}
!14173 = !{!14174}
!14174 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14170, file: !2191, line: 432, type: !443)
!14175 = !DILocation(line: 0, scope: !14170)
!14176 = !DILocation(line: 435, column: 2, scope: !14170)
!14177 = !DILocation(line: 445, column: 2, scope: !14170)
!14178 = distinct !DISubprogram(name: "bg_thread_main", scope: !2191, file: !2191, line: 277, type: !5204, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !14179)
!14179 = !{!14180, !14181, !14182}
!14180 = !DILocalVariable(name: "unused1", arg: 1, scope: !14178, file: !2191, line: 277, type: !104)
!14181 = !DILocalVariable(name: "unused2", arg: 2, scope: !14178, file: !2191, line: 277, type: !104)
!14182 = !DILocalVariable(name: "unused3", arg: 3, scope: !14178, file: !2191, line: 277, type: !104)
!14183 = !DILocation(line: 0, scope: !14178)
!14184 = !DILocation(line: 291, column: 20, scope: !14178)
!14185 = !DILocation(line: 293, column: 2, scope: !14178)
!14186 = !DILocation(line: 297, column: 2, scope: !14178)
!14187 = !DILocation(line: 305, column: 2, scope: !14178)
!14188 = !DILocation(line: 307, column: 2, scope: !14178)
!14189 = !DILocation(line: 330, column: 8, scope: !14178)
!14190 = !DILocation(line: 333, column: 34, scope: !14178)
!14191 = !DILocation(line: 339, column: 1, scope: !14178)
!14192 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2451, file: !2451, line: 45, type: !14193, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14201)
!14193 = !DISubroutineType(types: !14194)
!14194 = !{null, !14195, !104}
!14195 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !359, line: 103, baseType: !14196)
!14196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14197, size: 32)
!14197 = !DISubroutineType(types: !14198)
!14198 = !{null, !14199, !104}
!14199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14200, size: 32)
!14200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2456)
!14201 = !{!14202, !14203}
!14202 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14192, file: !2451, line: 45, type: !14195)
!14203 = !DILocalVariable(name: "user_data", arg: 2, scope: !14192, file: !2451, line: 45, type: !104)
!14204 = !DILocation(line: 0, scope: !14192)
!14205 = !DILocation(line: 71, column: 1, scope: !14192)
!14206 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2451, file: !2451, line: 73, type: !14193, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14207)
!14207 = !{!14208, !14209}
!14208 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14206, file: !2451, line: 73, type: !14195)
!14209 = !DILocalVariable(name: "user_data", arg: 2, scope: !14206, file: !2451, line: 73, type: !104)
!14210 = !DILocation(line: 0, scope: !14206)
!14211 = !DILocation(line: 95, column: 1, scope: !14206)
!14212 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2451, file: !2451, line: 97, type: !8102, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !437)
!14213 = !DILocation(line: 1031, column: 3, scope: !14214, inlinedAt: !14217)
!14214 = distinct !DISubprogram(name: "__get_IPSR", scope: !7083, file: !7083, line: 1027, type: !7164, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14215)
!14215 = !{!14216}
!14216 = !DILocalVariable(name: "result", scope: !14214, file: !7083, line: 1029, type: !113)
!14217 = distinct !DILocation(line: 48, column: 10, scope: !14218, inlinedAt: !14219)
!14218 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8101, file: !8101, line: 46, type: !8102, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !437)
!14219 = distinct !DILocation(line: 99, column: 9, scope: !14212)
!14220 = !{i64 2955995}
!14221 = !DILocation(line: 0, scope: !14214, inlinedAt: !14217)
!14222 = !DILocation(line: 48, column: 9, scope: !14218, inlinedAt: !14219)
!14223 = !DILocation(line: 99, column: 2, scope: !14212)
!14224 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2451, file: !2451, line: 106, type: !3435, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !437)
!14225 = !DILocation(line: 108, column: 2, scope: !14224)
!14226 = !DILocation(line: 108, column: 17, scope: !14224)
!14227 = !DILocation(line: 108, column: 30, scope: !14224)
!14228 = !DILocation(line: 109, column: 1, scope: !14224)
!14229 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2451, file: !2451, line: 116, type: !3435, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !437)
!14230 = !DILocation(line: 118, column: 2, scope: !14229)
!14231 = !DILocation(line: 118, column: 17, scope: !14229)
!14232 = !DILocation(line: 118, column: 30, scope: !14229)
!14233 = !DILocation(line: 119, column: 1, scope: !14229)
!14234 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2451, file: !2451, line: 126, type: !8102, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !437)
!14235 = !DILocation(line: 128, column: 10, scope: !14234)
!14236 = !DILocation(line: 128, column: 25, scope: !14234)
!14237 = !DILocation(line: 128, column: 38, scope: !14234)
!14238 = !DILocation(line: 128, column: 53, scope: !14234)
!14239 = !DILocation(line: 128, column: 2, scope: !14234)
!14240 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2451, file: !2451, line: 187, type: !14241, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14243)
!14241 = !DISubroutineType(types: !14242)
!14242 = !{!108, !2455, !105}
!14243 = !{!14244, !14245}
!14244 = !DILocalVariable(name: "thread", arg: 1, scope: !14240, file: !2451, line: 187, type: !2455)
!14245 = !DILocalVariable(name: "value", arg: 2, scope: !14240, file: !2451, line: 187, type: !105)
!14246 = !DILocation(line: 0, scope: !14240)
!14247 = !DILocation(line: 206, column: 2, scope: !14240)
!14248 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2451, file: !2451, line: 238, type: !14249, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14251)
!14249 = !DISubroutineType(types: !14250)
!14250 = !{!105, !2455}
!14251 = !{!14252}
!14252 = !DILocalVariable(name: "thread", arg: 1, scope: !14248, file: !2451, line: 238, type: !2455)
!14253 = !DILocation(line: 0, scope: !14248)
!14254 = !DILocation(line: 244, column: 2, scope: !14248)
!14255 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2451, file: !2451, line: 248, type: !14256, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14258)
!14256 = !DISubroutineType(types: !14257)
!14257 = !{!108, !2454, !443, !439}
!14258 = !{!14259, !14260, !14261}
!14259 = !DILocalVariable(name: "thread", arg: 1, scope: !14255, file: !2451, line: 248, type: !2454)
!14260 = !DILocalVariable(name: "buf", arg: 2, scope: !14255, file: !2451, line: 248, type: !443)
!14261 = !DILocalVariable(name: "size", arg: 3, scope: !14255, file: !2451, line: 248, type: !439)
!14262 = !DILocation(line: 0, scope: !14255)
!14263 = !DILocation(line: 257, column: 2, scope: !14255)
!14264 = !DILocation(line: 0, scope: !2450)
!14265 = !DILocation(line: 281, column: 11, scope: !14266)
!14266 = distinct !DILexicalBlock(scope: !2450, file: !2451, line: 281, column: 6)
!14267 = !DILocation(line: 281, column: 20, scope: !14266)
!14268 = !DILocation(line: 275, column: 45, scope: !2450)
!14269 = !DILocation(line: 285, column: 10, scope: !2450)
!14270 = !DILocation(line: 0, scope: !2571)
!14271 = !DILocation(line: 293, column: 39, scope: !14272)
!14272 = distinct !DILexicalBlock(scope: !2571, file: !2451, line: 293, column: 2)
!14273 = !DILocation(line: 293, column: 2, scope: !2571)
!14274 = !DILocation(line: 273, column: 14, scope: !2450)
!14275 = !DILocation(line: 309, column: 2, scope: !2450)
!14276 = !DILocation(line: 309, column: 11, scope: !2450)
!14277 = !DILocation(line: 311, column: 2, scope: !2450)
!14278 = !DILocation(line: 293, column: 26, scope: !14272)
!14279 = !DILocation(line: 294, column: 9, scope: !14280)
!14280 = distinct !DILexicalBlock(scope: !14272, file: !2451, line: 293, column: 54)
!14281 = !DILocation(line: 295, column: 21, scope: !14282)
!14282 = distinct !DILexicalBlock(scope: !14280, file: !2451, line: 295, column: 7)
!14283 = !DILocation(line: 295, column: 28, scope: !14282)
!14284 = !DILocation(line: 295, column: 7, scope: !14280)
!14285 = !DILocation(line: 299, column: 25, scope: !14280)
!14286 = !DILocation(line: 299, column: 41, scope: !14280)
!14287 = !DILocation(line: 300, column: 7, scope: !14280)
!14288 = !DILocation(line: 300, column: 26, scope: !14280)
!14289 = !DILocation(line: 299, column: 10, scope: !14280)
!14290 = !DILocation(line: 299, column: 7, scope: !14280)
!14291 = !DILocation(line: 302, column: 16, scope: !14280)
!14292 = !DILocation(line: 304, column: 20, scope: !14293)
!14293 = distinct !DILexicalBlock(scope: !14280, file: !2451, line: 304, column: 7)
!14294 = !DILocation(line: 304, column: 7, scope: !14280)
!14295 = !DILocation(line: 305, column: 26, scope: !14296)
!14296 = distinct !DILexicalBlock(scope: !14293, file: !2451, line: 304, column: 26)
!14297 = !DILocation(line: 305, column: 42, scope: !14296)
!14298 = !DILocation(line: 305, column: 11, scope: !14296)
!14299 = !DILocation(line: 305, column: 8, scope: !14296)
!14300 = !DILocation(line: 306, column: 3, scope: !14296)
!14301 = !DILocation(line: 293, column: 50, scope: !14272)
!14302 = !DILocation(line: 312, column: 1, scope: !2450)
!14303 = distinct !DISubprogram(name: "copy_bytes", scope: !2451, file: !2451, line: 261, type: !14304, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14306)
!14304 = !DISubroutineType(types: !14305)
!14305 = !{!439, !443, !439, !105, !439}
!14306 = !{!14307, !14308, !14309, !14310, !14311}
!14307 = !DILocalVariable(name: "dest", arg: 1, scope: !14303, file: !2451, line: 261, type: !443)
!14308 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14303, file: !2451, line: 261, type: !439)
!14309 = !DILocalVariable(name: "src", arg: 3, scope: !14303, file: !2451, line: 261, type: !105)
!14310 = !DILocalVariable(name: "src_size", arg: 4, scope: !14303, file: !2451, line: 261, type: !439)
!14311 = !DILocalVariable(name: "bytes_to_copy", scope: !14303, file: !2451, line: 263, type: !439)
!14312 = !DILocation(line: 0, scope: !14303)
!14313 = !DILocation(line: 265, column: 18, scope: !14303)
!14314 = !DILocation(line: 266, column: 2, scope: !14303)
!14315 = !DILocation(line: 268, column: 2, scope: !14303)
!14316 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2451, file: !2451, line: 383, type: !14317, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14319)
!14317 = !DISubroutineType(types: !14318)
!14318 = !{null, !2455}
!14319 = !{!14320}
!14320 = !DILocalVariable(name: "thread", arg: 1, scope: !14316, file: !2451, line: 383, type: !2455)
!14321 = !DILocation(line: 0, scope: !14316)
!14322 = !DILocation(line: 387, column: 2, scope: !14316)
!14323 = !DILocation(line: 388, column: 1, scope: !14316)
!14324 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2451, file: !2451, line: 528, type: !14325, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14332)
!14325 = !DISubroutineType(types: !14326)
!14326 = !{!443, !2455, !14327, !439, !5201, !104, !104, !104, !108, !113, !105}
!14327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14328, size: 32)
!14328 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5202, line: 44, baseType: !14329)
!14329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2398, line: 47, size: 8, elements: !14330)
!14330 = !{!14331}
!14331 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14329, file: !2398, line: 48, baseType: !107, size: 8)
!14332 = !{!14333, !14334, !14335, !14336, !14337, !14338, !14339, !14340, !14341, !14342, !14343}
!14333 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14324, file: !2451, line: 528, type: !2455)
!14334 = !DILocalVariable(name: "stack", arg: 2, scope: !14324, file: !2451, line: 529, type: !14327)
!14335 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14324, file: !2451, line: 529, type: !439)
!14336 = !DILocalVariable(name: "entry", arg: 4, scope: !14324, file: !2451, line: 530, type: !5201)
!14337 = !DILocalVariable(name: "p1", arg: 5, scope: !14324, file: !2451, line: 531, type: !104)
!14338 = !DILocalVariable(name: "p2", arg: 6, scope: !14324, file: !2451, line: 531, type: !104)
!14339 = !DILocalVariable(name: "p3", arg: 7, scope: !14324, file: !2451, line: 531, type: !104)
!14340 = !DILocalVariable(name: "prio", arg: 8, scope: !14324, file: !2451, line: 532, type: !108)
!14341 = !DILocalVariable(name: "options", arg: 9, scope: !14324, file: !2451, line: 532, type: !113)
!14342 = !DILocalVariable(name: "name", arg: 10, scope: !14324, file: !2451, line: 532, type: !105)
!14343 = !DILocalVariable(name: "stack_ptr", scope: !14324, file: !2451, line: 534, type: !443)
!14344 = !DILocation(line: 0, scope: !14324)
!14345 = !DILocation(line: 550, column: 28, scope: !14324)
!14346 = !DILocation(line: 550, column: 2, scope: !14324)
!14347 = !DILocation(line: 553, column: 34, scope: !14324)
!14348 = !DILocation(line: 553, column: 2, scope: !14324)
!14349 = !DILocation(line: 554, column: 14, scope: !14324)
!14350 = !DILocation(line: 564, column: 2, scope: !14324)
!14351 = !DILocation(line: 567, column: 14, scope: !14324)
!14352 = !DILocation(line: 567, column: 24, scope: !14324)
!14353 = !DILocation(line: 612, column: 7, scope: !14354)
!14354 = distinct !DILexicalBlock(scope: !14324, file: !2451, line: 612, column: 6)
!14355 = !DILocation(line: 612, column: 6, scope: !14324)
!14356 = !DILocation(line: 627, column: 40, scope: !14324)
!14357 = !DILocation(line: 637, column: 2, scope: !14324)
!14358 = !DILocation(line: 613, column: 15, scope: !14359)
!14359 = distinct !DILexicalBlock(scope: !14354, file: !2451, line: 612, column: 17)
!14360 = !DILocation(line: 613, column: 29, scope: !14359)
!14361 = !DILocation(line: 638, column: 1, scope: !14324)
!14362 = distinct !DISubprogram(name: "z_waitq_init", scope: !14363, file: !14363, line: 47, type: !14364, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14366)
!14363 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14364 = !DISubroutineType(types: !14365)
!14365 = !{null, !2486}
!14366 = !{!14367}
!14367 = !DILocalVariable(name: "w", arg: 1, scope: !14362, file: !14363, line: 47, type: !2486)
!14368 = !DILocation(line: 0, scope: !14362)
!14369 = !DILocation(line: 49, column: 21, scope: !14362)
!14370 = !DILocation(line: 49, column: 2, scope: !14362)
!14371 = !DILocation(line: 50, column: 1, scope: !14362)
!14372 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2451, file: !2451, line: 791, type: !14373, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14376)
!14373 = !DISubroutineType(types: !14374)
!14374 = !{null, !14375, !108, !113, !32}
!14375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 32)
!14376 = !{!14377, !14378, !14379, !14380}
!14377 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14372, file: !2451, line: 791, type: !14375)
!14378 = !DILocalVariable(name: "priority", arg: 2, scope: !14372, file: !2451, line: 791, type: !108)
!14379 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14372, file: !2451, line: 792, type: !113)
!14380 = !DILocalVariable(name: "options", arg: 4, scope: !14372, file: !2451, line: 792, type: !32)
!14381 = !DILocation(line: 0, scope: !14372)
!14382 = !DILocation(line: 795, column: 15, scope: !14372)
!14383 = !DILocation(line: 795, column: 25, scope: !14372)
!14384 = !DILocation(line: 796, column: 30, scope: !14372)
!14385 = !DILocation(line: 796, column: 15, scope: !14372)
!14386 = !DILocation(line: 796, column: 28, scope: !14372)
!14387 = !DILocation(line: 797, column: 30, scope: !14372)
!14388 = !DILocation(line: 797, column: 15, scope: !14372)
!14389 = !DILocation(line: 797, column: 28, scope: !14372)
!14390 = !DILocation(line: 799, column: 22, scope: !14372)
!14391 = !DILocation(line: 799, column: 15, scope: !14372)
!14392 = !DILocation(line: 799, column: 20, scope: !14372)
!14393 = !DILocation(line: 801, column: 15, scope: !14372)
!14394 = !DILocation(line: 801, column: 28, scope: !14372)
!14395 = !DILocation(line: 814, column: 2, scope: !14372)
!14396 = !DILocation(line: 815, column: 1, scope: !14372)
!14397 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2451, file: !2451, line: 449, type: !14398, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14400)
!14398 = !DISubroutineType(types: !14399)
!14399 = !{!443, !2455, !14327, !439}
!14400 = !{!14401, !14402, !14403, !14404, !14405, !14406, !14407, !14408}
!14401 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14397, file: !2451, line: 449, type: !2455)
!14402 = !DILocalVariable(name: "stack", arg: 2, scope: !14397, file: !2451, line: 450, type: !14327)
!14403 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14397, file: !2451, line: 450, type: !439)
!14404 = !DILocalVariable(name: "stack_obj_size", scope: !14397, file: !2451, line: 452, type: !439)
!14405 = !DILocalVariable(name: "stack_buf_size", scope: !14397, file: !2451, line: 452, type: !439)
!14406 = !DILocalVariable(name: "stack_ptr", scope: !14397, file: !2451, line: 453, type: !443)
!14407 = !DILocalVariable(name: "stack_buf_start", scope: !14397, file: !2451, line: 453, type: !443)
!14408 = !DILocalVariable(name: "delta", scope: !14397, file: !2451, line: 454, type: !439)
!14409 = !DILocation(line: 0, scope: !14397)
!14410 = !DILocation(line: 465, column: 20, scope: !14411)
!14411 = distinct !DILexicalBlock(scope: !14397, file: !2451, line: 463, column: 2)
!14412 = !DILocation(line: 466, column: 21, scope: !14411)
!14413 = !DILocation(line: 473, column: 28, scope: !14397)
!14414 = !DILocation(line: 514, column: 33, scope: !14397)
!14415 = !DILocation(line: 514, column: 25, scope: !14397)
!14416 = !DILocation(line: 514, column: 31, scope: !14397)
!14417 = !DILocation(line: 515, column: 25, scope: !14397)
!14418 = !DILocation(line: 515, column: 30, scope: !14397)
!14419 = !DILocation(line: 516, column: 25, scope: !14397)
!14420 = !DILocation(line: 516, column: 31, scope: !14397)
!14421 = !DILocation(line: 520, column: 2, scope: !14397)
!14422 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2398, file: !2398, line: 331, type: !14423, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14425)
!14423 = !DISubroutineType(types: !14424)
!14424 = !{!443, !14327}
!14425 = !{!14426}
!14426 = !DILocalVariable(name: "sym", arg: 1, scope: !14422, file: !2398, line: 331, type: !14327)
!14427 = !DILocation(line: 0, scope: !14422)
!14428 = !DILocation(line: 333, column: 21, scope: !14422)
!14429 = !DILocation(line: 333, column: 2, scope: !14422)
!14430 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14431, file: !14431, line: 40, type: !14432, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14434)
!14431 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14432 = !DISubroutineType(types: !14433)
!14433 = !{null, !14375}
!14434 = !{!14435}
!14435 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14430, file: !14431, line: 40, type: !14375)
!14436 = !DILocation(line: 0, scope: !14430)
!14437 = !DILocation(line: 42, column: 31, scope: !14430)
!14438 = !DILocation(line: 42, column: 2, scope: !14430)
!14439 = !DILocation(line: 43, column: 1, scope: !14430)
!14440 = distinct !DISubprogram(name: "z_init_timeout", scope: !14431, file: !14431, line: 25, type: !2512, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14441)
!14441 = !{!14442}
!14442 = !DILocalVariable(name: "to", arg: 1, scope: !14440, file: !14431, line: 25, type: !2514)
!14443 = !DILocation(line: 0, scope: !14440)
!14444 = !DILocation(line: 27, column: 22, scope: !14440)
!14445 = !DILocation(line: 27, column: 2, scope: !14440)
!14446 = !DILocation(line: 28, column: 1, scope: !14440)
!14447 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !14448, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14450)
!14448 = !DISubroutineType(types: !14449)
!14449 = !{null, !2558}
!14450 = !{!14451}
!14451 = !DILocalVariable(name: "node", arg: 1, scope: !14447, file: !367, line: 211, type: !2558)
!14452 = !DILocation(line: 0, scope: !14447)
!14453 = !DILocation(line: 213, column: 8, scope: !14447)
!14454 = !DILocation(line: 213, column: 13, scope: !14447)
!14455 = !DILocation(line: 214, column: 8, scope: !14447)
!14456 = !DILocation(line: 214, column: 13, scope: !14447)
!14457 = !DILocation(line: 215, column: 1, scope: !14447)
!14458 = distinct !DISubprogram(name: "sys_dlist_init", scope: !367, file: !367, line: 197, type: !14459, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14462)
!14459 = !DISubroutineType(types: !14460)
!14460 = !{null, !14461}
!14461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 32)
!14462 = !{!14463}
!14463 = !DILocalVariable(name: "list", arg: 1, scope: !14458, file: !367, line: 197, type: !14461)
!14464 = !DILocation(line: 0, scope: !14458)
!14465 = !DILocation(line: 199, column: 8, scope: !14458)
!14466 = !DILocation(line: 199, column: 13, scope: !14458)
!14467 = !DILocation(line: 200, column: 8, scope: !14458)
!14468 = !DILocation(line: 200, column: 13, scope: !14458)
!14469 = !DILocation(line: 201, column: 1, scope: !14458)
!14470 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2451, file: !2451, line: 641, type: !14471, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14477)
!14471 = !DISubroutineType(types: !14472)
!14472 = !{!2454, !2455, !14327, !439, !5201, !104, !104, !104, !108, !113, !14473}
!14473 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !14474)
!14474 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !14475)
!14475 = !{!14476}
!14476 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14474, file: !110, line: 66, baseType: !109, size: 64)
!14477 = !{!14478, !14479, !14480, !14481, !14482, !14483, !14484, !14485, !14486, !14487}
!14478 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14470, file: !2451, line: 641, type: !2455)
!14479 = !DILocalVariable(name: "stack", arg: 2, scope: !14470, file: !2451, line: 642, type: !14327)
!14480 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14470, file: !2451, line: 643, type: !439)
!14481 = !DILocalVariable(name: "entry", arg: 4, scope: !14470, file: !2451, line: 643, type: !5201)
!14482 = !DILocalVariable(name: "p1", arg: 5, scope: !14470, file: !2451, line: 644, type: !104)
!14483 = !DILocalVariable(name: "p2", arg: 6, scope: !14470, file: !2451, line: 644, type: !104)
!14484 = !DILocalVariable(name: "p3", arg: 7, scope: !14470, file: !2451, line: 644, type: !104)
!14485 = !DILocalVariable(name: "prio", arg: 8, scope: !14470, file: !2451, line: 645, type: !108)
!14486 = !DILocalVariable(name: "options", arg: 9, scope: !14470, file: !2451, line: 645, type: !113)
!14487 = !DILocalVariable(name: "delay", arg: 10, scope: !14470, file: !2451, line: 645, type: !14473)
!14488 = !DILocation(line: 0, scope: !14470)
!14489 = !DILocation(line: 649, column: 2, scope: !14470)
!14490 = !DILocation(line: 652, column: 7, scope: !14491)
!14491 = distinct !DILexicalBlock(scope: !14470, file: !2451, line: 652, column: 6)
!14492 = !DILocation(line: 652, column: 6, scope: !14470)
!14493 = !DILocation(line: 653, column: 3, scope: !14494)
!14494 = distinct !DILexicalBlock(scope: !14491, file: !2451, line: 652, column: 39)
!14495 = !DILocation(line: 654, column: 2, scope: !14494)
!14496 = !DILocation(line: 656, column: 2, scope: !14470)
!14497 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2451, file: !2451, line: 401, type: !14498, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14500)
!14498 = !DISubroutineType(types: !14499)
!14499 = !{null, !2455, !14473}
!14500 = !{!14501, !14502}
!14501 = !DILocalVariable(name: "thread", arg: 1, scope: !14497, file: !2451, line: 401, type: !2455)
!14502 = !DILocalVariable(name: "delay", arg: 2, scope: !14497, file: !2451, line: 401, type: !14473)
!14503 = !DILocation(line: 0, scope: !14497)
!14504 = !DILocation(line: 404, column: 6, scope: !14505)
!14505 = distinct !DILexicalBlock(scope: !14497, file: !2451, line: 404, column: 6)
!14506 = !DILocation(line: 404, column: 6, scope: !14497)
!14507 = !DILocation(line: 405, column: 3, scope: !14508)
!14508 = distinct !DILexicalBlock(scope: !14505, file: !2451, line: 404, column: 38)
!14509 = !DILocation(line: 406, column: 2, scope: !14508)
!14510 = !DILocation(line: 407, column: 3, scope: !14511)
!14511 = distinct !DILexicalBlock(scope: !14505, file: !2451, line: 406, column: 9)
!14512 = !DILocation(line: 413, column: 1, scope: !14497)
!14513 = distinct !DISubprogram(name: "k_thread_start", scope: !3831, file: !3831, line: 205, type: !14514, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14516)
!14514 = !DISubroutineType(types: !14515)
!14515 = !{null, !2454}
!14516 = !{!14517}
!14517 = !DILocalVariable(name: "thread", arg: 1, scope: !14513, file: !3831, line: 205, type: !2454)
!14518 = !DILocation(line: 0, scope: !14513)
!14519 = !DILocation(line: 214, column: 2, scope: !14520)
!14520 = distinct !DILexicalBlock(scope: !14513, file: !3831, line: 214, column: 2)
!14521 = !{i64 2154193216}
!14522 = !DILocation(line: 215, column: 2, scope: !14513)
!14523 = !DILocation(line: 216, column: 1, scope: !14513)
!14524 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14431, file: !14431, line: 47, type: !14498, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14525)
!14525 = !{!14526, !14527}
!14526 = !DILocalVariable(name: "thread", arg: 1, scope: !14524, file: !14431, line: 47, type: !2455)
!14527 = !DILocalVariable(name: "ticks", arg: 2, scope: !14524, file: !14431, line: 47, type: !14473)
!14528 = !DILocation(line: 0, scope: !14524)
!14529 = !DILocation(line: 49, column: 30, scope: !14524)
!14530 = !DILocation(line: 49, column: 2, scope: !14524)
!14531 = !DILocation(line: 50, column: 1, scope: !14524)
!14532 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2451, file: !2451, line: 748, type: !3435, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14533)
!14533 = !{!14534, !14552}
!14534 = !DILocalVariable(name: "thread_data", scope: !14535, file: !2451, line: 750, type: !14536)
!14535 = distinct !DILexicalBlock(scope: !14532, file: !2451, line: 750, column: 2)
!14536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14537, size: 32)
!14537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !359, line: 620, size: 384, elements: !14538)
!14538 = !{!14539, !14540, !14541, !14542, !14543, !14544, !14545, !14546, !14547, !14548, !14549, !14551}
!14539 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14537, file: !359, line: 621, baseType: !2455, size: 32)
!14540 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14537, file: !359, line: 622, baseType: !14327, size: 32, offset: 32)
!14541 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14537, file: !359, line: 623, baseType: !32, size: 32, offset: 64)
!14542 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14537, file: !359, line: 624, baseType: !5201, size: 32, offset: 96)
!14543 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14537, file: !359, line: 625, baseType: !104, size: 32, offset: 128)
!14544 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14537, file: !359, line: 626, baseType: !104, size: 32, offset: 160)
!14545 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14537, file: !359, line: 627, baseType: !104, size: 32, offset: 192)
!14546 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14537, file: !359, line: 628, baseType: !108, size: 32, offset: 224)
!14547 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14537, file: !359, line: 629, baseType: !113, size: 32, offset: 256)
!14548 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14537, file: !359, line: 630, baseType: !220, size: 32, offset: 288)
!14549 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14537, file: !359, line: 631, baseType: !14550, size: 32, offset: 320)
!14550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3435, size: 32)
!14551 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14537, file: !359, line: 632, baseType: !105, size: 32, offset: 352)
!14552 = !DILocalVariable(name: "thread_data", scope: !14553, file: !2451, line: 781, type: !14536)
!14553 = distinct !DILexicalBlock(scope: !14532, file: !2451, line: 781, column: 2)
!14554 = !DILocation(line: 0, scope: !14535)
!14555 = !DILocation(line: 750, column: 2, scope: !14535)
!14556 = !DILocation(line: 780, column: 2, scope: !14532)
!14557 = !DILocation(line: 0, scope: !14553)
!14558 = !DILocation(line: 781, column: 2, scope: !14553)
!14559 = !DILocation(line: 752, column: 17, scope: !14560)
!14560 = distinct !DILexicalBlock(scope: !14561, file: !2451, line: 750, column: 38)
!14561 = distinct !DILexicalBlock(scope: !14535, file: !2451, line: 750, column: 2)
!14562 = !DILocation(line: 753, column: 17, scope: !14560)
!14563 = !DILocation(line: 754, column: 17, scope: !14560)
!14564 = !DILocation(line: 755, column: 17, scope: !14560)
!14565 = !DILocation(line: 756, column: 17, scope: !14560)
!14566 = !DILocation(line: 757, column: 17, scope: !14560)
!14567 = !DILocation(line: 758, column: 17, scope: !14560)
!14568 = !DILocation(line: 759, column: 17, scope: !14560)
!14569 = !DILocation(line: 760, column: 17, scope: !14560)
!14570 = !DILocation(line: 751, column: 3, scope: !14560)
!14571 = !DILocation(line: 763, column: 16, scope: !14560)
!14572 = !DILocation(line: 763, column: 29, scope: !14560)
!14573 = !DILocation(line: 763, column: 39, scope: !14560)
!14574 = !DILocation(line: 750, column: 2, scope: !14561)
!14575 = !DILocation(line: 750, column: 2, scope: !14576)
!14576 = distinct !DILexicalBlock(scope: !14561, file: !2451, line: 750, column: 2)
!14577 = distinct !{!14577, !14555, !14578}
!14578 = !DILocation(line: 764, column: 2, scope: !14535)
!14579 = !DILocation(line: 787, column: 2, scope: !14532)
!14580 = !DILocation(line: 788, column: 1, scope: !14532)
!14581 = !DILocation(line: 782, column: 20, scope: !14582)
!14582 = distinct !DILexicalBlock(scope: !14583, file: !2451, line: 782, column: 7)
!14583 = distinct !DILexicalBlock(scope: !14584, file: !2451, line: 781, column: 38)
!14584 = distinct !DILexicalBlock(scope: !14553, file: !2451, line: 781, column: 2)
!14585 = !DILocation(line: 782, column: 31, scope: !14582)
!14586 = !DILocation(line: 782, column: 7, scope: !14583)
!14587 = !DILocation(line: 783, column: 37, scope: !14588)
!14588 = distinct !DILexicalBlock(scope: !14582, file: !2451, line: 782, column: 51)
!14589 = !DILocation(line: 784, column: 10, scope: !14588)
!14590 = !DILocation(line: 783, column: 4, scope: !14588)
!14591 = !DILocation(line: 785, column: 3, scope: !14588)
!14592 = !DILocation(line: 781, column: 2, scope: !14584)
!14593 = !DILocation(line: 781, column: 2, scope: !14594)
!14594 = distinct !DILexicalBlock(scope: !14584, file: !2451, line: 781, column: 2)
!14595 = distinct !{!14595, !14558, !14596}
!14596 = !DILocation(line: 786, column: 2, scope: !14553)
!14597 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3798, file: !3798, line: 403, type: !3799, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14598)
!14598 = !{!14599}
!14599 = !DILocalVariable(name: "t", arg: 1, scope: !14597, file: !3798, line: 403, type: !114)
!14600 = !DILocation(line: 0, scope: !14597)
!14601 = !DILocalVariable(name: "t", arg: 1, scope: !14602, file: !3798, line: 102, type: !114)
!14602 = distinct !DISubprogram(name: "z_tmcvt", scope: !3798, file: !3798, line: 102, type: !3806, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14603)
!14603 = !{!14601, !14604, !14605, !14606, !14607, !14608, !14609, !14610, !14611, !14612, !14613}
!14604 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14602, file: !3798, line: 102, type: !113)
!14605 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14602, file: !3798, line: 103, type: !113)
!14606 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14602, file: !3798, line: 103, type: !422)
!14607 = !DILocalVariable(name: "result32", arg: 5, scope: !14602, file: !3798, line: 104, type: !422)
!14608 = !DILocalVariable(name: "round_up", arg: 6, scope: !14602, file: !3798, line: 104, type: !422)
!14609 = !DILocalVariable(name: "round_off", arg: 7, scope: !14602, file: !3798, line: 105, type: !422)
!14610 = !DILocalVariable(name: "mul_ratio", scope: !14602, file: !3798, line: 107, type: !422)
!14611 = !DILocalVariable(name: "div_ratio", scope: !14602, file: !3798, line: 109, type: !422)
!14612 = !DILocalVariable(name: "off", scope: !14602, file: !3798, line: 116, type: !114)
!14613 = !DILocalVariable(name: "rdivisor", scope: !14614, file: !3798, line: 119, type: !113)
!14614 = distinct !DILexicalBlock(scope: !14615, file: !3798, line: 118, column: 18)
!14615 = distinct !DILexicalBlock(scope: !14602, file: !3798, line: 118, column: 6)
!14616 = !DILocation(line: 0, scope: !14602, inlinedAt: !14617)
!14617 = distinct !DILocation(line: 406, column: 9, scope: !14597)
!14618 = !DILocation(line: 145, column: 13, scope: !14619, inlinedAt: !14617)
!14619 = distinct !DILexicalBlock(scope: !14620, file: !3798, line: 144, column: 10)
!14620 = distinct !DILexicalBlock(scope: !14621, file: !3798, line: 142, column: 7)
!14621 = distinct !DILexicalBlock(scope: !14622, file: !3798, line: 141, column: 24)
!14622 = distinct !DILexicalBlock(scope: !14623, file: !3798, line: 141, column: 13)
!14623 = distinct !DILexicalBlock(scope: !14602, file: !3798, line: 134, column: 6)
!14624 = !DILocation(line: 406, column: 2, scope: !14597)
!14625 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2451, file: !2451, line: 817, type: !5199, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14626)
!14626 = !{!14627, !14628, !14629, !14630}
!14627 = !DILocalVariable(name: "entry", arg: 1, scope: !14625, file: !2451, line: 817, type: !5201)
!14628 = !DILocalVariable(name: "p1", arg: 2, scope: !14625, file: !2451, line: 818, type: !104)
!14629 = !DILocalVariable(name: "p2", arg: 3, scope: !14625, file: !2451, line: 818, type: !104)
!14630 = !DILocalVariable(name: "p3", arg: 4, scope: !14625, file: !2451, line: 818, type: !104)
!14631 = !DILocation(line: 0, scope: !14625)
!14632 = !DILocation(line: 822, column: 2, scope: !14625)
!14633 = !DILocation(line: 822, column: 17, scope: !14625)
!14634 = !DILocation(line: 822, column: 30, scope: !14625)
!14635 = !DILocation(line: 823, column: 2, scope: !14625)
!14636 = !DILocation(line: 845, column: 2, scope: !14625)
!14637 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2451, file: !2451, line: 888, type: !14638, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14640)
!14638 = !DISubroutineType(types: !14639)
!14639 = !{!108, !2455}
!14640 = !{!14641}
!14641 = !DILocalVariable(name: "thread", arg: 1, scope: !14637, file: !2451, line: 888, type: !2455)
!14642 = !DILocation(line: 0, scope: !14637)
!14643 = !DILocation(line: 893, column: 2, scope: !14637)
!14644 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2451, file: !2451, line: 897, type: !14645, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14647)
!14645 = !DISubroutineType(types: !14646)
!14646 = !{!108, !2455, !32}
!14647 = !{!14648, !14649}
!14648 = !DILocalVariable(name: "thread", arg: 1, scope: !14644, file: !2451, line: 897, type: !2455)
!14649 = !DILocalVariable(name: "options", arg: 2, scope: !14644, file: !2451, line: 897, type: !32)
!14650 = !DILocation(line: 0, scope: !14644)
!14651 = !DILocation(line: 902, column: 2, scope: !14644)
!14652 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2451, file: !2451, line: 1072, type: !14653, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14658)
!14653 = !DISubroutineType(types: !14654)
!14654 = !{!108, !2454, !14655}
!14655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14656, size: 32)
!14656 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !649, line: 234, baseType: !14657)
!14657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !649, line: 192, elements: !437)
!14658 = !{!14659, !14660}
!14659 = !DILocalVariable(name: "thread", arg: 1, scope: !14652, file: !2451, line: 1072, type: !2454)
!14660 = !DILocalVariable(name: "stats", arg: 2, scope: !14652, file: !2451, line: 1073, type: !14655)
!14661 = !DILocation(line: 0, scope: !14652)
!14662 = !DILocation(line: 1075, column: 14, scope: !14663)
!14663 = distinct !DILexicalBlock(scope: !14652, file: !2451, line: 1075, column: 6)
!14664 = !DILocation(line: 1075, column: 23, scope: !14663)
!14665 = !DILocation(line: 1086, column: 1, scope: !14652)
!14666 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2451, file: !2451, line: 1088, type: !14667, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !14669)
!14667 = !DISubroutineType(types: !14668)
!14668 = !{!108, !14655}
!14669 = !{!14670}
!14670 = !DILocalVariable(name: "stats", arg: 1, scope: !14666, file: !2451, line: 1088, type: !14655)
!14671 = !DILocation(line: 0, scope: !14666)
!14672 = !DILocation(line: 1094, column: 12, scope: !14673)
!14673 = distinct !DILexicalBlock(scope: !14666, file: !2451, line: 1094, column: 6)
!14674 = !DILocation(line: 1120, column: 1, scope: !14666)
!14675 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14676, file: !14676, line: 20, type: !3435, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3416, retainedNodes: !437)
!14676 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14677 = !DILocation(line: 30, column: 2, scope: !14675)
!14678 = !DILocation(line: 31, column: 1, scope: !14675)
!14679 = distinct !DISubprogram(name: "idle", scope: !14676, file: !14676, line: 33, type: !5204, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3416, retainedNodes: !14680)
!14680 = !{!14681, !14682, !14683}
!14681 = !DILocalVariable(name: "unused1", arg: 1, scope: !14679, file: !14676, line: 33, type: !104)
!14682 = !DILocalVariable(name: "unused2", arg: 2, scope: !14679, file: !14676, line: 33, type: !104)
!14683 = !DILocalVariable(name: "unused3", arg: 3, scope: !14679, file: !14676, line: 33, type: !104)
!14684 = !DILocation(line: 0, scope: !14679)
!14685 = !DILocation(line: 41, column: 2, scope: !14679)
!14686 = !DILocation(line: 55, column: 2, scope: !14687, inlinedAt: !14691)
!14687 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4109, file: !4109, line: 42, type: !4110, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3416, retainedNodes: !14688)
!14688 = !{!14689, !14690}
!14689 = !DILocalVariable(name: "key", scope: !14687, file: !4109, line: 44, type: !32)
!14690 = !DILocalVariable(name: "tmp", scope: !14687, file: !4109, line: 53, type: !32)
!14691 = distinct !DILocation(line: 62, column: 10, scope: !14692)
!14692 = distinct !DILexicalBlock(scope: !14679, file: !14676, line: 41, column: 15)
!14693 = !{i64 2054606}
!14694 = !DILocation(line: 0, scope: !14687, inlinedAt: !14691)
!14695 = !DILocation(line: 86, column: 3, scope: !14692)
!14696 = distinct !{!14696, !14685, !14697}
!14697 = !DILocation(line: 105, column: 2, scope: !14679)
!14698 = distinct !DISubprogram(name: "k_cpu_idle", scope: !359, file: !359, line: 5627, type: !3435, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3416, retainedNodes: !437)
!14699 = !DILocation(line: 5629, column: 2, scope: !14698)
!14700 = !DILocation(line: 5630, column: 1, scope: !14698)
!14701 = !DISubprogram(name: "arch_cpu_idle", scope: !5202, file: !5202, line: 167, type: !3435, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!14702 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2683, file: !2683, line: 93, type: !14703, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !14705)
!14703 = !DISubroutineType(types: !14704)
!14704 = !{!220, !2578, !2578}
!14705 = !{!14706, !14707, !14708, !14709}
!14706 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14702, file: !2683, line: 93, type: !2578)
!14707 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14702, file: !2683, line: 94, type: !2578)
!14708 = !DILocalVariable(name: "b1", scope: !14702, file: !2683, line: 97, type: !220)
!14709 = !DILocalVariable(name: "b2", scope: !14702, file: !2683, line: 98, type: !220)
!14710 = !DILocation(line: 0, scope: !14702)
!14711 = !DILocation(line: 97, column: 30, scope: !14702)
!14712 = !DILocation(line: 98, column: 30, scope: !14702)
!14713 = !DILocation(line: 100, column: 9, scope: !14714)
!14714 = distinct !DILexicalBlock(scope: !14702, file: !2683, line: 100, column: 6)
!14715 = !DILocation(line: 100, column: 6, scope: !14702)
!14716 = !DILocation(line: 125, column: 1, scope: !14702)
!14717 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2683, file: !2683, line: 428, type: !14718, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !14720)
!14718 = !DISubroutineType(types: !14719)
!14719 = !{null, !2578}
!14720 = !{!14721}
!14721 = !DILocalVariable(name: "curr", arg: 1, scope: !14717, file: !2683, line: 428, type: !2578)
!14722 = !DILocation(line: 0, scope: !14717)
!14723 = !DILocation(line: 434, column: 6, scope: !14724)
!14724 = distinct !DILexicalBlock(scope: !14717, file: !2683, line: 434, column: 6)
!14725 = !DILocation(line: 434, column: 23, scope: !14724)
!14726 = !DILocation(line: 434, column: 6, scope: !14717)
!14727 = !DILocation(line: 435, column: 50, scope: !14728)
!14728 = distinct !DILexicalBlock(scope: !14724, file: !2683, line: 434, column: 29)
!14729 = !DILocation(line: 435, column: 48, scope: !14728)
!14730 = !DILocation(line: 435, column: 29, scope: !14728)
!14731 = !DILocation(line: 436, column: 24, scope: !14728)
!14732 = !DILocation(line: 436, column: 3, scope: !14728)
!14733 = !DILocation(line: 437, column: 2, scope: !14728)
!14734 = !DILocation(line: 438, column: 1, scope: !14717)
!14735 = distinct !DISubprogram(name: "slice_time", scope: !2683, file: !2683, line: 407, type: !14736, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !14738)
!14736 = !DISubroutineType(types: !14737)
!14737 = !{!108, !2578}
!14738 = !{!14739, !14740}
!14739 = !DILocalVariable(name: "curr", arg: 1, scope: !14735, file: !2683, line: 407, type: !2578)
!14740 = !DILocalVariable(name: "ret", scope: !14735, file: !2683, line: 409, type: !108)
!14741 = !DILocation(line: 0, scope: !14735)
!14742 = !DILocation(line: 409, column: 12, scope: !14735)
!14743 = !DILocation(line: 416, column: 2, scope: !14735)
!14744 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2683, file: !2683, line: 440, type: !14745, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !14747)
!14745 = !DISubroutineType(types: !14746)
!14746 = !{null, !220, !108}
!14747 = !{!14748, !14749, !14750, !14756}
!14748 = !DILocalVariable(name: "slice", arg: 1, scope: !14744, file: !2683, line: 440, type: !220)
!14749 = !DILocalVariable(name: "prio", arg: 2, scope: !14744, file: !2683, line: 440, type: !108)
!14750 = !DILocalVariable(name: "__i", scope: !14751, file: !2683, line: 442, type: !14752)
!14751 = distinct !DILexicalBlock(scope: !14744, file: !2683, line: 442, column: 2)
!14752 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !14753)
!14753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !14754)
!14754 = !{!14755}
!14755 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14753, file: !436, line: 33, baseType: !108, size: 32)
!14756 = !DILocalVariable(name: "__key", scope: !14751, file: !2683, line: 442, type: !14752)
!14757 = !DILocation(line: 0, scope: !14744)
!14758 = !DILocation(line: 0, scope: !14751)
!14759 = !DILocalVariable(name: "l", arg: 1, scope: !14760, file: !436, line: 136, type: !14763)
!14760 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !14761, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !14764)
!14761 = !DISubroutineType(types: !14762)
!14762 = !{!14752, !14763}
!14763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2672, size: 32)
!14764 = !{!14759, !14765}
!14765 = !DILocalVariable(name: "k", scope: !14760, file: !436, line: 139, type: !14752)
!14766 = !DILocation(line: 0, scope: !14760, inlinedAt: !14767)
!14767 = distinct !DILocation(line: 442, column: 2, scope: !14751)
!14768 = !DILocation(line: 55, column: 2, scope: !14769, inlinedAt: !14773)
!14769 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4109, file: !4109, line: 42, type: !4110, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !14770)
!14770 = !{!14771, !14772}
!14771 = !DILocalVariable(name: "key", scope: !14769, file: !4109, line: 44, type: !32)
!14772 = !DILocalVariable(name: "tmp", scope: !14769, file: !4109, line: 53, type: !32)
!14773 = distinct !DILocation(line: 145, column: 10, scope: !14760, inlinedAt: !14767)
!14774 = !{i64 2098577}
!14775 = !DILocation(line: 0, scope: !14769, inlinedAt: !14773)
!14776 = !DILocation(line: 443, column: 29, scope: !14777)
!14777 = distinct !DILexicalBlock(scope: !14778, file: !2683, line: 442, column: 26)
!14778 = distinct !DILexicalBlock(scope: !14751, file: !2683, line: 442, column: 2)
!14779 = !DILocation(line: 444, column: 17, scope: !14777)
!14780 = !DILocation(line: 445, column: 51, scope: !14781)
!14781 = distinct !DILexicalBlock(scope: !14777, file: !2683, line: 445, column: 7)
!14782 = !DILocation(line: 445, column: 7, scope: !14777)
!14783 = !DILocation(line: 0, scope: !14777)
!14784 = !DILocation(line: 451, column: 18, scope: !14777)
!14785 = !DILocation(line: 452, column: 3, scope: !14777)
!14786 = !DILocalVariable(name: "key", arg: 2, scope: !14787, file: !436, line: 190, type: !14752)
!14787 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !14788, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !14790)
!14788 = !DISubroutineType(types: !14789)
!14789 = !{null, !14763, !14752}
!14790 = !{!14791, !14786}
!14791 = !DILocalVariable(name: "l", arg: 1, scope: !14787, file: !436, line: 189, type: !14763)
!14792 = !DILocation(line: 0, scope: !14787, inlinedAt: !14793)
!14793 = distinct !DILocation(line: 442, column: 2, scope: !14778)
!14794 = !DILocalVariable(name: "key", arg: 1, scope: !14795, file: !4109, line: 84, type: !32)
!14795 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4109, file: !4109, line: 84, type: !4122, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !14796)
!14796 = !{!14794}
!14797 = !DILocation(line: 0, scope: !14795, inlinedAt: !14798)
!14798 = distinct !DILocation(line: 215, column: 2, scope: !14787, inlinedAt: !14793)
!14799 = !DILocation(line: 95, column: 2, scope: !14795, inlinedAt: !14798)
!14800 = !{i64 2099394}
!14801 = !DILocation(line: 454, column: 1, scope: !14744)
!14802 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3798, file: !3798, line: 389, type: !8329, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !14803)
!14803 = !{!14804}
!14804 = !DILocalVariable(name: "t", arg: 1, scope: !14802, file: !3798, line: 389, type: !113)
!14805 = !DILocation(line: 0, scope: !14802)
!14806 = !DILocalVariable(name: "t", arg: 1, scope: !14807, file: !3798, line: 102, type: !114)
!14807 = distinct !DISubprogram(name: "z_tmcvt", scope: !3798, file: !3798, line: 102, type: !3806, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !14808)
!14808 = !{!14806, !14809, !14810, !14811, !14812, !14813, !14814, !14815, !14816, !14817, !14818}
!14809 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14807, file: !3798, line: 102, type: !113)
!14810 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14807, file: !3798, line: 103, type: !113)
!14811 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14807, file: !3798, line: 103, type: !422)
!14812 = !DILocalVariable(name: "result32", arg: 5, scope: !14807, file: !3798, line: 104, type: !422)
!14813 = !DILocalVariable(name: "round_up", arg: 6, scope: !14807, file: !3798, line: 104, type: !422)
!14814 = !DILocalVariable(name: "round_off", arg: 7, scope: !14807, file: !3798, line: 105, type: !422)
!14815 = !DILocalVariable(name: "mul_ratio", scope: !14807, file: !3798, line: 107, type: !422)
!14816 = !DILocalVariable(name: "div_ratio", scope: !14807, file: !3798, line: 109, type: !422)
!14817 = !DILocalVariable(name: "off", scope: !14807, file: !3798, line: 116, type: !114)
!14818 = !DILocalVariable(name: "rdivisor", scope: !14819, file: !3798, line: 119, type: !113)
!14819 = distinct !DILexicalBlock(scope: !14820, file: !3798, line: 118, column: 18)
!14820 = distinct !DILexicalBlock(scope: !14807, file: !3798, line: 118, column: 6)
!14821 = !DILocation(line: 0, scope: !14807, inlinedAt: !14822)
!14822 = distinct !DILocation(line: 392, column: 9, scope: !14802)
!14823 = !DILocation(line: 143, column: 25, scope: !14824, inlinedAt: !14822)
!14824 = distinct !DILexicalBlock(scope: !14825, file: !3798, line: 142, column: 17)
!14825 = distinct !DILexicalBlock(scope: !14826, file: !3798, line: 142, column: 7)
!14826 = distinct !DILexicalBlock(scope: !14827, file: !3798, line: 141, column: 24)
!14827 = distinct !DILexicalBlock(scope: !14828, file: !3798, line: 141, column: 13)
!14828 = distinct !DILexicalBlock(scope: !14807, file: !3798, line: 134, column: 6)
!14829 = !DILocation(line: 392, column: 2, scope: !14802)
!14830 = distinct !DISubprogram(name: "z_time_slice", scope: !2683, file: !2683, line: 502, type: !9663, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !14831)
!14831 = !{!14832, !14833}
!14832 = !DILocalVariable(name: "ticks", arg: 1, scope: !14830, file: !2683, line: 502, type: !108)
!14833 = !DILocalVariable(name: "key", scope: !14830, file: !2683, line: 511, type: !14752)
!14834 = !DILocation(line: 0, scope: !14830)
!14835 = !DILocation(line: 0, scope: !14760, inlinedAt: !14836)
!14836 = distinct !DILocation(line: 511, column: 25, scope: !14830)
!14837 = !DILocation(line: 55, column: 2, scope: !14769, inlinedAt: !14838)
!14838 = distinct !DILocation(line: 145, column: 10, scope: !14760, inlinedAt: !14836)
!14839 = !DILocation(line: 0, scope: !14769, inlinedAt: !14838)
!14840 = !DILocation(line: 514, column: 6, scope: !14841)
!14841 = distinct !DILexicalBlock(scope: !14830, file: !2683, line: 514, column: 6)
!14842 = !DILocation(line: 514, column: 25, scope: !14841)
!14843 = !DILocation(line: 514, column: 22, scope: !14841)
!14844 = !DILocation(line: 514, column: 6, scope: !14830)
!14845 = !DILocation(line: 515, column: 3, scope: !14846)
!14846 = distinct !DILexicalBlock(scope: !14841, file: !2683, line: 514, column: 35)
!14847 = !DILocation(line: 0, scope: !14787, inlinedAt: !14848)
!14848 = distinct !DILocation(line: 516, column: 3, scope: !14846)
!14849 = !DILocation(line: 0, scope: !14795, inlinedAt: !14850)
!14850 = distinct !DILocation(line: 215, column: 2, scope: !14787, inlinedAt: !14848)
!14851 = !DILocation(line: 95, column: 2, scope: !14795, inlinedAt: !14850)
!14852 = !DILocation(line: 517, column: 3, scope: !14846)
!14853 = !DILocation(line: 519, column: 18, scope: !14830)
!14854 = !DILocation(line: 522, column: 6, scope: !14855)
!14855 = distinct !DILexicalBlock(scope: !14830, file: !2683, line: 522, column: 6)
!14856 = !DILocation(line: 522, column: 27, scope: !14855)
!14857 = !DILocation(line: 522, column: 30, scope: !14855)
!14858 = !DILocation(line: 522, column: 6, scope: !14830)
!14859 = !DILocation(line: 523, column: 30, scope: !14860)
!14860 = distinct !DILexicalBlock(scope: !14861, file: !2683, line: 523, column: 7)
!14861 = distinct !DILexicalBlock(scope: !14855, file: !2683, line: 522, column: 51)
!14862 = !DILocation(line: 523, column: 13, scope: !14860)
!14863 = !DILocation(line: 523, column: 7, scope: !14861)
!14864 = !DILocation(line: 530, column: 10, scope: !14865)
!14865 = distinct !DILexicalBlock(scope: !14860, file: !2683, line: 523, column: 43)
!14866 = !DILocation(line: 531, column: 3, scope: !14865)
!14867 = !DILocation(line: 532, column: 30, scope: !14868)
!14868 = distinct !DILexicalBlock(scope: !14860, file: !2683, line: 531, column: 10)
!14869 = !DILocation(line: 535, column: 29, scope: !14870)
!14870 = distinct !DILexicalBlock(scope: !14855, file: !2683, line: 534, column: 9)
!14871 = !DILocation(line: 0, scope: !14787, inlinedAt: !14872)
!14872 = distinct !DILocation(line: 537, column: 2, scope: !14830)
!14873 = !DILocation(line: 0, scope: !14795, inlinedAt: !14874)
!14874 = distinct !DILocation(line: 215, column: 2, scope: !14787, inlinedAt: !14872)
!14875 = !DILocation(line: 95, column: 2, scope: !14795, inlinedAt: !14874)
!14876 = !DILocation(line: 538, column: 1, scope: !14830)
!14877 = distinct !DISubprogram(name: "sliceable", scope: !2683, file: !2683, line: 468, type: !14878, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !14880)
!14878 = !DISubroutineType(types: !14879)
!14879 = !{!422, !2578}
!14880 = !{!14881, !14882}
!14881 = !DILocalVariable(name: "thread", arg: 1, scope: !14877, file: !2683, line: 468, type: !2578)
!14882 = !DILocalVariable(name: "ret", scope: !14877, file: !2683, line: 470, type: !422)
!14883 = !DILocation(line: 0, scope: !14877)
!14884 = !DILocation(line: 470, column: 13, scope: !14877)
!14885 = !DILocation(line: 471, column: 3, scope: !14877)
!14886 = !DILocation(line: 471, column: 7, scope: !14877)
!14887 = !DILocation(line: 472, column: 3, scope: !14877)
!14888 = !DILocation(line: 472, column: 37, scope: !14877)
!14889 = !DILocation(line: 472, column: 24, scope: !14877)
!14890 = !DILocation(line: 472, column: 43, scope: !14877)
!14891 = !DILocation(line: 472, column: 7, scope: !14877)
!14892 = !DILocation(line: 473, column: 3, scope: !14877)
!14893 = !DILocation(line: 473, column: 7, scope: !14877)
!14894 = !DILocation(line: 473, column: 6, scope: !14877)
!14895 = !DILocation(line: 479, column: 2, scope: !14877)
!14896 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2683, file: !2683, line: 482, type: !14897, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !14899)
!14897 = !DISubroutineType(types: !14898)
!14898 = !{!14752, !14752}
!14899 = !{!14900, !14901}
!14900 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14896, file: !2683, line: 482, type: !14752)
!14901 = !DILocalVariable(name: "curr", scope: !14896, file: !2683, line: 484, type: !2578)
!14902 = !DILocation(line: 0, scope: !14896)
!14903 = !DILocation(line: 484, column: 26, scope: !14896)
!14904 = !DILocation(line: 493, column: 7, scope: !14905)
!14905 = distinct !DILexicalBlock(scope: !14896, file: !2683, line: 493, column: 6)
!14906 = !DILocation(line: 493, column: 6, scope: !14896)
!14907 = !DILocation(line: 494, column: 3, scope: !14908)
!14908 = distinct !DILexicalBlock(scope: !14905, file: !2683, line: 493, column: 49)
!14909 = !DILocation(line: 495, column: 2, scope: !14908)
!14910 = !DILocation(line: 496, column: 2, scope: !14896)
!14911 = !DILocation(line: 499, column: 1, scope: !14896)
!14912 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !14037, file: !14037, line: 106, type: !14878, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !14913)
!14913 = !{!14914, !14915}
!14914 = !DILocalVariable(name: "thread", arg: 1, scope: !14912, file: !14037, line: 106, type: !2578)
!14915 = !DILocalVariable(name: "state", scope: !14912, file: !14037, line: 108, type: !164)
!14916 = !DILocation(line: 0, scope: !14912)
!14917 = !DILocation(line: 108, column: 31, scope: !14912)
!14918 = !DILocation(line: 110, column: 16, scope: !14912)
!14919 = !DILocation(line: 111, column: 41, scope: !14912)
!14920 = !DILocation(line: 110, column: 2, scope: !14912)
!14921 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2683, file: !2683, line: 393, type: !14718, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !14922)
!14922 = !{!14923}
!14923 = !DILocalVariable(name: "thread", arg: 1, scope: !14921, file: !2683, line: 393, type: !2578)
!14924 = !DILocation(line: 0, scope: !14921)
!14925 = !DILocation(line: 395, column: 6, scope: !14926)
!14926 = distinct !DILexicalBlock(scope: !14921, file: !2683, line: 395, column: 6)
!14927 = !DILocation(line: 395, column: 6, scope: !14921)
!14928 = !DILocalVariable(name: "thread", arg: 1, scope: !14929, file: !2683, line: 264, type: !2578)
!14929 = distinct !DISubprogram(name: "dequeue_thread", scope: !2683, file: !2683, line: 264, type: !14718, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !14930)
!14930 = !{!14928}
!14931 = !DILocation(line: 0, scope: !14929, inlinedAt: !14932)
!14932 = distinct !DILocation(line: 396, column: 3, scope: !14933)
!14933 = distinct !DILexicalBlock(scope: !14926, file: !2683, line: 395, column: 34)
!14934 = !DILocation(line: 266, column: 15, scope: !14929, inlinedAt: !14932)
!14935 = !DILocation(line: 266, column: 28, scope: !14929, inlinedAt: !14932)
!14936 = !DILocalVariable(name: "thread", arg: 1, scope: !14937, file: !2683, line: 232, type: !2578)
!14937 = distinct !DISubprogram(name: "runq_remove", scope: !2683, file: !2683, line: 232, type: !14718, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !14938)
!14938 = !{!14936}
!14939 = !DILocation(line: 0, scope: !14937, inlinedAt: !14940)
!14940 = distinct !DILocation(line: 268, column: 3, scope: !14941, inlinedAt: !14932)
!14941 = distinct !DILexicalBlock(scope: !14942, file: !2683, line: 267, column: 35)
!14942 = distinct !DILexicalBlock(scope: !14929, file: !2683, line: 267, column: 6)
!14943 = !DILocation(line: 234, column: 2, scope: !14937, inlinedAt: !14940)
!14944 = !DILocation(line: 397, column: 2, scope: !14933)
!14945 = !DILocalVariable(name: "thread", arg: 1, scope: !14946, file: !2683, line: 250, type: !2578)
!14946 = distinct !DISubprogram(name: "queue_thread", scope: !2683, file: !2683, line: 250, type: !14718, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !14947)
!14947 = !{!14945}
!14948 = !DILocation(line: 0, scope: !14946, inlinedAt: !14949)
!14949 = distinct !DILocation(line: 398, column: 2, scope: !14921)
!14950 = !DILocation(line: 252, column: 15, scope: !14946, inlinedAt: !14949)
!14951 = !DILocation(line: 252, column: 28, scope: !14946, inlinedAt: !14949)
!14952 = !DILocalVariable(name: "thread", arg: 1, scope: !14953, file: !2683, line: 227, type: !2578)
!14953 = distinct !DISubprogram(name: "runq_add", scope: !2683, file: !2683, line: 227, type: !14718, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !14954)
!14954 = !{!14952}
!14955 = !DILocation(line: 0, scope: !14953, inlinedAt: !14956)
!14956 = distinct !DILocation(line: 254, column: 3, scope: !14957, inlinedAt: !14949)
!14957 = distinct !DILexicalBlock(scope: !14958, file: !2683, line: 253, column: 35)
!14958 = distinct !DILexicalBlock(scope: !14946, file: !2683, line: 253, column: 6)
!14959 = !DILocalVariable(name: "pq", arg: 1, scope: !14960, file: !2683, line: 181, type: !14963)
!14960 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2683, file: !2683, line: 181, type: !14961, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !14964)
!14961 = !DISubroutineType(types: !14962)
!14962 = !{null, !14963, !2578}
!14963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 32)
!14964 = !{!14959, !14965, !14966}
!14965 = !DILocalVariable(name: "thread", arg: 2, scope: !14960, file: !2683, line: 182, type: !2578)
!14966 = !DILocalVariable(name: "t", scope: !14960, file: !2683, line: 184, type: !2578)
!14967 = !DILocation(line: 0, scope: !14960, inlinedAt: !14968)
!14968 = distinct !DILocation(line: 229, column: 2, scope: !14953, inlinedAt: !14956)
!14969 = !DILocation(line: 188, column: 2, scope: !14970, inlinedAt: !14968)
!14970 = distinct !DILexicalBlock(scope: !14960, file: !2683, line: 188, column: 2)
!14971 = !DILocation(line: 188, column: 2, scope: !14972, inlinedAt: !14968)
!14972 = distinct !DILexicalBlock(scope: !14970, file: !2683, line: 188, column: 2)
!14973 = !DILocation(line: 0, scope: !14970, inlinedAt: !14968)
!14974 = !DILocation(line: 189, column: 7, scope: !14975, inlinedAt: !14968)
!14975 = distinct !DILexicalBlock(scope: !14976, file: !2683, line: 189, column: 7)
!14976 = distinct !DILexicalBlock(scope: !14972, file: !2683, line: 188, column: 56)
!14977 = !DILocation(line: 189, column: 35, scope: !14975, inlinedAt: !14968)
!14978 = !DILocation(line: 189, column: 7, scope: !14976, inlinedAt: !14968)
!14979 = !DILocation(line: 191, column: 21, scope: !14980, inlinedAt: !14968)
!14980 = distinct !DILexicalBlock(scope: !14975, file: !2683, line: 189, column: 40)
!14981 = !DILocation(line: 190, column: 4, scope: !14980, inlinedAt: !14968)
!14982 = !DILocation(line: 192, column: 4, scope: !14980, inlinedAt: !14968)
!14983 = distinct !{!14983, !14969, !14984}
!14984 = !DILocation(line: 194, column: 2, scope: !14970, inlinedAt: !14968)
!14985 = !DILocation(line: 196, column: 37, scope: !14960, inlinedAt: !14968)
!14986 = !DILocation(line: 196, column: 2, scope: !14960, inlinedAt: !14968)
!14987 = !DILocation(line: 197, column: 1, scope: !14960, inlinedAt: !14968)
!14988 = !DILocation(line: 399, column: 25, scope: !14921)
!14989 = !DILocation(line: 399, column: 22, scope: !14921)
!14990 = !DILocation(line: 399, column: 2, scope: !14921)
!14991 = !DILocation(line: 400, column: 1, scope: !14921)
!14992 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !14037, file: !14037, line: 136, type: !14878, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !14993)
!14993 = !{!14994}
!14994 = !DILocalVariable(name: "thread", arg: 1, scope: !14992, file: !14037, line: 136, type: !2578)
!14995 = !DILocation(line: 0, scope: !14992)
!14996 = !DILocation(line: 138, column: 9, scope: !14992)
!14997 = !DILocation(line: 138, column: 2, scope: !14992)
!14998 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2683, file: !2683, line: 1137, type: !14961, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !14999)
!14999 = !{!15000, !15001}
!15000 = !DILocalVariable(name: "pq", arg: 1, scope: !14998, file: !2683, line: 1137, type: !14963)
!15001 = !DILocalVariable(name: "thread", arg: 2, scope: !14998, file: !2683, line: 1137, type: !2578)
!15002 = !DILocation(line: 0, scope: !14998)
!15003 = !DILocation(line: 1141, column: 33, scope: !14998)
!15004 = !DILocation(line: 1141, column: 2, scope: !14998)
!15005 = !DILocation(line: 1142, column: 1, scope: !14998)
!15006 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !367, file: !367, line: 294, type: !15007, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15009)
!15007 = !DISubroutineType(types: !15008)
!15008 = !{!2679, !14963}
!15009 = !{!15010}
!15010 = !DILocalVariable(name: "list", arg: 1, scope: !15006, file: !367, line: 294, type: !14963)
!15011 = !DILocation(line: 0, scope: !15006)
!15012 = !DILocation(line: 296, column: 9, scope: !15006)
!15013 = !DILocation(line: 296, column: 49, scope: !15006)
!15014 = !DILocation(line: 296, column: 2, scope: !15006)
!15015 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !367, file: !367, line: 443, type: !15016, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15018)
!15016 = !DISubroutineType(types: !15017)
!15017 = !{null, !2679, !2679}
!15018 = !{!15019, !15020, !15021}
!15019 = !DILocalVariable(name: "successor", arg: 1, scope: !15015, file: !367, line: 443, type: !2679)
!15020 = !DILocalVariable(name: "node", arg: 2, scope: !15015, file: !367, line: 443, type: !2679)
!15021 = !DILocalVariable(name: "prev", scope: !15015, file: !367, line: 445, type: !15022)
!15022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2679)
!15023 = !DILocation(line: 0, scope: !15015)
!15024 = !DILocation(line: 445, column: 39, scope: !15015)
!15025 = !DILocation(line: 447, column: 8, scope: !15015)
!15026 = !DILocation(line: 447, column: 13, scope: !15015)
!15027 = !DILocation(line: 448, column: 8, scope: !15015)
!15028 = !DILocation(line: 448, column: 13, scope: !15015)
!15029 = !DILocation(line: 449, column: 8, scope: !15015)
!15030 = !DILocation(line: 449, column: 13, scope: !15015)
!15031 = !DILocation(line: 450, column: 18, scope: !15015)
!15032 = !DILocation(line: 451, column: 1, scope: !15015)
!15033 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !367, file: !367, line: 341, type: !15034, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15036)
!15034 = !DISubroutineType(types: !15035)
!15035 = !{!2679, !14963, !2679}
!15036 = !{!15037, !15038}
!15037 = !DILocalVariable(name: "list", arg: 1, scope: !15033, file: !367, line: 341, type: !14963)
!15038 = !DILocalVariable(name: "node", arg: 2, scope: !15033, file: !367, line: 342, type: !2679)
!15039 = !DILocation(line: 0, scope: !15033)
!15040 = !DILocation(line: 344, column: 15, scope: !15033)
!15041 = !DILocation(line: 344, column: 9, scope: !15033)
!15042 = !DILocation(line: 344, column: 26, scope: !15033)
!15043 = !DILocation(line: 344, column: 2, scope: !15033)
!15044 = distinct !DISubprogram(name: "sys_dlist_append", scope: !367, file: !367, line: 404, type: !15045, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15047)
!15045 = !DISubroutineType(types: !15046)
!15046 = !{null, !14963, !2679}
!15047 = !{!15048, !15049, !15050}
!15048 = !DILocalVariable(name: "list", arg: 1, scope: !15044, file: !367, line: 404, type: !14963)
!15049 = !DILocalVariable(name: "node", arg: 2, scope: !15044, file: !367, line: 404, type: !2679)
!15050 = !DILocalVariable(name: "tail", scope: !15044, file: !367, line: 406, type: !15022)
!15051 = !DILocation(line: 0, scope: !15044)
!15052 = !DILocation(line: 406, column: 34, scope: !15044)
!15053 = !DILocation(line: 408, column: 8, scope: !15044)
!15054 = !DILocation(line: 408, column: 13, scope: !15044)
!15055 = !DILocation(line: 409, column: 8, scope: !15044)
!15056 = !DILocation(line: 409, column: 13, scope: !15044)
!15057 = !DILocation(line: 411, column: 8, scope: !15044)
!15058 = !DILocation(line: 411, column: 13, scope: !15044)
!15059 = !DILocation(line: 412, column: 13, scope: !15044)
!15060 = !DILocation(line: 413, column: 1, scope: !15044)
!15061 = distinct !DISubprogram(name: "update_cache", scope: !2683, file: !2683, line: 559, type: !9663, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15062)
!15062 = !{!15063, !15064}
!15063 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15061, file: !2683, line: 559, type: !108)
!15064 = !DILocalVariable(name: "thread", scope: !15061, file: !2683, line: 562, type: !2578)
!15065 = !DILocation(line: 0, scope: !15061)
!15066 = !DILocation(line: 239, column: 9, scope: !15067, inlinedAt: !15070)
!15067 = distinct !DISubprogram(name: "runq_best", scope: !2683, file: !2683, line: 237, type: !15068, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !437)
!15068 = !DISubroutineType(types: !15069)
!15069 = !{!2578}
!15070 = distinct !DILocation(line: 314, column: 28, scope: !15071, inlinedAt: !15074)
!15071 = distinct !DISubprogram(name: "next_up", scope: !2683, file: !2683, line: 312, type: !15068, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15072)
!15072 = !{!15073}
!15073 = !DILocalVariable(name: "thread", scope: !15071, file: !2683, line: 314, type: !2578)
!15074 = distinct !DILocation(line: 562, column: 28, scope: !15061)
!15075 = !DILocation(line: 0, scope: !15071, inlinedAt: !15074)
!15076 = !DILocation(line: 340, column: 17, scope: !15071, inlinedAt: !15074)
!15077 = !DILocation(line: 340, column: 9, scope: !15071, inlinedAt: !15074)
!15078 = !DILocalVariable(name: "thread", arg: 1, scope: !15079, file: !2683, line: 127, type: !2578)
!15079 = distinct !DISubprogram(name: "should_preempt", scope: !2683, file: !2683, line: 127, type: !15080, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15082)
!15080 = !DISubroutineType(types: !15081)
!15081 = !{!422, !2578, !108}
!15082 = !{!15078, !15083}
!15083 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15079, file: !2683, line: 128, type: !108)
!15084 = !DILocation(line: 0, scope: !15079, inlinedAt: !15085)
!15085 = distinct !DILocation(line: 564, column: 6, scope: !15086)
!15086 = distinct !DILexicalBlock(scope: !15061, file: !2683, line: 564, column: 6)
!15087 = !DILocation(line: 133, column: 17, scope: !15088, inlinedAt: !15085)
!15088 = distinct !DILexicalBlock(scope: !15079, file: !2683, line: 133, column: 6)
!15089 = !DILocation(line: 0, scope: !15086)
!15090 = !DILocation(line: 133, column: 6, scope: !15079, inlinedAt: !15085)
!15091 = !DILocation(line: 140, column: 6, scope: !15092, inlinedAt: !15085)
!15092 = distinct !DILexicalBlock(scope: !15079, file: !2683, line: 140, column: 6)
!15093 = !DILocation(line: 140, column: 6, scope: !15079, inlinedAt: !15085)
!15094 = !DILocation(line: 150, column: 9, scope: !15095, inlinedAt: !15085)
!15095 = distinct !DILexicalBlock(scope: !15079, file: !2683, line: 149, column: 6)
!15096 = !DILocation(line: 149, column: 6, scope: !15079, inlinedAt: !15085)
!15097 = !DILocation(line: 157, column: 6, scope: !15098, inlinedAt: !15085)
!15098 = distinct !DILexicalBlock(scope: !15079, file: !2683, line: 157, column: 6)
!15099 = !DILocation(line: 564, column: 6, scope: !15061)
!15100 = !DILocation(line: 566, column: 14, scope: !15101)
!15101 = distinct !DILexicalBlock(scope: !15102, file: !2683, line: 566, column: 7)
!15102 = distinct !DILexicalBlock(scope: !15086, file: !2683, line: 564, column: 42)
!15103 = !DILocation(line: 566, column: 7, scope: !15102)
!15104 = !DILocation(line: 567, column: 4, scope: !15105)
!15105 = distinct !DILexicalBlock(scope: !15101, file: !2683, line: 566, column: 27)
!15106 = !DILocation(line: 568, column: 3, scope: !15105)
!15107 = !DILocation(line: 585, column: 1, scope: !15061)
!15108 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2683, file: !2683, line: 1144, type: !15109, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15111)
!15109 = !DISubroutineType(types: !15110)
!15110 = !{!2578, !14963}
!15111 = !{!15112, !15113, !15114}
!15112 = !DILocalVariable(name: "pq", arg: 1, scope: !15108, file: !2683, line: 1144, type: !14963)
!15113 = !DILocalVariable(name: "thread", scope: !15108, file: !2683, line: 1146, type: !2578)
!15114 = !DILocalVariable(name: "n", scope: !15108, file: !2683, line: 1147, type: !2679)
!15115 = !DILocation(line: 0, scope: !15108)
!15116 = !DILocation(line: 1147, column: 19, scope: !15108)
!15117 = !DILocation(line: 1152, column: 2, scope: !15108)
!15118 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !14037, file: !14037, line: 115, type: !14878, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15119)
!15119 = !{!15120}
!15120 = !DILocalVariable(name: "thread", arg: 1, scope: !15118, file: !14037, line: 115, type: !2578)
!15121 = !DILocation(line: 0, scope: !15118)
!15122 = !DILocation(line: 117, column: 46, scope: !15118)
!15123 = !DILocation(line: 117, column: 10, scope: !15118)
!15124 = !DILocation(line: 117, column: 9, scope: !15118)
!15125 = !DILocation(line: 117, column: 2, scope: !15118)
!15126 = distinct !DISubprogram(name: "is_preempt", scope: !2683, file: !2683, line: 62, type: !14736, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15127)
!15127 = !{!15128}
!15128 = !DILocalVariable(name: "thread", arg: 1, scope: !15126, file: !2683, line: 62, type: !2578)
!15129 = !DILocation(line: 0, scope: !15126)
!15130 = !DILocation(line: 65, column: 22, scope: !15126)
!15131 = !DILocation(line: 65, column: 30, scope: !15126)
!15132 = !DILocation(line: 65, column: 2, scope: !15126)
!15133 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14431, file: !14431, line: 35, type: !15134, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15138)
!15134 = !DISubroutineType(types: !15135)
!15135 = !{!422, !15136}
!15136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15137, size: 32)
!15137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2629)
!15138 = !{!15139}
!15139 = !DILocalVariable(name: "to", arg: 1, scope: !15133, file: !14431, line: 35, type: !15136)
!15140 = !DILocation(line: 0, scope: !15133)
!15141 = !DILocation(line: 37, column: 35, scope: !15133)
!15142 = !DILocation(line: 37, column: 10, scope: !15133)
!15143 = !DILocation(line: 37, column: 9, scope: !15133)
!15144 = !DILocation(line: 37, column: 2, scope: !15133)
!15145 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !367, file: !367, line: 225, type: !15146, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15150)
!15146 = !DISubroutineType(types: !15147)
!15147 = !{!422, !15148}
!15148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15149, size: 32)
!15149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2588)
!15150 = !{!15151}
!15151 = !DILocalVariable(name: "node", arg: 1, scope: !15145, file: !367, line: 225, type: !15148)
!15152 = !DILocation(line: 0, scope: !15145)
!15153 = !DILocation(line: 227, column: 15, scope: !15145)
!15154 = !DILocation(line: 227, column: 20, scope: !15145)
!15155 = !DILocation(line: 227, column: 2, scope: !15145)
!15156 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !367, file: !367, line: 325, type: !15034, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15157)
!15157 = !{!15158, !15159}
!15158 = !DILocalVariable(name: "list", arg: 1, scope: !15156, file: !367, line: 325, type: !14963)
!15159 = !DILocalVariable(name: "node", arg: 2, scope: !15156, file: !367, line: 326, type: !2679)
!15160 = !DILocation(line: 0, scope: !15156)
!15161 = !DILocation(line: 328, column: 24, scope: !15156)
!15162 = !DILocation(line: 328, column: 15, scope: !15156)
!15163 = !DILocation(line: 328, column: 9, scope: !15156)
!15164 = !DILocation(line: 328, column: 45, scope: !15156)
!15165 = !DILocation(line: 328, column: 2, scope: !15156)
!15166 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !367, file: !367, line: 266, type: !15167, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15169)
!15167 = !DISubroutineType(types: !15168)
!15168 = !{!422, !14963}
!15169 = !{!15170}
!15170 = !DILocalVariable(name: "list", arg: 1, scope: !15166, file: !367, line: 266, type: !14963)
!15171 = !DILocation(line: 0, scope: !15166)
!15172 = !DILocation(line: 268, column: 15, scope: !15166)
!15173 = !DILocation(line: 268, column: 20, scope: !15166)
!15174 = !DILocation(line: 268, column: 2, scope: !15166)
!15175 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !367, file: !367, line: 496, type: !15176, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15178)
!15176 = !DISubroutineType(types: !15177)
!15177 = !{null, !2679}
!15178 = !{!15179, !15180, !15181}
!15179 = !DILocalVariable(name: "node", arg: 1, scope: !15175, file: !367, line: 496, type: !2679)
!15180 = !DILocalVariable(name: "prev", scope: !15175, file: !367, line: 498, type: !15022)
!15181 = !DILocalVariable(name: "next", scope: !15175, file: !367, line: 499, type: !15022)
!15182 = !DILocation(line: 0, scope: !15175)
!15183 = !DILocation(line: 498, column: 34, scope: !15175)
!15184 = !DILocation(line: 499, column: 34, scope: !15175)
!15185 = !DILocation(line: 501, column: 8, scope: !15175)
!15186 = !DILocation(line: 501, column: 13, scope: !15175)
!15187 = !DILocation(line: 502, column: 8, scope: !15175)
!15188 = !DILocation(line: 502, column: 13, scope: !15175)
!15189 = !DILocation(line: 503, column: 2, scope: !15175)
!15190 = !DILocation(line: 504, column: 1, scope: !15175)
!15191 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !15176, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15192)
!15192 = !{!15193}
!15193 = !DILocalVariable(name: "node", arg: 1, scope: !15191, file: !367, line: 211, type: !2679)
!15194 = !DILocation(line: 0, scope: !15191)
!15195 = !DILocation(line: 213, column: 8, scope: !15191)
!15196 = !DILocation(line: 213, column: 13, scope: !15191)
!15197 = !DILocation(line: 214, column: 8, scope: !15191)
!15198 = !DILocation(line: 214, column: 13, scope: !15191)
!15199 = !DILocation(line: 215, column: 1, scope: !15191)
!15200 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !14037, file: !14037, line: 131, type: !15201, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15203)
!15201 = !DISubroutineType(types: !15202)
!15202 = !{!422, !2578, !113}
!15203 = !{!15204, !15205}
!15204 = !DILocalVariable(name: "thread", arg: 1, scope: !15200, file: !14037, line: 131, type: !2578)
!15205 = !DILocalVariable(name: "state", arg: 2, scope: !15200, file: !14037, line: 131, type: !113)
!15206 = !DILocation(line: 0, scope: !15200)
!15207 = !DILocation(line: 133, column: 23, scope: !15200)
!15208 = !DILocation(line: 133, column: 45, scope: !15200)
!15209 = !DILocation(line: 133, column: 2, scope: !15200)
!15210 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14037, file: !14037, line: 211, type: !15211, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15213)
!15211 = !DISubroutineType(types: !15212)
!15212 = !{!422, !108, !108}
!15213 = !{!15214, !15215}
!15214 = !DILocalVariable(name: "prio", arg: 1, scope: !15210, file: !14037, line: 211, type: !108)
!15215 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15210, file: !14037, line: 211, type: !108)
!15216 = !DILocation(line: 0, scope: !15210)
!15217 = !DILocation(line: 213, column: 9, scope: !15210)
!15218 = !DILocation(line: 213, column: 2, scope: !15210)
!15219 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !14037, file: !14037, line: 83, type: !14878, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15220)
!15220 = !{!15221}
!15221 = !DILocalVariable(name: "thread", arg: 1, scope: !15219, file: !14037, line: 83, type: !2578)
!15222 = !DILocation(line: 0, scope: !15219)
!15223 = !DILocation(line: 89, column: 16, scope: !15219)
!15224 = !DILocation(line: 89, column: 2, scope: !15219)
!15225 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14037, file: !14037, line: 206, type: !15211, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15226)
!15226 = !{!15227, !15228}
!15227 = !DILocalVariable(name: "prio1", arg: 1, scope: !15225, file: !14037, line: 206, type: !108)
!15228 = !DILocalVariable(name: "prio2", arg: 2, scope: !15225, file: !14037, line: 206, type: !108)
!15229 = !DILocation(line: 0, scope: !15225)
!15230 = !DILocation(line: 208, column: 15, scope: !15225)
!15231 = !DILocation(line: 208, column: 2, scope: !15225)
!15232 = distinct !DISubprogram(name: "z_ready_thread", scope: !2683, file: !2683, line: 635, type: !14718, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15233)
!15233 = !{!15234, !15235, !15237}
!15234 = !DILocalVariable(name: "thread", arg: 1, scope: !15232, file: !2683, line: 635, type: !2578)
!15235 = !DILocalVariable(name: "__i", scope: !15236, file: !2683, line: 637, type: !14752)
!15236 = distinct !DILexicalBlock(scope: !15232, file: !2683, line: 637, column: 2)
!15237 = !DILocalVariable(name: "__key", scope: !15236, file: !2683, line: 637, type: !14752)
!15238 = !DILocation(line: 0, scope: !15232)
!15239 = !DILocation(line: 0, scope: !15236)
!15240 = !DILocation(line: 0, scope: !14760, inlinedAt: !15241)
!15241 = distinct !DILocation(line: 637, column: 2, scope: !15236)
!15242 = !DILocation(line: 55, column: 2, scope: !14769, inlinedAt: !15243)
!15243 = distinct !DILocation(line: 145, column: 10, scope: !14760, inlinedAt: !15241)
!15244 = !DILocation(line: 0, scope: !14769, inlinedAt: !15243)
!15245 = !DILocation(line: 639, column: 4, scope: !15246)
!15246 = distinct !DILexicalBlock(scope: !15247, file: !2683, line: 638, column: 41)
!15247 = distinct !DILexicalBlock(scope: !15248, file: !2683, line: 638, column: 7)
!15248 = distinct !DILexicalBlock(scope: !15249, file: !2683, line: 637, column: 26)
!15249 = distinct !DILexicalBlock(scope: !15236, file: !2683, line: 637, column: 2)
!15250 = !DILocation(line: 0, scope: !14787, inlinedAt: !15251)
!15251 = distinct !DILocation(line: 637, column: 2, scope: !15249)
!15252 = !DILocation(line: 0, scope: !14795, inlinedAt: !15253)
!15253 = distinct !DILocation(line: 215, column: 2, scope: !14787, inlinedAt: !15251)
!15254 = !DILocation(line: 95, column: 2, scope: !14795, inlinedAt: !15253)
!15255 = !DILocation(line: 642, column: 1, scope: !15232)
!15256 = distinct !DISubprogram(name: "ready_thread", scope: !2683, file: !2683, line: 617, type: !14718, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15257)
!15257 = !{!15258}
!15258 = !DILocalVariable(name: "thread", arg: 1, scope: !15256, file: !2683, line: 617, type: !2578)
!15259 = !DILocation(line: 0, scope: !15256)
!15260 = !DILocation(line: 626, column: 7, scope: !15261)
!15261 = distinct !DILexicalBlock(scope: !15256, file: !2683, line: 626, column: 6)
!15262 = !DILocation(line: 626, column: 34, scope: !15261)
!15263 = !DILocation(line: 626, column: 37, scope: !15261)
!15264 = !DILocation(line: 626, column: 6, scope: !15256)
!15265 = !DILocation(line: 0, scope: !14946, inlinedAt: !15266)
!15266 = distinct !DILocation(line: 629, column: 3, scope: !15267)
!15267 = distinct !DILexicalBlock(scope: !15261, file: !2683, line: 626, column: 64)
!15268 = !DILocation(line: 252, column: 15, scope: !14946, inlinedAt: !15266)
!15269 = !DILocation(line: 252, column: 28, scope: !14946, inlinedAt: !15266)
!15270 = !DILocation(line: 0, scope: !14953, inlinedAt: !15271)
!15271 = distinct !DILocation(line: 254, column: 3, scope: !14957, inlinedAt: !15266)
!15272 = !DILocation(line: 0, scope: !14960, inlinedAt: !15273)
!15273 = distinct !DILocation(line: 229, column: 2, scope: !14953, inlinedAt: !15271)
!15274 = !DILocation(line: 188, column: 2, scope: !14970, inlinedAt: !15273)
!15275 = !DILocation(line: 188, column: 2, scope: !14972, inlinedAt: !15273)
!15276 = !DILocation(line: 0, scope: !14970, inlinedAt: !15273)
!15277 = !DILocation(line: 189, column: 7, scope: !14975, inlinedAt: !15273)
!15278 = !DILocation(line: 189, column: 35, scope: !14975, inlinedAt: !15273)
!15279 = !DILocation(line: 189, column: 7, scope: !14976, inlinedAt: !15273)
!15280 = !DILocation(line: 191, column: 21, scope: !14980, inlinedAt: !15273)
!15281 = !DILocation(line: 190, column: 4, scope: !14980, inlinedAt: !15273)
!15282 = !DILocation(line: 192, column: 4, scope: !14980, inlinedAt: !15273)
!15283 = distinct !{!15283, !15274, !15284}
!15284 = !DILocation(line: 194, column: 2, scope: !14970, inlinedAt: !15273)
!15285 = !DILocation(line: 196, column: 37, scope: !14960, inlinedAt: !15273)
!15286 = !DILocation(line: 196, column: 2, scope: !14960, inlinedAt: !15273)
!15287 = !DILocation(line: 197, column: 1, scope: !14960, inlinedAt: !15273)
!15288 = !DILocation(line: 630, column: 3, scope: !15267)
!15289 = !DILocation(line: 632, column: 2, scope: !15267)
!15290 = !DILocation(line: 633, column: 1, scope: !15256)
!15291 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !14037, file: !14037, line: 120, type: !14878, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15292)
!15292 = !{!15293}
!15293 = !DILocalVariable(name: "thread", arg: 1, scope: !15291, file: !14037, line: 120, type: !2578)
!15294 = !DILocation(line: 0, scope: !15291)
!15295 = !DILocation(line: 122, column: 12, scope: !15291)
!15296 = !DILocation(line: 122, column: 62, scope: !15291)
!15297 = !DILocation(line: 123, column: 4, scope: !15291)
!15298 = !DILocation(line: 122, column: 2, scope: !15291)
!15299 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2683, file: !2683, line: 644, type: !14718, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15300)
!15300 = !{!15301, !15302, !15304}
!15301 = !DILocalVariable(name: "thread", arg: 1, scope: !15299, file: !2683, line: 644, type: !2578)
!15302 = !DILocalVariable(name: "__i", scope: !15303, file: !2683, line: 646, type: !14752)
!15303 = distinct !DILexicalBlock(scope: !15299, file: !2683, line: 646, column: 2)
!15304 = !DILocalVariable(name: "__key", scope: !15303, file: !2683, line: 646, type: !14752)
!15305 = !DILocation(line: 0, scope: !15299)
!15306 = !DILocation(line: 0, scope: !15303)
!15307 = !DILocation(line: 0, scope: !14760, inlinedAt: !15308)
!15308 = distinct !DILocation(line: 646, column: 2, scope: !15303)
!15309 = !DILocation(line: 55, column: 2, scope: !14769, inlinedAt: !15310)
!15310 = distinct !DILocation(line: 145, column: 10, scope: !14760, inlinedAt: !15308)
!15311 = !DILocation(line: 0, scope: !14769, inlinedAt: !15310)
!15312 = !DILocation(line: 647, column: 3, scope: !15313)
!15313 = distinct !DILexicalBlock(scope: !15314, file: !2683, line: 646, column: 26)
!15314 = distinct !DILexicalBlock(scope: !15303, file: !2683, line: 646, column: 2)
!15315 = !DILocation(line: 0, scope: !14787, inlinedAt: !15316)
!15316 = distinct !DILocation(line: 646, column: 2, scope: !15314)
!15317 = !DILocation(line: 0, scope: !14795, inlinedAt: !15318)
!15318 = distinct !DILocation(line: 215, column: 2, scope: !14787, inlinedAt: !15316)
!15319 = !DILocation(line: 95, column: 2, scope: !14795, inlinedAt: !15318)
!15320 = !DILocation(line: 649, column: 1, scope: !15299)
!15321 = distinct !DISubprogram(name: "z_sched_start", scope: !2683, file: !2683, line: 651, type: !14718, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15322)
!15322 = !{!15323, !15324}
!15323 = !DILocalVariable(name: "thread", arg: 1, scope: !15321, file: !2683, line: 651, type: !2578)
!15324 = !DILocalVariable(name: "key", scope: !15321, file: !2683, line: 653, type: !14752)
!15325 = !DILocation(line: 0, scope: !15321)
!15326 = !DILocation(line: 0, scope: !14760, inlinedAt: !15327)
!15327 = distinct !DILocation(line: 653, column: 25, scope: !15321)
!15328 = !DILocation(line: 55, column: 2, scope: !14769, inlinedAt: !15329)
!15329 = distinct !DILocation(line: 145, column: 10, scope: !14760, inlinedAt: !15327)
!15330 = !DILocation(line: 0, scope: !14769, inlinedAt: !15329)
!15331 = !DILocation(line: 655, column: 6, scope: !15332)
!15332 = distinct !DILexicalBlock(scope: !15321, file: !2683, line: 655, column: 6)
!15333 = !DILocation(line: 655, column: 6, scope: !15321)
!15334 = !DILocation(line: 0, scope: !14787, inlinedAt: !15335)
!15335 = distinct !DILocation(line: 656, column: 3, scope: !15336)
!15336 = distinct !DILexicalBlock(scope: !15332, file: !2683, line: 655, column: 36)
!15337 = !DILocation(line: 0, scope: !14795, inlinedAt: !15338)
!15338 = distinct !DILocation(line: 215, column: 2, scope: !14787, inlinedAt: !15335)
!15339 = !DILocation(line: 95, column: 2, scope: !14795, inlinedAt: !15338)
!15340 = !DILocation(line: 657, column: 3, scope: !15336)
!15341 = !DILocation(line: 660, column: 2, scope: !15321)
!15342 = !DILocation(line: 661, column: 2, scope: !15321)
!15343 = !DILocation(line: 662, column: 2, scope: !15321)
!15344 = !DILocation(line: 663, column: 1, scope: !15321)
!15345 = distinct !DISubprogram(name: "z_has_thread_started", scope: !14037, file: !14037, line: 126, type: !14878, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15346)
!15346 = !{!15347}
!15347 = !DILocalVariable(name: "thread", arg: 1, scope: !15345, file: !14037, line: 126, type: !2578)
!15348 = !DILocation(line: 0, scope: !15345)
!15349 = !DILocation(line: 128, column: 23, scope: !15345)
!15350 = !DILocation(line: 128, column: 36, scope: !15345)
!15351 = !DILocation(line: 128, column: 56, scope: !15345)
!15352 = !DILocation(line: 128, column: 2, scope: !15345)
!15353 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14037, file: !14037, line: 155, type: !14718, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15354)
!15354 = !{!15355}
!15355 = !DILocalVariable(name: "thread", arg: 1, scope: !15353, file: !14037, line: 155, type: !2578)
!15356 = !DILocation(line: 0, scope: !15353)
!15357 = !DILocation(line: 157, column: 15, scope: !15353)
!15358 = !DILocation(line: 157, column: 28, scope: !15353)
!15359 = !DILocation(line: 158, column: 1, scope: !15353)
!15360 = distinct !DISubprogram(name: "z_reschedule", scope: !2683, file: !2683, line: 967, type: !14788, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15361)
!15361 = !{!15362, !15363}
!15362 = !DILocalVariable(name: "lock", arg: 1, scope: !15360, file: !2683, line: 967, type: !14763)
!15363 = !DILocalVariable(name: "key", arg: 2, scope: !15360, file: !2683, line: 967, type: !14752)
!15364 = !DILocation(line: 0, scope: !15360)
!15365 = !DILocation(line: 969, column: 6, scope: !15366)
!15366 = distinct !DILexicalBlock(scope: !15360, file: !2683, line: 969, column: 6)
!15367 = !DILocation(line: 969, column: 23, scope: !15366)
!15368 = !DILocation(line: 969, column: 26, scope: !15366)
!15369 = !DILocation(line: 969, column: 6, scope: !15360)
!15370 = !DILocalVariable(name: "key", arg: 2, scope: !15371, file: !14141, line: 193, type: !14752)
!15371 = distinct !DISubprogram(name: "z_swap", scope: !14141, file: !14141, line: 193, type: !15372, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15374)
!15372 = !DISubroutineType(types: !15373)
!15373 = !{!108, !14763, !14752}
!15374 = !{!15375, !15370}
!15375 = !DILocalVariable(name: "lock", arg: 1, scope: !15371, file: !14141, line: 193, type: !14763)
!15376 = !DILocation(line: 0, scope: !15371, inlinedAt: !15377)
!15377 = distinct !DILocation(line: 970, column: 3, scope: !15378)
!15378 = distinct !DILexicalBlock(scope: !15366, file: !2683, line: 969, column: 39)
!15379 = !DILocation(line: 196, column: 9, scope: !15371, inlinedAt: !15377)
!15380 = !DILocation(line: 971, column: 2, scope: !15378)
!15381 = !DILocation(line: 0, scope: !14787, inlinedAt: !15382)
!15382 = distinct !DILocation(line: 972, column: 3, scope: !15383)
!15383 = distinct !DILexicalBlock(scope: !15366, file: !2683, line: 971, column: 9)
!15384 = !DILocation(line: 0, scope: !14795, inlinedAt: !15385)
!15385 = distinct !DILocation(line: 215, column: 2, scope: !14787, inlinedAt: !15382)
!15386 = !DILocation(line: 95, column: 2, scope: !14795, inlinedAt: !15385)
!15387 = !DILocation(line: 975, column: 1, scope: !15360)
!15388 = distinct !DISubprogram(name: "resched", scope: !2683, file: !2683, line: 940, type: !15389, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15391)
!15389 = !DISubroutineType(types: !15390)
!15390 = !{!422, !113}
!15391 = !{!15392}
!15392 = !DILocalVariable(name: "key", arg: 1, scope: !15388, file: !2683, line: 940, type: !113)
!15393 = !DILocation(line: 0, scope: !15388)
!15394 = !DILocalVariable(name: "key", arg: 1, scope: !15395, file: !4109, line: 112, type: !32)
!15395 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !4109, file: !4109, line: 112, type: !15396, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15398)
!15396 = !DISubroutineType(types: !15397)
!15397 = !{!422, !32}
!15398 = !{!15394}
!15399 = !DILocation(line: 0, scope: !15395, inlinedAt: !15400)
!15400 = distinct !DILocation(line: 946, column: 9, scope: !15388)
!15401 = !DILocation(line: 115, column: 13, scope: !15395, inlinedAt: !15400)
!15402 = !DILocation(line: 946, column: 32, scope: !15388)
!15403 = !DILocation(line: 1031, column: 3, scope: !15404, inlinedAt: !15407)
!15404 = distinct !DISubprogram(name: "__get_IPSR", scope: !7083, file: !7083, line: 1027, type: !7164, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15405)
!15405 = !{!15406}
!15406 = !DILocalVariable(name: "result", scope: !15404, file: !7083, line: 1029, type: !113)
!15407 = distinct !DILocation(line: 48, column: 10, scope: !15408, inlinedAt: !15409)
!15408 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8101, file: !8101, line: 46, type: !8102, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !437)
!15409 = distinct !DILocation(line: 946, column: 36, scope: !15388)
!15410 = !{i64 2973152}
!15411 = !DILocation(line: 0, scope: !15404, inlinedAt: !15407)
!15412 = !DILocation(line: 48, column: 9, scope: !15408, inlinedAt: !15409)
!15413 = !DILocation(line: 946, column: 2, scope: !15388)
!15414 = distinct !DISubprogram(name: "need_swap", scope: !2683, file: !2683, line: 953, type: !8102, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15415)
!15415 = !{!15416}
!15416 = !DILocalVariable(name: "new_thread", scope: !15414, file: !2683, line: 959, type: !2578)
!15417 = !DILocation(line: 962, column: 31, scope: !15414)
!15418 = !DILocation(line: 0, scope: !15414)
!15419 = !DILocation(line: 963, column: 23, scope: !15414)
!15420 = !DILocation(line: 963, column: 20, scope: !15414)
!15421 = !DILocation(line: 963, column: 2, scope: !15414)
!15422 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14141, file: !14141, line: 181, type: !7093, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15423)
!15423 = !{!15424, !15425}
!15424 = !DILocalVariable(name: "key", arg: 1, scope: !15422, file: !14141, line: 181, type: !32)
!15425 = !DILocalVariable(name: "ret", scope: !15422, file: !14141, line: 183, type: !108)
!15426 = !DILocation(line: 0, scope: !15422)
!15427 = !DILocation(line: 185, column: 8, scope: !15422)
!15428 = !DILocation(line: 186, column: 2, scope: !15422)
!15429 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2683, file: !2683, line: 665, type: !14718, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15430)
!15430 = !{!15431, !15432, !15434}
!15431 = !DILocalVariable(name: "thread", arg: 1, scope: !15429, file: !2683, line: 665, type: !2578)
!15432 = !DILocalVariable(name: "__i", scope: !15433, file: !2683, line: 671, type: !14752)
!15433 = distinct !DILexicalBlock(scope: !15429, file: !2683, line: 671, column: 2)
!15434 = !DILocalVariable(name: "__key", scope: !15433, file: !2683, line: 671, type: !14752)
!15435 = !DILocation(line: 0, scope: !15429)
!15436 = !DILocation(line: 669, column: 8, scope: !15429)
!15437 = !DILocation(line: 0, scope: !15433)
!15438 = !DILocation(line: 0, scope: !14760, inlinedAt: !15439)
!15439 = distinct !DILocation(line: 671, column: 2, scope: !15433)
!15440 = !DILocation(line: 55, column: 2, scope: !14769, inlinedAt: !15441)
!15441 = distinct !DILocation(line: 145, column: 10, scope: !14760, inlinedAt: !15439)
!15442 = !DILocation(line: 0, scope: !14769, inlinedAt: !15441)
!15443 = !DILocation(line: 672, column: 7, scope: !15444)
!15444 = distinct !DILexicalBlock(scope: !15445, file: !2683, line: 672, column: 7)
!15445 = distinct !DILexicalBlock(scope: !15446, file: !2683, line: 671, column: 26)
!15446 = distinct !DILexicalBlock(scope: !15433, file: !2683, line: 671, column: 2)
!15447 = !DILocation(line: 672, column: 7, scope: !15445)
!15448 = !DILocation(line: 0, scope: !14929, inlinedAt: !15449)
!15449 = distinct !DILocation(line: 673, column: 4, scope: !15450)
!15450 = distinct !DILexicalBlock(scope: !15444, file: !2683, line: 672, column: 35)
!15451 = !DILocation(line: 266, column: 15, scope: !14929, inlinedAt: !15449)
!15452 = !DILocation(line: 266, column: 28, scope: !14929, inlinedAt: !15449)
!15453 = !DILocation(line: 0, scope: !14937, inlinedAt: !15454)
!15454 = distinct !DILocation(line: 268, column: 3, scope: !14941, inlinedAt: !15449)
!15455 = !DILocation(line: 234, column: 2, scope: !14937, inlinedAt: !15454)
!15456 = !DILocation(line: 674, column: 3, scope: !15450)
!15457 = !DILocation(line: 675, column: 3, scope: !15445)
!15458 = !DILocation(line: 676, column: 26, scope: !15445)
!15459 = !DILocation(line: 676, column: 23, scope: !15445)
!15460 = !DILocation(line: 676, column: 3, scope: !15445)
!15461 = !DILocation(line: 0, scope: !14787, inlinedAt: !15462)
!15462 = distinct !DILocation(line: 671, column: 2, scope: !15446)
!15463 = !DILocation(line: 0, scope: !14795, inlinedAt: !15464)
!15464 = distinct !DILocation(line: 215, column: 2, scope: !14787, inlinedAt: !15462)
!15465 = !DILocation(line: 95, column: 2, scope: !14795, inlinedAt: !15464)
!15466 = !DILocation(line: 679, column: 16, scope: !15467)
!15467 = distinct !DILexicalBlock(scope: !15429, file: !2683, line: 679, column: 6)
!15468 = !DILocation(line: 679, column: 13, scope: !15467)
!15469 = !DILocation(line: 679, column: 6, scope: !15429)
!15470 = !DILocation(line: 680, column: 3, scope: !15471)
!15471 = distinct !DILexicalBlock(scope: !15467, file: !2683, line: 679, column: 26)
!15472 = !DILocation(line: 681, column: 2, scope: !15471)
!15473 = !DILocation(line: 684, column: 1, scope: !15429)
!15474 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14431, file: !14431, line: 52, type: !14736, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15475)
!15475 = !{!15476}
!15476 = !DILocalVariable(name: "thread", arg: 1, scope: !15474, file: !14431, line: 52, type: !2578)
!15477 = !DILocation(line: 0, scope: !15474)
!15478 = !DILocation(line: 54, column: 39, scope: !15474)
!15479 = !DILocation(line: 54, column: 9, scope: !15474)
!15480 = !DILocation(line: 54, column: 2, scope: !15474)
!15481 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !14037, file: !14037, line: 141, type: !14718, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15482)
!15482 = !{!15483}
!15483 = !DILocalVariable(name: "thread", arg: 1, scope: !15481, file: !14037, line: 141, type: !2578)
!15484 = !DILocation(line: 0, scope: !15481)
!15485 = !DILocation(line: 143, column: 15, scope: !15481)
!15486 = !DILocation(line: 143, column: 28, scope: !15481)
!15487 = !DILocation(line: 146, column: 1, scope: !15481)
!15488 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14037, file: !14037, line: 73, type: !3435, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !437)
!15489 = !DILocation(line: 55, column: 2, scope: !14769, inlinedAt: !15490)
!15490 = distinct !DILocation(line: 75, column: 30, scope: !15488)
!15491 = !DILocation(line: 0, scope: !14769, inlinedAt: !15490)
!15492 = !DILocation(line: 75, column: 9, scope: !15488)
!15493 = !DILocation(line: 76, column: 1, scope: !15488)
!15494 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2683, file: !2683, line: 977, type: !7174, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15495)
!15495 = !{!15496}
!15496 = !DILocalVariable(name: "key", arg: 1, scope: !15494, file: !2683, line: 977, type: !113)
!15497 = !DILocation(line: 0, scope: !15494)
!15498 = !DILocation(line: 979, column: 6, scope: !15499)
!15499 = distinct !DILexicalBlock(scope: !15494, file: !2683, line: 979, column: 6)
!15500 = !DILocation(line: 979, column: 6, scope: !15494)
!15501 = !DILocation(line: 980, column: 3, scope: !15502)
!15502 = distinct !DILexicalBlock(scope: !15499, file: !2683, line: 979, column: 20)
!15503 = !DILocation(line: 981, column: 2, scope: !15502)
!15504 = !DILocation(line: 0, scope: !14795, inlinedAt: !15505)
!15505 = distinct !DILocation(line: 982, column: 3, scope: !15506)
!15506 = distinct !DILexicalBlock(scope: !15499, file: !2683, line: 981, column: 9)
!15507 = !DILocation(line: 95, column: 2, scope: !14795, inlinedAt: !15505)
!15508 = !DILocation(line: 985, column: 1, scope: !15494)
!15509 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2683, file: !2683, line: 695, type: !14718, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15510)
!15510 = !{!15511, !15512}
!15511 = !DILocalVariable(name: "thread", arg: 1, scope: !15509, file: !2683, line: 695, type: !2578)
!15512 = !DILocalVariable(name: "key", scope: !15509, file: !2683, line: 699, type: !14752)
!15513 = !DILocation(line: 0, scope: !15509)
!15514 = !DILocation(line: 0, scope: !14760, inlinedAt: !15515)
!15515 = distinct !DILocation(line: 699, column: 25, scope: !15509)
!15516 = !DILocation(line: 55, column: 2, scope: !14769, inlinedAt: !15517)
!15517 = distinct !DILocation(line: 145, column: 10, scope: !14760, inlinedAt: !15515)
!15518 = !DILocation(line: 0, scope: !14769, inlinedAt: !15517)
!15519 = !DILocation(line: 702, column: 7, scope: !15520)
!15520 = distinct !DILexicalBlock(scope: !15509, file: !2683, line: 702, column: 6)
!15521 = !DILocation(line: 702, column: 6, scope: !15509)
!15522 = !DILocation(line: 0, scope: !14787, inlinedAt: !15523)
!15523 = distinct !DILocation(line: 703, column: 3, scope: !15524)
!15524 = distinct !DILexicalBlock(scope: !15520, file: !2683, line: 702, column: 38)
!15525 = !DILocation(line: 0, scope: !14795, inlinedAt: !15526)
!15526 = distinct !DILocation(line: 215, column: 2, scope: !14787, inlinedAt: !15523)
!15527 = !DILocation(line: 95, column: 2, scope: !14795, inlinedAt: !15526)
!15528 = !DILocation(line: 704, column: 3, scope: !15524)
!15529 = !DILocation(line: 707, column: 2, scope: !15509)
!15530 = !DILocation(line: 708, column: 2, scope: !15509)
!15531 = !DILocation(line: 710, column: 2, scope: !15509)
!15532 = !DILocation(line: 713, column: 1, scope: !15509)
!15533 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !14037, file: !14037, line: 96, type: !14878, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15534)
!15534 = !{!15535}
!15535 = !DILocalVariable(name: "thread", arg: 1, scope: !15533, file: !14037, line: 96, type: !2578)
!15536 = !DILocation(line: 0, scope: !15533)
!15537 = !DILocation(line: 98, column: 23, scope: !15533)
!15538 = !DILocation(line: 98, column: 36, scope: !15533)
!15539 = !DILocation(line: 98, column: 57, scope: !15533)
!15540 = !DILocation(line: 98, column: 2, scope: !15533)
!15541 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !14037, file: !14037, line: 148, type: !14718, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15542)
!15542 = !{!15543}
!15543 = !DILocalVariable(name: "thread", arg: 1, scope: !15541, file: !14037, line: 148, type: !2578)
!15544 = !DILocation(line: 0, scope: !15541)
!15545 = !DILocation(line: 150, column: 15, scope: !15541)
!15546 = !DILocation(line: 150, column: 28, scope: !15541)
!15547 = !DILocation(line: 153, column: 1, scope: !15541)
!15548 = distinct !DISubprogram(name: "z_pend_thread", scope: !2683, file: !2683, line: 770, type: !15549, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15555)
!15549 = !DISubroutineType(types: !15550)
!15550 = !{null, !2578, !2609, !15551}
!15551 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !15552)
!15552 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !15553)
!15553 = !{!15554}
!15554 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15552, file: !110, line: 66, baseType: !109, size: 64)
!15555 = !{!15556, !15557, !15558, !15559, !15561}
!15556 = !DILocalVariable(name: "thread", arg: 1, scope: !15548, file: !2683, line: 770, type: !2578)
!15557 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15548, file: !2683, line: 770, type: !2609)
!15558 = !DILocalVariable(name: "timeout", arg: 3, scope: !15548, file: !2683, line: 771, type: !15551)
!15559 = !DILocalVariable(name: "__i", scope: !15560, file: !2683, line: 774, type: !14752)
!15560 = distinct !DILexicalBlock(scope: !15548, file: !2683, line: 774, column: 2)
!15561 = !DILocalVariable(name: "__key", scope: !15560, file: !2683, line: 774, type: !14752)
!15562 = !DILocation(line: 0, scope: !15548)
!15563 = !DILocation(line: 0, scope: !15560)
!15564 = !DILocation(line: 0, scope: !14760, inlinedAt: !15565)
!15565 = distinct !DILocation(line: 774, column: 2, scope: !15560)
!15566 = !DILocation(line: 55, column: 2, scope: !14769, inlinedAt: !15567)
!15567 = distinct !DILocation(line: 145, column: 10, scope: !14760, inlinedAt: !15565)
!15568 = !DILocation(line: 0, scope: !14769, inlinedAt: !15567)
!15569 = !DILocation(line: 775, column: 3, scope: !15570)
!15570 = distinct !DILexicalBlock(scope: !15571, file: !2683, line: 774, column: 26)
!15571 = distinct !DILexicalBlock(scope: !15560, file: !2683, line: 774, column: 2)
!15572 = !DILocation(line: 0, scope: !14787, inlinedAt: !15573)
!15573 = distinct !DILocation(line: 774, column: 2, scope: !15571)
!15574 = !DILocation(line: 0, scope: !14795, inlinedAt: !15575)
!15575 = distinct !DILocation(line: 215, column: 2, scope: !14787, inlinedAt: !15573)
!15576 = !DILocation(line: 95, column: 2, scope: !14795, inlinedAt: !15575)
!15577 = !DILocation(line: 777, column: 1, scope: !15548)
!15578 = distinct !DISubprogram(name: "pend_locked", scope: !2683, file: !2683, line: 760, type: !15549, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15579)
!15579 = !{!15580, !15581, !15582}
!15580 = !DILocalVariable(name: "thread", arg: 1, scope: !15578, file: !2683, line: 760, type: !2578)
!15581 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15578, file: !2683, line: 760, type: !2609)
!15582 = !DILocalVariable(name: "timeout", arg: 3, scope: !15578, file: !2683, line: 761, type: !15551)
!15583 = !DILocation(line: 0, scope: !15578)
!15584 = !DILocation(line: 766, column: 2, scope: !15578)
!15585 = !DILocation(line: 767, column: 2, scope: !15578)
!15586 = !DILocation(line: 768, column: 1, scope: !15578)
!15587 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2683, file: !2683, line: 740, type: !15588, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15590)
!15588 = !DISubroutineType(types: !15589)
!15589 = !{null, !2578, !2609}
!15590 = !{!15591, !15592}
!15591 = !DILocalVariable(name: "thread", arg: 1, scope: !15587, file: !2683, line: 740, type: !2578)
!15592 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15587, file: !2683, line: 740, type: !2609)
!15593 = !DILocation(line: 0, scope: !15587)
!15594 = !DILocation(line: 742, column: 2, scope: !15587)
!15595 = !DILocation(line: 743, column: 2, scope: !15587)
!15596 = !DILocation(line: 747, column: 13, scope: !15597)
!15597 = distinct !DILexicalBlock(scope: !15587, file: !2683, line: 747, column: 6)
!15598 = !DILocation(line: 747, column: 6, scope: !15587)
!15599 = !DILocation(line: 748, column: 16, scope: !15600)
!15600 = distinct !DILexicalBlock(scope: !15597, file: !2683, line: 747, column: 22)
!15601 = !DILocation(line: 748, column: 26, scope: !15600)
!15602 = !DILocation(line: 749, column: 28, scope: !15600)
!15603 = !DILocation(line: 0, scope: !14960, inlinedAt: !15604)
!15604 = distinct !DILocation(line: 749, column: 3, scope: !15600)
!15605 = !DILocation(line: 188, column: 2, scope: !14970, inlinedAt: !15604)
!15606 = !DILocation(line: 188, column: 2, scope: !14972, inlinedAt: !15604)
!15607 = !DILocation(line: 0, scope: !14970, inlinedAt: !15604)
!15608 = !DILocation(line: 189, column: 7, scope: !14975, inlinedAt: !15604)
!15609 = !DILocation(line: 189, column: 35, scope: !14975, inlinedAt: !15604)
!15610 = !DILocation(line: 189, column: 7, scope: !14976, inlinedAt: !15604)
!15611 = !DILocation(line: 191, column: 21, scope: !14980, inlinedAt: !15604)
!15612 = !DILocation(line: 190, column: 4, scope: !14980, inlinedAt: !15604)
!15613 = !DILocation(line: 192, column: 4, scope: !14980, inlinedAt: !15604)
!15614 = distinct !{!15614, !15605, !15615}
!15615 = !DILocation(line: 194, column: 2, scope: !14970, inlinedAt: !15604)
!15616 = !DILocation(line: 196, column: 37, scope: !14960, inlinedAt: !15604)
!15617 = !DILocation(line: 196, column: 2, scope: !14960, inlinedAt: !15604)
!15618 = !DILocation(line: 197, column: 1, scope: !14960, inlinedAt: !15604)
!15619 = !DILocation(line: 751, column: 1, scope: !15587)
!15620 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2683, file: !2683, line: 753, type: !15621, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15623)
!15621 = !DISubroutineType(types: !15622)
!15622 = !{null, !2578, !15551}
!15623 = !{!15624, !15625}
!15624 = !DILocalVariable(name: "thread", arg: 1, scope: !15620, file: !2683, line: 753, type: !2578)
!15625 = !DILocalVariable(name: "timeout", arg: 2, scope: !15620, file: !2683, line: 753, type: !15551)
!15626 = !DILocation(line: 0, scope: !15620)
!15627 = !DILocation(line: 755, column: 7, scope: !15628)
!15628 = distinct !DILexicalBlock(scope: !15620, file: !2683, line: 755, column: 6)
!15629 = !DILocation(line: 755, column: 6, scope: !15620)
!15630 = !DILocation(line: 756, column: 3, scope: !15631)
!15631 = distinct !DILexicalBlock(scope: !15628, file: !2683, line: 755, column: 41)
!15632 = !DILocation(line: 757, column: 2, scope: !15631)
!15633 = !DILocation(line: 758, column: 1, scope: !15620)
!15634 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14431, file: !14431, line: 47, type: !15621, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15635)
!15635 = !{!15636, !15637}
!15636 = !DILocalVariable(name: "thread", arg: 1, scope: !15634, file: !14431, line: 47, type: !2578)
!15637 = !DILocalVariable(name: "ticks", arg: 2, scope: !15634, file: !14431, line: 47, type: !15551)
!15638 = !DILocation(line: 0, scope: !15634)
!15639 = !DILocation(line: 49, column: 30, scope: !15634)
!15640 = !DILocation(line: 49, column: 2, scope: !15634)
!15641 = !DILocation(line: 50, column: 1, scope: !15634)
!15642 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2683, file: !2683, line: 795, type: !2635, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15643)
!15643 = !{!15644, !15645, !15646, !15648, !15649}
!15644 = !DILocalVariable(name: "timeout", arg: 1, scope: !15642, file: !2683, line: 795, type: !2637)
!15645 = !DILocalVariable(name: "thread", scope: !15642, file: !2683, line: 797, type: !2578)
!15646 = !DILocalVariable(name: "__i", scope: !15647, file: !2683, line: 800, type: !14752)
!15647 = distinct !DILexicalBlock(scope: !15642, file: !2683, line: 800, column: 2)
!15648 = !DILocalVariable(name: "__key", scope: !15647, file: !2683, line: 800, type: !14752)
!15649 = !DILocalVariable(name: "killed", scope: !15650, file: !2683, line: 801, type: !422)
!15650 = distinct !DILexicalBlock(scope: !15651, file: !2683, line: 800, column: 26)
!15651 = distinct !DILexicalBlock(scope: !15647, file: !2683, line: 800, column: 2)
!15652 = !DILocation(line: 0, scope: !15642)
!15653 = !DILocation(line: 797, column: 28, scope: !15642)
!15654 = !DILocation(line: 0, scope: !15647)
!15655 = !DILocation(line: 0, scope: !14760, inlinedAt: !15656)
!15656 = distinct !DILocation(line: 800, column: 2, scope: !15647)
!15657 = !DILocation(line: 55, column: 2, scope: !14769, inlinedAt: !15658)
!15658 = distinct !DILocation(line: 145, column: 10, scope: !14760, inlinedAt: !15656)
!15659 = !DILocation(line: 0, scope: !14769, inlinedAt: !15658)
!15660 = !DILocation(line: 801, column: 27, scope: !15650)
!15661 = !DILocation(line: 801, column: 32, scope: !15650)
!15662 = !DILocation(line: 801, column: 61, scope: !15650)
!15663 = !DILocation(line: 0, scope: !15650)
!15664 = !DILocation(line: 804, column: 7, scope: !15650)
!15665 = !DILocation(line: 805, column: 21, scope: !15666)
!15666 = distinct !DILexicalBlock(scope: !15667, file: !2683, line: 805, column: 8)
!15667 = distinct !DILexicalBlock(scope: !15668, file: !2683, line: 804, column: 16)
!15668 = distinct !DILexicalBlock(scope: !15650, file: !2683, line: 804, column: 7)
!15669 = !DILocation(line: 805, column: 31, scope: !15666)
!15670 = !DILocation(line: 805, column: 8, scope: !15667)
!15671 = !DILocation(line: 806, column: 5, scope: !15672)
!15672 = distinct !DILexicalBlock(scope: !15666, file: !2683, line: 805, column: 40)
!15673 = !DILocation(line: 807, column: 4, scope: !15672)
!15674 = !DILocation(line: 808, column: 4, scope: !15667)
!15675 = !DILocation(line: 809, column: 4, scope: !15667)
!15676 = !DILocation(line: 810, column: 4, scope: !15667)
!15677 = !DILocation(line: 811, column: 3, scope: !15667)
!15678 = !DILocation(line: 0, scope: !14787, inlinedAt: !15679)
!15679 = distinct !DILocation(line: 800, column: 2, scope: !15651)
!15680 = !DILocation(line: 0, scope: !14795, inlinedAt: !15681)
!15681 = distinct !DILocation(line: 215, column: 2, scope: !14787, inlinedAt: !15679)
!15682 = !DILocation(line: 95, column: 2, scope: !14795, inlinedAt: !15681)
!15683 = !DILocation(line: 813, column: 1, scope: !15642)
!15684 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2683, file: !2683, line: 779, type: !14718, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15685)
!15685 = !{!15686}
!15686 = !DILocalVariable(name: "thread", arg: 1, scope: !15684, file: !2683, line: 779, type: !2578)
!15687 = !DILocation(line: 0, scope: !15684)
!15688 = !DILocation(line: 781, column: 2, scope: !15684)
!15689 = !DILocation(line: 782, column: 2, scope: !15684)
!15690 = !DILocation(line: 783, column: 15, scope: !15684)
!15691 = !DILocation(line: 783, column: 25, scope: !15684)
!15692 = !DILocation(line: 784, column: 1, scope: !15684)
!15693 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !14037, file: !14037, line: 165, type: !14718, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15694)
!15694 = !{!15695}
!15695 = !DILocalVariable(name: "thread", arg: 1, scope: !15693, file: !14037, line: 165, type: !2578)
!15696 = !DILocation(line: 0, scope: !15693)
!15697 = !DILocation(line: 167, column: 15, scope: !15693)
!15698 = !DILocation(line: 167, column: 28, scope: !15693)
!15699 = !DILocation(line: 168, column: 1, scope: !15693)
!15700 = distinct !DISubprogram(name: "unready_thread", scope: !2683, file: !2683, line: 731, type: !14718, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15701)
!15701 = !{!15702}
!15702 = !DILocalVariable(name: "thread", arg: 1, scope: !15700, file: !2683, line: 731, type: !2578)
!15703 = !DILocation(line: 0, scope: !15700)
!15704 = !DILocation(line: 733, column: 6, scope: !15705)
!15705 = distinct !DILexicalBlock(scope: !15700, file: !2683, line: 733, column: 6)
!15706 = !DILocation(line: 733, column: 6, scope: !15700)
!15707 = !DILocation(line: 0, scope: !14929, inlinedAt: !15708)
!15708 = distinct !DILocation(line: 734, column: 3, scope: !15709)
!15709 = distinct !DILexicalBlock(scope: !15705, file: !2683, line: 733, column: 34)
!15710 = !DILocation(line: 266, column: 15, scope: !14929, inlinedAt: !15708)
!15711 = !DILocation(line: 266, column: 28, scope: !14929, inlinedAt: !15708)
!15712 = !DILocation(line: 0, scope: !14937, inlinedAt: !15713)
!15713 = distinct !DILocation(line: 268, column: 3, scope: !14941, inlinedAt: !15708)
!15714 = !DILocation(line: 234, column: 2, scope: !14937, inlinedAt: !15713)
!15715 = !DILocation(line: 735, column: 2, scope: !15709)
!15716 = !DILocation(line: 736, column: 25, scope: !15700)
!15717 = !DILocation(line: 736, column: 22, scope: !15700)
!15718 = !DILocation(line: 736, column: 2, scope: !15700)
!15719 = !DILocation(line: 737, column: 1, scope: !15700)
!15720 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !14037, file: !14037, line: 160, type: !14718, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15721)
!15721 = !{!15722}
!15722 = !DILocalVariable(name: "thread", arg: 1, scope: !15720, file: !14037, line: 160, type: !2578)
!15723 = !DILocation(line: 0, scope: !15720)
!15724 = !DILocation(line: 162, column: 15, scope: !15720)
!15725 = !DILocation(line: 162, column: 28, scope: !15720)
!15726 = !DILocation(line: 163, column: 1, scope: !15720)
!15727 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2683, file: !2683, line: 786, type: !14718, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15728)
!15728 = !{!15729, !15730, !15732}
!15729 = !DILocalVariable(name: "thread", arg: 1, scope: !15727, file: !2683, line: 786, type: !2578)
!15730 = !DILocalVariable(name: "__i", scope: !15731, file: !2683, line: 788, type: !14752)
!15731 = distinct !DILexicalBlock(scope: !15727, file: !2683, line: 788, column: 2)
!15732 = !DILocalVariable(name: "__key", scope: !15731, file: !2683, line: 788, type: !14752)
!15733 = !DILocation(line: 0, scope: !15727)
!15734 = !DILocation(line: 0, scope: !15731)
!15735 = !DILocation(line: 0, scope: !14760, inlinedAt: !15736)
!15736 = distinct !DILocation(line: 788, column: 2, scope: !15731)
!15737 = !DILocation(line: 55, column: 2, scope: !14769, inlinedAt: !15738)
!15738 = distinct !DILocation(line: 145, column: 10, scope: !14760, inlinedAt: !15736)
!15739 = !DILocation(line: 0, scope: !14769, inlinedAt: !15738)
!15740 = !DILocation(line: 789, column: 3, scope: !15741)
!15741 = distinct !DILexicalBlock(scope: !15742, file: !2683, line: 788, column: 26)
!15742 = distinct !DILexicalBlock(scope: !15731, file: !2683, line: 788, column: 2)
!15743 = !DILocation(line: 0, scope: !14787, inlinedAt: !15744)
!15744 = distinct !DILocation(line: 788, column: 2, scope: !15742)
!15745 = !DILocation(line: 0, scope: !14795, inlinedAt: !15746)
!15746 = distinct !DILocation(line: 215, column: 2, scope: !14787, inlinedAt: !15744)
!15747 = !DILocation(line: 95, column: 2, scope: !14795, inlinedAt: !15746)
!15748 = !DILocation(line: 791, column: 1, scope: !15727)
!15749 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2683, file: !2683, line: 816, type: !15750, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15752)
!15750 = !DISubroutineType(types: !15751)
!15751 = !{!108, !113, !2609, !15551}
!15752 = !{!15753, !15754, !15755, !15756, !15757, !15759}
!15753 = !DILocalVariable(name: "key", arg: 1, scope: !15749, file: !2683, line: 816, type: !113)
!15754 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15749, file: !2683, line: 816, type: !2609)
!15755 = !DILocalVariable(name: "timeout", arg: 3, scope: !15749, file: !2683, line: 816, type: !15551)
!15756 = !DILocalVariable(name: "ret", scope: !15749, file: !2683, line: 828, type: !108)
!15757 = !DILocalVariable(name: "__i", scope: !15758, file: !2683, line: 829, type: !14752)
!15758 = distinct !DILexicalBlock(scope: !15749, file: !2683, line: 829, column: 2)
!15759 = !DILocalVariable(name: "__key", scope: !15758, file: !2683, line: 829, type: !14752)
!15760 = !DILocation(line: 0, scope: !15749)
!15761 = !DILocation(line: 823, column: 14, scope: !15749)
!15762 = !DILocation(line: 823, column: 2, scope: !15749)
!15763 = !DILocation(line: 826, column: 20, scope: !15749)
!15764 = !DILocation(line: 826, column: 18, scope: !15749)
!15765 = !DILocation(line: 828, column: 12, scope: !15749)
!15766 = !DILocation(line: 0, scope: !15758)
!15767 = !DILocation(line: 0, scope: !14760, inlinedAt: !15768)
!15768 = distinct !DILocation(line: 829, column: 2, scope: !15758)
!15769 = !DILocation(line: 55, column: 2, scope: !14769, inlinedAt: !15770)
!15770 = distinct !DILocation(line: 145, column: 10, scope: !14760, inlinedAt: !15768)
!15771 = !DILocation(line: 0, scope: !14769, inlinedAt: !15770)
!15772 = !DILocation(line: 830, column: 7, scope: !15773)
!15773 = distinct !DILexicalBlock(scope: !15774, file: !2683, line: 830, column: 7)
!15774 = distinct !DILexicalBlock(scope: !15775, file: !2683, line: 829, column: 26)
!15775 = distinct !DILexicalBlock(scope: !15758, file: !2683, line: 829, column: 2)
!15776 = !DILocation(line: 830, column: 26, scope: !15773)
!15777 = !DILocation(line: 830, column: 23, scope: !15773)
!15778 = !DILocation(line: 830, column: 7, scope: !15774)
!15779 = !DILocation(line: 831, column: 20, scope: !15780)
!15780 = distinct !DILexicalBlock(scope: !15773, file: !2683, line: 830, column: 36)
!15781 = !DILocation(line: 832, column: 3, scope: !15780)
!15782 = !DILocation(line: 0, scope: !14787, inlinedAt: !15783)
!15783 = distinct !DILocation(line: 829, column: 2, scope: !15775)
!15784 = !DILocation(line: 0, scope: !14795, inlinedAt: !15785)
!15785 = distinct !DILocation(line: 215, column: 2, scope: !14787, inlinedAt: !15783)
!15786 = !DILocation(line: 95, column: 2, scope: !14795, inlinedAt: !15785)
!15787 = !DILocation(line: 834, column: 2, scope: !15749)
!15788 = distinct !DISubprogram(name: "z_pend_curr", scope: !2683, file: !2683, line: 840, type: !15789, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15791)
!15789 = !DISubroutineType(types: !15790)
!15790 = !{!108, !14763, !14752, !2609, !15551}
!15791 = !{!15792, !15793, !15794, !15795}
!15792 = !DILocalVariable(name: "lock", arg: 1, scope: !15788, file: !2683, line: 840, type: !14763)
!15793 = !DILocalVariable(name: "key", arg: 2, scope: !15788, file: !2683, line: 840, type: !14752)
!15794 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15788, file: !2683, line: 841, type: !2609)
!15795 = !DILocalVariable(name: "timeout", arg: 4, scope: !15788, file: !2683, line: 841, type: !15551)
!15796 = !DILocation(line: 0, scope: !15788)
!15797 = !DILocation(line: 844, column: 20, scope: !15788)
!15798 = !DILocation(line: 844, column: 18, scope: !15788)
!15799 = !DILocation(line: 0, scope: !14760, inlinedAt: !15800)
!15800 = distinct !DILocation(line: 856, column: 9, scope: !15788)
!15801 = !DILocation(line: 55, column: 2, scope: !14769, inlinedAt: !15802)
!15802 = distinct !DILocation(line: 145, column: 10, scope: !14760, inlinedAt: !15800)
!15803 = !DILocation(line: 0, scope: !14769, inlinedAt: !15802)
!15804 = !DILocation(line: 857, column: 14, scope: !15788)
!15805 = !DILocation(line: 857, column: 2, scope: !15788)
!15806 = !DILocation(line: 0, scope: !15371, inlinedAt: !15807)
!15807 = distinct !DILocation(line: 859, column: 9, scope: !15788)
!15808 = !DILocation(line: 196, column: 9, scope: !15371, inlinedAt: !15807)
!15809 = !DILocation(line: 859, column: 2, scope: !15788)
!15810 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2683, file: !2683, line: 862, type: !15811, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15813)
!15811 = !DISubroutineType(types: !15812)
!15812 = !{!2578, !2609}
!15813 = !{!15814, !15815, !15816, !15818}
!15814 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15810, file: !2683, line: 862, type: !2609)
!15815 = !DILocalVariable(name: "thread", scope: !15810, file: !2683, line: 864, type: !2578)
!15816 = !DILocalVariable(name: "__i", scope: !15817, file: !2683, line: 866, type: !14752)
!15817 = distinct !DILexicalBlock(scope: !15810, file: !2683, line: 866, column: 2)
!15818 = !DILocalVariable(name: "__key", scope: !15817, file: !2683, line: 866, type: !14752)
!15819 = !DILocation(line: 0, scope: !15810)
!15820 = !DILocation(line: 0, scope: !15817)
!15821 = !DILocation(line: 0, scope: !14760, inlinedAt: !15822)
!15822 = distinct !DILocation(line: 866, column: 2, scope: !15817)
!15823 = !DILocation(line: 55, column: 2, scope: !14769, inlinedAt: !15824)
!15824 = distinct !DILocation(line: 145, column: 10, scope: !14760, inlinedAt: !15822)
!15825 = !DILocation(line: 0, scope: !14769, inlinedAt: !15824)
!15826 = !DILocation(line: 867, column: 12, scope: !15827)
!15827 = distinct !DILexicalBlock(scope: !15828, file: !2683, line: 866, column: 26)
!15828 = distinct !DILexicalBlock(scope: !15817, file: !2683, line: 866, column: 2)
!15829 = !DILocation(line: 869, column: 14, scope: !15830)
!15830 = distinct !DILexicalBlock(scope: !15827, file: !2683, line: 869, column: 7)
!15831 = !DILocation(line: 869, column: 7, scope: !15827)
!15832 = !DILocation(line: 870, column: 4, scope: !15833)
!15833 = distinct !DILexicalBlock(scope: !15830, file: !2683, line: 869, column: 23)
!15834 = !DILocation(line: 871, column: 3, scope: !15833)
!15835 = !DILocation(line: 0, scope: !14787, inlinedAt: !15836)
!15836 = distinct !DILocation(line: 866, column: 2, scope: !15828)
!15837 = !DILocation(line: 0, scope: !14795, inlinedAt: !15838)
!15838 = distinct !DILocation(line: 215, column: 2, scope: !14787, inlinedAt: !15836)
!15839 = !DILocation(line: 95, column: 2, scope: !14795, inlinedAt: !15838)
!15840 = !DILocation(line: 874, column: 2, scope: !15810)
!15841 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2683, file: !2683, line: 877, type: !15811, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15842)
!15842 = !{!15843, !15844, !15845, !15847}
!15843 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15841, file: !2683, line: 877, type: !2609)
!15844 = !DILocalVariable(name: "thread", scope: !15841, file: !2683, line: 879, type: !2578)
!15845 = !DILocalVariable(name: "__i", scope: !15846, file: !2683, line: 881, type: !14752)
!15846 = distinct !DILexicalBlock(scope: !15841, file: !2683, line: 881, column: 2)
!15847 = !DILocalVariable(name: "__key", scope: !15846, file: !2683, line: 881, type: !14752)
!15848 = !DILocation(line: 0, scope: !15841)
!15849 = !DILocation(line: 0, scope: !15846)
!15850 = !DILocation(line: 0, scope: !14760, inlinedAt: !15851)
!15851 = distinct !DILocation(line: 881, column: 2, scope: !15846)
!15852 = !DILocation(line: 55, column: 2, scope: !14769, inlinedAt: !15853)
!15853 = distinct !DILocation(line: 145, column: 10, scope: !14760, inlinedAt: !15851)
!15854 = !DILocation(line: 0, scope: !14769, inlinedAt: !15853)
!15855 = !DILocation(line: 882, column: 12, scope: !15856)
!15856 = distinct !DILexicalBlock(scope: !15857, file: !2683, line: 881, column: 26)
!15857 = distinct !DILexicalBlock(scope: !15846, file: !2683, line: 881, column: 2)
!15858 = !DILocation(line: 884, column: 14, scope: !15859)
!15859 = distinct !DILexicalBlock(scope: !15856, file: !2683, line: 884, column: 7)
!15860 = !DILocation(line: 884, column: 7, scope: !15856)
!15861 = !DILocation(line: 885, column: 4, scope: !15862)
!15862 = distinct !DILexicalBlock(scope: !15859, file: !2683, line: 884, column: 23)
!15863 = !DILocation(line: 886, column: 10, scope: !15862)
!15864 = !DILocation(line: 887, column: 3, scope: !15862)
!15865 = !DILocation(line: 0, scope: !14787, inlinedAt: !15866)
!15866 = distinct !DILocation(line: 881, column: 2, scope: !15857)
!15867 = !DILocation(line: 0, scope: !14795, inlinedAt: !15868)
!15868 = distinct !DILocation(line: 215, column: 2, scope: !14787, inlinedAt: !15866)
!15869 = !DILocation(line: 95, column: 2, scope: !14795, inlinedAt: !15868)
!15870 = !DILocation(line: 890, column: 2, scope: !15841)
!15871 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2683, file: !2683, line: 893, type: !14718, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15872)
!15872 = !{!15873}
!15873 = !DILocalVariable(name: "thread", arg: 1, scope: !15871, file: !2683, line: 893, type: !2578)
!15874 = !DILocation(line: 0, scope: !15871)
!15875 = !DILocation(line: 0, scope: !15727, inlinedAt: !15876)
!15876 = distinct !DILocation(line: 895, column: 2, scope: !15871)
!15877 = !DILocation(line: 0, scope: !15731, inlinedAt: !15876)
!15878 = !DILocation(line: 0, scope: !14760, inlinedAt: !15879)
!15879 = distinct !DILocation(line: 788, column: 2, scope: !15731, inlinedAt: !15876)
!15880 = !DILocation(line: 55, column: 2, scope: !14769, inlinedAt: !15881)
!15881 = distinct !DILocation(line: 145, column: 10, scope: !14760, inlinedAt: !15879)
!15882 = !DILocation(line: 0, scope: !14769, inlinedAt: !15881)
!15883 = !DILocation(line: 789, column: 3, scope: !15741, inlinedAt: !15876)
!15884 = !DILocation(line: 0, scope: !14787, inlinedAt: !15885)
!15885 = distinct !DILocation(line: 788, column: 2, scope: !15742, inlinedAt: !15876)
!15886 = !DILocation(line: 0, scope: !14795, inlinedAt: !15887)
!15887 = distinct !DILocation(line: 215, column: 2, scope: !14787, inlinedAt: !15885)
!15888 = !DILocation(line: 95, column: 2, scope: !14795, inlinedAt: !15887)
!15889 = !DILocation(line: 896, column: 8, scope: !15871)
!15890 = !DILocation(line: 897, column: 1, scope: !15871)
!15891 = distinct !DISubprogram(name: "z_set_prio", scope: !2683, file: !2683, line: 902, type: !15080, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15892)
!15892 = !{!15893, !15894, !15895, !15896, !15898}
!15893 = !DILocalVariable(name: "thread", arg: 1, scope: !15891, file: !2683, line: 902, type: !2578)
!15894 = !DILocalVariable(name: "prio", arg: 2, scope: !15891, file: !2683, line: 902, type: !108)
!15895 = !DILocalVariable(name: "need_sched", scope: !15891, file: !2683, line: 904, type: !422)
!15896 = !DILocalVariable(name: "__i", scope: !15897, file: !2683, line: 906, type: !14752)
!15897 = distinct !DILexicalBlock(scope: !15891, file: !2683, line: 906, column: 2)
!15898 = !DILocalVariable(name: "__key", scope: !15897, file: !2683, line: 906, type: !14752)
!15899 = !DILocation(line: 0, scope: !15891)
!15900 = !DILocation(line: 0, scope: !15897)
!15901 = !DILocation(line: 0, scope: !14760, inlinedAt: !15902)
!15902 = distinct !DILocation(line: 906, column: 2, scope: !15897)
!15903 = !DILocation(line: 55, column: 2, scope: !14769, inlinedAt: !15904)
!15904 = distinct !DILocation(line: 145, column: 10, scope: !14760, inlinedAt: !15902)
!15905 = !DILocation(line: 0, scope: !14769, inlinedAt: !15904)
!15906 = !DILocation(line: 907, column: 16, scope: !15907)
!15907 = distinct !DILexicalBlock(scope: !15908, file: !2683, line: 906, column: 26)
!15908 = distinct !DILexicalBlock(scope: !15897, file: !2683, line: 906, column: 2)
!15909 = !DILocation(line: 909, column: 7, scope: !15907)
!15910 = !DILocation(line: 0, scope: !14929, inlinedAt: !15911)
!15911 = distinct !DILocation(line: 912, column: 5, scope: !15912)
!15912 = distinct !DILexicalBlock(scope: !15913, file: !2683, line: 911, column: 63)
!15913 = distinct !DILexicalBlock(scope: !15914, file: !2683, line: 911, column: 8)
!15914 = distinct !DILexicalBlock(scope: !15915, file: !2683, line: 909, column: 19)
!15915 = distinct !DILexicalBlock(scope: !15907, file: !2683, line: 909, column: 7)
!15916 = !DILocation(line: 266, column: 28, scope: !14929, inlinedAt: !15911)
!15917 = !DILocation(line: 0, scope: !14937, inlinedAt: !15918)
!15918 = distinct !DILocation(line: 268, column: 3, scope: !14941, inlinedAt: !15911)
!15919 = !DILocation(line: 234, column: 2, scope: !14937, inlinedAt: !15918)
!15920 = !DILocation(line: 913, column: 23, scope: !15912)
!15921 = !DILocation(line: 0, scope: !14946, inlinedAt: !15922)
!15922 = distinct !DILocation(line: 914, column: 5, scope: !15912)
!15923 = !DILocation(line: 252, column: 28, scope: !14946, inlinedAt: !15922)
!15924 = !DILocation(line: 0, scope: !14953, inlinedAt: !15925)
!15925 = distinct !DILocation(line: 254, column: 3, scope: !14957, inlinedAt: !15922)
!15926 = !DILocation(line: 0, scope: !14960, inlinedAt: !15927)
!15927 = distinct !DILocation(line: 229, column: 2, scope: !14953, inlinedAt: !15925)
!15928 = !DILocation(line: 188, column: 2, scope: !14970, inlinedAt: !15927)
!15929 = !DILocation(line: 188, column: 2, scope: !14972, inlinedAt: !15927)
!15930 = !DILocation(line: 0, scope: !14970, inlinedAt: !15927)
!15931 = !DILocation(line: 189, column: 7, scope: !14975, inlinedAt: !15927)
!15932 = !DILocation(line: 189, column: 35, scope: !14975, inlinedAt: !15927)
!15933 = !DILocation(line: 189, column: 7, scope: !14976, inlinedAt: !15927)
!15934 = !DILocation(line: 190, column: 4, scope: !14980, inlinedAt: !15927)
!15935 = !DILocation(line: 192, column: 4, scope: !14980, inlinedAt: !15927)
!15936 = distinct !{!15936, !15928, !15937}
!15937 = !DILocation(line: 194, column: 2, scope: !14970, inlinedAt: !15927)
!15938 = !DILocation(line: 196, column: 2, scope: !14960, inlinedAt: !15927)
!15939 = !DILocation(line: 197, column: 1, scope: !14960, inlinedAt: !15927)
!15940 = !DILocation(line: 918, column: 4, scope: !15914)
!15941 = !DILocation(line: 919, column: 3, scope: !15914)
!15942 = !DILocation(line: 920, column: 22, scope: !15943)
!15943 = distinct !DILexicalBlock(scope: !15915, file: !2683, line: 919, column: 10)
!15944 = !DILocation(line: 0, scope: !14787, inlinedAt: !15945)
!15945 = distinct !DILocation(line: 906, column: 2, scope: !15908)
!15946 = !DILocation(line: 0, scope: !14795, inlinedAt: !15947)
!15947 = distinct !DILocation(line: 215, column: 2, scope: !14787, inlinedAt: !15945)
!15948 = !DILocation(line: 95, column: 2, scope: !14795, inlinedAt: !15947)
!15949 = !DILocation(line: 926, column: 2, scope: !15891)
!15950 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2683, file: !2683, line: 929, type: !15951, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15953)
!15951 = !DISubroutineType(types: !15952)
!15952 = !{null, !2578, !108}
!15953 = !{!15954, !15955, !15956}
!15954 = !DILocalVariable(name: "thread", arg: 1, scope: !15950, file: !2683, line: 929, type: !2578)
!15955 = !DILocalVariable(name: "prio", arg: 2, scope: !15950, file: !2683, line: 929, type: !108)
!15956 = !DILocalVariable(name: "need_sched", scope: !15950, file: !2683, line: 931, type: !422)
!15957 = !DILocation(line: 0, scope: !15950)
!15958 = !DILocation(line: 931, column: 20, scope: !15950)
!15959 = !DILocation(line: 935, column: 17, scope: !15960)
!15960 = distinct !DILexicalBlock(scope: !15950, file: !2683, line: 935, column: 6)
!15961 = !DILocation(line: 935, column: 20, scope: !15960)
!15962 = !DILocation(line: 935, column: 35, scope: !15960)
!15963 = !DILocation(line: 935, column: 48, scope: !15960)
!15964 = !DILocation(line: 935, column: 6, scope: !15950)
!15965 = !DILocation(line: 936, column: 3, scope: !15966)
!15966 = distinct !DILexicalBlock(scope: !15960, file: !2683, line: 935, column: 55)
!15967 = !DILocation(line: 937, column: 2, scope: !15966)
!15968 = !DILocation(line: 938, column: 1, scope: !15950)
!15969 = distinct !DISubprogram(name: "k_sched_lock", scope: !2683, file: !2683, line: 987, type: !3435, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15970)
!15970 = !{!15971, !15973}
!15971 = !DILocalVariable(name: "__i", scope: !15972, file: !2683, line: 989, type: !14752)
!15972 = distinct !DILexicalBlock(scope: !15969, file: !2683, line: 989, column: 2)
!15973 = !DILocalVariable(name: "__key", scope: !15972, file: !2683, line: 989, type: !14752)
!15974 = !DILocation(line: 0, scope: !15972)
!15975 = !DILocation(line: 0, scope: !14760, inlinedAt: !15976)
!15976 = distinct !DILocation(line: 989, column: 2, scope: !15972)
!15977 = !DILocation(line: 55, column: 2, scope: !14769, inlinedAt: !15978)
!15978 = distinct !DILocation(line: 145, column: 10, scope: !14760, inlinedAt: !15976)
!15979 = !DILocation(line: 0, scope: !14769, inlinedAt: !15978)
!15980 = !DILocation(line: 992, column: 3, scope: !15981)
!15981 = distinct !DILexicalBlock(scope: !15982, file: !2683, line: 989, column: 26)
!15982 = distinct !DILexicalBlock(scope: !15972, file: !2683, line: 989, column: 2)
!15983 = !DILocation(line: 0, scope: !14787, inlinedAt: !15984)
!15984 = distinct !DILocation(line: 989, column: 2, scope: !15982)
!15985 = !DILocation(line: 0, scope: !14795, inlinedAt: !15986)
!15986 = distinct !DILocation(line: 215, column: 2, scope: !14787, inlinedAt: !15984)
!15987 = !DILocation(line: 95, column: 2, scope: !14795, inlinedAt: !15986)
!15988 = !DILocation(line: 994, column: 1, scope: !15969)
!15989 = distinct !DISubprogram(name: "z_sched_lock", scope: !14037, file: !14037, line: 251, type: !3435, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !437)
!15990 = !DILocation(line: 256, column: 4, scope: !15989)
!15991 = !DILocation(line: 256, column: 19, scope: !15989)
!15992 = !DILocation(line: 256, column: 2, scope: !15989)
!15993 = !DILocation(line: 258, column: 2, scope: !15994)
!15994 = distinct !DILexicalBlock(scope: !15989, file: !14037, line: 258, column: 2)
!15995 = !{i64 2154292392}
!15996 = !DILocation(line: 259, column: 1, scope: !15989)
!15997 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2683, file: !2683, line: 996, type: !3435, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !15998)
!15998 = !{!15999, !16001}
!15999 = !DILocalVariable(name: "__i", scope: !16000, file: !2683, line: 998, type: !14752)
!16000 = distinct !DILexicalBlock(scope: !15997, file: !2683, line: 998, column: 2)
!16001 = !DILocalVariable(name: "__key", scope: !16000, file: !2683, line: 998, type: !14752)
!16002 = !DILocation(line: 0, scope: !16000)
!16003 = !DILocation(line: 0, scope: !14760, inlinedAt: !16004)
!16004 = distinct !DILocation(line: 998, column: 2, scope: !16000)
!16005 = !DILocation(line: 55, column: 2, scope: !14769, inlinedAt: !16006)
!16006 = distinct !DILocation(line: 145, column: 10, scope: !14760, inlinedAt: !16004)
!16007 = !DILocation(line: 0, scope: !14769, inlinedAt: !16006)
!16008 = !DILocation(line: 1002, column: 5, scope: !16009)
!16009 = distinct !DILexicalBlock(scope: !16010, file: !2683, line: 998, column: 26)
!16010 = distinct !DILexicalBlock(scope: !16000, file: !2683, line: 998, column: 2)
!16011 = !DILocation(line: 1002, column: 20, scope: !16009)
!16012 = !DILocation(line: 1002, column: 3, scope: !16009)
!16013 = !DILocation(line: 1003, column: 3, scope: !16009)
!16014 = !DILocation(line: 0, scope: !14787, inlinedAt: !16015)
!16015 = distinct !DILocation(line: 998, column: 2, scope: !16010)
!16016 = !DILocation(line: 0, scope: !14795, inlinedAt: !16017)
!16017 = distinct !DILocation(line: 215, column: 2, scope: !14787, inlinedAt: !16015)
!16018 = !DILocation(line: 95, column: 2, scope: !14795, inlinedAt: !16017)
!16019 = !DILocation(line: 1011, column: 2, scope: !15997)
!16020 = !DILocation(line: 1012, column: 1, scope: !15997)
!16021 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2683, file: !2683, line: 1014, type: !15068, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !437)
!16022 = !DILocation(line: 1028, column: 25, scope: !16021)
!16023 = !DILocation(line: 1028, column: 2, scope: !16021)
!16024 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2683, file: !2683, line: 1155, type: !16025, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16027)
!16025 = !DISubroutineType(types: !16026)
!16026 = !{!422, !2607, !2607}
!16027 = !{!16028, !16029, !16030, !16031, !16032}
!16028 = !DILocalVariable(name: "a", arg: 1, scope: !16024, file: !2683, line: 1155, type: !2607)
!16029 = !DILocalVariable(name: "b", arg: 2, scope: !16024, file: !2683, line: 1155, type: !2607)
!16030 = !DILocalVariable(name: "thread_a", scope: !16024, file: !2683, line: 1157, type: !2578)
!16031 = !DILocalVariable(name: "thread_b", scope: !16024, file: !2683, line: 1157, type: !2578)
!16032 = !DILocalVariable(name: "cmp", scope: !16024, file: !2683, line: 1158, type: !220)
!16033 = !DILocation(line: 0, scope: !16024)
!16034 = !DILocation(line: 1160, column: 13, scope: !16024)
!16035 = !DILocation(line: 1161, column: 13, scope: !16024)
!16036 = !DILocation(line: 1163, column: 8, scope: !16024)
!16037 = !DILocation(line: 1165, column: 10, scope: !16038)
!16038 = distinct !DILexicalBlock(scope: !16024, file: !2683, line: 1165, column: 6)
!16039 = !DILocation(line: 1165, column: 6, scope: !16024)
!16040 = !DILocation(line: 1167, column: 17, scope: !16041)
!16041 = distinct !DILexicalBlock(scope: !16038, file: !2683, line: 1167, column: 13)
!16042 = !DILocation(line: 1167, column: 13, scope: !16038)
!16043 = !DILocation(line: 1170, column: 25, scope: !16044)
!16044 = distinct !DILexicalBlock(scope: !16041, file: !2683, line: 1169, column: 9)
!16045 = !DILocation(line: 1170, column: 52, scope: !16044)
!16046 = !DILocation(line: 1170, column: 35, scope: !16044)
!16047 = !DILocation(line: 1170, column: 3, scope: !16044)
!16048 = !DILocation(line: 0, scope: !16038)
!16049 = !DILocation(line: 1173, column: 1, scope: !16024)
!16050 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2683, file: !2683, line: 1175, type: !16051, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16066)
!16051 = !DISubroutineType(types: !16052)
!16052 = !{null, !16053, !2578}
!16053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16054, size: 32)
!16054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16055, line: 37, size: 128, elements: !16056)
!16055 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16056 = !{!16057, !16065}
!16057 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16054, file: !16055, line: 38, baseType: !16058, size: 96)
!16058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !674, line: 83, size: 96, elements: !16059)
!16059 = !{!16060, !16061, !16064}
!16060 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16058, file: !674, line: 84, baseType: !2607, size: 32)
!16061 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16058, file: !674, line: 85, baseType: !16062, size: 32, offset: 32)
!16062 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !674, line: 81, baseType: !16063)
!16063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16025, size: 32)
!16064 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16058, file: !674, line: 86, baseType: !108, size: 32, offset: 64)
!16065 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16054, file: !16055, line: 39, baseType: !108, size: 32, offset: 96)
!16066 = !{!16067, !16068, !16069, !16070, !16079}
!16067 = !DILocalVariable(name: "pq", arg: 1, scope: !16050, file: !2683, line: 1175, type: !16053)
!16068 = !DILocalVariable(name: "thread", arg: 2, scope: !16050, file: !2683, line: 1175, type: !2578)
!16069 = !DILocalVariable(name: "t", scope: !16050, file: !2683, line: 1177, type: !2578)
!16070 = !DILocalVariable(name: "__f", scope: !16071, file: !2683, line: 1190, type: !16074)
!16071 = distinct !DILexicalBlock(scope: !16072, file: !2683, line: 1190, column: 3)
!16072 = distinct !DILexicalBlock(scope: !16073, file: !2683, line: 1189, column: 27)
!16073 = distinct !DILexicalBlock(scope: !16050, file: !2683, line: 1189, column: 6)
!16074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !674, line: 155, size: 96, elements: !16075)
!16075 = !{!16076, !16077, !16078}
!16076 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16074, file: !674, line: 156, baseType: !2678, size: 32)
!16077 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16074, file: !674, line: 157, baseType: !209, size: 32, offset: 32)
!16078 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16074, file: !674, line: 158, baseType: !220, size: 32, offset: 64)
!16079 = !DILocalVariable(name: "n", scope: !16080, file: !2683, line: 1190, type: !2607)
!16080 = distinct !DILexicalBlock(scope: !16081, file: !2683, line: 1190, column: 3)
!16081 = distinct !DILexicalBlock(scope: !16071, file: !2683, line: 1190, column: 3)
!16082 = !DILocation(line: 0, scope: !16050)
!16083 = !DILocation(line: 1181, column: 31, scope: !16050)
!16084 = !DILocation(line: 1181, column: 45, scope: !16050)
!16085 = !DILocation(line: 1181, column: 15, scope: !16050)
!16086 = !DILocation(line: 1181, column: 25, scope: !16050)
!16087 = !DILocation(line: 1189, column: 11, scope: !16073)
!16088 = !DILocation(line: 1189, column: 7, scope: !16073)
!16089 = !DILocation(line: 1189, column: 6, scope: !16050)
!16090 = !DILocation(line: 1190, column: 3, scope: !16071)
!16091 = !DILocation(line: 1190, column: 3, scope: !16080)
!16092 = !DILocation(line: 0, scope: !16080)
!16093 = !DILocation(line: 1190, column: 3, scope: !16081)
!16094 = !DILocation(line: 1193, column: 2, scope: !16072)
!16095 = !DILocation(line: 1191, column: 42, scope: !16096)
!16096 = distinct !DILexicalBlock(scope: !16081, file: !2683, line: 1190, column: 54)
!16097 = !DILocation(line: 1191, column: 12, scope: !16096)
!16098 = !DILocation(line: 1191, column: 22, scope: !16096)
!16099 = distinct !{!16099, !16090, !16100}
!16100 = !DILocation(line: 1192, column: 3, scope: !16071)
!16101 = !DILocation(line: 1195, column: 17, scope: !16050)
!16102 = !DILocation(line: 1195, column: 37, scope: !16050)
!16103 = !DILocation(line: 1195, column: 2, scope: !16050)
!16104 = !DILocation(line: 1196, column: 1, scope: !16050)
!16105 = !DISubprogram(name: "z_rb_foreach_next", scope: !674, file: !674, line: 176, type: !16106, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16106 = !DISubroutineType(types: !16107)
!16107 = !{!2607, !16108, !16109}
!16108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16058, size: 32)
!16109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16074, size: 32)
!16110 = !DISubprogram(name: "rb_insert", scope: !674, file: !674, line: 105, type: !16111, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16111 = !DISubroutineType(types: !16112)
!16112 = !{null, !16108, !2607}
!16113 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2683, file: !2683, line: 1198, type: !16051, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16114)
!16114 = !{!16115, !16116}
!16115 = !DILocalVariable(name: "pq", arg: 1, scope: !16113, file: !2683, line: 1198, type: !16053)
!16116 = !DILocalVariable(name: "thread", arg: 2, scope: !16113, file: !2683, line: 1198, type: !2578)
!16117 = !DILocation(line: 0, scope: !16113)
!16118 = !DILocation(line: 1202, column: 17, scope: !16113)
!16119 = !DILocation(line: 1202, column: 37, scope: !16113)
!16120 = !DILocation(line: 1202, column: 2, scope: !16113)
!16121 = !DILocation(line: 1204, column: 16, scope: !16122)
!16122 = distinct !DILexicalBlock(scope: !16113, file: !2683, line: 1204, column: 6)
!16123 = !DILocation(line: 1204, column: 7, scope: !16122)
!16124 = !DILocation(line: 1204, column: 6, scope: !16113)
!16125 = !DILocation(line: 1205, column: 7, scope: !16126)
!16126 = distinct !DILexicalBlock(scope: !16122, file: !2683, line: 1204, column: 22)
!16127 = !DILocation(line: 1205, column: 22, scope: !16126)
!16128 = !DILocation(line: 1206, column: 2, scope: !16126)
!16129 = !DILocation(line: 1207, column: 1, scope: !16113)
!16130 = !DISubprogram(name: "rb_remove", scope: !674, file: !674, line: 110, type: !16111, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16131 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2683, file: !2683, line: 1209, type: !16132, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16134)
!16132 = !DISubroutineType(types: !16133)
!16133 = !{!2578, !16053}
!16134 = !{!16135, !16136, !16137}
!16135 = !DILocalVariable(name: "pq", arg: 1, scope: !16131, file: !2683, line: 1209, type: !16053)
!16136 = !DILocalVariable(name: "thread", scope: !16131, file: !2683, line: 1211, type: !2578)
!16137 = !DILocalVariable(name: "n", scope: !16131, file: !2683, line: 1212, type: !2607)
!16138 = !DILocation(line: 0, scope: !16131)
!16139 = !DILocation(line: 1212, column: 37, scope: !16131)
!16140 = !DILocation(line: 1212, column: 21, scope: !16131)
!16141 = !DILocation(line: 1217, column: 2, scope: !16131)
!16142 = distinct !DISubprogram(name: "rb_get_min", scope: !674, file: !674, line: 115, type: !16143, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16145)
!16143 = !DISubroutineType(types: !16144)
!16144 = !{!2607, !16108}
!16145 = !{!16146}
!16146 = !DILocalVariable(name: "tree", arg: 1, scope: !16142, file: !674, line: 115, type: !16108)
!16147 = !DILocation(line: 0, scope: !16142)
!16148 = !DILocation(line: 117, column: 9, scope: !16142)
!16149 = !DILocation(line: 117, column: 2, scope: !16142)
!16150 = !DISubprogram(name: "z_rb_get_minmax", scope: !674, file: !674, line: 100, type: !16151, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16151 = !DISubroutineType(types: !16152)
!16152 = !{!2607, !16108, !164}
!16153 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2683, file: !2683, line: 1246, type: !16154, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16164)
!16154 = !DISubroutineType(types: !16155)
!16155 = !{!2578, !16156}
!16156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16157, size: 32)
!16157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16055, line: 53, size: 2080, elements: !16158)
!16158 = !{!16159, !16163}
!16159 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16157, file: !16055, line: 54, baseType: !16160, size: 2048)
!16160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2614, size: 2048, elements: !16161)
!16161 = !{!16162}
!16162 = !DISubrange(count: 32)
!16163 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16157, file: !16055, line: 55, baseType: !32, size: 32, offset: 2048)
!16164 = !{!16165, !16166, !16167, !16168}
!16165 = !DILocalVariable(name: "pq", arg: 1, scope: !16153, file: !2683, line: 1246, type: !16156)
!16166 = !DILocalVariable(name: "thread", scope: !16153, file: !2683, line: 1252, type: !2578)
!16167 = !DILocalVariable(name: "l", scope: !16153, file: !2683, line: 1253, type: !14963)
!16168 = !DILocalVariable(name: "n", scope: !16153, file: !2683, line: 1254, type: !2679)
!16169 = !DILocation(line: 0, scope: !16153)
!16170 = !DILocation(line: 1248, column: 11, scope: !16171)
!16171 = distinct !DILexicalBlock(scope: !16153, file: !2683, line: 1248, column: 6)
!16172 = !DILocation(line: 1248, column: 7, scope: !16171)
!16173 = !DILocation(line: 1248, column: 6, scope: !16153)
!16174 = !DILocation(line: 1253, column: 31, scope: !16153)
!16175 = !DILocation(line: 1253, column: 20, scope: !16153)
!16176 = !DILocation(line: 1254, column: 19, scope: !16153)
!16177 = !DILocation(line: 1260, column: 1, scope: !16153)
!16178 = distinct !DISubprogram(name: "z_unpend_all", scope: !2683, file: !2683, line: 1262, type: !16179, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16181)
!16179 = !DISubroutineType(types: !16180)
!16180 = !{!108, !2609}
!16181 = !{!16182, !16183, !16184}
!16182 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16178, file: !2683, line: 1262, type: !2609)
!16183 = !DILocalVariable(name: "need_sched", scope: !16178, file: !2683, line: 1264, type: !108)
!16184 = !DILocalVariable(name: "thread", scope: !16178, file: !2683, line: 1265, type: !2578)
!16185 = !DILocation(line: 0, scope: !16178)
!16186 = !DILocation(line: 1267, column: 19, scope: !16178)
!16187 = !DILocation(line: 1267, column: 41, scope: !16178)
!16188 = !DILocation(line: 1267, column: 2, scope: !16178)
!16189 = !DILocation(line: 1268, column: 3, scope: !16190)
!16190 = distinct !DILexicalBlock(scope: !16178, file: !2683, line: 1267, column: 50)
!16191 = !DILocation(line: 1269, column: 3, scope: !16190)
!16192 = distinct !{!16192, !16188, !16193}
!16193 = !DILocation(line: 1271, column: 2, scope: !16178)
!16194 = !DILocation(line: 1273, column: 2, scope: !16178)
!16195 = distinct !DISubprogram(name: "z_waitq_head", scope: !14363, file: !14363, line: 52, type: !15811, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16196)
!16196 = !{!16197}
!16197 = !DILocalVariable(name: "w", arg: 1, scope: !16195, file: !14363, line: 52, type: !2609)
!16198 = !DILocation(line: 0, scope: !16195)
!16199 = !DILocation(line: 54, column: 52, scope: !16195)
!16200 = !DILocation(line: 54, column: 28, scope: !16195)
!16201 = !DILocation(line: 54, column: 9, scope: !16195)
!16202 = !DILocation(line: 54, column: 2, scope: !16195)
!16203 = distinct !DISubprogram(name: "init_ready_q", scope: !2683, file: !2683, line: 1276, type: !16204, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16211)
!16204 = !DISubroutineType(types: !16205)
!16205 = !{null, !16206}
!16206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16207, size: 32)
!16207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !363, line: 83, size: 96, elements: !16208)
!16208 = !{!16209, !16210}
!16209 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16207, file: !363, line: 86, baseType: !2578, size: 32)
!16210 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16207, file: !363, line: 90, baseType: !2614, size: 64, offset: 32)
!16211 = !{!16212}
!16212 = !DILocalVariable(name: "rq", arg: 1, scope: !16203, file: !2683, line: 1276, type: !16206)
!16213 = !DILocation(line: 0, scope: !16203)
!16214 = !DILocation(line: 1289, column: 22, scope: !16203)
!16215 = !DILocation(line: 1289, column: 2, scope: !16203)
!16216 = !DILocation(line: 1291, column: 1, scope: !16203)
!16217 = distinct !DISubprogram(name: "sys_dlist_init", scope: !367, file: !367, line: 197, type: !16218, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16220)
!16218 = !DISubroutineType(types: !16219)
!16219 = !{null, !14963}
!16220 = !{!16221}
!16221 = !DILocalVariable(name: "list", arg: 1, scope: !16217, file: !367, line: 197, type: !14963)
!16222 = !DILocation(line: 0, scope: !16217)
!16223 = !DILocation(line: 199, column: 8, scope: !16217)
!16224 = !DILocation(line: 199, column: 13, scope: !16217)
!16225 = !DILocation(line: 200, column: 8, scope: !16217)
!16226 = !DILocation(line: 200, column: 13, scope: !16217)
!16227 = !DILocation(line: 201, column: 1, scope: !16217)
!16228 = distinct !DISubprogram(name: "z_sched_init", scope: !2683, file: !2683, line: 1293, type: !3435, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !437)
!16229 = !DILocation(line: 1302, column: 2, scope: !16228)
!16230 = !DILocation(line: 1306, column: 2, scope: !16228)
!16231 = !DILocation(line: 1309, column: 1, scope: !16228)
!16232 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2683, file: !2683, line: 1311, type: !16233, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16236)
!16233 = !DISubroutineType(types: !16234)
!16234 = !{!108, !16235}
!16235 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !649, line: 347, baseType: !2578)
!16236 = !{!16237}
!16237 = !DILocalVariable(name: "thread", arg: 1, scope: !16232, file: !2683, line: 1311, type: !16235)
!16238 = !DILocation(line: 0, scope: !16232)
!16239 = !DILocation(line: 1313, column: 22, scope: !16232)
!16240 = !DILocation(line: 1313, column: 9, scope: !16232)
!16241 = !DILocation(line: 1313, column: 2, scope: !16232)
!16242 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2683, file: !2683, line: 1325, type: !16243, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16245)
!16243 = !DISubroutineType(types: !16244)
!16244 = !{null, !16235, !108}
!16245 = !{!16246, !16247, !16248}
!16246 = !DILocalVariable(name: "thread", arg: 1, scope: !16242, file: !2683, line: 1325, type: !16235)
!16247 = !DILocalVariable(name: "prio", arg: 2, scope: !16242, file: !2683, line: 1325, type: !108)
!16248 = !DILocalVariable(name: "th", scope: !16242, file: !2683, line: 1334, type: !2578)
!16249 = !DILocation(line: 0, scope: !16242)
!16250 = !DILocation(line: 1336, column: 2, scope: !16242)
!16251 = !DILocation(line: 1337, column: 1, scope: !16242)
!16252 = distinct !DISubprogram(name: "k_can_yield", scope: !2683, file: !2683, line: 1384, type: !8102, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !437)
!16253 = !DILocation(line: 1386, column: 11, scope: !16252)
!16254 = !DILocation(line: 1386, column: 29, scope: !16252)
!16255 = !DILocation(line: 1386, column: 32, scope: !16252)
!16256 = !DILocation(line: 1386, column: 46, scope: !16252)
!16257 = !DILocation(line: 1387, column: 28, scope: !16252)
!16258 = !DILocation(line: 1387, column: 4, scope: !16252)
!16259 = !DILocation(line: 1386, column: 2, scope: !16252)
!16260 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !359, file: !359, line: 989, type: !8102, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !437)
!16261 = !DILocation(line: 993, column: 10, scope: !16260)
!16262 = !DILocation(line: 993, column: 2, scope: !16260)
!16263 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2683, file: !2683, line: 1390, type: !3435, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16264)
!16264 = !{!16265}
!16265 = !DILocalVariable(name: "key", scope: !16263, file: !2683, line: 1396, type: !14752)
!16266 = !DILocation(line: 0, scope: !14760, inlinedAt: !16267)
!16267 = distinct !DILocation(line: 1396, column: 25, scope: !16263)
!16268 = !DILocation(line: 55, column: 2, scope: !14769, inlinedAt: !16269)
!16269 = distinct !DILocation(line: 145, column: 10, scope: !14760, inlinedAt: !16267)
!16270 = !DILocation(line: 0, scope: !14769, inlinedAt: !16269)
!16271 = !DILocation(line: 0, scope: !16263)
!16272 = !DILocation(line: 1400, column: 18, scope: !16273)
!16273 = distinct !DILexicalBlock(scope: !16274, file: !2683, line: 1399, column: 36)
!16274 = distinct !DILexicalBlock(scope: !16263, file: !2683, line: 1398, column: 6)
!16275 = !DILocation(line: 0, scope: !14929, inlinedAt: !16276)
!16276 = distinct !DILocation(line: 1400, column: 3, scope: !16273)
!16277 = !DILocation(line: 266, column: 15, scope: !14929, inlinedAt: !16276)
!16278 = !DILocation(line: 266, column: 28, scope: !14929, inlinedAt: !16276)
!16279 = !DILocation(line: 0, scope: !14937, inlinedAt: !16280)
!16280 = distinct !DILocation(line: 268, column: 3, scope: !14941, inlinedAt: !16276)
!16281 = !DILocation(line: 234, column: 2, scope: !14937, inlinedAt: !16280)
!16282 = !DILocation(line: 1402, column: 15, scope: !16263)
!16283 = !DILocation(line: 0, scope: !14946, inlinedAt: !16284)
!16284 = distinct !DILocation(line: 1402, column: 2, scope: !16263)
!16285 = !DILocation(line: 252, column: 15, scope: !14946, inlinedAt: !16284)
!16286 = !DILocation(line: 252, column: 28, scope: !14946, inlinedAt: !16284)
!16287 = !DILocation(line: 0, scope: !14953, inlinedAt: !16288)
!16288 = distinct !DILocation(line: 254, column: 3, scope: !14957, inlinedAt: !16284)
!16289 = !DILocation(line: 0, scope: !14960, inlinedAt: !16290)
!16290 = distinct !DILocation(line: 229, column: 2, scope: !14953, inlinedAt: !16288)
!16291 = !DILocation(line: 188, column: 2, scope: !14970, inlinedAt: !16290)
!16292 = !DILocation(line: 188, column: 2, scope: !14972, inlinedAt: !16290)
!16293 = !DILocation(line: 0, scope: !14970, inlinedAt: !16290)
!16294 = !DILocation(line: 189, column: 7, scope: !14975, inlinedAt: !16290)
!16295 = !DILocation(line: 189, column: 35, scope: !14975, inlinedAt: !16290)
!16296 = !DILocation(line: 189, column: 7, scope: !14976, inlinedAt: !16290)
!16297 = !DILocation(line: 191, column: 21, scope: !14980, inlinedAt: !16290)
!16298 = !DILocation(line: 190, column: 4, scope: !14980, inlinedAt: !16290)
!16299 = !DILocation(line: 192, column: 4, scope: !14980, inlinedAt: !16290)
!16300 = distinct !{!16300, !16291, !16301}
!16301 = !DILocation(line: 194, column: 2, scope: !14970, inlinedAt: !16290)
!16302 = !DILocation(line: 196, column: 37, scope: !14960, inlinedAt: !16290)
!16303 = !DILocation(line: 196, column: 2, scope: !14960, inlinedAt: !16290)
!16304 = !DILocation(line: 197, column: 1, scope: !14960, inlinedAt: !16290)
!16305 = !DILocation(line: 1403, column: 2, scope: !16263)
!16306 = !DILocation(line: 0, scope: !15371, inlinedAt: !16307)
!16307 = distinct !DILocation(line: 1404, column: 2, scope: !16263)
!16308 = !DILocation(line: 196, column: 9, scope: !15371, inlinedAt: !16307)
!16309 = !DILocation(line: 1405, column: 1, scope: !16263)
!16310 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2683, file: !2683, line: 1459, type: !16311, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16313)
!16311 = !DISubroutineType(types: !16312)
!16312 = !{!220, !15551}
!16313 = !{!16314, !16315, !16316}
!16314 = !DILocalVariable(name: "timeout", arg: 1, scope: !16310, file: !2683, line: 1459, type: !15551)
!16315 = !DILocalVariable(name: "ticks", scope: !16310, file: !2683, line: 1461, type: !109)
!16316 = !DILocalVariable(name: "ret", scope: !16310, file: !2683, line: 1480, type: !220)
!16317 = !DILocation(line: 0, scope: !16310)
!16318 = !DILocation(line: 1468, column: 6, scope: !16319)
!16319 = distinct !DILexicalBlock(scope: !16310, file: !2683, line: 1468, column: 6)
!16320 = !DILocation(line: 1468, column: 6, scope: !16310)
!16321 = !DILocation(line: 1469, column: 20, scope: !16322)
!16322 = distinct !DILexicalBlock(scope: !16319, file: !2683, line: 1468, column: 40)
!16323 = !DILocation(line: 1469, column: 3, scope: !16322)
!16324 = !DILocation(line: 1473, column: 3, scope: !16322)
!16325 = !DILocation(line: 1478, column: 10, scope: !16310)
!16326 = !DILocation(line: 1480, column: 16, scope: !16310)
!16327 = !DILocation(line: 1485, column: 1, scope: !16310)
!16328 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3831, file: !3831, line: 310, type: !16329, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16331)
!16329 = !DISubroutineType(types: !16330)
!16330 = !{null, !16235}
!16331 = !{!16332}
!16332 = !DILocalVariable(name: "thread", arg: 1, scope: !16328, file: !3831, line: 310, type: !16235)
!16333 = !DILocation(line: 0, scope: !16328)
!16334 = !DILocation(line: 319, column: 2, scope: !16335)
!16335 = distinct !DILexicalBlock(scope: !16328, file: !3831, line: 319, column: 2)
!16336 = !{i64 2154210781}
!16337 = !DILocation(line: 320, column: 2, scope: !16328)
!16338 = !DILocation(line: 321, column: 1, scope: !16328)
!16339 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2683, file: !2683, line: 1415, type: !16340, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16342)
!16340 = !DISubroutineType(types: !16341)
!16341 = !{!220, !109}
!16342 = !{!16343, !16344, !16345, !16346}
!16343 = !DILocalVariable(name: "ticks", arg: 1, scope: !16339, file: !2683, line: 1415, type: !109)
!16344 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16339, file: !2683, line: 1418, type: !113)
!16345 = !DILocalVariable(name: "timeout", scope: !16339, file: !2683, line: 1430, type: !15551)
!16346 = !DILocalVariable(name: "key", scope: !16339, file: !2683, line: 1437, type: !14752)
!16347 = !DILocation(line: 0, scope: !16339)
!16348 = !DILocation(line: 1425, column: 12, scope: !16349)
!16349 = distinct !DILexicalBlock(scope: !16339, file: !2683, line: 1425, column: 6)
!16350 = !DILocation(line: 1425, column: 6, scope: !16339)
!16351 = !DILocation(line: 1426, column: 3, scope: !16352)
!16352 = distinct !DILexicalBlock(scope: !16349, file: !2683, line: 1425, column: 18)
!16353 = !DILocation(line: 1427, column: 3, scope: !16352)
!16354 = !DILocation(line: 1431, column: 24, scope: !16355)
!16355 = distinct !DILexicalBlock(scope: !16339, file: !2683, line: 1431, column: 6)
!16356 = !DILocation(line: 1431, column: 6, scope: !16339)
!16357 = !DILocation(line: 1432, column: 35, scope: !16358)
!16358 = distinct !DILexicalBlock(scope: !16355, file: !2683, line: 1431, column: 30)
!16359 = !DILocation(line: 1432, column: 27, scope: !16358)
!16360 = !DILocation(line: 1433, column: 2, scope: !16358)
!16361 = !DILocation(line: 1434, column: 27, scope: !16362)
!16362 = distinct !DILexicalBlock(scope: !16355, file: !2683, line: 1433, column: 9)
!16363 = !DILocation(line: 0, scope: !16355)
!16364 = !DILocation(line: 0, scope: !14760, inlinedAt: !16365)
!16365 = distinct !DILocation(line: 1437, column: 25, scope: !16339)
!16366 = !DILocation(line: 55, column: 2, scope: !14769, inlinedAt: !16367)
!16367 = distinct !DILocation(line: 145, column: 10, scope: !14760, inlinedAt: !16365)
!16368 = !DILocation(line: 0, scope: !14769, inlinedAt: !16367)
!16369 = !DILocation(line: 1440, column: 20, scope: !16339)
!16370 = !DILocation(line: 1440, column: 18, scope: !16339)
!16371 = !DILocation(line: 1442, column: 2, scope: !16339)
!16372 = !DILocation(line: 1443, column: 23, scope: !16339)
!16373 = !DILocation(line: 1443, column: 2, scope: !16339)
!16374 = !DILocation(line: 1444, column: 29, scope: !16339)
!16375 = !DILocation(line: 1444, column: 2, scope: !16339)
!16376 = !DILocation(line: 0, scope: !15371, inlinedAt: !16377)
!16377 = distinct !DILocation(line: 1446, column: 8, scope: !16339)
!16378 = !DILocation(line: 196, column: 9, scope: !15371, inlinedAt: !16377)
!16379 = !DILocation(line: 1450, column: 10, scope: !16339)
!16380 = !DILocation(line: 1450, column: 45, scope: !16339)
!16381 = !DILocation(line: 1450, column: 43, scope: !16339)
!16382 = !DILocation(line: 1451, column: 6, scope: !16339)
!16383 = !DILocation(line: 1457, column: 1, scope: !16339)
!16384 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3798, file: !3798, line: 1103, type: !3799, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16385)
!16385 = !{!16386}
!16386 = !DILocalVariable(name: "t", arg: 1, scope: !16384, file: !3798, line: 1103, type: !114)
!16387 = !DILocation(line: 0, scope: !16384)
!16388 = !DILocation(line: 0, scope: !14807, inlinedAt: !16389)
!16389 = distinct !DILocation(line: 1106, column: 9, scope: !16384)
!16390 = !DILocation(line: 139, column: 13, scope: !16391, inlinedAt: !16389)
!16391 = distinct !DILexicalBlock(scope: !16392, file: !3798, line: 138, column: 10)
!16392 = distinct !DILexicalBlock(scope: !16393, file: !3798, line: 136, column: 7)
!16393 = distinct !DILexicalBlock(scope: !14828, file: !3798, line: 134, column: 17)
!16394 = !DILocation(line: 1106, column: 2, scope: !16384)
!16395 = distinct !DISubprogram(name: "k_yield", scope: !3831, file: !3831, line: 140, type: !3435, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !437)
!16396 = !DILocation(line: 148, column: 2, scope: !16397)
!16397 = distinct !DILexicalBlock(scope: !16395, file: !3831, line: 148, column: 2)
!16398 = !{i64 2154210101}
!16399 = !DILocation(line: 149, column: 2, scope: !16395)
!16400 = !DILocation(line: 150, column: 1, scope: !16395)
!16401 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2683, file: !2683, line: 1495, type: !16402, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16404)
!16402 = !DISubroutineType(types: !16403)
!16403 = !{!220, !108}
!16404 = !{!16405, !16406}
!16405 = !DILocalVariable(name: "us", arg: 1, scope: !16401, file: !2683, line: 1495, type: !108)
!16406 = !DILocalVariable(name: "ticks", scope: !16401, file: !2683, line: 1497, type: !220)
!16407 = !DILocation(line: 0, scope: !16401)
!16408 = !DILocation(line: 1501, column: 31, scope: !16401)
!16409 = !DILocation(line: 1501, column: 10, scope: !16401)
!16410 = !DILocation(line: 1502, column: 23, scope: !16401)
!16411 = !DILocation(line: 1502, column: 10, scope: !16401)
!16412 = !DILocation(line: 1506, column: 31, scope: !16401)
!16413 = !DILocation(line: 1506, column: 9, scope: !16401)
!16414 = !DILocation(line: 1506, column: 2, scope: !16401)
!16415 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3798, file: !3798, line: 571, type: !3799, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16416)
!16416 = !{!16417}
!16417 = !DILocalVariable(name: "t", arg: 1, scope: !16415, file: !3798, line: 571, type: !114)
!16418 = !DILocation(line: 0, scope: !16415)
!16419 = !DILocation(line: 0, scope: !14807, inlinedAt: !16420)
!16420 = distinct !DILocation(line: 574, column: 9, scope: !16415)
!16421 = !DILocation(line: 135, column: 5, scope: !16393, inlinedAt: !16420)
!16422 = !DILocation(line: 139, column: 13, scope: !16391, inlinedAt: !16420)
!16423 = !DILocation(line: 574, column: 2, scope: !16415)
!16424 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3798, file: !3798, line: 1187, type: !3799, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16425)
!16425 = !{!16426}
!16426 = !DILocalVariable(name: "t", arg: 1, scope: !16424, file: !3798, line: 1187, type: !114)
!16427 = !DILocation(line: 0, scope: !16424)
!16428 = !DILocation(line: 0, scope: !14807, inlinedAt: !16429)
!16429 = distinct !DILocation(line: 1190, column: 9, scope: !16424)
!16430 = !DILocation(line: 145, column: 13, scope: !16431, inlinedAt: !16429)
!16431 = distinct !DILexicalBlock(scope: !14825, file: !3798, line: 144, column: 10)
!16432 = !DILocation(line: 1190, column: 2, scope: !16424)
!16433 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2683, file: !2683, line: 1517, type: !16329, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16434)
!16434 = !{!16435}
!16435 = !DILocalVariable(name: "thread", arg: 1, scope: !16433, file: !2683, line: 1517, type: !16235)
!16436 = !DILocation(line: 0, scope: !16433)
!16437 = !DILocation(line: 1521, column: 6, scope: !16438)
!16438 = distinct !DILexicalBlock(scope: !16433, file: !2683, line: 1521, column: 6)
!16439 = !DILocation(line: 1521, column: 6, scope: !16433)
!16440 = !DILocation(line: 1525, column: 6, scope: !16441)
!16441 = distinct !DILexicalBlock(scope: !16433, file: !2683, line: 1525, column: 6)
!16442 = !DILocation(line: 1525, column: 37, scope: !16441)
!16443 = !DILocation(line: 1525, column: 6, scope: !16433)
!16444 = !DILocation(line: 1527, column: 20, scope: !16445)
!16445 = distinct !DILexicalBlock(scope: !16446, file: !2683, line: 1527, column: 7)
!16446 = distinct !DILexicalBlock(scope: !16441, file: !2683, line: 1525, column: 42)
!16447 = !DILocation(line: 1527, column: 33, scope: !16445)
!16448 = !DILocation(line: 1527, column: 7, scope: !16446)
!16449 = !DILocation(line: 1532, column: 2, scope: !16433)
!16450 = !DILocation(line: 1533, column: 2, scope: !16433)
!16451 = !DILocation(line: 1031, column: 3, scope: !15404, inlinedAt: !16452)
!16452 = distinct !DILocation(line: 48, column: 10, scope: !15408, inlinedAt: !16453)
!16453 = distinct !DILocation(line: 1537, column: 7, scope: !16454)
!16454 = distinct !DILexicalBlock(scope: !16433, file: !2683, line: 1537, column: 6)
!16455 = !DILocation(line: 0, scope: !15404, inlinedAt: !16452)
!16456 = !DILocation(line: 48, column: 9, scope: !15408, inlinedAt: !16453)
!16457 = !DILocation(line: 1537, column: 6, scope: !16433)
!16458 = !DILocation(line: 1538, column: 3, scope: !16459)
!16459 = distinct !DILexicalBlock(scope: !16454, file: !2683, line: 1537, column: 25)
!16460 = !DILocation(line: 1539, column: 2, scope: !16459)
!16461 = !DILocation(line: 1540, column: 1, scope: !16433)
!16462 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !14037, file: !14037, line: 101, type: !14878, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16463)
!16463 = !{!16464}
!16464 = !DILocalVariable(name: "thread", arg: 1, scope: !16462, file: !14037, line: 101, type: !2578)
!16465 = !DILocation(line: 0, scope: !16462)
!16466 = !DILocation(line: 103, column: 23, scope: !16462)
!16467 = !DILocation(line: 103, column: 36, scope: !16462)
!16468 = !DILocation(line: 103, column: 55, scope: !16462)
!16469 = !DILocation(line: 103, column: 2, scope: !16462)
!16470 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2683, file: !2683, line: 1567, type: !16471, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16473)
!16471 = !DISubroutineType(types: !16472)
!16472 = !{!16235}
!16473 = !{!16474}
!16474 = !DILocalVariable(name: "ret", scope: !16470, file: !2683, line: 1577, type: !16235)
!16475 = !DILocation(line: 1577, column: 30, scope: !16470)
!16476 = !DILocation(line: 0, scope: !16470)
!16477 = !DILocation(line: 1582, column: 2, scope: !16470)
!16478 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2683, file: !2683, line: 1593, type: !8391, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !437)
!16479 = !DILocation(line: 1031, column: 3, scope: !15404, inlinedAt: !16480)
!16480 = distinct !DILocation(line: 48, column: 10, scope: !15408, inlinedAt: !16481)
!16481 = distinct !DILocation(line: 1595, column: 10, scope: !16478)
!16482 = !DILocation(line: 0, scope: !15404, inlinedAt: !16480)
!16483 = !DILocation(line: 48, column: 9, scope: !15408, inlinedAt: !16481)
!16484 = !DILocation(line: 1595, column: 27, scope: !16478)
!16485 = !DILocation(line: 1595, column: 41, scope: !16478)
!16486 = !DILocation(line: 1595, column: 30, scope: !16478)
!16487 = !DILocation(line: 1595, column: 2, scope: !16478)
!16488 = distinct !DISubprogram(name: "z_thread_abort", scope: !2683, file: !2683, line: 1725, type: !14718, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16489)
!16489 = !{!16490, !16491}
!16490 = !DILocalVariable(name: "thread", arg: 1, scope: !16488, file: !2683, line: 1725, type: !2578)
!16491 = !DILocalVariable(name: "key", scope: !16488, file: !2683, line: 1727, type: !14752)
!16492 = !DILocation(line: 0, scope: !16488)
!16493 = !DILocation(line: 0, scope: !14760, inlinedAt: !16494)
!16494 = distinct !DILocation(line: 1727, column: 25, scope: !16488)
!16495 = !DILocation(line: 55, column: 2, scope: !14769, inlinedAt: !16496)
!16496 = distinct !DILocation(line: 145, column: 10, scope: !14760, inlinedAt: !16494)
!16497 = !DILocation(line: 0, scope: !14769, inlinedAt: !16496)
!16498 = !DILocation(line: 1729, column: 20, scope: !16499)
!16499 = distinct !DILexicalBlock(scope: !16488, file: !2683, line: 1729, column: 6)
!16500 = !DILocation(line: 1729, column: 33, scope: !16499)
!16501 = !DILocation(line: 1729, column: 48, scope: !16499)
!16502 = !DILocation(line: 1729, column: 6, scope: !16488)
!16503 = !DILocation(line: 0, scope: !14787, inlinedAt: !16504)
!16504 = distinct !DILocation(line: 1730, column: 3, scope: !16505)
!16505 = distinct !DILexicalBlock(scope: !16499, file: !2683, line: 1729, column: 54)
!16506 = !DILocation(line: 0, scope: !14795, inlinedAt: !16507)
!16507 = distinct !DILocation(line: 215, column: 2, scope: !14787, inlinedAt: !16504)
!16508 = !DILocation(line: 95, column: 2, scope: !14795, inlinedAt: !16507)
!16509 = !DILocation(line: 1732, column: 3, scope: !16510)
!16510 = distinct !DILexicalBlock(scope: !16505, file: !2683, line: 1732, column: 3)
!16511 = !{i64 2154946106, i64 2154946122, i64 2154946148, i64 2154946176, i64 2154946196}
!16512 = !DILocation(line: 1733, column: 3, scope: !16505)
!16513 = !DILocation(line: 1736, column: 20, scope: !16514)
!16514 = distinct !DILexicalBlock(scope: !16488, file: !2683, line: 1736, column: 6)
!16515 = !DILocation(line: 1736, column: 33, scope: !16514)
!16516 = !DILocation(line: 1736, column: 49, scope: !16514)
!16517 = !DILocation(line: 1736, column: 6, scope: !16488)
!16518 = !DILocation(line: 0, scope: !14787, inlinedAt: !16519)
!16519 = distinct !DILocation(line: 1737, column: 3, scope: !16520)
!16520 = distinct !DILexicalBlock(scope: !16514, file: !2683, line: 1736, column: 56)
!16521 = !DILocation(line: 0, scope: !14795, inlinedAt: !16522)
!16522 = distinct !DILocation(line: 215, column: 2, scope: !14787, inlinedAt: !16519)
!16523 = !DILocation(line: 95, column: 2, scope: !14795, inlinedAt: !16522)
!16524 = !DILocation(line: 1738, column: 3, scope: !16520)
!16525 = !DILocation(line: 1775, column: 2, scope: !16488)
!16526 = !DILocation(line: 1776, column: 16, scope: !16527)
!16527 = distinct !DILexicalBlock(scope: !16488, file: !2683, line: 1776, column: 6)
!16528 = !DILocation(line: 1776, column: 13, scope: !16527)
!16529 = !DILocation(line: 1776, column: 25, scope: !16527)
!16530 = !DILocation(line: 1031, column: 3, scope: !15404, inlinedAt: !16531)
!16531 = distinct !DILocation(line: 48, column: 10, scope: !15408, inlinedAt: !16532)
!16532 = distinct !DILocation(line: 1776, column: 29, scope: !16527)
!16533 = !DILocation(line: 0, scope: !15404, inlinedAt: !16531)
!16534 = !DILocation(line: 48, column: 9, scope: !15408, inlinedAt: !16532)
!16535 = !DILocation(line: 1776, column: 6, scope: !16488)
!16536 = !DILocation(line: 0, scope: !15371, inlinedAt: !16537)
!16537 = distinct !DILocation(line: 1777, column: 3, scope: !16538)
!16538 = distinct !DILexicalBlock(scope: !16527, file: !2683, line: 1776, column: 47)
!16539 = !DILocation(line: 196, column: 9, scope: !15371, inlinedAt: !16537)
!16540 = !DILocation(line: 1779, column: 2, scope: !16538)
!16541 = !DILocation(line: 0, scope: !14787, inlinedAt: !16542)
!16542 = distinct !DILocation(line: 1780, column: 2, scope: !16488)
!16543 = !DILocation(line: 0, scope: !14795, inlinedAt: !16544)
!16544 = distinct !DILocation(line: 215, column: 2, scope: !14787, inlinedAt: !16542)
!16545 = !DILocation(line: 95, column: 2, scope: !14795, inlinedAt: !16544)
!16546 = !DILocation(line: 1781, column: 1, scope: !16488)
!16547 = distinct !DISubprogram(name: "end_thread", scope: !2683, file: !2683, line: 1690, type: !14718, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16548)
!16548 = !{!16549}
!16549 = !DILocalVariable(name: "thread", arg: 1, scope: !16547, file: !2683, line: 1690, type: !2578)
!16550 = !DILocation(line: 0, scope: !16547)
!16551 = !DILocation(line: 1695, column: 20, scope: !16552)
!16552 = distinct !DILexicalBlock(scope: !16547, file: !2683, line: 1695, column: 6)
!16553 = !DILocation(line: 1695, column: 33, scope: !16552)
!16554 = !DILocation(line: 1695, column: 49, scope: !16552)
!16555 = !DILocation(line: 1695, column: 6, scope: !16547)
!16556 = !DILocation(line: 1697, column: 29, scope: !16557)
!16557 = distinct !DILexicalBlock(scope: !16552, file: !2683, line: 1695, column: 56)
!16558 = !DILocation(line: 1698, column: 7, scope: !16559)
!16559 = distinct !DILexicalBlock(scope: !16557, file: !2683, line: 1698, column: 7)
!16560 = !DILocation(line: 1698, column: 7, scope: !16557)
!16561 = !DILocation(line: 0, scope: !14929, inlinedAt: !16562)
!16562 = distinct !DILocation(line: 1699, column: 4, scope: !16563)
!16563 = distinct !DILexicalBlock(scope: !16559, file: !2683, line: 1698, column: 35)
!16564 = !DILocation(line: 266, column: 28, scope: !14929, inlinedAt: !16562)
!16565 = !DILocation(line: 0, scope: !14937, inlinedAt: !16566)
!16566 = distinct !DILocation(line: 268, column: 3, scope: !14941, inlinedAt: !16562)
!16567 = !DILocation(line: 234, column: 2, scope: !14937, inlinedAt: !16566)
!16568 = !DILocation(line: 1700, column: 3, scope: !16563)
!16569 = !DILocation(line: 1701, column: 20, scope: !16570)
!16570 = distinct !DILexicalBlock(scope: !16557, file: !2683, line: 1701, column: 7)
!16571 = !DILocation(line: 1701, column: 30, scope: !16570)
!16572 = !DILocation(line: 1701, column: 7, scope: !16557)
!16573 = !DILocation(line: 1702, column: 4, scope: !16574)
!16574 = distinct !DILexicalBlock(scope: !16570, file: !2683, line: 1701, column: 39)
!16575 = !DILocation(line: 1703, column: 3, scope: !16574)
!16576 = !DILocation(line: 1704, column: 9, scope: !16557)
!16577 = !DILocation(line: 1705, column: 23, scope: !16557)
!16578 = !DILocation(line: 1705, column: 3, scope: !16557)
!16579 = !DILocation(line: 1706, column: 3, scope: !16557)
!16580 = !DILocation(line: 1722, column: 2, scope: !16557)
!16581 = !DILocation(line: 1723, column: 1, scope: !16547)
!16582 = distinct !DISubprogram(name: "unpend_all", scope: !2683, file: !2683, line: 1674, type: !16583, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16585)
!16583 = !DISubroutineType(types: !16584)
!16584 = !{null, !2609}
!16585 = !{!16586, !16587}
!16586 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16582, file: !2683, line: 1674, type: !2609)
!16587 = !DILocalVariable(name: "thread", scope: !16582, file: !2683, line: 1676, type: !2578)
!16588 = !DILocation(line: 0, scope: !16582)
!16589 = !DILocation(line: 1678, column: 19, scope: !16582)
!16590 = !DILocation(line: 1678, column: 41, scope: !16582)
!16591 = !DILocation(line: 1678, column: 2, scope: !16582)
!16592 = !DILocation(line: 1679, column: 3, scope: !16593)
!16593 = distinct !DILexicalBlock(scope: !16582, file: !2683, line: 1678, column: 50)
!16594 = !DILocation(line: 1680, column: 9, scope: !16593)
!16595 = !DILocalVariable(name: "thread", arg: 1, scope: !16596, file: !14057, line: 65, type: !2578)
!16596 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14057, file: !14057, line: 65, type: !16597, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16599)
!16597 = !DISubroutineType(types: !16598)
!16598 = !{null, !2578, !32}
!16599 = !{!16595, !16600}
!16600 = !DILocalVariable(name: "value", arg: 2, scope: !16596, file: !14057, line: 65, type: !32)
!16601 = !DILocation(line: 0, scope: !16596, inlinedAt: !16602)
!16602 = distinct !DILocation(line: 1681, column: 3, scope: !16593)
!16603 = !DILocation(line: 67, column: 15, scope: !16596, inlinedAt: !16602)
!16604 = !DILocation(line: 67, column: 33, scope: !16596, inlinedAt: !16602)
!16605 = !DILocation(line: 1682, column: 3, scope: !16593)
!16606 = distinct !{!16606, !16591, !16607}
!16607 = !DILocation(line: 1683, column: 2, scope: !16582)
!16608 = !DILocation(line: 1684, column: 1, scope: !16582)
!16609 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2683, file: !2683, line: 1794, type: !16610, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16612)
!16610 = !DISubroutineType(types: !16611)
!16611 = !{!108, !2578, !15551}
!16612 = !{!16613, !16614, !16615, !16616}
!16613 = !DILocalVariable(name: "thread", arg: 1, scope: !16609, file: !2683, line: 1794, type: !2578)
!16614 = !DILocalVariable(name: "timeout", arg: 2, scope: !16609, file: !2683, line: 1794, type: !15551)
!16615 = !DILocalVariable(name: "key", scope: !16609, file: !2683, line: 1796, type: !14752)
!16616 = !DILocalVariable(name: "ret", scope: !16609, file: !2683, line: 1797, type: !108)
!16617 = !DILocation(line: 0, scope: !16609)
!16618 = !DILocation(line: 0, scope: !14760, inlinedAt: !16619)
!16619 = distinct !DILocation(line: 1796, column: 25, scope: !16609)
!16620 = !DILocation(line: 55, column: 2, scope: !14769, inlinedAt: !16621)
!16621 = distinct !DILocation(line: 145, column: 10, scope: !14760, inlinedAt: !16619)
!16622 = !DILocation(line: 0, scope: !14769, inlinedAt: !16621)
!16623 = !DILocation(line: 1801, column: 20, scope: !16624)
!16624 = distinct !DILexicalBlock(scope: !16609, file: !2683, line: 1801, column: 6)
!16625 = !DILocation(line: 1801, column: 33, scope: !16624)
!16626 = !DILocation(line: 1801, column: 49, scope: !16624)
!16627 = !DILocation(line: 1801, column: 6, scope: !16609)
!16628 = !DILocation(line: 1803, column: 13, scope: !16629)
!16629 = distinct !DILexicalBlock(scope: !16624, file: !2683, line: 1803, column: 13)
!16630 = !DILocation(line: 1803, column: 13, scope: !16624)
!16631 = !DILocation(line: 1805, column: 24, scope: !16632)
!16632 = distinct !DILexicalBlock(scope: !16629, file: !2683, line: 1805, column: 13)
!16633 = !DILocation(line: 1805, column: 21, scope: !16632)
!16634 = !DILocation(line: 1805, column: 34, scope: !16632)
!16635 = !DILocation(line: 1806, column: 20, scope: !16632)
!16636 = !DILocation(line: 1806, column: 44, scope: !16632)
!16637 = !DILocation(line: 1806, column: 30, scope: !16632)
!16638 = !DILocation(line: 1805, column: 13, scope: !16629)
!16639 = !DILocation(line: 1810, column: 42, scope: !16640)
!16640 = distinct !DILexicalBlock(scope: !16632, file: !2683, line: 1808, column: 9)
!16641 = !DILocation(line: 1810, column: 3, scope: !16640)
!16642 = !DILocation(line: 1811, column: 22, scope: !16640)
!16643 = !DILocation(line: 1811, column: 3, scope: !16640)
!16644 = !DILocation(line: 0, scope: !15371, inlinedAt: !16645)
!16645 = distinct !DILocation(line: 1814, column: 9, scope: !16640)
!16646 = !DILocation(line: 196, column: 9, scope: !15371, inlinedAt: !16645)
!16647 = !DILocation(line: 1817, column: 3, scope: !16640)
!16648 = !DILocation(line: 0, scope: !16624)
!16649 = !DILocation(line: 0, scope: !14787, inlinedAt: !16650)
!16650 = distinct !DILocation(line: 1822, column: 2, scope: !16609)
!16651 = !DILocation(line: 0, scope: !14795, inlinedAt: !16652)
!16652 = distinct !DILocation(line: 215, column: 2, scope: !14787, inlinedAt: !16650)
!16653 = !DILocation(line: 95, column: 2, scope: !14795, inlinedAt: !16652)
!16654 = !DILocation(line: 1823, column: 2, scope: !16609)
!16655 = !DILocation(line: 1824, column: 1, scope: !16609)
!16656 = distinct !DISubprogram(name: "z_sched_wake", scope: !2683, file: !2683, line: 1882, type: !16657, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16659)
!16657 = !DISubroutineType(types: !16658)
!16658 = !{!422, !2609, !108, !104}
!16659 = !{!16660, !16661, !16662, !16663, !16664, !16665, !16667}
!16660 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16656, file: !2683, line: 1882, type: !2609)
!16661 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16656, file: !2683, line: 1882, type: !108)
!16662 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16656, file: !2683, line: 1882, type: !104)
!16663 = !DILocalVariable(name: "thread", scope: !16656, file: !2683, line: 1884, type: !2578)
!16664 = !DILocalVariable(name: "ret", scope: !16656, file: !2683, line: 1885, type: !422)
!16665 = !DILocalVariable(name: "__i", scope: !16666, file: !2683, line: 1887, type: !14752)
!16666 = distinct !DILexicalBlock(scope: !16656, file: !2683, line: 1887, column: 2)
!16667 = !DILocalVariable(name: "__key", scope: !16666, file: !2683, line: 1887, type: !14752)
!16668 = !DILocation(line: 0, scope: !16656)
!16669 = !DILocation(line: 0, scope: !16666)
!16670 = !DILocation(line: 0, scope: !14760, inlinedAt: !16671)
!16671 = distinct !DILocation(line: 1887, column: 2, scope: !16666)
!16672 = !DILocation(line: 55, column: 2, scope: !14769, inlinedAt: !16673)
!16673 = distinct !DILocation(line: 145, column: 10, scope: !14760, inlinedAt: !16671)
!16674 = !DILocation(line: 0, scope: !14769, inlinedAt: !16673)
!16675 = !DILocation(line: 1888, column: 12, scope: !16676)
!16676 = distinct !DILexicalBlock(scope: !16677, file: !2683, line: 1887, column: 26)
!16677 = distinct !DILexicalBlock(scope: !16666, file: !2683, line: 1887, column: 2)
!16678 = !DILocation(line: 1890, column: 14, scope: !16679)
!16679 = distinct !DILexicalBlock(scope: !16676, file: !2683, line: 1890, column: 7)
!16680 = !DILocation(line: 1890, column: 7, scope: !16676)
!16681 = !DILocalVariable(name: "thread", arg: 1, scope: !16682, file: !16683, line: 134, type: !2578)
!16682 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16683, file: !16683, line: 134, type: !16684, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16686)
!16683 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16684 = !DISubroutineType(types: !16685)
!16685 = !{null, !2578, !32, !104}
!16686 = !{!16681, !16687, !16688}
!16687 = !DILocalVariable(name: "value", arg: 2, scope: !16682, file: !16683, line: 135, type: !32)
!16688 = !DILocalVariable(name: "data", arg: 3, scope: !16682, file: !16683, line: 136, type: !104)
!16689 = !DILocation(line: 0, scope: !16682, inlinedAt: !16690)
!16690 = distinct !DILocation(line: 1891, column: 4, scope: !16691)
!16691 = distinct !DILexicalBlock(scope: !16679, file: !2683, line: 1890, column: 23)
!16692 = !DILocation(line: 0, scope: !16596, inlinedAt: !16693)
!16693 = distinct !DILocation(line: 138, column: 2, scope: !16682, inlinedAt: !16690)
!16694 = !DILocation(line: 67, column: 15, scope: !16596, inlinedAt: !16693)
!16695 = !DILocation(line: 67, column: 33, scope: !16596, inlinedAt: !16693)
!16696 = !DILocation(line: 139, column: 15, scope: !16682, inlinedAt: !16690)
!16697 = !DILocation(line: 139, column: 25, scope: !16682, inlinedAt: !16690)
!16698 = !DILocation(line: 1894, column: 4, scope: !16691)
!16699 = !DILocation(line: 1895, column: 10, scope: !16691)
!16700 = !DILocation(line: 1896, column: 4, scope: !16691)
!16701 = !DILocation(line: 1898, column: 3, scope: !16691)
!16702 = !DILocation(line: 0, scope: !14787, inlinedAt: !16703)
!16703 = distinct !DILocation(line: 1887, column: 2, scope: !16677)
!16704 = !DILocation(line: 0, scope: !14795, inlinedAt: !16705)
!16705 = distinct !DILocation(line: 215, column: 2, scope: !14787, inlinedAt: !16703)
!16706 = !DILocation(line: 95, column: 2, scope: !14795, inlinedAt: !16705)
!16707 = !DILocation(line: 1901, column: 2, scope: !16656)
!16708 = distinct !DISubprogram(name: "z_sched_wait", scope: !2683, file: !2683, line: 1904, type: !16709, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !16712)
!16709 = !DISubroutineType(types: !16710)
!16710 = !{!108, !14763, !14752, !2609, !15551, !16711}
!16711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 32)
!16712 = !{!16713, !16714, !16715, !16716, !16717, !16718}
!16713 = !DILocalVariable(name: "lock", arg: 1, scope: !16708, file: !2683, line: 1904, type: !14763)
!16714 = !DILocalVariable(name: "key", arg: 2, scope: !16708, file: !2683, line: 1904, type: !14752)
!16715 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16708, file: !2683, line: 1905, type: !2609)
!16716 = !DILocalVariable(name: "timeout", arg: 4, scope: !16708, file: !2683, line: 1905, type: !15551)
!16717 = !DILocalVariable(name: "data", arg: 5, scope: !16708, file: !2683, line: 1905, type: !16711)
!16718 = !DILocalVariable(name: "ret", scope: !16708, file: !2683, line: 1907, type: !108)
!16719 = !DILocation(line: 0, scope: !16708)
!16720 = !DILocation(line: 1907, column: 12, scope: !16708)
!16721 = !DILocation(line: 1909, column: 11, scope: !16722)
!16722 = distinct !DILexicalBlock(scope: !16708, file: !2683, line: 1909, column: 6)
!16723 = !DILocation(line: 1909, column: 6, scope: !16708)
!16724 = !DILocation(line: 1910, column: 11, scope: !16725)
!16725 = distinct !DILexicalBlock(scope: !16722, file: !2683, line: 1909, column: 20)
!16726 = !DILocation(line: 1910, column: 26, scope: !16725)
!16727 = !DILocation(line: 1910, column: 9, scope: !16725)
!16728 = !DILocation(line: 1911, column: 2, scope: !16725)
!16729 = !DILocation(line: 1912, column: 2, scope: !16708)
!16730 = distinct !DISubprogram(name: "z_data_copy", scope: !16731, file: !16731, line: 22, type: !3435, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3418, retainedNodes: !437)
!16731 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16732 = !DILocation(line: 24, column: 2, scope: !16730)
!16733 = !DILocation(line: 27, column: 2, scope: !16730)
!16734 = !DILocation(line: 71, column: 1, scope: !16730)
!16735 = distinct !DISubprogram(name: "z_add_timeout", scope: !2720, file: !2720, line: 88, type: !16736, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !16742)
!16736 = !DISubroutineType(types: !16737)
!16737 = !{null, !2693, !2712, !16738}
!16738 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !16739)
!16739 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !16740)
!16740 = !{!16741}
!16741 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16739, file: !110, line: 66, baseType: !109, size: 64)
!16742 = !{!16743, !16744, !16745, !16746, !16752, !16753, !16756, !16759}
!16743 = !DILocalVariable(name: "to", arg: 1, scope: !16735, file: !2720, line: 88, type: !2693)
!16744 = !DILocalVariable(name: "fn", arg: 2, scope: !16735, file: !2720, line: 88, type: !2712)
!16745 = !DILocalVariable(name: "timeout", arg: 3, scope: !16735, file: !2720, line: 89, type: !16738)
!16746 = !DILocalVariable(name: "__i", scope: !16747, file: !2720, line: 102, type: !16748)
!16747 = distinct !DILexicalBlock(scope: !16735, file: !2720, line: 102, column: 2)
!16748 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !16749)
!16749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !16750)
!16750 = !{!16751}
!16751 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16749, file: !436, line: 33, baseType: !108, size: 32)
!16752 = !DILocalVariable(name: "__key", scope: !16747, file: !2720, line: 102, type: !16748)
!16753 = !DILocalVariable(name: "t", scope: !16754, file: !2720, line: 103, type: !2693)
!16754 = distinct !DILexicalBlock(scope: !16755, file: !2720, line: 102, column: 24)
!16755 = distinct !DILexicalBlock(scope: !16747, file: !2720, line: 102, column: 2)
!16756 = !DILocalVariable(name: "ticks", scope: !16757, file: !2720, line: 107, type: !109)
!16757 = distinct !DILexicalBlock(scope: !16758, file: !2720, line: 106, column: 39)
!16758 = distinct !DILexicalBlock(scope: !16754, file: !2720, line: 105, column: 7)
!16759 = !DILocalVariable(name: "next_time", scope: !16760, file: !2720, line: 137, type: !220)
!16760 = distinct !DILexicalBlock(scope: !16761, file: !2720, line: 127, column: 22)
!16761 = distinct !DILexicalBlock(scope: !16754, file: !2720, line: 127, column: 7)
!16762 = !DILocation(line: 0, scope: !16735)
!16763 = !DILocation(line: 91, column: 6, scope: !16764)
!16764 = distinct !DILexicalBlock(scope: !16735, file: !2720, line: 91, column: 6)
!16765 = !DILocation(line: 91, column: 6, scope: !16735)
!16766 = !DILocation(line: 100, column: 6, scope: !16735)
!16767 = !DILocation(line: 100, column: 9, scope: !16735)
!16768 = !DILocation(line: 0, scope: !16747)
!16769 = !DILocalVariable(name: "l", arg: 1, scope: !16770, file: !436, line: 136, type: !16773)
!16770 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !16771, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !16774)
!16771 = !DISubroutineType(types: !16772)
!16772 = !{!16748, !16773}
!16773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2721, size: 32)
!16774 = !{!16769, !16775}
!16775 = !DILocalVariable(name: "k", scope: !16770, file: !436, line: 139, type: !16748)
!16776 = !DILocation(line: 0, scope: !16770, inlinedAt: !16777)
!16777 = distinct !DILocation(line: 102, column: 2, scope: !16747)
!16778 = !DILocation(line: 55, column: 2, scope: !16779, inlinedAt: !16783)
!16779 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4109, file: !4109, line: 42, type: !4110, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !16780)
!16780 = !{!16781, !16782}
!16781 = !DILocalVariable(name: "key", scope: !16779, file: !4109, line: 44, type: !32)
!16782 = !DILocalVariable(name: "tmp", scope: !16779, file: !4109, line: 53, type: !32)
!16783 = distinct !DILocation(line: 145, column: 10, scope: !16770, inlinedAt: !16777)
!16784 = !{i64 2060119}
!16785 = !DILocation(line: 0, scope: !16779, inlinedAt: !16783)
!16786 = !DILocation(line: 106, column: 33, scope: !16758)
!16787 = !DILocation(line: 105, column: 7, scope: !16754)
!16788 = !DILocation(line: 107, column: 50, scope: !16757)
!16789 = !DILocation(line: 107, column: 48, scope: !16757)
!16790 = !DILocation(line: 0, scope: !16757)
!16791 = !DILocation(line: 109, column: 17, scope: !16757)
!16792 = !DILocation(line: 110, column: 3, scope: !16757)
!16793 = !DILocation(line: 111, column: 31, scope: !16794)
!16794 = distinct !DILexicalBlock(scope: !16758, file: !2720, line: 110, column: 10)
!16795 = !DILocation(line: 111, column: 37, scope: !16794)
!16796 = !DILocation(line: 111, column: 35, scope: !16794)
!16797 = !DILocation(line: 0, scope: !16758)
!16798 = !DILocation(line: 109, column: 8, scope: !16757)
!16799 = !DILocation(line: 109, column: 15, scope: !16757)
!16800 = !DILocation(line: 114, column: 12, scope: !16801)
!16801 = distinct !DILexicalBlock(scope: !16754, file: !2720, line: 114, column: 3)
!16802 = !DILocation(line: 0, scope: !16754)
!16803 = !DILocation(line: 114, column: 3, scope: !16801)
!16804 = !DILocation(line: 115, column: 24, scope: !16805)
!16805 = distinct !DILexicalBlock(scope: !16806, file: !2720, line: 115, column: 8)
!16806 = distinct !DILexicalBlock(scope: !16807, file: !2720, line: 114, column: 45)
!16807 = distinct !DILexicalBlock(scope: !16801, file: !2720, line: 114, column: 3)
!16808 = !DILocation(line: 115, column: 11, scope: !16805)
!16809 = !DILocation(line: 115, column: 18, scope: !16805)
!16810 = !DILocation(line: 115, column: 8, scope: !16806)
!16811 = !DILocation(line: 116, column: 15, scope: !16812)
!16812 = distinct !DILexicalBlock(scope: !16805, file: !2720, line: 115, column: 32)
!16813 = !DILocation(line: 117, column: 26, scope: !16812)
!16814 = !DILocation(line: 117, column: 37, scope: !16812)
!16815 = !DILocation(line: 117, column: 5, scope: !16812)
!16816 = !DILocation(line: 123, column: 7, scope: !16754)
!16817 = !DILocation(line: 120, column: 15, scope: !16806)
!16818 = !DILocation(line: 114, column: 36, scope: !16807)
!16819 = distinct !{!16819, !16803, !16820}
!16820 = !DILocation(line: 121, column: 3, scope: !16801)
!16821 = !DILocation(line: 124, column: 41, scope: !16822)
!16822 = distinct !DILexicalBlock(scope: !16823, file: !2720, line: 123, column: 18)
!16823 = distinct !DILexicalBlock(scope: !16754, file: !2720, line: 123, column: 7)
!16824 = !DILocation(line: 124, column: 4, scope: !16822)
!16825 = !DILocation(line: 125, column: 3, scope: !16822)
!16826 = !DILocation(line: 127, column: 13, scope: !16761)
!16827 = !DILocation(line: 127, column: 10, scope: !16761)
!16828 = !DILocation(line: 127, column: 7, scope: !16754)
!16829 = !DILocation(line: 137, column: 24, scope: !16760)
!16830 = !DILocation(line: 0, scope: !16760)
!16831 = !DILocation(line: 139, column: 18, scope: !16832)
!16832 = distinct !DILexicalBlock(scope: !16760, file: !2720, line: 139, column: 8)
!16833 = !DILocation(line: 139, column: 23, scope: !16832)
!16834 = !DILocation(line: 141, column: 5, scope: !16835)
!16835 = distinct !DILexicalBlock(scope: !16832, file: !2720, line: 140, column: 48)
!16836 = !DILocation(line: 142, column: 4, scope: !16835)
!16837 = !DILocalVariable(name: "key", arg: 2, scope: !16838, file: !436, line: 190, type: !16748)
!16838 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !16839, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !16841)
!16839 = !DISubroutineType(types: !16840)
!16840 = !{null, !16773, !16748}
!16841 = !{!16842, !16837}
!16842 = !DILocalVariable(name: "l", arg: 1, scope: !16838, file: !436, line: 189, type: !16773)
!16843 = !DILocation(line: 0, scope: !16838, inlinedAt: !16844)
!16844 = distinct !DILocation(line: 102, column: 2, scope: !16755)
!16845 = !DILocalVariable(name: "key", arg: 1, scope: !16846, file: !4109, line: 84, type: !32)
!16846 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4109, file: !4109, line: 84, type: !4122, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !16847)
!16847 = !{!16845}
!16848 = !DILocation(line: 0, scope: !16846, inlinedAt: !16849)
!16849 = distinct !DILocation(line: 215, column: 2, scope: !16838, inlinedAt: !16844)
!16850 = !DILocation(line: 95, column: 2, scope: !16846, inlinedAt: !16849)
!16851 = !{i64 2060936}
!16852 = !DILocation(line: 148, column: 1, scope: !16735)
!16853 = distinct !DISubprogram(name: "elapsed", scope: !2720, file: !2720, line: 62, type: !16854, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !437)
!16854 = !DISubroutineType(types: !16855)
!16855 = !{!220}
!16856 = !DILocation(line: 64, column: 9, scope: !16853)
!16857 = !DILocation(line: 64, column: 28, scope: !16853)
!16858 = !DILocation(line: 64, column: 35, scope: !16853)
!16859 = !DILocation(line: 64, column: 2, scope: !16853)
!16860 = distinct !DISubprogram(name: "first", scope: !2720, file: !2720, line: 39, type: !16861, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !16863)
!16861 = !DISubroutineType(types: !16862)
!16862 = !{!2693}
!16863 = !{!16864}
!16864 = !DILocalVariable(name: "t", scope: !16860, file: !2720, line: 41, type: !16865)
!16865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2697, size: 32)
!16866 = !DILocation(line: 41, column: 19, scope: !16860)
!16867 = !DILocation(line: 0, scope: !16860)
!16868 = !DILocation(line: 43, column: 9, scope: !16860)
!16869 = !DILocation(line: 43, column: 2, scope: !16860)
!16870 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !367, file: !367, line: 443, type: !16871, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !16873)
!16871 = !DISubroutineType(types: !16872)
!16872 = !{null, !16865, !16865}
!16873 = !{!16874, !16875, !16876}
!16874 = !DILocalVariable(name: "successor", arg: 1, scope: !16870, file: !367, line: 443, type: !16865)
!16875 = !DILocalVariable(name: "node", arg: 2, scope: !16870, file: !367, line: 443, type: !16865)
!16876 = !DILocalVariable(name: "prev", scope: !16870, file: !367, line: 445, type: !16877)
!16877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16865)
!16878 = !DILocation(line: 0, scope: !16870)
!16879 = !DILocation(line: 445, column: 39, scope: !16870)
!16880 = !DILocation(line: 447, column: 8, scope: !16870)
!16881 = !DILocation(line: 447, column: 13, scope: !16870)
!16882 = !DILocation(line: 448, column: 8, scope: !16870)
!16883 = !DILocation(line: 448, column: 13, scope: !16870)
!16884 = !DILocation(line: 449, column: 8, scope: !16870)
!16885 = !DILocation(line: 449, column: 13, scope: !16870)
!16886 = !DILocation(line: 450, column: 18, scope: !16870)
!16887 = !DILocation(line: 451, column: 1, scope: !16870)
!16888 = distinct !DISubprogram(name: "next", scope: !2720, file: !2720, line: 46, type: !16889, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !16891)
!16889 = !DISubroutineType(types: !16890)
!16890 = !{!2693, !2693}
!16891 = !{!16892, !16893}
!16892 = !DILocalVariable(name: "t", arg: 1, scope: !16888, file: !2720, line: 46, type: !2693)
!16893 = !DILocalVariable(name: "n", scope: !16888, file: !2720, line: 48, type: !16865)
!16894 = !DILocation(line: 0, scope: !16888)
!16895 = !DILocation(line: 48, column: 58, scope: !16888)
!16896 = !DILocation(line: 48, column: 19, scope: !16888)
!16897 = !DILocation(line: 50, column: 9, scope: !16888)
!16898 = !DILocation(line: 50, column: 2, scope: !16888)
!16899 = distinct !DISubprogram(name: "sys_dlist_append", scope: !367, file: !367, line: 404, type: !16900, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !16903)
!16900 = !DISubroutineType(types: !16901)
!16901 = !{null, !16902, !16865}
!16902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 32)
!16903 = !{!16904, !16905, !16906}
!16904 = !DILocalVariable(name: "list", arg: 1, scope: !16899, file: !367, line: 404, type: !16902)
!16905 = !DILocalVariable(name: "node", arg: 2, scope: !16899, file: !367, line: 404, type: !16865)
!16906 = !DILocalVariable(name: "tail", scope: !16899, file: !367, line: 406, type: !16877)
!16907 = !DILocation(line: 0, scope: !16899)
!16908 = !DILocation(line: 406, column: 34, scope: !16899)
!16909 = !DILocation(line: 408, column: 8, scope: !16899)
!16910 = !DILocation(line: 408, column: 13, scope: !16899)
!16911 = !DILocation(line: 409, column: 8, scope: !16899)
!16912 = !DILocation(line: 409, column: 13, scope: !16899)
!16913 = !DILocation(line: 411, column: 8, scope: !16899)
!16914 = !DILocation(line: 411, column: 13, scope: !16899)
!16915 = !DILocation(line: 412, column: 13, scope: !16899)
!16916 = !DILocation(line: 413, column: 1, scope: !16899)
!16917 = distinct !DISubprogram(name: "next_timeout", scope: !2720, file: !2720, line: 67, type: !16854, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !16918)
!16918 = !{!16919, !16920, !16921}
!16919 = !DILocalVariable(name: "to", scope: !16917, file: !2720, line: 69, type: !2693)
!16920 = !DILocalVariable(name: "ticks_elapsed", scope: !16917, file: !2720, line: 70, type: !220)
!16921 = !DILocalVariable(name: "ret", scope: !16917, file: !2720, line: 71, type: !220)
!16922 = !DILocation(line: 69, column: 24, scope: !16917)
!16923 = !DILocation(line: 0, scope: !16917)
!16924 = !DILocation(line: 70, column: 26, scope: !16917)
!16925 = !DILocation(line: 73, column: 10, scope: !16926)
!16926 = distinct !DILexicalBlock(scope: !16917, file: !2720, line: 73, column: 6)
!16927 = !DILocation(line: 73, column: 19, scope: !16926)
!16928 = !DILocation(line: 74, column: 21, scope: !16926)
!16929 = !DILocation(line: 74, column: 30, scope: !16926)
!16930 = !DILocation(line: 74, column: 28, scope: !16926)
!16931 = !DILocation(line: 74, column: 45, scope: !16926)
!16932 = !DILocation(line: 73, column: 6, scope: !16917)
!16933 = !DILocation(line: 77, column: 9, scope: !16934)
!16934 = distinct !DILexicalBlock(scope: !16926, file: !2720, line: 76, column: 9)
!16935 = !DILocation(line: 0, scope: !16926)
!16936 = !DILocation(line: 81, column: 20, scope: !16937)
!16937 = distinct !DILexicalBlock(scope: !16917, file: !2720, line: 81, column: 6)
!16938 = !DILocation(line: 81, column: 6, scope: !16937)
!16939 = !DILocation(line: 81, column: 32, scope: !16937)
!16940 = !DILocation(line: 85, column: 2, scope: !16917)
!16941 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !367, file: !367, line: 341, type: !16942, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !16944)
!16942 = !DISubroutineType(types: !16943)
!16943 = !{!16865, !16902, !16865}
!16944 = !{!16945, !16946}
!16945 = !DILocalVariable(name: "list", arg: 1, scope: !16941, file: !367, line: 341, type: !16902)
!16946 = !DILocalVariable(name: "node", arg: 2, scope: !16941, file: !367, line: 342, type: !16865)
!16947 = !DILocation(line: 0, scope: !16941)
!16948 = !DILocation(line: 344, column: 15, scope: !16941)
!16949 = !DILocation(line: 344, column: 9, scope: !16941)
!16950 = !DILocation(line: 344, column: 26, scope: !16941)
!16951 = !DILocation(line: 344, column: 2, scope: !16941)
!16952 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !367, file: !367, line: 325, type: !16942, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !16953)
!16953 = !{!16954, !16955}
!16954 = !DILocalVariable(name: "list", arg: 1, scope: !16952, file: !367, line: 325, type: !16902)
!16955 = !DILocalVariable(name: "node", arg: 2, scope: !16952, file: !367, line: 326, type: !16865)
!16956 = !DILocation(line: 0, scope: !16952)
!16957 = !DILocation(line: 328, column: 24, scope: !16952)
!16958 = !DILocation(line: 328, column: 15, scope: !16952)
!16959 = !DILocation(line: 328, column: 9, scope: !16952)
!16960 = !DILocation(line: 328, column: 45, scope: !16952)
!16961 = !DILocation(line: 328, column: 2, scope: !16952)
!16962 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !367, file: !367, line: 294, type: !16963, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !16965)
!16963 = !DISubroutineType(types: !16964)
!16964 = !{!16865, !16902}
!16965 = !{!16966}
!16966 = !DILocalVariable(name: "list", arg: 1, scope: !16962, file: !367, line: 294, type: !16902)
!16967 = !DILocation(line: 0, scope: !16962)
!16968 = !DILocation(line: 296, column: 9, scope: !16962)
!16969 = !DILocation(line: 296, column: 2, scope: !16962)
!16970 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !367, file: !367, line: 266, type: !16971, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !16973)
!16971 = !DISubroutineType(types: !16972)
!16972 = !{!422, !16902}
!16973 = !{!16974}
!16974 = !DILocalVariable(name: "list", arg: 1, scope: !16970, file: !367, line: 266, type: !16902)
!16975 = !DILocation(line: 0, scope: !16970)
!16976 = !DILocation(line: 268, column: 15, scope: !16970)
!16977 = !DILocation(line: 268, column: 20, scope: !16970)
!16978 = !DILocation(line: 268, column: 2, scope: !16970)
!16979 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2720, file: !2720, line: 150, type: !16980, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !16982)
!16980 = !DISubroutineType(types: !16981)
!16981 = !{!108, !2693}
!16982 = !{!16983, !16984, !16985, !16987}
!16983 = !DILocalVariable(name: "to", arg: 1, scope: !16979, file: !2720, line: 150, type: !2693)
!16984 = !DILocalVariable(name: "ret", scope: !16979, file: !2720, line: 152, type: !108)
!16985 = !DILocalVariable(name: "__i", scope: !16986, file: !2720, line: 154, type: !16748)
!16986 = distinct !DILexicalBlock(scope: !16979, file: !2720, line: 154, column: 2)
!16987 = !DILocalVariable(name: "__key", scope: !16986, file: !2720, line: 154, type: !16748)
!16988 = !DILocation(line: 0, scope: !16979)
!16989 = !DILocation(line: 0, scope: !16986)
!16990 = !DILocation(line: 0, scope: !16770, inlinedAt: !16991)
!16991 = distinct !DILocation(line: 154, column: 2, scope: !16986)
!16992 = !DILocation(line: 55, column: 2, scope: !16779, inlinedAt: !16993)
!16993 = distinct !DILocation(line: 145, column: 10, scope: !16770, inlinedAt: !16991)
!16994 = !DILocation(line: 0, scope: !16779, inlinedAt: !16993)
!16995 = !DILocation(line: 155, column: 7, scope: !16996)
!16996 = distinct !DILexicalBlock(scope: !16997, file: !2720, line: 155, column: 7)
!16997 = distinct !DILexicalBlock(scope: !16998, file: !2720, line: 154, column: 24)
!16998 = distinct !DILexicalBlock(scope: !16986, file: !2720, line: 154, column: 2)
!16999 = !DILocation(line: 155, column: 7, scope: !16997)
!17000 = !DILocation(line: 156, column: 4, scope: !17001)
!17001 = distinct !DILexicalBlock(scope: !16996, file: !2720, line: 155, column: 39)
!17002 = !DILocation(line: 158, column: 3, scope: !17001)
!17003 = !DILocation(line: 0, scope: !16838, inlinedAt: !17004)
!17004 = distinct !DILocation(line: 154, column: 2, scope: !16998)
!17005 = !DILocation(line: 0, scope: !16846, inlinedAt: !17006)
!17006 = distinct !DILocation(line: 215, column: 2, scope: !16838, inlinedAt: !17004)
!17007 = !DILocation(line: 95, column: 2, scope: !16846, inlinedAt: !17006)
!17008 = !DILocation(line: 161, column: 2, scope: !16979)
!17009 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !367, file: !367, line: 225, type: !17010, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !17014)
!17010 = !DISubroutineType(types: !17011)
!17011 = !{!422, !17012}
!17012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17013, size: 32)
!17013 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2697)
!17014 = !{!17015}
!17015 = !DILocalVariable(name: "node", arg: 1, scope: !17009, file: !367, line: 225, type: !17012)
!17016 = !DILocation(line: 0, scope: !17009)
!17017 = !DILocation(line: 227, column: 15, scope: !17009)
!17018 = !DILocation(line: 227, column: 20, scope: !17009)
!17019 = !DILocation(line: 227, column: 2, scope: !17009)
!17020 = distinct !DISubprogram(name: "remove_timeout", scope: !2720, file: !2720, line: 53, type: !2714, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !17021)
!17021 = !{!17022}
!17022 = !DILocalVariable(name: "t", arg: 1, scope: !17020, file: !2720, line: 53, type: !2693)
!17023 = !DILocation(line: 0, scope: !17020)
!17024 = !DILocation(line: 55, column: 6, scope: !17025)
!17025 = distinct !DILexicalBlock(scope: !17020, file: !2720, line: 55, column: 6)
!17026 = !DILocation(line: 55, column: 14, scope: !17025)
!17027 = !DILocation(line: 55, column: 6, scope: !17020)
!17028 = !DILocation(line: 56, column: 25, scope: !17029)
!17029 = distinct !DILexicalBlock(scope: !17025, file: !2720, line: 55, column: 23)
!17030 = !DILocation(line: 56, column: 12, scope: !17029)
!17031 = !DILocation(line: 56, column: 19, scope: !17029)
!17032 = !DILocation(line: 57, column: 2, scope: !17029)
!17033 = !DILocation(line: 59, column: 23, scope: !17020)
!17034 = !DILocation(line: 59, column: 2, scope: !17020)
!17035 = !DILocation(line: 60, column: 1, scope: !17020)
!17036 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !367, file: !367, line: 496, type: !17037, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !17039)
!17037 = !DISubroutineType(types: !17038)
!17038 = !{null, !16865}
!17039 = !{!17040, !17041, !17042}
!17040 = !DILocalVariable(name: "node", arg: 1, scope: !17036, file: !367, line: 496, type: !16865)
!17041 = !DILocalVariable(name: "prev", scope: !17036, file: !367, line: 498, type: !16877)
!17042 = !DILocalVariable(name: "next", scope: !17036, file: !367, line: 499, type: !16877)
!17043 = !DILocation(line: 0, scope: !17036)
!17044 = !DILocation(line: 498, column: 34, scope: !17036)
!17045 = !DILocation(line: 499, column: 34, scope: !17036)
!17046 = !DILocation(line: 501, column: 8, scope: !17036)
!17047 = !DILocation(line: 501, column: 13, scope: !17036)
!17048 = !DILocation(line: 502, column: 8, scope: !17036)
!17049 = !DILocation(line: 502, column: 13, scope: !17036)
!17050 = !DILocation(line: 503, column: 2, scope: !17036)
!17051 = !DILocation(line: 504, column: 1, scope: !17036)
!17052 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !17037, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !17053)
!17053 = !{!17054}
!17054 = !DILocalVariable(name: "node", arg: 1, scope: !17052, file: !367, line: 211, type: !16865)
!17055 = !DILocation(line: 0, scope: !17052)
!17056 = !DILocation(line: 213, column: 8, scope: !17052)
!17057 = !DILocation(line: 213, column: 13, scope: !17052)
!17058 = !DILocation(line: 214, column: 8, scope: !17052)
!17059 = !DILocation(line: 214, column: 13, scope: !17052)
!17060 = !DILocation(line: 215, column: 1, scope: !17052)
!17061 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2720, file: !2720, line: 183, type: !17062, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !17066)
!17062 = !DISubroutineType(types: !17063)
!17063 = !{!109, !17064}
!17064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17065, size: 32)
!17065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2694)
!17066 = !{!17067, !17068, !17069, !17071}
!17067 = !DILocalVariable(name: "timeout", arg: 1, scope: !17061, file: !2720, line: 183, type: !17064)
!17068 = !DILocalVariable(name: "ticks", scope: !17061, file: !2720, line: 185, type: !109)
!17069 = !DILocalVariable(name: "__i", scope: !17070, file: !2720, line: 187, type: !16748)
!17070 = distinct !DILexicalBlock(scope: !17061, file: !2720, line: 187, column: 2)
!17071 = !DILocalVariable(name: "__key", scope: !17070, file: !2720, line: 187, type: !16748)
!17072 = !DILocation(line: 0, scope: !17061)
!17073 = !DILocation(line: 0, scope: !17070)
!17074 = !DILocation(line: 0, scope: !16770, inlinedAt: !17075)
!17075 = distinct !DILocation(line: 187, column: 2, scope: !17070)
!17076 = !DILocation(line: 55, column: 2, scope: !16779, inlinedAt: !17077)
!17077 = distinct !DILocation(line: 145, column: 10, scope: !16770, inlinedAt: !17075)
!17078 = !DILocation(line: 0, scope: !16779, inlinedAt: !17077)
!17079 = !DILocation(line: 188, column: 11, scope: !17080)
!17080 = distinct !DILexicalBlock(scope: !17081, file: !2720, line: 187, column: 24)
!17081 = distinct !DILexicalBlock(scope: !17070, file: !2720, line: 187, column: 2)
!17082 = !DILocation(line: 0, scope: !16838, inlinedAt: !17083)
!17083 = distinct !DILocation(line: 187, column: 2, scope: !17081)
!17084 = !DILocation(line: 0, scope: !16846, inlinedAt: !17085)
!17085 = distinct !DILocation(line: 215, column: 2, scope: !16838, inlinedAt: !17083)
!17086 = !DILocation(line: 95, column: 2, scope: !16846, inlinedAt: !17085)
!17087 = !DILocation(line: 191, column: 2, scope: !17061)
!17088 = distinct !DISubprogram(name: "timeout_rem", scope: !2720, file: !2720, line: 165, type: !17062, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !17089)
!17089 = !{!17090, !17091, !17092}
!17090 = !DILocalVariable(name: "timeout", arg: 1, scope: !17088, file: !2720, line: 165, type: !17064)
!17091 = !DILocalVariable(name: "ticks", scope: !17088, file: !2720, line: 167, type: !109)
!17092 = !DILocalVariable(name: "t", scope: !17093, file: !2720, line: 173, type: !2693)
!17093 = distinct !DILexicalBlock(scope: !17088, file: !2720, line: 173, column: 2)
!17094 = !DILocation(line: 0, scope: !17088)
!17095 = !DILocation(line: 169, column: 6, scope: !17096)
!17096 = distinct !DILexicalBlock(scope: !17088, file: !2720, line: 169, column: 6)
!17097 = !DILocation(line: 169, column: 6, scope: !17088)
!17098 = !DILocation(line: 173, column: 28, scope: !17093)
!17099 = !DILocation(line: 0, scope: !17093)
!17100 = !DILocation(line: 173, column: 39, scope: !17101)
!17101 = distinct !DILexicalBlock(scope: !17093, file: !2720, line: 173, column: 2)
!17102 = !DILocation(line: 173, column: 2, scope: !17093)
!17103 = !DILocation(line: 174, column: 15, scope: !17104)
!17104 = distinct !DILexicalBlock(scope: !17101, file: !2720, line: 173, column: 61)
!17105 = !DILocation(line: 174, column: 9, scope: !17104)
!17106 = !DILocation(line: 175, column: 15, scope: !17107)
!17107 = distinct !DILexicalBlock(scope: !17104, file: !2720, line: 175, column: 7)
!17108 = !DILocation(line: 175, column: 7, scope: !17104)
!17109 = !DILocation(line: 173, column: 52, scope: !17101)
!17110 = distinct !{!17110, !17102, !17111}
!17111 = !DILocation(line: 178, column: 2, scope: !17093)
!17112 = !DILocation(line: 180, column: 17, scope: !17088)
!17113 = !DILocation(line: 180, column: 15, scope: !17088)
!17114 = !DILocation(line: 180, column: 2, scope: !17088)
!17115 = !DILocation(line: 181, column: 1, scope: !17088)
!17116 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14431, file: !14431, line: 35, type: !17117, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !17119)
!17117 = !DISubroutineType(types: !17118)
!17118 = !{!422, !17064}
!17119 = !{!17120}
!17120 = !DILocalVariable(name: "to", arg: 1, scope: !17116, file: !14431, line: 35, type: !17064)
!17121 = !DILocation(line: 0, scope: !17116)
!17122 = !DILocation(line: 37, column: 35, scope: !17116)
!17123 = !DILocation(line: 37, column: 10, scope: !17116)
!17124 = !DILocation(line: 37, column: 9, scope: !17116)
!17125 = !DILocation(line: 37, column: 2, scope: !17116)
!17126 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2720, file: !2720, line: 194, type: !17062, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !17127)
!17127 = !{!17128, !17129, !17130, !17132}
!17128 = !DILocalVariable(name: "timeout", arg: 1, scope: !17126, file: !2720, line: 194, type: !17064)
!17129 = !DILocalVariable(name: "ticks", scope: !17126, file: !2720, line: 196, type: !109)
!17130 = !DILocalVariable(name: "__i", scope: !17131, file: !2720, line: 198, type: !16748)
!17131 = distinct !DILexicalBlock(scope: !17126, file: !2720, line: 198, column: 2)
!17132 = !DILocalVariable(name: "__key", scope: !17131, file: !2720, line: 198, type: !16748)
!17133 = !DILocation(line: 0, scope: !17126)
!17134 = !DILocation(line: 0, scope: !17131)
!17135 = !DILocation(line: 0, scope: !16770, inlinedAt: !17136)
!17136 = distinct !DILocation(line: 198, column: 2, scope: !17131)
!17137 = !DILocation(line: 55, column: 2, scope: !16779, inlinedAt: !17138)
!17138 = distinct !DILocation(line: 145, column: 10, scope: !16770, inlinedAt: !17136)
!17139 = !DILocation(line: 0, scope: !16779, inlinedAt: !17138)
!17140 = !DILocation(line: 199, column: 11, scope: !17141)
!17141 = distinct !DILexicalBlock(scope: !17142, file: !2720, line: 198, column: 24)
!17142 = distinct !DILexicalBlock(scope: !17131, file: !2720, line: 198, column: 2)
!17143 = !DILocation(line: 199, column: 23, scope: !17141)
!17144 = !DILocation(line: 0, scope: !16838, inlinedAt: !17145)
!17145 = distinct !DILocation(line: 198, column: 2, scope: !17142)
!17146 = !DILocation(line: 0, scope: !16846, inlinedAt: !17147)
!17147 = distinct !DILocation(line: 215, column: 2, scope: !16838, inlinedAt: !17145)
!17148 = !DILocation(line: 95, column: 2, scope: !16846, inlinedAt: !17147)
!17149 = !DILocation(line: 199, column: 21, scope: !17141)
!17150 = !DILocation(line: 202, column: 2, scope: !17126)
!17151 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2720, file: !2720, line: 205, type: !16854, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !17152)
!17152 = !{!17153, !17154, !17156}
!17153 = !DILocalVariable(name: "ret", scope: !17151, file: !2720, line: 207, type: !220)
!17154 = !DILocalVariable(name: "__i", scope: !17155, file: !2720, line: 209, type: !16748)
!17155 = distinct !DILexicalBlock(scope: !17151, file: !2720, line: 209, column: 2)
!17156 = !DILocalVariable(name: "__key", scope: !17155, file: !2720, line: 209, type: !16748)
!17157 = !DILocation(line: 0, scope: !17151)
!17158 = !DILocation(line: 0, scope: !17155)
!17159 = !DILocation(line: 0, scope: !16770, inlinedAt: !17160)
!17160 = distinct !DILocation(line: 209, column: 2, scope: !17155)
!17161 = !DILocation(line: 55, column: 2, scope: !16779, inlinedAt: !17162)
!17162 = distinct !DILocation(line: 145, column: 10, scope: !16770, inlinedAt: !17160)
!17163 = !DILocation(line: 0, scope: !16779, inlinedAt: !17162)
!17164 = !DILocation(line: 210, column: 9, scope: !17165)
!17165 = distinct !DILexicalBlock(scope: !17166, file: !2720, line: 209, column: 24)
!17166 = distinct !DILexicalBlock(scope: !17155, file: !2720, line: 209, column: 2)
!17167 = !DILocation(line: 0, scope: !16838, inlinedAt: !17168)
!17168 = distinct !DILocation(line: 209, column: 2, scope: !17166)
!17169 = !DILocation(line: 0, scope: !16846, inlinedAt: !17170)
!17170 = distinct !DILocation(line: 215, column: 2, scope: !16838, inlinedAt: !17168)
!17171 = !DILocation(line: 95, column: 2, scope: !16846, inlinedAt: !17170)
!17172 = !DILocation(line: 212, column: 2, scope: !17151)
!17173 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2720, file: !2720, line: 215, type: !12004, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !17174)
!17174 = !{!17175, !17176, !17177, !17179, !17180, !17183, !17184}
!17175 = !DILocalVariable(name: "ticks", arg: 1, scope: !17173, file: !2720, line: 215, type: !220)
!17176 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17173, file: !2720, line: 215, type: !422)
!17177 = !DILocalVariable(name: "__i", scope: !17178, file: !2720, line: 217, type: !16748)
!17178 = distinct !DILexicalBlock(scope: !17173, file: !2720, line: 217, column: 2)
!17179 = !DILocalVariable(name: "__key", scope: !17178, file: !2720, line: 217, type: !16748)
!17180 = !DILocalVariable(name: "next_to", scope: !17181, file: !2720, line: 218, type: !108)
!17181 = distinct !DILexicalBlock(scope: !17182, file: !2720, line: 217, column: 24)
!17182 = distinct !DILexicalBlock(scope: !17178, file: !2720, line: 217, column: 2)
!17183 = !DILocalVariable(name: "sooner", scope: !17181, file: !2720, line: 219, type: !422)
!17184 = !DILocalVariable(name: "imminent", scope: !17181, file: !2720, line: 221, type: !422)
!17185 = !DILocation(line: 0, scope: !17173)
!17186 = !DILocation(line: 0, scope: !17178)
!17187 = !DILocation(line: 0, scope: !16770, inlinedAt: !17188)
!17188 = distinct !DILocation(line: 217, column: 2, scope: !17178)
!17189 = !DILocation(line: 55, column: 2, scope: !16779, inlinedAt: !17190)
!17190 = distinct !DILocation(line: 145, column: 10, scope: !16770, inlinedAt: !17188)
!17191 = !DILocation(line: 0, scope: !16779, inlinedAt: !17190)
!17192 = !DILocation(line: 218, column: 17, scope: !17181)
!17193 = !DILocation(line: 0, scope: !17181)
!17194 = !DILocation(line: 221, column: 27, scope: !17181)
!17195 = !DILocation(line: 233, column: 17, scope: !17196)
!17196 = distinct !DILexicalBlock(scope: !17181, file: !2720, line: 233, column: 7)
!17197 = !DILocation(line: 234, column: 26, scope: !17198)
!17198 = distinct !DILexicalBlock(scope: !17196, file: !2720, line: 233, column: 56)
!17199 = !DILocation(line: 234, column: 4, scope: !17198)
!17200 = !DILocation(line: 235, column: 3, scope: !17198)
!17201 = !DILocation(line: 0, scope: !16838, inlinedAt: !17202)
!17202 = distinct !DILocation(line: 217, column: 2, scope: !17182)
!17203 = !DILocation(line: 0, scope: !16846, inlinedAt: !17204)
!17204 = distinct !DILocation(line: 215, column: 2, scope: !16838, inlinedAt: !17202)
!17205 = !DILocation(line: 95, column: 2, scope: !16846, inlinedAt: !17204)
!17206 = !DILocation(line: 237, column: 1, scope: !17173)
!17207 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2720, file: !2720, line: 239, type: !17208, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !17210)
!17208 = !DISubroutineType(types: !17209)
!17209 = !{null, !220}
!17210 = !{!17211, !17212, !17213, !17215}
!17211 = !DILocalVariable(name: "ticks", arg: 1, scope: !17207, file: !2720, line: 239, type: !220)
!17212 = !DILocalVariable(name: "key", scope: !17207, file: !2720, line: 245, type: !16748)
!17213 = !DILocalVariable(name: "t", scope: !17214, file: !2720, line: 262, type: !2693)
!17214 = distinct !DILexicalBlock(scope: !17207, file: !2720, line: 261, column: 67)
!17215 = !DILocalVariable(name: "dt", scope: !17214, file: !2720, line: 263, type: !108)
!17216 = !DILocation(line: 0, scope: !17207)
!17217 = !DILocation(line: 242, column: 2, scope: !17207)
!17218 = !DILocation(line: 0, scope: !16770, inlinedAt: !17219)
!17219 = distinct !DILocation(line: 245, column: 25, scope: !17207)
!17220 = !DILocation(line: 55, column: 2, scope: !16779, inlinedAt: !17221)
!17221 = distinct !DILocation(line: 145, column: 10, scope: !16770, inlinedAt: !17219)
!17222 = !DILocation(line: 0, scope: !16779, inlinedAt: !17221)
!17223 = !DILocation(line: 261, column: 9, scope: !17207)
!17224 = !DILocation(line: 261, column: 17, scope: !17207)
!17225 = !DILocation(line: 261, column: 25, scope: !17207)
!17226 = !DILocation(line: 261, column: 37, scope: !17207)
!17227 = !DILocation(line: 261, column: 47, scope: !17207)
!17228 = !DILocation(line: 261, column: 44, scope: !17207)
!17229 = !DILocation(line: 261, column: 2, scope: !17207)
!17230 = !DILocation(line: 0, scope: !17214)
!17231 = !DILocation(line: 263, column: 12, scope: !17214)
!17232 = !DILocation(line: 265, column: 16, scope: !17214)
!17233 = !DILocation(line: 265, column: 13, scope: !17214)
!17234 = !DILocation(line: 266, column: 13, scope: !17214)
!17235 = !DILocation(line: 267, column: 3, scope: !17214)
!17236 = !DILocation(line: 0, scope: !16838, inlinedAt: !17237)
!17237 = distinct !DILocation(line: 269, column: 3, scope: !17214)
!17238 = !DILocation(line: 0, scope: !16846, inlinedAt: !17239)
!17239 = distinct !DILocation(line: 215, column: 2, scope: !16838, inlinedAt: !17237)
!17240 = !DILocation(line: 95, column: 2, scope: !16846, inlinedAt: !17239)
!17241 = !DILocation(line: 270, column: 6, scope: !17214)
!17242 = !DILocation(line: 270, column: 3, scope: !17214)
!17243 = !DILocation(line: 0, scope: !16770, inlinedAt: !17244)
!17244 = distinct !DILocation(line: 271, column: 9, scope: !17214)
!17245 = !DILocation(line: 55, column: 2, scope: !16779, inlinedAt: !17246)
!17246 = distinct !DILocation(line: 145, column: 10, scope: !16770, inlinedAt: !17244)
!17247 = !DILocation(line: 0, scope: !16779, inlinedAt: !17246)
!17248 = !DILocation(line: 272, column: 22, scope: !17214)
!17249 = distinct !{!17249, !17229, !17250}
!17250 = !DILocation(line: 273, column: 2, scope: !17207)
!17251 = !DILocation(line: 276, column: 19, scope: !17252)
!17252 = distinct !DILexicalBlock(scope: !17253, file: !2720, line: 275, column: 23)
!17253 = distinct !DILexicalBlock(scope: !17207, file: !2720, line: 275, column: 6)
!17254 = !DILocation(line: 277, column: 2, scope: !17252)
!17255 = !DILocation(line: 279, column: 15, scope: !17207)
!17256 = !DILocation(line: 279, column: 12, scope: !17207)
!17257 = !DILocation(line: 280, column: 21, scope: !17207)
!17258 = !DILocation(line: 282, column: 24, scope: !17207)
!17259 = !DILocation(line: 282, column: 2, scope: !17207)
!17260 = !DILocation(line: 0, scope: !16838, inlinedAt: !17261)
!17261 = distinct !DILocation(line: 284, column: 2, scope: !17207)
!17262 = !DILocation(line: 0, scope: !16846, inlinedAt: !17263)
!17263 = distinct !DILocation(line: 215, column: 2, scope: !16838, inlinedAt: !17261)
!17264 = !DILocation(line: 95, column: 2, scope: !16846, inlinedAt: !17263)
!17265 = !DILocation(line: 285, column: 1, scope: !17207)
!17266 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2720, file: !2720, line: 287, type: !17267, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !17269)
!17267 = !DISubroutineType(types: !17268)
!17268 = !{!111}
!17269 = !{!17270, !17271, !17273}
!17270 = !DILocalVariable(name: "t", scope: !17266, file: !2720, line: 289, type: !114)
!17271 = !DILocalVariable(name: "__i", scope: !17272, file: !2720, line: 291, type: !16748)
!17272 = distinct !DILexicalBlock(scope: !17266, file: !2720, line: 291, column: 2)
!17273 = !DILocalVariable(name: "__key", scope: !17272, file: !2720, line: 291, type: !16748)
!17274 = !DILocation(line: 0, scope: !17266)
!17275 = !DILocation(line: 0, scope: !17272)
!17276 = !DILocation(line: 0, scope: !16770, inlinedAt: !17277)
!17277 = distinct !DILocation(line: 291, column: 2, scope: !17272)
!17278 = !DILocation(line: 55, column: 2, scope: !16779, inlinedAt: !17279)
!17279 = distinct !DILocation(line: 145, column: 10, scope: !16770, inlinedAt: !17277)
!17280 = !DILocation(line: 0, scope: !16779, inlinedAt: !17279)
!17281 = !DILocation(line: 292, column: 7, scope: !17282)
!17282 = distinct !DILexicalBlock(scope: !17283, file: !2720, line: 291, column: 24)
!17283 = distinct !DILexicalBlock(scope: !17272, file: !2720, line: 291, column: 2)
!17284 = !DILocation(line: 292, column: 19, scope: !17282)
!17285 = !DILocation(line: 0, scope: !16838, inlinedAt: !17286)
!17286 = distinct !DILocation(line: 291, column: 2, scope: !17283)
!17287 = !DILocation(line: 0, scope: !16846, inlinedAt: !17288)
!17288 = distinct !DILocation(line: 215, column: 2, scope: !16838, inlinedAt: !17286)
!17289 = !DILocation(line: 95, column: 2, scope: !16846, inlinedAt: !17288)
!17290 = !DILocation(line: 292, column: 17, scope: !17282)
!17291 = !DILocation(line: 294, column: 2, scope: !17266)
!17292 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2720, file: !2720, line: 297, type: !7164, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !437)
!17293 = !DILocation(line: 300, column: 19, scope: !17292)
!17294 = !DILocation(line: 300, column: 9, scope: !17292)
!17295 = !DILocation(line: 300, column: 2, scope: !17292)
!17296 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2720, file: !2720, line: 306, type: !17267, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !437)
!17297 = !DILocation(line: 308, column: 9, scope: !17296)
!17298 = !DILocation(line: 308, column: 2, scope: !17296)
!17299 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2720, file: !2720, line: 319, type: !7174, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !17300)
!17300 = !{!17301, !17302, !17303, !17304}
!17301 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17299, file: !2720, line: 319, type: !113)
!17302 = !DILocalVariable(name: "start_cycles", scope: !17299, file: !2720, line: 328, type: !113)
!17303 = !DILocalVariable(name: "cycles_to_wait", scope: !17299, file: !2720, line: 331, type: !113)
!17304 = !DILocalVariable(name: "current_cycles", scope: !17305, file: !2720, line: 338, type: !113)
!17305 = distinct !DILexicalBlock(scope: !17306, file: !2720, line: 337, column: 11)
!17306 = distinct !DILexicalBlock(scope: !17307, file: !2720, line: 337, column: 2)
!17307 = distinct !DILexicalBlock(scope: !17299, file: !2720, line: 337, column: 2)
!17308 = !DILocation(line: 0, scope: !17299)
!17309 = !DILocation(line: 322, column: 19, scope: !17310)
!17310 = distinct !DILexicalBlock(scope: !17299, file: !2720, line: 322, column: 6)
!17311 = !DILocation(line: 322, column: 6, scope: !17299)
!17312 = !DILocation(line: 328, column: 26, scope: !17299)
!17313 = !DILocation(line: 333, column: 43, scope: !17299)
!17314 = !DILocation(line: 337, column: 2, scope: !17299)
!17315 = !DILocation(line: 338, column: 29, scope: !17305)
!17316 = !DILocation(line: 0, scope: !17305)
!17317 = !DILocation(line: 341, column: 23, scope: !17318)
!17318 = distinct !DILexicalBlock(scope: !17305, file: !2720, line: 341, column: 7)
!17319 = !DILocation(line: 341, column: 39, scope: !17318)
!17320 = !DILocation(line: 349, column: 1, scope: !17299)
!17321 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !359, file: !359, line: 1675, type: !7164, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !437)
!17322 = !DILocation(line: 1677, column: 9, scope: !17321)
!17323 = !DILocation(line: 1677, column: 2, scope: !17321)
!17324 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17325, file: !17325, line: 24, type: !7164, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !437)
!17325 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17326 = !DILocation(line: 26, column: 9, scope: !17324)
!17327 = !DILocation(line: 26, column: 2, scope: !17324)
!17328 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2720, file: !2720, line: 364, type: !17329, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !17331)
!17329 = !DISubroutineType(types: !17330)
!17330 = !{!114, !16738}
!17331 = !{!17332, !17333}
!17332 = !DILocalVariable(name: "timeout", arg: 1, scope: !17328, file: !2720, line: 364, type: !16738)
!17333 = !DILocalVariable(name: "dt", scope: !17328, file: !2720, line: 366, type: !109)
!17334 = !DILocation(line: 0, scope: !17328)
!17335 = !DILocation(line: 368, column: 6, scope: !17328)
!17336 = !DILocation(line: 371, column: 10, scope: !17337)
!17337 = distinct !DILexicalBlock(scope: !17338, file: !2720, line: 370, column: 47)
!17338 = distinct !DILexicalBlock(scope: !17339, file: !2720, line: 370, column: 13)
!17339 = distinct !DILexicalBlock(scope: !17328, file: !2720, line: 368, column: 6)
!17340 = !DILocation(line: 371, column: 3, scope: !17337)
!17341 = !DILocation(line: 376, column: 58, scope: !17342)
!17342 = distinct !DILexicalBlock(scope: !17343, file: !2720, line: 376, column: 7)
!17343 = distinct !DILexicalBlock(scope: !17338, file: !2720, line: 372, column: 9)
!17344 = !DILocation(line: 376, column: 7, scope: !17343)
!17345 = !DILocation(line: 376, column: 43, scope: !17342)
!17346 = !DILocation(line: 377, column: 4, scope: !17347)
!17347 = distinct !DILexicalBlock(scope: !17342, file: !2720, line: 376, column: 64)
!17348 = !DILocation(line: 379, column: 10, scope: !17343)
!17349 = !DILocation(line: 379, column: 33, scope: !17343)
!17350 = !DILocation(line: 379, column: 31, scope: !17343)
!17351 = !DILocation(line: 379, column: 3, scope: !17343)
!17352 = !DILocation(line: 0, scope: !17339)
!17353 = !DILocation(line: 381, column: 1, scope: !17328)
!17354 = distinct !DISubprogram(name: "z_timer_expiration_handler", scope: !2851, file: !2851, line: 23, type: !2756, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !17355)
!17355 = !{!17356, !17357, !17358, !17359, !17364}
!17356 = !DILocalVariable(name: "t", arg: 1, scope: !17354, file: !2851, line: 23, type: !2758)
!17357 = !DILocalVariable(name: "timer", scope: !17354, file: !2851, line: 25, type: !2732)
!17358 = !DILocalVariable(name: "thread", scope: !17354, file: !2851, line: 26, type: !2778)
!17359 = !DILocalVariable(name: "key", scope: !17354, file: !2851, line: 27, type: !17360)
!17360 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !17361)
!17361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !17362)
!17362 = !{!17363}
!17363 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17361, file: !436, line: 33, baseType: !108, size: 32)
!17364 = !DILocalVariable(name: "next", scope: !17365, file: !2851, line: 35, type: !2772)
!17365 = distinct !DILexicalBlock(scope: !17366, file: !2851, line: 34, column: 47)
!17366 = distinct !DILexicalBlock(scope: !17354, file: !2851, line: 33, column: 6)
!17367 = !DILocation(line: 0, scope: !17354)
!17368 = !DILocation(line: 25, column: 26, scope: !17354)
!17369 = !DILocalVariable(name: "l", arg: 1, scope: !17370, file: !436, line: 136, type: !17373)
!17370 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !17371, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !17374)
!17371 = !DISubroutineType(types: !17372)
!17372 = !{!17360, !17373}
!17373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 32)
!17374 = !{!17369, !17375}
!17375 = !DILocalVariable(name: "k", scope: !17370, file: !436, line: 139, type: !17360)
!17376 = !DILocation(line: 0, scope: !17370, inlinedAt: !17377)
!17377 = distinct !DILocation(line: 27, column: 25, scope: !17354)
!17378 = !DILocation(line: 55, column: 2, scope: !17379, inlinedAt: !17383)
!17379 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4109, file: !4109, line: 42, type: !4110, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !17380)
!17380 = !{!17381, !17382}
!17381 = !DILocalVariable(name: "key", scope: !17379, file: !4109, line: 44, type: !32)
!17382 = !DILocalVariable(name: "tmp", scope: !17379, file: !4109, line: 53, type: !32)
!17383 = distinct !DILocation(line: 145, column: 10, scope: !17370, inlinedAt: !17377)
!17384 = !{i64 2059170}
!17385 = !DILocation(line: 0, scope: !17379, inlinedAt: !17383)
!17386 = !DILocation(line: 33, column: 7, scope: !17366)
!17387 = !DILocation(line: 33, column: 46, scope: !17366)
!17388 = !DILocation(line: 0, scope: !17365)
!17389 = !DILocation(line: 49, column: 10, scope: !17365)
!17390 = !DILocation(line: 52, column: 3, scope: !17365)
!17391 = !DILocation(line: 54, column: 2, scope: !17365)
!17392 = !DILocation(line: 57, column: 9, scope: !17354)
!17393 = !DILocation(line: 57, column: 16, scope: !17354)
!17394 = !DILocation(line: 60, column: 13, scope: !17395)
!17395 = distinct !DILexicalBlock(scope: !17354, file: !2851, line: 60, column: 6)
!17396 = !DILocation(line: 60, column: 23, scope: !17395)
!17397 = !DILocation(line: 60, column: 6, scope: !17354)
!17398 = !DILocalVariable(name: "key", arg: 2, scope: !17399, file: !436, line: 190, type: !17360)
!17399 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !17400, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !17402)
!17400 = !DISubroutineType(types: !17401)
!17401 = !{null, !17373, !17360}
!17402 = !{!17403, !17398}
!17403 = !DILocalVariable(name: "l", arg: 1, scope: !17399, file: !436, line: 189, type: !17373)
!17404 = !DILocation(line: 0, scope: !17399, inlinedAt: !17405)
!17405 = distinct !DILocation(line: 62, column: 3, scope: !17406)
!17406 = distinct !DILexicalBlock(scope: !17395, file: !2851, line: 60, column: 32)
!17407 = !DILocalVariable(name: "key", arg: 1, scope: !17408, file: !4109, line: 84, type: !32)
!17408 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4109, file: !4109, line: 84, type: !4122, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !17409)
!17409 = !{!17407}
!17410 = !DILocation(line: 0, scope: !17408, inlinedAt: !17411)
!17411 = distinct !DILocation(line: 215, column: 2, scope: !17399, inlinedAt: !17405)
!17412 = !DILocation(line: 95, column: 2, scope: !17408, inlinedAt: !17411)
!17413 = !{i64 2059987}
!17414 = !DILocation(line: 63, column: 10, scope: !17406)
!17415 = !DILocation(line: 63, column: 3, scope: !17406)
!17416 = !DILocation(line: 0, scope: !17370, inlinedAt: !17417)
!17417 = distinct !DILocation(line: 64, column: 9, scope: !17406)
!17418 = !DILocation(line: 55, column: 2, scope: !17379, inlinedAt: !17419)
!17419 = distinct !DILocation(line: 145, column: 10, scope: !17370, inlinedAt: !17417)
!17420 = !DILocation(line: 0, scope: !17379, inlinedAt: !17419)
!17421 = !DILocation(line: 65, column: 2, scope: !17406)
!17422 = !DILocation(line: 72, column: 32, scope: !17354)
!17423 = !DILocation(line: 72, column: 11, scope: !17354)
!17424 = !DILocation(line: 74, column: 13, scope: !17425)
!17425 = distinct !DILexicalBlock(scope: !17354, file: !2851, line: 74, column: 6)
!17426 = !DILocation(line: 74, column: 6, scope: !17354)
!17427 = !DILocation(line: 0, scope: !17399, inlinedAt: !17428)
!17428 = distinct !DILocation(line: 75, column: 3, scope: !17429)
!17429 = distinct !DILexicalBlock(scope: !17425, file: !2851, line: 74, column: 22)
!17430 = !DILocation(line: 0, scope: !17408, inlinedAt: !17431)
!17431 = distinct !DILocation(line: 215, column: 2, scope: !17399, inlinedAt: !17428)
!17432 = !DILocation(line: 95, column: 2, scope: !17408, inlinedAt: !17431)
!17433 = !DILocation(line: 76, column: 3, scope: !17429)
!17434 = !DILocation(line: 79, column: 2, scope: !17354)
!17435 = !DILocalVariable(name: "thread", arg: 1, scope: !17436, file: !14057, line: 65, type: !2778)
!17436 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14057, file: !14057, line: 65, type: !17437, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !17439)
!17437 = !DISubroutineType(types: !17438)
!17438 = !{null, !2778, !32}
!17439 = !{!17435, !17440}
!17440 = !DILocalVariable(name: "value", arg: 2, scope: !17436, file: !14057, line: 65, type: !32)
!17441 = !DILocation(line: 0, scope: !17436, inlinedAt: !17442)
!17442 = distinct !DILocation(line: 81, column: 2, scope: !17354)
!17443 = !DILocation(line: 67, column: 15, scope: !17436, inlinedAt: !17442)
!17444 = !DILocation(line: 67, column: 33, scope: !17436, inlinedAt: !17442)
!17445 = !DILocation(line: 0, scope: !17399, inlinedAt: !17446)
!17446 = distinct !DILocation(line: 83, column: 2, scope: !17354)
!17447 = !DILocation(line: 0, scope: !17408, inlinedAt: !17448)
!17448 = distinct !DILocation(line: 215, column: 2, scope: !17399, inlinedAt: !17446)
!17449 = !DILocation(line: 95, column: 2, scope: !17408, inlinedAt: !17448)
!17450 = !DILocation(line: 85, column: 2, scope: !17354)
!17451 = !DILocation(line: 86, column: 1, scope: !17354)
!17452 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !3831, file: !3831, line: 564, type: !17267, scopeLine: 565, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !437)
!17453 = !DILocation(line: 573, column: 2, scope: !17454)
!17454 = distinct !DILexicalBlock(scope: !17452, file: !3831, line: 573, column: 2)
!17455 = !{i64 2154172394}
!17456 = !DILocation(line: 574, column: 9, scope: !17452)
!17457 = !DILocation(line: 574, column: 2, scope: !17452)
!17458 = distinct !DISubprogram(name: "z_waitq_head", scope: !14363, file: !14363, line: 52, type: !17459, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !17461)
!17459 = !DISubroutineType(types: !17460)
!17460 = !{!2778, !2795}
!17461 = !{!17462}
!17462 = !DILocalVariable(name: "w", arg: 1, scope: !17458, file: !14363, line: 52, type: !2795)
!17463 = !DILocation(line: 0, scope: !17458)
!17464 = !DILocation(line: 54, column: 52, scope: !17458)
!17465 = !DILocation(line: 54, column: 28, scope: !17458)
!17466 = !DILocation(line: 54, column: 9, scope: !17458)
!17467 = !DILocation(line: 54, column: 2, scope: !17458)
!17468 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !367, file: !367, line: 294, type: !17469, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !17472)
!17469 = !DISubroutineType(types: !17470)
!17470 = !{!2849, !17471}
!17471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2765, size: 32)
!17472 = !{!17473}
!17473 = !DILocalVariable(name: "list", arg: 1, scope: !17468, file: !367, line: 294, type: !17471)
!17474 = !DILocation(line: 0, scope: !17468)
!17475 = !DILocation(line: 296, column: 9, scope: !17468)
!17476 = !DILocation(line: 296, column: 49, scope: !17468)
!17477 = !DILocation(line: 296, column: 2, scope: !17468)
!17478 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !367, file: !367, line: 266, type: !17479, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !17481)
!17479 = !DISubroutineType(types: !17480)
!17480 = !{!422, !17471}
!17481 = !{!17482}
!17482 = !DILocalVariable(name: "list", arg: 1, scope: !17478, file: !367, line: 266, type: !17471)
!17483 = !DILocation(line: 0, scope: !17478)
!17484 = !DILocation(line: 268, column: 15, scope: !17478)
!17485 = !DILocation(line: 268, column: 20, scope: !17478)
!17486 = !DILocation(line: 268, column: 2, scope: !17478)
!17487 = distinct !DISubprogram(name: "k_timer_init", scope: !2851, file: !2851, line: 89, type: !17488, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !17492)
!17488 = !DISubroutineType(types: !17489)
!17489 = !{null, !2732, !17490, !17491}
!17490 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timer_expiry_t", file: !359, line: 1381, baseType: !2767)
!17491 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timer_stop_t", file: !359, line: 1397, baseType: !2767)
!17492 = !{!17493, !17494, !17495}
!17493 = !DILocalVariable(name: "timer", arg: 1, scope: !17487, file: !2851, line: 89, type: !2732)
!17494 = !DILocalVariable(name: "expiry_fn", arg: 2, scope: !17487, file: !2851, line: 90, type: !17490)
!17495 = !DILocalVariable(name: "stop_fn", arg: 3, scope: !17487, file: !2851, line: 91, type: !17491)
!17496 = !DILocation(line: 0, scope: !17487)
!17497 = !DILocation(line: 93, column: 9, scope: !17487)
!17498 = !DILocation(line: 93, column: 19, scope: !17487)
!17499 = !DILocation(line: 94, column: 9, scope: !17487)
!17500 = !DILocation(line: 94, column: 17, scope: !17487)
!17501 = !DILocation(line: 95, column: 9, scope: !17487)
!17502 = !DILocation(line: 95, column: 16, scope: !17487)
!17503 = !DILocation(line: 98, column: 24, scope: !17504)
!17504 = distinct !DILexicalBlock(scope: !17505, file: !2851, line: 97, column: 41)
!17505 = distinct !DILexicalBlock(scope: !17487, file: !2851, line: 97, column: 6)
!17506 = !DILocation(line: 98, column: 3, scope: !17504)
!17507 = !DILocation(line: 101, column: 25, scope: !17487)
!17508 = !DILocation(line: 101, column: 2, scope: !17487)
!17509 = !DILocation(line: 105, column: 9, scope: !17487)
!17510 = !DILocation(line: 105, column: 19, scope: !17487)
!17511 = !DILocation(line: 108, column: 1, scope: !17487)
!17512 = distinct !DISubprogram(name: "z_waitq_init", scope: !14363, file: !14363, line: 47, type: !17513, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !17515)
!17513 = !DISubroutineType(types: !17514)
!17514 = !{null, !2795}
!17515 = !{!17516}
!17516 = !DILocalVariable(name: "w", arg: 1, scope: !17512, file: !14363, line: 47, type: !2795)
!17517 = !DILocation(line: 0, scope: !17512)
!17518 = !DILocation(line: 49, column: 21, scope: !17512)
!17519 = !DILocation(line: 49, column: 2, scope: !17512)
!17520 = !DILocation(line: 50, column: 1, scope: !17512)
!17521 = distinct !DISubprogram(name: "z_init_timeout", scope: !14431, file: !14431, line: 25, type: !2756, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !17522)
!17522 = !{!17523}
!17523 = !DILocalVariable(name: "to", arg: 1, scope: !17521, file: !14431, line: 25, type: !2758)
!17524 = !DILocation(line: 0, scope: !17521)
!17525 = !DILocation(line: 27, column: 22, scope: !17521)
!17526 = !DILocation(line: 27, column: 2, scope: !17521)
!17527 = !DILocation(line: 28, column: 1, scope: !17521)
!17528 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !17529, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !17531)
!17529 = !DISubroutineType(types: !17530)
!17530 = !{null, !2849}
!17531 = !{!17532}
!17532 = !DILocalVariable(name: "node", arg: 1, scope: !17528, file: !367, line: 211, type: !2849)
!17533 = !DILocation(line: 0, scope: !17528)
!17534 = !DILocation(line: 213, column: 8, scope: !17528)
!17535 = !DILocation(line: 213, column: 13, scope: !17528)
!17536 = !DILocation(line: 214, column: 8, scope: !17528)
!17537 = !DILocation(line: 214, column: 13, scope: !17528)
!17538 = !DILocation(line: 215, column: 1, scope: !17528)
!17539 = distinct !DISubprogram(name: "sys_dlist_init", scope: !367, file: !367, line: 197, type: !17540, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !17542)
!17540 = !DISubroutineType(types: !17541)
!17541 = !{null, !17471}
!17542 = !{!17543}
!17543 = !DILocalVariable(name: "list", arg: 1, scope: !17539, file: !367, line: 197, type: !17471)
!17544 = !DILocation(line: 0, scope: !17539)
!17545 = !DILocation(line: 199, column: 8, scope: !17539)
!17546 = !DILocation(line: 199, column: 13, scope: !17539)
!17547 = !DILocation(line: 200, column: 8, scope: !17539)
!17548 = !DILocation(line: 200, column: 13, scope: !17539)
!17549 = !DILocation(line: 201, column: 1, scope: !17539)
!17550 = distinct !DISubprogram(name: "z_impl_k_timer_start", scope: !2851, file: !2851, line: 111, type: !17551, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !17553)
!17551 = !DISubroutineType(types: !17552)
!17552 = !{null, !2732, !2772, !2772}
!17553 = !{!17554, !17555, !17556}
!17554 = !DILocalVariable(name: "timer", arg: 1, scope: !17550, file: !2851, line: 111, type: !2732)
!17555 = !DILocalVariable(name: "duration", arg: 2, scope: !17550, file: !2851, line: 111, type: !2772)
!17556 = !DILocalVariable(name: "period", arg: 3, scope: !17550, file: !2851, line: 112, type: !2772)
!17557 = !DILocation(line: 0, scope: !17550)
!17558 = !DILocation(line: 116, column: 6, scope: !17559)
!17559 = distinct !DILexicalBlock(scope: !17550, file: !2851, line: 116, column: 6)
!17560 = !DILocation(line: 116, column: 6, scope: !17550)
!17561 = !DILocation(line: 133, column: 39, scope: !17562)
!17562 = distinct !DILexicalBlock(scope: !17550, file: !2851, line: 133, column: 6)
!17563 = !DILocation(line: 137, column: 33, scope: !17564)
!17564 = distinct !DILexicalBlock(scope: !17550, file: !2851, line: 137, column: 6)
!17565 = !DILocation(line: 137, column: 6, scope: !17550)
!17566 = !DILocation(line: 141, column: 32, scope: !17550)
!17567 = !DILocation(line: 141, column: 8, scope: !17550)
!17568 = !DILocation(line: 142, column: 18, scope: !17550)
!17569 = !DILocation(line: 143, column: 9, scope: !17550)
!17570 = !DILocation(line: 143, column: 16, scope: !17550)
!17571 = !DILocation(line: 145, column: 2, scope: !17550)
!17572 = !DILocation(line: 147, column: 1, scope: !17550)
!17573 = distinct !DISubprogram(name: "z_impl_k_timer_stop", scope: !2851, file: !2851, line: 160, type: !2768, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !17574)
!17574 = !{!17575, !17576, !17577}
!17575 = !DILocalVariable(name: "timer", arg: 1, scope: !17573, file: !2851, line: 160, type: !2732)
!17576 = !DILocalVariable(name: "inactive", scope: !17573, file: !2851, line: 164, type: !422)
!17577 = !DILocalVariable(name: "pending_thread", scope: !17578, file: !2851, line: 175, type: !2778)
!17578 = distinct !DILexicalBlock(scope: !17579, file: !2851, line: 174, column: 41)
!17579 = distinct !DILexicalBlock(scope: !17573, file: !2851, line: 174, column: 6)
!17580 = !DILocation(line: 0, scope: !17573)
!17581 = !DILocation(line: 164, column: 43, scope: !17573)
!17582 = !DILocation(line: 164, column: 19, scope: !17573)
!17583 = !DILocation(line: 164, column: 52, scope: !17573)
!17584 = !DILocation(line: 166, column: 6, scope: !17573)
!17585 = !DILocation(line: 170, column: 13, scope: !17586)
!17586 = distinct !DILexicalBlock(scope: !17573, file: !2851, line: 170, column: 6)
!17587 = !DILocation(line: 170, column: 21, scope: !17586)
!17588 = !DILocation(line: 170, column: 6, scope: !17573)
!17589 = !DILocation(line: 171, column: 3, scope: !17590)
!17590 = distinct !DILexicalBlock(scope: !17586, file: !2851, line: 170, column: 30)
!17591 = !DILocation(line: 172, column: 2, scope: !17590)
!17592 = !DILocation(line: 175, column: 66, scope: !17578)
!17593 = !DILocation(line: 175, column: 37, scope: !17578)
!17594 = !DILocation(line: 0, scope: !17578)
!17595 = !DILocation(line: 177, column: 22, scope: !17596)
!17596 = distinct !DILexicalBlock(scope: !17578, file: !2851, line: 177, column: 7)
!17597 = !DILocation(line: 177, column: 7, scope: !17578)
!17598 = !DILocation(line: 178, column: 4, scope: !17599)
!17599 = distinct !DILexicalBlock(scope: !17596, file: !2851, line: 177, column: 31)
!17600 = !DILocation(line: 179, column: 4, scope: !17599)
!17601 = !DILocation(line: 180, column: 3, scope: !17599)
!17602 = !DILocation(line: 182, column: 1, scope: !17573)
!17603 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14037, file: !14037, line: 73, type: !3435, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !437)
!17604 = !DILocation(line: 55, column: 2, scope: !17379, inlinedAt: !17605)
!17605 = distinct !DILocation(line: 75, column: 30, scope: !17603)
!17606 = !DILocation(line: 0, scope: !17379, inlinedAt: !17605)
!17607 = !DILocation(line: 75, column: 9, scope: !17603)
!17608 = !DILocation(line: 76, column: 1, scope: !17603)
!17609 = distinct !DISubprogram(name: "z_impl_k_timer_status_get", scope: !2851, file: !2851, line: 193, type: !17610, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !17612)
!17610 = !DISubroutineType(types: !17611)
!17611 = !{!113, !2732}
!17612 = !{!17613, !17614, !17615}
!17613 = !DILocalVariable(name: "timer", arg: 1, scope: !17609, file: !2851, line: 193, type: !2732)
!17614 = !DILocalVariable(name: "key", scope: !17609, file: !2851, line: 195, type: !17360)
!17615 = !DILocalVariable(name: "result", scope: !17609, file: !2851, line: 196, type: !113)
!17616 = !DILocation(line: 0, scope: !17609)
!17617 = !DILocation(line: 0, scope: !17370, inlinedAt: !17618)
!17618 = distinct !DILocation(line: 195, column: 25, scope: !17609)
!17619 = !DILocation(line: 55, column: 2, scope: !17379, inlinedAt: !17620)
!17620 = distinct !DILocation(line: 145, column: 10, scope: !17370, inlinedAt: !17618)
!17621 = !DILocation(line: 0, scope: !17379, inlinedAt: !17620)
!17622 = !DILocation(line: 196, column: 27, scope: !17609)
!17623 = !DILocation(line: 198, column: 16, scope: !17609)
!17624 = !DILocation(line: 0, scope: !17399, inlinedAt: !17625)
!17625 = distinct !DILocation(line: 199, column: 2, scope: !17609)
!17626 = !DILocation(line: 0, scope: !17408, inlinedAt: !17627)
!17627 = distinct !DILocation(line: 215, column: 2, scope: !17399, inlinedAt: !17625)
!17628 = !DILocation(line: 95, column: 2, scope: !17408, inlinedAt: !17627)
!17629 = !DILocation(line: 201, column: 2, scope: !17609)
!17630 = distinct !DISubprogram(name: "z_impl_k_timer_status_sync", scope: !2851, file: !2851, line: 213, type: !17610, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !17631)
!17631 = !{!17632, !17633, !17634}
!17632 = !DILocalVariable(name: "timer", arg: 1, scope: !17630, file: !2851, line: 213, type: !2732)
!17633 = !DILocalVariable(name: "key", scope: !17630, file: !2851, line: 241, type: !17360)
!17634 = !DILocalVariable(name: "result", scope: !17630, file: !2851, line: 242, type: !113)
!17635 = !DILocation(line: 0, scope: !17630)
!17636 = !DILocation(line: 0, scope: !17370, inlinedAt: !17637)
!17637 = distinct !DILocation(line: 241, column: 25, scope: !17630)
!17638 = !DILocation(line: 55, column: 2, scope: !17379, inlinedAt: !17639)
!17639 = distinct !DILocation(line: 145, column: 10, scope: !17370, inlinedAt: !17637)
!17640 = !DILocation(line: 0, scope: !17379, inlinedAt: !17639)
!17641 = !DILocation(line: 242, column: 27, scope: !17630)
!17642 = !DILocation(line: 244, column: 13, scope: !17643)
!17643 = distinct !DILexicalBlock(scope: !17630, file: !2851, line: 244, column: 6)
!17644 = !DILocation(line: 244, column: 6, scope: !17630)
!17645 = !DILocation(line: 245, column: 38, scope: !17646)
!17646 = distinct !DILexicalBlock(scope: !17647, file: !2851, line: 245, column: 7)
!17647 = distinct !DILexicalBlock(scope: !17643, file: !2851, line: 244, column: 20)
!17648 = !DILocation(line: 245, column: 8, scope: !17646)
!17649 = !DILocation(line: 245, column: 7, scope: !17647)
!17650 = !DILocation(line: 249, column: 42, scope: !17651)
!17651 = distinct !DILexicalBlock(scope: !17646, file: !2851, line: 245, column: 48)
!17652 = !DILocation(line: 249, column: 10, scope: !17651)
!17653 = !DILocation(line: 0, scope: !17370, inlinedAt: !17654)
!17654 = distinct !DILocation(line: 252, column: 10, scope: !17651)
!17655 = !DILocation(line: 55, column: 2, scope: !17379, inlinedAt: !17656)
!17656 = distinct !DILocation(line: 145, column: 10, scope: !17370, inlinedAt: !17654)
!17657 = !DILocation(line: 0, scope: !17379, inlinedAt: !17656)
!17658 = !DILocation(line: 253, column: 20, scope: !17651)
!17659 = !DILocation(line: 254, column: 3, scope: !17651)
!17660 = !DILocation(line: 261, column: 16, scope: !17630)
!17661 = !DILocation(line: 0, scope: !17399, inlinedAt: !17662)
!17662 = distinct !DILocation(line: 262, column: 2, scope: !17630)
!17663 = !DILocation(line: 0, scope: !17408, inlinedAt: !17664)
!17664 = distinct !DILocation(line: 215, column: 2, scope: !17399, inlinedAt: !17662)
!17665 = !DILocation(line: 95, column: 2, scope: !17408, inlinedAt: !17664)
!17666 = !DILocation(line: 269, column: 2, scope: !17630)
!17667 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14431, file: !14431, line: 35, type: !17668, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !17672)
!17668 = !DISubroutineType(types: !17669)
!17669 = !{!422, !17670}
!17670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17671, size: 32)
!17671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2736)
!17672 = !{!17673}
!17673 = !DILocalVariable(name: "to", arg: 1, scope: !17667, file: !14431, line: 35, type: !17670)
!17674 = !DILocation(line: 0, scope: !17667)
!17675 = !DILocation(line: 37, column: 35, scope: !17667)
!17676 = !DILocation(line: 37, column: 10, scope: !17667)
!17677 = !DILocation(line: 37, column: 9, scope: !17667)
!17678 = !DILocation(line: 37, column: 2, scope: !17667)
!17679 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !367, file: !367, line: 225, type: !17680, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !17684)
!17680 = !DISubroutineType(types: !17681)
!17681 = !{!422, !17682}
!17682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17683, size: 32)
!17683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2739)
!17684 = !{!17685}
!17685 = !DILocalVariable(name: "node", arg: 1, scope: !17679, file: !367, line: 225, type: !17682)
!17686 = !DILocation(line: 0, scope: !17679)
!17687 = !DILocation(line: 227, column: 15, scope: !17679)
!17688 = !DILocation(line: 227, column: 20, scope: !17679)
!17689 = !DILocation(line: 227, column: 2, scope: !17679)
!17690 = distinct !DISubprogram(name: "boot_banner", scope: !17691, file: !17691, line: 26, type: !3435, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3421, retainedNodes: !437)
!17691 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17692 = !DILocation(line: 34, column: 2, scope: !17690)
!17693 = !DILocation(line: 36, column: 1, scope: !17690)
